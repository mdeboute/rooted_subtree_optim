Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 21 (-4) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 4.48385e-07 - average 1.1497e-08, 2 fixed columns
Coin0506I Presolve 30 (-9) rows, 19 (-2) columns and 90 (-22) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 111.69163
Clp0000I Optimal - objective value 111.69163
Coin0511I After Postsolve, objective 111.69163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 111.69163
Clp0000I Optimal - objective value 111.69163
Clp0000I Optimal - objective value 111.69163
Coin0511I After Postsolve, objective 111.69163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 111.6916281 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 21 columns (20 integer (20 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.097%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.1169
Cbc0038I Pass   1: suminf.    0.98158 (3) obj. -50.8968 iterations 12
Cbc0038I Pass   2: suminf.    0.17182 (1) obj. -45.4466 iterations 2
Cbc0038I Solution found of -29.7233
Cbc0038I Relaxing continuous gives -29.7233
Cbc0038I Rounding solution of -31.9106 is better than previous of -29.7233

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 21 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -31.9106 to -48.9581 (0.01 seconds)
Cbc0038I Round again with cutoff of -55.1795
Cbc0038I Pass   3: suminf.    1.04554 (4) obj. -55.1795 iterations 1
Cbc0038I Pass   4: suminf.    0.37833 (6) obj. -55.1795 iterations 7
Cbc0038I Pass   5: suminf.    1.57345 (5) obj. -55.1795 iterations 11
Cbc0038I Pass   6: suminf.    0.91524 (3) obj. -55.1795 iterations 3
Cbc0038I Pass   7: suminf.    0.63654 (3) obj. -55.1795 iterations 2
Cbc0038I Pass   8: suminf.    0.63182 (2) obj. -55.1795 iterations 1
Cbc0038I Pass   9: suminf.    0.56239 (2) obj. -55.1795 iterations 1
Cbc0038I Pass  10: suminf.    0.28867 (1) obj. -55.1795 iterations 5
Cbc0038I Pass  11: suminf.    0.54171 (3) obj. -55.1795 iterations 4
Cbc0038I Pass  12: suminf.    0.28867 (1) obj. -55.1795 iterations 4
Cbc0038I Pass  13: suminf.    1.26789 (5) obj. -55.1795 iterations 5
Cbc0038I Pass  14: suminf.    0.54743 (2) obj. -55.1795 iterations 2
Cbc0038I Pass  15: suminf.    0.53884 (3) obj. -55.1795 iterations 4
Cbc0038I Pass  16: suminf.    0.33716 (1) obj. -55.1795 iterations 3
Cbc0038I Pass  17: suminf.    0.72363 (5) obj. -55.1795 iterations 4
Cbc0038I Pass  18: suminf.    0.82461 (2) obj. -55.1795 iterations 4
Cbc0038I Pass  19: suminf.    0.61116 (2) obj. -55.1795 iterations 1
Cbc0038I Pass  20: suminf.    0.87660 (3) obj. -55.1795 iterations 3
Cbc0038I Pass  21: suminf.    1.29556 (4) obj. -55.1795 iterations 4
Cbc0038I Pass  22: suminf.    1.29556 (4) obj. -55.1795 iterations 0
Cbc0038I Pass  23: suminf.    0.82550 (2) obj. -55.1795 iterations 3
Cbc0038I Pass  24: suminf.    0.75198 (5) obj. -55.1795 iterations 9
Cbc0038I Pass  25: suminf.    0.49415 (3) obj. -55.1795 iterations 3
Cbc0038I Pass  26: suminf.    1.00743 (6) obj. -55.1795 iterations 6
Cbc0038I Pass  27: suminf.    0.48482 (5) obj. -55.1795 iterations 1
Cbc0038I Pass  28: suminf.    0.69391 (2) obj. -55.1795 iterations 4
Cbc0038I Pass  29: suminf.    0.76427 (2) obj. -55.1795 iterations 1
Cbc0038I Pass  30: suminf.    0.91998 (4) obj. -55.1795 iterations 2
Cbc0038I Pass  31: suminf.    0.45352 (3) obj. -55.1795 iterations 1
Cbc0038I Pass  32: suminf.    0.85752 (6) obj. -55.1795 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 21 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -48.9581 - took 0.05 seconds
Cbc0012I Integer solution of -48.95806 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 21 columns, reduced to 21 rows 15 columns
Cbc0031I 11 added rows had average density of 17
Cbc0013I At root node, 11 cuts changed objective from -111.17139 to -59.456951 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1090 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 573 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 150 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -48.95805999999999, took 2051 iterations and 8 nodes (0.15 seconds)
Cbc0032I Strong branching done 60 times (440 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 41 (-7) rows, 42 (-4) columns and 326 (-62) elements
Clp1000I sum of infeasibilities 0 - average 0, 36 fixed columns
Coin0506I Presolve 6 (-35) rows, 6 (-36) columns and 20 (-306) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 68.457306
Clp0000I Optimal - objective value 68.457306
Coin0511I After Postsolve, objective 68.457306, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15901803 - largest nonzero change 0 ( 0%) - largest zero change 2.7058637e-05
Clp0000I Optimal - objective value 204.42913
Clp0000I Optimal - objective value 204.42913
Clp0000I Optimal - objective value 204.42913
Coin0511I After Postsolve, objective 204.42913, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 204.4291295 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 40 columns (40 integer (40 of which binary)) and 302 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.994%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.65706
Cbc0038I Pass   1: suminf.    1.04200 (4) obj. -14.7239 iterations 24
Cbc0038I Pass   2: suminf.    1.04200 (4) obj. -14.7239 iterations 0
Cbc0038I Solution found of 4.72242
Cbc0038I Rounding solution of -20.7133 is better than previous of 4.72242

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 40 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28.446
Cbc0038I Pass   3: suminf.    1.98591 (6) obj. -28.446 iterations 1
Cbc0038I Pass   4: suminf.    1.40311 (5) obj. -28.446 iterations 1
Cbc0038I Pass   5: suminf.    0.57076 (2) obj. -28.446 iterations 6
Cbc0038I Pass   6: suminf.    0.91385 (2) obj. -28.446 iterations 1
Cbc0038I Pass   7: suminf.    2.14563 (8) obj. -28.446 iterations 9
Cbc0038I Pass   8: suminf.    0.80522 (2) obj. -28.446 iterations 9
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -29.181 iterations 2
Cbc0038I Pass  10: suminf.    0.35268 (1) obj. -28.446 iterations 1
Cbc0038I Pass  11: suminf.    2.08596 (6) obj. -28.446 iterations 6
Cbc0038I Pass  12: suminf.    1.02627 (3) obj. -28.446 iterations 3
Cbc0038I Pass  13: suminf.    0.33333 (1) obj. -34.181 iterations 3
Cbc0038I Pass  14: suminf.    0.48425 (1) obj. -28.446 iterations 1
Cbc0038I Pass  15: suminf.    1.80453 (6) obj. -28.446 iterations 8
Cbc0038I Pass  16: suminf.    1.14791 (3) obj. -28.446 iterations 3
Cbc0038I Pass  17: suminf.    0.95067 (3) obj. -40.7357 iterations 2
Cbc0038I Pass  18: suminf.    0.55608 (2) obj. -28.446 iterations 3
Cbc0038I Pass  19: suminf.    0.55608 (2) obj. -28.446 iterations 0
Cbc0038I Pass  20: suminf.    0.91551 (2) obj. -28.446 iterations 1
Cbc0038I Pass  21: suminf.    2.40373 (6) obj. -28.446 iterations 9
Cbc0038I Pass  22: suminf.    0.90402 (2) obj. -28.446 iterations 4
Cbc0038I Pass  23: suminf.    0.41431 (2) obj. -28.446 iterations 2
Cbc0038I Pass  24: suminf.    0.78547 (2) obj. -28.446 iterations 1
Cbc0038I Pass  25: suminf.    0.41431 (2) obj. -28.446 iterations 1
Cbc0038I Pass  26: suminf.    1.57491 (5) obj. -34.1047 iterations 10
Cbc0038I Pass  27: suminf.    0.49680 (2) obj. -28.446 iterations 5
Cbc0038I Pass  28: suminf.    0.36842 (1) obj. -37.7808 iterations 2
Cbc0038I Pass  29: suminf.    0.08555 (1) obj. -28.446 iterations 1
Cbc0038I Pass  30: suminf.    3.12603 (9) obj. -28.446 iterations 15
Cbc0038I Pass  31: suminf.    3.12603 (9) obj. -28.446 iterations 0
Cbc0038I Pass  32: suminf.    2.23615 (6) obj. -28.446 iterations 8
Cbc0038I Rounding solution of -37.8102 is better than previous of -20.7133

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 40 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -37.8102 to -48.0602 (0.03 seconds)
Cbc0038I Round again with cutoff of -58.0561
Cbc0038I Pass  32: suminf.    2.83834 (8) obj. -58.0561 iterations 2
Cbc0038I Pass  33: suminf.    2.32919 (6) obj. -58.0561 iterations 9
Cbc0038I Pass  34: suminf.    2.33100 (7) obj. -58.0561 iterations 2
Cbc0038I Pass  35: suminf.    2.33100 (7) obj. -58.0561 iterations 1
Cbc0038I Pass  36: suminf.    2.32919 (6) obj. -58.0561 iterations 2
Cbc0038I Pass  37: suminf.    4.08969 (10) obj. -58.0561 iterations 8
Cbc0038I Pass  38: suminf.    4.08969 (10) obj. -58.0561 iterations 1
Cbc0038I Pass  39: suminf.    2.26531 (6) obj. -58.0561 iterations 5
Cbc0038I Pass  40: suminf.    1.83315 (5) obj. -58.0561 iterations 4
Cbc0038I Pass  41: suminf.    1.76160 (5) obj. -58.0561 iterations 1
Cbc0038I Pass  42: suminf.    2.02245 (6) obj. -58.0561 iterations 5
Cbc0038I Pass  43: suminf.    2.02245 (6) obj. -58.0561 iterations 1
Cbc0038I Pass  44: suminf.    2.01286 (6) obj. -58.0561 iterations 3
Cbc0038I Pass  45: suminf.    1.83315 (5) obj. -58.0561 iterations 3
Cbc0038I Pass  46: suminf.    1.76160 (5) obj. -58.0561 iterations 1
Cbc0038I Pass  47: suminf.    2.02245 (6) obj. -58.0561 iterations 4
Cbc0038I Pass  48: suminf.    2.02245 (6) obj. -58.0561 iterations 0
Cbc0038I Pass  49: suminf.    2.01286 (6) obj. -58.0561 iterations 3
Cbc0038I Pass  50: suminf.    1.83315 (5) obj. -58.0561 iterations 3
Cbc0038I Pass  51: suminf.    1.76160 (5) obj. -58.0561 iterations 1
Cbc0038I Pass  52: suminf.    2.02245 (6) obj. -58.0561 iterations 4
Cbc0038I Pass  53: suminf.    2.02245 (6) obj. -58.0561 iterations 0
Cbc0038I Pass  54: suminf.    2.01286 (6) obj. -58.0561 iterations 3
Cbc0038I Pass  55: suminf.    1.83315 (5) obj. -58.0561 iterations 3
Cbc0038I Pass  56: suminf.    1.76160 (5) obj. -58.0561 iterations 1
Cbc0038I Pass  57: suminf.    2.02245 (6) obj. -58.0561 iterations 5
Cbc0038I Pass  58: suminf.    2.02245 (6) obj. -58.0561 iterations 1
Cbc0038I Pass  59: suminf.    2.01286 (6) obj. -58.0561 iterations 3
Cbc0038I Pass  60: suminf.    1.83315 (5) obj. -58.0561 iterations 3
Cbc0038I Pass  61: suminf.    1.76160 (5) obj. -58.0561 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -48.0602 - took 0.02 seconds
Cbc0012I Integer solution of -48.06024 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 40 columns, reduced to 12 rows 13 columns
Cbc0031I 11 added rows had average density of 14.272727
Cbc0013I At root node, 11 cuts changed objective from -98.038964 to -50.54412 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 247 row cuts average 2.9 elements, 16 column cuts (16 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 652 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 86 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 128 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.819 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.06024 best solution, best possible -50.544105 (1.60 seconds)
Cbc0016I Integer solution of -48.95806 found by strong branching after 1171 iterations and 1 nodes (1.60 seconds)
Cbc0001I Search completed - best objective -48.95805999999999, took 1180 iterations and 2 nodes (1.60 seconds)
Cbc0032I Strong branching done 30 times (276 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 21 (-4) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 4.48385e-07 - average 1.1497e-08, 2 fixed columns
Coin0506I Presolve 30 (-9) rows, 19 (-2) columns and 90 (-22) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 111.69163
Clp0000I Optimal - objective value 111.69163
Coin0511I After Postsolve, objective 111.69163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 111.69163
Clp0000I Optimal - objective value 111.69163
Clp0000I Optimal - objective value 111.69163
Coin0511I After Postsolve, objective 111.69163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 111.6916281 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 21 columns (20 integer (20 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.097%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 4.1169
Cbc0038I Pass   1: suminf.    0.98158 (3) obj. -50.8968 iterations 12
Cbc0038I Pass   2: suminf.    0.17182 (1) obj. -45.4466 iterations 2
Cbc0038I Solution found of -29.7233
Cbc0038I Relaxing continuous gives -29.7233
Cbc0038I Rounding solution of -31.9106 is better than previous of -29.7233

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 21 columns, reduced to 21 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -31.9106 to -48.9581 (0.02 seconds)
Cbc0038I Round again with cutoff of -55.1795
Cbc0038I Pass   3: suminf.    1.04554 (4) obj. -55.1795 iterations 1
Cbc0038I Pass   4: suminf.    0.37833 (6) obj. -55.1795 iterations 7
Cbc0038I Pass   5: suminf.    1.57345 (5) obj. -55.1795 iterations 11
Cbc0038I Pass   6: suminf.    0.91524 (3) obj. -55.1795 iterations 3
Cbc0038I Pass   7: suminf.    0.63654 (3) obj. -55.1795 iterations 2
Cbc0038I Pass   8: suminf.    0.63182 (2) obj. -55.1795 iterations 1
Cbc0038I Pass   9: suminf.    0.56239 (2) obj. -55.1795 iterations 1
Cbc0038I Pass  10: suminf.    0.28867 (1) obj. -55.1795 iterations 5
Cbc0038I Pass  11: suminf.    0.54171 (3) obj. -55.1795 iterations 4
Cbc0038I Pass  12: suminf.    0.28867 (1) obj. -55.1795 iterations 4
Cbc0038I Pass  13: suminf.    1.26789 (5) obj. -55.1795 iterations 5
Cbc0038I Pass  14: suminf.    0.54743 (2) obj. -55.1795 iterations 2
Cbc0038I Pass  15: suminf.    0.53884 (3) obj. -55.1795 iterations 4
Cbc0038I Pass  16: suminf.    0.33716 (1) obj. -55.1795 iterations 3
Cbc0038I Pass  17: suminf.    0.72363 (5) obj. -55.1795 iterations 4
Cbc0038I Pass  18: suminf.    0.82461 (2) obj. -55.1795 iterations 4
Cbc0038I Pass  19: suminf.    0.61116 (2) obj. -55.1795 iterations 1
Cbc0038I Pass  20: suminf.    0.87660 (3) obj. -55.1795 iterations 3
Cbc0038I Pass  21: suminf.    1.29556 (4) obj. -55.1795 iterations 4
Cbc0038I Pass  22: suminf.    1.29556 (4) obj. -55.1795 iterations 0
Cbc0038I Pass  23: suminf.    0.82550 (2) obj. -55.1795 iterations 3
Cbc0038I Pass  24: suminf.    0.75198 (5) obj. -55.1795 iterations 9
Cbc0038I Pass  25: suminf.    0.49415 (3) obj. -55.1795 iterations 3
Cbc0038I Pass  26: suminf.    1.00743 (6) obj. -55.1795 iterations 6
Cbc0038I Pass  27: suminf.    0.48482 (5) obj. -55.1795 iterations 1
Cbc0038I Pass  28: suminf.    0.69391 (2) obj. -55.1795 iterations 4
Cbc0038I Pass  29: suminf.    0.76427 (2) obj. -55.1795 iterations 1
Cbc0038I Pass  30: suminf.    0.91998 (4) obj. -55.1795 iterations 2
Cbc0038I Pass  31: suminf.    0.45352 (3) obj. -55.1795 iterations 1
Cbc0038I Pass  32: suminf.    0.85752 (6) obj. -55.1795 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 21 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.9581 - took 0.04 seconds
Cbc0012I Integer solution of -48.95806 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 21 columns, reduced to 21 rows 15 columns
Cbc0031I 11 added rows had average density of 17
Cbc0013I At root node, 11 cuts changed objective from -111.17139 to -59.456951 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1090 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 573 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 150 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -48.95805999999999, took 2051 iterations and 8 nodes (0.15 seconds)
Cbc0032I Strong branching done 60 times (440 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-10) rows, 40 (-7) columns and 294 (-95) elements
Clp1000I sum of infeasibilities 3.46869e-07 - average 8.89409e-09, 27 fixed columns
Coin0506I Presolve 11 (-28) rows, 13 (-27) columns and 42 (-252) elements
Clp0029I End of values pass after 13 iterations
Clp0014I Perturbing problem by 0.001% of 2.9183986 - largest nonzero change 2.7119217e-05 ( 0.00094823801%) - largest zero change 1.124072e-05
Clp0000I Optimal - objective value 46.167026
Clp0000I Optimal - objective value 46.167026
Coin0511I After Postsolve, objective 46.167026, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6754391 - largest nonzero change 2.1740247e-05 ( 0.0012035115%) - largest zero change 1.8234569e-05
Clp0000I Optimal - objective value 117.71551
Clp0000I Optimal - objective value 117.71551
Clp0000I Optimal - objective value 117.71551
Coin0511I After Postsolve, objective 117.71551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.7155089 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 40 columns (40 integer (40 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.994%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 9.03222
Cbc0038I Pass   1: suminf.    1.04200 (4) obj. -14.7239 iterations 25
Cbc0038I Pass   2: suminf.    1.04200 (4) obj. -14.7239 iterations 0
Cbc0038I Solution found of 4.72242
Cbc0038I Rounding solution of -20.7133 is better than previous of 4.72242

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 40 columns, reduced to 6 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -28.6335
Cbc0038I Pass   3: suminf.    1.99881 (6) obj. -28.6335 iterations 1
Cbc0038I Pass   4: suminf.    1.40804 (5) obj. -28.6335 iterations 1
Cbc0038I Pass   5: suminf.    0.57644 (2) obj. -28.6335 iterations 7
Cbc0038I Pass   6: suminf.    0.90891 (2) obj. -28.6335 iterations 1
Cbc0038I Pass   7: suminf.    2.40379 (8) obj. -28.6335 iterations 9
Cbc0038I Pass   8: suminf.    0.81016 (2) obj. -28.6335 iterations 10
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -29.181 iterations 2
Cbc0038I Pass  10: suminf.    0.34774 (1) obj. -28.6335 iterations 1
Cbc0038I Pass  11: suminf.    2.09090 (6) obj. -28.6335 iterations 6
Cbc0038I Pass  12: suminf.    1.03121 (3) obj. -28.6335 iterations 3
Cbc0038I Pass  13: suminf.    0.33333 (1) obj. -34.181 iterations 3
Cbc0038I Pass  14: suminf.    0.47932 (1) obj. -28.6335 iterations 1
Cbc0038I Pass  15: suminf.    2.00182 (6) obj. -28.6335 iterations 9
Cbc0038I Pass  16: suminf.    1.62445 (4) obj. -28.6335 iterations 2
Cbc0038I Pass  17: suminf.    1.40522 (4) obj. -43.4629 iterations 2
Cbc0038I Pass  18: suminf.    0.56177 (2) obj. -28.6335 iterations 4
Cbc0038I Pass  19: suminf.    0.56177 (2) obj. -28.6335 iterations 0
Cbc0038I Pass  20: suminf.    0.92044 (2) obj. -28.6335 iterations 1
Cbc0038I Pass  21: suminf.    2.40867 (6) obj. -28.6335 iterations 9
Cbc0038I Pass  22: suminf.    0.90896 (2) obj. -28.6335 iterations 4
Cbc0038I Pass  23: suminf.    0.42000 (2) obj. -28.6335 iterations 2
Cbc0038I Pass  24: suminf.    0.79040 (2) obj. -28.6335 iterations 1
Cbc0038I Pass  25: suminf.    0.42000 (2) obj. -28.6335 iterations 1
Cbc0038I Pass  26: suminf.    1.57491 (5) obj. -34.1047 iterations 10
Cbc0038I Pass  27: suminf.    0.50249 (2) obj. -28.6335 iterations 5
Cbc0038I Pass  28: suminf.    0.36842 (1) obj. -37.7808 iterations 2
Cbc0038I Pass  29: suminf.    0.09123 (1) obj. -28.6335 iterations 1
Cbc0038I Pass  30: suminf.    3.16260 (10) obj. -28.6335 iterations 16
Cbc0038I Pass  31: suminf.    3.16260 (10) obj. -28.6335 iterations 0
Cbc0038I Pass  32: suminf.    1.44016 (6) obj. -28.6335 iterations 10
Cbc0038I Rounding solution of -37.8102 is better than previous of -20.7133

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 40 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -37.8102 to -48.0602 (0.02 seconds)
Cbc0038I Round again with cutoff of -58.4312
Cbc0038I Pass  32: suminf.    2.85810 (8) obj. -58.4312 iterations 2
Cbc0038I Pass  33: suminf.    2.36671 (6) obj. -58.4312 iterations 9
Cbc0038I Pass  34: suminf.    2.37291 (7) obj. -58.4312 iterations 2
Cbc0038I Pass  35: suminf.    2.37291 (7) obj. -58.4312 iterations 1
Cbc0038I Pass  36: suminf.    2.36671 (6) obj. -58.4312 iterations 2
Cbc0038I Pass  37: suminf.    3.84293 (10) obj. -58.4312 iterations 9
Cbc0038I Pass  38: suminf.    3.03337 (9) obj. -58.4312 iterations 4
Cbc0038I Pass  39: suminf.    2.05997 (6) obj. -58.4312 iterations 6
Cbc0038I Pass  40: suminf.    2.05997 (6) obj. -58.4312 iterations 0
Cbc0038I Pass  41: suminf.    2.03240 (7) obj. -58.4312 iterations 2
Cbc0038I Pass  42: suminf.    1.80737 (5) obj. -58.4312 iterations 3
Cbc0038I Pass  43: suminf.    1.78068 (5) obj. -58.4312 iterations 1
Cbc0038I Pass  44: suminf.    2.05997 (6) obj. -58.4312 iterations 4
Cbc0038I Pass  45: suminf.    2.05997 (6) obj. -58.4312 iterations 0
Cbc0038I Pass  46: suminf.    2.03240 (7) obj. -58.4312 iterations 2
Cbc0038I Pass  47: suminf.    1.80737 (5) obj. -58.4312 iterations 3
Cbc0038I Pass  48: suminf.    1.78068 (5) obj. -58.4312 iterations 1
Cbc0038I Pass  49: suminf.    2.05997 (6) obj. -58.4312 iterations 5
Cbc0038I Pass  50: suminf.    2.05997 (6) obj. -58.4312 iterations 1
Cbc0038I Pass  51: suminf.    2.03240 (7) obj. -58.4312 iterations 2
Cbc0038I Pass  52: suminf.    1.80737 (5) obj. -58.4312 iterations 3
Cbc0038I Pass  53: suminf.    1.78068 (5) obj. -58.4312 iterations 1
Cbc0038I Pass  54: suminf.    2.05997 (6) obj. -58.4312 iterations 5
Cbc0038I Pass  55: suminf.    2.05997 (6) obj. -58.4312 iterations 1
Cbc0038I Pass  56: suminf.    2.03240 (7) obj. -58.4312 iterations 2
Cbc0038I Pass  57: suminf.    1.80737 (5) obj. -58.4312 iterations 3
Cbc0038I Pass  58: suminf.    1.78068 (5) obj. -58.4312 iterations 1
Cbc0038I Pass  59: suminf.    2.05997 (6) obj. -58.4312 iterations 4
Cbc0038I Pass  60: suminf.    2.05997 (6) obj. -58.4312 iterations 0
Cbc0038I Pass  61: suminf.    2.03240 (7) obj. -58.4312 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -48.0602 - took 0.02 seconds
Cbc0012I Integer solution of -48.06024 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 40 columns, reduced to 12 rows 13 columns
Cbc0031I 10 added rows had average density of 16.4
Cbc0013I At root node, 10 cuts changed objective from -99.914809 to -51.674253 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 292 row cuts average 3.0 elements, 16 column cuts (16 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 351 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 58 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 15.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.770 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.06024 best solution, best possible -51.674253 (1.52 seconds)
Cbc0004I Integer solution of -48.95806 found after 1029 iterations and 1 nodes (1.59 seconds)
Cbc0001I Search completed - best objective -48.95805999999999, took 1093 iterations and 2 nodes (1.63 seconds)
Cbc0032I Strong branching done 34 times (288 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.63

