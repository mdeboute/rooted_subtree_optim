Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 30 (-5) columns and 164 (-31) elements
Clp1000I sum of infeasibilities 2.87842e-05 - average 5.14003e-07, 0 fixed columns
Coin0506I Presolve 56 (0) rows, 30 (0) columns and 164 (0) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 88.155773
Clp0000I Optimal - objective value 88.155773
Coin0511I After Postsolve, objective 88.155773, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.155773
Clp0000I Optimal - objective value 88.155773
Clp0000I Optimal - objective value 88.155773
Coin0511I After Postsolve, objective 88.155773, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.15577312 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.08212
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.79075 iterations 17
Cbc0038I Solution found of 2.79075
Cbc0038I Relaxing continuous gives 2.79075
Cbc0038I Rounding solution of -13.4733 is better than previous of 2.79075

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -13.4733 to -35.0672 (0.03 seconds)
Cbc0038I Round again with cutoff of -40.3267
Cbc0038I Pass   2: suminf.    1.88158 (5) obj. -40.3267 iterations 7
Cbc0038I Pass   3: suminf.    0.37202 (3) obj. -40.3267 iterations 5
Cbc0038I Pass   4: suminf.    0.97078 (3) obj. -40.3267 iterations 3
Cbc0038I Pass   5: suminf.    0.68983 (2) obj. -40.3267 iterations 1
Cbc0038I Pass   6: suminf.    0.68983 (2) obj. -40.3267 iterations 0
Cbc0038I Pass   7: suminf.    0.63799 (2) obj. -40.3267 iterations 2
Cbc0038I Pass   8: suminf.    1.23176 (4) obj. -40.3267 iterations 9
Cbc0038I Pass   9: suminf.    1.09791 (3) obj. -40.3267 iterations 1
Cbc0038I Pass  10: suminf.    0.59707 (3) obj. -40.3267 iterations 7
Cbc0038I Pass  11: suminf.    0.56949 (4) obj. -40.3267 iterations 2
Cbc0038I Pass  12: suminf.    1.29303 (5) obj. -40.3267 iterations 7
Cbc0038I Pass  13: suminf.    0.90567 (2) obj. -40.3267 iterations 3
Cbc0038I Pass  14: suminf.    0.90567 (2) obj. -40.3267 iterations 0
Cbc0038I Pass  15: suminf.    0.82465 (2) obj. -40.3267 iterations 2
Cbc0038I Pass  16: suminf.    1.39260 (4) obj. -40.3267 iterations 5
Cbc0038I Pass  17: suminf.    0.52892 (2) obj. -40.3267 iterations 6
Cbc0038I Pass  18: suminf.    0.47097 (3) obj. -40.3267 iterations 2
Cbc0038I Pass  19: suminf.    1.14833 (4) obj. -40.3267 iterations 6
Cbc0038I Pass  20: suminf.    0.91635 (3) obj. -40.3267 iterations 3
Cbc0038I Pass  21: suminf.    0.91635 (3) obj. -40.3267 iterations 0
Cbc0038I Pass  22: suminf.    1.14833 (4) obj. -40.3267 iterations 6
Cbc0038I Pass  23: suminf.    2.63507 (7) obj. -40.3267 iterations 15
Cbc0038I Pass  24: suminf.    0.50948 (3) obj. -40.3267 iterations 8
Cbc0038I Pass  25: suminf.    0.49698 (3) obj. -40.3267 iterations 1
Cbc0038I Pass  26: suminf.    0.80899 (2) obj. -40.3267 iterations 3
Cbc0038I Pass  27: suminf.    0.51804 (2) obj. -40.3267 iterations 2
Cbc0038I Pass  28: suminf.    1.61295 (5) obj. -40.3267 iterations 6
Cbc0038I Pass  29: suminf.    1.43522 (5) obj. -40.3267 iterations 2
Cbc0038I Pass  30: suminf.    1.42982 (5) obj. -40.3267 iterations 1
Cbc0038I Pass  31: suminf.    1.30516 (5) obj. -40.3267 iterations 4
Cbc0038I Rounding solution of -38.6959 is better than previous of -35.0672

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -38.6959 to -39.287 (0.05 seconds)
Cbc0038I Round again with cutoff of -49.7937
Cbc0038I Pass  31: suminf.    1.67787 (5) obj. -49.7937 iterations 0
Cbc0038I Pass  32: suminf.    0.69537 (2) obj. -49.7937 iterations 7
Cbc0038I Pass  33: suminf.    0.69537 (2) obj. -49.7937 iterations 0
Cbc0038I Pass  34: suminf.    0.64278 (2) obj. -49.7937 iterations 2
Cbc0038I Pass  35: suminf.    2.31706 (9) obj. -49.7937 iterations 14
Cbc0038I Pass  36: suminf.    0.87400 (2) obj. -49.7937 iterations 7
Cbc0038I Pass  37: suminf.    0.82038 (2) obj. -49.7937 iterations 1
Cbc0038I Pass  38: suminf.    0.99129 (4) obj. -49.7937 iterations 6
Cbc0038I Pass  39: suminf.    1.27482 (4) obj. -49.7937 iterations 3
Cbc0038I Pass  40: suminf.    1.19244 (4) obj. -49.7937 iterations 2
Cbc0038I Pass  41: suminf.    0.90299 (5) obj. -49.7937 iterations 3
Cbc0038I Pass  42: suminf.    0.79336 (3) obj. -49.7937 iterations 7
Cbc0038I Pass  43: suminf.    0.79336 (3) obj. -49.7937 iterations 1
Cbc0038I Pass  44: suminf.    1.10680 (3) obj. -49.7937 iterations 3
Cbc0038I Pass  45: suminf.    0.91083 (3) obj. -49.7937 iterations 1
Cbc0038I Pass  46: suminf.    0.91083 (3) obj. -49.7937 iterations 0
Cbc0038I Pass  47: suminf.    1.11126 (3) obj. -49.7937 iterations 4
Cbc0038I Pass  48: suminf.    0.97764 (6) obj. -49.7937 iterations 18
Cbc0038I Pass  49: suminf.    0.85954 (6) obj. -49.7937 iterations 1
Cbc0038I Pass  50: suminf.    0.84162 (2) obj. -49.7937 iterations 6
Cbc0038I Pass  51: suminf.    0.55817 (3) obj. -49.7937 iterations 4
Cbc0038I Pass  52: suminf.    0.81247 (2) obj. -49.7937 iterations 4
Cbc0038I Pass  53: suminf.    0.67760 (2) obj. -49.7937 iterations 3
Cbc0038I Pass  54: suminf.    3.29785 (12) obj. -49.7937 iterations 11
Cbc0038I Pass  55: suminf.    0.81147 (4) obj. -49.7937 iterations 13
Cbc0038I Pass  56: suminf.    1.22999 (3) obj. -49.7937 iterations 4
Cbc0038I Pass  57: suminf.    1.04310 (4) obj. -49.7937 iterations 5
Cbc0038I Pass  58: suminf.    1.04310 (4) obj. -49.7937 iterations 1
Cbc0038I Pass  59: suminf.    1.17640 (3) obj. -49.7937 iterations 4
Cbc0038I Pass  60: suminf.    0.67760 (2) obj. -49.7937 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 54 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -39.287 - took 0.05 seconds
Cbc0012I Integer solution of -39.28703 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 39 rows 23 columns
Cbc0031I 15 added rows had average density of 19.6
Cbc0013I At root node, 15 cuts changed objective from -87.661525 to -61.543238 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2170 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 839 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 162 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.28703, took 3004 iterations and 12 nodes (0.28 seconds)
Cbc0032I Strong branching done 130 times (1562 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-14) rows, 56 (-10) columns and 534 (-189) elements
Clp1000I sum of infeasibilities 0.00105234 - average 1.94878e-05, 8 fixed columns
Coin0506I Presolve 45 (-9) rows, 46 (-10) columns and 398 (-136) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.4735367 - largest nonzero change 2.7778559e-05 ( 0.0022879966%) - largest zero change 2.3552029e-05
Clp0000I Optimal - objective value 110.23999
Clp0000I Optimal - objective value 110.23999
Coin0511I After Postsolve, objective 110.23999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8438145 - largest nonzero change 2.4760706e-05 ( 0.0015708815%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 110.23999
Clp0000I Optimal - objective value 110.23999
Clp0000I Optimal - objective value 110.23999
Coin0511I After Postsolve, objective 110.23999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 110.2399899 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 56 columns (56 integer (56 of which binary)) and 540 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.728%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.77918
Cbc0038I Pass   1: suminf.    1.73266 (13) obj. -61.2065 iterations 14
Cbc0038I Pass   2: suminf.    1.73266 (13) obj. -61.2065 iterations 1
Cbc0038I Solution found of 6.60607
Cbc0038I Rounding solution of -23.1885 is better than previous of 6.60607

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -23.1885 to -28.6739 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.009
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.73266 (13) obj. -61.2065 iterations 0
Cbc0038I Pass   4: suminf.    1.73266 (13) obj. -61.2065 iterations 1
Cbc0038I Pass   5: suminf.    0.59033 (6) obj. -35.009 iterations 19
Cbc0038I Pass   6: suminf.    0.44783 (2) obj. -35.009 iterations 2
Cbc0038I Pass   7: suminf.    0.19063 (2) obj. -38.0954 iterations 3
Cbc0038I Pass   8: suminf.    1.18498 (8) obj. -35.009 iterations 13
Cbc0038I Pass   9: suminf.    1.18498 (8) obj. -35.009 iterations 6
Cbc0038I Pass  10: suminf.    1.85362 (6) obj. -35.009 iterations 11
Cbc0038I Pass  11: suminf.    1.16268 (6) obj. -35.009 iterations 4
Cbc0038I Pass  12: suminf.    1.16078 (4) obj. -35.009 iterations 6
Cbc0038I Pass  13: suminf.    1.16078 (4) obj. -35.009 iterations 0
Cbc0038I Pass  14: suminf.    1.34491 (4) obj. -35.009 iterations 3
Cbc0038I Pass  15: suminf.    0.87966 (4) obj. -35.009 iterations 5
Cbc0038I Pass  16: suminf.    1.54971 (4) obj. -35.009 iterations 3
Cbc0038I Pass  17: suminf.    1.79071 (6) obj. -35.009 iterations 13
Cbc0038I Pass  18: suminf.    1.79071 (6) obj. -35.009 iterations 2
Cbc0038I Pass  19: suminf.    0.92565 (3) obj. -35.009 iterations 7
Cbc0038I Pass  20: suminf.    0.90804 (3) obj. -35.2203 iterations 2
Cbc0038I Pass  21: suminf.    0.92725 (3) obj. -35.009 iterations 4
Cbc0038I Pass  22: suminf.    3.80614 (16) obj. -35.009 iterations 16
Cbc0038I Pass  23: suminf.    2.68227 (8) obj. -35.009 iterations 5
Cbc0038I Pass  24: suminf.    1.84579 (5) obj. -35.009 iterations 7
Cbc0038I Pass  25: suminf.    1.33380 (4) obj. -35.009 iterations 3
Cbc0038I Pass  26: suminf.    1.66446 (4) obj. -35.009 iterations 2
Cbc0038I Pass  27: suminf.    1.66446 (4) obj. -35.009 iterations 0
Cbc0038I Pass  28: suminf.    1.27416 (4) obj. -35.009 iterations 4
Cbc0038I Pass  29: suminf.    1.27416 (4) obj. -35.009 iterations 0
Cbc0038I Pass  30: suminf.    1.66446 (4) obj. -35.009 iterations 1
Cbc0038I Pass  31: suminf.    5.10002 (17) obj. -35.009 iterations 27
Cbc0038I Pass  32: suminf.    3.96095 (16) obj. -35.009 iterations 2
Cbc0038I Rounding solution of -30.9343 is better than previous of -28.6739

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 36 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -30.9343 to -39.287 (0.07 seconds)
Cbc0038I Round again with cutoff of -49.8344
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.73266 (13) obj. -61.2065 iterations 0
Cbc0038I Pass  33: suminf.    1.73266 (13) obj. -61.2065 iterations 1
Cbc0038I Pass  34: suminf.    1.16472 (8) obj. -49.8344 iterations 13
Cbc0038I Pass  35: suminf.    1.10560 (8) obj. -56.7985 iterations 3
Cbc0038I Pass  36: suminf.    0.58205 (4) obj. -49.8344 iterations 11
Cbc0038I Pass  37: suminf.    0.57861 (4) obj. -49.8722 iterations 3
Cbc0038I Pass  38: suminf.    3.63108 (18) obj. -49.8344 iterations 22
Cbc0038I Pass  39: suminf.    2.33083 (12) obj. -49.8344 iterations 6
Cbc0038I Pass  40: suminf.    2.33083 (12) obj. -49.8344 iterations 1
Cbc0038I Pass  41: suminf.    1.49358 (5) obj. -49.8344 iterations 10
Cbc0038I Pass  42: suminf.    1.45914 (5) obj. -50.1099 iterations 2
Cbc0038I Pass  43: suminf.    1.49358 (5) obj. -49.8344 iterations 2
Cbc0038I Pass  44: suminf.    2.71492 (9) obj. -49.8344 iterations 9
Cbc0038I Pass  45: suminf.    2.59509 (9) obj. -49.8344 iterations 3
Cbc0038I Pass  46: suminf.    1.54718 (5) obj. -49.8344 iterations 4
Cbc0038I Pass  47: suminf.    1.53384 (5) obj. -49.8344 iterations 3
Cbc0038I Pass  48: suminf.    3.31472 (11) obj. -49.8344 iterations 12
Cbc0038I Pass  49: suminf.    2.63825 (9) obj. -49.8344 iterations 5
Cbc0038I Pass  50: suminf.    2.37207 (10) obj. -49.8344 iterations 6
Cbc0038I Pass  51: suminf.    1.60713 (7) obj. -49.8344 iterations 10
Cbc0038I Pass  52: suminf.    1.60713 (7) obj. -49.8344 iterations 1
Cbc0038I Pass  53: suminf.    2.06087 (6) obj. -49.8344 iterations 4
Cbc0038I Pass  54: suminf.    1.87488 (6) obj. -49.8344 iterations 3
Cbc0038I Pass  55: suminf.    1.98002 (6) obj. -49.8344 iterations 4
Cbc0038I Pass  56: suminf.    1.98002 (6) obj. -49.8344 iterations 0
Cbc0038I Pass  57: suminf.    2.32596 (6) obj. -49.8344 iterations 1
Cbc0038I Pass  58: suminf.    1.97412 (6) obj. -49.8344 iterations 3
Cbc0038I Pass  59: suminf.    2.47192 (12) obj. -49.8344 iterations 10
Cbc0038I Pass  60: suminf.    1.79000 (10) obj. -49.8344 iterations 7
Cbc0038I Pass  61: suminf.    2.04333 (6) obj. -49.8344 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 35 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -39.287 - took 0.07 seconds
Cbc0012I Integer solution of -39.28703 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 54 rows 56 columns, reduced to 17 rows 22 columns
Cbc0031I 27 added rows had average density of 14
Cbc0013I At root node, 27 cuts changed objective from -92.023519 to -43.518362 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1849 row cuts average 3.3 elements, 10 column cuts (10 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 427 row cuts average 38.7 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 31 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 26 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 116 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.756 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.28703 best solution, best possible -43.518362 (1.65 seconds)
Cbc0001I Search completed - best objective -39.28703, took 1703 iterations and 4 nodes (1.83 seconds)
Cbc0032I Strong branching done 84 times (1050 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 17 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.83

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 30 (-5) columns and 164 (-31) elements
Clp1000I sum of infeasibilities 2.87842e-05 - average 5.14003e-07, 0 fixed columns
Coin0506I Presolve 56 (0) rows, 30 (0) columns and 164 (0) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 88.155773
Clp0000I Optimal - objective value 88.155773
Coin0511I After Postsolve, objective 88.155773, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.155773
Clp0000I Optimal - objective value 88.155773
Clp0000I Optimal - objective value 88.155773
Coin0511I After Postsolve, objective 88.155773, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.15577312 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.333%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 6.08212
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 2.79075 iterations 17
Cbc0038I Solution found of 2.79075
Cbc0038I Relaxing continuous gives 2.79075
Cbc0038I Rounding solution of -13.4733 is better than previous of 2.79075

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 35 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -13.4733 to -35.0672 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.3267
Cbc0038I Pass   2: suminf.    1.88158 (5) obj. -40.3267 iterations 7
Cbc0038I Pass   3: suminf.    0.37202 (3) obj. -40.3267 iterations 5
Cbc0038I Pass   4: suminf.    0.97078 (3) obj. -40.3267 iterations 3
Cbc0038I Pass   5: suminf.    0.68983 (2) obj. -40.3267 iterations 1
Cbc0038I Pass   6: suminf.    0.68983 (2) obj. -40.3267 iterations 0
Cbc0038I Pass   7: suminf.    0.63799 (2) obj. -40.3267 iterations 2
Cbc0038I Pass   8: suminf.    1.23176 (4) obj. -40.3267 iterations 9
Cbc0038I Pass   9: suminf.    1.09791 (3) obj. -40.3267 iterations 1
Cbc0038I Pass  10: suminf.    0.59707 (3) obj. -40.3267 iterations 7
Cbc0038I Pass  11: suminf.    0.56949 (4) obj. -40.3267 iterations 2
Cbc0038I Pass  12: suminf.    1.29303 (5) obj. -40.3267 iterations 7
Cbc0038I Pass  13: suminf.    0.90567 (2) obj. -40.3267 iterations 3
Cbc0038I Pass  14: suminf.    0.90567 (2) obj. -40.3267 iterations 0
Cbc0038I Pass  15: suminf.    0.82465 (2) obj. -40.3267 iterations 2
Cbc0038I Pass  16: suminf.    1.39260 (4) obj. -40.3267 iterations 5
Cbc0038I Pass  17: suminf.    0.52892 (2) obj. -40.3267 iterations 6
Cbc0038I Pass  18: suminf.    0.47097 (3) obj. -40.3267 iterations 2
Cbc0038I Pass  19: suminf.    1.14833 (4) obj. -40.3267 iterations 6
Cbc0038I Pass  20: suminf.    0.91635 (3) obj. -40.3267 iterations 3
Cbc0038I Pass  21: suminf.    0.91635 (3) obj. -40.3267 iterations 0
Cbc0038I Pass  22: suminf.    1.14833 (4) obj. -40.3267 iterations 6
Cbc0038I Pass  23: suminf.    2.63507 (7) obj. -40.3267 iterations 15
Cbc0038I Pass  24: suminf.    0.50948 (3) obj. -40.3267 iterations 8
Cbc0038I Pass  25: suminf.    0.49698 (3) obj. -40.3267 iterations 1
Cbc0038I Pass  26: suminf.    0.80899 (2) obj. -40.3267 iterations 3
Cbc0038I Pass  27: suminf.    0.51804 (2) obj. -40.3267 iterations 2
Cbc0038I Pass  28: suminf.    1.61295 (5) obj. -40.3267 iterations 6
Cbc0038I Pass  29: suminf.    1.43522 (5) obj. -40.3267 iterations 2
Cbc0038I Pass  30: suminf.    1.42982 (5) obj. -40.3267 iterations 1
Cbc0038I Pass  31: suminf.    1.30516 (5) obj. -40.3267 iterations 4
Cbc0038I Rounding solution of -38.6959 is better than previous of -35.0672

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 44 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -38.6959 to -39.287 (0.04 seconds)
Cbc0038I Round again with cutoff of -49.7937
Cbc0038I Pass  31: suminf.    1.67787 (5) obj. -49.7937 iterations 0
Cbc0038I Pass  32: suminf.    0.69537 (2) obj. -49.7937 iterations 7
Cbc0038I Pass  33: suminf.    0.69537 (2) obj. -49.7937 iterations 0
Cbc0038I Pass  34: suminf.    0.64278 (2) obj. -49.7937 iterations 2
Cbc0038I Pass  35: suminf.    2.31706 (9) obj. -49.7937 iterations 14
Cbc0038I Pass  36: suminf.    0.87400 (2) obj. -49.7937 iterations 7
Cbc0038I Pass  37: suminf.    0.82038 (2) obj. -49.7937 iterations 1
Cbc0038I Pass  38: suminf.    0.99129 (4) obj. -49.7937 iterations 6
Cbc0038I Pass  39: suminf.    1.27482 (4) obj. -49.7937 iterations 3
Cbc0038I Pass  40: suminf.    1.19244 (4) obj. -49.7937 iterations 2
Cbc0038I Pass  41: suminf.    0.90299 (5) obj. -49.7937 iterations 3
Cbc0038I Pass  42: suminf.    0.79336 (3) obj. -49.7937 iterations 7
Cbc0038I Pass  43: suminf.    0.79336 (3) obj. -49.7937 iterations 1
Cbc0038I Pass  44: suminf.    1.10680 (3) obj. -49.7937 iterations 3
Cbc0038I Pass  45: suminf.    0.91083 (3) obj. -49.7937 iterations 1
Cbc0038I Pass  46: suminf.    0.91083 (3) obj. -49.7937 iterations 0
Cbc0038I Pass  47: suminf.    1.11126 (3) obj. -49.7937 iterations 4
Cbc0038I Pass  48: suminf.    0.97764 (6) obj. -49.7937 iterations 18
Cbc0038I Pass  49: suminf.    0.85954 (6) obj. -49.7937 iterations 1
Cbc0038I Pass  50: suminf.    0.84162 (2) obj. -49.7937 iterations 6
Cbc0038I Pass  51: suminf.    0.55817 (3) obj. -49.7937 iterations 4
Cbc0038I Pass  52: suminf.    0.81247 (2) obj. -49.7937 iterations 4
Cbc0038I Pass  53: suminf.    0.67760 (2) obj. -49.7937 iterations 3
Cbc0038I Pass  54: suminf.    3.29785 (12) obj. -49.7937 iterations 11
Cbc0038I Pass  55: suminf.    0.81147 (4) obj. -49.7937 iterations 13
Cbc0038I Pass  56: suminf.    1.22999 (3) obj. -49.7937 iterations 4
Cbc0038I Pass  57: suminf.    1.04310 (4) obj. -49.7937 iterations 5
Cbc0038I Pass  58: suminf.    1.04310 (4) obj. -49.7937 iterations 1
Cbc0038I Pass  59: suminf.    1.17640 (3) obj. -49.7937 iterations 4
Cbc0038I Pass  60: suminf.    0.67760 (2) obj. -49.7937 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 54 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.287 - took 0.06 seconds
Cbc0012I Integer solution of -39.28703 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 39 rows 23 columns
Cbc0031I 15 added rows had average density of 19.6
Cbc0013I At root node, 15 cuts changed objective from -87.661525 to -61.543238 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2170 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 839 row cuts average 29.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 162 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 93 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -39.28703, took 3004 iterations and 12 nodes (0.27 seconds)
Cbc0032I Strong branching done 130 times (1562 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 4, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 56 (-11) columns and 534 (-190) elements
Clp1000I sum of infeasibilities 0.00105234 - average 1.94878e-05, 8 fixed columns
Coin0506I Presolve 45 (-9) rows, 46 (-10) columns and 398 (-136) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.4735367 - largest nonzero change 2.7778559e-05 ( 0.0022879966%) - largest zero change 2.3552029e-05
Clp0000I Optimal - objective value 110.23999
Clp0000I Optimal - objective value 110.23999
Coin0511I After Postsolve, objective 110.23999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8438145 - largest nonzero change 2.4760706e-05 ( 0.0015708815%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 110.23999
Clp0000I Optimal - objective value 110.23999
Clp0000I Optimal - objective value 110.23999
Coin0511I After Postsolve, objective 110.23999, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 110.2399899 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 56 columns (56 integer (56 of which binary)) and 540 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.728%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.77918
Cbc0038I Pass   1: suminf.    1.73266 (13) obj. -61.2065 iterations 14
Cbc0038I Pass   2: suminf.    1.73266 (13) obj. -61.2065 iterations 1
Cbc0038I Solution found of 6.60607
Cbc0038I Rounding solution of -23.1885 is better than previous of 6.60607

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -23.1885 to -28.6739 (0.01 seconds)
Cbc0038I Round again with cutoff of -35.009
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.73266 (13) obj. -61.2065 iterations 0
Cbc0038I Pass   4: suminf.    1.73266 (13) obj. -61.2065 iterations 1
Cbc0038I Pass   5: suminf.    0.59033 (6) obj. -35.009 iterations 19
Cbc0038I Pass   6: suminf.    0.44783 (2) obj. -35.009 iterations 2
Cbc0038I Pass   7: suminf.    0.19063 (2) obj. -38.0954 iterations 3
Cbc0038I Pass   8: suminf.    1.18498 (8) obj. -35.009 iterations 13
Cbc0038I Pass   9: suminf.    1.18498 (8) obj. -35.009 iterations 6
Cbc0038I Pass  10: suminf.    1.85362 (6) obj. -35.009 iterations 11
Cbc0038I Pass  11: suminf.    1.16268 (6) obj. -35.009 iterations 4
Cbc0038I Pass  12: suminf.    1.16078 (4) obj. -35.009 iterations 6
Cbc0038I Pass  13: suminf.    1.16078 (4) obj. -35.009 iterations 0
Cbc0038I Pass  14: suminf.    1.34491 (4) obj. -35.009 iterations 3
Cbc0038I Pass  15: suminf.    0.87966 (4) obj. -35.009 iterations 5
Cbc0038I Pass  16: suminf.    1.54971 (4) obj. -35.009 iterations 3
Cbc0038I Pass  17: suminf.    1.79071 (6) obj. -35.009 iterations 13
Cbc0038I Pass  18: suminf.    1.79071 (6) obj. -35.009 iterations 2
Cbc0038I Pass  19: suminf.    0.92565 (3) obj. -35.009 iterations 7
Cbc0038I Pass  20: suminf.    0.90804 (3) obj. -35.2203 iterations 2
Cbc0038I Pass  21: suminf.    0.92725 (3) obj. -35.009 iterations 4
Cbc0038I Pass  22: suminf.    3.80614 (16) obj. -35.009 iterations 16
Cbc0038I Pass  23: suminf.    2.68227 (8) obj. -35.009 iterations 5
Cbc0038I Pass  24: suminf.    1.84579 (5) obj. -35.009 iterations 7
Cbc0038I Pass  25: suminf.    1.33380 (4) obj. -35.009 iterations 3
Cbc0038I Pass  26: suminf.    1.66446 (4) obj. -35.009 iterations 2
Cbc0038I Pass  27: suminf.    1.66446 (4) obj. -35.009 iterations 0
Cbc0038I Pass  28: suminf.    1.27416 (4) obj. -35.009 iterations 4
Cbc0038I Pass  29: suminf.    1.27416 (4) obj. -35.009 iterations 0
Cbc0038I Pass  30: suminf.    1.66446 (4) obj. -35.009 iterations 1
Cbc0038I Pass  31: suminf.    5.10002 (17) obj. -35.009 iterations 27
Cbc0038I Pass  32: suminf.    3.96095 (16) obj. -35.009 iterations 2
Cbc0038I Rounding solution of -30.9343 is better than previous of -28.6739

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 36 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -30.9343 to -39.287 (0.06 seconds)
Cbc0038I Round again with cutoff of -49.8344
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.73266 (13) obj. -61.2065 iterations 0
Cbc0038I Pass  33: suminf.    1.73266 (13) obj. -61.2065 iterations 1
Cbc0038I Pass  34: suminf.    1.16472 (8) obj. -49.8344 iterations 13
Cbc0038I Pass  35: suminf.    1.10560 (8) obj. -56.7985 iterations 3
Cbc0038I Pass  36: suminf.    0.58205 (4) obj. -49.8344 iterations 11
Cbc0038I Pass  37: suminf.    0.57861 (4) obj. -49.8722 iterations 3
Cbc0038I Pass  38: suminf.    3.63108 (18) obj. -49.8344 iterations 22
Cbc0038I Pass  39: suminf.    2.33083 (12) obj. -49.8344 iterations 6
Cbc0038I Pass  40: suminf.    2.33083 (12) obj. -49.8344 iterations 1
Cbc0038I Pass  41: suminf.    1.49358 (5) obj. -49.8344 iterations 10
Cbc0038I Pass  42: suminf.    1.45914 (5) obj. -50.1099 iterations 2
Cbc0038I Pass  43: suminf.    1.49358 (5) obj. -49.8344 iterations 2
Cbc0038I Pass  44: suminf.    2.71492 (9) obj. -49.8344 iterations 9
Cbc0038I Pass  45: suminf.    2.59509 (9) obj. -49.8344 iterations 3
Cbc0038I Pass  46: suminf.    1.54718 (5) obj. -49.8344 iterations 4
Cbc0038I Pass  47: suminf.    1.53384 (5) obj. -49.8344 iterations 3
Cbc0038I Pass  48: suminf.    3.31472 (11) obj. -49.8344 iterations 12
Cbc0038I Pass  49: suminf.    2.63825 (9) obj. -49.8344 iterations 5
Cbc0038I Pass  50: suminf.    2.37207 (10) obj. -49.8344 iterations 6
Cbc0038I Pass  51: suminf.    1.60713 (7) obj. -49.8344 iterations 10
Cbc0038I Pass  52: suminf.    1.60713 (7) obj. -49.8344 iterations 1
Cbc0038I Pass  53: suminf.    2.06087 (6) obj. -49.8344 iterations 4
Cbc0038I Pass  54: suminf.    1.87488 (6) obj. -49.8344 iterations 3
Cbc0038I Pass  55: suminf.    1.98002 (6) obj. -49.8344 iterations 4
Cbc0038I Pass  56: suminf.    1.98002 (6) obj. -49.8344 iterations 0
Cbc0038I Pass  57: suminf.    2.32596 (6) obj. -49.8344 iterations 1
Cbc0038I Pass  58: suminf.    1.97412 (6) obj. -49.8344 iterations 3
Cbc0038I Pass  59: suminf.    2.47192 (12) obj. -49.8344 iterations 10
Cbc0038I Pass  60: suminf.    1.79000 (10) obj. -49.8344 iterations 7
Cbc0038I Pass  61: suminf.    2.04333 (6) obj. -49.8344 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 56 columns, reduced to 35 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -39.287 - took 0.07 seconds
Cbc0012I Integer solution of -39.28703 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 54 rows 56 columns, reduced to 17 rows 22 columns
Cbc0031I 27 added rows had average density of 14
Cbc0013I At root node, 27 cuts changed objective from -92.023519 to -43.518362 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1849 row cuts average 3.3 elements, 10 column cuts (10 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 427 row cuts average 38.7 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 31 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 26 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 121 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 116 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.726 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.28703 best solution, best possible -43.518362 (1.55 seconds)
Cbc0001I Search completed - best objective -39.28703, took 1703 iterations and 4 nodes (1.70 seconds)
Cbc0032I Strong branching done 84 times (1050 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 17 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.71

