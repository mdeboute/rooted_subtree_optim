Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 74 (-4) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 2.10903e-05 - average 1.66066e-07, 14 fixed columns
Coin0506I Presolve 100 (-27) rows, 59 (-15) columns and 310 (-84) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Coin0511I After Postsolve, objective 39.746072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25118752 - largest nonzero change 0 ( 0%) - largest zero change 2.736223e-05
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Coin0511I After Postsolve, objective 39.746072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.74607176 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 74 columns (73 integer (73 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.21952
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.43222 iterations 44
Cbc0038I Solution found of 9.43222
Cbc0038I Relaxing continuous gives 9.43222
Cbc0038I Rounding solution of -6.16942 is better than previous of 9.43222

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -6.16942 to -10.7698 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.6675
Cbc0038I Pass   2: suminf.    1.94221 (16) obj. -13.6675 iterations 21
Cbc0038I Pass   3: suminf.    1.79328 (33) obj. -13.6675 iterations 14
Cbc0038I Pass   4: suminf.    2.09010 (7) obj. -13.6675 iterations 46
Cbc0038I Pass   5: suminf.    1.45317 (6) obj. -13.6675 iterations 3
Cbc0038I Pass   6: suminf.    1.40597 (4) obj. -13.6675 iterations 10
Cbc0038I Pass   7: suminf.    1.40597 (4) obj. -13.6675 iterations 0
Cbc0038I Pass   8: suminf.    0.96541 (4) obj. -13.6675 iterations 7
Cbc0038I Pass   9: suminf.    1.24012 (3) obj. -13.6675 iterations 4
Cbc0038I Pass  10: suminf.    1.21118 (4) obj. -13.6675 iterations 1
Cbc0038I Pass  11: suminf.    2.11054 (6) obj. -13.6675 iterations 6
Cbc0038I Pass  12: suminf.    1.62826 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  13: suminf.    2.21714 (10) obj. -13.6675 iterations 7
Cbc0038I Pass  14: suminf.    1.81843 (5) obj. -13.6675 iterations 10
Cbc0038I Pass  15: suminf.    1.81843 (5) obj. -13.6675 iterations 0
Cbc0038I Pass  16: suminf.    2.28015 (7) obj. -13.6675 iterations 3
Cbc0038I Pass  17: suminf.    1.95547 (6) obj. -13.6675 iterations 1
Cbc0038I Pass  18: suminf.    1.95547 (6) obj. -13.6675 iterations 0
Cbc0038I Pass  19: suminf.    1.80643 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  20: suminf.    1.80643 (5) obj. -13.6675 iterations 0
Cbc0038I Pass  21: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  22: suminf.    1.76609 (6) obj. -13.6675 iterations 2
Cbc0038I Pass  23: suminf.    2.06471 (6) obj. -13.6675 iterations 5
Cbc0038I Pass  24: suminf.    1.86123 (5) obj. -13.6675 iterations 2
Cbc0038I Pass  25: suminf.    1.80643 (5) obj. -13.6675 iterations 1
Cbc0038I Pass  26: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  27: suminf.    1.76609 (6) obj. -13.6675 iterations 2
Cbc0038I Pass  28: suminf.    2.06471 (6) obj. -13.6675 iterations 5
Cbc0038I Pass  29: suminf.    1.86123 (5) obj. -13.6675 iterations 2
Cbc0038I Pass  30: suminf.    1.80643 (5) obj. -13.6675 iterations 1
Cbc0038I Pass  31: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.7698 to -11.6678 (0.09 seconds)
Cbc0038I Round again with cutoff of -18.8832
Cbc0038I Pass  31: suminf.    2.98875 (16) obj. -18.8832 iterations 0
Cbc0038I Pass  32: suminf.    2.75958 (33) obj. -18.8832 iterations 14
Cbc0038I Pass  33: suminf.    1.20475 (6) obj. -18.8832 iterations 30
Cbc0038I Pass  34: suminf.    1.20475 (6) obj. -18.8832 iterations 0
Cbc0038I Pass  35: suminf.    2.60507 (10) obj. -18.8832 iterations 21
Cbc0038I Pass  36: suminf.    3.14898 (8) obj. -18.8832 iterations 8
Cbc0038I Pass  37: suminf.    2.19341 (9) obj. -18.8832 iterations 3
Cbc0038I Pass  38: suminf.    1.85673 (8) obj. -18.8832 iterations 2
Cbc0038I Pass  39: suminf.    2.53293 (7) obj. -18.8832 iterations 9
Cbc0038I Pass  40: suminf.    1.96752 (6) obj. -18.8832 iterations 4
Cbc0038I Pass  41: suminf.    1.92050 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  42: suminf.    2.41244 (7) obj. -18.8832 iterations 3
Cbc0038I Pass  43: suminf.    2.11734 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  44: suminf.    1.76118 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  45: suminf.    1.75288 (7) obj. -18.8832 iterations 1
Cbc0038I Pass  46: suminf.    2.29524 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  47: suminf.    2.29134 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  48: suminf.    2.43449 (7) obj. -18.8832 iterations 6
Cbc0038I Pass  49: suminf.    2.21549 (7) obj. -18.8832 iterations 2
Cbc0038I Pass  50: suminf.    2.54933 (7) obj. -18.8832 iterations 8
Cbc0038I Pass  51: suminf.    2.15587 (7) obj. -18.8832 iterations 4
Cbc0038I Pass  52: suminf.    2.01531 (5) obj. -18.8832 iterations 2
Cbc0038I Pass  53: suminf.    2.21891 (7) obj. -18.8832 iterations 5
Cbc0038I Pass  54: suminf.    2.21773 (7) obj. -18.8832 iterations 1
Cbc0038I Pass  55: suminf.    2.76417 (8) obj. -18.8832 iterations 7
Cbc0038I Pass  56: suminf.    0.97399 (9) obj. -18.8832 iterations 10
Cbc0038I Pass  57: suminf.    0.85503 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  58: suminf.    1.08879 (4) obj. -18.8832 iterations 7
Cbc0038I Pass  59: suminf.    1.00797 (4) obj. -18.8832 iterations 1
Cbc0038I Pass  60: suminf.    1.08422 (3) obj. -18.8832 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -11.6678 - took 0.10 seconds
Cbc0012I Integer solution of -11.66784 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 61 rows 37 columns
Cbc0031I 16 added rows had average density of 60.6875
Cbc0013I At root node, 16 cuts changed objective from -39.746072 to -31.408937 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7286 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1478 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -11.66784 best solution, best possible -31.408937 (0.68 seconds)
Cbc0012I Integer solution of -12.92256 found by rounding after 5662 iterations and 16 nodes (0.73 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 23 rows 17 columns
Cbc0004I Integer solution of -13.10359 found after 6489 iterations and 52 nodes (0.86 seconds)
Cbc0001I Search completed - best objective -13.10359, took 6860 iterations and 60 nodes (0.87 seconds)
Cbc0032I Strong branching done 620 times (10913 iterations), fathomed 3 nodes and fixed 21 variables
Cbc0035I Maximum depth 20, 158 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.88

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 116 (-36) columns and 1848 (-1455) elements
Clp1000I sum of infeasibilities 1.25187e-07 - average 1.29059e-09, 30 fixed columns
Coin0506I Presolve 72 (-25) rows, 86 (-30) columns and 1075 (-773) elements
Clp0006I 0  Obj 50.414258 Dual inf 5.6087094 (86)
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.0939412 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 61.061036
Clp0000I Optimal - objective value 61.061036
Coin0511I After Postsolve, objective 61.061036, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.061036
Clp0000I Optimal - objective value 61.061036
Clp0000I Optimal - objective value 61.061036
Clp0000I Optimal - objective value 61.061036
Coin0511I After Postsolve, objective 61.061036, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.06103564 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 116 columns (116 integer (116 of which binary)) and 1852 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.393%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 3.76176
Cbc0038I Pass   1: suminf.    1.37301 (30) obj. -23.2704 iterations 12
Cbc0038I Pass   2: suminf.    1.37301 (30) obj. -23.2704 iterations 1
Cbc0038I Pass   3: suminf.    0.07329 (3) obj. 5.23834 iterations 27
Cbc0038I Solution found of 12.0673
Cbc0038I Rounding solution of 5.66005 is better than previous of 12.0673

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from 5.66005 to -5.2252 (0.03 seconds)
Cbc0038I Round again with cutoff of -9.48859
Cbc0038I Pass   4: suminf.    1.37301 (30) obj. -23.2704 iterations 0
Cbc0038I Pass   5: suminf.    1.37301 (30) obj. -23.2704 iterations 1
Cbc0038I Pass   6: suminf.    0.68037 (7) obj. -9.48859 iterations 27
Cbc0038I Pass   7: suminf.    0.38452 (5) obj. -11.6889 iterations 2
Cbc0038I Pass   8: suminf.    0.64310 (5) obj. -9.48859 iterations 8
Cbc0038I Pass   9: suminf.    0.03333 (1) obj. -11.8277 iterations 6
Cbc0038I Pass  10: suminf.    0.03333 (1) obj. -11.8277 iterations 0
Cbc0038I Pass  11: suminf.    0.59804 (2) obj. -9.48859 iterations 6
Cbc0038I Pass  12: suminf.    0.64877 (3) obj. -12.4005 iterations 3
Cbc0038I Pass  13: suminf.    0.25394 (3) obj. -9.48859 iterations 2
Cbc0038I Pass  14: suminf.    0.44223 (3) obj. -9.48859 iterations 2
Cbc0038I Pass  15: suminf.    1.82082 (13) obj. -9.48859 iterations 19
Cbc0038I Pass  16: suminf.    1.37510 (12) obj. -9.48859 iterations 4
Cbc0038I Pass  17: suminf.    0.72781 (4) obj. -9.48859 iterations 18
Cbc0038I Pass  18: suminf.    0.03333 (1) obj. -10.8277 iterations 5
Cbc0038I Pass  19: suminf.    0.68777 (2) obj. -9.48859 iterations 7
Cbc0038I Pass  20: suminf.    1.61422 (15) obj. -9.48859 iterations 29
Cbc0038I Pass  21: suminf.    1.50948 (13) obj. -9.48859 iterations 3
Cbc0038I Pass  22: suminf.    1.32924 (4) obj. -9.48859 iterations 19
Cbc0038I Pass  23: suminf.    0.73165 (3) obj. -9.48859 iterations 4
Cbc0038I Pass  24: suminf.    0.57989 (4) obj. -9.48859 iterations 2
Cbc0038I Pass  25: suminf.    1.32924 (4) obj. -9.48859 iterations 7
Cbc0038I Pass  26: suminf.    2.25197 (16) obj. -9.48859 iterations 22
Cbc0038I Pass  27: suminf.    1.09328 (13) obj. -14.1756 iterations 8
Cbc0038I Pass  28: suminf.    1.41815 (5) obj. -9.48859 iterations 25
Cbc0038I Pass  29: suminf.    1.39775 (5) obj. -9.48859 iterations 2
Cbc0038I Pass  30: suminf.    1.12745 (5) obj. -9.48859 iterations 3
Cbc0038I Pass  31: suminf.    1.04515 (5) obj. -9.48859 iterations 1
Cbc0038I Pass  32: suminf.    1.39775 (5) obj. -9.48859 iterations 7
Cbc0038I Pass  33: suminf.    0.99481 (9) obj. -9.48859 iterations 17
Cbc0038I Rounding solution of -6.43802 is better than previous of -5.2252

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 37 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -6.43802 to -7.62961 (0.17 seconds)
Cbc0038I Round again with cutoff of -17.1625
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.37301 (30) obj. -23.2704 iterations 0
Cbc0038I Pass  34: suminf.    1.37301 (30) obj. -23.2704 iterations 1
Cbc0038I Pass  35: suminf.    0.98199 (12) obj. -17.1625 iterations 25
Cbc0038I Pass  36: suminf.    0.98199 (12) obj. -17.1625 iterations 0
Cbc0038I Pass  37: suminf.    0.25505 (3) obj. -17.1625 iterations 14
Cbc0038I Pass  38: suminf.    0.22892 (3) obj. -17.2409 iterations 2
Cbc0038I Pass  39: suminf.    0.57116 (4) obj. -17.1625 iterations 9
Cbc0038I Pass  40: suminf.    2.17340 (11) obj. -17.1625 iterations 17
Cbc0038I Pass  41: suminf.    1.90572 (10) obj. -17.5378 iterations 2
Cbc0038I Pass  42: suminf.    1.87953 (8) obj. -17.1625 iterations 11
Cbc0038I Pass  43: suminf.    1.59669 (9) obj. -17.1625 iterations 3
Cbc0038I Pass  44: suminf.    1.59164 (7) obj. -17.1625 iterations 9
Cbc0038I Pass  45: suminf.    1.56300 (7) obj. -17.1625 iterations 3
Cbc0038I Pass  46: suminf.    1.12275 (6) obj. -17.1625 iterations 4
Cbc0038I Pass  47: suminf.    1.12275 (6) obj. -17.1625 iterations 2
Cbc0038I Pass  48: suminf.    1.34056 (6) obj. -17.1625 iterations 3
Cbc0038I Pass  49: suminf.    1.34056 (6) obj. -17.1625 iterations 1
Cbc0038I Pass  50: suminf.    1.12275 (6) obj. -17.1625 iterations 4
Cbc0038I Pass  51: suminf.    1.55056 (11) obj. -17.1625 iterations 13
Cbc0038I Pass  52: suminf.    1.55056 (11) obj. -17.1625 iterations 3
Cbc0038I Pass  53: suminf.    1.12275 (6) obj. -17.1625 iterations 9
Cbc0038I Pass  54: suminf.    1.12275 (6) obj. -17.1625 iterations 2
Cbc0038I Pass  55: suminf.    1.34056 (6) obj. -17.1625 iterations 3
Cbc0038I Pass  56: suminf.    1.34056 (6) obj. -17.1625 iterations 1
Cbc0038I Pass  57: suminf.    1.12275 (6) obj. -17.1625 iterations 4
Cbc0038I Pass  58: suminf.    1.90847 (13) obj. -17.1625 iterations 18
Cbc0038I Pass  59: suminf.    1.27749 (11) obj. -18.5819 iterations 6
Cbc0038I Pass  60: suminf.    0.75550 (10) obj. -17.1625 iterations 22
Cbc0038I Pass  61: suminf.    0.60355 (6) obj. -17.1625 iterations 5
Cbc0038I Pass  62: suminf.    0.76698 (7) obj. -17.1625 iterations 12
Cbc0038I Rounding solution of -8.93155 is better than previous of -7.62961

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I Round again with cutoff of -26.3712
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.96110 (34) obj. -26.3712 iterations 1
Cbc0038I Pass  63: suminf.    1.82732 (31) obj. -26.3712 iterations 2
Cbc0038I Pass  64: suminf.    1.20976 (14) obj. -26.3712 iterations 28
Cbc0038I Pass  65: suminf.    1.16311 (13) obj. -26.3712 iterations 1
Cbc0038I Pass  66: suminf.    1.24875 (11) obj. -26.3712 iterations 21
Cbc0038I Pass  67: suminf.    1.10108 (12) obj. -26.3712 iterations 9
Cbc0038I Pass  68: suminf.    1.24875 (11) obj. -26.3712 iterations 14
Cbc0038I Pass  69: suminf.    1.07965 (12) obj. -26.3712 iterations 10
Cbc0038I Pass  70: suminf.    1.24875 (11) obj. -26.3712 iterations 15
Cbc0038I Pass  71: suminf.    2.27591 (16) obj. -26.3712 iterations 11
Cbc0038I Pass  72: suminf.    2.27591 (16) obj. -26.3712 iterations 0
Cbc0038I Pass  73: suminf.    2.32580 (16) obj. -26.3712 iterations 10
Cbc0038I Pass  74: suminf.    2.32580 (16) obj. -26.3712 iterations 1
Cbc0038I Pass  75: suminf.    2.39065 (16) obj. -26.3712 iterations 3
Cbc0038I Pass  76: suminf.    2.39065 (16) obj. -26.3712 iterations 1
Cbc0038I Pass  77: suminf.    2.32580 (16) obj. -26.3712 iterations 3
Cbc0038I Pass  78: suminf.    2.30912 (17) obj. -26.3712 iterations 10
Cbc0038I Pass  79: suminf.    2.07083 (18) obj. -26.3712 iterations 3
Cbc0038I Pass  80: suminf.    1.84240 (15) obj. -26.3712 iterations 20
Cbc0038I Pass  81: suminf.    1.75612 (15) obj. -26.3712 iterations 13
Cbc0038I Pass  82: suminf.    1.84584 (15) obj. -26.3712 iterations 10
Cbc0038I Pass  83: suminf.    1.75983 (15) obj. -26.3712 iterations 13
Cbc0038I Pass  84: suminf.    1.86614 (15) obj. -26.3712 iterations 10
Cbc0038I Pass  85: suminf.    1.77251 (15) obj. -26.3712 iterations 8
Cbc0038I Pass  86: suminf.    1.76746 (18) obj. -26.3712 iterations 7
Cbc0038I Pass  87: suminf.    2.36410 (19) obj. -26.3712 iterations 22
Cbc0038I Pass  88: suminf.    1.53679 (16) obj. -27.5553 iterations 7
Cbc0038I Pass  89: suminf.    1.76746 (18) obj. -26.3712 iterations 17
Cbc0038I Pass  90: suminf.    1.75983 (15) obj. -26.3712 iterations 6
Cbc0038I Pass  91: suminf.    1.86614 (15) obj. -26.3712 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 41 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -8.93155 - took 0.18 seconds
Cbc0012I Integer solution of -8.9315454 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 3 rows 4 columns
Cbc0031I 51 added rows had average density of 36.078431
Cbc0013I At root node, 51 cuts changed objective from -47.858208 to -17.908726 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10188 row cuts average 5.0 elements, 1 column cuts (40 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1557 row cuts average 104.5 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 475 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 13 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1218 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 93 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.622 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.9315454 best solution, best possible -17.908726 (2.28 seconds)
Cbc0004I Integer solution of -10.772195 found after 3741 iterations and 1 nodes (2.29 seconds)
Cbc0004I Integer solution of -10.77767 found after 4404 iterations and 15 nodes (2.67 seconds)
Cbc0016I Integer solution of -10.78223 found by strong branching after 4757 iterations and 28 nodes (2.73 seconds)
Cbc0012I Integer solution of -12.92256 found by rounding after 5029 iterations and 36 nodes (2.80 seconds)
Cbc0012I Integer solution of -13.10359 found by DiveCoefficient after 5082 iterations and 38 nodes (2.81 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 40 rows 51 columns
Cbc0010I After 43 nodes, 2 on tree, -13.10359 best solution, best possible -17.313061 (3.01 seconds)
Cbc0001I Search completed - best objective -13.10359, took 5476 iterations and 48 nodes (3.07 seconds)
Cbc0032I Strong branching done 720 times (11198 iterations), fathomed 7 nodes and fixed 15 variables
Cbc0035I Maximum depth 11, 236 variables fixed on reduced cost
Total time (CPU seconds):       2.44   (Wallclock seconds):       3.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 74 (-4) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 2.10903e-05 - average 1.66066e-07, 14 fixed columns
Coin0506I Presolve 100 (-27) rows, 59 (-15) columns and 310 (-84) elements
Clp0029I End of values pass after 59 iterations
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Coin0511I After Postsolve, objective 39.746072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25118752 - largest nonzero change 0 ( 0%) - largest zero change 2.736223e-05
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Clp0000I Optimal - objective value 39.746072
Coin0511I After Postsolve, objective 39.746072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.74607176 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 74 columns (73 integer (73 of which binary)) and 396 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 7.21952
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.43222 iterations 44
Cbc0038I Solution found of 9.43222
Cbc0038I Relaxing continuous gives 9.43222
Cbc0038I Rounding solution of -6.16942 is better than previous of 9.43222

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -6.16942 to -10.7698 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.6675
Cbc0038I Pass   2: suminf.    1.94221 (16) obj. -13.6675 iterations 21
Cbc0038I Pass   3: suminf.    1.79328 (33) obj. -13.6675 iterations 14
Cbc0038I Pass   4: suminf.    2.09010 (7) obj. -13.6675 iterations 46
Cbc0038I Pass   5: suminf.    1.45317 (6) obj. -13.6675 iterations 3
Cbc0038I Pass   6: suminf.    1.40597 (4) obj. -13.6675 iterations 10
Cbc0038I Pass   7: suminf.    1.40597 (4) obj. -13.6675 iterations 0
Cbc0038I Pass   8: suminf.    0.96541 (4) obj. -13.6675 iterations 7
Cbc0038I Pass   9: suminf.    1.24012 (3) obj. -13.6675 iterations 4
Cbc0038I Pass  10: suminf.    1.21118 (4) obj. -13.6675 iterations 1
Cbc0038I Pass  11: suminf.    2.11054 (6) obj. -13.6675 iterations 6
Cbc0038I Pass  12: suminf.    1.62826 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  13: suminf.    2.21714 (10) obj. -13.6675 iterations 7
Cbc0038I Pass  14: suminf.    1.81843 (5) obj. -13.6675 iterations 10
Cbc0038I Pass  15: suminf.    1.81843 (5) obj. -13.6675 iterations 0
Cbc0038I Pass  16: suminf.    2.28015 (7) obj. -13.6675 iterations 3
Cbc0038I Pass  17: suminf.    1.95547 (6) obj. -13.6675 iterations 1
Cbc0038I Pass  18: suminf.    1.95547 (6) obj. -13.6675 iterations 0
Cbc0038I Pass  19: suminf.    1.80643 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  20: suminf.    1.80643 (5) obj. -13.6675 iterations 0
Cbc0038I Pass  21: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  22: suminf.    1.76609 (6) obj. -13.6675 iterations 2
Cbc0038I Pass  23: suminf.    2.06471 (6) obj. -13.6675 iterations 5
Cbc0038I Pass  24: suminf.    1.86123 (5) obj. -13.6675 iterations 2
Cbc0038I Pass  25: suminf.    1.80643 (5) obj. -13.6675 iterations 1
Cbc0038I Pass  26: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I Pass  27: suminf.    1.76609 (6) obj. -13.6675 iterations 2
Cbc0038I Pass  28: suminf.    2.06471 (6) obj. -13.6675 iterations 5
Cbc0038I Pass  29: suminf.    1.86123 (5) obj. -13.6675 iterations 2
Cbc0038I Pass  30: suminf.    1.80643 (5) obj. -13.6675 iterations 1
Cbc0038I Pass  31: suminf.    1.84732 (5) obj. -13.6675 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -10.7698 to -11.6678 (0.09 seconds)
Cbc0038I Round again with cutoff of -18.8832
Cbc0038I Pass  31: suminf.    2.98875 (16) obj. -18.8832 iterations 0
Cbc0038I Pass  32: suminf.    2.75958 (33) obj. -18.8832 iterations 14
Cbc0038I Pass  33: suminf.    1.20475 (6) obj. -18.8832 iterations 30
Cbc0038I Pass  34: suminf.    1.20475 (6) obj. -18.8832 iterations 0
Cbc0038I Pass  35: suminf.    2.60507 (10) obj. -18.8832 iterations 21
Cbc0038I Pass  36: suminf.    3.14898 (8) obj. -18.8832 iterations 8
Cbc0038I Pass  37: suminf.    2.19341 (9) obj. -18.8832 iterations 3
Cbc0038I Pass  38: suminf.    1.85673 (8) obj. -18.8832 iterations 2
Cbc0038I Pass  39: suminf.    2.53293 (7) obj. -18.8832 iterations 9
Cbc0038I Pass  40: suminf.    1.96752 (6) obj. -18.8832 iterations 4
Cbc0038I Pass  41: suminf.    1.92050 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  42: suminf.    2.41244 (7) obj. -18.8832 iterations 3
Cbc0038I Pass  43: suminf.    2.11734 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  44: suminf.    1.76118 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  45: suminf.    1.75288 (7) obj. -18.8832 iterations 1
Cbc0038I Pass  46: suminf.    2.29524 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  47: suminf.    2.29134 (6) obj. -18.8832 iterations 1
Cbc0038I Pass  48: suminf.    2.43449 (7) obj. -18.8832 iterations 6
Cbc0038I Pass  49: suminf.    2.21549 (7) obj. -18.8832 iterations 2
Cbc0038I Pass  50: suminf.    2.54933 (7) obj. -18.8832 iterations 8
Cbc0038I Pass  51: suminf.    2.15587 (7) obj. -18.8832 iterations 4
Cbc0038I Pass  52: suminf.    2.01531 (5) obj. -18.8832 iterations 2
Cbc0038I Pass  53: suminf.    2.21891 (7) obj. -18.8832 iterations 5
Cbc0038I Pass  54: suminf.    2.21773 (7) obj. -18.8832 iterations 1
Cbc0038I Pass  55: suminf.    2.76417 (8) obj. -18.8832 iterations 7
Cbc0038I Pass  56: suminf.    0.97399 (9) obj. -18.8832 iterations 10
Cbc0038I Pass  57: suminf.    0.85503 (6) obj. -18.8832 iterations 6
Cbc0038I Pass  58: suminf.    1.08879 (4) obj. -18.8832 iterations 7
Cbc0038I Pass  59: suminf.    1.00797 (4) obj. -18.8832 iterations 1
Cbc0038I Pass  60: suminf.    1.08422 (3) obj. -18.8832 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -11.6678 - took 0.10 seconds
Cbc0012I Integer solution of -11.66784 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 61 rows 37 columns
Cbc0031I 16 added rows had average density of 60.6875
Cbc0013I At root node, 16 cuts changed objective from -39.746072 to -31.408937 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7286 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1478 row cuts average 73.7 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 173 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 4 nodes, 5 on tree, -11.66784 best solution, best possible -31.408937 (0.69 seconds)
Cbc0012I Integer solution of -12.92256 found by rounding after 5662 iterations and 16 nodes (0.74 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 23 rows 17 columns
Cbc0004I Integer solution of -13.10359 found after 6489 iterations and 52 nodes (0.87 seconds)
Cbc0001I Search completed - best objective -13.10359, took 6860 iterations and 60 nodes (0.88 seconds)
Cbc0032I Strong branching done 620 times (10913 iterations), fathomed 3 nodes and fixed 21 variables
Cbc0035I Maximum depth 20, 158 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.89

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 116 (-37) columns and 1848 (-1456) elements
Clp1000I sum of infeasibilities 1.25187e-07 - average 1.29059e-09, 30 fixed columns
Coin0506I Presolve 72 (-25) rows, 86 (-30) columns and 1075 (-773) elements
Clp0006I 0  Obj 50.414258 Dual inf 5.6087094 (86)
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.0939412 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 61.061036
Clp0000I Optimal - objective value 61.061036
Coin0511I After Postsolve, objective 61.061036, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.061036
Clp0000I Optimal - objective value 61.061036
Clp0000I Optimal - objective value 61.061036
Clp0000I Optimal - objective value 61.061036
Coin0511I After Postsolve, objective 61.061036, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.06103564 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 97 rows, 116 columns (116 integer (116 of which binary)) and 1852 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.393%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 3.76176
Cbc0038I Pass   1: suminf.    1.37301 (30) obj. -23.2704 iterations 12
Cbc0038I Pass   2: suminf.    1.37301 (30) obj. -23.2704 iterations 1
Cbc0038I Pass   3: suminf.    0.07329 (3) obj. 5.23834 iterations 27
Cbc0038I Solution found of 12.0673
Cbc0038I Rounding solution of 5.66005 is better than previous of 12.0673

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from 5.66005 to -5.2252 (0.03 seconds)
Cbc0038I Round again with cutoff of -9.48859
Cbc0038I Pass   4: suminf.    1.37301 (30) obj. -23.2704 iterations 0
Cbc0038I Pass   5: suminf.    1.37301 (30) obj. -23.2704 iterations 1
Cbc0038I Pass   6: suminf.    0.68037 (7) obj. -9.48859 iterations 27
Cbc0038I Pass   7: suminf.    0.38452 (5) obj. -11.6889 iterations 2
Cbc0038I Pass   8: suminf.    0.64310 (5) obj. -9.48859 iterations 8
Cbc0038I Pass   9: suminf.    0.03333 (1) obj. -11.8277 iterations 6
Cbc0038I Pass  10: suminf.    0.03333 (1) obj. -11.8277 iterations 0
Cbc0038I Pass  11: suminf.    0.59804 (2) obj. -9.48859 iterations 6
Cbc0038I Pass  12: suminf.    0.64877 (3) obj. -12.4005 iterations 3
Cbc0038I Pass  13: suminf.    0.25394 (3) obj. -9.48859 iterations 2
Cbc0038I Pass  14: suminf.    0.44223 (3) obj. -9.48859 iterations 2
Cbc0038I Pass  15: suminf.    1.82082 (13) obj. -9.48859 iterations 19
Cbc0038I Pass  16: suminf.    1.37510 (12) obj. -9.48859 iterations 4
Cbc0038I Pass  17: suminf.    0.72781 (4) obj. -9.48859 iterations 18
Cbc0038I Pass  18: suminf.    0.03333 (1) obj. -10.8277 iterations 5
Cbc0038I Pass  19: suminf.    0.68777 (2) obj. -9.48859 iterations 7
Cbc0038I Pass  20: suminf.    1.61422 (15) obj. -9.48859 iterations 29
Cbc0038I Pass  21: suminf.    1.50948 (13) obj. -9.48859 iterations 3
Cbc0038I Pass  22: suminf.    1.32924 (4) obj. -9.48859 iterations 19
Cbc0038I Pass  23: suminf.    0.73165 (3) obj. -9.48859 iterations 4
Cbc0038I Pass  24: suminf.    0.57989 (4) obj. -9.48859 iterations 2
Cbc0038I Pass  25: suminf.    1.32924 (4) obj. -9.48859 iterations 7
Cbc0038I Pass  26: suminf.    2.25197 (16) obj. -9.48859 iterations 22
Cbc0038I Pass  27: suminf.    1.09328 (13) obj. -14.1756 iterations 8
Cbc0038I Pass  28: suminf.    1.41815 (5) obj. -9.48859 iterations 25
Cbc0038I Pass  29: suminf.    1.39775 (5) obj. -9.48859 iterations 2
Cbc0038I Pass  30: suminf.    1.12745 (5) obj. -9.48859 iterations 3
Cbc0038I Pass  31: suminf.    1.04515 (5) obj. -9.48859 iterations 1
Cbc0038I Pass  32: suminf.    1.39775 (5) obj. -9.48859 iterations 7
Cbc0038I Pass  33: suminf.    0.99481 (9) obj. -9.48859 iterations 17
Cbc0038I Rounding solution of -6.43802 is better than previous of -5.2252

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 37 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -6.43802 to -7.62961 (0.17 seconds)
Cbc0038I Round again with cutoff of -17.1625
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.37301 (30) obj. -23.2704 iterations 0
Cbc0038I Pass  34: suminf.    1.37301 (30) obj. -23.2704 iterations 1
Cbc0038I Pass  35: suminf.    0.98199 (12) obj. -17.1625 iterations 25
Cbc0038I Pass  36: suminf.    0.98199 (12) obj. -17.1625 iterations 0
Cbc0038I Pass  37: suminf.    0.25505 (3) obj. -17.1625 iterations 14
Cbc0038I Pass  38: suminf.    0.22892 (3) obj. -17.2409 iterations 2
Cbc0038I Pass  39: suminf.    0.57116 (4) obj. -17.1625 iterations 9
Cbc0038I Pass  40: suminf.    2.17340 (11) obj. -17.1625 iterations 17
Cbc0038I Pass  41: suminf.    1.90572 (10) obj. -17.5378 iterations 2
Cbc0038I Pass  42: suminf.    1.87953 (8) obj. -17.1625 iterations 11
Cbc0038I Pass  43: suminf.    1.59669 (9) obj. -17.1625 iterations 3
Cbc0038I Pass  44: suminf.    1.59164 (7) obj. -17.1625 iterations 9
Cbc0038I Pass  45: suminf.    1.56300 (7) obj. -17.1625 iterations 3
Cbc0038I Pass  46: suminf.    1.12275 (6) obj. -17.1625 iterations 4
Cbc0038I Pass  47: suminf.    1.12275 (6) obj. -17.1625 iterations 2
Cbc0038I Pass  48: suminf.    1.34056 (6) obj. -17.1625 iterations 3
Cbc0038I Pass  49: suminf.    1.34056 (6) obj. -17.1625 iterations 1
Cbc0038I Pass  50: suminf.    1.12275 (6) obj. -17.1625 iterations 4
Cbc0038I Pass  51: suminf.    1.55056 (11) obj. -17.1625 iterations 13
Cbc0038I Pass  52: suminf.    1.55056 (11) obj. -17.1625 iterations 3
Cbc0038I Pass  53: suminf.    1.12275 (6) obj. -17.1625 iterations 9
Cbc0038I Pass  54: suminf.    1.12275 (6) obj. -17.1625 iterations 2
Cbc0038I Pass  55: suminf.    1.34056 (6) obj. -17.1625 iterations 3
Cbc0038I Pass  56: suminf.    1.34056 (6) obj. -17.1625 iterations 1
Cbc0038I Pass  57: suminf.    1.12275 (6) obj. -17.1625 iterations 4
Cbc0038I Pass  58: suminf.    1.90847 (13) obj. -17.1625 iterations 18
Cbc0038I Pass  59: suminf.    1.27749 (11) obj. -18.5819 iterations 6
Cbc0038I Pass  60: suminf.    0.75550 (10) obj. -17.1625 iterations 22
Cbc0038I Pass  61: suminf.    0.60355 (6) obj. -17.1625 iterations 5
Cbc0038I Pass  62: suminf.    0.76698 (7) obj. -17.1625 iterations 12
Cbc0038I Rounding solution of -8.93155 is better than previous of -7.62961

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I Round again with cutoff of -26.3712
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    1.96110 (34) obj. -26.3712 iterations 1
Cbc0038I Pass  63: suminf.    1.82732 (31) obj. -26.3712 iterations 2
Cbc0038I Pass  64: suminf.    1.20976 (14) obj. -26.3712 iterations 28
Cbc0038I Pass  65: suminf.    1.16311 (13) obj. -26.3712 iterations 1
Cbc0038I Pass  66: suminf.    1.24875 (11) obj. -26.3712 iterations 21
Cbc0038I Pass  67: suminf.    1.10108 (12) obj. -26.3712 iterations 9
Cbc0038I Pass  68: suminf.    1.24875 (11) obj. -26.3712 iterations 14
Cbc0038I Pass  69: suminf.    1.07965 (12) obj. -26.3712 iterations 10
Cbc0038I Pass  70: suminf.    1.24875 (11) obj. -26.3712 iterations 15
Cbc0038I Pass  71: suminf.    2.27591 (16) obj. -26.3712 iterations 11
Cbc0038I Pass  72: suminf.    2.27591 (16) obj. -26.3712 iterations 0
Cbc0038I Pass  73: suminf.    2.32580 (16) obj. -26.3712 iterations 10
Cbc0038I Pass  74: suminf.    2.32580 (16) obj. -26.3712 iterations 1
Cbc0038I Pass  75: suminf.    2.39065 (16) obj. -26.3712 iterations 3
Cbc0038I Pass  76: suminf.    2.39065 (16) obj. -26.3712 iterations 1
Cbc0038I Pass  77: suminf.    2.32580 (16) obj. -26.3712 iterations 3
Cbc0038I Pass  78: suminf.    2.30912 (17) obj. -26.3712 iterations 10
Cbc0038I Pass  79: suminf.    2.07083 (18) obj. -26.3712 iterations 3
Cbc0038I Pass  80: suminf.    1.84240 (15) obj. -26.3712 iterations 20
Cbc0038I Pass  81: suminf.    1.75612 (15) obj. -26.3712 iterations 13
Cbc0038I Pass  82: suminf.    1.84584 (15) obj. -26.3712 iterations 10
Cbc0038I Pass  83: suminf.    1.75983 (15) obj. -26.3712 iterations 13
Cbc0038I Pass  84: suminf.    1.86614 (15) obj. -26.3712 iterations 10
Cbc0038I Pass  85: suminf.    1.77251 (15) obj. -26.3712 iterations 8
Cbc0038I Pass  86: suminf.    1.76746 (18) obj. -26.3712 iterations 7
Cbc0038I Pass  87: suminf.    2.36410 (19) obj. -26.3712 iterations 22
Cbc0038I Pass  88: suminf.    1.53679 (16) obj. -27.5553 iterations 7
Cbc0038I Pass  89: suminf.    1.76746 (18) obj. -26.3712 iterations 17
Cbc0038I Pass  90: suminf.    1.75983 (15) obj. -26.3712 iterations 6
Cbc0038I Pass  91: suminf.    1.86614 (15) obj. -26.3712 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 97 rows 116 columns, reduced to 41 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -8.93155 - took 0.18 seconds
Cbc0012I Integer solution of -8.9315454 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 3 rows 4 columns
Cbc0031I 51 added rows had average density of 36.078431
Cbc0013I At root node, 51 cuts changed objective from -47.858208 to -17.908726 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10188 row cuts average 5.0 elements, 1 column cuts (40 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1557 row cuts average 104.5 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 39 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 475 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 13 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1218 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 93 row cuts average 37.3 elements, 0 column cuts (0 active)  in 0.630 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.9315454 best solution, best possible -17.908726 (2.32 seconds)
Cbc0004I Integer solution of -10.772195 found after 3741 iterations and 1 nodes (2.34 seconds)
Cbc0004I Integer solution of -10.77767 found after 4404 iterations and 15 nodes (2.71 seconds)
Cbc0016I Integer solution of -10.78223 found by strong branching after 4757 iterations and 28 nodes (2.77 seconds)
Cbc0012I Integer solution of -12.92256 found by rounding after 5029 iterations and 36 nodes (2.85 seconds)
Cbc0012I Integer solution of -13.10359 found by DiveCoefficient after 5082 iterations and 38 nodes (2.86 seconds)
Cbc0038I Full problem 97 rows 116 columns, reduced to 40 rows 51 columns
Cbc0010I After 43 nodes, 2 on tree, -13.10359 best solution, best possible -17.313061 (3.07 seconds)
Cbc0001I Search completed - best objective -13.10359, took 5476 iterations and 48 nodes (3.13 seconds)
Cbc0032I Strong branching done 720 times (11198 iterations), fathomed 7 nodes and fixed 15 variables
Cbc0035I Maximum depth 11, 236 variables fixed on reduced cost
Total time (CPU seconds):       2.49   (Wallclock seconds):       3.15

