Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-42) rows, 62 (-16) columns and 343 (-110) elements
Clp1000I sum of infeasibilities 2.84068e-05 - average 2.51388e-07, 14 fixed columns
Coin0506I Presolve 70 (-43) rows, 43 (-19) columns and 220 (-123) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Coin0511I After Postsolve, objective 200.77668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Coin0511I After Postsolve, objective 200.77668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 200.7766835 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 113 rows, 62 columns (61 integer (61 of which binary)) and 343 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.432%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.91057
Cbc0038I Pass   1: suminf.    0.11650 (2) obj. -161.65 iterations 18
Cbc0038I Solution found of -160.6
Cbc0038I Relaxing continuous gives -160.6
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -160.6 to -173.058 (0.02 seconds)
Cbc0038I Round again with cutoff of -175.83
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.04304 (5) obj. -175.83 iterations 3
Cbc0038I Pass   3: suminf.    1.04304 (5) obj. -175.83 iterations 2
Cbc0038I Pass   4: suminf.    0.78423 (2) obj. -175.83 iterations 16
Cbc0038I Pass   5: suminf.    0.78423 (2) obj. -175.83 iterations 0
Cbc0038I Pass   6: suminf.    0.32036 (2) obj. -175.83 iterations 7
Cbc0038I Pass   7: suminf.    0.84752 (3) obj. -175.83 iterations 4
Cbc0038I Pass   8: suminf.    1.39710 (9) obj. -175.83 iterations 10
Cbc0038I Pass   9: suminf.    1.00697 (9) obj. -175.83 iterations 6
Cbc0038I Pass  10: suminf.    1.21328 (5) obj. -175.83 iterations 18
Cbc0038I Pass  11: suminf.    1.20531 (7) obj. -175.83 iterations 8
Cbc0038I Pass  12: suminf.    1.58221 (5) obj. -175.83 iterations 14
Cbc0038I Pass  13: suminf.    0.95538 (4) obj. -175.83 iterations 5
Cbc0038I Pass  14: suminf.    1.53012 (4) obj. -175.83 iterations 7
Cbc0038I Pass  15: suminf.    0.78807 (5) obj. -175.83 iterations 6
Cbc0038I Pass  16: suminf.    1.17896 (4) obj. -175.83 iterations 8
Cbc0038I Pass  17: suminf.    1.77646 (7) obj. -175.83 iterations 7
Cbc0038I Pass  18: suminf.    1.39338 (6) obj. -175.83 iterations 6
Cbc0038I Pass  19: suminf.    1.93948 (5) obj. -175.83 iterations 5
Cbc0038I Pass  20: suminf.    2.47187 (10) obj. -175.83 iterations 26
Cbc0038I Pass  21: suminf.    1.92621 (9) obj. -175.83 iterations 7
Cbc0038I Pass  22: suminf.    0.91858 (2) obj. -175.83 iterations 16
Cbc0038I Pass  23: suminf.    0.14515 (2) obj. -175.83 iterations 6
Cbc0038I Pass  24: suminf.    0.61673 (3) obj. -175.83 iterations 4
Cbc0038I Pass  25: suminf.    2.43101 (11) obj. -175.83 iterations 13
Cbc0038I Pass  26: suminf.    1.46831 (6) obj. -175.83 iterations 11
Cbc0038I Pass  27: suminf.    0.57873 (3) obj. -175.83 iterations 4
Cbc0038I Pass  28: suminf.    0.53505 (4) obj. -175.83 iterations 2
Cbc0038I Pass  29: suminf.    0.91858 (2) obj. -175.83 iterations 9
Cbc0038I Pass  30: suminf.    0.14515 (2) obj. -175.83 iterations 5
Cbc0038I Pass  31: suminf.    0.61673 (3) obj. -175.83 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 38 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -173.058 to -175.021 (0.04 seconds)
Cbc0038I Round again with cutoff of -180.819
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.14952 (8) obj. -180.819 iterations 1
Cbc0038I Pass  32: suminf.    1.56326 (6) obj. -180.819 iterations 19
Cbc0038I Pass  33: suminf.    0.86195 (4) obj. -180.819 iterations 10
Cbc0038I Pass  34: suminf.    1.07546 (3) obj. -180.819 iterations 6
Cbc0038I Pass  35: suminf.    0.67384 (3) obj. -180.819 iterations 3
Cbc0038I Pass  36: suminf.    1.26755 (5) obj. -180.819 iterations 7
Cbc0038I Pass  37: suminf.    1.07546 (3) obj. -180.819 iterations 11
Cbc0038I Pass  38: suminf.    2.56414 (8) obj. -180.819 iterations 13
Cbc0038I Pass  39: suminf.    0.59481 (4) obj. -180.819 iterations 9
Cbc0038I Pass  40: suminf.    1.09028 (3) obj. -180.819 iterations 10
Cbc0038I Pass  41: suminf.    0.80695 (7) obj. -180.819 iterations 4
Cbc0038I Pass  42: suminf.    2.64719 (10) obj. -180.819 iterations 20
Cbc0038I Pass  43: suminf.    2.54836 (10) obj. -180.819 iterations 5
Cbc0038I Pass  44: suminf.    1.12353 (8) obj. -180.819 iterations 18
Cbc0038I Pass  45: suminf.    0.70634 (5) obj. -180.819 iterations 4
Cbc0038I Pass  46: suminf.    0.27201 (2) obj. -180.819 iterations 11
Cbc0038I Pass  47: suminf.    0.27201 (2) obj. -180.819 iterations 2
Cbc0038I Pass  48: suminf.    0.66900 (3) obj. -180.819 iterations 4
Cbc0038I Pass  49: suminf.    1.94762 (9) obj. -180.819 iterations 11
Cbc0038I Pass  50: suminf.    1.29569 (8) obj. -180.819 iterations 3
Cbc0038I Pass  51: suminf.    0.80015 (7) obj. -180.819 iterations 2
Cbc0038I Pass  52: suminf.    2.64719 (10) obj. -180.819 iterations 15
Cbc0038I Pass  53: suminf.    2.54836 (10) obj. -180.819 iterations 5
Cbc0038I Pass  54: suminf.    1.12353 (8) obj. -180.819 iterations 18
Cbc0038I Pass  55: suminf.    0.70634 (5) obj. -180.819 iterations 4
Cbc0038I Pass  56: suminf.    0.27201 (2) obj. -180.819 iterations 11
Cbc0038I Pass  57: suminf.    0.27201 (2) obj. -180.819 iterations 2
Cbc0038I Pass  58: suminf.    0.66900 (3) obj. -180.819 iterations 4
Cbc0038I Pass  59: suminf.    1.66469 (8) obj. -180.819 iterations 13
Cbc0038I Pass  60: suminf.    1.04574 (5) obj. -180.819 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 33 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -175.021 - took 0.04 seconds
Cbc0012I Integer solution of -175.02135 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 113 rows 62 columns, reduced to 23 rows 20 columns
Cbc0031I 6 added rows had average density of 42
Cbc0013I At root node, 6 cuts changed objective from -200.77668 to -182.41408 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 86 row cuts average 3.0 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -175.02135, took 281 iterations and 10 nodes (0.10 seconds)
Cbc0032I Strong branching done 74 times (389 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 101 (-51) columns and 1493 (-1810) elements
Clp1000I sum of infeasibilities 2.45491e-07 - average 2.66838e-09, 55 fixed columns
Coin0506I Presolve 37 (-55) rows, 45 (-56) columns and 159 (-1334) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 2.8334913 - largest nonzero change 2.1350341e-05 ( 0.00082503284%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 178.13483
Clp0000I Optimal - objective value 178.13483
Coin0511I After Postsolve, objective 178.13483, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2034376 - largest nonzero change 2.2030539e-05 ( 0.0018167249%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 233.78369
Clp0000I Optimal - objective value 233.78369
Clp0000I Optimal - objective value 233.78369
Coin0511I After Postsolve, objective 233.78369, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 233.7836925 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 101 columns (101 integer (101 of which binary)) and 1495 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.745%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.53165
Cbc0038I Pass   1: suminf.    3.68923 (28) obj. -190.008 iterations 18
Cbc0038I Pass   2: suminf.    3.68923 (28) obj. -190.008 iterations 1
Cbc0038I Pass   3: suminf.    0.48840 (5) obj. -160.783 iterations 23
Cbc0038I Solution found of -155.338
Cbc0038I Rounding solution of -161.338 is better than previous of -155.338

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 101 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -167.565
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.68923 (28) obj. -190.008 iterations 0
Cbc0038I Pass   5: suminf.    3.68923 (28) obj. -190.008 iterations 1
Cbc0038I Pass   6: suminf.    1.48648 (13) obj. -172.169 iterations 15
Cbc0038I Pass   7: suminf.    0.81586 (14) obj. -167.565 iterations 23
Cbc0038I Pass   8: suminf.    1.15768 (6) obj. -175.334 iterations 17
Cbc0038I Pass   9: suminf.    0.76321 (5) obj. -167.565 iterations 3
Cbc0038I Pass  10: suminf.    0.27027 (1) obj. -171.663 iterations 5
Cbc0038I Pass  11: suminf.    0.41692 (1) obj. -167.565 iterations 2
Cbc0038I Pass  12: suminf.    1.36486 (8) obj. -167.565 iterations 20
Cbc0038I Pass  13: suminf.    0.97875 (7) obj. -174.957 iterations 10
Cbc0038I Pass  14: suminf.    0.14989 (1) obj. -167.565 iterations 14
Cbc0038I Pass  15: suminf.    0.14989 (1) obj. -167.565 iterations 0
Cbc0038I Pass  16: suminf.    0.55364 (2) obj. -167.565 iterations 8
Cbc0038I Pass  17: suminf.    2.62303 (17) obj. -167.565 iterations 36
Cbc0038I Pass  18: suminf.    2.38713 (16) obj. -167.565 iterations 5
Cbc0038I Pass  19: suminf.    1.53827 (5) obj. -167.565 iterations 26
Cbc0038I Pass  20: suminf.    1.36686 (4) obj. -167.565 iterations 5
Cbc0038I Pass  21: suminf.    1.16190 (3) obj. -167.565 iterations 3
Cbc0038I Pass  22: suminf.    0.13599 (2) obj. -167.565 iterations 10
Cbc0038I Pass  23: suminf.    0.61640 (2) obj. -167.565 iterations 6
Cbc0038I Pass  24: suminf.    0.61640 (2) obj. -167.565 iterations 0
Cbc0038I Pass  25: suminf.    0.66667 (2) obj. -171.369 iterations 5
Cbc0038I Pass  26: suminf.    2.11182 (13) obj. -167.565 iterations 16
Cbc0038I Pass  27: suminf.    1.37202 (8) obj. -167.565 iterations 8
Cbc0038I Pass  28: suminf.    0.42837 (7) obj. -167.565 iterations 26
Cbc0038I Pass  29: suminf.    0.42837 (7) obj. -167.565 iterations 0
Cbc0038I Pass  30: suminf.    0.82107 (2) obj. -172.989 iterations 17
Cbc0038I Pass  31: suminf.    0.46335 (1) obj. -167.565 iterations 4
Cbc0038I Pass  32: suminf.    0.38235 (2) obj. -171.886 iterations 3
Cbc0038I Pass  33: suminf.    0.54990 (2) obj. -167.565 iterations 2
Cbc0038I Rounding solution of -167.764 is better than previous of -161.338

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 101 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -167.764 to -175.021 (0.07 seconds)
Cbc0038I Round again with cutoff of -184.738
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.68923 (28) obj. -190.008 iterations 0
Cbc0038I Pass  34: suminf.    3.68923 (28) obj. -190.008 iterations 1
Cbc0038I Pass  35: suminf.    2.52276 (24) obj. -184.738 iterations 27
Cbc0038I Pass  36: suminf.    2.17040 (10) obj. -184.738 iterations 32
Cbc0038I Pass  37: suminf.    2.17040 (10) obj. -184.738 iterations 0
Cbc0038I Pass  38: suminf.    2.12850 (7) obj. -184.738 iterations 20
Cbc0038I Pass  39: suminf.    1.92302 (9) obj. -184.738 iterations 1
Cbc0038I Pass  40: suminf.    2.34849 (9) obj. -184.738 iterations 14
Cbc0038I Pass  41: suminf.    2.34849 (9) obj. -184.738 iterations 5
Cbc0038I Pass  42: suminf.    2.33157 (9) obj. -184.738 iterations 13
Cbc0038I Pass  43: suminf.    2.33157 (9) obj. -184.738 iterations 5
Cbc0038I Pass  44: suminf.    2.28013 (10) obj. -184.738 iterations 12
Cbc0038I Pass  45: suminf.    2.28013 (10) obj. -184.738 iterations 3
Cbc0038I Pass  46: suminf.    2.12850 (7) obj. -184.738 iterations 16
Cbc0038I Pass  47: suminf.    1.92302 (9) obj. -184.738 iterations 1
Cbc0038I Pass  48: suminf.    2.34849 (9) obj. -184.738 iterations 14
Cbc0038I Pass  49: suminf.    2.34849 (9) obj. -184.738 iterations 5
Cbc0038I Pass  50: suminf.    2.33157 (9) obj. -184.738 iterations 13
Cbc0038I Pass  51: suminf.    2.33157 (9) obj. -184.738 iterations 5
Cbc0038I Pass  52: suminf.    2.22064 (9) obj. -184.738 iterations 7
Cbc0038I Pass  53: suminf.    2.22064 (9) obj. -184.738 iterations 0
Cbc0038I Pass  54: suminf.    2.56378 (7) obj. -184.738 iterations 14
Cbc0038I Pass  55: suminf.    3.30945 (15) obj. -184.738 iterations 26
Cbc0038I Pass  56: suminf.    1.98607 (10) obj. -184.738 iterations 12
Cbc0038I Pass  57: suminf.    1.82329 (11) obj. -184.738 iterations 2
Cbc0038I Pass  58: suminf.    2.56378 (7) obj. -184.738 iterations 23
Cbc0038I Pass  59: suminf.    2.33157 (9) obj. -184.738 iterations 6
Cbc0038I Pass  60: suminf.    2.34849 (9) obj. -184.738 iterations 12
Cbc0038I Pass  61: suminf.    2.34849 (9) obj. -184.738 iterations 4
Cbc0038I Pass  62: suminf.    2.33157 (9) obj. -184.738 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 101 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -175.021 - took 0.06 seconds
Cbc0012I Integer solution of -175.02135 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 92 rows 101 columns, reduced to 3 rows 5 columns
Cbc0031I 37 added rows had average density of 11.486486
Cbc0013I At root node, 37 cuts changed objective from -223.6059 to -179.67049 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 537 row cuts average 2.3 elements, 5 column cuts (5 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 60.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 73 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0001I Search completed - best objective -175.02135, took 429 iterations and 4 nodes (0.31 seconds)
Cbc0032I Strong branching done 76 times (589 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.31

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-42) rows, 62 (-16) columns and 343 (-110) elements
Clp1000I sum of infeasibilities 2.84068e-05 - average 2.51388e-07, 14 fixed columns
Coin0506I Presolve 70 (-43) rows, 43 (-19) columns and 220 (-123) elements
Clp0029I End of values pass after 42 iterations
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Coin0511I After Postsolve, objective 200.77668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Clp0000I Optimal - objective value 200.77668
Coin0511I After Postsolve, objective 200.77668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 200.7766835 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 113 rows, 62 columns (61 integer (61 of which binary)) and 343 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.432%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.91057
Cbc0038I Pass   1: suminf.    0.11650 (2) obj. -161.65 iterations 18
Cbc0038I Solution found of -160.6
Cbc0038I Relaxing continuous gives -160.6
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 22 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -160.6 to -173.058 (0.01 seconds)
Cbc0038I Round again with cutoff of -175.83
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.04304 (5) obj. -175.83 iterations 3
Cbc0038I Pass   3: suminf.    1.04304 (5) obj. -175.83 iterations 2
Cbc0038I Pass   4: suminf.    0.78423 (2) obj. -175.83 iterations 16
Cbc0038I Pass   5: suminf.    0.78423 (2) obj. -175.83 iterations 0
Cbc0038I Pass   6: suminf.    0.32036 (2) obj. -175.83 iterations 7
Cbc0038I Pass   7: suminf.    0.84752 (3) obj. -175.83 iterations 4
Cbc0038I Pass   8: suminf.    1.39710 (9) obj. -175.83 iterations 10
Cbc0038I Pass   9: suminf.    1.00697 (9) obj. -175.83 iterations 6
Cbc0038I Pass  10: suminf.    1.21328 (5) obj. -175.83 iterations 18
Cbc0038I Pass  11: suminf.    1.20531 (7) obj. -175.83 iterations 8
Cbc0038I Pass  12: suminf.    1.58221 (5) obj. -175.83 iterations 14
Cbc0038I Pass  13: suminf.    0.95538 (4) obj. -175.83 iterations 5
Cbc0038I Pass  14: suminf.    1.53012 (4) obj. -175.83 iterations 7
Cbc0038I Pass  15: suminf.    0.78807 (5) obj. -175.83 iterations 6
Cbc0038I Pass  16: suminf.    1.17896 (4) obj. -175.83 iterations 8
Cbc0038I Pass  17: suminf.    1.77646 (7) obj. -175.83 iterations 7
Cbc0038I Pass  18: suminf.    1.39338 (6) obj. -175.83 iterations 6
Cbc0038I Pass  19: suminf.    1.93948 (5) obj. -175.83 iterations 5
Cbc0038I Pass  20: suminf.    2.47187 (10) obj. -175.83 iterations 26
Cbc0038I Pass  21: suminf.    1.92621 (9) obj. -175.83 iterations 7
Cbc0038I Pass  22: suminf.    0.91858 (2) obj. -175.83 iterations 16
Cbc0038I Pass  23: suminf.    0.14515 (2) obj. -175.83 iterations 6
Cbc0038I Pass  24: suminf.    0.61673 (3) obj. -175.83 iterations 4
Cbc0038I Pass  25: suminf.    2.43101 (11) obj. -175.83 iterations 13
Cbc0038I Pass  26: suminf.    1.46831 (6) obj. -175.83 iterations 11
Cbc0038I Pass  27: suminf.    0.57873 (3) obj. -175.83 iterations 4
Cbc0038I Pass  28: suminf.    0.53505 (4) obj. -175.83 iterations 2
Cbc0038I Pass  29: suminf.    0.91858 (2) obj. -175.83 iterations 9
Cbc0038I Pass  30: suminf.    0.14515 (2) obj. -175.83 iterations 5
Cbc0038I Pass  31: suminf.    0.61673 (3) obj. -175.83 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 38 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -173.058 to -175.021 (0.03 seconds)
Cbc0038I Round again with cutoff of -180.819
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.14952 (8) obj. -180.819 iterations 1
Cbc0038I Pass  32: suminf.    1.56326 (6) obj. -180.819 iterations 19
Cbc0038I Pass  33: suminf.    0.86195 (4) obj. -180.819 iterations 10
Cbc0038I Pass  34: suminf.    1.07546 (3) obj. -180.819 iterations 6
Cbc0038I Pass  35: suminf.    0.67384 (3) obj. -180.819 iterations 3
Cbc0038I Pass  36: suminf.    1.26755 (5) obj. -180.819 iterations 7
Cbc0038I Pass  37: suminf.    1.07546 (3) obj. -180.819 iterations 11
Cbc0038I Pass  38: suminf.    2.56414 (8) obj. -180.819 iterations 13
Cbc0038I Pass  39: suminf.    0.59481 (4) obj. -180.819 iterations 9
Cbc0038I Pass  40: suminf.    1.09028 (3) obj. -180.819 iterations 10
Cbc0038I Pass  41: suminf.    0.80695 (7) obj. -180.819 iterations 4
Cbc0038I Pass  42: suminf.    2.64719 (10) obj. -180.819 iterations 20
Cbc0038I Pass  43: suminf.    2.54836 (10) obj. -180.819 iterations 5
Cbc0038I Pass  44: suminf.    1.12353 (8) obj. -180.819 iterations 18
Cbc0038I Pass  45: suminf.    0.70634 (5) obj. -180.819 iterations 4
Cbc0038I Pass  46: suminf.    0.27201 (2) obj. -180.819 iterations 11
Cbc0038I Pass  47: suminf.    0.27201 (2) obj. -180.819 iterations 2
Cbc0038I Pass  48: suminf.    0.66900 (3) obj. -180.819 iterations 4
Cbc0038I Pass  49: suminf.    1.94762 (9) obj. -180.819 iterations 11
Cbc0038I Pass  50: suminf.    1.29569 (8) obj. -180.819 iterations 3
Cbc0038I Pass  51: suminf.    0.80015 (7) obj. -180.819 iterations 2
Cbc0038I Pass  52: suminf.    2.64719 (10) obj. -180.819 iterations 15
Cbc0038I Pass  53: suminf.    2.54836 (10) obj. -180.819 iterations 5
Cbc0038I Pass  54: suminf.    1.12353 (8) obj. -180.819 iterations 18
Cbc0038I Pass  55: suminf.    0.70634 (5) obj. -180.819 iterations 4
Cbc0038I Pass  56: suminf.    0.27201 (2) obj. -180.819 iterations 11
Cbc0038I Pass  57: suminf.    0.27201 (2) obj. -180.819 iterations 2
Cbc0038I Pass  58: suminf.    0.66900 (3) obj. -180.819 iterations 4
Cbc0038I Pass  59: suminf.    1.66469 (8) obj. -180.819 iterations 13
Cbc0038I Pass  60: suminf.    1.04574 (5) obj. -180.819 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 62 columns, reduced to 33 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -175.021 - took 0.04 seconds
Cbc0012I Integer solution of -175.02135 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 113 rows 62 columns, reduced to 23 rows 20 columns
Cbc0031I 6 added rows had average density of 42
Cbc0013I At root node, 6 cuts changed objective from -200.77668 to -182.41408 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 86 row cuts average 3.0 elements, 9 column cuts (9 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 52.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -175.02135, took 281 iterations and 10 nodes (0.09 seconds)
Cbc0032I Strong branching done 74 times (389 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 40 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 101 (-52) columns and 1493 (-1811) elements
Clp1000I sum of infeasibilities 2.45491e-07 - average 2.66838e-09, 55 fixed columns
Coin0506I Presolve 37 (-55) rows, 45 (-56) columns and 159 (-1334) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 2.8334913 - largest nonzero change 2.1350341e-05 ( 0.00082503284%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 178.13483
Clp0000I Optimal - objective value 178.13483
Coin0511I After Postsolve, objective 178.13483, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.2034376 - largest nonzero change 2.2030539e-05 ( 0.0018167249%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 233.78369
Clp0000I Optimal - objective value 233.78369
Clp0000I Optimal - objective value 233.78369
Coin0511I After Postsolve, objective 233.78369, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 233.7836925 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 101 columns (101 integer (101 of which binary)) and 1495 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.745%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 8.53165
Cbc0038I Pass   1: suminf.    3.68923 (28) obj. -190.008 iterations 18
Cbc0038I Pass   2: suminf.    3.68923 (28) obj. -190.008 iterations 1
Cbc0038I Pass   3: suminf.    0.48840 (5) obj. -160.783 iterations 23
Cbc0038I Solution found of -155.338
Cbc0038I Rounding solution of -161.338 is better than previous of -155.338

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 101 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -167.565
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.68923 (28) obj. -190.008 iterations 0
Cbc0038I Pass   5: suminf.    3.68923 (28) obj. -190.008 iterations 1
Cbc0038I Pass   6: suminf.    1.48648 (13) obj. -172.169 iterations 15
Cbc0038I Pass   7: suminf.    0.81586 (14) obj. -167.565 iterations 23
Cbc0038I Pass   8: suminf.    1.15768 (6) obj. -175.334 iterations 17
Cbc0038I Pass   9: suminf.    0.76321 (5) obj. -167.565 iterations 3
Cbc0038I Pass  10: suminf.    0.27027 (1) obj. -171.663 iterations 5
Cbc0038I Pass  11: suminf.    0.41692 (1) obj. -167.565 iterations 2
Cbc0038I Pass  12: suminf.    1.36486 (8) obj. -167.565 iterations 20
Cbc0038I Pass  13: suminf.    0.97875 (7) obj. -174.957 iterations 10
Cbc0038I Pass  14: suminf.    0.14989 (1) obj. -167.565 iterations 14
Cbc0038I Pass  15: suminf.    0.14989 (1) obj. -167.565 iterations 0
Cbc0038I Pass  16: suminf.    0.55364 (2) obj. -167.565 iterations 8
Cbc0038I Pass  17: suminf.    2.62303 (17) obj. -167.565 iterations 36
Cbc0038I Pass  18: suminf.    2.38713 (16) obj. -167.565 iterations 5
Cbc0038I Pass  19: suminf.    1.53827 (5) obj. -167.565 iterations 26
Cbc0038I Pass  20: suminf.    1.36686 (4) obj. -167.565 iterations 5
Cbc0038I Pass  21: suminf.    1.16190 (3) obj. -167.565 iterations 3
Cbc0038I Pass  22: suminf.    0.13599 (2) obj. -167.565 iterations 10
Cbc0038I Pass  23: suminf.    0.61640 (2) obj. -167.565 iterations 6
Cbc0038I Pass  24: suminf.    0.61640 (2) obj. -167.565 iterations 0
Cbc0038I Pass  25: suminf.    0.66667 (2) obj. -171.369 iterations 5
Cbc0038I Pass  26: suminf.    2.11182 (13) obj. -167.565 iterations 16
Cbc0038I Pass  27: suminf.    1.37202 (8) obj. -167.565 iterations 8
Cbc0038I Pass  28: suminf.    0.42837 (7) obj. -167.565 iterations 26
Cbc0038I Pass  29: suminf.    0.42837 (7) obj. -167.565 iterations 0
Cbc0038I Pass  30: suminf.    0.82107 (2) obj. -172.989 iterations 17
Cbc0038I Pass  31: suminf.    0.46335 (1) obj. -167.565 iterations 4
Cbc0038I Pass  32: suminf.    0.38235 (2) obj. -171.886 iterations 3
Cbc0038I Pass  33: suminf.    0.54990 (2) obj. -167.565 iterations 2
Cbc0038I Rounding solution of -167.764 is better than previous of -161.338

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 101 columns, reduced to 34 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -167.764 to -175.021 (0.07 seconds)
Cbc0038I Round again with cutoff of -184.738
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.68923 (28) obj. -190.008 iterations 0
Cbc0038I Pass  34: suminf.    3.68923 (28) obj. -190.008 iterations 1
Cbc0038I Pass  35: suminf.    2.52276 (24) obj. -184.738 iterations 27
Cbc0038I Pass  36: suminf.    2.17040 (10) obj. -184.738 iterations 32
Cbc0038I Pass  37: suminf.    2.17040 (10) obj. -184.738 iterations 0
Cbc0038I Pass  38: suminf.    2.12850 (7) obj. -184.738 iterations 20
Cbc0038I Pass  39: suminf.    1.92302 (9) obj. -184.738 iterations 1
Cbc0038I Pass  40: suminf.    2.34849 (9) obj. -184.738 iterations 14
Cbc0038I Pass  41: suminf.    2.34849 (9) obj. -184.738 iterations 5
Cbc0038I Pass  42: suminf.    2.33157 (9) obj. -184.738 iterations 13
Cbc0038I Pass  43: suminf.    2.33157 (9) obj. -184.738 iterations 5
Cbc0038I Pass  44: suminf.    2.28013 (10) obj. -184.738 iterations 12
Cbc0038I Pass  45: suminf.    2.28013 (10) obj. -184.738 iterations 3
Cbc0038I Pass  46: suminf.    2.12850 (7) obj. -184.738 iterations 16
Cbc0038I Pass  47: suminf.    1.92302 (9) obj. -184.738 iterations 1
Cbc0038I Pass  48: suminf.    2.34849 (9) obj. -184.738 iterations 14
Cbc0038I Pass  49: suminf.    2.34849 (9) obj. -184.738 iterations 5
Cbc0038I Pass  50: suminf.    2.33157 (9) obj. -184.738 iterations 13
Cbc0038I Pass  51: suminf.    2.33157 (9) obj. -184.738 iterations 5
Cbc0038I Pass  52: suminf.    2.22064 (9) obj. -184.738 iterations 7
Cbc0038I Pass  53: suminf.    2.22064 (9) obj. -184.738 iterations 0
Cbc0038I Pass  54: suminf.    2.56378 (7) obj. -184.738 iterations 14
Cbc0038I Pass  55: suminf.    3.30945 (15) obj. -184.738 iterations 26
Cbc0038I Pass  56: suminf.    1.98607 (10) obj. -184.738 iterations 12
Cbc0038I Pass  57: suminf.    1.82329 (11) obj. -184.738 iterations 2
Cbc0038I Pass  58: suminf.    2.56378 (7) obj. -184.738 iterations 23
Cbc0038I Pass  59: suminf.    2.33157 (9) obj. -184.738 iterations 6
Cbc0038I Pass  60: suminf.    2.34849 (9) obj. -184.738 iterations 12
Cbc0038I Pass  61: suminf.    2.34849 (9) obj. -184.738 iterations 4
Cbc0038I Pass  62: suminf.    2.33157 (9) obj. -184.738 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 101 columns, reduced to 20 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -175.021 - took 0.06 seconds
Cbc0012I Integer solution of -175.02135 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 92 rows 101 columns, reduced to 3 rows 5 columns
Cbc0031I 37 added rows had average density of 11.486486
Cbc0013I At root node, 37 cuts changed objective from -223.6059 to -179.67049 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 537 row cuts average 2.3 elements, 5 column cuts (5 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 36 row cuts average 60.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 73 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 174 row cuts average 43.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is -100
Cbc0001I Search completed - best objective -175.02135, took 429 iterations and 4 nodes (0.31 seconds)
Cbc0032I Strong branching done 76 times (589 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 1, 43 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.32

