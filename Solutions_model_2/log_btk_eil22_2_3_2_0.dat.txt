Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 20 (-4) columns and 94 (-35) elements
Clp1000I sum of infeasibilities 7.57979e-06 - average 2.44509e-07, 2 fixed columns
Coin0506I Presolve 26 (-5) rows, 17 (-3) columns and 78 (-16) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 66.933904
Clp0000I Optimal - objective value 66.933904
Coin0511I After Postsolve, objective 66.933904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.933904
Clp0000I Optimal - objective value 66.933904
Clp0000I Optimal - objective value 66.933904
Coin0511I After Postsolve, objective 66.933904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.9339035 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 20 columns (19 integer (19 of which binary)) and 94 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.537%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.25069
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.58907 iterations 15
Cbc0038I Solution found of -2.58907
Cbc0038I Relaxing continuous gives -2.58907
Cbc0038I Rounding solution of -22.4124 is better than previous of -2.58907

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 20 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -22.4124 to -29.0783 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.8639
Cbc0038I Pass   2: suminf.    1.33138 (5) obj. -32.8639 iterations 7
Cbc0038I Pass   3: suminf.    1.56163 (5) obj. -32.8639 iterations 4
Cbc0038I Pass   4: suminf.    1.36167 (5) obj. -32.8639 iterations 3
Cbc0038I Pass   5: suminf.    0.69279 (3) obj. -32.8639 iterations 7
Cbc0038I Pass   6: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass   7: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass   8: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass   9: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  10: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  11: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass  12: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass  13: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass  14: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  15: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  16: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass  17: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass  18: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass  19: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  20: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  21: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass  22: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass  23: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass  24: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  25: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  26: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass  27: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass  28: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass  29: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  30: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  31: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 20 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -29.0783 - took 0.01 seconds
Cbc0012I Integer solution of -29.07829 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 31 rows 20 columns, reduced to 20 rows 13 columns
Cbc0031I 13 added rows had average density of 14
Cbc0013I At root node, 13 cuts changed objective from -66.933904 to -46.555219 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1233 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 433 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.07829000000001, took 1856 iterations and 6 nodes (0.14 seconds)
Cbc0032I Strong branching done 58 times (500 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-12) rows, 41 (-3) columns and 296 (-64) elements
Clp1000I sum of infeasibilities 0 - average 0, 32 fixed columns
Coin0506I Presolve 7 (-27) rows, 9 (-32) columns and 26 (-270) elements
Clp0029I End of values pass after 9 iterations
Clp0000I Optimal - objective value 65.31631
Clp0000I Optimal - objective value 65.31631
Coin0511I After Postsolve, objective 65.31631, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28938724 - largest nonzero change 2.507619e-05 ( 0.0020584323%) - largest zero change 2.9501137e-05
Clp0000I Optimal - objective value 119.2891
Clp0000I Optimal - objective value 119.2891
Clp0000I Optimal - objective value 119.2891
Coin0511I After Postsolve, objective 119.2891, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 119.2891009 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 40 columns (40 integer (40 of which binary)) and 288 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.994%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 4.91164
Cbc0038I Solution found of -52.6264
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -55.5062
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -55.6264 iterations 23
Cbc0038I Pass   2: suminf.    0.10998 (1) obj. -55.5062 iterations 2
Cbc0038I Pass   3: suminf.    0.38462 (1) obj. -62.6977 iterations 1
Cbc0038I Pass   4: suminf.    3.50785 (9) obj. -55.5062 iterations 11
Cbc0038I Pass   5: suminf.    0.66667 (4) obj. -58.7587 iterations 8
Cbc0038I Pass   6: suminf.    0.66667 (4) obj. -58.7587 iterations 0
Cbc0038I Pass   7: suminf.    0.20155 (3) obj. -55.5062 iterations 3
Cbc0038I Pass   8: suminf.    0.20000 (3) obj. -55.5587 iterations 3
Cbc0038I Pass   9: suminf.    3.22989 (10) obj. -55.5062 iterations 7
Cbc0038I Pass  10: suminf.    0.64000 (4) obj. -56.8787 iterations 10
Cbc0038I Pass  11: suminf.    1.50964 (9) obj. -55.5062 iterations 6
Cbc0038I Pass  12: suminf.    0.23498 (6) obj. -55.5062 iterations 5
Cbc0038I Pass  13: suminf.    0.40475 (2) obj. -55.5062 iterations 4
Cbc0038I Pass  14: suminf.    0.40475 (2) obj. -55.5062 iterations 0
Cbc0038I Pass  15: suminf.    0.17383 (1) obj. -55.5062 iterations 4
Cbc0038I Pass  16: suminf.    0.46154 (1) obj. -65.0543 iterations 1
Cbc0038I Pass  17: suminf.    2.08664 (8) obj. -55.5062 iterations 11
Cbc0038I Pass  18: suminf.    0.51579 (2) obj. -61.9383 iterations 9
Cbc0038I Pass  19: suminf.    0.09745 (1) obj. -55.5062 iterations 3
Cbc0038I Pass  20: suminf.    0.09745 (1) obj. -55.5062 iterations 0
Cbc0038I Pass  21: suminf.    0.46154 (1) obj. -67.0543 iterations 1
Cbc0038I Pass  22: suminf.    4.16874 (10) obj. -55.5062 iterations 10
Cbc0038I Pass  23: suminf.    2.77195 (8) obj. -55.5062 iterations 3
Cbc0038I Pass  24: suminf.    2.44262 (7) obj. -55.5062 iterations 1
Cbc0038I Pass  25: suminf.    1.96718 (6) obj. -55.5062 iterations 2
Cbc0038I Pass  26: suminf.    1.55455 (6) obj. -55.5062 iterations 5
Cbc0038I Pass  27: suminf.    0.07692 (1) obj. -59.0986 iterations 5
Cbc0038I Solution found of -57.0843
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 23 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -61.9523
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  28: suminf.    0.74158 (2) obj. -61.9523 iterations 1
Cbc0038I Pass  29: suminf.    0.35615 (1) obj. -61.9523 iterations 1
Cbc0038I Pass  30: suminf.    0.38462 (1) obj. -62.6977 iterations 2
Cbc0038I Pass  31: suminf.    4.79716 (13) obj. -61.9523 iterations 15
Cbc0038I Pass  32: suminf.    1.60137 (7) obj. -61.9523 iterations 9
Cbc0038I Pass  33: suminf.    0.83333 (4) obj. -62.7798 iterations 7
Cbc0038I Pass  34: suminf.    0.44491 (6) obj. -61.9523 iterations 4
Cbc0038I Pass  35: suminf.    0.44121 (6) obj. -61.9523 iterations 1
Cbc0038I Pass  36: suminf.    0.47473 (6) obj. -61.9523 iterations 6
Cbc0038I Pass  37: suminf.    0.31458 (3) obj. -61.9523 iterations 1
Cbc0038I Pass  38: suminf.    0.68320 (3) obj. -61.9523 iterations 5
Cbc0038I Pass  39: suminf.    0.34362 (1) obj. -61.9523 iterations 3
Cbc0038I Pass  40: suminf.    0.46154 (1) obj. -67.0543 iterations 2
Cbc0038I Pass  41: suminf.    5.04119 (13) obj. -61.9523 iterations 14
Cbc0038I Pass  42: suminf.    1.51127 (7) obj. -61.9523 iterations 9
Cbc0038I Pass  43: suminf.    1.51127 (7) obj. -61.9523 iterations 0
Cbc0038I Pass  44: suminf.    0.34362 (1) obj. -61.9523 iterations 4
Cbc0038I Pass  45: suminf.    0.34362 (1) obj. -61.9523 iterations 2
Cbc0038I Pass  46: suminf.    0.46154 (1) obj. -67.0543 iterations 2
Cbc0038I Pass  47: suminf.    1.37547 (9) obj. -61.9523 iterations 10
Cbc0038I Pass  48: suminf.    0.28924 (3) obj. -61.9523 iterations 8
Cbc0038I Pass  49: suminf.    0.95131 (4) obj. -61.9523 iterations 4
Cbc0038I Pass  50: suminf.    0.89684 (2) obj. -61.9523 iterations 2
Cbc0038I Pass  51: suminf.    0.34362 (1) obj. -61.9523 iterations 3
Cbc0038I Pass  52: suminf.    0.46154 (1) obj. -67.0543 iterations 2
Cbc0038I Pass  53: suminf.    1.85102 (7) obj. -61.9523 iterations 9
Cbc0038I Pass  54: suminf.    0.75582 (2) obj. -61.9523 iterations 5
Cbc0038I Pass  55: suminf.    0.46154 (1) obj. -65.0543 iterations 5
Cbc0038I Pass  56: suminf.    0.42000 (1) obj. -61.9523 iterations 2
Cbc0038I Pass  57: suminf.    1.44123 (6) obj. -61.9523 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 40 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -57.0843 - took 0.02 seconds
Cbc0012I Integer solution of -57.08431 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 40 columns, reduced to 2 rows 3 columns
Cbc0031I 5 added rows had average density of 4.4
Cbc0013I At root node, 16 cuts changed objective from -81.423689 to -57.08431 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 72 row cuts average 2.4 elements, 20 column cuts (20 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 15 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 38 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -57.08431000000002, took 60 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 20 (-4) columns and 94 (-35) elements
Clp1000I sum of infeasibilities 7.57979e-06 - average 2.44509e-07, 2 fixed columns
Coin0506I Presolve 26 (-5) rows, 17 (-3) columns and 78 (-16) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 66.933904
Clp0000I Optimal - objective value 66.933904
Coin0511I After Postsolve, objective 66.933904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 66.933904
Clp0000I Optimal - objective value 66.933904
Clp0000I Optimal - objective value 66.933904
Coin0511I After Postsolve, objective 66.933904, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 66.9339035 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 31 rows, 20 columns (19 integer (19 of which binary)) and 94 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.537%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.25069
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.58907 iterations 15
Cbc0038I Solution found of -2.58907
Cbc0038I Relaxing continuous gives -2.58907
Cbc0038I Rounding solution of -22.4124 is better than previous of -2.58907

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 20 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -22.4124 to -29.0783 (0.01 seconds)
Cbc0038I Round again with cutoff of -32.8639
Cbc0038I Pass   2: suminf.    1.33138 (5) obj. -32.8639 iterations 7
Cbc0038I Pass   3: suminf.    1.56163 (5) obj. -32.8639 iterations 4
Cbc0038I Pass   4: suminf.    1.36167 (5) obj. -32.8639 iterations 3
Cbc0038I Pass   5: suminf.    0.69279 (3) obj. -32.8639 iterations 7
Cbc0038I Pass   6: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass   7: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass   8: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass   9: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  10: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  11: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass  12: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass  13: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass  14: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  15: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  16: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass  17: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass  18: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass  19: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  20: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  21: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass  22: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass  23: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass  24: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  25: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  26: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I Pass  27: suminf.    0.94338 (3) obj. -32.8639 iterations 1
Cbc0038I Pass  28: suminf.    0.70966 (3) obj. -32.8639 iterations 4
Cbc0038I Pass  29: suminf.    0.54977 (2) obj. -32.8639 iterations 1
Cbc0038I Pass  30: suminf.    0.69279 (3) obj. -32.8639 iterations 2
Cbc0038I Pass  31: suminf.    1.03403 (3) obj. -32.8639 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 31 rows 20 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -29.0783 - took 0.01 seconds
Cbc0012I Integer solution of -29.07829 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 31 rows 20 columns, reduced to 20 rows 13 columns
Cbc0031I 13 added rows had average density of 14
Cbc0013I At root node, 13 cuts changed objective from -66.933904 to -46.555219 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1233 row cuts average 3.3 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 433 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 56 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.07829000000001, took 1856 iterations and 6 nodes (0.16 seconds)
Cbc0032I Strong branching done 58 times (500 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 31 (-16) rows, 38 (-7) columns and 260 (-101) elements
Clp1000I sum of infeasibilities 4.44089e-16 - average 1.43255e-17, 9 fixed columns
Coin0506I Presolve 19 (-12) rows, 23 (-15) columns and 127 (-133) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 80.845758
Clp0000I Optimal - objective value 80.845758
Coin0511I After Postsolve, objective 80.845758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.30557178 - largest nonzero change 0 ( 0%) - largest zero change 2.122417e-05
Clp0000I Optimal - objective value 80.845758
Clp0000I Optimal - objective value 80.845758
Clp0000I Optimal - objective value 80.845758
Coin0511I After Postsolve, objective 80.845758, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.84575782 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 39 columns (39 integer (39 of which binary)) and 266 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.627%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.18245
Cbc0038I Pass   1: suminf.    0.55817 (7) obj. -31.2361 iterations 11
Cbc0038I Pass   2: suminf.    0.55817 (7) obj. -31.2361 iterations 1
Cbc0038I Solution found of -9.99608
Cbc0038I Rounding solution of -15.209 is better than previous of -9.99608

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -15.209 to -22.1813 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.1048
Cbc0038I Pass   3: suminf.    0.55817 (7) obj. -31.2361 iterations 0
Cbc0038I Pass   4: suminf.    0.55817 (7) obj. -31.2361 iterations 1
Cbc0038I Pass   5: suminf.    0.29198 (2) obj. -26.1048 iterations 11
Cbc0038I Pass   6: suminf.    0.28697 (6) obj. -26.1048 iterations 2
Cbc0038I Pass   7: suminf.    0.49044 (1) obj. -26.1048 iterations 10
Cbc0038I Pass   8: suminf.    0.12500 (1) obj. -29.1813 iterations 3
Cbc0038I Pass   9: suminf.    0.60682 (4) obj. -28.6995 iterations 6
Cbc0038I Pass  10: suminf.    0.60682 (4) obj. -28.6995 iterations 1
Cbc0038I Pass  11: suminf.    0.13456 (1) obj. -26.1048 iterations 7
Cbc0038I Pass  12: suminf.    0.12500 (1) obj. -26.1813 iterations 3
Cbc0038I Pass  13: suminf.    0.73947 (5) obj. -28.4321 iterations 9
Cbc0038I Pass  14: suminf.    0.56579 (5) obj. -26.1048 iterations 1
Cbc0038I Pass  15: suminf.    0.24044 (2) obj. -26.1048 iterations 7
Cbc0038I Pass  16: suminf.    0.24044 (2) obj. -26.1048 iterations 0
Cbc0038I Pass  17: suminf.    0.27615 (2) obj. -26.1048 iterations 3
Cbc0038I Pass  18: suminf.    1.05479 (4) obj. -26.1048 iterations 12
Cbc0038I Pass  19: suminf.    0.65514 (3) obj. -26.1048 iterations 5
Cbc0038I Pass  20: suminf.    1.08881 (3) obj. -26.1048 iterations 5
Cbc0038I Pass  21: suminf.    0.58957 (3) obj. -27.367 iterations 2
Cbc0038I Pass  22: suminf.    0.93051 (4) obj. -26.1048 iterations 6
Cbc0038I Pass  23: suminf.    0.93051 (4) obj. -26.1048 iterations 0
Cbc0038I Pass  24: suminf.    0.33774 (3) obj. -26.1048 iterations 4
Cbc0038I Pass  25: suminf.    0.25438 (2) obj. -26.1048 iterations 3
Cbc0038I Pass  26: suminf.    0.93030 (3) obj. -26.1048 iterations 3
Cbc0038I Pass  27: suminf.    0.79302 (3) obj. -26.1048 iterations 1
Cbc0038I Pass  28: suminf.    0.30991 (2) obj. -26.1048 iterations 5
Cbc0038I Pass  29: suminf.    1.58872 (6) obj. -26.1048 iterations 6
Cbc0038I Pass  30: suminf.    1.58872 (6) obj. -26.1048 iterations 1
Cbc0038I Pass  31: suminf.    0.69611 (6) obj. -26.1048 iterations 7
Cbc0038I Pass  32: suminf.    0.69272 (6) obj. -26.1048 iterations 1
Cbc0038I Rounding solution of -29.0783 is better than previous of -22.1813

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 26 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -35.5458
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.96255 (12) obj. -35.5458 iterations 1
Cbc0038I Pass  33: suminf.    0.78500 (8) obj. -35.5458 iterations 1
Cbc0038I Pass  34: suminf.    1.15878 (7) obj. -35.5458 iterations 10
Cbc0038I Pass  35: suminf.    0.32944 (2) obj. -35.5458 iterations 8
Cbc0038I Pass  36: suminf.    0.26786 (2) obj. -36.0384 iterations 4
Cbc0038I Pass  37: suminf.    0.32944 (2) obj. -35.5458 iterations 5
Cbc0038I Pass  38: suminf.    0.95476 (7) obj. -35.5458 iterations 6
Cbc0038I Pass  39: suminf.    0.95476 (7) obj. -35.5458 iterations 0
Cbc0038I Pass  40: suminf.    0.96844 (4) obj. -35.5458 iterations 12
Cbc0038I Pass  41: suminf.    0.96844 (4) obj. -35.5458 iterations 1
Cbc0038I Pass  42: suminf.    1.23832 (4) obj. -35.5458 iterations 4
Cbc0038I Pass  43: suminf.    1.18854 (4) obj. -35.5458 iterations 5
Cbc0038I Pass  44: suminf.    1.00962 (4) obj. -35.5458 iterations 4
Cbc0038I Pass  45: suminf.    2.26234 (9) obj. -35.5458 iterations 13
Cbc0038I Pass  46: suminf.    1.85967 (7) obj. -35.5458 iterations 3
Cbc0038I Pass  47: suminf.    0.94560 (3) obj. -35.5458 iterations 7
Cbc0038I Pass  48: suminf.    0.65799 (4) obj. -35.5458 iterations 3
Cbc0038I Pass  49: suminf.    0.65802 (4) obj. -35.5458 iterations 2
Cbc0038I Pass  50: suminf.    1.91832 (6) obj. -35.5458 iterations 6
Cbc0038I Pass  51: suminf.    1.17692 (4) obj. -35.5458 iterations 3
Cbc0038I Pass  52: suminf.    0.55844 (2) obj. -35.5458 iterations 4
Cbc0038I Pass  53: suminf.    0.55844 (2) obj. -35.5458 iterations 1
Cbc0038I Pass  54: suminf.    0.62987 (2) obj. -35.5458 iterations 2
Cbc0038I Pass  55: suminf.    1.75255 (6) obj. -35.5458 iterations 13
Cbc0038I Pass  56: suminf.    1.05924 (5) obj. -35.5458 iterations 6
Cbc0038I Pass  57: suminf.    0.99608 (4) obj. -35.5458 iterations 6
Cbc0038I Pass  58: suminf.    0.86408 (4) obj. -35.5458 iterations 2
Cbc0038I Pass  59: suminf.    0.99608 (4) obj. -35.5458 iterations 4
Cbc0038I Pass  60: suminf.    2.31641 (6) obj. -35.5458 iterations 7
Cbc0038I Pass  61: suminf.    1.21844 (4) obj. -35.5458 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 39 columns, reduced to 23 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -29.0783 - took 0.02 seconds
Cbc0012I Integer solution of -29.07829 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 9.8333333
Cbc0013I At root node, 12 cuts changed objective from -61.415386 to -29.334954 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 888 row cuts average 3.4 elements, 13 column cuts (13 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 451 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 116 row cuts average 9.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 239 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 36 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.760 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.07829 best solution, best possible -29.334954 (1.46 seconds)
Cbc0001I Search completed - best objective -29.07829000000001, took 976 iterations and 2 nodes (1.54 seconds)
Cbc0032I Strong branching done 28 times (141 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.54

