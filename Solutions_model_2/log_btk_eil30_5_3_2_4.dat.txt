Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 5.67558e-06 - average 1.11286e-07, 5 fixed columns
Coin0506I Presolve 39 (-12) rows, 23 (-6) columns and 116 (-36) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Coin0511I After Postsolve, objective 88.308968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Coin0511I After Postsolve, objective 88.308968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.30896805 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.01381
Cbc0038I Pass   1: suminf.    0.41129 (1) obj. -42.0382 iterations 17
Cbc0038I Solution found of -15.93
Cbc0038I Relaxing continuous gives -15.93
Cbc0038I Rounding solution of -32.7844 is better than previous of -15.93

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -32.7844 to -36.058 (0.01 seconds)
Cbc0038I Round again with cutoff of -40.8339
Cbc0038I Pass   2: suminf.    0.41129 (1) obj. -42.0382 iterations 0
Cbc0038I Pass   3: suminf.    0.43845 (1) obj. -40.8339 iterations 1
Cbc0038I Pass   4: suminf.    2.27888 (6) obj. -40.8339 iterations 8
Cbc0038I Pass   5: suminf.    2.15270 (6) obj. -40.8339 iterations 4
Cbc0038I Pass   6: suminf.    0.50595 (2) obj. -40.8339 iterations 8
Cbc0038I Pass   7: suminf.    0.50595 (2) obj. -40.8339 iterations 0
Cbc0038I Pass   8: suminf.    0.64359 (4) obj. -40.8339 iterations 4
Cbc0038I Pass   9: suminf.    0.58553 (3) obj. -40.8339 iterations 2
Cbc0038I Pass  10: suminf.    0.62025 (2) obj. -40.8339 iterations 4
Cbc0038I Pass  11: suminf.    0.54057 (2) obj. -40.8339 iterations 1
Cbc0038I Pass  12: suminf.    0.41129 (1) obj. -42.0382 iterations 2
Cbc0038I Pass  13: suminf.    0.43845 (1) obj. -40.8339 iterations 1
Cbc0038I Pass  14: suminf.    1.95244 (5) obj. -40.8339 iterations 7
Cbc0038I Pass  15: suminf.    0.35236 (3) obj. -40.8339 iterations 4
Cbc0038I Pass  16: suminf.    0.34605 (3) obj. -40.8339 iterations 1
Cbc0038I Pass  17: suminf.    0.87904 (3) obj. -40.8339 iterations 5
Cbc0038I Pass  18: suminf.    0.67951 (3) obj. -40.8339 iterations 1
Cbc0038I Pass  19: suminf.    0.11458 (1) obj. -40.8339 iterations 4
Cbc0038I Pass  20: suminf.    0.11458 (1) obj. -40.8339 iterations 0
Cbc0038I Pass  21: suminf.    0.27965 (1) obj. -40.8339 iterations 2
Cbc0038I Pass  22: suminf.    1.05825 (7) obj. -40.8339 iterations 12
Cbc0038I Pass  23: suminf.    0.33790 (6) obj. -40.8339 iterations 8
Cbc0038I Pass  24: suminf.    2.29662 (6) obj. -40.8339 iterations 7
Cbc0038I Pass  25: suminf.    2.17290 (5) obj. -40.8339 iterations 1
Cbc0038I Pass  26: suminf.    0.59408 (4) obj. -40.8339 iterations 4
Cbc0038I Pass  27: suminf.    0.41129 (5) obj. -40.8339 iterations 3
Cbc0038I Pass  28: suminf.    0.69934 (3) obj. -40.8339 iterations 7
Cbc0038I Pass  29: suminf.    0.41997 (2) obj. -40.8339 iterations 3
Cbc0038I Pass  30: suminf.    0.37314 (2) obj. -40.8339 iterations 5
Cbc0038I Pass  31: suminf.    0.37314 (2) obj. -40.8339 iterations 2
Cbc0038I Rounding solution of -36.9798 is better than previous of -36.058

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -49.4302
Cbc0038I Pass  31: suminf.    0.85267 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  32: suminf.    1.41644 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  33: suminf.    1.00064 (5) obj. -49.4302 iterations 2
Cbc0038I Pass  34: suminf.    0.98619 (4) obj. -49.4302 iterations 1
Cbc0038I Pass  35: suminf.    1.14473 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  36: suminf.    1.00419 (4) obj. -49.4302 iterations 1
Cbc0038I Pass  37: suminf.    1.01094 (4) obj. -49.4302 iterations 5
Cbc0038I Pass  38: suminf.    0.79299 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  39: suminf.    0.67079 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  40: suminf.    0.55481 (2) obj. -49.4302 iterations 3
Cbc0038I Pass  41: suminf.    0.45086 (2) obj. -49.4302 iterations 1
Cbc0038I Pass  42: suminf.    0.72350 (6) obj. -49.4302 iterations 3
Cbc0038I Pass  43: suminf.    0.55481 (2) obj. -49.4302 iterations 4
Cbc0038I Pass  44: suminf.    2.35102 (7) obj. -49.4302 iterations 8
Cbc0038I Pass  45: suminf.    1.42481 (5) obj. -49.4302 iterations 3
Cbc0038I Pass  46: suminf.    0.53635 (3) obj. -49.4302 iterations 2
Cbc0038I Pass  47: suminf.    0.98483 (5) obj. -49.4302 iterations 7
Cbc0038I Pass  48: suminf.    0.80876 (8) obj. -49.4302 iterations 3
Cbc0038I Pass  49: suminf.    0.80876 (8) obj. -49.4302 iterations 0
Cbc0038I Pass  50: suminf.    2.47865 (6) obj. -49.4302 iterations 7
Cbc0038I Pass  51: suminf.    2.04109 (5) obj. -49.4302 iterations 3
Cbc0038I Pass  52: suminf.    2.04026 (5) obj. -49.4302 iterations 1
Cbc0038I Pass  53: suminf.    2.18549 (7) obj. -49.4302 iterations 6
Cbc0038I Pass  54: suminf.    1.23051 (5) obj. -49.4302 iterations 2
Cbc0038I Pass  55: suminf.    0.86003 (4) obj. -49.4302 iterations 2
Cbc0038I Pass  56: suminf.    0.75813 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  57: suminf.    1.21655 (4) obj. -49.4302 iterations 2
Cbc0038I Pass  58: suminf.    1.96511 (6) obj. -49.4302 iterations 6
Cbc0038I Pass  59: suminf.    0.63748 (4) obj. -49.4302 iterations 5
Cbc0038I Pass  60: suminf.    0.59944 (4) obj. -49.4302 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.9798 - took 0.06 seconds
Cbc0012I Integer solution of -36.9798 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 31 rows 20 columns
Cbc0031I 13 added rows had average density of 15.846154
Cbc0013I At root node, 13 cuts changed objective from -83.815714 to -49.507685 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1562 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1222 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -36.9798, took 2913 iterations and 6 nodes (0.21 seconds)
Cbc0032I Strong branching done 76 times (769 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-11) rows, 56 (-4) columns and 530 (-82) elements
Clp1000I sum of infeasibilities 0 - average 0, 42 fixed columns
Coin0506I Presolve 11 (-40) rows, 14 (-42) columns and 44 (-486) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 1.1930919 - largest nonzero change 0 ( 0%) - largest zero change 2.5806453e-05
Clp0000I Optimal - objective value 112.1877
Clp0000I Optimal - objective value 112.1877
Coin0511I After Postsolve, objective 112.1877, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21471658 - largest nonzero change 2.4281376e-05 ( 0.0020584323%) - largest zero change 2.9133261e-05
Clp0000I Optimal - objective value 198.83627
Clp0000I Optimal - objective value 198.83627
Clp0000I Optimal - objective value 198.83627
Coin0511I After Postsolve, objective 198.83627, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 198.8362656 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 56 columns (56 integer (56 of which binary)) and 534 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.712%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 4.01048
Cbc0038I Pass   1: suminf.    2.71685 (15) obj. -145.969 iterations 7
Cbc0038I Pass   2: suminf.    2.71685 (15) obj. -145.969 iterations 1
Cbc0038I Solution found of -83.6704
Cbc0038I Rounding solution of -98.0056 is better than previous of -83.6704

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -106.331
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.71685 (15) obj. -145.969 iterations 0
Cbc0038I Pass   4: suminf.    2.71685 (15) obj. -145.969 iterations 1
Cbc0038I Pass   5: suminf.    0.56215 (7) obj. -106.331 iterations 28
Cbc0038I Pass   6: suminf.    0.01667 (1) obj. -107.657 iterations 6
Cbc0038I Pass   7: suminf.    0.01667 (1) obj. -107.657 iterations 0
Cbc0038I Pass   8: suminf.    0.11402 (2) obj. -106.331 iterations 2
Cbc0038I Pass   9: suminf.    0.89066 (5) obj. -126.579 iterations 10
Cbc0038I Pass  10: suminf.    0.89066 (5) obj. -126.579 iterations 3
Cbc0038I Pass  11: suminf.    0.04065 (2) obj. -106.331 iterations 6
Cbc0038I Pass  12: suminf.    0.01667 (1) obj. -106.657 iterations 2
Cbc0038I Pass  13: suminf.    1.62068 (5) obj. -106.331 iterations 14
Cbc0038I Pass  14: suminf.    1.07710 (4) obj. -106.331 iterations 4
Cbc0038I Pass  15: suminf.    0.47249 (3) obj. -106.331 iterations 3
Cbc0038I Pass  16: suminf.    0.47249 (3) obj. -106.331 iterations 0
Cbc0038I Pass  17: suminf.    0.32764 (3) obj. -106.331 iterations 1
Cbc0038I Pass  18: suminf.    0.32764 (3) obj. -106.331 iterations 0
Cbc0038I Pass  19: suminf.    0.89005 (6) obj. -106.331 iterations 11
Cbc0038I Pass  20: suminf.    0.89005 (6) obj. -106.331 iterations 3
Cbc0038I Pass  21: suminf.    0.53416 (3) obj. -106.331 iterations 5
Cbc0038I Pass  22: suminf.    0.44040 (3) obj. -107.268 iterations 1
Cbc0038I Pass  23: suminf.    0.53416 (3) obj. -106.331 iterations 3
Cbc0038I Pass  24: suminf.    1.79909 (9) obj. -116.836 iterations 18
Cbc0038I Pass  25: suminf.    1.79909 (9) obj. -116.836 iterations 6
Cbc0038I Pass  26: suminf.    0.83416 (3) obj. -106.331 iterations 12
Cbc0038I Pass  27: suminf.    0.44040 (3) obj. -110.268 iterations 3
Cbc0038I Pass  28: suminf.    2.77391 (11) obj. -106.331 iterations 13
Cbc0038I Pass  29: suminf.    2.77391 (11) obj. -106.331 iterations 0
Cbc0038I Pass  30: suminf.    0.76717 (3) obj. -106.331 iterations 13
Cbc0038I Pass  31: suminf.    0.49653 (3) obj. -109.037 iterations 3
Cbc0038I Pass  32: suminf.    1.28112 (5) obj. -106.331 iterations 4
Cbc0038I Rounding solution of -100.828 is better than previous of -98.0056

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 56 columns, reduced to 13 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -121.315
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.71685 (15) obj. -145.969 iterations 0
Cbc0038I Pass  33: suminf.    2.71685 (15) obj. -145.969 iterations 1
Cbc0038I Pass  34: suminf.    0.60680 (7) obj. -121.315 iterations 26
Cbc0038I Pass  35: suminf.    0.51851 (6) obj. -122.996 iterations 2
Cbc0038I Pass  36: suminf.    0.75169 (3) obj. -121.315 iterations 10
Cbc0038I Pass  37: suminf.    0.75169 (3) obj. -121.315 iterations 1
Cbc0038I Pass  38: suminf.    0.45620 (3) obj. -121.315 iterations 3
Cbc0038I Pass  39: suminf.    0.45620 (3) obj. -121.315 iterations 1
Cbc0038I Pass  40: suminf.    0.75169 (3) obj. -121.315 iterations 3
Cbc0038I Pass  41: suminf.    1.12882 (5) obj. -121.315 iterations 6
Cbc0038I Pass  42: suminf.    1.12882 (5) obj. -121.315 iterations 1
Cbc0038I Pass  43: suminf.    0.75169 (3) obj. -121.315 iterations 5
Cbc0038I Pass  44: suminf.    0.75169 (3) obj. -121.315 iterations 1
Cbc0038I Pass  45: suminf.    0.45620 (3) obj. -121.315 iterations 3
Cbc0038I Pass  46: suminf.    0.45620 (3) obj. -121.315 iterations 1
Cbc0038I Pass  47: suminf.    0.75169 (3) obj. -121.315 iterations 3
Cbc0038I Pass  48: suminf.    0.65165 (6) obj. -121.315 iterations 10
Cbc0038I Pass  49: suminf.    0.55130 (5) obj. -123.001 iterations 4
Cbc0038I Pass  50: suminf.    0.63501 (3) obj. -121.315 iterations 7
Cbc0038I Pass  51: suminf.    0.51269 (3) obj. -122.539 iterations 2
Cbc0038I Pass  52: suminf.    1.46056 (7) obj. -121.315 iterations 8
Cbc0038I Pass  53: suminf.    1.46056 (7) obj. -121.315 iterations 2
Cbc0038I Pass  54: suminf.    2.60207 (11) obj. -121.315 iterations 8
Cbc0038I Pass  55: suminf.    2.49149 (10) obj. -121.315 iterations 5
Cbc0038I Pass  56: suminf.    0.88562 (5) obj. -121.315 iterations 13
Cbc0038I Pass  57: suminf.    0.83628 (5) obj. -121.315 iterations 3
Cbc0038I Pass  58: suminf.    0.85800 (5) obj. -121.315 iterations 3
Cbc0038I Pass  59: suminf.    0.85800 (5) obj. -121.315 iterations 2
Cbc0038I Pass  60: suminf.    0.88562 (5) obj. -121.315 iterations 5
Cbc0038I Pass  61: suminf.    0.86167 (4) obj. -121.315 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 56 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -100.828 - took 0.02 seconds
Cbc0012I Integer solution of -100.8279 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 56 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -108.13407 found by DiveCoefficient after 586 iterations and 0 nodes (1.49 seconds)
Cbc0031I 25 added rows had average density of 7.88
Cbc0013I At root node, 25 cuts changed objective from -181.25412 to -108.1341 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 367 row cuts average 2.8 elements, 17 column cuts (17 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 252 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 15 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 22.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.744 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 2.7832464e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -108.13407, took 586 iterations and 0 nodes (1.49 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.93   (Wallclock seconds):       1.49

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 29 (-3) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 5.67558e-06 - average 1.11286e-07, 5 fixed columns
Coin0506I Presolve 39 (-12) rows, 23 (-6) columns and 116 (-36) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Coin0511I After Postsolve, objective 88.308968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Clp0000I Optimal - objective value 88.308968
Coin0511I After Postsolve, objective 88.308968, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.30896805 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.01381
Cbc0038I Pass   1: suminf.    0.41129 (1) obj. -42.0382 iterations 17
Cbc0038I Solution found of -15.93
Cbc0038I Relaxing continuous gives -15.93
Cbc0038I Rounding solution of -32.7844 is better than previous of -15.93

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -32.7844 to -36.058 (0.02 seconds)
Cbc0038I Round again with cutoff of -40.8339
Cbc0038I Pass   2: suminf.    0.41129 (1) obj. -42.0382 iterations 0
Cbc0038I Pass   3: suminf.    0.43845 (1) obj. -40.8339 iterations 1
Cbc0038I Pass   4: suminf.    2.27888 (6) obj. -40.8339 iterations 8
Cbc0038I Pass   5: suminf.    2.15270 (6) obj. -40.8339 iterations 4
Cbc0038I Pass   6: suminf.    0.50595 (2) obj. -40.8339 iterations 8
Cbc0038I Pass   7: suminf.    0.50595 (2) obj. -40.8339 iterations 0
Cbc0038I Pass   8: suminf.    0.64359 (4) obj. -40.8339 iterations 4
Cbc0038I Pass   9: suminf.    0.58553 (3) obj. -40.8339 iterations 2
Cbc0038I Pass  10: suminf.    0.62025 (2) obj. -40.8339 iterations 4
Cbc0038I Pass  11: suminf.    0.54057 (2) obj. -40.8339 iterations 1
Cbc0038I Pass  12: suminf.    0.41129 (1) obj. -42.0382 iterations 2
Cbc0038I Pass  13: suminf.    0.43845 (1) obj. -40.8339 iterations 1
Cbc0038I Pass  14: suminf.    1.95244 (5) obj. -40.8339 iterations 7
Cbc0038I Pass  15: suminf.    0.35236 (3) obj. -40.8339 iterations 4
Cbc0038I Pass  16: suminf.    0.34605 (3) obj. -40.8339 iterations 1
Cbc0038I Pass  17: suminf.    0.87904 (3) obj. -40.8339 iterations 5
Cbc0038I Pass  18: suminf.    0.67951 (3) obj. -40.8339 iterations 1
Cbc0038I Pass  19: suminf.    0.11458 (1) obj. -40.8339 iterations 4
Cbc0038I Pass  20: suminf.    0.11458 (1) obj. -40.8339 iterations 0
Cbc0038I Pass  21: suminf.    0.27965 (1) obj. -40.8339 iterations 2
Cbc0038I Pass  22: suminf.    1.05825 (7) obj. -40.8339 iterations 12
Cbc0038I Pass  23: suminf.    0.33790 (6) obj. -40.8339 iterations 8
Cbc0038I Pass  24: suminf.    2.29662 (6) obj. -40.8339 iterations 7
Cbc0038I Pass  25: suminf.    2.17290 (5) obj. -40.8339 iterations 1
Cbc0038I Pass  26: suminf.    0.59408 (4) obj. -40.8339 iterations 4
Cbc0038I Pass  27: suminf.    0.41129 (5) obj. -40.8339 iterations 3
Cbc0038I Pass  28: suminf.    0.69934 (3) obj. -40.8339 iterations 7
Cbc0038I Pass  29: suminf.    0.41997 (2) obj. -40.8339 iterations 3
Cbc0038I Pass  30: suminf.    0.37314 (2) obj. -40.8339 iterations 5
Cbc0038I Pass  31: suminf.    0.37314 (2) obj. -40.8339 iterations 2
Cbc0038I Rounding solution of -36.9798 is better than previous of -36.058

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 42 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -49.4302
Cbc0038I Pass  31: suminf.    0.85267 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  32: suminf.    1.41644 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  33: suminf.    1.00064 (5) obj. -49.4302 iterations 2
Cbc0038I Pass  34: suminf.    0.98619 (4) obj. -49.4302 iterations 1
Cbc0038I Pass  35: suminf.    1.14473 (4) obj. -49.4302 iterations 3
Cbc0038I Pass  36: suminf.    1.00419 (4) obj. -49.4302 iterations 1
Cbc0038I Pass  37: suminf.    1.01094 (4) obj. -49.4302 iterations 5
Cbc0038I Pass  38: suminf.    0.79299 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  39: suminf.    0.67079 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  40: suminf.    0.55481 (2) obj. -49.4302 iterations 3
Cbc0038I Pass  41: suminf.    0.45086 (2) obj. -49.4302 iterations 1
Cbc0038I Pass  42: suminf.    0.72350 (6) obj. -49.4302 iterations 3
Cbc0038I Pass  43: suminf.    0.55481 (2) obj. -49.4302 iterations 4
Cbc0038I Pass  44: suminf.    2.35102 (7) obj. -49.4302 iterations 8
Cbc0038I Pass  45: suminf.    1.42481 (5) obj. -49.4302 iterations 3
Cbc0038I Pass  46: suminf.    0.53635 (3) obj. -49.4302 iterations 2
Cbc0038I Pass  47: suminf.    0.98483 (5) obj. -49.4302 iterations 7
Cbc0038I Pass  48: suminf.    0.80876 (8) obj. -49.4302 iterations 3
Cbc0038I Pass  49: suminf.    0.80876 (8) obj. -49.4302 iterations 0
Cbc0038I Pass  50: suminf.    2.47865 (6) obj. -49.4302 iterations 7
Cbc0038I Pass  51: suminf.    2.04109 (5) obj. -49.4302 iterations 3
Cbc0038I Pass  52: suminf.    2.04026 (5) obj. -49.4302 iterations 1
Cbc0038I Pass  53: suminf.    2.18549 (7) obj. -49.4302 iterations 6
Cbc0038I Pass  54: suminf.    1.23051 (5) obj. -49.4302 iterations 2
Cbc0038I Pass  55: suminf.    0.86003 (4) obj. -49.4302 iterations 2
Cbc0038I Pass  56: suminf.    0.75813 (3) obj. -49.4302 iterations 1
Cbc0038I Pass  57: suminf.    1.21655 (4) obj. -49.4302 iterations 2
Cbc0038I Pass  58: suminf.    1.96511 (6) obj. -49.4302 iterations 6
Cbc0038I Pass  59: suminf.    0.63748 (4) obj. -49.4302 iterations 5
Cbc0038I Pass  60: suminf.    0.59944 (4) obj. -49.4302 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 29 columns, reduced to 33 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.9798 - took 0.03 seconds
Cbc0012I Integer solution of -36.9798 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 29 columns, reduced to 31 rows 20 columns
Cbc0031I 13 added rows had average density of 15.846154
Cbc0013I At root node, 13 cuts changed objective from -83.815714 to -49.507685 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1562 row cuts average 3.6 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1222 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 102 row cuts average 24.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -36.9798, took 2913 iterations and 6 nodes (0.21 seconds)
Cbc0032I Strong branching done 76 times (769 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 55 (-6) columns and 510 (-103) elements
Clp1000I sum of infeasibilities 9.10255e-10 - average 1.82051e-11, 39 fixed columns
Coin0506I Presolve 14 (-36) rows, 16 (-39) columns and 54 (-456) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 1.0339623 - largest nonzero change 2.0535991e-05 ( 0.0016870206%) - largest zero change 1.6147009e-05
Clp0000I Optimal - objective value 28.839538
Clp0000I Optimal - objective value 28.839538
Coin0511I After Postsolve, objective 28.839538, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21533256 - largest nonzero change 2.8808069e-05 ( 0.0024421787%) - largest zero change 2.9435979e-05
Clp0000I Optimal - objective value 116.08039
Clp0000I Optimal - objective value 116.08039
Clp0000I Optimal - objective value 116.08039
Coin0511I After Postsolve, objective 116.08039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.080387 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 55 columns (55 integer (55 of which binary)) and 514 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.699%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.53836
Cbc0038I Pass   1: suminf.    2.13485 (12) obj. -57.6055 iterations 7
Cbc0038I Pass   2: suminf.    2.13485 (12) obj. -57.6055 iterations 1
Cbc0038I Solution found of -11.1396
Cbc0038I Rounding solution of -18.9635 is better than previous of -11.1396

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -26.641
Cbc0038I Pass   3: suminf.    2.13485 (12) obj. -57.6055 iterations 0
Cbc0038I Pass   4: suminf.    2.13485 (12) obj. -57.6055 iterations 1
Cbc0038I Pass   5: suminf.    0.34954 (1) obj. -26.641 iterations 15
Cbc0038I Pass   6: suminf.    0.45968 (1) obj. -35.1019 iterations 1
Cbc0038I Pass   7: suminf.    0.76941 (4) obj. -26.641 iterations 13
Cbc0038I Pass   8: suminf.    0.76941 (4) obj. -26.641 iterations 2
Cbc0038I Pass   9: suminf.    1.01388 (9) obj. -26.641 iterations 3
Cbc0038I Pass  10: suminf.    0.75283 (2) obj. -26.641 iterations 1
Cbc0038I Pass  11: suminf.    0.64326 (2) obj. -26.641 iterations 1
Cbc0038I Pass  12: suminf.    0.53997 (2) obj. -31.2216 iterations 1
Cbc0038I Pass  13: suminf.    0.64158 (3) obj. -34.6718 iterations 7
Cbc0038I Pass  14: suminf.    0.64158 (3) obj. -34.6718 iterations 2
Cbc0038I Pass  15: suminf.    0.58627 (2) obj. -26.641 iterations 4
Cbc0038I Pass  16: suminf.    0.49158 (2) obj. -27.8718 iterations 2
Cbc0038I Pass  17: suminf.    1.26623 (6) obj. -39.5954 iterations 9
Cbc0038I Pass  18: suminf.    1.26623 (6) obj. -39.5954 iterations 0
Cbc0038I Pass  19: suminf.    1.11531 (8) obj. -26.641 iterations 8
Cbc0038I Pass  20: suminf.    0.59797 (7) obj. -26.641 iterations 1
Cbc0038I Pass  21: suminf.    0.91241 (4) obj. -26.641 iterations 9
Cbc0038I Pass  22: suminf.    0.91241 (4) obj. -26.641 iterations 1
Cbc0038I Pass  23: suminf.    0.88443 (4) obj. -26.641 iterations 2
Cbc0038I Pass  24: suminf.    0.88443 (4) obj. -26.641 iterations 1
Cbc0038I Pass  25: suminf.    0.91241 (4) obj. -26.641 iterations 2
Cbc0038I Pass  26: suminf.    1.42680 (8) obj. -26.641 iterations 20
Cbc0038I Pass  27: suminf.    1.42065 (7) obj. -26.641 iterations 3
Cbc0038I Pass  28: suminf.    1.76863 (6) obj. -26.641 iterations 11
Cbc0038I Pass  29: suminf.    1.26058 (5) obj. -26.641 iterations 4
Cbc0038I Pass  30: suminf.    1.51382 (4) obj. -26.641 iterations 3
Cbc0038I Pass  31: suminf.    1.46080 (4) obj. -26.641 iterations 1
Cbc0038I Pass  32: suminf.    1.52583 (4) obj. -26.641 iterations 2
Cbc0038I Rounding solution of -30.1341 is better than previous of -18.9635

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 11 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -43.2547
Cbc0038I Pass  32: suminf.    2.13485 (12) obj. -57.6055 iterations 0
Cbc0038I Pass  33: suminf.    2.13485 (12) obj. -57.6055 iterations 1
Cbc0038I Pass  34: suminf.    0.83254 (2) obj. -43.2547 iterations 18
Cbc0038I Pass  35: suminf.    0.72055 (2) obj. -44.7106 iterations 2
Cbc0038I Pass  36: suminf.    3.21477 (10) obj. -43.2547 iterations 14
Cbc0038I Pass  37: suminf.    1.16743 (13) obj. -43.2547 iterations 7
Cbc0038I Pass  38: suminf.    1.30218 (5) obj. -43.2547 iterations 13
Cbc0038I Pass  39: suminf.    0.65559 (5) obj. -43.2547 iterations 3
Cbc0038I Pass  40: suminf.    1.00928 (5) obj. -43.2547 iterations 4
Cbc0038I Pass  41: suminf.    1.75164 (11) obj. -43.2547 iterations 8
Cbc0038I Pass  42: suminf.    1.31183 (7) obj. -43.2547 iterations 1
Cbc0038I Pass  43: suminf.    1.36197 (6) obj. -43.2547 iterations 7
Cbc0038I Pass  44: suminf.    1.36197 (6) obj. -43.2547 iterations 2
Cbc0038I Pass  45: suminf.    1.53301 (6) obj. -43.2547 iterations 2
Cbc0038I Pass  46: suminf.    1.09653 (6) obj. -43.2547 iterations 2
Cbc0038I Pass  47: suminf.    0.94639 (10) obj. -43.2547 iterations 9
Cbc0038I Pass  48: suminf.    0.83688 (8) obj. -43.2547 iterations 3
Cbc0038I Pass  49: suminf.    1.63718 (7) obj. -43.2547 iterations 8
Cbc0038I Pass  50: suminf.    1.63718 (7) obj. -43.2547 iterations 1
Cbc0038I Pass  51: suminf.    0.57215 (4) obj. -43.2547 iterations 4
Cbc0038I Pass  52: suminf.    0.51882 (4) obj. -43.2547 iterations 2
Cbc0038I Pass  53: suminf.    1.73263 (7) obj. -43.2547 iterations 7
Cbc0038I Pass  54: suminf.    1.39018 (7) obj. -46.3368 iterations 1
Cbc0038I Pass  55: suminf.    1.24445 (6) obj. -43.2547 iterations 5
Cbc0038I Pass  56: suminf.    1.10349 (6) obj. -43.2547 iterations 4
Cbc0038I Pass  57: suminf.    1.02707 (5) obj. -43.2547 iterations 9
Cbc0038I Pass  58: suminf.    0.84601 (5) obj. -43.2547 iterations 5
Cbc0038I Pass  59: suminf.    1.02707 (5) obj. -43.2547 iterations 5
Cbc0038I Pass  60: suminf.    1.83103 (9) obj. -43.2547 iterations 11
Cbc0038I Pass  61: suminf.    1.78991 (8) obj. -43.2547 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 55 columns, reduced to 28 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30.1341 - took 0.02 seconds
Cbc0012I Integer solution of -30.13407 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 50 rows 55 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -32.05799 found by DiveCoefficient after 1913 iterations and 0 nodes (1.69 seconds)
Cbc0031I 35 added rows had average density of 10
Cbc0013I At root node, 35 cuts changed objective from -95.73704 to -39.454775 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3087 row cuts average 5.3 elements, 2 column cuts (26 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 751 row cuts average 46.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 68 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 96 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 113 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 180 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 98 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.780 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.05799 best solution, best possible -39.454775 (1.71 seconds)
Cbc0012I Integer solution of -34.9798 found by DiveCoefficient after 1956 iterations and 2 nodes (1.82 seconds)
Cbc0012I Integer solution of -36.9798 found by DiveCoefficient after 1964 iterations and 2 nodes (1.87 seconds)
Cbc0001I Search completed - best objective -36.9798, took 2236 iterations and 10 nodes (2.03 seconds)
Cbc0032I Strong branching done 184 times (2887 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 4, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       2.04

