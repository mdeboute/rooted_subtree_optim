Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 1.05077e-05 - average 2.08486e-08, 105 fixed columns
Coin0506I Presolve 296 (-208) rows, 157 (-105) columns and 883 (-617) elements
Clp0029I End of values pass after 157 iterations
Clp0014I Perturbing problem by 0.001% of 0.15898797 - largest nonzero change 0 ( 0%) - largest zero change 2.9960057e-05
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Coin0511I After Postsolve, objective 138.04675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13543764 - largest nonzero change 0 ( 0%) - largest zero change 2.98842e-05
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Coin0511I After Postsolve, objective 138.04675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.0467519 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 67 integers unsatisfied sum - 12.8458
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.0842 iterations 219
Cbc0038I Solution found of 18.0842
Cbc0038I Relaxing continuous gives 18.0842
Cbc0038I Rounding solution of -59.6452 is better than previous of 18.0842

Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 124 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -59.6452 to -63.3405 (0.07 seconds)
Cbc0038I Round again with cutoff of -70.8113
Cbc0038I Pass   2: suminf.    4.34215 (14) obj. -70.8113 iterations 34
Cbc0038I Pass   3: suminf.    1.77594 (6) obj. -70.8113 iterations 27
Cbc0038I Pass   4: suminf.    1.11933 (7) obj. -70.8113 iterations 5
Cbc0038I Pass   5: suminf.    2.93175 (11) obj. -70.8113 iterations 20
Cbc0038I Pass   6: suminf.    2.72674 (8) obj. -70.8113 iterations 7
Cbc0038I Pass   7: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass   8: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass   9: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I Pass  10: suminf.    2.99103 (10) obj. -70.8113 iterations 0
Cbc0038I Pass  11: suminf.    2.91452 (9) obj. -70.8113 iterations 15
Cbc0038I Pass  12: suminf.    2.28940 (8) obj. -70.8113 iterations 5
Cbc0038I Pass  13: suminf.    2.03342 (6) obj. -70.8113 iterations 11
Cbc0038I Pass  14: suminf.    1.32149 (5) obj. -70.8113 iterations 9
Cbc0038I Pass  15: suminf.    0.96468 (5) obj. -70.8113 iterations 7
Cbc0038I Pass  16: suminf.    2.72674 (8) obj. -70.8113 iterations 18
Cbc0038I Pass  17: suminf.    2.72674 (8) obj. -70.8113 iterations 0
Cbc0038I Pass  18: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass  19: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass  20: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I Pass  21: suminf.    2.99103 (10) obj. -70.8113 iterations 0
Cbc0038I Pass  22: suminf.    2.91452 (9) obj. -70.8113 iterations 15
Cbc0038I Pass  23: suminf.    2.28940 (8) obj. -70.8113 iterations 5
Cbc0038I Pass  24: suminf.    2.03342 (6) obj. -70.8113 iterations 11
Cbc0038I Pass  25: suminf.    1.32149 (5) obj. -70.8113 iterations 9
Cbc0038I Pass  26: suminf.    0.96468 (5) obj. -70.8113 iterations 7
Cbc0038I Pass  27: suminf.    2.72674 (8) obj. -70.8113 iterations 18
Cbc0038I Pass  28: suminf.    2.72674 (8) obj. -70.8113 iterations 0
Cbc0038I Pass  29: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass  30: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass  31: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 131 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -63.3405 to -67.0189 (0.14 seconds)
Cbc0038I Round again with cutoff of -84.2584
Cbc0038I Pass  31: suminf.    5.05193 (15) obj. -84.2584 iterations 2
Cbc0038I Pass  32: suminf.    4.12111 (12) obj. -84.2584 iterations 26
Cbc0038I Pass  33: suminf.    3.32603 (13) obj. -84.2584 iterations 18
Cbc0038I Pass  34: suminf.    3.46521 (11) obj. -84.2584 iterations 23
Cbc0038I Pass  35: suminf.    2.98866 (11) obj. -84.2584 iterations 14
Cbc0038I Pass  36: suminf.    2.96596 (10) obj. -84.2584 iterations 17
Cbc0038I Pass  37: suminf.    2.63854 (10) obj. -84.2584 iterations 5
Cbc0038I Pass  38: suminf.    3.02185 (11) obj. -84.2584 iterations 22
Cbc0038I Pass  39: suminf.    3.01228 (12) obj. -84.2584 iterations 2
Cbc0038I Pass  40: suminf.    2.81337 (9) obj. -84.2584 iterations 19
Cbc0038I Pass  41: suminf.    2.22442 (7) obj. -84.2584 iterations 9
Cbc0038I Pass  42: suminf.    2.16605 (8) obj. -84.2584 iterations 1
Cbc0038I Pass  43: suminf.    3.09478 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  44: suminf.    3.07121 (9) obj. -84.2584 iterations 4
Cbc0038I Pass  45: suminf.    3.07121 (9) obj. -84.2584 iterations 3
Cbc0038I Pass  46: suminf.    2.57739 (8) obj. -84.2584 iterations 13
Cbc0038I Pass  47: suminf.    2.10496 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  48: suminf.    2.10496 (8) obj. -84.2584 iterations 0
Cbc0038I Pass  49: suminf.    3.05222 (9) obj. -84.2584 iterations 20
Cbc0038I Pass  50: suminf.    3.04704 (9) obj. -84.2584 iterations 5
Cbc0038I Pass  51: suminf.    2.60045 (9) obj. -84.2584 iterations 15
Cbc0038I Pass  52: suminf.    2.48054 (8) obj. -84.2584 iterations 7
Cbc0038I Pass  53: suminf.    3.42642 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  54: suminf.    3.06321 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  55: suminf.    3.04704 (9) obj. -84.2584 iterations 17
Cbc0038I Pass  56: suminf.    2.60045 (9) obj. -84.2584 iterations 15
Cbc0038I Pass  57: suminf.    2.48054 (8) obj. -84.2584 iterations 7
Cbc0038I Pass  58: suminf.    3.42642 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  59: suminf.    3.06321 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  60: suminf.    3.04704 (9) obj. -84.2584 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 133 rows 73 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -67.0189 - took 0.19 seconds
Cbc0012I Integer solution of -67.01886 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 126 rows 69 columns
Cbc0031I 57 added rows had average density of 106.21053
Cbc0013I At root node, 57 cuts changed objective from -138.04675 to -126.83911 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 54771 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.566 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3765 row cuts average 257.4 elements, 0 column cuts (0 active)  in 0.597 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.630 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 185.2 elements, 0 column cuts (0 active)  in 0.235 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -67.01886 best solution, best possible -126.83911 (6.60 seconds)
Cbc0010I After 9 nodes, 10 on tree, -67.01886 best solution, best possible -126.83911 (7.35 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 23 rows 21 columns
Cbc0010I After 66 nodes, 15 on tree, -67.01886 best solution, best possible -126.83911 (8.05 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -67.09353 found by RINS after 29413 iterations and 92 nodes (8.13 seconds)
Cbc0012I Integer solution of -67.1207 found by rounding after 31097 iterations and 141 nodes (8.29 seconds)
Cbc0012I Integer solution of -67.21092 found by rounding after 31697 iterations and 158 nodes (8.33 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 177 rows 103 columns
Cbc0012I Integer solution of -69.12097 found by RINS after 33791 iterations and 200 nodes (8.63 seconds)
Cbc0010I After 214 nodes, 10 on tree, -69.12097 best solution, best possible -126.83911 (8.75 seconds)
Cbc0012I Integer solution of -71.04449 found by rounding after 35149 iterations and 221 nodes (8.78 seconds)
Cbc0012I Integer solution of -74.3026 found by rounding after 38313 iterations and 281 nodes (9.25 seconds)
Cbc0010I After 317 nodes, 27 on tree, -74.3026 best solution, best possible -126.83911 (9.45 seconds)
Cbc0012I Integer solution of -75.37432 found by rounding after 42825 iterations and 388 nodes (9.72 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 4 rows 7 columns
Cbc0012I Integer solution of -78.5536 found by rounding after 43212 iterations and 407 nodes (9.77 seconds)
Cbc0012I Integer solution of -80.87289 found by rounding after 45408 iterations and 471 nodes (9.92 seconds)
Cbc0010I After 584 nodes, 13 on tree, -80.87289 best solution, best possible -126.83911 (10.15 seconds)
Cbc0004I Integer solution of -80.9534 found after 48269 iterations and 588 nodes (10.16 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 108 rows 67 columns
Cbc0001I Search completed - best objective -80.95340000000002, took 50867 iterations and 636 nodes (10.35 seconds)
Cbc0032I Strong branching done 4846 times (103301 iterations), fathomed 98 nodes and fixed 348 variables
Cbc0035I Maximum depth 76, 2876 variables fixed on reduced cost
Total time (CPU seconds):       10.16   (Wallclock seconds):       10.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 371 (-155) rows, 389 (-135) columns and 18669 (-17067) elements
Clp1000I sum of infeasibilities 7.19443e-06 - average 1.9392e-08, 232 fixed columns
Coin0506I Presolve 140 (-231) rows, 155 (-234) columns and 571 (-18098) elements
Clp0006I 0  Obj -4.4610236 Dual inf 10334.144 (154)
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 0.15966029 - largest nonzero change 2.9464328e-05 ( 0.0026785753%) - largest zero change 2.989269e-05
Clp0000I Optimal - objective value -1.3262412
Clp0000I Optimal - objective value -1.3262412
Coin0511I After Postsolve, objective -1.3262412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1.3262412 Dual inf 158.39337 (131)
Clp0014I Perturbing problem by 0.001% of 1.6744206 - largest nonzero change 2.9351629e-05 ( 0.0026698863%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 173.97212
Clp0000I Optimal - objective value 173.97212
Clp0000I Optimal - objective value 173.97212
Coin0511I After Postsolve, objective 173.97212, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 173.972124 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0004I processed model has 374 rows, 392 columns (392 integer (392 of which binary)) and 18682 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.916%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 132 integers unsatisfied sum - 12.0172
Cbc0038I Pass   1: suminf.    5.84670 (107) obj. -131.452 iterations 64
Cbc0038I Pass   2: suminf.    5.84670 (107) obj. -131.452 iterations 2
Cbc0038I Pass   3: suminf.    4.21564 (84) obj. -108.22 iterations 23
Cbc0038I Pass   4: suminf.    2.52877 (56) obj. -78.1499 iterations 28
Cbc0038I Pass   5: suminf.    1.03248 (27) obj. -41.1489 iterations 29
Cbc0038I Pass   6: suminf.    0.01724 (1) obj. 11.5789 iterations 26
Cbc0038I Solution found of 12.5616
Cbc0038I Rounding solution of -7.3647 is better than previous of 12.5616

Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 392 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -7.3647 to -8.11981 (0.15 seconds)
Cbc0038I Round again with cutoff of -24.7051
Cbc0038I Pass   7: suminf.    5.84670 (107) obj. -131.452 iterations 0
Cbc0038I Pass   8: suminf.    5.84670 (107) obj. -131.452 iterations 2
Cbc0038I Pass   9: suminf.    4.28058 (85) obj. -109.155 iterations 22
Cbc0038I Pass  10: suminf.    3.16626 (67) obj. -89.456 iterations 18
Cbc0038I Pass  11: suminf.    1.67349 (40) obj. -61.1147 iterations 27
Cbc0038I Pass  12: suminf.    0.84042 (23) obj. -33.533 iterations 17
Cbc0038I Pass  13: suminf.    0.37962 (10) obj. -24.7051 iterations 43
Cbc0038I Pass  14: suminf.    0.37962 (10) obj. -24.7051 iterations 0
Cbc0038I Pass  15: suminf.    0.60664 (5) obj. -24.7051 iterations 80
Cbc0038I Pass  16: suminf.    0.39856 (10) obj. -24.7051 iterations 19
Cbc0038I Pass  17: suminf.    0.78012 (6) obj. -24.7051 iterations 45
Cbc0038I Pass  18: suminf.    0.42053 (5) obj. -24.7051 iterations 13
Cbc0038I Pass  19: suminf.    1.04352 (5) obj. -24.7051 iterations 12
Cbc0038I Pass  20: suminf.    1.04764 (6) obj. -24.7051 iterations 9
Cbc0038I Pass  21: suminf.    1.14582 (5) obj. -24.7051 iterations 12
Cbc0038I Pass  22: suminf.    0.60653 (6) obj. -24.7051 iterations 5
Cbc0038I Pass  23: suminf.    0.80782 (5) obj. -24.7051 iterations 9
Cbc0038I Pass  24: suminf.    0.64248 (5) obj. -24.7051 iterations 4
Cbc0038I Pass  25: suminf.    5.53858 (39) obj. -24.7051 iterations 93
Cbc0038I Pass  26: suminf.    1.40795 (27) obj. -24.7051 iterations 57
Cbc0038I Pass  27: suminf.    1.33953 (27) obj. -24.7051 iterations 17
Cbc0038I Pass  28: suminf.    0.80213 (8) obj. -24.7051 iterations 51
Cbc0038I Pass  29: suminf.    0.75364 (8) obj. -24.7051 iterations 11
Cbc0038I Pass  30: suminf.    1.73182 (7) obj. -24.7051 iterations 14
Cbc0038I Pass  31: suminf.    0.63691 (7) obj. -24.7051 iterations 15
Cbc0038I Pass  32: suminf.    0.54826 (5) obj. -24.7051 iterations 9
Cbc0038I Pass  33: suminf.    0.82921 (5) obj. -24.7051 iterations 11
Cbc0038I Pass  34: suminf.    0.47871 (5) obj. -24.7051 iterations 8
Cbc0038I Pass  35: suminf.    1.91256 (26) obj. -24.7051 iterations 102
Cbc0038I Pass  36: suminf.    1.76728 (26) obj. -24.7051 iterations 32
Cbc0038I Rounding solution of -10.7007 is better than previous of -8.11981

Cbc0038I Before mini branch and bound, 228 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 392 columns, reduced to 26 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -10.7007 to -17.3319 (0.25 seconds)
Cbc0038I Round again with cutoff of -54.5585
Cbc0038I Pass  36: suminf.    5.84670 (107) obj. -131.452 iterations 0
Cbc0038I Pass  37: suminf.    5.84670 (107) obj. -131.452 iterations 2
Cbc0038I Pass  38: suminf.    4.08741 (82) obj. -106.348 iterations 25
Cbc0038I Pass  39: suminf.    3.34407 (70) obj. -93.2188 iterations 12
Cbc0038I Pass  40: suminf.    2.41647 (54) obj. -76.2622 iterations 16
Cbc0038I Pass  41: suminf.    1.53247 (33) obj. -54.5585 iterations 37
Cbc0038I Pass  42: suminf.    1.51630 (26) obj. -54.5585 iterations 94
Cbc0038I Pass  43: suminf.    1.45944 (20) obj. -54.5585 iterations 1
Cbc0038I Pass  44: suminf.    0.92400 (31) obj. -54.5585 iterations 19
Cbc0038I Pass  45: suminf.    2.23265 (19) obj. -54.5585 iterations 38
Cbc0038I Pass  46: suminf.    1.69602 (18) obj. -54.5585 iterations 3
Cbc0038I Pass  47: suminf.    1.47171 (18) obj. -54.5585 iterations 10
Cbc0038I Pass  48: suminf.    2.14944 (17) obj. -54.5585 iterations 18
Cbc0038I Pass  49: suminf.    1.79660 (17) obj. -54.5585 iterations 3
Cbc0038I Pass  50: suminf.    2.91102 (27) obj. -54.5585 iterations 19
Cbc0038I Pass  51: suminf.    2.83294 (26) obj. -54.5585 iterations 8
Cbc0038I Pass  52: suminf.    1.91470 (20) obj. -54.5585 iterations 38
Cbc0038I Pass  53: suminf.    1.91470 (20) obj. -54.5585 iterations 5
Cbc0038I Pass  54: suminf.    1.89274 (20) obj. -54.5585 iterations 7
Cbc0038I Pass  55: suminf.    1.89274 (20) obj. -54.5585 iterations 6
Cbc0038I Pass  56: suminf.    1.83581 (18) obj. -54.5585 iterations 10
Cbc0038I Pass  57: suminf.    1.71245 (18) obj. -54.5585 iterations 8
Cbc0038I Pass  58: suminf.    1.83581 (18) obj. -54.5585 iterations 9
Cbc0038I Pass  59: suminf.    3.17629 (32) obj. -54.5585 iterations 58
Cbc0038I Pass  60: suminf.    3.17629 (32) obj. -54.5585 iterations 16
Cbc0038I Pass  61: suminf.    2.93167 (23) obj. -54.5585 iterations 34
Cbc0038I Pass  62: suminf.    1.81007 (20) obj. -54.5585 iterations 10
Cbc0038I Pass  63: suminf.    1.72273 (19) obj. -54.5585 iterations 10
Cbc0038I Pass  64: suminf.    1.83581 (18) obj. -54.5585 iterations 11
Cbc0038I Pass  65: suminf.    1.71245 (18) obj. -54.5585 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 392 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -17.3319 - took 0.22 seconds
Cbc0012I Integer solution of -17.3319 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 27 rows 32 columns
Cbc0012I Integer solution of -28.50036 found by DiveCoefficient after 15884 iterations and 0 nodes (9.08 seconds)
Cbc0031I 154 added rows had average density of 64.175325
Cbc0013I At root node, 154 cuts changed objective from -173.97212 to -113.88107 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 55960 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.559 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3527 row cuts average 368.0 elements, 0 column cuts (0 active)  in 1.326 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 514 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5240 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.709 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1999 row cuts average 14.5 elements, 0 column cuts (0 active)  in 1.032 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 410 row cuts average 204.8 elements, 0 column cuts (0 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 533 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.597 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.50036 best solution, best possible -113.88107 (9.90 seconds)
Cbc0012I Integer solution of -30.72538 found by rounding after 16596 iterations and 2 nodes (10.45 seconds)
Cbc0010I After 2 nodes, 1 on tree, -30.72538 best solution, best possible -112.27218 (10.89 seconds)
Cbc0012I Integer solution of -39.82209 found by rounding after 17429 iterations and 3 nodes (10.92 seconds)
Cbc0010I After 5 nodes, 2 on tree, -39.82209 best solution, best possible -112.25381 (11.62 seconds)
Cbc0010I After 7 nodes, 4 on tree, -39.82209 best solution, best possible -112.25381 (13.03 seconds)
Cbc0012I Integer solution of -70.6173 found by rounding after 18703 iterations and 10 nodes (13.62 seconds)
Cbc0010I After 12 nodes, 8 on tree, -70.6173 best solution, best possible -112.25381 (13.75 seconds)
Cbc0012I Integer solution of -70.82457 found by rounding after 18960 iterations and 16 nodes (14.09 seconds)
Cbc0012I Integer solution of -73.6144 found by rounding after 19061 iterations and 18 nodes (14.23 seconds)
Cbc0010I After 22 nodes, 13 on tree, -73.6144 best solution, best possible -112.25381 (14.46 seconds)
Cbc0010I After 35 nodes, 18 on tree, -73.6144 best solution, best possible -112.25381 (15.17 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 23 rows 27 columns
Cbc0012I Integer solution of -76.87289 found by RINS after 20564 iterations and 41 nodes (15.60 seconds)
Cbc0010I After 42 nodes, 19 on tree, -76.87289 best solution, best possible -112.25381 (15.93 seconds)
Cbc0010I After 63 nodes, 19 on tree, -76.87289 best solution, best possible -112.25381 (16.68 seconds)
Cbc0010I After 87 nodes, 19 on tree, -76.87289 best solution, best possible -112.25381 (17.42 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 16 rows 18 columns
Cbc0010I After 108 nodes, 19 on tree, -76.87289 best solution, best possible -112.25381 (18.13 seconds)
Cbc0004I Integer solution of -76.9534 found after 23095 iterations and 133 nodes (18.52 seconds)
Cbc0010I After 147 nodes, 16 on tree, -76.9534 best solution, best possible -112.25381 (18.84 seconds)
Cbc0010I After 182 nodes, 12 on tree, -76.9534 best solution, best possible -112.25381 (19.56 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 49 rows 55 columns
Cbc0010I After 200 nodes, 13 on tree, -76.9534 best solution, best possible -112.25381 (20.33 seconds)
Cbc0010I After 242 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (21.04 seconds)
Cbc0010I After 269 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (21.74 seconds)
Cbc0010I After 276 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (22.45 seconds)
Cbc0010I After 292 nodes, 10 on tree, -76.9534 best solution, best possible -112.25381 (23.22 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 19 rows 23 columns
Cbc0010I After 315 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (23.95 seconds)
Cbc0010I After 327 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (24.66 seconds)
Cbc0010I After 348 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (25.37 seconds)
Cbc0010I After 374 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (26.11 seconds)
Cbc0010I After 396 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (26.84 seconds)
Cbc0010I After 417 nodes, 12 on tree, -76.9534 best solution, best possible -112.25381 (27.59 seconds)
Cbc0010I After 434 nodes, 10 on tree, -76.9534 best solution, best possible -112.25381 (28.30 seconds)
Cbc0010I After 449 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (29.03 seconds)
Cbc0010I After 472 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (29.73 seconds)
Cbc0010I After 497 nodes, 4 on tree, -76.9534 best solution, best possible -112.25381 (31.26 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 22 rows 26 columns
Cbc0010I After 506 nodes, 6 on tree, -76.9534 best solution, best possible -112.25381 (32.09 seconds)
Cbc0010I After 515 nodes, 8 on tree, -76.9534 best solution, best possible -112.25381 (32.86 seconds)
Cbc0010I After 536 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (33.57 seconds)
Cbc0010I After 562 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (34.31 seconds)
Cbc0010I After 575 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (35.04 seconds)
Cbc0010I After 592 nodes, 6 on tree, -76.9534 best solution, best possible -112.25381 (35.78 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 193 rows 206 columns - 1 fixed gives 192, 205 - still too large
Cbc0038I Full problem 374 rows 392 columns, reduced to 192 rows 205 columns - too large
Cbc0010I After 606 nodes, 9 on tree, -76.9534 best solution, best possible -112.25381 (36.50 seconds)
Cbc0010I After 632 nodes, 8 on tree, -76.9534 best solution, best possible -112.25381 (37.21 seconds)
Cbc0010I After 655 nodes, 8 on tree, -76.9534 best solution, best possible -112.25381 (37.93 seconds)
Cbc0012I Integer solution of -77.8903 found by DiveCoefficient after 72829 iterations and 674 nodes (38.60 seconds)
Cbc0010I After 676 nodes, 5 on tree, -77.8903 best solution, best possible -112.25381 (38.71 seconds)
Cbc0012I Integer solution of -79.9534 found by DiveCoefficient after 72899 iterations and 678 nodes (38.89 seconds)
Cbc0010I After 693 nodes, 2 on tree, -79.9534 best solution, best possible -112.25381 (39.83 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 19 rows 23 columns
Cbc0012I Integer solution of -80.9534 found by RINS after 73935 iterations and 700 nodes (40.33 seconds)
Cbc0010I After 707 nodes, 6 on tree, -80.9534 best solution, best possible -112.25381 (40.59 seconds)
Cbc0010I After 727 nodes, 4 on tree, -80.9534 best solution, best possible -112.25381 (41.53 seconds)
Cbc0010I After 735 nodes, 5 on tree, -80.9534 best solution, best possible -112.25381 (42.26 seconds)
Cbc0010I After 761 nodes, 8 on tree, -80.9534 best solution, best possible -112.25381 (42.97 seconds)
Cbc0010I After 793 nodes, 10 on tree, -80.9534 best solution, best possible -112.25381 (43.69 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 66 rows 83 columns
Cbc0010I After 808 nodes, 12 on tree, -80.9534 best solution, best possible -112.25381 (44.42 seconds)
Cbc0010I After 835 nodes, 12 on tree, -80.9534 best solution, best possible -112.25381 (45.14 seconds)
Cbc0010I After 864 nodes, 10 on tree, -80.9534 best solution, best possible -112.25381 (45.86 seconds)
Cbc0010I After 891 nodes, 4 on tree, -80.9534 best solution, best possible -112.25381 (46.58 seconds)
Cbc0001I Search completed - best objective -80.95340000000002, took 86622 iterations and 898 nodes (46.74 seconds)
Cbc0032I Strong branching done 2922 times (85660 iterations), fathomed 31 nodes and fixed 47 variables
Cbc0035I Maximum depth 34, 4503 variables fixed on reduced cost
Total time (CPU seconds):       40.64   (Wallclock seconds):       46.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 504 (-23) rows, 262 (-2) columns and 1500 (-45) elements
Clp1000I sum of infeasibilities 1.05077e-05 - average 2.08486e-08, 105 fixed columns
Coin0506I Presolve 296 (-208) rows, 157 (-105) columns and 883 (-617) elements
Clp0029I End of values pass after 157 iterations
Clp0014I Perturbing problem by 0.001% of 0.15898797 - largest nonzero change 0 ( 0%) - largest zero change 2.9960057e-05
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Coin0511I After Postsolve, objective 138.04675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13543764 - largest nonzero change 0 ( 0%) - largest zero change 2.98842e-05
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Clp0000I Optimal - objective value 138.04675
Coin0511I After Postsolve, objective 138.04675, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 138.0467519 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 504 rows, 262 columns (261 integer (261 of which binary)) and 1500 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.365%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 67 integers unsatisfied sum - 12.8458
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 18.0842 iterations 219
Cbc0038I Solution found of 18.0842
Cbc0038I Relaxing continuous gives 18.0842
Cbc0038I Rounding solution of -59.6452 is better than previous of 18.0842

Cbc0038I Before mini branch and bound, 194 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 124 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -59.6452 to -63.3405 (0.07 seconds)
Cbc0038I Round again with cutoff of -70.8113
Cbc0038I Pass   2: suminf.    4.34215 (14) obj. -70.8113 iterations 34
Cbc0038I Pass   3: suminf.    1.77594 (6) obj. -70.8113 iterations 27
Cbc0038I Pass   4: suminf.    1.11933 (7) obj. -70.8113 iterations 5
Cbc0038I Pass   5: suminf.    2.93175 (11) obj. -70.8113 iterations 20
Cbc0038I Pass   6: suminf.    2.72674 (8) obj. -70.8113 iterations 7
Cbc0038I Pass   7: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass   8: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass   9: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I Pass  10: suminf.    2.99103 (10) obj. -70.8113 iterations 0
Cbc0038I Pass  11: suminf.    2.91452 (9) obj. -70.8113 iterations 15
Cbc0038I Pass  12: suminf.    2.28940 (8) obj. -70.8113 iterations 5
Cbc0038I Pass  13: suminf.    2.03342 (6) obj. -70.8113 iterations 11
Cbc0038I Pass  14: suminf.    1.32149 (5) obj. -70.8113 iterations 9
Cbc0038I Pass  15: suminf.    0.96468 (5) obj. -70.8113 iterations 7
Cbc0038I Pass  16: suminf.    2.72674 (8) obj. -70.8113 iterations 18
Cbc0038I Pass  17: suminf.    2.72674 (8) obj. -70.8113 iterations 0
Cbc0038I Pass  18: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass  19: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass  20: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I Pass  21: suminf.    2.99103 (10) obj. -70.8113 iterations 0
Cbc0038I Pass  22: suminf.    2.91452 (9) obj. -70.8113 iterations 15
Cbc0038I Pass  23: suminf.    2.28940 (8) obj. -70.8113 iterations 5
Cbc0038I Pass  24: suminf.    2.03342 (6) obj. -70.8113 iterations 11
Cbc0038I Pass  25: suminf.    1.32149 (5) obj. -70.8113 iterations 9
Cbc0038I Pass  26: suminf.    0.96468 (5) obj. -70.8113 iterations 7
Cbc0038I Pass  27: suminf.    2.72674 (8) obj. -70.8113 iterations 18
Cbc0038I Pass  28: suminf.    2.72674 (8) obj. -70.8113 iterations 0
Cbc0038I Pass  29: suminf.    2.70128 (7) obj. -70.8113 iterations 11
Cbc0038I Pass  30: suminf.    1.73878 (8) obj. -70.8113 iterations 2
Cbc0038I Pass  31: suminf.    2.99103 (10) obj. -70.8113 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 190 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 131 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -63.3405 to -67.0189 (0.14 seconds)
Cbc0038I Round again with cutoff of -84.2584
Cbc0038I Pass  31: suminf.    5.05193 (15) obj. -84.2584 iterations 2
Cbc0038I Pass  32: suminf.    4.12111 (12) obj. -84.2584 iterations 26
Cbc0038I Pass  33: suminf.    3.32603 (13) obj. -84.2584 iterations 18
Cbc0038I Pass  34: suminf.    3.46521 (11) obj. -84.2584 iterations 23
Cbc0038I Pass  35: suminf.    2.98866 (11) obj. -84.2584 iterations 14
Cbc0038I Pass  36: suminf.    2.96596 (10) obj. -84.2584 iterations 17
Cbc0038I Pass  37: suminf.    2.63854 (10) obj. -84.2584 iterations 5
Cbc0038I Pass  38: suminf.    3.02185 (11) obj. -84.2584 iterations 22
Cbc0038I Pass  39: suminf.    3.01228 (12) obj. -84.2584 iterations 2
Cbc0038I Pass  40: suminf.    2.81337 (9) obj. -84.2584 iterations 19
Cbc0038I Pass  41: suminf.    2.22442 (7) obj. -84.2584 iterations 9
Cbc0038I Pass  42: suminf.    2.16605 (8) obj. -84.2584 iterations 1
Cbc0038I Pass  43: suminf.    3.09478 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  44: suminf.    3.07121 (9) obj. -84.2584 iterations 4
Cbc0038I Pass  45: suminf.    3.07121 (9) obj. -84.2584 iterations 3
Cbc0038I Pass  46: suminf.    2.57739 (8) obj. -84.2584 iterations 13
Cbc0038I Pass  47: suminf.    2.10496 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  48: suminf.    2.10496 (8) obj. -84.2584 iterations 0
Cbc0038I Pass  49: suminf.    3.05222 (9) obj. -84.2584 iterations 20
Cbc0038I Pass  50: suminf.    3.04704 (9) obj. -84.2584 iterations 5
Cbc0038I Pass  51: suminf.    2.60045 (9) obj. -84.2584 iterations 15
Cbc0038I Pass  52: suminf.    2.48054 (8) obj. -84.2584 iterations 7
Cbc0038I Pass  53: suminf.    3.42642 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  54: suminf.    3.06321 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  55: suminf.    3.04704 (9) obj. -84.2584 iterations 17
Cbc0038I Pass  56: suminf.    2.60045 (9) obj. -84.2584 iterations 15
Cbc0038I Pass  57: suminf.    2.48054 (8) obj. -84.2584 iterations 7
Cbc0038I Pass  58: suminf.    3.42642 (9) obj. -84.2584 iterations 14
Cbc0038I Pass  59: suminf.    3.06321 (8) obj. -84.2584 iterations 6
Cbc0038I Pass  60: suminf.    3.04704 (9) obj. -84.2584 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 504 rows 262 columns, reduced to 133 rows 73 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -67.0189 - took 0.19 seconds
Cbc0012I Integer solution of -67.01886 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 126 rows 69 columns
Cbc0031I 57 added rows had average density of 106.21053
Cbc0013I At root node, 57 cuts changed objective from -138.04675 to -126.83911 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 54771 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.572 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3765 row cuts average 257.4 elements, 0 column cuts (0 active)  in 0.600 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.629 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 235 row cuts average 185.2 elements, 0 column cuts (0 active)  in 0.231 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -67.01886 best solution, best possible -126.83911 (6.62 seconds)
Cbc0010I After 9 nodes, 10 on tree, -67.01886 best solution, best possible -126.83911 (7.36 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 23 rows 21 columns
Cbc0010I After 69 nodes, 14 on tree, -67.01886 best solution, best possible -126.83911 (8.06 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -67.09353 found by RINS after 29413 iterations and 92 nodes (8.14 seconds)
Cbc0012I Integer solution of -67.1207 found by rounding after 31097 iterations and 141 nodes (8.29 seconds)
Cbc0012I Integer solution of -67.21092 found by rounding after 31697 iterations and 158 nodes (8.32 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 177 rows 103 columns
Cbc0012I Integer solution of -69.12097 found by RINS after 33791 iterations and 200 nodes (8.63 seconds)
Cbc0010I After 219 nodes, 9 on tree, -69.12097 best solution, best possible -126.83911 (8.77 seconds)
Cbc0012I Integer solution of -71.04449 found by rounding after 35149 iterations and 221 nodes (8.78 seconds)
Cbc0012I Integer solution of -74.3026 found by rounding after 38313 iterations and 281 nodes (9.25 seconds)
Cbc0010I After 320 nodes, 27 on tree, -74.3026 best solution, best possible -126.83911 (9.47 seconds)
Cbc0012I Integer solution of -75.37432 found by rounding after 42825 iterations and 388 nodes (9.72 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 4 rows 7 columns
Cbc0012I Integer solution of -78.5536 found by rounding after 43212 iterations and 407 nodes (9.77 seconds)
Cbc0012I Integer solution of -80.87289 found by rounding after 45408 iterations and 471 nodes (9.93 seconds)
Cbc0004I Integer solution of -80.9534 found after 48269 iterations and 588 nodes (10.17 seconds)
Cbc0010I After 592 nodes, 9 on tree, -80.9534 best solution, best possible -126.83911 (10.18 seconds)
Cbc0038I Full problem 504 rows 262 columns, reduced to 108 rows 67 columns
Cbc0001I Search completed - best objective -80.95340000000002, took 50867 iterations and 636 nodes (10.35 seconds)
Cbc0032I Strong branching done 4846 times (103301 iterations), fathomed 98 nodes and fixed 348 variables
Cbc0035I Maximum depth 76, 2876 variables fixed on reduced cost
Total time (CPU seconds):       10.16   (Wallclock seconds):       10.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 371 (-156) rows, 389 (-136) columns and 18669 (-17068) elements
Clp1000I sum of infeasibilities 7.19443e-06 - average 1.9392e-08, 232 fixed columns
Coin0506I Presolve 140 (-231) rows, 155 (-234) columns and 571 (-18098) elements
Clp0006I 0  Obj -4.4610236 Dual inf 10334.144 (154)
Clp0029I End of values pass after 80 iterations
Clp0014I Perturbing problem by 0.001% of 0.15966029 - largest nonzero change 2.9464328e-05 ( 0.0026785753%) - largest zero change 2.989269e-05
Clp0000I Optimal - objective value -1.3262412
Clp0000I Optimal - objective value -1.3262412
Coin0511I After Postsolve, objective -1.3262412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1.3262412 Dual inf 158.39337 (131)
Clp0014I Perturbing problem by 0.001% of 1.6744206 - largest nonzero change 2.9351629e-05 ( 0.0026698863%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 173.97212
Clp0000I Optimal - objective value 173.97212
Clp0000I Optimal - objective value 173.97212
Coin0511I After Postsolve, objective 173.97212, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 173.972124 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 374 rows, 392 columns (392 integer (392 of which binary)) and 18682 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.916%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 132 integers unsatisfied sum - 12.0172
Cbc0038I Pass   1: suminf.    5.84670 (107) obj. -131.452 iterations 64
Cbc0038I Pass   2: suminf.    5.84670 (107) obj. -131.452 iterations 2
Cbc0038I Pass   3: suminf.    4.21564 (84) obj. -108.22 iterations 23
Cbc0038I Pass   4: suminf.    2.52877 (56) obj. -78.1499 iterations 28
Cbc0038I Pass   5: suminf.    1.03248 (27) obj. -41.1489 iterations 29
Cbc0038I Pass   6: suminf.    0.01724 (1) obj. 11.5789 iterations 26
Cbc0038I Solution found of 12.5616
Cbc0038I Rounding solution of -7.3647 is better than previous of 12.5616

Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 392 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -7.3647 to -8.11981 (0.15 seconds)
Cbc0038I Round again with cutoff of -24.7051
Cbc0038I Pass   7: suminf.    5.84670 (107) obj. -131.452 iterations 0
Cbc0038I Pass   8: suminf.    5.84670 (107) obj. -131.452 iterations 2
Cbc0038I Pass   9: suminf.    4.28058 (85) obj. -109.155 iterations 22
Cbc0038I Pass  10: suminf.    3.16626 (67) obj. -89.456 iterations 18
Cbc0038I Pass  11: suminf.    1.67349 (40) obj. -61.1147 iterations 27
Cbc0038I Pass  12: suminf.    0.84042 (23) obj. -33.533 iterations 17
Cbc0038I Pass  13: suminf.    0.37962 (10) obj. -24.7051 iterations 43
Cbc0038I Pass  14: suminf.    0.37962 (10) obj. -24.7051 iterations 0
Cbc0038I Pass  15: suminf.    0.60664 (5) obj. -24.7051 iterations 80
Cbc0038I Pass  16: suminf.    0.39856 (10) obj. -24.7051 iterations 19
Cbc0038I Pass  17: suminf.    0.78012 (6) obj. -24.7051 iterations 45
Cbc0038I Pass  18: suminf.    0.42053 (5) obj. -24.7051 iterations 13
Cbc0038I Pass  19: suminf.    1.04352 (5) obj. -24.7051 iterations 12
Cbc0038I Pass  20: suminf.    1.04764 (6) obj. -24.7051 iterations 9
Cbc0038I Pass  21: suminf.    1.14582 (5) obj. -24.7051 iterations 12
Cbc0038I Pass  22: suminf.    0.60653 (6) obj. -24.7051 iterations 5
Cbc0038I Pass  23: suminf.    0.80782 (5) obj. -24.7051 iterations 9
Cbc0038I Pass  24: suminf.    0.64248 (5) obj. -24.7051 iterations 4
Cbc0038I Pass  25: suminf.    5.53858 (39) obj. -24.7051 iterations 93
Cbc0038I Pass  26: suminf.    1.40795 (27) obj. -24.7051 iterations 57
Cbc0038I Pass  27: suminf.    1.33953 (27) obj. -24.7051 iterations 17
Cbc0038I Pass  28: suminf.    0.80213 (8) obj. -24.7051 iterations 51
Cbc0038I Pass  29: suminf.    0.75364 (8) obj. -24.7051 iterations 11
Cbc0038I Pass  30: suminf.    1.73182 (7) obj. -24.7051 iterations 14
Cbc0038I Pass  31: suminf.    0.63691 (7) obj. -24.7051 iterations 15
Cbc0038I Pass  32: suminf.    0.54826 (5) obj. -24.7051 iterations 9
Cbc0038I Pass  33: suminf.    0.82921 (5) obj. -24.7051 iterations 11
Cbc0038I Pass  34: suminf.    0.47871 (5) obj. -24.7051 iterations 8
Cbc0038I Pass  35: suminf.    1.91256 (26) obj. -24.7051 iterations 102
Cbc0038I Pass  36: suminf.    1.76728 (26) obj. -24.7051 iterations 32
Cbc0038I Rounding solution of -10.7007 is better than previous of -8.11981

Cbc0038I Before mini branch and bound, 228 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 392 columns, reduced to 26 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -10.7007 to -17.3319 (0.24 seconds)
Cbc0038I Round again with cutoff of -54.5585
Cbc0038I Pass  36: suminf.    5.84670 (107) obj. -131.452 iterations 0
Cbc0038I Pass  37: suminf.    5.84670 (107) obj. -131.452 iterations 2
Cbc0038I Pass  38: suminf.    4.08741 (82) obj. -106.348 iterations 25
Cbc0038I Pass  39: suminf.    3.34407 (70) obj. -93.2188 iterations 12
Cbc0038I Pass  40: suminf.    2.41647 (54) obj. -76.2622 iterations 16
Cbc0038I Pass  41: suminf.    1.53247 (33) obj. -54.5585 iterations 37
Cbc0038I Pass  42: suminf.    1.51630 (26) obj. -54.5585 iterations 94
Cbc0038I Pass  43: suminf.    1.45944 (20) obj. -54.5585 iterations 1
Cbc0038I Pass  44: suminf.    0.92400 (31) obj. -54.5585 iterations 19
Cbc0038I Pass  45: suminf.    2.23265 (19) obj. -54.5585 iterations 38
Cbc0038I Pass  46: suminf.    1.69602 (18) obj. -54.5585 iterations 3
Cbc0038I Pass  47: suminf.    1.47171 (18) obj. -54.5585 iterations 10
Cbc0038I Pass  48: suminf.    2.14944 (17) obj. -54.5585 iterations 18
Cbc0038I Pass  49: suminf.    1.79660 (17) obj. -54.5585 iterations 3
Cbc0038I Pass  50: suminf.    2.91102 (27) obj. -54.5585 iterations 19
Cbc0038I Pass  51: suminf.    2.83294 (26) obj. -54.5585 iterations 8
Cbc0038I Pass  52: suminf.    1.91470 (20) obj. -54.5585 iterations 38
Cbc0038I Pass  53: suminf.    1.91470 (20) obj. -54.5585 iterations 5
Cbc0038I Pass  54: suminf.    1.89274 (20) obj. -54.5585 iterations 7
Cbc0038I Pass  55: suminf.    1.89274 (20) obj. -54.5585 iterations 6
Cbc0038I Pass  56: suminf.    1.83581 (18) obj. -54.5585 iterations 10
Cbc0038I Pass  57: suminf.    1.71245 (18) obj. -54.5585 iterations 8
Cbc0038I Pass  58: suminf.    1.83581 (18) obj. -54.5585 iterations 9
Cbc0038I Pass  59: suminf.    3.17629 (32) obj. -54.5585 iterations 58
Cbc0038I Pass  60: suminf.    3.17629 (32) obj. -54.5585 iterations 16
Cbc0038I Pass  61: suminf.    2.93167 (23) obj. -54.5585 iterations 34
Cbc0038I Pass  62: suminf.    1.81007 (20) obj. -54.5585 iterations 10
Cbc0038I Pass  63: suminf.    1.72273 (19) obj. -54.5585 iterations 10
Cbc0038I Pass  64: suminf.    1.83581 (18) obj. -54.5585 iterations 11
Cbc0038I Pass  65: suminf.    1.71245 (18) obj. -54.5585 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 392 columns, reduced to 34 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -17.3319 - took 0.21 seconds
Cbc0012I Integer solution of -17.3319 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 27 rows 32 columns
Cbc0012I Integer solution of -28.50036 found by DiveCoefficient after 15884 iterations and 0 nodes (9.07 seconds)
Cbc0031I 154 added rows had average density of 64.175325
Cbc0013I At root node, 154 cuts changed objective from -173.97212 to -113.88107 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 55960 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.558 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3527 row cuts average 368.0 elements, 0 column cuts (0 active)  in 1.327 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 514 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5240 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.250 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.716 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1999 row cuts average 14.5 elements, 0 column cuts (0 active)  in 1.036 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 410 row cuts average 204.8 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 533 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.597 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.50036 best solution, best possible -113.88107 (9.91 seconds)
Cbc0012I Integer solution of -30.72538 found by rounding after 16596 iterations and 2 nodes (10.44 seconds)
Cbc0010I After 2 nodes, 1 on tree, -30.72538 best solution, best possible -112.27218 (10.89 seconds)
Cbc0012I Integer solution of -39.82209 found by rounding after 17429 iterations and 3 nodes (10.92 seconds)
Cbc0010I After 5 nodes, 2 on tree, -39.82209 best solution, best possible -112.25381 (11.64 seconds)
Cbc0010I After 7 nodes, 4 on tree, -39.82209 best solution, best possible -112.25381 (13.04 seconds)
Cbc0012I Integer solution of -70.6173 found by rounding after 18703 iterations and 10 nodes (13.64 seconds)
Cbc0010I After 12 nodes, 8 on tree, -70.6173 best solution, best possible -112.25381 (13.77 seconds)
Cbc0012I Integer solution of -70.82457 found by rounding after 18960 iterations and 16 nodes (14.11 seconds)
Cbc0012I Integer solution of -73.6144 found by rounding after 19061 iterations and 18 nodes (14.25 seconds)
Cbc0010I After 22 nodes, 13 on tree, -73.6144 best solution, best possible -112.25381 (14.47 seconds)
Cbc0010I After 35 nodes, 18 on tree, -73.6144 best solution, best possible -112.25381 (15.18 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 23 rows 27 columns
Cbc0012I Integer solution of -76.87289 found by RINS after 20564 iterations and 41 nodes (15.61 seconds)
Cbc0010I After 42 nodes, 19 on tree, -76.87289 best solution, best possible -112.25381 (15.94 seconds)
Cbc0010I After 63 nodes, 19 on tree, -76.87289 best solution, best possible -112.25381 (16.69 seconds)
Cbc0010I After 87 nodes, 19 on tree, -76.87289 best solution, best possible -112.25381 (17.43 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 16 rows 18 columns
Cbc0010I After 108 nodes, 19 on tree, -76.87289 best solution, best possible -112.25381 (18.14 seconds)
Cbc0004I Integer solution of -76.9534 found after 23095 iterations and 133 nodes (18.54 seconds)
Cbc0010I After 147 nodes, 16 on tree, -76.9534 best solution, best possible -112.25381 (18.87 seconds)
Cbc0010I After 182 nodes, 12 on tree, -76.9534 best solution, best possible -112.25381 (19.60 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 49 rows 55 columns
Cbc0010I After 200 nodes, 13 on tree, -76.9534 best solution, best possible -112.25381 (20.38 seconds)
Cbc0010I After 241 nodes, 8 on tree, -76.9534 best solution, best possible -112.25381 (21.08 seconds)
Cbc0010I After 269 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (21.79 seconds)
Cbc0010I After 276 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (22.50 seconds)
Cbc0010I After 292 nodes, 10 on tree, -76.9534 best solution, best possible -112.25381 (23.29 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 19 rows 23 columns
Cbc0010I After 315 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (24.03 seconds)
Cbc0010I After 327 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (24.76 seconds)
Cbc0010I After 348 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (25.50 seconds)
Cbc0010I After 374 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (26.25 seconds)
Cbc0010I After 396 nodes, 11 on tree, -76.9534 best solution, best possible -112.25381 (26.98 seconds)
Cbc0010I After 417 nodes, 12 on tree, -76.9534 best solution, best possible -112.25381 (27.73 seconds)
Cbc0010I After 435 nodes, 9 on tree, -76.9534 best solution, best possible -112.25381 (28.43 seconds)
Cbc0010I After 450 nodes, 12 on tree, -76.9534 best solution, best possible -112.25381 (29.18 seconds)
Cbc0010I After 475 nodes, 10 on tree, -76.9534 best solution, best possible -112.25381 (29.90 seconds)
Cbc0010I After 497 nodes, 4 on tree, -76.9534 best solution, best possible -112.25381 (31.55 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 22 rows 26 columns
Cbc0010I After 506 nodes, 6 on tree, -76.9534 best solution, best possible -112.25381 (32.48 seconds)
Cbc0010I After 514 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (33.22 seconds)
Cbc0010I After 530 nodes, 10 on tree, -76.9534 best solution, best possible -112.25381 (33.93 seconds)
Cbc0010I After 558 nodes, 6 on tree, -76.9534 best solution, best possible -112.25381 (34.68 seconds)
Cbc0010I After 570 nodes, 5 on tree, -76.9534 best solution, best possible -112.25381 (35.41 seconds)
Cbc0010I After 585 nodes, 5 on tree, -76.9534 best solution, best possible -112.25381 (36.14 seconds)
Cbc0010I After 596 nodes, 7 on tree, -76.9534 best solution, best possible -112.25381 (36.85 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 193 rows 206 columns - 1 fixed gives 192, 205 - still too large
Cbc0038I Full problem 374 rows 392 columns, reduced to 192 rows 205 columns - too large
Cbc0010I After 610 nodes, 9 on tree, -76.9534 best solution, best possible -112.25381 (37.56 seconds)
Cbc0010I After 634 nodes, 8 on tree, -76.9534 best solution, best possible -112.25381 (38.32 seconds)
Cbc0010I After 653 nodes, 8 on tree, -76.9534 best solution, best possible -112.25381 (39.04 seconds)
Cbc0010I After 672 nodes, 4 on tree, -76.9534 best solution, best possible -112.25381 (39.75 seconds)
Cbc0012I Integer solution of -77.8903 found by DiveCoefficient after 72829 iterations and 674 nodes (39.82 seconds)
Cbc0012I Integer solution of -79.9534 found by DiveCoefficient after 72899 iterations and 678 nodes (40.15 seconds)
Cbc0010I After 686 nodes, 3 on tree, -79.9534 best solution, best possible -112.25381 (40.48 seconds)
Cbc0010I After 693 nodes, 2 on tree, -79.9534 best solution, best possible -112.25381 (41.20 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 19 rows 23 columns
Cbc0012I Integer solution of -80.9534 found by RINS after 73935 iterations and 700 nodes (41.75 seconds)
Cbc0010I After 706 nodes, 5 on tree, -80.9534 best solution, best possible -112.25381 (41.97 seconds)
Cbc0010I After 724 nodes, 3 on tree, -80.9534 best solution, best possible -112.25381 (42.83 seconds)
Cbc0010I After 730 nodes, 4 on tree, -80.9534 best solution, best possible -112.25381 (43.59 seconds)
Cbc0010I After 746 nodes, 6 on tree, -80.9534 best solution, best possible -112.25381 (44.34 seconds)
Cbc0010I After 768 nodes, 8 on tree, -80.9534 best solution, best possible -112.25381 (45.09 seconds)
Cbc0010I After 796 nodes, 10 on tree, -80.9534 best solution, best possible -112.25381 (45.85 seconds)
Cbc0038I Full problem 374 rows 392 columns, reduced to 66 rows 83 columns
Cbc0010I After 822 nodes, 10 on tree, -80.9534 best solution, best possible -112.25381 (46.56 seconds)
Cbc0010I After 839 nodes, 14 on tree, -80.9534 best solution, best possible -112.25381 (47.30 seconds)
Cbc0010I After 868 nodes, 10 on tree, -80.9534 best solution, best possible -112.25381 (48.02 seconds)
Cbc0010I After 896 nodes, 1 on tree, -80.9534 best solution, best possible -82.522828 (48.79 seconds)
Cbc0001I Search completed - best objective -80.95340000000002, took 86622 iterations and 898 nodes (48.81 seconds)
Cbc0032I Strong branching done 2922 times (85660 iterations), fathomed 31 nodes and fixed 47 variables
Cbc0035I Maximum depth 34, 4503 variables fixed on reduced cost
Total time (CPU seconds):       42.21   (Wallclock seconds):       48.93

