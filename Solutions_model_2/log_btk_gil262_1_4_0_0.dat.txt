Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 489 (-38) rows, 255 (-9) columns and 1462 (-83) elements
Clp1000I sum of infeasibilities 1.4446e-05 - average 2.95419e-08, 205 fixed columns
Coin0506I Presolve 89 (-400) rows, 49 (-206) columns and 263 (-1199) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Coin0511I After Postsolve, objective 912.23826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13640664 - largest nonzero change 0 ( 0%) - largest zero change 2.9824724e-05
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Coin0511I After Postsolve, objective 912.23826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 912.2382593 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 489 rows, 255 columns (254 integer (254 of which binary)) and 1462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.48836
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -262.277 iterations 118
Cbc0038I Solution found of -262.277
Cbc0038I Relaxing continuous gives -262.277
Cbc0038I Rounding solution of -452.251 is better than previous of -262.277

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -452.251 to -751.933 (0.05 seconds)
Cbc0038I Round again with cutoff of -767.964
Cbc0038I Pass   2: suminf.    3.00917 (14) obj. -767.964 iterations 59
Cbc0038I Pass   3: suminf.    2.97005 (13) obj. -767.964 iterations 1
Cbc0038I Pass   4: suminf.    1.90639 (5) obj. -788.504 iterations 40
Cbc0038I Pass   5: suminf.    1.31013 (3) obj. -767.964 iterations 27
Cbc0038I Pass   6: suminf.    0.44398 (4) obj. -767.964 iterations 33
Cbc0038I Pass   7: suminf.    1.66822 (4) obj. -767.964 iterations 20
Cbc0038I Pass   8: suminf.    0.52628 (3) obj. -767.964 iterations 23
Cbc0038I Pass   9: suminf.    1.01965 (4) obj. -767.964 iterations 22
Cbc0038I Pass  10: suminf.    0.46413 (2) obj. -767.964 iterations 32
Cbc0038I Pass  11: suminf.    0.44398 (4) obj. -767.964 iterations 11
Cbc0038I Pass  12: suminf.    1.66822 (4) obj. -767.964 iterations 20
Cbc0038I Pass  13: suminf.    0.52628 (3) obj. -767.964 iterations 23
Cbc0038I Pass  14: suminf.    1.01965 (4) obj. -767.964 iterations 22
Cbc0038I Pass  15: suminf.    0.46413 (2) obj. -767.964 iterations 32
Cbc0038I Pass  16: suminf.    0.44398 (4) obj. -767.964 iterations 11
Cbc0038I Pass  17: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  18: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  19: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  20: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  21: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I Pass  22: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  23: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  24: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  25: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  26: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I Pass  27: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  28: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  29: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  30: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  31: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -751.933 to -760.05 (0.11 seconds)
Cbc0038I Round again with cutoff of -796.819
Cbc0038I Pass  31: suminf.    3.21395 (14) obj. -796.819 iterations 0
Cbc0038I Pass  32: suminf.    1.38871 (10) obj. -796.819 iterations 93
Cbc0038I Pass  33: suminf.    1.04985 (5) obj. -796.819 iterations 24
Cbc0038I Pass  34: suminf.    2.76938 (7) obj. -796.819 iterations 23
Cbc0038I Pass  35: suminf.    2.10308 (6) obj. -796.819 iterations 6
Cbc0038I Pass  36: suminf.    1.54300 (4) obj. -796.819 iterations 8
Cbc0038I Pass  37: suminf.    2.10283 (9) obj. -796.819 iterations 35
Cbc0038I Pass  38: suminf.    1.54748 (5) obj. -796.819 iterations 19
Cbc0038I Pass  39: suminf.    3.43318 (20) obj. -796.819 iterations 87
Cbc0038I Pass  40: suminf.    1.51018 (10) obj. -796.819 iterations 52
Cbc0038I Pass  41: suminf.    1.41656 (10) obj. -796.819 iterations 13
Cbc0038I Pass  42: suminf.    1.95812 (8) obj. -796.819 iterations 60
Cbc0038I Pass  43: suminf.    1.74459 (10) obj. -796.819 iterations 18
Cbc0038I Pass  44: suminf.    3.64171 (9) obj. -796.819 iterations 33
Cbc0038I Pass  45: suminf.    2.78211 (11) obj. -796.819 iterations 34
Cbc0038I Pass  46: suminf.    1.88552 (7) obj. -796.819 iterations 6
Cbc0038I Pass  47: suminf.    1.77544 (6) obj. -796.819 iterations 16
Cbc0038I Pass  48: suminf.    2.80001 (6) obj. -796.819 iterations 18
Cbc0038I Pass  49: suminf.    2.38165 (7) obj. -796.819 iterations 30
Cbc0038I Pass  50: suminf.    2.36247 (7) obj. -796.819 iterations 13
Cbc0038I Pass  51: suminf.    1.12239 (8) obj. -796.819 iterations 27
Cbc0038I Pass  52: suminf.    0.85013 (7) obj. -796.819 iterations 30
Cbc0038I Pass  53: suminf.    2.09432 (7) obj. -796.819 iterations 38
Cbc0038I Pass  54: suminf.    2.02030 (19) obj. -796.819 iterations 38
Cbc0038I Pass  55: suminf.    2.23333 (9) obj. -796.819 iterations 48
Cbc0038I Pass  56: suminf.    1.59253 (7) obj. -796.819 iterations 22
Cbc0038I Pass  57: suminf.    2.28370 (9) obj. -796.819 iterations 33
Cbc0038I Pass  58: suminf.    2.24439 (9) obj. -796.819 iterations 1
Cbc0038I Pass  59: suminf.    1.56430 (10) obj. -796.819 iterations 47
Cbc0038I Pass  60: suminf.    1.46761 (8) obj. -796.819 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 118 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -760.05 to -783.044 (0.19 seconds)
Cbc0038I Round again with cutoff of -831.444
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  60: suminf.    3.83915 (17) obj. -831.444 iterations 12
Cbc0038I Pass  61: suminf.    2.36855 (12) obj. -831.444 iterations 49
Cbc0038I Pass  62: suminf.    2.11500 (20) obj. -831.444 iterations 13
Cbc0038I Pass  63: suminf.    2.11500 (20) obj. -831.444 iterations 2
Cbc0038I Pass  64: suminf.    4.87124 (18) obj. -831.444 iterations 51
Cbc0038I Pass  65: suminf.    4.86257 (16) obj. -831.444 iterations 18
Cbc0038I Pass  66: suminf.    4.90401 (18) obj. -831.444 iterations 46
Cbc0038I Pass  67: suminf.    3.83915 (17) obj. -831.444 iterations 20
Cbc0038I Pass  68: suminf.    2.36855 (12) obj. -831.444 iterations 47
Cbc0038I Pass  69: suminf.    2.11500 (20) obj. -831.444 iterations 13
Cbc0038I Pass  70: suminf.    2.11500 (20) obj. -831.444 iterations 2
Cbc0038I Pass  71: suminf.    3.87191 (16) obj. -831.444 iterations 62
Cbc0038I Pass  72: suminf.    3.66337 (19) obj. -831.444 iterations 20
Cbc0038I Pass  73: suminf.    4.13427 (10) obj. -831.444 iterations 62
Cbc0038I Pass  74: suminf.    3.62068 (13) obj. -831.444 iterations 44
Cbc0038I Pass  75: suminf.    3.61536 (13) obj. -831.444 iterations 2
Cbc0038I Pass  76: suminf.    3.63408 (12) obj. -831.444 iterations 35
Cbc0038I Pass  77: suminf.    3.43930 (12) obj. -831.444 iterations 20
Cbc0038I Pass  78: suminf.    4.17844 (11) obj. -831.444 iterations 38
Cbc0038I Pass  79: suminf.    3.02022 (13) obj. -831.444 iterations 26
Cbc0038I Pass  80: suminf.    2.94719 (13) obj. -831.444 iterations 6
Cbc0038I Pass  81: suminf.    5.12464 (14) obj. -831.444 iterations 27
Cbc0038I Pass  82: suminf.    3.11269 (13) obj. -831.444 iterations 47
Cbc0038I Pass  83: suminf.    4.34155 (13) obj. -831.444 iterations 42
Cbc0038I Pass  84: suminf.    3.17749 (11) obj. -831.444 iterations 71
Cbc0038I Pass  85: suminf.    0.97775 (6) obj. -831.444 iterations 28
Cbc0038I Pass  86: suminf.    1.60672 (6) obj. -831.444 iterations 94
Cbc0038I Pass  87: suminf.    1.43597 (6) obj. -831.444 iterations 6
Cbc0038I Pass  88: suminf.    1.03883 (6) obj. -831.444 iterations 30
Cbc0038I Pass  89: suminf.    0.73767 (4) obj. -831.444 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 111 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -783.044 to -807.924 (0.26 seconds)
Cbc0038I Round again with cutoff of -855.683
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 5
Cbc0038I Pass  89: suminf.    5.04133 (21) obj. -855.683 iterations 14
Cbc0038I Pass  90: suminf.    4.33595 (16) obj. -855.683 iterations 14
Cbc0038I Pass  91: suminf.    3.88437 (16) obj. -855.683 iterations 26
Cbc0038I Pass  92: suminf.    4.61161 (13) obj. -855.683 iterations 43
Cbc0038I Pass  93: suminf.    4.57517 (16) obj. -855.683 iterations 26
Cbc0038I Pass  94: suminf.    6.04121 (14) obj. -855.683 iterations 15
Cbc0038I Pass  95: suminf.    5.84647 (15) obj. -855.683 iterations 14
Cbc0038I Pass  96: suminf.    5.71964 (14) obj. -855.683 iterations 41
Cbc0038I Pass  97: suminf.    5.02180 (17) obj. -855.683 iterations 37
Cbc0038I Pass  98: suminf.    4.78991 (14) obj. -855.683 iterations 7
Cbc0038I Pass  99: suminf.    5.89351 (14) obj. -855.683 iterations 103
Cbc0038I Pass 100: suminf.    5.53637 (15) obj. -855.683 iterations 25
Cbc0038I Pass 101: suminf.    5.53637 (15) obj. -855.683 iterations 0
Cbc0038I Pass 102: suminf.    5.02224 (14) obj. -855.683 iterations 36
Cbc0038I Pass 103: suminf.    4.66872 (14) obj. -855.683 iterations 18
Cbc0038I Pass 104: suminf.    5.49080 (14) obj. -855.683 iterations 52
Cbc0038I Pass 105: suminf.    5.32177 (14) obj. -855.683 iterations 22
Cbc0038I Pass 106: suminf.    5.01962 (14) obj. -855.683 iterations 8
Cbc0038I Pass 107: suminf.    6.04121 (14) obj. -855.683 iterations 33
Cbc0038I Pass 108: suminf.    5.84647 (15) obj. -855.683 iterations 16
Cbc0038I Pass 109: suminf.    5.71964 (14) obj. -855.683 iterations 42
Cbc0038I Pass 110: suminf.    5.02180 (17) obj. -855.683 iterations 38
Cbc0038I Pass 111: suminf.    4.78991 (14) obj. -855.683 iterations 7
Cbc0038I Pass 112: suminf.    5.89351 (14) obj. -855.683 iterations 101
Cbc0038I Pass 113: suminf.    5.53637 (15) obj. -855.683 iterations 25
Cbc0038I Pass 114: suminf.    5.53637 (15) obj. -855.683 iterations 0
Cbc0038I Pass 115: suminf.    5.02224 (14) obj. -855.683 iterations 36
Cbc0038I Pass 116: suminf.    4.66872 (14) obj. -855.683 iterations 18
Cbc0038I Pass 117: suminf.    4.79453 (14) obj. -855.683 iterations 31
Cbc0038I Pass 118: suminf.    4.78991 (14) obj. -855.683 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 97 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -807.924 - took 0.35 seconds
Cbc0012I Integer solution of -807.9244 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 489 rows 255 columns, reduced to 86 rows 47 columns
Cbc0031I 16 added rows had average density of 119.5
Cbc0013I At root node, 16 cuts changed objective from -912.23826 to -872.25468 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 912 row cuts average 3.2 elements, 48 column cuts (48 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 153.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -807.9244 best solution, best possible -871.81503 (0.69 seconds)
Cbc0001I Search completed - best objective -807.9244000000001, took 1791 iterations and 32 nodes (0.81 seconds)
Cbc0032I Strong branching done 366 times (6469 iterations), fathomed 5 nodes and fixed 32 variables
Cbc0035I Maximum depth 10, 316 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 376 (-150) rows, 395 (-129) columns and 19037 (-16699) elements
Clp1000I sum of infeasibilities 5.60951e-06 - average 1.49189e-08, 288 fixed columns
Coin0506I Presolve 93 (-283) rows, 107 (-288) columns and 382 (-18655) elements
Clp0006I 0  Obj 695.56839 Dual inf 20328.786 (101)
Clp0029I End of values pass after 83 iterations
Clp0014I Perturbing problem by 0.001% of 0.18523945 - largest nonzero change 1.8431823e-05 ( 0.0016756202%) - largest zero change 2.9640381e-05
Clp0000I Optimal - objective value 739.57395
Clp0000I Optimal - objective value 739.57395
Coin0511I After Postsolve, objective 739.57395, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 739.57395 Dual inf 772.27243 (147)
Clp0014I Perturbing problem by 0.001% of 1.7045656 - largest nonzero change 1.3842826e-05 ( 0.001164591%) - largest zero change 2.9877033e-05
Clp0000I Optimal - objective value 966.6926
Clp0000I Optimal - objective value 966.6926
Clp0000I Optimal - objective value 966.6926
Coin0511I After Postsolve, objective 966.6926, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 966.6925988 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0004I processed model has 376 rows, 395 columns (395 integer (395 of which binary)) and 19037 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.942%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 155 integers unsatisfied sum - 10.602
Cbc0038I Pass   1: suminf.    1.08776 (73) obj. -497.477 iterations 162
Cbc0038I Pass   2: suminf.    0.54385 (44) obj. -424.999 iterations 29
Cbc0038I Pass   3: suminf.    0.16859 (18) obj. -393.466 iterations 26
Cbc0038I Solution found of -369.703
Cbc0038I Rounding solution of -596.458 is better than previous of -369.703

Cbc0038I Before mini branch and bound, 240 integers at bound fixed and 0 continuous
Cbc0038I Full problem 376 rows 395 columns, reduced to 82 rows 82 columns
Cbc0038I Mini branch and bound improved solution from -596.458 to -725.674 (0.20 seconds)
Cbc0038I Round again with cutoff of -749.761
Cbc0038I Pass   4: suminf.    2.45680 (78) obj. -749.761 iterations 25
Cbc0038I Pass   5: suminf.    2.45680 (78) obj. -749.761 iterations 0
Cbc0038I Pass   6: suminf.    0.92269 (57) obj. -816.445 iterations 34
Cbc0038I Pass   7: suminf.    0.74984 (56) obj. -791.374 iterations 2
Cbc0038I Pass   8: suminf.    0.31120 (29) obj. -756.947 iterations 27
Cbc0038I Pass   9: suminf.    0.19845 (13) obj. -749.761 iterations 28
Cbc0038I Pass  10: suminf.    0.51790 (2) obj. -749.761 iterations 18
Cbc0038I Pass  11: suminf.    0.25839 (3) obj. -749.761 iterations 77
Cbc0038I Pass  12: suminf.    0.14386 (2) obj. -768.8 iterations 19
Cbc0038I Pass  13: suminf.    0.14386 (2) obj. -768.8 iterations 0
Cbc0038I Pass  14: suminf.    0.19880 (2) obj. -749.761 iterations 10
Cbc0038I Pass  15: suminf.    0.17155 (2) obj. -749.761 iterations 7
Cbc0038I Pass  16: suminf.    0.47337 (1) obj. -749.761 iterations 7
Cbc0038I Pass  17: suminf.    0.36735 (1) obj. -766.111 iterations 3
Cbc0038I Pass  18: suminf.    0.34598 (25) obj. -749.761 iterations 123
Cbc0038I Pass  19: suminf.    0.27535 (11) obj. -749.761 iterations 36
Cbc0038I Pass  20: suminf.    0.38554 (1) obj. -751.501 iterations 19
Cbc0038I Pass  21: suminf.    0.31353 (2) obj. -749.761 iterations 23
Cbc0038I Pass  22: suminf.    1.35327 (20) obj. -749.761 iterations 63
Cbc0038I Pass  23: suminf.    0.48335 (16) obj. -749.761 iterations 22
Cbc0038I Pass  24: suminf.    0.46871 (16) obj. -752.02 iterations 2
Cbc0038I Pass  25: suminf.    0.88852 (3) obj. -749.761 iterations 27
Cbc0038I Pass  26: suminf.    0.27854 (2) obj. -760.803 iterations 8
Cbc0038I Pass  27: suminf.    0.13320 (2) obj. -749.761 iterations 4
Cbc0038I Pass  28: suminf.    0.52134 (2) obj. -749.761 iterations 13
Cbc0038I Pass  29: suminf.    1.17964 (37) obj. -749.761 iterations 75
Cbc0038I Pass  30: suminf.    0.86281 (38) obj. -749.761 iterations 24
Cbc0038I Pass  31: suminf.    1.91937 (29) obj. -749.761 iterations 50
Cbc0038I Pass  32: suminf.    1.53729 (28) obj. -749.761 iterations 20
Cbc0038I Pass  33: suminf.    3.40003 (35) obj. -749.761 iterations 41
Cbc0038I Rounding solution of -762.262 is better than previous of -725.674

Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 376 rows 395 columns, reduced to 102 rows 111 columns
Cbc0038I Mini branch and bound did not improve solution (0.35 seconds)
Cbc0038I Round again with cutoff of -803.118
Cbc0038I Pass  33: suminf.    2.96648 (78) obj. -803.118 iterations 0
Cbc0038I Pass  34: suminf.    2.96648 (78) obj. -803.118 iterations 0
Cbc0038I Pass  35: suminf.    0.79669 (50) obj. -807.608 iterations 42
Cbc0038I Pass  36: suminf.    0.76226 (50) obj. -803.118 iterations 3
Cbc0038I Pass  37: suminf.    0.42493 (29) obj. -803.118 iterations 63
Cbc0038I Pass  38: suminf.    0.33501 (28) obj. -803.118 iterations 33
Cbc0038I Pass  39: suminf.    0.44842 (20) obj. -803.118 iterations 24
Cbc0038I Pass  40: suminf.    0.44842 (20) obj. -803.118 iterations 0
Cbc0038I Pass  41: suminf.    0.42186 (3) obj. -803.118 iterations 84
Cbc0038I Pass  42: suminf.    0.34053 (3) obj. -803.118 iterations 17
Cbc0038I Pass  43: suminf.    0.39592 (3) obj. -803.118 iterations 8
Cbc0038I Pass  44: suminf.    0.34473 (3) obj. -803.118 iterations 12
Cbc0038I Pass  45: suminf.    0.42186 (3) obj. -803.118 iterations 21
Cbc0038I Pass  46: suminf.    2.35219 (62) obj. -803.118 iterations 62
Cbc0038I Pass  47: suminf.    0.92974 (16) obj. -803.118 iterations 73
Cbc0038I Pass  48: suminf.    0.91633 (16) obj. -803.118 iterations 43
Cbc0038I Pass  49: suminf.    0.94356 (4) obj. -803.118 iterations 53
Cbc0038I Pass  50: suminf.    0.34600 (4) obj. -803.118 iterations 20
Cbc0038I Pass  51: suminf.    0.48674 (47) obj. -803.118 iterations 62
Cbc0038I Pass  52: suminf.    0.39587 (4) obj. -803.118 iterations 49
Cbc0038I Pass  53: suminf.    0.82214 (4) obj. -803.118 iterations 22
Cbc0038I Pass  54: suminf.    0.82214 (4) obj. -803.118 iterations 16
Cbc0038I Pass  55: suminf.    0.39587 (4) obj. -803.118 iterations 35
Cbc0038I Pass  56: suminf.    1.18931 (28) obj. -803.118 iterations 105
Cbc0038I Pass  57: suminf.    0.71139 (23) obj. -803.118 iterations 24
Cbc0038I Pass  58: suminf.    1.33642 (19) obj. -803.118 iterations 23
Cbc0038I Pass  59: suminf.    0.49352 (16) obj. -803.118 iterations 13
Cbc0038I Pass  60: suminf.    0.49869 (4) obj. -803.118 iterations 41
Cbc0038I Pass  61: suminf.    0.38058 (4) obj. -803.118 iterations 25
Cbc0038I Pass  62: suminf.    1.42810 (46) obj. -803.118 iterations 80
Cbc0038I Rounding solution of -765.235 is better than previous of -762.262

Cbc0038I Before mini branch and bound, 219 integers at bound fixed and 0 continuous
Cbc0038I Full problem 376 rows 395 columns, reduced to 91 rows 99 columns
Cbc0038I Mini branch and bound did not improve solution (0.47 seconds)
Cbc0038I Round again with cutoff of -852.146
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.43480 (78) obj. -852.146 iterations 0
Cbc0038I Pass  63: suminf.    3.43480 (78) obj. -852.146 iterations 0
Cbc0038I Pass  64: suminf.    0.94551 (44) obj. -852.146 iterations 45
Cbc0038I Pass  65: suminf.    0.94551 (44) obj. -852.146 iterations 0
Cbc0038I Pass  66: suminf.    1.43020 (31) obj. -852.146 iterations 32
Cbc0038I Pass  67: suminf.    0.86108 (31) obj. -857.736 iterations 14
Cbc0038I Pass  68: suminf.    1.35343 (34) obj. -852.146 iterations 56
Cbc0038I Pass  69: suminf.    0.82120 (27) obj. -852.146 iterations 28
Cbc0038I Pass  70: suminf.    4.78449 (64) obj. -852.146 iterations 84
Cbc0038I Pass  71: suminf.    3.84524 (59) obj. -852.146 iterations 31
Cbc0038I Pass  72: suminf.    4.72498 (55) obj. -852.146 iterations 46
Cbc0038I Pass  73: suminf.    3.32854 (54) obj. -852.146 iterations 23
Cbc0038I Pass  74: suminf.    2.14207 (46) obj. -852.146 iterations 12
Cbc0038I Pass  75: suminf.    2.08925 (46) obj. -852.146 iterations 1
Cbc0038I Pass  76: suminf.    6.29324 (40) obj. -852.146 iterations 81
Cbc0038I Pass  77: suminf.    5.63928 (39) obj. -852.146 iterations 2
Cbc0038I Pass  78: suminf.    5.26528 (38) obj. -852.146 iterations 16
Cbc0038I Pass  79: suminf.    4.27066 (39) obj. -852.146 iterations 9
Cbc0038I Pass  80: suminf.    4.27066 (39) obj. -852.146 iterations 0
Cbc0038I Pass  81: suminf.    6.59153 (52) obj. -852.146 iterations 49
Cbc0038I Pass  82: suminf.    6.22793 (52) obj. -852.146 iterations 6
Cbc0038I Pass  83: suminf.    5.21952 (55) obj. -852.146 iterations 9
Cbc0038I Pass  84: suminf.    5.21952 (55) obj. -852.146 iterations 0
Cbc0038I Pass  85: suminf.    6.65114 (48) obj. -852.146 iterations 24
Cbc0038I Pass  86: suminf.    6.65114 (48) obj. -852.146 iterations 7
Cbc0038I Pass  87: suminf.    5.73881 (49) obj. -852.146 iterations 8
Cbc0038I Pass  88: suminf.    5.73772 (51) obj. -852.146 iterations 7
Cbc0038I Pass  89: suminf.    6.42570 (45) obj. -852.146 iterations 26
Cbc0038I Pass  90: suminf.    6.41233 (53) obj. -852.146 iterations 2
Cbc0038I Pass  91: suminf.    6.39957 (44) obj. -852.146 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 222 integers at bound fixed and 0 continuous
Cbc0038I Full problem 376 rows 395 columns, reduced to 126 rows 130 columns
Cbc0038I Mini branch and bound did not improve solution (0.63 seconds)
Cbc0038I After 0.63 seconds - Feasibility pump exiting with objective of -765.235 - took 0.52 seconds
Cbc0012I Integer solution of -765.23502 found by feasibility pump after 0 iterations and 0 nodes (0.63 seconds)
Cbc0038I Full problem 376 rows 395 columns, reduced to 85 rows 87 columns
Cbc0031I 147 added rows had average density of 86.979592
Cbc0013I At root node, 147 cuts changed objective from -966.54259 to -858.30595 in 33 passes
Cbc0014I Cut generator 0 (Probing) - 6019 row cuts average 3.4 elements, 17 column cuts (17 active)  in 0.261 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 191 row cuts average 242.8 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 665 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 816 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 404 row cuts average 229.3 elements, 0 column cuts (0 active)  in 0.290 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 76 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -765.23502 best solution, best possible -858.30595 (2.56 seconds)
Cbc0010I After 17 nodes, 8 on tree, -765.23502 best solution, best possible -858.30595 (3.29 seconds)
Cbc0010I After 40 nodes, 9 on tree, -765.23502 best solution, best possible -858.30595 (4.00 seconds)
Cbc0038I Full problem 376 rows 395 columns, reduced to 64 rows 66 columns
Cbc0010I After 72 nodes, 7 on tree, -765.23502 best solution, best possible -858.30595 (4.73 seconds)
Cbc0038I Full problem 376 rows 395 columns, reduced to 81 rows 84 columns
Cbc0010I After 92 nodes, 5 on tree, -765.23502 best solution, best possible -858.30595 (5.44 seconds)
Cbc0010I After 100 nodes, 6 on tree, -765.23502 best solution, best possible -858.30595 (6.28 seconds)
Cbc0010I After 112 nodes, 11 on tree, -765.23502 best solution, best possible -858.30595 (7.02 seconds)
Cbc0010I After 139 nodes, 12 on tree, -765.23502 best solution, best possible -858.30595 (7.74 seconds)
Cbc0010I After 167 nodes, 11 on tree, -765.23502 best solution, best possible -858.30595 (8.48 seconds)
Cbc0010I After 196 nodes, 13 on tree, -765.23502 best solution, best possible -858.30595 (9.18 seconds)
Cbc0038I Full problem 376 rows 395 columns, reduced to 47 rows 51 columns
Cbc0012I Integer solution of -794.2399 found by RINS after 8387 iterations and 200 nodes (9.33 seconds)
Cbc0010I After 230 nodes, 10 on tree, -794.2399 best solution, best possible -858.30595 (9.88 seconds)
Cbc0010I After 277 nodes, 3 on tree, -794.2399 best solution, best possible -858.30595 (10.60 seconds)
Cbc0012I Integer solution of -796.2399 found by DiveCoefficient after 12723 iterations and 278 nodes (10.63 seconds)
Cbc0012I Integer solution of -797.2399 found by DiveCoefficient after 13975 iterations and 286 nodes (10.91 seconds)
Cbc0010I After 299 nodes, 14 on tree, -797.2399 best solution, best possible -858.30595 (11.33 seconds)
Cbc0010I After 335 nodes, 9 on tree, -797.2399 best solution, best possible -858.30595 (12.05 seconds)
Cbc0010I After 367 nodes, 13 on tree, -797.2399 best solution, best possible -858.30595 (12.75 seconds)
Cbc0038I Full problem 376 rows 395 columns, reduced to 154 rows 160 columns
Cbc0010I After 405 nodes, 10 on tree, -797.2399 best solution, best possible -858.30595 (13.65 seconds)
Cbc0010I After 452 nodes, 13 on tree, -797.2399 best solution, best possible -858.30595 (14.35 seconds)
Cbc0010I After 494 nodes, 11 on tree, -797.2399 best solution, best possible -858.30595 (15.06 seconds)
Cbc0038I Full problem 376 rows 395 columns, reduced to 137 rows 140 columns
Cbc0010I After 513 nodes, 12 on tree, -797.2399 best solution, best possible -858.30595 (15.78 seconds)
Cbc0010I After 555 nodes, 17 on tree, -797.2399 best solution, best possible -858.30595 (16.48 seconds)
Cbc0010I After 589 nodes, 15 on tree, -797.2399 best solution, best possible -858.30595 (17.20 seconds)
Cbc0010I After 619 nodes, 14 on tree, -797.2399 best solution, best possible -858.30595 (17.92 seconds)
Cbc0012I Integer solution of -806.9244 found by rounding after 34676 iterations and 647 nodes (18.55 seconds)
Cbc0010I After 652 nodes, 10 on tree, -806.9244 best solution, best possible -858.30595 (18.63 seconds)
Cbc0010I After 681 nodes, 3 on tree, -806.9244 best solution, best possible -858.30595 (19.42 seconds)
Cbc0012I Integer solution of -807.9244 found by rounding after 38266 iterations and 694 nodes (19.86 seconds)
Cbc0038I Full problem 376 rows 395 columns, reduced to 39 rows 46 columns
Cbc0010I After 706 nodes, 10 on tree, -807.9244 best solution, best possible -858.30595 (20.14 seconds)
Cbc0001I Search completed - best objective -807.9244000000001, took 39813 iterations and 729 nodes (20.45 seconds)
Cbc0032I Strong branching done 4490 times (48765 iterations), fathomed 31 nodes and fixed 51 variables
Cbc0035I Maximum depth 33, 4029 variables fixed on reduced cost
Total time (CPU seconds):       14.93   (Wallclock seconds):       20.48

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 489 (-38) rows, 255 (-9) columns and 1462 (-83) elements
Clp1000I sum of infeasibilities 1.4446e-05 - average 2.95419e-08, 205 fixed columns
Coin0506I Presolve 89 (-400) rows, 49 (-206) columns and 263 (-1199) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Coin0511I After Postsolve, objective 912.23826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13640664 - largest nonzero change 0 ( 0%) - largest zero change 2.9824724e-05
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Clp0000I Optimal - objective value 912.23826
Coin0511I After Postsolve, objective 912.23826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 912.2382593 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 489 rows, 255 columns (254 integer (254 of which binary)) and 1462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 9.48836
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -262.277 iterations 118
Cbc0038I Solution found of -262.277
Cbc0038I Relaxing continuous gives -262.277
Cbc0038I Rounding solution of -452.251 is better than previous of -262.277

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 77 rows 42 columns
Cbc0038I Mini branch and bound improved solution from -452.251 to -751.933 (0.05 seconds)
Cbc0038I Round again with cutoff of -767.964
Cbc0038I Pass   2: suminf.    3.00917 (14) obj. -767.964 iterations 59
Cbc0038I Pass   3: suminf.    2.97005 (13) obj. -767.964 iterations 1
Cbc0038I Pass   4: suminf.    1.90639 (5) obj. -788.504 iterations 40
Cbc0038I Pass   5: suminf.    1.31013 (3) obj. -767.964 iterations 27
Cbc0038I Pass   6: suminf.    0.44398 (4) obj. -767.964 iterations 33
Cbc0038I Pass   7: suminf.    1.66822 (4) obj. -767.964 iterations 20
Cbc0038I Pass   8: suminf.    0.52628 (3) obj. -767.964 iterations 23
Cbc0038I Pass   9: suminf.    1.01965 (4) obj. -767.964 iterations 22
Cbc0038I Pass  10: suminf.    0.46413 (2) obj. -767.964 iterations 32
Cbc0038I Pass  11: suminf.    0.44398 (4) obj. -767.964 iterations 11
Cbc0038I Pass  12: suminf.    1.66822 (4) obj. -767.964 iterations 20
Cbc0038I Pass  13: suminf.    0.52628 (3) obj. -767.964 iterations 23
Cbc0038I Pass  14: suminf.    1.01965 (4) obj. -767.964 iterations 22
Cbc0038I Pass  15: suminf.    0.46413 (2) obj. -767.964 iterations 32
Cbc0038I Pass  16: suminf.    0.44398 (4) obj. -767.964 iterations 11
Cbc0038I Pass  17: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  18: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  19: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  20: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  21: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I Pass  22: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  23: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  24: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  25: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  26: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I Pass  27: suminf.    1.66822 (4) obj. -767.964 iterations 19
Cbc0038I Pass  28: suminf.    0.52628 (3) obj. -767.964 iterations 22
Cbc0038I Pass  29: suminf.    1.01965 (4) obj. -767.964 iterations 21
Cbc0038I Pass  30: suminf.    0.46413 (2) obj. -767.964 iterations 30
Cbc0038I Pass  31: suminf.    0.44398 (4) obj. -767.964 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -751.933 to -760.05 (0.11 seconds)
Cbc0038I Round again with cutoff of -796.819
Cbc0038I Pass  31: suminf.    3.21395 (14) obj. -796.819 iterations 0
Cbc0038I Pass  32: suminf.    1.38871 (10) obj. -796.819 iterations 93
Cbc0038I Pass  33: suminf.    1.04985 (5) obj. -796.819 iterations 24
Cbc0038I Pass  34: suminf.    2.76938 (7) obj. -796.819 iterations 23
Cbc0038I Pass  35: suminf.    2.10308 (6) obj. -796.819 iterations 6
Cbc0038I Pass  36: suminf.    1.54300 (4) obj. -796.819 iterations 8
Cbc0038I Pass  37: suminf.    2.10283 (9) obj. -796.819 iterations 35
Cbc0038I Pass  38: suminf.    1.54748 (5) obj. -796.819 iterations 19
Cbc0038I Pass  39: suminf.    3.43318 (20) obj. -796.819 iterations 87
Cbc0038I Pass  40: suminf.    1.51018 (10) obj. -796.819 iterations 52
Cbc0038I Pass  41: suminf.    1.41656 (10) obj. -796.819 iterations 13
Cbc0038I Pass  42: suminf.    1.95812 (8) obj. -796.819 iterations 60
Cbc0038I Pass  43: suminf.    1.74459 (10) obj. -796.819 iterations 18
Cbc0038I Pass  44: suminf.    3.64171 (9) obj. -796.819 iterations 33
Cbc0038I Pass  45: suminf.    2.78211 (11) obj. -796.819 iterations 34
Cbc0038I Pass  46: suminf.    1.88552 (7) obj. -796.819 iterations 6
Cbc0038I Pass  47: suminf.    1.77544 (6) obj. -796.819 iterations 16
Cbc0038I Pass  48: suminf.    2.80001 (6) obj. -796.819 iterations 18
Cbc0038I Pass  49: suminf.    2.38165 (7) obj. -796.819 iterations 30
Cbc0038I Pass  50: suminf.    2.36247 (7) obj. -796.819 iterations 13
Cbc0038I Pass  51: suminf.    1.12239 (8) obj. -796.819 iterations 27
Cbc0038I Pass  52: suminf.    0.85013 (7) obj. -796.819 iterations 30
Cbc0038I Pass  53: suminf.    2.09432 (7) obj. -796.819 iterations 38
Cbc0038I Pass  54: suminf.    2.02030 (19) obj. -796.819 iterations 38
Cbc0038I Pass  55: suminf.    2.23333 (9) obj. -796.819 iterations 48
Cbc0038I Pass  56: suminf.    1.59253 (7) obj. -796.819 iterations 22
Cbc0038I Pass  57: suminf.    2.28370 (9) obj. -796.819 iterations 33
Cbc0038I Pass  58: suminf.    2.24439 (9) obj. -796.819 iterations 1
Cbc0038I Pass  59: suminf.    1.56430 (10) obj. -796.819 iterations 47
Cbc0038I Pass  60: suminf.    1.46761 (8) obj. -796.819 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 189 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 118 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -760.05 to -783.044 (0.19 seconds)
Cbc0038I Round again with cutoff of -831.444
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  60: suminf.    3.83915 (17) obj. -831.444 iterations 12
Cbc0038I Pass  61: suminf.    2.36855 (12) obj. -831.444 iterations 49
Cbc0038I Pass  62: suminf.    2.11500 (20) obj. -831.444 iterations 13
Cbc0038I Pass  63: suminf.    2.11500 (20) obj. -831.444 iterations 2
Cbc0038I Pass  64: suminf.    4.87124 (18) obj. -831.444 iterations 51
Cbc0038I Pass  65: suminf.    4.86257 (16) obj. -831.444 iterations 18
Cbc0038I Pass  66: suminf.    4.90401 (18) obj. -831.444 iterations 46
Cbc0038I Pass  67: suminf.    3.83915 (17) obj. -831.444 iterations 20
Cbc0038I Pass  68: suminf.    2.36855 (12) obj. -831.444 iterations 47
Cbc0038I Pass  69: suminf.    2.11500 (20) obj. -831.444 iterations 13
Cbc0038I Pass  70: suminf.    2.11500 (20) obj. -831.444 iterations 2
Cbc0038I Pass  71: suminf.    3.87191 (16) obj. -831.444 iterations 62
Cbc0038I Pass  72: suminf.    3.66337 (19) obj. -831.444 iterations 20
Cbc0038I Pass  73: suminf.    4.13427 (10) obj. -831.444 iterations 62
Cbc0038I Pass  74: suminf.    3.62068 (13) obj. -831.444 iterations 44
Cbc0038I Pass  75: suminf.    3.61536 (13) obj. -831.444 iterations 2
Cbc0038I Pass  76: suminf.    3.63408 (12) obj. -831.444 iterations 35
Cbc0038I Pass  77: suminf.    3.43930 (12) obj. -831.444 iterations 20
Cbc0038I Pass  78: suminf.    4.17844 (11) obj. -831.444 iterations 38
Cbc0038I Pass  79: suminf.    3.02022 (13) obj. -831.444 iterations 26
Cbc0038I Pass  80: suminf.    2.94719 (13) obj. -831.444 iterations 6
Cbc0038I Pass  81: suminf.    5.12464 (14) obj. -831.444 iterations 27
Cbc0038I Pass  82: suminf.    3.11269 (13) obj. -831.444 iterations 47
Cbc0038I Pass  83: suminf.    4.34155 (13) obj. -831.444 iterations 42
Cbc0038I Pass  84: suminf.    3.17749 (11) obj. -831.444 iterations 71
Cbc0038I Pass  85: suminf.    0.97775 (6) obj. -831.444 iterations 28
Cbc0038I Pass  86: suminf.    1.60672 (6) obj. -831.444 iterations 94
Cbc0038I Pass  87: suminf.    1.43597 (6) obj. -831.444 iterations 6
Cbc0038I Pass  88: suminf.    1.03883 (6) obj. -831.444 iterations 30
Cbc0038I Pass  89: suminf.    0.73767 (4) obj. -831.444 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 192 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 111 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -783.044 to -807.924 (0.26 seconds)
Cbc0038I Round again with cutoff of -855.683
Cbc0038I Reduced cost fixing fixed 24 variables on major pass 5
Cbc0038I Pass  89: suminf.    5.04133 (21) obj. -855.683 iterations 14
Cbc0038I Pass  90: suminf.    4.33595 (16) obj. -855.683 iterations 14
Cbc0038I Pass  91: suminf.    3.88437 (16) obj. -855.683 iterations 26
Cbc0038I Pass  92: suminf.    4.61161 (13) obj. -855.683 iterations 43
Cbc0038I Pass  93: suminf.    4.57517 (16) obj. -855.683 iterations 26
Cbc0038I Pass  94: suminf.    6.04121 (14) obj. -855.683 iterations 15
Cbc0038I Pass  95: suminf.    5.84647 (15) obj. -855.683 iterations 14
Cbc0038I Pass  96: suminf.    5.71964 (14) obj. -855.683 iterations 41
Cbc0038I Pass  97: suminf.    5.02180 (17) obj. -855.683 iterations 37
Cbc0038I Pass  98: suminf.    4.78991 (14) obj. -855.683 iterations 7
Cbc0038I Pass  99: suminf.    5.89351 (14) obj. -855.683 iterations 103
Cbc0038I Pass 100: suminf.    5.53637 (15) obj. -855.683 iterations 25
Cbc0038I Pass 101: suminf.    5.53637 (15) obj. -855.683 iterations 0
Cbc0038I Pass 102: suminf.    5.02224 (14) obj. -855.683 iterations 36
Cbc0038I Pass 103: suminf.    4.66872 (14) obj. -855.683 iterations 18
Cbc0038I Pass 104: suminf.    5.49080 (14) obj. -855.683 iterations 52
Cbc0038I Pass 105: suminf.    5.32177 (14) obj. -855.683 iterations 22
Cbc0038I Pass 106: suminf.    5.01962 (14) obj. -855.683 iterations 8
Cbc0038I Pass 107: suminf.    6.04121 (14) obj. -855.683 iterations 33
Cbc0038I Pass 108: suminf.    5.84647 (15) obj. -855.683 iterations 16
Cbc0038I Pass 109: suminf.    5.71964 (14) obj. -855.683 iterations 42
Cbc0038I Pass 110: suminf.    5.02180 (17) obj. -855.683 iterations 38
Cbc0038I Pass 111: suminf.    4.78991 (14) obj. -855.683 iterations 7
Cbc0038I Pass 112: suminf.    5.89351 (14) obj. -855.683 iterations 101
Cbc0038I Pass 113: suminf.    5.53637 (15) obj. -855.683 iterations 25
Cbc0038I Pass 114: suminf.    5.53637 (15) obj. -855.683 iterations 0
Cbc0038I Pass 115: suminf.    5.02224 (14) obj. -855.683 iterations 36
Cbc0038I Pass 116: suminf.    4.66872 (14) obj. -855.683 iterations 18
Cbc0038I Pass 117: suminf.    4.79453 (14) obj. -855.683 iterations 31
Cbc0038I Pass 118: suminf.    4.78991 (14) obj. -855.683 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 489 rows 255 columns, reduced to 97 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -807.924 - took 0.34 seconds
Cbc0012I Integer solution of -807.9244 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 489 rows 255 columns, reduced to 86 rows 47 columns
Cbc0031I 16 added rows had average density of 119.5
Cbc0013I At root node, 16 cuts changed objective from -912.23826 to -872.25468 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 912 row cuts average 3.2 elements, 48 column cuts (48 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 153.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0010I After 1 nodes, 2 on tree, -807.9244 best solution, best possible -871.81503 (0.68 seconds)
Cbc0001I Search completed - best objective -807.9244000000001, took 1791 iterations and 32 nodes (0.81 seconds)
Cbc0032I Strong branching done 366 times (6469 iterations), fathomed 5 nodes and fixed 32 variables
Cbc0035I Maximum depth 10, 316 variables fixed on reduced cost
Total time (CPU seconds):       0.79   (Wallclock seconds):       0.81

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 374 (-153) rows, 393 (-132) columns and 18874 (-16863) elements
Clp1000I sum of infeasibilities 4.88973e-06 - average 1.30742e-08, 292 fixed columns
Coin0506I Presolve 88 (-286) rows, 101 (-292) columns and 361 (-18513) elements
Clp0006I 0  Obj 706.12897 Primal inf 1.2069613e-07 (1) Dual inf 4.1725253e+08 (96)
Clp0029I End of values pass after 101 iterations
Clp0014I Perturbing problem by 0.001% of 1.9359652 - largest nonzero change 1.7351155e-05 ( 0.00096919789%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 739.29654
Clp0000I Optimal - objective value 739.29654
Coin0511I After Postsolve, objective 739.29654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 739.29654 Dual inf 872.45089 (148)
Clp0014I Perturbing problem by 0.001% of 1.7111298 - largest nonzero change 1.8352239e-05 ( 0.0014219495%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 966.22108
Clp0000I Optimal - objective value 966.22108
Clp0000I Optimal - objective value 966.22108
Coin0511I After Postsolve, objective 966.22108, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 966.2210768 - 0 iterations time 0.142, Presolve 0.00, Idiot 0.13

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 374 rows, 393 columns (393 integer (393 of which binary)) and 18874 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.951%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 146 integers unsatisfied sum - 9.85254
Cbc0038I Pass   1: suminf.    1.09598 (73) obj. -497.46 iterations 152
Cbc0038I Pass   2: suminf.    0.64848 (50) obj. -432.859 iterations 23
Cbc0038I Pass   3: suminf.    0.21988 (22) obj. -397.414 iterations 28
Cbc0038I Solution found of -369.703
Cbc0038I Rounding solution of -596.458 is better than previous of -369.703

Cbc0038I Before mini branch and bound, 247 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 393 columns, reduced to 73 rows 73 columns
Cbc0038I Mini branch and bound improved solution from -596.458 to -725.674 (0.16 seconds)
Cbc0038I Round again with cutoff of -749.708
Cbc0038I Pass   4: suminf.    1.45351 (78) obj. -749.708 iterations 22
Cbc0038I Pass   5: suminf.    1.45351 (78) obj. -749.708 iterations 0
Cbc0038I Pass   6: suminf.    1.45623 (69) obj. -836.582 iterations 27
Cbc0038I Pass   7: suminf.    0.96893 (67) obj. -806.068 iterations 31
Cbc0038I Pass   8: suminf.    0.56456 (45) obj. -776.628 iterations 22
Cbc0038I Pass   9: suminf.    0.28585 (27) obj. -754.972 iterations 18
Cbc0038I Pass  10: suminf.    0.25526 (2) obj. -749.708 iterations 60
Cbc0038I Pass  11: suminf.    0.14386 (2) obj. -768.8 iterations 17
Cbc0038I Pass  12: suminf.    0.14386 (2) obj. -768.8 iterations 0
Cbc0038I Pass  13: suminf.    0.19461 (2) obj. -749.708 iterations 12
Cbc0038I Pass  14: suminf.    0.17034 (2) obj. -749.708 iterations 12
Cbc0038I Pass  15: suminf.    0.47371 (1) obj. -749.708 iterations 9
Cbc0038I Pass  16: suminf.    0.36735 (1) obj. -766.111 iterations 4
Cbc0038I Pass  17: suminf.    0.73500 (19) obj. -754.827 iterations 59
Cbc0038I Pass  18: suminf.    0.47562 (16) obj. -749.708 iterations 33
Cbc0038I Pass  19: suminf.    0.99878 (5) obj. -749.708 iterations 21
Cbc0038I Pass  20: suminf.    0.86191 (5) obj. -749.708 iterations 11
Cbc0038I Pass  21: suminf.    0.49684 (2) obj. -783.143 iterations 13
Cbc0038I Pass  22: suminf.    0.27160 (1) obj. -780.76 iterations 3
Cbc0038I Pass  23: suminf.    0.02883 (1) obj. -749.708 iterations 5
Cbc0038I Pass  24: suminf.    0.05000 (1) obj. -752.822 iterations 4
Cbc0038I Pass  25: suminf.    0.02983 (1) obj. -749.708 iterations 3
Cbc0038I Pass  26: suminf.    1.49637 (38) obj. -749.708 iterations 94
Cbc0038I Pass  27: suminf.    0.72509 (13) obj. -749.708 iterations 25
Cbc0038I Pass  28: suminf.    0.69685 (12) obj. -749.708 iterations 19
Cbc0038I Pass  29: suminf.    0.35933 (2) obj. -749.708 iterations 22
Cbc0038I Pass  30: suminf.    0.35933 (2) obj. -749.708 iterations 0
Cbc0038I Pass  31: suminf.    0.47821 (2) obj. -749.708 iterations 6
Cbc0038I Pass  32: suminf.    0.47821 (2) obj. -749.708 iterations 4
Cbc0038I Pass  33: suminf.    0.52742 (2) obj. -755.249 iterations 6
Cbc0038I Rounding solution of -778.504 is better than previous of -725.674

Cbc0038I Before mini branch and bound, 230 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 393 columns, reduced to 112 rows 119 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I Round again with cutoff of -816.006
Cbc0038I Pass  33: suminf.    2.08702 (78) obj. -816.006 iterations 0
Cbc0038I Pass  34: suminf.    2.08702 (78) obj. -816.006 iterations 0
Cbc0038I Pass  35: suminf.    1.18665 (55) obj. -816.975 iterations 40
Cbc0038I Pass  36: suminf.    0.98233 (55) obj. -816.006 iterations 95
Cbc0038I Pass  37: suminf.    0.66864 (41) obj. -816.138 iterations 31
Cbc0038I Pass  38: suminf.    0.66864 (41) obj. -816.138 iterations 0
Cbc0038I Pass  39: suminf.    0.73168 (24) obj. -816.006 iterations 37
Cbc0038I Pass  40: suminf.    0.73168 (24) obj. -816.006 iterations 0
Cbc0038I Pass  41: suminf.    0.75706 (10) obj. -816.006 iterations 45
Cbc0038I Pass  42: suminf.    0.67573 (10) obj. -816.006 iterations 7
Cbc0038I Pass  43: suminf.    0.50485 (3) obj. -816.006 iterations 16
Cbc0038I Pass  44: suminf.    0.31384 (2) obj. -817.873 iterations 10
Cbc0038I Pass  45: suminf.    0.70695 (3) obj. -816.006 iterations 44
Cbc0038I Pass  46: suminf.    0.71003 (11) obj. -816.006 iterations 84
Cbc0038I Pass  47: suminf.    0.34269 (10) obj. -816.006 iterations 28
Cbc0038I Pass  48: suminf.    0.33658 (5) obj. -816.006 iterations 43
Cbc0038I Pass  49: suminf.    0.29272 (5) obj. -816.006 iterations 26
Cbc0038I Pass  50: suminf.    1.08251 (16) obj. -816.006 iterations 79
Cbc0038I Pass  51: suminf.    0.31987 (14) obj. -817.103 iterations 21
Cbc0038I Pass  52: suminf.    0.64438 (65) obj. -816.006 iterations 62
Cbc0038I Pass  53: suminf.    0.40736 (10) obj. -816.006 iterations 9
Cbc0038I Pass  54: suminf.    5.48478 (51) obj. -816.006 iterations 30
Cbc0038I Pass  55: suminf.    5.18446 (53) obj. -816.006 iterations 17
Cbc0038I Pass  56: suminf.    1.20808 (38) obj. -816.006 iterations 28
Cbc0038I Pass  57: suminf.    1.20808 (38) obj. -816.006 iterations 0
Cbc0038I Pass  58: suminf.    4.73241 (32) obj. -816.006 iterations 50
Cbc0038I Pass  59: suminf.    3.78175 (31) obj. -816.006 iterations 28
Cbc0038I Pass  60: suminf.    4.92326 (19) obj. -816.006 iterations 55
Cbc0038I Pass  61: suminf.    3.92388 (20) obj. -816.006 iterations 17
Cbc0038I Pass  62: suminf.    4.32325 (28) obj. -816.006 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 226 integers at bound fixed and 0 continuous
Cbc0038I Full problem 374 rows 393 columns, reduced to 116 rows 121 columns
Cbc0038I Mini branch and bound did not improve solution (0.50 seconds)
Cbc0038I After 0.50 seconds - Feasibility pump exiting with objective of -778.504 - took 0.39 seconds
Cbc0012I Integer solution of -778.504 found by feasibility pump after 0 iterations and 0 nodes (0.50 seconds)
Cbc0038I Full problem 374 rows 393 columns, reduced to 106 rows 111 columns
Cbc0031I 146 added rows had average density of 85.335616
Cbc0013I At root node, 146 cuts changed objective from -966.01181 to -846.92604 in 26 passes
Cbc0014I Cut generator 0 (Probing) - 4526 row cuts average 5.5 elements, 31 column cuts (31 active)  in 0.187 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 95 row cuts average 131.1 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 629 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 748 row cuts average 39.8 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 490 row cuts average 188.8 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 40 row cuts average 87.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -778.504 best solution, best possible -846.92604 (1.98 seconds)
Cbc0010I After 17 nodes, 4 on tree, -778.504 best solution, best possible -846.92604 (2.74 seconds)
Cbc0012I Integer solution of -794.2399 found by rounding after 2888 iterations and 29 nodes (3.13 seconds)
Cbc0038I Full problem 374 rows 393 columns, reduced to 0 rows 0 columns
Cbc0038I Full problem 520 rows 393 columns, reduced to 310 rows 329 columns
Cbc0044I Reduced cost fixing - 310 rows, 329 columns - restarting search
Cbc0012I Integer solution of -794.2399 found by Previous solution after 0 iterations and 0 nodes (3.34 seconds)
Cbc0038I Full problem 310 rows 329 columns, reduced to 106 rows 110 columns
Cbc0012I Integer solution of -798.2399 found by RINS after 0 iterations and 0 nodes (3.40 seconds)
Cbc0031I 140 added rows had average density of 65.235714
Cbc0013I At root node, 140 cuts changed objective from -962.37289 to -846.13878 in 33 passes
Cbc0014I Cut generator 0 (Probing) - 5140 row cuts average 2.8 elements, 13 column cuts (13 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 37 row cuts average 168.4 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 412 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 499 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 104 row cuts average 136.3 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 473 row cuts average 51.4 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -798.2399 best solution, best possible -844.93667 (4.69 seconds)
Cbc0012I Integer solution of -804.9244 found by DiveCoefficient after 2022 iterations and 14 nodes (5.47 seconds)
Cbc0010I After 41 nodes, 9 on tree, -804.9244 best solution, best possible -844.93667 (5.69 seconds)
Cbc0038I Full problem 310 rows 329 columns, reduced to 124 rows 130 columns
Cbc0038I Full problem 310 rows 329 columns, reduced to 91 rows 96 columns
Cbc0010I After 120 nodes, 18 on tree, -804.9244 best solution, best possible -844.93667 (6.73 seconds)
Cbc0010I After 208 nodes, 13 on tree, -804.9244 best solution, best possible -844.93667 (7.73 seconds)
Cbc0010I After 285 nodes, 12 on tree, -804.9244 best solution, best possible -844.93667 (8.74 seconds)
Cbc0038I Full problem 310 rows 329 columns, reduced to 143 rows 149 columns
Cbc0010I After 353 nodes, 10 on tree, -804.9244 best solution, best possible -844.93667 (9.74 seconds)
Cbc0010I After 444 nodes, 14 on tree, -804.9244 best solution, best possible -844.93667 (10.75 seconds)
Cbc0004I Integer solution of -805.9244 found after 19803 iterations and 481 nodes (11.14 seconds)
Cbc0038I Full problem 310 rows 329 columns, reduced to 17 rows 18 columns
Cbc0010I After 541 nodes, 6 on tree, -805.9244 best solution, best possible -844.93667 (11.75 seconds)
Cbc0012I Integer solution of -806.9244 found by rounding after 23734 iterations and 577 nodes (12.37 seconds)
Cbc0038I Full problem 310 rows 329 columns, reduced to 18 rows 20 columns
Cbc0010I After 603 nodes, 16 on tree, -806.9244 best solution, best possible -844.93667 (12.76 seconds)
Cbc0012I Integer solution of -807.9244 found by DiveCoefficient after 25320 iterations and 641 nodes (13.16 seconds)
Cbc0010I After 701 nodes, 1 on tree, -807.9244 best solution, best possible -844.93667 (13.76 seconds)
Cbc0001I Search completed - best objective -807.9244000000001, took 28091 iterations and 702 nodes (13.77 seconds)
Cbc0032I Strong branching done 1502 times (27795 iterations), fathomed 12 nodes and fixed 24 variables
Cbc0035I Maximum depth 31, 2090 variables fixed on reduced cost
Cbc0038I Probing was tried 509 times and created 17395 cuts of which 0 were active after adding rounds of cuts (0.491 seconds)
Cbc0038I Gomory was tried 33 times and created 37 cuts of which 0 were active after adding rounds of cuts (0.123 seconds)
Cbc0038I Knapsack was tried 476 times and created 2198 cuts of which 0 were active after adding rounds of cuts (0.549 seconds)
Cbc0038I Clique was tried 476 times and created 2587 cuts of which 0 were active after adding rounds of cuts (0.144 seconds)
Cbc0038I OddWheel was tried 33 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.141 seconds)
Cbc0038I MixedIntegerRounding2 was tried 476 times and created 4050 cuts of which 0 were active after adding rounds of cuts (0.551 seconds)
Cbc0038I FlowCover was tried 33 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I TwoMirCuts was tried 476 times and created 307 cuts of which 0 were active after adding rounds of cuts (0.325 seconds)
Cbc0038I ZeroHalf was tried 476 times and created 671 cuts of which 0 were active after adding rounds of cuts (2.169 seconds)
Cbc0038I Stored from first was tried 476 times and created 1749 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -807.9244 found by Reduced search after 31555 iterations and 752 nodes (13.78 seconds)
Cbc0001I Search completed - best objective -807.9244000000001, took 31555 iterations and 752 nodes (13.78 seconds)
Cbc0032I Strong branching done 940 times (16446 iterations), fathomed 5 nodes and fixed 10 variables
Cbc0035I Maximum depth 23, 468 variables fixed on reduced cost
Total time (CPU seconds):       11.22   (Wallclock seconds):       13.80

