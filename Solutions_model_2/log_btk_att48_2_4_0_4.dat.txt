Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 59 (-40) rows, 34 (-16) columns and 149 (-136) elements
Clp0000I Optimal - objective value 23764.106
Coin0511I After Postsolve, objective 23764.106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 23764.10556 - 21 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 59 rows, 34 columns (33 integer (33 of which binary)) and 149 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.472%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.81223
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -22616.6 iterations 15
Cbc0038I Solution found of -22616.6
Cbc0038I Relaxing continuous gives -22616.6
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 34 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -22616.6 to -22616.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -22731.4
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.09744 (1) obj. -22731.4 iterations 7
Cbc0038I Pass   3: suminf.    0.43326 (1) obj. -22731.4 iterations 5
Cbc0038I Pass   4: suminf.    0.95268 (3) obj. -22731.4 iterations 2
Cbc0038I Pass   5: suminf.    0.95268 (3) obj. -22731.4 iterations 1
Cbc0038I Pass   6: suminf.    0.10665 (5) obj. -22731.4 iterations 9
Cbc0038I Pass   7: suminf.    2.00000 (6) obj. -22731.4 iterations 12
Cbc0038I Pass   8: suminf.    1.00000 (6) obj. -22731.4 iterations 11
Cbc0038I Pass   9: suminf.    1.00000 (6) obj. -22731.4 iterations 0
Cbc0038I Pass  10: suminf.    0.58923 (5) obj. -22731.4 iterations 5
Cbc0038I Pass  11: suminf.    0.09744 (1) obj. -22731.4 iterations 8
Cbc0038I Pass  12: suminf.    0.43326 (1) obj. -22731.4 iterations 4
Cbc0038I Pass  13: suminf.    0.13539 (3) obj. -22731.4 iterations 7
Cbc0038I Pass  14: suminf.    1.00000 (4) obj. -22731.4 iterations 7
Cbc0038I Pass  15: suminf.    0.19488 (2) obj. -22731.4 iterations 4
Cbc0038I Pass  16: suminf.    2.03386 (7) obj. -22731.4 iterations 12
Cbc0038I Pass  17: suminf.    2.03386 (7) obj. -22731.4 iterations 4
Cbc0038I Pass  18: suminf.    1.00000 (6) obj. -22731.4 iterations 5
Cbc0038I Pass  19: suminf.    1.00000 (6) obj. -22731.4 iterations 7
Cbc0038I Pass  20: suminf.    0.58923 (5) obj. -22731.4 iterations 4
Cbc0038I Pass  21: suminf.    0.09744 (1) obj. -22731.4 iterations 7
Cbc0038I Pass  22: suminf.    0.43326 (1) obj. -22731.4 iterations 5
Cbc0038I Pass  23: suminf.    3.03068 (9) obj. -22731.4 iterations 11
Cbc0038I Pass  24: suminf.    2.69302 (9) obj. -22731.4 iterations 2
Cbc0038I Pass  25: suminf.    2.03386 (7) obj. -22731.4 iterations 2
Cbc0038I Pass  26: suminf.    1.00000 (6) obj. -22731.4 iterations 4
Cbc0038I Pass  27: suminf.    1.00000 (6) obj. -22731.4 iterations 8
Cbc0038I Pass  28: suminf.    0.58923 (5) obj. -22731.4 iterations 4
Cbc0038I Pass  29: suminf.    0.09744 (1) obj. -22731.4 iterations 7
Cbc0038I Pass  30: suminf.    0.43326 (1) obj. -22731.4 iterations 3
Cbc0038I Pass  31: suminf.    2.07163 (6) obj. -22731.4 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 34 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -22616.6 - took 0.02 seconds
Cbc0012I Integer solution of -22616.649 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 59 rows 34 columns, reduced to 13 rows 11 columns
Cbc0031I 4 added rows had average density of 5.25
Cbc0013I At root node, 13 cuts changed objective from -23764.106 to -22616.649 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 24 row cuts average 2.6 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22616.649, took 11 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-30) rows, 75 (-21) columns and 873 (-540) elements
Clp1000I sum of infeasibilities 0 - average 0, 75 fixed columns
Coin0506I Presolve 0 (-68) rows, 0 (-75) columns and 0 (-873) elements
Clp0000I Optimal - objective value 23159.149
Clp0000I Optimal - objective value 23159.149
Coin0511I After Postsolve, objective 23159.149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0323816 - largest nonzero change 9.9057843e-05 ( 0.025936617%) - largest zero change 0
Clp0000I Optimal - objective value 26286.292
Clp0000I Optimal - objective value 26286.292
Clp0000I Optimal - objective value 26286.292
Coin0511I After Postsolve, objective 26286.292, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26286.29221 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 78 columns (78 integer (78 of which binary)) and 882 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.990%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 14.1049
Cbc0038I Pass   1: suminf.    2.71140 (19) obj. -14499.2 iterations 29
Cbc0038I Pass   2: suminf.    2.71140 (19) obj. -14499.2 iterations 5
Cbc0038I Pass   3: suminf.    0.05556 (1) obj. -13315.6 iterations 18
Cbc0038I Solution found of -13265.6
Cbc0038I Rounding solution of -13427.6 is better than previous of -13265.6

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 78 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -13427.6 to -22616.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -22896
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.   10.57453 (44) obj. -22896 iterations 20
Cbc0038I Pass   5: suminf.   10.57453 (44) obj. -22896 iterations 1
Cbc0038I Pass   6: suminf.    5.56786 (25) obj. -22896 iterations 26
Cbc0038I Pass   7: suminf.    0.43308 (1) obj. -22896 iterations 31
Cbc0038I Pass   8: suminf.    0.43308 (1) obj. -22896 iterations 2
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -22939.1 iterations 7
Cbc0038I Pass  10: suminf.    4.28062 (15) obj. -22896 iterations 16
Cbc0038I Pass  11: suminf.    3.46868 (12) obj. -22896 iterations 4
Cbc0038I Pass  12: suminf.    3.14057 (10) obj. -23442.4 iterations 2
Cbc0038I Pass  13: suminf.    5.77621 (20) obj. -22896 iterations 13
Cbc0038I Pass  14: suminf.    5.45625 (19) obj. -22896 iterations 3
Cbc0038I Pass  15: suminf.    0.96128 (5) obj. -22896 iterations 14
Cbc0038I Pass  16: suminf.    0.93571 (4) obj. -23328 iterations 1
Cbc0038I Pass  17: suminf.    0.43308 (1) obj. -22896 iterations 8
Cbc0038I Pass  18: suminf.    0.50000 (1) obj. -22939.1 iterations 5
Cbc0038I Pass  19: suminf.    6.89342 (20) obj. -22896 iterations 21
Cbc0038I Pass  20: suminf.    5.63842 (18) obj. -22896 iterations 4
Cbc0038I Pass  21: suminf.    1.41317 (6) obj. -22896 iterations 16
Cbc0038I Pass  22: suminf.    3.04859 (16) obj. -22896 iterations 20
Cbc0038I Pass  23: suminf.    2.82219 (11) obj. -22896 iterations 5
Cbc0038I Pass  24: suminf.    0.43308 (1) obj. -22896 iterations 17
Cbc0038I Pass  25: suminf.    0.43308 (1) obj. -22896 iterations 0
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -22939.1 iterations 7
Cbc0038I Pass  27: suminf.    4.04868 (15) obj. -22896 iterations 13
Cbc0038I Pass  28: suminf.    3.74105 (13) obj. -22896 iterations 2
Cbc0038I Pass  29: suminf.    5.00272 (21) obj. -22896 iterations 8
Cbc0038I Pass  30: suminf.    4.95542 (24) obj. -22896 iterations 3
Cbc0038I Pass  31: suminf.    2.14629 (12) obj. -22896 iterations 12
Cbc0038I Pass  32: suminf.    1.51437 (6) obj. -22896 iterations 4
Cbc0038I Pass  33: suminf.    0.43308 (1) obj. -22896 iterations 11
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 78 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -23398.8
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.   11.48061 (44) obj. -23398.8 iterations 0
Cbc0038I Pass  34: suminf.   11.48061 (44) obj. -23398.8 iterations 1
Cbc0038I Pass  35: suminf.    8.38531 (31) obj. -23398.8 iterations 15
Cbc0038I Pass  36: suminf.    5.77661 (22) obj. -23398.8 iterations 10
Cbc0038I Pass  37: suminf.    5.77661 (22) obj. -23398.8 iterations 2
Cbc0038I Pass  38: suminf.    2.83888 (12) obj. -23398.8 iterations 10
Cbc0038I Pass  39: suminf.    1.10761 (4) obj. -23398.8 iterations 18
Cbc0038I Pass  40: suminf.    1.10761 (4) obj. -23398.8 iterations 0
Cbc0038I Pass  41: suminf.    0.97065 (3) obj. -23398.8 iterations 4
Cbc0038I Pass  42: suminf.    0.97065 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  43: suminf.    1.15291 (3) obj. -23398.8 iterations 2
Cbc0038I Pass  44: suminf.    1.15291 (3) obj. -23398.8 iterations 1
Cbc0038I Pass  45: suminf.    1.82603 (7) obj. -23398.8 iterations 9
Cbc0038I Pass  46: suminf.    1.79335 (5) obj. -23438.3 iterations 6
Cbc0038I Pass  47: suminf.    1.73207 (5) obj. -23398.8 iterations 7
Cbc0038I Pass  48: suminf.    1.15291 (3) obj. -23398.8 iterations 18
Cbc0038I Pass  49: suminf.    2.61637 (7) obj. -23398.8 iterations 8
Cbc0038I Pass  50: suminf.    2.61637 (7) obj. -23398.8 iterations 3
Cbc0038I Pass  51: suminf.    1.15291 (3) obj. -23398.8 iterations 6
Cbc0038I Pass  52: suminf.    1.15291 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  53: suminf.    0.97065 (3) obj. -23398.8 iterations 4
Cbc0038I Pass  54: suminf.    0.97065 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  55: suminf.    2.93566 (10) obj. -23398.8 iterations 15
Cbc0038I Pass  56: suminf.    2.68320 (9) obj. -23398.8 iterations 7
Cbc0038I Pass  57: suminf.    1.15291 (3) obj. -23398.8 iterations 16
Cbc0038I Pass  58: suminf.    1.15291 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  59: suminf.    0.97065 (3) obj. -23398.8 iterations 3
Cbc0038I Pass  60: suminf.    0.97065 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  61: suminf.    1.15291 (3) obj. -23398.8 iterations 2
Cbc0038I Pass  62: suminf.    3.74111 (11) obj. -23398.8 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -22616.6 - took 0.03 seconds
Cbc0012I Integer solution of -22616.649 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 71 rows 78 columns, reduced to 0 rows 0 columns
Cbc0031I 8 added rows had average density of 13.625
Cbc0013I At root node, 575 cuts changed objective from -24793.507 to -22616.649 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 547 row cuts average 11.0 elements, 38 column cuts (38 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22616.649, took 46 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 59 (-40) rows, 34 (-16) columns and 149 (-136) elements
Clp0000I Optimal - objective value 23764.106
Coin0511I After Postsolve, objective 23764.106, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 23764.10556 - 21 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 59 rows, 34 columns (33 integer (33 of which binary)) and 149 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.472%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.81223
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -22616.6 iterations 15
Cbc0038I Solution found of -22616.6
Cbc0038I Relaxing continuous gives -22616.6
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 34 columns, reduced to 13 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -22616.6 to -22616.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -22731.4
Cbc0038I Reduced cost fixing fixed 10 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.09744 (1) obj. -22731.4 iterations 7
Cbc0038I Pass   3: suminf.    0.43326 (1) obj. -22731.4 iterations 5
Cbc0038I Pass   4: suminf.    0.95268 (3) obj. -22731.4 iterations 2
Cbc0038I Pass   5: suminf.    0.95268 (3) obj. -22731.4 iterations 1
Cbc0038I Pass   6: suminf.    0.10665 (5) obj. -22731.4 iterations 9
Cbc0038I Pass   7: suminf.    2.00000 (6) obj. -22731.4 iterations 12
Cbc0038I Pass   8: suminf.    1.00000 (6) obj. -22731.4 iterations 11
Cbc0038I Pass   9: suminf.    1.00000 (6) obj. -22731.4 iterations 0
Cbc0038I Pass  10: suminf.    0.58923 (5) obj. -22731.4 iterations 5
Cbc0038I Pass  11: suminf.    0.09744 (1) obj. -22731.4 iterations 8
Cbc0038I Pass  12: suminf.    0.43326 (1) obj. -22731.4 iterations 4
Cbc0038I Pass  13: suminf.    0.13539 (3) obj. -22731.4 iterations 7
Cbc0038I Pass  14: suminf.    1.00000 (4) obj. -22731.4 iterations 7
Cbc0038I Pass  15: suminf.    0.19488 (2) obj. -22731.4 iterations 4
Cbc0038I Pass  16: suminf.    2.03386 (7) obj. -22731.4 iterations 12
Cbc0038I Pass  17: suminf.    2.03386 (7) obj. -22731.4 iterations 4
Cbc0038I Pass  18: suminf.    1.00000 (6) obj. -22731.4 iterations 5
Cbc0038I Pass  19: suminf.    1.00000 (6) obj. -22731.4 iterations 7
Cbc0038I Pass  20: suminf.    0.58923 (5) obj. -22731.4 iterations 4
Cbc0038I Pass  21: suminf.    0.09744 (1) obj. -22731.4 iterations 7
Cbc0038I Pass  22: suminf.    0.43326 (1) obj. -22731.4 iterations 5
Cbc0038I Pass  23: suminf.    3.03068 (9) obj. -22731.4 iterations 11
Cbc0038I Pass  24: suminf.    2.69302 (9) obj. -22731.4 iterations 2
Cbc0038I Pass  25: suminf.    2.03386 (7) obj. -22731.4 iterations 2
Cbc0038I Pass  26: suminf.    1.00000 (6) obj. -22731.4 iterations 4
Cbc0038I Pass  27: suminf.    1.00000 (6) obj. -22731.4 iterations 8
Cbc0038I Pass  28: suminf.    0.58923 (5) obj. -22731.4 iterations 4
Cbc0038I Pass  29: suminf.    0.09744 (1) obj. -22731.4 iterations 7
Cbc0038I Pass  30: suminf.    0.43326 (1) obj. -22731.4 iterations 3
Cbc0038I Pass  31: suminf.    2.07163 (6) obj. -22731.4 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 59 rows 34 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -22616.6 - took 0.02 seconds
Cbc0012I Integer solution of -22616.649 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 59 rows 34 columns, reduced to 13 rows 11 columns
Cbc0031I 4 added rows had average density of 5.25
Cbc0013I At root node, 13 cuts changed objective from -23764.106 to -22616.649 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 24 row cuts average 2.6 elements, 7 column cuts (7 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 11 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22616.649, took 11 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-31) rows, 75 (-22) columns and 873 (-541) elements
Clp1000I sum of infeasibilities 0 - average 0, 75 fixed columns
Coin0506I Presolve 0 (-68) rows, 0 (-75) columns and 0 (-873) elements
Clp0000I Optimal - objective value 23159.149
Clp0000I Optimal - objective value 23159.149
Coin0511I After Postsolve, objective 23159.149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0323816 - largest nonzero change 9.9057843e-05 ( 0.025936617%) - largest zero change 0
Clp0000I Optimal - objective value 26286.292
Clp0000I Optimal - objective value 26286.292
Clp0000I Optimal - objective value 26286.292
Coin0511I After Postsolve, objective 26286.292, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26286.29221 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 71 rows, 78 columns (78 integer (78 of which binary)) and 882 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.990%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 14.1049
Cbc0038I Pass   1: suminf.    2.71140 (19) obj. -14499.2 iterations 29
Cbc0038I Pass   2: suminf.    2.71140 (19) obj. -14499.2 iterations 5
Cbc0038I Pass   3: suminf.    0.05556 (1) obj. -13315.6 iterations 18
Cbc0038I Solution found of -13265.6
Cbc0038I Rounding solution of -13427.6 is better than previous of -13265.6

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 78 columns, reduced to 26 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -13427.6 to -22616.6 (0.01 seconds)
Cbc0038I Round again with cutoff of -22896
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.   10.57453 (44) obj. -22896 iterations 20
Cbc0038I Pass   5: suminf.   10.57453 (44) obj. -22896 iterations 1
Cbc0038I Pass   6: suminf.    5.56786 (25) obj. -22896 iterations 26
Cbc0038I Pass   7: suminf.    0.43308 (1) obj. -22896 iterations 31
Cbc0038I Pass   8: suminf.    0.43308 (1) obj. -22896 iterations 2
Cbc0038I Pass   9: suminf.    0.50000 (1) obj. -22939.1 iterations 7
Cbc0038I Pass  10: suminf.    4.28062 (15) obj. -22896 iterations 16
Cbc0038I Pass  11: suminf.    3.46868 (12) obj. -22896 iterations 4
Cbc0038I Pass  12: suminf.    3.14057 (10) obj. -23442.4 iterations 2
Cbc0038I Pass  13: suminf.    5.77621 (20) obj. -22896 iterations 13
Cbc0038I Pass  14: suminf.    5.45625 (19) obj. -22896 iterations 3
Cbc0038I Pass  15: suminf.    0.96128 (5) obj. -22896 iterations 14
Cbc0038I Pass  16: suminf.    0.93571 (4) obj. -23328 iterations 1
Cbc0038I Pass  17: suminf.    0.43308 (1) obj. -22896 iterations 8
Cbc0038I Pass  18: suminf.    0.50000 (1) obj. -22939.1 iterations 5
Cbc0038I Pass  19: suminf.    6.89342 (20) obj. -22896 iterations 21
Cbc0038I Pass  20: suminf.    5.63842 (18) obj. -22896 iterations 4
Cbc0038I Pass  21: suminf.    1.41317 (6) obj. -22896 iterations 16
Cbc0038I Pass  22: suminf.    3.04859 (16) obj. -22896 iterations 20
Cbc0038I Pass  23: suminf.    2.82219 (11) obj. -22896 iterations 5
Cbc0038I Pass  24: suminf.    0.43308 (1) obj. -22896 iterations 17
Cbc0038I Pass  25: suminf.    0.43308 (1) obj. -22896 iterations 0
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -22939.1 iterations 7
Cbc0038I Pass  27: suminf.    4.04868 (15) obj. -22896 iterations 13
Cbc0038I Pass  28: suminf.    3.74105 (13) obj. -22896 iterations 2
Cbc0038I Pass  29: suminf.    5.00272 (21) obj. -22896 iterations 8
Cbc0038I Pass  30: suminf.    4.95542 (24) obj. -22896 iterations 3
Cbc0038I Pass  31: suminf.    2.14629 (12) obj. -22896 iterations 12
Cbc0038I Pass  32: suminf.    1.51437 (6) obj. -22896 iterations 4
Cbc0038I Pass  33: suminf.    0.43308 (1) obj. -22896 iterations 11
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 71 rows 78 columns, reduced to 30 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -23398.8
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.   11.48061 (44) obj. -23398.8 iterations 0
Cbc0038I Pass  34: suminf.   11.48061 (44) obj. -23398.8 iterations 1
Cbc0038I Pass  35: suminf.    8.38531 (31) obj. -23398.8 iterations 15
Cbc0038I Pass  36: suminf.    5.77661 (22) obj. -23398.8 iterations 10
Cbc0038I Pass  37: suminf.    5.77661 (22) obj. -23398.8 iterations 2
Cbc0038I Pass  38: suminf.    2.83888 (12) obj. -23398.8 iterations 10
Cbc0038I Pass  39: suminf.    1.10761 (4) obj. -23398.8 iterations 18
Cbc0038I Pass  40: suminf.    1.10761 (4) obj. -23398.8 iterations 0
Cbc0038I Pass  41: suminf.    0.97065 (3) obj. -23398.8 iterations 4
Cbc0038I Pass  42: suminf.    0.97065 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  43: suminf.    1.15291 (3) obj. -23398.8 iterations 2
Cbc0038I Pass  44: suminf.    1.15291 (3) obj. -23398.8 iterations 1
Cbc0038I Pass  45: suminf.    1.82603 (7) obj. -23398.8 iterations 9
Cbc0038I Pass  46: suminf.    1.79335 (5) obj. -23438.3 iterations 6
Cbc0038I Pass  47: suminf.    1.73207 (5) obj. -23398.8 iterations 7
Cbc0038I Pass  48: suminf.    1.15291 (3) obj. -23398.8 iterations 18
Cbc0038I Pass  49: suminf.    2.61637 (7) obj. -23398.8 iterations 8
Cbc0038I Pass  50: suminf.    2.61637 (7) obj. -23398.8 iterations 3
Cbc0038I Pass  51: suminf.    1.15291 (3) obj. -23398.8 iterations 6
Cbc0038I Pass  52: suminf.    1.15291 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  53: suminf.    0.97065 (3) obj. -23398.8 iterations 4
Cbc0038I Pass  54: suminf.    0.97065 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  55: suminf.    2.93566 (10) obj. -23398.8 iterations 15
Cbc0038I Pass  56: suminf.    2.68320 (9) obj. -23398.8 iterations 7
Cbc0038I Pass  57: suminf.    1.15291 (3) obj. -23398.8 iterations 16
Cbc0038I Pass  58: suminf.    1.15291 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  59: suminf.    0.97065 (3) obj. -23398.8 iterations 3
Cbc0038I Pass  60: suminf.    0.97065 (3) obj. -23398.8 iterations 0
Cbc0038I Pass  61: suminf.    1.15291 (3) obj. -23398.8 iterations 2
Cbc0038I Pass  62: suminf.    3.74111 (11) obj. -23398.8 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -22616.6 - took 0.03 seconds
Cbc0012I Integer solution of -22616.649 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 71 rows 78 columns, reduced to 0 rows 0 columns
Cbc0031I 8 added rows had average density of 13.625
Cbc0013I At root node, 575 cuts changed objective from -24793.507 to -22616.649 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 547 row cuts average 11.0 elements, 38 column cuts (38 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 7 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -22616.649, took 46 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

