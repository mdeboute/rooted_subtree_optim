Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.86708e-05 - average 1.37285e-07, 12 fixed columns
Coin0506I Presolve 113 (-23) rows, 64 (-12) columns and 346 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 0.29406143 - largest nonzero change 0 ( 0%) - largest zero change 2.829984e-05
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Coin0511I After Postsolve, objective 32.699702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Coin0511I After Postsolve, objective 32.699702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.69970215 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 8.55884
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.9483 iterations 33
Cbc0038I Solution found of 15.9483
Cbc0038I Relaxing continuous gives 15.9483
Cbc0038I Rounding solution of 0.932294 is better than previous of 15.9483

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 0.932294 to -8.37765 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.8099
Cbc0038I Pass   2: suminf.    1.51444 (7) obj. -10.8099 iterations 12
Cbc0038I Pass   3: suminf.    1.09376 (5) obj. -10.8099 iterations 2
Cbc0038I Pass   4: suminf.    1.07617 (4) obj. -10.8099 iterations 1
Cbc0038I Pass   5: suminf.    0.61615 (2) obj. -10.8099 iterations 8
Cbc0038I Pass   6: suminf.    0.58876 (3) obj. -10.8099 iterations 6
Cbc0038I Pass   7: suminf.    0.54390 (2) obj. -10.8099 iterations 1
Cbc0038I Pass   8: suminf.    0.69118 (2) obj. -10.8099 iterations 1
Cbc0038I Pass   9: suminf.    1.36265 (5) obj. -10.8099 iterations 11
Cbc0038I Pass  10: suminf.    1.35393 (4) obj. -10.8099 iterations 10
Cbc0038I Pass  11: suminf.    1.09376 (5) obj. -10.8099 iterations 6
Cbc0038I Pass  12: suminf.    1.07617 (4) obj. -10.8099 iterations 1
Cbc0038I Pass  13: suminf.    0.61615 (2) obj. -10.8099 iterations 8
Cbc0038I Pass  14: suminf.    0.58876 (3) obj. -10.8099 iterations 6
Cbc0038I Pass  15: suminf.    0.54390 (2) obj. -10.8099 iterations 1
Cbc0038I Pass  16: suminf.    0.69118 (2) obj. -10.8099 iterations 1
Cbc0038I Pass  17: suminf.    1.26965 (5) obj. -10.8099 iterations 15
Cbc0038I Pass  18: suminf.    0.96889 (3) obj. -10.8099 iterations 7
Cbc0038I Pass  19: suminf.    0.88812 (3) obj. -10.8099 iterations 5
Cbc0038I Pass  20: suminf.    0.88812 (3) obj. -10.8099 iterations 0
Cbc0038I Pass  21: suminf.    1.26907 (4) obj. -10.8099 iterations 6
Cbc0038I Pass  22: suminf.    1.26907 (4) obj. -10.8099 iterations 0
Cbc0038I Pass  23: suminf.    0.68089 (2) obj. -10.8099 iterations 8
Cbc0038I Pass  24: suminf.    0.69207 (3) obj. -10.8099 iterations 6
Cbc0038I Pass  25: suminf.    1.24968 (3) obj. -10.8099 iterations 1
Cbc0038I Pass  26: suminf.    3.02517 (9) obj. -10.8099 iterations 32
Cbc0038I Pass  27: suminf.    1.92891 (6) obj. -10.8099 iterations 10
Cbc0038I Pass  28: suminf.    1.91354 (7) obj. -10.8099 iterations 1
Cbc0038I Pass  29: suminf.    1.67133 (6) obj. -10.8099 iterations 18
Cbc0038I Pass  30: suminf.    0.88644 (4) obj. -10.8099 iterations 2
Cbc0038I Pass  31: suminf.    0.87904 (3) obj. -10.8099 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -8.37765 to -8.5369 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.1879
Cbc0038I Pass  31: suminf.    2.23870 (7) obj. -15.1879 iterations 0
Cbc0038I Pass  32: suminf.    1.81802 (5) obj. -15.1879 iterations 2
Cbc0038I Pass  33: suminf.    1.80043 (4) obj. -15.1879 iterations 1
Cbc0038I Pass  34: suminf.    0.88563 (3) obj. -15.1879 iterations 8
Cbc0038I Pass  35: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  36: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  37: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  38: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  39: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  40: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  41: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  42: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  43: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  44: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  45: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  46: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  47: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  48: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  49: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  50: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  51: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  52: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  53: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  54: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  55: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  56: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  57: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  58: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  59: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  60: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.5369 - took 0.06 seconds
Cbc0012I Integer solution of -8.536896 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 49 rows 29 columns
Cbc0031I 13 added rows had average density of 53.769231
Cbc0013I At root node, 13 cuts changed objective from -32.699702 to -24.686817 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11249 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1784 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 64.8 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.536896 best solution, best possible -24.686817 (0.71 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 52 rows 34 columns
Cbc0012I Integer solution of -8.880646 found by RINS after 9079 iterations and 41 nodes (1.07 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 10 rows 13 columns
Cbc0001I Search completed - best objective -8.880645999999999, took 11592 iterations and 156 nodes (1.29 seconds)
Cbc0032I Strong branching done 1062 times (17885 iterations), fathomed 10 nodes and fixed 21 variables
Cbc0035I Maximum depth 34, 355 variables fixed on reduced cost
Total time (CPU seconds):       1.26   (Wallclock seconds):       1.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-47) rows, 121 (-31) columns and 2065 (-1238) elements
Clp1000I sum of infeasibilities 1.52936e-07 - average 1.42931e-09, 35 fixed columns
Coin0506I Presolve 80 (-27) rows, 83 (-38) columns and 1111 (-954) elements
Clp0006I 0  Obj 45.013687 Primal inf 8.7550484e-07 (1) Dual inf 2.0640178e+10 (83)
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 1.9959259 - largest nonzero change 2.2976508e-05 ( 0.0016981022%) - largest zero change 2.96538e-05
Clp0000I Optimal - objective value 57.626412
Clp0000I Optimal - objective value 57.626412
Coin0511I After Postsolve, objective 57.626412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.626412
Clp0000I Optimal - objective value 57.626412
Clp0000I Optimal - objective value 57.626412
Clp0000I Optimal - objective value 57.626412
Coin0511I After Postsolve, objective 57.626412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.62641238 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 122 columns (122 integer (122 of which binary)) and 2070 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.477%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 4.54347
Cbc0038I Pass   1: suminf.    2.23597 (34) obj. -42.2466 iterations 15
Cbc0038I Pass   2: suminf.    2.23597 (34) obj. -42.2466 iterations 1
Cbc0038I Pass   3: suminf.    0.19932 (5) obj. -6.07023 iterations 29
Cbc0038I Solution found of -1.26955
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -6.02384
Cbc0038I Pass   4: suminf.    2.23597 (34) obj. -42.2466 iterations 0
Cbc0038I Pass   5: suminf.    2.23597 (34) obj. -42.2466 iterations 1
Cbc0038I Pass   6: suminf.    0.93953 (18) obj. -19.2846 iterations 16
Cbc0038I Pass   7: suminf.    0.82727 (8) obj. -6.02384 iterations 25
Cbc0038I Pass   8: suminf.    0.74323 (8) obj. -6.02384 iterations 2
Cbc0038I Pass   9: suminf.    0.69984 (6) obj. -6.02384 iterations 18
Cbc0038I Pass  10: suminf.    0.57640 (4) obj. -6.02384 iterations 10
Cbc0038I Pass  11: suminf.    1.00657 (5) obj. -6.02384 iterations 7
Cbc0038I Pass  12: suminf.    0.59835 (4) obj. -6.02384 iterations 11
Cbc0038I Pass  13: suminf.    1.00657 (5) obj. -6.02384 iterations 7
Cbc0038I Pass  14: suminf.    1.38838 (12) obj. -6.02384 iterations 20
Cbc0038I Pass  15: suminf.    1.35924 (12) obj. -6.02384 iterations 7
Cbc0038I Pass  16: suminf.    1.23053 (7) obj. -6.02384 iterations 17
Cbc0038I Pass  17: suminf.    1.23053 (7) obj. -6.02384 iterations 0
Cbc0038I Pass  18: suminf.    1.37245 (7) obj. -6.02384 iterations 10
Cbc0038I Pass  19: suminf.    0.60930 (6) obj. -6.02384 iterations 11
Cbc0038I Pass  20: suminf.    1.49768 (7) obj. -6.02384 iterations 13
Cbc0038I Pass  21: suminf.    0.63322 (5) obj. -6.02384 iterations 8
Cbc0038I Pass  22: suminf.    0.61195 (6) obj. -6.02384 iterations 3
Cbc0038I Pass  23: suminf.    1.47382 (12) obj. -6.02384 iterations 25
Cbc0038I Pass  24: suminf.    1.07501 (10) obj. -6.02509 iterations 9
Cbc0038I Pass  25: suminf.    0.90975 (6) obj. -6.02384 iterations 12
Cbc0038I Pass  26: suminf.    0.63071 (6) obj. -6.02384 iterations 5
Cbc0038I Pass  27: suminf.    0.90779 (4) obj. -6.02384 iterations 16
Cbc0038I Pass  28: suminf.    0.60361 (5) obj. -6.02384 iterations 3
Cbc0038I Pass  29: suminf.    1.51474 (5) obj. -6.02384 iterations 10
Cbc0038I Pass  30: suminf.    0.87381 (5) obj. -6.02384 iterations 9
Cbc0038I Pass  31: suminf.    1.42002 (10) obj. -6.02384 iterations 21
Cbc0038I Pass  32: suminf.    1.33099 (8) obj. -6.02384 iterations 11
Cbc0038I Pass  33: suminf.    1.71946 (7) obj. -6.02384 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 9 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1.26955 to -2.12064 (0.05 seconds)
Cbc0038I Round again with cutoff of -14.5814
Cbc0038I Pass  33: suminf.    2.23597 (34) obj. -42.2466 iterations 0
Cbc0038I Pass  34: suminf.    2.23597 (34) obj. -42.2466 iterations 1
Cbc0038I Pass  35: suminf.    1.36773 (24) obj. -26.7219 iterations 10
Cbc0038I Pass  36: suminf.    1.22003 (10) obj. -14.5814 iterations 36
Cbc0038I Pass  37: suminf.    1.22003 (10) obj. -14.5814 iterations 0
Cbc0038I Pass  38: suminf.    1.36924 (10) obj. -14.5814 iterations 10
Cbc0038I Pass  39: suminf.    1.24488 (8) obj. -14.5814 iterations 6
Cbc0038I Pass  40: suminf.    1.31357 (10) obj. -14.5814 iterations 9
Cbc0038I Pass  41: suminf.    1.19640 (8) obj. -14.5814 iterations 7
Cbc0038I Pass  42: suminf.    1.36924 (10) obj. -14.5814 iterations 8
Cbc0038I Pass  43: suminf.    2.44859 (15) obj. -14.5814 iterations 15
Cbc0038I Pass  44: suminf.    1.84760 (14) obj. -14.5814 iterations 6
Cbc0038I Pass  45: suminf.    1.84760 (14) obj. -14.5814 iterations 0
Cbc0038I Pass  46: suminf.    1.72957 (10) obj. -14.5814 iterations 17
Cbc0038I Pass  47: suminf.    0.87821 (9) obj. -14.5814 iterations 6
Cbc0038I Pass  48: suminf.    1.72957 (10) obj. -14.5814 iterations 10
Cbc0038I Pass  49: suminf.    0.94488 (9) obj. -14.5814 iterations 9
Cbc0038I Pass  50: suminf.    1.72957 (10) obj. -14.5814 iterations 13
Cbc0038I Pass  51: suminf.    1.40253 (15) obj. -14.5814 iterations 24
Cbc0038I Pass  52: suminf.    1.34722 (14) obj. -14.5814 iterations 1
Cbc0038I Pass  53: suminf.    1.12207 (10) obj. -14.5814 iterations 17
Cbc0038I Pass  54: suminf.    0.82897 (10) obj. -14.5814 iterations 2
Cbc0038I Pass  55: suminf.    1.12207 (10) obj. -14.5814 iterations 4
Cbc0038I Pass  56: suminf.    2.45640 (17) obj. -14.5814 iterations 18
Cbc0038I Pass  57: suminf.    2.02669 (16) obj. -14.5814 iterations 5
Cbc0038I Pass  58: suminf.    1.18608 (9) obj. -14.5814 iterations 18
Cbc0038I Pass  59: suminf.    1.17456 (10) obj. -14.5814 iterations 3
Cbc0038I Pass  60: suminf.    1.21235 (9) obj. -14.5814 iterations 9
Cbc0038I Pass  61: suminf.    1.15990 (10) obj. -14.5814 iterations 7
Cbc0038I Pass  62: suminf.    1.83972 (9) obj. -14.5814 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -2.12064 to -7.84059 (0.08 seconds)
Cbc0038I Round again with cutoff of -24.8505
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.23597 (34) obj. -42.2466 iterations 0
Cbc0038I Pass  63: suminf.    2.23597 (34) obj. -42.2466 iterations 1
Cbc0038I Pass  64: suminf.    1.71776 (18) obj. -24.8505 iterations 37
Cbc0038I Pass  65: suminf.    1.71776 (18) obj. -24.8505 iterations 0
Cbc0038I Pass  66: suminf.    2.46188 (17) obj. -24.8505 iterations 20
Cbc0038I Pass  67: suminf.    1.80740 (16) obj. -24.8505 iterations 3
Cbc0038I Pass  68: suminf.    1.65086 (16) obj. -24.8505 iterations 1
Cbc0038I Pass  69: suminf.    2.46188 (17) obj. -24.8505 iterations 8
Cbc0038I Pass  70: suminf.    2.56866 (19) obj. -24.8505 iterations 13
Cbc0038I Pass  71: suminf.    2.26233 (22) obj. -24.8505 iterations 6
Cbc0038I Pass  72: suminf.    3.06314 (17) obj. -24.8505 iterations 17
Cbc0038I Pass  73: suminf.    2.77716 (17) obj. -24.8505 iterations 6
Cbc0038I Pass  74: suminf.    2.40800 (17) obj. -24.8505 iterations 9
Cbc0038I Pass  75: suminf.    2.40800 (17) obj. -24.8505 iterations 0
Cbc0038I Pass  76: suminf.    3.30489 (17) obj. -24.8505 iterations 8
Cbc0038I Pass  77: suminf.    2.93544 (17) obj. -24.8505 iterations 2
Cbc0038I Pass  78: suminf.    3.30489 (17) obj. -24.8505 iterations 5
Cbc0038I Pass  79: suminf.    2.91818 (17) obj. -24.8505 iterations 2
Cbc0038I Pass  80: suminf.    3.30489 (17) obj. -24.8505 iterations 4
Cbc0038I Pass  81: suminf.    3.29960 (20) obj. -24.8505 iterations 14
Cbc0038I Pass  82: suminf.    2.43379 (18) obj. -24.8505 iterations 5
Cbc0038I Pass  83: suminf.    2.34162 (18) obj. -24.8505 iterations 1
Cbc0038I Pass  84: suminf.    3.30489 (17) obj. -24.8505 iterations 15
Cbc0038I Pass  85: suminf.    2.91818 (17) obj. -24.8505 iterations 2
Cbc0038I Pass  86: suminf.    3.30489 (17) obj. -24.8505 iterations 4
Cbc0038I Pass  87: suminf.    3.50955 (23) obj. -24.8505 iterations 16
Cbc0038I Pass  88: suminf.    2.62797 (21) obj. -24.8505 iterations 5
Cbc0038I Pass  89: suminf.    1.96113 (17) obj. -24.8505 iterations 19
Cbc0038I Pass  90: suminf.    1.65086 (16) obj. -24.8505 iterations 6
Cbc0038I Pass  91: suminf.    2.46188 (17) obj. -24.8505 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.84059 - took 0.07 seconds
Cbc0012I Integer solution of -7.840586 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 31 rows 38 columns
Cbc0031I 57 added rows had average density of 28.77193
Cbc0013I At root node, 57 cuts changed objective from -48.811598 to -11.393372 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11272 row cuts average 7.4 elements, 4 column cuts (4 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1271 row cuts average 105.7 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 351 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 994 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 313 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 151 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.660 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.840586 best solution, best possible -11.393372 (2.30 seconds)
Cbc0012I Integer solution of -8.350376 found by DiveCoefficient after 3424 iterations and 1 nodes (2.50 seconds)
Cbc0012I Integer solution of -8.822086 found by rounding after 3492 iterations and 4 nodes (2.62 seconds)
Cbc0010I After 21 nodes, 4 on tree, -8.822086 best solution, best possible -11.393372 (3.02 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 20 rows 28 columns
Cbc0010I After 41 nodes, 6 on tree, -8.822086 best solution, best possible -11.393295 (3.75 seconds)
Cbc0010I After 63 nodes, 11 on tree, -8.822086 best solution, best possible -11.393295 (4.45 seconds)
Cbc0012I Integer solution of -8.880646 found by rounding after 5492 iterations and 89 nodes (4.89 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 18 rows 23 columns
Cbc0010I After 104 nodes, 8 on tree, -8.880646 best solution, best possible -11.393295 (5.19 seconds)
Cbc0001I Search completed - best objective -8.880645999999999, took 6600 iterations and 120 nodes (5.65 seconds)
Cbc0032I Strong branching done 996 times (9671 iterations), fathomed 18 nodes and fixed 28 variables
Cbc0035I Maximum depth 13, 280 variables fixed on reduced cost
Total time (CPU seconds):       3.82   (Wallclock seconds):       5.67

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 76 (-2) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.86708e-05 - average 1.37285e-07, 12 fixed columns
Coin0506I Presolve 113 (-23) rows, 64 (-12) columns and 346 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 0.29406143 - largest nonzero change 0 ( 0%) - largest zero change 2.829984e-05
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Coin0511I After Postsolve, objective 32.699702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Clp0000I Optimal - objective value 32.699702
Coin0511I After Postsolve, objective 32.699702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32.69970215 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 136 rows, 76 columns (75 integer (75 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.152%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 8.55884
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 15.9483 iterations 33
Cbc0038I Solution found of 15.9483
Cbc0038I Relaxing continuous gives 15.9483
Cbc0038I Rounding solution of 0.932294 is better than previous of 15.9483

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound improved solution from 0.932294 to -8.37765 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.8099
Cbc0038I Pass   2: suminf.    1.51444 (7) obj. -10.8099 iterations 12
Cbc0038I Pass   3: suminf.    1.09376 (5) obj. -10.8099 iterations 2
Cbc0038I Pass   4: suminf.    1.07617 (4) obj. -10.8099 iterations 1
Cbc0038I Pass   5: suminf.    0.61615 (2) obj. -10.8099 iterations 8
Cbc0038I Pass   6: suminf.    0.58876 (3) obj. -10.8099 iterations 6
Cbc0038I Pass   7: suminf.    0.54390 (2) obj. -10.8099 iterations 1
Cbc0038I Pass   8: suminf.    0.69118 (2) obj. -10.8099 iterations 1
Cbc0038I Pass   9: suminf.    1.36265 (5) obj. -10.8099 iterations 11
Cbc0038I Pass  10: suminf.    1.35393 (4) obj. -10.8099 iterations 10
Cbc0038I Pass  11: suminf.    1.09376 (5) obj. -10.8099 iterations 6
Cbc0038I Pass  12: suminf.    1.07617 (4) obj. -10.8099 iterations 1
Cbc0038I Pass  13: suminf.    0.61615 (2) obj. -10.8099 iterations 8
Cbc0038I Pass  14: suminf.    0.58876 (3) obj. -10.8099 iterations 6
Cbc0038I Pass  15: suminf.    0.54390 (2) obj. -10.8099 iterations 1
Cbc0038I Pass  16: suminf.    0.69118 (2) obj. -10.8099 iterations 1
Cbc0038I Pass  17: suminf.    1.26965 (5) obj. -10.8099 iterations 15
Cbc0038I Pass  18: suminf.    0.96889 (3) obj. -10.8099 iterations 7
Cbc0038I Pass  19: suminf.    0.88812 (3) obj. -10.8099 iterations 5
Cbc0038I Pass  20: suminf.    0.88812 (3) obj. -10.8099 iterations 0
Cbc0038I Pass  21: suminf.    1.26907 (4) obj. -10.8099 iterations 6
Cbc0038I Pass  22: suminf.    1.26907 (4) obj. -10.8099 iterations 0
Cbc0038I Pass  23: suminf.    0.68089 (2) obj. -10.8099 iterations 8
Cbc0038I Pass  24: suminf.    0.69207 (3) obj. -10.8099 iterations 6
Cbc0038I Pass  25: suminf.    1.24968 (3) obj. -10.8099 iterations 1
Cbc0038I Pass  26: suminf.    3.02517 (9) obj. -10.8099 iterations 32
Cbc0038I Pass  27: suminf.    1.92891 (6) obj. -10.8099 iterations 10
Cbc0038I Pass  28: suminf.    1.91354 (7) obj. -10.8099 iterations 1
Cbc0038I Pass  29: suminf.    1.67133 (6) obj. -10.8099 iterations 18
Cbc0038I Pass  30: suminf.    0.88644 (4) obj. -10.8099 iterations 2
Cbc0038I Pass  31: suminf.    0.87904 (3) obj. -10.8099 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 60 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -8.37765 to -8.5369 (0.06 seconds)
Cbc0038I Round again with cutoff of -15.1879
Cbc0038I Pass  31: suminf.    2.23870 (7) obj. -15.1879 iterations 0
Cbc0038I Pass  32: suminf.    1.81802 (5) obj. -15.1879 iterations 2
Cbc0038I Pass  33: suminf.    1.80043 (4) obj. -15.1879 iterations 1
Cbc0038I Pass  34: suminf.    0.88563 (3) obj. -15.1879 iterations 8
Cbc0038I Pass  35: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  36: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  37: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  38: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  39: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  40: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  41: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  42: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  43: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  44: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  45: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  46: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  47: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  48: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  49: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  50: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  51: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  52: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  53: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  54: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  55: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I Pass  56: suminf.    0.73862 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  57: suminf.    1.05653 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  58: suminf.    1.05653 (3) obj. -15.1879 iterations 0
Cbc0038I Pass  59: suminf.    0.88563 (3) obj. -15.1879 iterations 3
Cbc0038I Pass  60: suminf.    0.73862 (3) obj. -15.1879 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 76 columns, reduced to 48 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -8.5369 - took 0.06 seconds
Cbc0012I Integer solution of -8.536896 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 49 rows 29 columns
Cbc0031I 13 added rows had average density of 53.769231
Cbc0013I At root node, 13 cuts changed objective from -32.699702 to -24.686817 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11249 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1784 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 28 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 64.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -8.536896 best solution, best possible -24.686817 (0.78 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 52 rows 34 columns
Cbc0012I Integer solution of -8.880646 found by RINS after 9079 iterations and 41 nodes (1.17 seconds)
Cbc0038I Full problem 136 rows 76 columns, reduced to 10 rows 13 columns
Cbc0001I Search completed - best objective -8.880645999999999, took 11592 iterations and 156 nodes (1.41 seconds)
Cbc0032I Strong branching done 1062 times (17885 iterations), fathomed 10 nodes and fixed 21 variables
Cbc0035I Maximum depth 34, 355 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 121 (-32) columns and 2065 (-1239) elements
Clp1000I sum of infeasibilities 1.52936e-07 - average 1.42931e-09, 35 fixed columns
Coin0506I Presolve 80 (-27) rows, 83 (-38) columns and 1111 (-954) elements
Clp0006I 0  Obj 45.013687 Primal inf 8.7550484e-07 (1) Dual inf 2.0640178e+10 (83)
Clp0029I End of values pass after 81 iterations
Clp0014I Perturbing problem by 0.001% of 1.9959259 - largest nonzero change 2.2976508e-05 ( 0.0016981022%) - largest zero change 2.96538e-05
Clp0000I Optimal - objective value 57.626412
Clp0000I Optimal - objective value 57.626412
Coin0511I After Postsolve, objective 57.626412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 57.626412
Clp0000I Optimal - objective value 57.626412
Clp0000I Optimal - objective value 57.626412
Clp0000I Optimal - objective value 57.626412
Coin0511I After Postsolve, objective 57.626412, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.62641238 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 108 rows, 122 columns (122 integer (122 of which binary)) and 2070 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.477%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 4.54347
Cbc0038I Pass   1: suminf.    2.23597 (34) obj. -42.2466 iterations 15
Cbc0038I Pass   2: suminf.    2.23597 (34) obj. -42.2466 iterations 1
Cbc0038I Pass   3: suminf.    0.19932 (5) obj. -6.07023 iterations 29
Cbc0038I Solution found of -1.26955
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -6.02384
Cbc0038I Pass   4: suminf.    2.23597 (34) obj. -42.2466 iterations 0
Cbc0038I Pass   5: suminf.    2.23597 (34) obj. -42.2466 iterations 1
Cbc0038I Pass   6: suminf.    0.93953 (18) obj. -19.2846 iterations 16
Cbc0038I Pass   7: suminf.    0.82727 (8) obj. -6.02384 iterations 25
Cbc0038I Pass   8: suminf.    0.74323 (8) obj. -6.02384 iterations 2
Cbc0038I Pass   9: suminf.    0.69984 (6) obj. -6.02384 iterations 18
Cbc0038I Pass  10: suminf.    0.57640 (4) obj. -6.02384 iterations 10
Cbc0038I Pass  11: suminf.    1.00657 (5) obj. -6.02384 iterations 7
Cbc0038I Pass  12: suminf.    0.59835 (4) obj. -6.02384 iterations 11
Cbc0038I Pass  13: suminf.    1.00657 (5) obj. -6.02384 iterations 7
Cbc0038I Pass  14: suminf.    1.38838 (12) obj. -6.02384 iterations 20
Cbc0038I Pass  15: suminf.    1.35924 (12) obj. -6.02384 iterations 7
Cbc0038I Pass  16: suminf.    1.23053 (7) obj. -6.02384 iterations 17
Cbc0038I Pass  17: suminf.    1.23053 (7) obj. -6.02384 iterations 0
Cbc0038I Pass  18: suminf.    1.37245 (7) obj. -6.02384 iterations 10
Cbc0038I Pass  19: suminf.    0.60930 (6) obj. -6.02384 iterations 11
Cbc0038I Pass  20: suminf.    1.49768 (7) obj. -6.02384 iterations 13
Cbc0038I Pass  21: suminf.    0.63322 (5) obj. -6.02384 iterations 8
Cbc0038I Pass  22: suminf.    0.61195 (6) obj. -6.02384 iterations 3
Cbc0038I Pass  23: suminf.    1.47382 (12) obj. -6.02384 iterations 25
Cbc0038I Pass  24: suminf.    1.07501 (10) obj. -6.02509 iterations 9
Cbc0038I Pass  25: suminf.    0.90975 (6) obj. -6.02384 iterations 12
Cbc0038I Pass  26: suminf.    0.63071 (6) obj. -6.02384 iterations 5
Cbc0038I Pass  27: suminf.    0.90779 (4) obj. -6.02384 iterations 16
Cbc0038I Pass  28: suminf.    0.60361 (5) obj. -6.02384 iterations 3
Cbc0038I Pass  29: suminf.    1.51474 (5) obj. -6.02384 iterations 10
Cbc0038I Pass  30: suminf.    0.87381 (5) obj. -6.02384 iterations 9
Cbc0038I Pass  31: suminf.    1.42002 (10) obj. -6.02384 iterations 21
Cbc0038I Pass  32: suminf.    1.33099 (8) obj. -6.02384 iterations 11
Cbc0038I Pass  33: suminf.    1.71946 (7) obj. -6.02384 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 9 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -1.26955 to -2.12064 (0.05 seconds)
Cbc0038I Round again with cutoff of -14.5814
Cbc0038I Pass  33: suminf.    2.23597 (34) obj. -42.2466 iterations 0
Cbc0038I Pass  34: suminf.    2.23597 (34) obj. -42.2466 iterations 1
Cbc0038I Pass  35: suminf.    1.36773 (24) obj. -26.7219 iterations 10
Cbc0038I Pass  36: suminf.    1.22003 (10) obj. -14.5814 iterations 36
Cbc0038I Pass  37: suminf.    1.22003 (10) obj. -14.5814 iterations 0
Cbc0038I Pass  38: suminf.    1.36924 (10) obj. -14.5814 iterations 10
Cbc0038I Pass  39: suminf.    1.24488 (8) obj. -14.5814 iterations 6
Cbc0038I Pass  40: suminf.    1.31357 (10) obj. -14.5814 iterations 9
Cbc0038I Pass  41: suminf.    1.19640 (8) obj. -14.5814 iterations 7
Cbc0038I Pass  42: suminf.    1.36924 (10) obj. -14.5814 iterations 8
Cbc0038I Pass  43: suminf.    2.44859 (15) obj. -14.5814 iterations 15
Cbc0038I Pass  44: suminf.    1.84760 (14) obj. -14.5814 iterations 6
Cbc0038I Pass  45: suminf.    1.84760 (14) obj. -14.5814 iterations 0
Cbc0038I Pass  46: suminf.    1.72957 (10) obj. -14.5814 iterations 17
Cbc0038I Pass  47: suminf.    0.87821 (9) obj. -14.5814 iterations 6
Cbc0038I Pass  48: suminf.    1.72957 (10) obj. -14.5814 iterations 10
Cbc0038I Pass  49: suminf.    0.94488 (9) obj. -14.5814 iterations 9
Cbc0038I Pass  50: suminf.    1.72957 (10) obj. -14.5814 iterations 13
Cbc0038I Pass  51: suminf.    1.40253 (15) obj. -14.5814 iterations 24
Cbc0038I Pass  52: suminf.    1.34722 (14) obj. -14.5814 iterations 1
Cbc0038I Pass  53: suminf.    1.12207 (10) obj. -14.5814 iterations 17
Cbc0038I Pass  54: suminf.    0.82897 (10) obj. -14.5814 iterations 2
Cbc0038I Pass  55: suminf.    1.12207 (10) obj. -14.5814 iterations 4
Cbc0038I Pass  56: suminf.    2.45640 (17) obj. -14.5814 iterations 18
Cbc0038I Pass  57: suminf.    2.02669 (16) obj. -14.5814 iterations 5
Cbc0038I Pass  58: suminf.    1.18608 (9) obj. -14.5814 iterations 18
Cbc0038I Pass  59: suminf.    1.17456 (10) obj. -14.5814 iterations 3
Cbc0038I Pass  60: suminf.    1.21235 (9) obj. -14.5814 iterations 9
Cbc0038I Pass  61: suminf.    1.15990 (10) obj. -14.5814 iterations 7
Cbc0038I Pass  62: suminf.    1.83972 (9) obj. -14.5814 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 108 rows 122 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -2.12064 to -7.84059 (0.08 seconds)
Cbc0038I Round again with cutoff of -24.8505
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.23597 (34) obj. -42.2466 iterations 0
Cbc0038I Pass  63: suminf.    2.23597 (34) obj. -42.2466 iterations 1
Cbc0038I Pass  64: suminf.    1.71776 (18) obj. -24.8505 iterations 37
Cbc0038I Pass  65: suminf.    1.71776 (18) obj. -24.8505 iterations 0
Cbc0038I Pass  66: suminf.    2.46188 (17) obj. -24.8505 iterations 20
Cbc0038I Pass  67: suminf.    1.80740 (16) obj. -24.8505 iterations 3
Cbc0038I Pass  68: suminf.    1.65086 (16) obj. -24.8505 iterations 1
Cbc0038I Pass  69: suminf.    2.46188 (17) obj. -24.8505 iterations 8
Cbc0038I Pass  70: suminf.    2.56866 (19) obj. -24.8505 iterations 13
Cbc0038I Pass  71: suminf.    2.26233 (22) obj. -24.8505 iterations 6
Cbc0038I Pass  72: suminf.    3.06314 (17) obj. -24.8505 iterations 17
Cbc0038I Pass  73: suminf.    2.77716 (17) obj. -24.8505 iterations 6
Cbc0038I Pass  74: suminf.    2.40800 (17) obj. -24.8505 iterations 9
Cbc0038I Pass  75: suminf.    2.40800 (17) obj. -24.8505 iterations 0
Cbc0038I Pass  76: suminf.    3.30489 (17) obj. -24.8505 iterations 8
Cbc0038I Pass  77: suminf.    2.93544 (17) obj. -24.8505 iterations 2
Cbc0038I Pass  78: suminf.    3.30489 (17) obj. -24.8505 iterations 5
Cbc0038I Pass  79: suminf.    2.91818 (17) obj. -24.8505 iterations 2
Cbc0038I Pass  80: suminf.    3.30489 (17) obj. -24.8505 iterations 4
Cbc0038I Pass  81: suminf.    3.29960 (20) obj. -24.8505 iterations 14
Cbc0038I Pass  82: suminf.    2.43379 (18) obj. -24.8505 iterations 5
Cbc0038I Pass  83: suminf.    2.34162 (18) obj. -24.8505 iterations 1
Cbc0038I Pass  84: suminf.    3.30489 (17) obj. -24.8505 iterations 15
Cbc0038I Pass  85: suminf.    2.91818 (17) obj. -24.8505 iterations 2
Cbc0038I Pass  86: suminf.    3.30489 (17) obj. -24.8505 iterations 4
Cbc0038I Pass  87: suminf.    3.50955 (23) obj. -24.8505 iterations 16
Cbc0038I Pass  88: suminf.    2.62797 (21) obj. -24.8505 iterations 5
Cbc0038I Pass  89: suminf.    1.96113 (17) obj. -24.8505 iterations 19
Cbc0038I Pass  90: suminf.    1.65086 (16) obj. -24.8505 iterations 6
Cbc0038I Pass  91: suminf.    2.46188 (17) obj. -24.8505 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -7.84059 - took 0.07 seconds
Cbc0012I Integer solution of -7.840586 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 31 rows 38 columns
Cbc0031I 57 added rows had average density of 28.77193
Cbc0013I At root node, 57 cuts changed objective from -48.811598 to -11.393372 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11272 row cuts average 7.4 elements, 4 column cuts (4 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1271 row cuts average 105.7 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 351 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 994 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 313 row cuts average 61.2 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 151 row cuts average 26.3 elements, 0 column cuts (0 active)  in 0.749 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.840586 best solution, best possible -11.393372 (2.79 seconds)
Cbc0012I Integer solution of -8.350376 found by DiveCoefficient after 3424 iterations and 1 nodes (3.02 seconds)
Cbc0012I Integer solution of -8.822086 found by rounding after 3492 iterations and 4 nodes (3.18 seconds)
Cbc0010I After 12 nodes, 4 on tree, -8.822086 best solution, best possible -11.393372 (3.52 seconds)
Cbc0010I After 38 nodes, 3 on tree, -8.822086 best solution, best possible -11.393295 (4.24 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 20 rows 28 columns
Cbc0010I After 52 nodes, 11 on tree, -8.822086 best solution, best possible -11.393295 (4.97 seconds)
Cbc0010I After 85 nodes, 10 on tree, -8.822086 best solution, best possible -11.393295 (5.71 seconds)
Cbc0012I Integer solution of -8.880646 found by rounding after 5492 iterations and 89 nodes (5.81 seconds)
Cbc0038I Full problem 108 rows 122 columns, reduced to 18 rows 23 columns
Cbc0010I After 116 nodes, 1 on tree, -8.880646 best solution, best possible -10.663243 (6.47 seconds)
Cbc0001I Search completed - best objective -8.880645999999999, took 6600 iterations and 120 nodes (6.69 seconds)
Cbc0032I Strong branching done 996 times (9671 iterations), fathomed 18 nodes and fixed 28 variables
Cbc0035I Maximum depth 13, 280 variables fixed on reduced cost
Total time (CPU seconds):       4.34   (Wallclock seconds):       6.71

