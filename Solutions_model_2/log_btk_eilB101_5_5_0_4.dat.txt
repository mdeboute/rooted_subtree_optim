Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-62) rows, 77 (-26) columns and 434 (-169) elements
Clp1000I sum of infeasibilities 3.9939e-06 - average 2.79294e-08, 57 fixed columns
Coin0506I Presolve 24 (-119) rows, 18 (-59) columns and 78 (-356) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 0.32904934 - largest nonzero change 0 ( 0%) - largest zero change 1.9533613e-05
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Coin0511I After Postsolve, objective 21765.854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8199859 - largest nonzero change 1.5013563e-05 ( 0.0015013563%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Coin0511I After Postsolve, objective 21765.854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21765.85427 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 142 rows, 77 columns (76 integer (76 of which binary)) and 448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.391%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.80583
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20564 iterations 27
Cbc0038I Solution found of -20564
Cbc0038I Relaxing continuous gives -20564
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -20684.2
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04046 (2) obj. -20684.2 iterations 11
Cbc0038I Pass   3: suminf.    0.48048 (3) obj. -21724.5 iterations 22
Cbc0038I Pass   4: suminf.    0.47696 (5) obj. -20684.2 iterations 17
Cbc0038I Pass   5: suminf.    0.44953 (2) obj. -20684.2 iterations 12
Cbc0038I Pass   6: suminf.    0.46154 (2) obj. -20719.8 iterations 12
Cbc0038I Pass   7: suminf.    1.04777 (4) obj. -20684.2 iterations 19
Cbc0038I Pass   8: suminf.    0.93853 (3) obj. -20684.2 iterations 11
Cbc0038I Pass   9: suminf.    0.86957 (3) obj. -21624 iterations 13
Cbc0038I Pass  10: suminf.    0.82558 (3) obj. -21624.2 iterations 2
Cbc0038I Pass  11: suminf.    0.30867 (2) obj. -20684.2 iterations 13
Cbc0038I Pass  12: suminf.    0.25641 (2) obj. -20839.4 iterations 11
Cbc0038I Pass  13: suminf.    0.54509 (4) obj. -20684.2 iterations 12
Cbc0038I Pass  14: suminf.    0.54509 (4) obj. -20684.2 iterations 3
Cbc0038I Pass  15: suminf.    0.59198 (3) obj. -20684.2 iterations 14
Cbc0038I Pass  16: suminf.    0.48600 (2) obj. -20684.2 iterations 5
Cbc0038I Pass  17: suminf.    0.51282 (2) obj. -21144 iterations 12
Cbc0038I Pass  18: suminf.    0.51282 (2) obj. -21144 iterations 0
Cbc0038I Pass  19: suminf.    0.66762 (2) obj. -20684.2 iterations 11
Cbc0038I Pass  20: suminf.    0.83599 (7) obj. -20684.2 iterations 20
Cbc0038I Pass  21: suminf.    0.81517 (6) obj. -20684.2 iterations 9
Cbc0038I Pass  22: suminf.    0.98765 (5) obj. -21077.2 iterations 19
Cbc0038I Pass  23: suminf.    0.79951 (2) obj. -20684.2 iterations 11
Cbc0038I Pass  24: suminf.    0.82051 (2) obj. -20746.5 iterations 11
Cbc0038I Pass  25: suminf.    1.41943 (6) obj. -21021.1 iterations 5
Cbc0038I Pass  26: suminf.    0.42262 (2) obj. -20684.2 iterations 10
Cbc0038I Pass  27: suminf.    0.42262 (2) obj. -20684.2 iterations 3
Cbc0038I Pass  28: suminf.    0.81481 (2) obj. -21246.4 iterations 5
Cbc0038I Pass  29: suminf.    0.77387 (3) obj. -21292 iterations 1
Cbc0038I Pass  30: suminf.    1.06947 (5) obj. -20684.2 iterations 14
Cbc0038I Pass  31: suminf.    0.46828 (2) obj. -20684.2 iterations 14
Cbc0038I Rounding solution of -20643.9 is better than previous of -20564

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 27 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -20643.9 to -20783 (0.03 seconds)
Cbc0038I Round again with cutoff of -20979.5
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.13990 (2) obj. -20979.5 iterations 0
Cbc0038I Pass  32: suminf.    0.48048 (3) obj. -21724.5 iterations 22
Cbc0038I Pass  33: suminf.    0.35238 (4) obj. -20979.5 iterations 15
Cbc0038I Pass  34: suminf.    0.11298 (2) obj. -20979.5 iterations 15
Cbc0038I Pass  35: suminf.    0.86957 (3) obj. -21624 iterations 10
Cbc0038I Pass  36: suminf.    0.82558 (3) obj. -21624.2 iterations 2
Cbc0038I Pass  37: suminf.    0.68781 (5) obj. -20979.5 iterations 11
Cbc0038I Pass  38: suminf.    0.53244 (3) obj. -20979.5 iterations 8
Cbc0038I Pass  39: suminf.    0.95935 (2) obj. -20979.5 iterations 9
Cbc0038I Pass  40: suminf.    1.31640 (3) obj. -20979.5 iterations 6
Cbc0038I Pass  41: suminf.    1.03241 (4) obj. -20979.5 iterations 8
Cbc0038I Pass  42: suminf.    1.23982 (7) obj. -20979.5 iterations 11
Cbc0038I Pass  43: suminf.    0.74346 (5) obj. -21362.3 iterations 12
Cbc0038I Pass  44: suminf.    0.42649 (2) obj. -20979.5 iterations 12
Cbc0038I Pass  45: suminf.    0.51282 (2) obj. -21236 iterations 9
Cbc0038I Pass  46: suminf.    1.21125 (3) obj. -20979.5 iterations 13
Cbc0038I Pass  47: suminf.    0.51282 (2) obj. -21144 iterations 7
Cbc0038I Pass  48: suminf.    0.56819 (2) obj. -20979.5 iterations 9
Cbc0038I Pass  49: suminf.    0.85207 (3) obj. -20979.5 iterations 11
Cbc0038I Pass  50: suminf.    0.85207 (3) obj. -20979.5 iterations 2
Cbc0038I Pass  51: suminf.    1.00382 (3) obj. -20979.5 iterations 14
Cbc0038I Pass  52: suminf.    0.49648 (2) obj. -20979.5 iterations 3
Cbc0038I Pass  53: suminf.    0.72597 (2) obj. -20979.5 iterations 11
Cbc0038I Pass  54: suminf.    0.81481 (2) obj. -21246.4 iterations 4
Cbc0038I Pass  55: suminf.    0.77387 (3) obj. -21292 iterations 1
Cbc0038I Pass  56: suminf.    1.92114 (6) obj. -20979.5 iterations 9
Cbc0038I Pass  57: suminf.    0.98765 (5) obj. -21077.2 iterations 10
Cbc0038I Pass  58: suminf.    0.93828 (5) obj. -20979.5 iterations 8
Cbc0038I Pass  59: suminf.    1.55403 (7) obj. -20979.5 iterations 11
Cbc0038I Pass  60: suminf.    0.93828 (5) obj. -20979.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 28 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -20783 - took 0.03 seconds
Cbc0012I Integer solution of -20782.95 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 142 rows 77 columns, reduced to 13 rows 12 columns
Cbc0031I 9 added rows had average density of 27.555556
Cbc0013I At root node, 9 cuts changed objective from -21765.854 to -21399.294 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.5 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0010I After 14 nodes, 2 on tree, -20782.95 best solution, best possible -21379.481 (0.69 seconds)
Cbc0001I Search completed - best objective -20782.95, took 407 iterations and 16 nodes (0.71 seconds)
Cbc0032I Strong branching done 132 times (804 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 81 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-88) rows, 125 (-77) columns and 2039 (-3614) elements
Clp1000I sum of infeasibilities 2.93251e-07 - average 2.52803e-09, 67 fixed columns
Coin0506I Presolve 56 (-60) rows, 58 (-67) columns and 472 (-1567) elements
Clp0006I 0  Obj 21741.154 Dual inf 321.54586 (57)
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 8.0842986 - largest nonzero change 0 ( 0%) - largest zero change 2.681742e-05
Clp0000I Optimal - objective value 21800.934
Clp0000I Optimal - objective value 21800.934
Coin0511I After Postsolve, objective 21800.934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21800.934 Dual inf 6985.8385 (7)
Clp0014I Perturbing problem by 0.001% of 1.8500133 - largest nonzero change 1.321845e-05 ( 0.00088996209%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 21800.934
Clp0000I Optimal - objective value 21800.934
Clp0000I Optimal - objective value 21800.934
Coin0511I After Postsolve, objective 21800.934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21800.9336 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 43 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 115 rows, 125 columns (125 integer (125 of which binary)) and 2059 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.116%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 3.78904
Cbc0038I Pass   1: suminf.    0.49855 (19) obj. -18164.9 iterations 32
Cbc0038I Pass   2: suminf.    0.49855 (19) obj. -18164.9 iterations 1
Cbc0038I Solution found of -18141.7
Cbc0038I Rounding solution of -18181.7 is better than previous of -18141.7

Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 24 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -18181.7 to -20564 (0.03 seconds)
Cbc0038I Round again with cutoff of -20686.4
Cbc0038I Reduced cost fixing fixed 33 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.90134 (39) obj. -20686.4 iterations 14
Cbc0038I Pass   4: suminf.    0.28379 (10) obj. -20686.4 iterations 33
Cbc0038I Pass   5: suminf.    0.48048 (3) obj. -21721.7 iterations 19
Cbc0038I Pass   6: suminf.    0.04121 (2) obj. -20686.4 iterations 18
Cbc0038I Pass   7: suminf.    0.77843 (14) obj. -20686.4 iterations 28
Cbc0038I Pass   8: suminf.    0.49343 (9) obj. -20901.3 iterations 10
Cbc0038I Pass   9: suminf.    0.35514 (3) obj. -20686.4 iterations 18
Cbc0038I Pass  10: suminf.    0.06250 (1) obj. -20892.8 iterations 10
Cbc0038I Pass  11: suminf.    0.98227 (13) obj. -20686.4 iterations 32
Cbc0038I Pass  12: suminf.    0.70159 (10) obj. -20686.4 iterations 7
Cbc0038I Pass  13: suminf.    0.50730 (2) obj. -21058.2 iterations 15
Cbc0038I Pass  14: suminf.    0.50730 (2) obj. -21058.2 iterations 0
Cbc0038I Pass  15: suminf.    1.32782 (4) obj. -20686.4 iterations 6
Cbc0038I Pass  16: suminf.    1.55056 (11) obj. -20686.4 iterations 20
Cbc0038I Pass  17: suminf.    0.56181 (8) obj. -20839.5 iterations 10
Cbc0038I Pass  18: suminf.    0.72949 (4) obj. -20686.4 iterations 12
Cbc0038I Pass  19: suminf.    0.72949 (4) obj. -20686.4 iterations 3
Cbc0038I Pass  20: suminf.    1.46765 (4) obj. -20686.4 iterations 8
Cbc0038I Pass  21: suminf.    1.28131 (5) obj. -20686.4 iterations 8
Cbc0038I Pass  22: suminf.    0.89987 (3) obj. -20686.4 iterations 7
Cbc0038I Pass  23: suminf.    0.86773 (2) obj. -20686.4 iterations 8
Cbc0038I Pass  24: suminf.    0.82645 (2) obj. -21553.7 iterations 6
Cbc0038I Pass  25: suminf.    1.65121 (8) obj. -20686.4 iterations 12
Cbc0038I Pass  26: suminf.    1.06225 (6) obj. -20686.4 iterations 8
Cbc0038I Pass  27: suminf.    0.82645 (2) obj. -21554.7 iterations 9
Cbc0038I Pass  28: suminf.    0.86739 (2) obj. -20686.4 iterations 6
Cbc0038I Pass  29: suminf.    2.20632 (18) obj. -20686.4 iterations 26
Cbc0038I Pass  30: suminf.    1.06311 (17) obj. -20686.4 iterations 7
Cbc0038I Pass  31: suminf.    0.94561 (16) obj. -20686.4 iterations 2
Cbc0038I Pass  32: suminf.    0.04315 (2) obj. -20686.4 iterations 16
Cbc0038I Rounding solution of -20643.9 is better than previous of -20564

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 34 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -20906.7
Cbc0038I Reduced cost fixing fixed 36 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.97697 (39) obj. -20906.7 iterations 0
Cbc0038I Pass  33: suminf.    0.91383 (17) obj. -21735.2 iterations 30
Cbc0038I Pass  34: suminf.    0.56014 (16) obj. -20906.7 iterations 12
Cbc0038I Pass  35: suminf.    0.48048 (3) obj. -21721.7 iterations 25
Cbc0038I Pass  36: suminf.    0.11538 (2) obj. -20906.7 iterations 16
Cbc0038I Pass  37: suminf.    1.61582 (11) obj. -20906.7 iterations 21
Cbc0038I Pass  38: suminf.    1.32613 (12) obj. -20906.7 iterations 11
Cbc0038I Pass  39: suminf.    1.20579 (10) obj. -20906.7 iterations 7
Cbc0038I Pass  40: suminf.    0.31739 (2) obj. -20906.7 iterations 19
Cbc0038I Pass  41: suminf.    0.31739 (2) obj. -20906.7 iterations 0
Cbc0038I Pass  42: suminf.    0.50321 (2) obj. -20906.7 iterations 5
Cbc0038I Pass  43: suminf.    0.92852 (13) obj. -20906.7 iterations 23
Cbc0038I Pass  44: suminf.    0.65648 (9) obj. -20906.7 iterations 8
Cbc0038I Pass  45: suminf.    1.70234 (6) obj. -20906.7 iterations 21
Cbc0038I Pass  46: suminf.    1.35502 (5) obj. -20906.7 iterations 5
Cbc0038I Pass  47: suminf.    2.08869 (5) obj. -20906.7 iterations 11
Cbc0038I Pass  48: suminf.    2.04878 (5) obj. -20906.7 iterations 1
Cbc0038I Pass  49: suminf.    0.93393 (6) obj. -20906.7 iterations 10
Cbc0038I Pass  50: suminf.    0.93393 (6) obj. -20906.7 iterations 3
Cbc0038I Pass  51: suminf.    2.07412 (5) obj. -20906.7 iterations 13
Cbc0038I Pass  52: suminf.    0.65102 (11) obj. -20906.7 iterations 24
Cbc0038I Pass  53: suminf.    0.63308 (8) obj. -20906.7 iterations 13
Cbc0038I Pass  54: suminf.    1.50000 (3) obj. -21106.5 iterations 14
Cbc0038I Pass  55: suminf.    1.35711 (3) obj. -20906.7 iterations 1
Cbc0038I Pass  56: suminf.    1.35711 (3) obj. -20906.7 iterations 0
Cbc0038I Pass  57: suminf.    0.58497 (2) obj. -20906.7 iterations 2
Cbc0038I Pass  58: suminf.    0.51282 (2) obj. -21121 iterations 2
Cbc0038I Pass  59: suminf.    0.58497 (2) obj. -20906.7 iterations 6
Cbc0038I Pass  60: suminf.    1.20655 (18) obj. -20906.7 iterations 26
Cbc0038I Pass  61: suminf.    1.20655 (18) obj. -20906.7 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 115 rows 125 columns, reduced to 32 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -20643.9 - took 0.08 seconds
Cbc0012I Integer solution of -20643.94 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 115 rows 125 columns, reduced to 25 rows 26 columns
Cbc0031I 37 added rows had average density of 10.567568
Cbc0013I At root node, 37 cuts changed objective from -21779.603 to -21444.925 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 580 row cuts average 4.5 elements, 4 column cuts (4 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 29.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 171 row cuts average 31.9 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 44.7 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20643.94 best solution, best possible -21444.925 (0.34 seconds)
Cbc0016I Integer solution of -20782.95 found by strong branching after 668 iterations and 13 nodes (0.68 seconds)
Cbc0001I Search completed - best objective -20782.95, took 1069 iterations and 24 nodes (0.89 seconds)
Cbc0032I Strong branching done 382 times (3844 iterations), fathomed 7 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 110 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.89

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 143 (-62) rows, 77 (-26) columns and 434 (-169) elements
Clp1000I sum of infeasibilities 3.9939e-06 - average 2.79294e-08, 57 fixed columns
Coin0506I Presolve 24 (-119) rows, 18 (-59) columns and 78 (-356) elements
Clp0029I End of values pass after 12 iterations
Clp0014I Perturbing problem by 0.001% of 0.32904934 - largest nonzero change 0 ( 0%) - largest zero change 1.9533613e-05
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Coin0511I After Postsolve, objective 21765.854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8199859 - largest nonzero change 1.5013563e-05 ( 0.0015013563%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Clp0000I Optimal - objective value 21765.854
Coin0511I After Postsolve, objective 21765.854, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21765.85427 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 142 rows, 77 columns (76 integer (76 of which binary)) and 448 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.391%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.80583
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20564 iterations 27
Cbc0038I Solution found of -20564
Cbc0038I Relaxing continuous gives -20564
Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 9 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -20684.2
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.04046 (2) obj. -20684.2 iterations 11
Cbc0038I Pass   3: suminf.    0.48048 (3) obj. -21724.5 iterations 22
Cbc0038I Pass   4: suminf.    0.47696 (5) obj. -20684.2 iterations 17
Cbc0038I Pass   5: suminf.    0.44953 (2) obj. -20684.2 iterations 12
Cbc0038I Pass   6: suminf.    0.46154 (2) obj. -20719.8 iterations 12
Cbc0038I Pass   7: suminf.    1.04777 (4) obj. -20684.2 iterations 19
Cbc0038I Pass   8: suminf.    0.93853 (3) obj. -20684.2 iterations 11
Cbc0038I Pass   9: suminf.    0.86957 (3) obj. -21624 iterations 13
Cbc0038I Pass  10: suminf.    0.82558 (3) obj. -21624.2 iterations 2
Cbc0038I Pass  11: suminf.    0.30867 (2) obj. -20684.2 iterations 13
Cbc0038I Pass  12: suminf.    0.25641 (2) obj. -20839.4 iterations 11
Cbc0038I Pass  13: suminf.    0.54509 (4) obj. -20684.2 iterations 12
Cbc0038I Pass  14: suminf.    0.54509 (4) obj. -20684.2 iterations 3
Cbc0038I Pass  15: suminf.    0.59198 (3) obj. -20684.2 iterations 14
Cbc0038I Pass  16: suminf.    0.48600 (2) obj. -20684.2 iterations 5
Cbc0038I Pass  17: suminf.    0.51282 (2) obj. -21144 iterations 12
Cbc0038I Pass  18: suminf.    0.51282 (2) obj. -21144 iterations 0
Cbc0038I Pass  19: suminf.    0.66762 (2) obj. -20684.2 iterations 11
Cbc0038I Pass  20: suminf.    0.83599 (7) obj. -20684.2 iterations 20
Cbc0038I Pass  21: suminf.    0.81517 (6) obj. -20684.2 iterations 9
Cbc0038I Pass  22: suminf.    0.98765 (5) obj. -21077.2 iterations 19
Cbc0038I Pass  23: suminf.    0.79951 (2) obj. -20684.2 iterations 11
Cbc0038I Pass  24: suminf.    0.82051 (2) obj. -20746.5 iterations 11
Cbc0038I Pass  25: suminf.    1.41943 (6) obj. -21021.1 iterations 5
Cbc0038I Pass  26: suminf.    0.42262 (2) obj. -20684.2 iterations 10
Cbc0038I Pass  27: suminf.    0.42262 (2) obj. -20684.2 iterations 3
Cbc0038I Pass  28: suminf.    0.81481 (2) obj. -21246.4 iterations 5
Cbc0038I Pass  29: suminf.    0.77387 (3) obj. -21292 iterations 1
Cbc0038I Pass  30: suminf.    1.06947 (5) obj. -20684.2 iterations 14
Cbc0038I Pass  31: suminf.    0.46828 (2) obj. -20684.2 iterations 14
Cbc0038I Rounding solution of -20643.9 is better than previous of -20564

Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 27 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -20643.9 to -20783 (0.03 seconds)
Cbc0038I Round again with cutoff of -20979.5
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.13990 (2) obj. -20979.5 iterations 0
Cbc0038I Pass  32: suminf.    0.48048 (3) obj. -21724.5 iterations 22
Cbc0038I Pass  33: suminf.    0.35238 (4) obj. -20979.5 iterations 15
Cbc0038I Pass  34: suminf.    0.11298 (2) obj. -20979.5 iterations 15
Cbc0038I Pass  35: suminf.    0.86957 (3) obj. -21624 iterations 10
Cbc0038I Pass  36: suminf.    0.82558 (3) obj. -21624.2 iterations 2
Cbc0038I Pass  37: suminf.    0.68781 (5) obj. -20979.5 iterations 11
Cbc0038I Pass  38: suminf.    0.53244 (3) obj. -20979.5 iterations 8
Cbc0038I Pass  39: suminf.    0.95935 (2) obj. -20979.5 iterations 9
Cbc0038I Pass  40: suminf.    1.31640 (3) obj. -20979.5 iterations 6
Cbc0038I Pass  41: suminf.    1.03241 (4) obj. -20979.5 iterations 8
Cbc0038I Pass  42: suminf.    1.23982 (7) obj. -20979.5 iterations 11
Cbc0038I Pass  43: suminf.    0.74346 (5) obj. -21362.3 iterations 12
Cbc0038I Pass  44: suminf.    0.42649 (2) obj. -20979.5 iterations 12
Cbc0038I Pass  45: suminf.    0.51282 (2) obj. -21236 iterations 9
Cbc0038I Pass  46: suminf.    1.21125 (3) obj. -20979.5 iterations 13
Cbc0038I Pass  47: suminf.    0.51282 (2) obj. -21144 iterations 7
Cbc0038I Pass  48: suminf.    0.56819 (2) obj. -20979.5 iterations 9
Cbc0038I Pass  49: suminf.    0.85207 (3) obj. -20979.5 iterations 11
Cbc0038I Pass  50: suminf.    0.85207 (3) obj. -20979.5 iterations 2
Cbc0038I Pass  51: suminf.    1.00382 (3) obj. -20979.5 iterations 14
Cbc0038I Pass  52: suminf.    0.49648 (2) obj. -20979.5 iterations 3
Cbc0038I Pass  53: suminf.    0.72597 (2) obj. -20979.5 iterations 11
Cbc0038I Pass  54: suminf.    0.81481 (2) obj. -21246.4 iterations 4
Cbc0038I Pass  55: suminf.    0.77387 (3) obj. -21292 iterations 1
Cbc0038I Pass  56: suminf.    1.92114 (6) obj. -20979.5 iterations 9
Cbc0038I Pass  57: suminf.    0.98765 (5) obj. -21077.2 iterations 10
Cbc0038I Pass  58: suminf.    0.93828 (5) obj. -20979.5 iterations 8
Cbc0038I Pass  59: suminf.    1.55403 (7) obj. -20979.5 iterations 11
Cbc0038I Pass  60: suminf.    0.93828 (5) obj. -20979.5 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 142 rows 77 columns, reduced to 28 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -20783 - took 0.04 seconds
Cbc0012I Integer solution of -20782.95 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 142 rows 77 columns, reduced to 13 rows 12 columns
Cbc0031I 9 added rows had average density of 27.555556
Cbc0013I At root node, 9 cuts changed objective from -21765.854 to -21399.294 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 40 row cuts average 2.5 elements, 5 column cuts (5 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 29.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 51 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0010I After 14 nodes, 2 on tree, -20782.95 best solution, best possible -21379.481 (0.71 seconds)
Cbc0001I Search completed - best objective -20782.95, took 407 iterations and 16 nodes (0.72 seconds)
Cbc0032I Strong branching done 132 times (804 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 5, 81 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 112 (-93) rows, 121 (-82) columns and 1940 (-3714) elements
Clp1000I sum of infeasibilities 5.70369e-07 - average 5.09258e-09, 100 fixed columns
Coin0506I Presolve 18 (-94) rows, 21 (-100) columns and 74 (-1866) elements
Clp0006I 0  Obj 21676.94 Dual inf 2130.2684 (20)
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 0.31784273 - largest nonzero change 0 ( 0%) - largest zero change 2.924151e-05
Clp0000I Optimal - objective value 21732.874
Clp0000I Optimal - objective value 21732.874
Coin0511I After Postsolve, objective 21732.874, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 21732.874 Dual inf 6134.8658 (51)
Clp0014I Perturbing problem by 0.001% of 1.8951058 - largest nonzero change 1.321845e-05 ( 0.00088996209%) - largest zero change 2.9802368e-05
Clp0000I Optimal - objective value 21800.934
Clp0000I Optimal - objective value 21800.934
Clp0000I Optimal - objective value 21800.934
Coin0511I After Postsolve, objective 21800.934, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 21800.9336 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 42 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 110 rows, 121 columns (121 integer (121 of which binary)) and 1955 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.203%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 3.85633
Cbc0038I Pass   1: suminf.    0.52917 (19) obj. -18164.9 iterations 35
Cbc0038I Pass   2: suminf.    0.52917 (19) obj. -18164.9 iterations 0
Cbc0038I Pass   3: suminf.    0.11858 (7) obj. -18148.6 iterations 12
Cbc0038I Solution found of -18141.7
Cbc0038I Rounding solution of -18181.7 is better than previous of -18141.7

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 121 columns, reduced to 24 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -18181.7 to -20564 (0.04 seconds)
Cbc0038I Round again with cutoff of -20686.4
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.95882 (39) obj. -20686.4 iterations 14
Cbc0038I Pass   5: suminf.    0.76398 (22) obj. -20686.4 iterations 19
Cbc0038I Pass   6: suminf.    0.07118 (3) obj. -20686.4 iterations 25
Cbc0038I Pass   7: suminf.    0.48048 (3) obj. -21721.7 iterations 16
Cbc0038I Pass   8: suminf.    0.04120 (2) obj. -20686.4 iterations 21
Cbc0038I Pass   9: suminf.    1.01447 (11) obj. -20686.4 iterations 23
Cbc0038I Pass  10: suminf.    1.01447 (11) obj. -20686.4 iterations 1
Cbc0038I Pass  11: suminf.    0.28990 (2) obj. -20686.4 iterations 25
Cbc0038I Pass  12: suminf.    0.20513 (2) obj. -20938.2 iterations 10
Cbc0038I Pass  13: suminf.    1.51566 (14) obj. -20686.4 iterations 26
Cbc0038I Pass  14: suminf.    0.72920 (5) obj. -20686.4 iterations 16
Cbc0038I Pass  15: suminf.    0.56412 (12) obj. -20686.4 iterations 9
Cbc0038I Pass  16: suminf.    0.93913 (3) obj. -20686.4 iterations 19
Cbc0038I Pass  17: suminf.    0.53233 (6) obj. -20686.4 iterations 11
Cbc0038I Pass  18: suminf.    0.49023 (7) obj. -20686.4 iterations 10
Cbc0038I Pass  19: suminf.    0.93891 (3) obj. -20686.4 iterations 16
Cbc0038I Pass  20: suminf.    0.53363 (5) obj. -20686.4 iterations 11
Cbc0038I Pass  21: suminf.    0.49143 (6) obj. -20686.4 iterations 7
Cbc0038I Pass  22: suminf.    0.63303 (16) obj. -20686.4 iterations 9
Cbc0038I Pass  23: suminf.    0.62092 (14) obj. -20686.4 iterations 1
Cbc0038I Pass  24: suminf.    0.94804 (4) obj. -20686.4 iterations 19
Cbc0038I Pass  25: suminf.    0.52834 (8) obj. -20686.4 iterations 12
Cbc0038I Pass  26: suminf.    0.48765 (9) obj. -20686.4 iterations 8
Cbc0038I Pass  27: suminf.    0.93935 (3) obj. -20686.4 iterations 15
Cbc0038I Pass  28: suminf.    0.53035 (7) obj. -20686.4 iterations 12
Cbc0038I Pass  29: suminf.    0.48862 (8) obj. -20686.4 iterations 8
Cbc0038I Pass  30: suminf.    0.68288 (5) obj. -20686.4 iterations 11
Cbc0038I Pass  31: suminf.    0.59422 (11) obj. -20686.4 iterations 6
Cbc0038I Pass  32: suminf.    0.93714 (3) obj. -20686.4 iterations 18
Cbc0038I Pass  33: suminf.    0.55922 (6) obj. -20686.4 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 121 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -20564 to -20643.9 (0.07 seconds)
Cbc0038I Round again with cutoff of -20906.7
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.03453 (39) obj. -20906.7 iterations 0
Cbc0038I Pass  34: suminf.    1.17233 (23) obj. -21185.9 iterations 20
Cbc0038I Pass  35: suminf.    0.93275 (24) obj. -20906.7 iterations 6
Cbc0038I Pass  36: suminf.    0.56854 (6) obj. -21724.6 iterations 30
Cbc0038I Pass  37: suminf.    0.20624 (5) obj. -20906.7 iterations 17
Cbc0038I Pass  38: suminf.    0.48048 (3) obj. -21721.7 iterations 16
Cbc0038I Pass  39: suminf.    0.11537 (2) obj. -20906.7 iterations 19
Cbc0038I Pass  40: suminf.    1.39014 (11) obj. -20906.7 iterations 15
Cbc0038I Pass  41: suminf.    1.11106 (13) obj. -20906.7 iterations 4
Cbc0038I Pass  42: suminf.    0.77448 (6) obj. -21627.1 iterations 20
Cbc0038I Pass  43: suminf.    0.22588 (3) obj. -20906.7 iterations 17
Cbc0038I Pass  44: suminf.    0.48048 (3) obj. -21721.7 iterations 13
Cbc0038I Pass  45: suminf.    0.11537 (2) obj. -20906.7 iterations 18
Cbc0038I Pass  46: suminf.    1.83833 (12) obj. -20906.7 iterations 27
Cbc0038I Pass  47: suminf.    0.81807 (8) obj. -21574.2 iterations 12
Cbc0038I Pass  48: suminf.    0.38880 (8) obj. -20906.7 iterations 24
Cbc0038I Pass  49: suminf.    0.48048 (3) obj. -21716.7 iterations 14
Cbc0038I Pass  50: suminf.    0.11705 (2) obj. -20906.7 iterations 17
Cbc0038I Pass  51: suminf.    0.87011 (8) obj. -20906.7 iterations 17
Cbc0038I Pass  52: suminf.    0.64661 (11) obj. -20906.7 iterations 7
Cbc0038I Pass  53: suminf.    0.24691 (5) obj. -20938.1 iterations 13
Cbc0038I Pass  54: suminf.    0.23105 (5) obj. -20906.7 iterations 5
Cbc0038I Pass  55: suminf.    1.40980 (7) obj. -20906.7 iterations 24
Cbc0038I Pass  56: suminf.    1.00725 (4) obj. -20906.7 iterations 11
Cbc0038I Pass  57: suminf.    0.82558 (3) obj. -21603.2 iterations 9
Cbc0038I Pass  58: suminf.    0.53153 (6) obj. -20906.7 iterations 8
Cbc0038I Pass  59: suminf.    0.43027 (3) obj. -20906.7 iterations 8
Cbc0038I Pass  60: suminf.    0.94189 (2) obj. -20906.7 iterations 7
Cbc0038I Pass  61: suminf.    1.05533 (10) obj. -21034.2 iterations 30
Cbc0038I Pass  62: suminf.    1.05533 (10) obj. -21034.2 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 121 columns, reduced to 33 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -20643.9 to -20783 (0.12 seconds)
Cbc0038I Round again with cutoff of -21171
Cbc0038I Reduced cost fixing fixed 37 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.12538 (39) obj. -21171 iterations 0
Cbc0038I Pass  63: suminf.    1.61101 (33) obj. -21171 iterations 12
Cbc0038I Pass  64: suminf.    1.19138 (35) obj. -21171 iterations 10
Cbc0038I Pass  65: suminf.    2.52366 (19) obj. -21171 iterations 23
Cbc0038I Pass  66: suminf.    2.36239 (19) obj. -21171 iterations 4
Cbc0038I Pass  67: suminf.    1.10875 (25) obj. -21171 iterations 10
Cbc0038I Pass  68: suminf.    0.91802 (26) obj. -21171 iterations 5
Cbc0038I Pass  69: suminf.    2.31635 (5) obj. -21171 iterations 40
Cbc0038I Pass  70: suminf.    0.92117 (6) obj. -21171 iterations 10
Cbc0038I Pass  71: suminf.    0.73199 (7) obj. -21171 iterations 8
Cbc0038I Pass  72: suminf.    2.31641 (5) obj. -21171 iterations 16
Cbc0038I Pass  73: suminf.    0.91893 (5) obj. -21171 iterations 10
Cbc0038I Pass  74: suminf.    0.73104 (6) obj. -21171 iterations 9
Cbc0038I Pass  75: suminf.    1.31665 (7) obj. -21171 iterations 16
Cbc0038I Pass  76: suminf.    0.98352 (7) obj. -21602.9 iterations 10
Cbc0038I Pass  77: suminf.    0.97181 (2) obj. -21171 iterations 13
Cbc0038I Pass  78: suminf.    0.82558 (3) obj. -21611.2 iterations 11
Cbc0038I Pass  79: suminf.    0.93525 (3) obj. -21171 iterations 13
Cbc0038I Pass  80: suminf.    0.93525 (3) obj. -21171 iterations 8
Cbc0038I Pass  81: suminf.    0.97181 (2) obj. -21171 iterations 8
Cbc0038I Pass  82: suminf.    1.14238 (9) obj. -21171 iterations 16
Cbc0038I Pass  83: suminf.    0.90599 (8) obj. -21576.3 iterations 14
Cbc0038I Pass  84: suminf.    0.61499 (8) obj. -21171 iterations 20
Cbc0038I Pass  85: suminf.    0.48048 (3) obj. -21721.7 iterations 17
Cbc0038I Pass  86: suminf.    0.20436 (2) obj. -21171 iterations 19
Cbc0038I Pass  87: suminf.    0.78192 (6) obj. -21202.5 iterations 28
Cbc0038I Pass  88: suminf.    0.50350 (7) obj. -21171 iterations 18
Cbc0038I Pass  89: suminf.    0.48048 (3) obj. -21715.7 iterations 15
Cbc0038I Pass  90: suminf.    0.20638 (2) obj. -21171 iterations 19
Cbc0038I Pass  91: suminf.    0.74121 (10) obj. -21296.2 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 110 rows 121 columns, reduced to 45 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -20783 - took 0.10 seconds
Cbc0012I Integer solution of -20782.95 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 110 rows 121 columns, reduced to 26 rows 29 columns
Cbc0031I 35 added rows had average density of 6.4
Cbc0013I At root node, 35 cuts changed objective from -21779.552 to -21455.504 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 460 row cuts average 4.3 elements, 4 column cuts (4 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 10.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 72 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 25 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20782.95 best solution, best possible -21455.504 (0.33 seconds)
Cbc0001I Search completed - best objective -20782.95, took 1088 iterations and 24 nodes (1.01 seconds)
Cbc0032I Strong branching done 344 times (3839 iterations), fathomed 9 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 83 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       1.03

