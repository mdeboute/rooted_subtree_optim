Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 2.51904e-05 - average 1.33991e-07, 16 fixed columns
Coin0506I Presolve 155 (-33) rows, 84 (-17) columns and 470 (-100) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 2.3492891 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 65.915826
Clp0000I Optimal - objective value 65.915826
Coin0511I After Postsolve, objective 65.915826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.915826
Clp0000I Optimal - objective value 65.915826
Clp0000I Optimal - objective value 65.915826
Coin0511I After Postsolve, objective 65.915826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.91582569 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 12.9054
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.25524 iterations 68
Cbc0038I Solution found of 3.25524
Cbc0038I Relaxing continuous gives 3.25524
Cbc0038I Rounding solution of -3.97381 is better than previous of 3.25524

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -3.97381 to -34.6534 (0.06 seconds)
Cbc0038I Round again with cutoff of -37.7797
Cbc0038I Pass   2: suminf.    4.82595 (16) obj. -37.7797 iterations 24
Cbc0038I Pass   3: suminf.    4.62162 (13) obj. -37.7797 iterations 7
Cbc0038I Pass   4: suminf.    3.90958 (12) obj. -37.7797 iterations 5
Cbc0038I Pass   5: suminf.    2.60682 (10) obj. -37.7797 iterations 9
Cbc0038I Pass   6: suminf.    2.26002 (7) obj. -37.7797 iterations 16
Cbc0038I Pass   7: suminf.    1.39582 (6) obj. -37.7797 iterations 5
Cbc0038I Pass   8: suminf.    2.28393 (7) obj. -37.7797 iterations 16
Cbc0038I Pass   9: suminf.    2.24549 (6) obj. -37.7797 iterations 1
Cbc0038I Pass  10: suminf.    1.59740 (6) obj. -37.7797 iterations 8
Cbc0038I Pass  11: suminf.    1.23618 (6) obj. -37.7797 iterations 1
Cbc0038I Pass  12: suminf.    2.28393 (7) obj. -37.7797 iterations 8
Cbc0038I Pass  13: suminf.    2.42605 (15) obj. -37.7797 iterations 27
Cbc0038I Pass  14: suminf.    1.86465 (9) obj. -37.7797 iterations 16
Cbc0038I Pass  15: suminf.    2.06915 (6) obj. -37.7797 iterations 18
Cbc0038I Pass  16: suminf.    1.43017 (6) obj. -37.7797 iterations 5
Cbc0038I Pass  17: suminf.    1.22994 (6) obj. -37.7797 iterations 2
Cbc0038I Pass  18: suminf.    2.33612 (6) obj. -37.7797 iterations 10
Cbc0038I Pass  19: suminf.    2.27087 (6) obj. -37.7797 iterations 2
Cbc0038I Pass  20: suminf.    1.78260 (9) obj. -37.7797 iterations 6
Cbc0038I Pass  21: suminf.    3.30341 (9) obj. -37.7797 iterations 13
Cbc0038I Pass  22: suminf.    1.50995 (6) obj. -37.7797 iterations 9
Cbc0038I Pass  23: suminf.    2.06066 (7) obj. -37.7797 iterations 13
Cbc0038I Pass  24: suminf.    1.91738 (7) obj. -37.7797 iterations 5
Cbc0038I Pass  25: suminf.    2.17029 (7) obj. -37.7797 iterations 8
Cbc0038I Pass  26: suminf.    5.39107 (21) obj. -37.7797 iterations 31
Cbc0038I Pass  27: suminf.    3.16183 (17) obj. -37.7797 iterations 12
Cbc0038I Pass  28: suminf.    2.04845 (7) obj. -37.7797 iterations 40
Cbc0038I Pass  29: suminf.    1.99570 (7) obj. -37.7797 iterations 2
Cbc0038I Pass  30: suminf.    1.94165 (7) obj. -37.7797 iterations 1
Cbc0038I Pass  31: suminf.    3.02615 (9) obj. -37.7797 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 122 rows 67 columns - 2 fixed gives 107, 65 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 107 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -34.6534 - took 0.12 seconds
Cbc0012I Integer solution of -34.653383 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 91 rows 51 columns
Cbc0031I 41 added rows had average density of 63.073171
Cbc0013I At root node, 41 cuts changed objective from -65.915826 to -56.653871 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19776 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2614 row cuts average 100.5 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 179 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.653383 best solution, best possible -56.653871 (1.93 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 104 rows 59 columns
Cbc0038I Full problem 188 rows 101 columns, reduced to 30 rows 25 columns
Cbc0010I After 141 nodes, 14 on tree, -34.653383 best solution, best possible -56.653871 (2.63 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 4 rows 7 columns
Cbc0001I Search completed - best objective -34.65338300000001, took 16628 iterations and 222 nodes (2.75 seconds)
Cbc0032I Strong branching done 1686 times (30308 iterations), fathomed 28 nodes and fixed 67 variables
Cbc0035I Maximum depth 34, 874 variables fixed on reduced cost
Total time (CPU seconds):       2.61   (Wallclock seconds):       2.77

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-73) rows, 143 (-59) columns and 2484 (-3169) elements
Clp1000I sum of infeasibilities 1.08577e-07 - average 8.28833e-10, 37 fixed columns
Coin0506I Presolve 95 (-36) rows, 106 (-37) columns and 1579 (-905) elements
Clp0006I 0  Obj 61.955913 Dual inf 8.0687732 (106)
Clp0029I End of values pass after 106 iterations
Clp0014I Perturbing problem by 0.001% of 2.2729263 - largest nonzero change 2.9308912e-05 ( 0.0023005115%) - largest zero change 2.6218914e-05
Clp0000I Optimal - objective value 77.379355
Clp0000I Optimal - objective value 77.379355
Coin0511I After Postsolve, objective 77.379355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 77.379355
Clp0000I Optimal - objective value 77.379355
Clp0000I Optimal - objective value 77.379355
Clp0000I Optimal - objective value 77.379355
Coin0511I After Postsolve, objective 77.379355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.37935525 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 143 columns (143 integer (143 of which binary)) and 2488 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.604%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 8.58656
Cbc0038I Pass   1: suminf.    2.22605 (27) obj. -57.5672 iterations 23
Cbc0038I Pass   2: suminf.    2.22605 (27) obj. -57.5672 iterations 3
Cbc0038I Pass   3: suminf.    0.34975 (7) obj. -31.386 iterations 20
Cbc0038I Solution found of -24.7357
Cbc0038I Rounding solution of -28.0191 is better than previous of -24.7357

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -31.6405
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.22605 (27) obj. -57.5672 iterations 0
Cbc0038I Pass   5: suminf.    2.22605 (27) obj. -57.5672 iterations 2
Cbc0038I Pass   6: suminf.    0.88055 (13) obj. -31.6405 iterations 32
Cbc0038I Pass   7: suminf.    1.71602 (8) obj. -31.6405 iterations 26
Cbc0038I Pass   8: suminf.    1.53074 (8) obj. -31.8557 iterations 6
Cbc0038I Pass   9: suminf.    1.53743 (8) obj. -31.6405 iterations 15
Cbc0038I Pass  10: suminf.    1.36028 (8) obj. -31.6405 iterations 8
Cbc0038I Pass  11: suminf.    1.52093 (7) obj. -31.6405 iterations 9
Cbc0038I Pass  12: suminf.    2.21979 (14) obj. -31.6405 iterations 36
Cbc0038I Pass  13: suminf.    1.97885 (14) obj. -31.6405 iterations 19
Cbc0038I Pass  14: suminf.    1.51814 (8) obj. -31.6405 iterations 25
Cbc0038I Pass  15: suminf.    1.24734 (8) obj. -31.6405 iterations 8
Cbc0038I Pass  16: suminf.    1.41557 (8) obj. -31.6405 iterations 6
Cbc0038I Pass  17: suminf.    3.70592 (17) obj. -31.6405 iterations 40
Cbc0038I Pass  18: suminf.    3.03372 (15) obj. -31.6405 iterations 23
Cbc0038I Pass  19: suminf.    1.80284 (9) obj. -31.6405 iterations 19
Cbc0038I Pass  20: suminf.    1.80284 (9) obj. -31.6405 iterations 3
Cbc0038I Pass  21: suminf.    1.74913 (9) obj. -31.6405 iterations 7
Cbc0038I Pass  22: suminf.    1.74913 (9) obj. -31.6405 iterations 4
Cbc0038I Pass  23: suminf.    1.85743 (9) obj. -31.6405 iterations 7
Cbc0038I Pass  24: suminf.    1.85743 (9) obj. -31.6405 iterations 4
Cbc0038I Pass  25: suminf.    2.35921 (14) obj. -31.6405 iterations 23
Cbc0038I Pass  26: suminf.    1.92609 (13) obj. -32.02 iterations 9
Cbc0038I Pass  27: suminf.    2.71474 (10) obj. -31.6405 iterations 12
Cbc0038I Pass  28: suminf.    2.58598 (11) obj. -31.6405 iterations 14
Cbc0038I Pass  29: suminf.    2.51434 (13) obj. -31.6405 iterations 6
Cbc0038I Pass  30: suminf.    2.51434 (13) obj. -31.6405 iterations 0
Cbc0038I Pass  31: suminf.    2.92790 (12) obj. -31.6405 iterations 10
Cbc0038I Pass  32: suminf.    2.75581 (10) obj. -31.6405 iterations 8
Cbc0038I Pass  33: suminf.    2.36528 (10) obj. -31.6405 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 24 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -24.7357 to -29.2854 (0.08 seconds)
Cbc0038I Round again with cutoff of -38.1589
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.22605 (27) obj. -57.5672 iterations 0
Cbc0038I Pass  34: suminf.    2.22605 (27) obj. -57.5672 iterations 2
Cbc0038I Pass  35: suminf.    1.13334 (17) obj. -44.2183 iterations 10
Cbc0038I Pass  36: suminf.    1.71468 (15) obj. -38.1589 iterations 29
Cbc0038I Pass  37: suminf.    1.69399 (16) obj. -38.1589 iterations 4
Cbc0038I Pass  38: suminf.    2.19362 (14) obj. -38.1589 iterations 22
Cbc0038I Pass  39: suminf.    2.00750 (12) obj. -38.9022 iterations 5
Cbc0038I Pass  40: suminf.    1.82248 (12) obj. -38.1589 iterations 8
Cbc0038I Pass  41: suminf.    1.81562 (12) obj. -38.1589 iterations 6
Cbc0038I Pass  42: suminf.    1.82248 (12) obj. -38.1589 iterations 5
Cbc0038I Pass  43: suminf.    2.61966 (16) obj. -38.1589 iterations 32
Cbc0038I Pass  44: suminf.    2.54913 (16) obj. -38.1589 iterations 7
Cbc0038I Pass  45: suminf.    2.64864 (14) obj. -38.1589 iterations 21
Cbc0038I Pass  46: suminf.    2.43982 (14) obj. -38.1589 iterations 10
Cbc0038I Pass  47: suminf.    2.10792 (13) obj. -38.1589 iterations 13
Cbc0038I Pass  48: suminf.    1.91231 (13) obj. -38.1589 iterations 3
Cbc0038I Pass  49: suminf.    2.11320 (14) obj. -38.1589 iterations 12
Cbc0038I Pass  50: suminf.    2.08055 (14) obj. -38.1589 iterations 3
Cbc0038I Pass  51: suminf.    2.16177 (14) obj. -38.1589 iterations 14
Cbc0038I Pass  52: suminf.    2.14729 (15) obj. -38.1589 iterations 12
Cbc0038I Pass  53: suminf.    2.34415 (14) obj. -38.1589 iterations 8
Cbc0038I Pass  54: suminf.    1.93829 (12) obj. -38.1589 iterations 7
Cbc0038I Pass  55: suminf.    1.84718 (12) obj. -38.1589 iterations 4
Cbc0038I Pass  56: suminf.    2.20267 (12) obj. -38.1589 iterations 7
Cbc0038I Pass  57: suminf.    2.15443 (12) obj. -38.1589 iterations 4
Cbc0038I Pass  58: suminf.    2.24101 (11) obj. -38.1589 iterations 7
Cbc0038I Pass  59: suminf.    1.75773 (12) obj. -38.1589 iterations 4
Cbc0038I Pass  60: suminf.    2.07353 (11) obj. -38.1589 iterations 5
Cbc0038I Pass  61: suminf.    3.77985 (22) obj. -38.1589 iterations 32
Cbc0038I Pass  62: suminf.    2.65296 (18) obj. -38.1589 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 29 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -29.2854 - took 0.11 seconds
Cbc0012I Integer solution of -29.28545 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 15 rows 17 columns
Cbc0031I 67 added rows had average density of 51.880597
Cbc0013I At root node, 67 cuts changed objective from -64.232653 to -39.555893 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15105 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1444 row cuts average 137.7 elements, 0 column cuts (0 active)  in 0.249 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 690 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1400 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.176 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.585 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -29.28545 best solution, best possible -39.555893 (3.09 seconds)
Cbc0004I Integer solution of -31.048683 found after 7191 iterations and 1 nodes (3.10 seconds)
Cbc0010I After 11 nodes, 9 on tree, -31.048683 best solution, best possible -39.53117 (3.79 seconds)
Cbc0012I Integer solution of -31.36774 found by rounding after 8972 iterations and 23 nodes (4.09 seconds)
Cbc0012I Integer solution of -32.07757 found by rounding after 9327 iterations and 32 nodes (4.15 seconds)
Cbc0012I Integer solution of -32.134123 found by rounding after 9620 iterations and 39 nodes (4.21 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 4 rows 9 columns
Cbc0012I Integer solution of -32.249873 found by rounding after 9685 iterations and 43 nodes (4.23 seconds)
Cbc0004I Integer solution of -33.17712 found after 10089 iterations and 51 nodes (4.27 seconds)
Cbc0016I Integer solution of -33.36531 found by strong branching after 10909 iterations and 67 nodes (4.38 seconds)
Cbc0010I After 78 nodes, 17 on tree, -33.36531 best solution, best possible -39.53117 (4.50 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 53 rows 67 columns
Cbc0012I Integer solution of -34.24805 found by RINS after 11606 iterations and 92 nodes (4.66 seconds)
Cbc0012I Integer solution of -34.25583 found by rounding after 11854 iterations and 98 nodes (4.71 seconds)
Cbc0016I Integer solution of -34.4621 found by strong branching after 13448 iterations and 149 nodes (4.92 seconds)
Cbc0010I After 172 nodes, 7 on tree, -34.4621 best solution, best possible -39.53117 (5.20 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -34.653383 found by rounding after 15823 iterations and 218 nodes (5.53 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 4 rows 10 columns
Cbc0001I Search completed - best objective -34.65338300000001, took 16804 iterations and 312 nodes (5.70 seconds)
Cbc0032I Strong branching done 2324 times (25264 iterations), fathomed 55 nodes and fixed 90 variables
Cbc0035I Maximum depth 20, 1089 variables fixed on reduced cost
Total time (CPU seconds):       4.88   (Wallclock seconds):       5.73

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 2.51904e-05 - average 1.33991e-07, 16 fixed columns
Coin0506I Presolve 155 (-33) rows, 84 (-17) columns and 470 (-100) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 2.3492891 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 65.915826
Clp0000I Optimal - objective value 65.915826
Coin0511I After Postsolve, objective 65.915826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 65.915826
Clp0000I Optimal - objective value 65.915826
Clp0000I Optimal - objective value 65.915826
Coin0511I After Postsolve, objective 65.915826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.91582569 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 12.9054
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.25524 iterations 68
Cbc0038I Solution found of 3.25524
Cbc0038I Relaxing continuous gives 3.25524
Cbc0038I Rounding solution of -3.97381 is better than previous of 3.25524

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -3.97381 to -34.6534 (0.06 seconds)
Cbc0038I Round again with cutoff of -37.7797
Cbc0038I Pass   2: suminf.    4.82595 (16) obj. -37.7797 iterations 24
Cbc0038I Pass   3: suminf.    4.62162 (13) obj. -37.7797 iterations 7
Cbc0038I Pass   4: suminf.    3.90958 (12) obj. -37.7797 iterations 5
Cbc0038I Pass   5: suminf.    2.60682 (10) obj. -37.7797 iterations 9
Cbc0038I Pass   6: suminf.    2.26002 (7) obj. -37.7797 iterations 16
Cbc0038I Pass   7: suminf.    1.39582 (6) obj. -37.7797 iterations 5
Cbc0038I Pass   8: suminf.    2.28393 (7) obj. -37.7797 iterations 16
Cbc0038I Pass   9: suminf.    2.24549 (6) obj. -37.7797 iterations 1
Cbc0038I Pass  10: suminf.    1.59740 (6) obj. -37.7797 iterations 8
Cbc0038I Pass  11: suminf.    1.23618 (6) obj. -37.7797 iterations 1
Cbc0038I Pass  12: suminf.    2.28393 (7) obj. -37.7797 iterations 8
Cbc0038I Pass  13: suminf.    2.42605 (15) obj. -37.7797 iterations 27
Cbc0038I Pass  14: suminf.    1.86465 (9) obj. -37.7797 iterations 16
Cbc0038I Pass  15: suminf.    2.06915 (6) obj. -37.7797 iterations 18
Cbc0038I Pass  16: suminf.    1.43017 (6) obj. -37.7797 iterations 5
Cbc0038I Pass  17: suminf.    1.22994 (6) obj. -37.7797 iterations 2
Cbc0038I Pass  18: suminf.    2.33612 (6) obj. -37.7797 iterations 10
Cbc0038I Pass  19: suminf.    2.27087 (6) obj. -37.7797 iterations 2
Cbc0038I Pass  20: suminf.    1.78260 (9) obj. -37.7797 iterations 6
Cbc0038I Pass  21: suminf.    3.30341 (9) obj. -37.7797 iterations 13
Cbc0038I Pass  22: suminf.    1.50995 (6) obj. -37.7797 iterations 9
Cbc0038I Pass  23: suminf.    2.06066 (7) obj. -37.7797 iterations 13
Cbc0038I Pass  24: suminf.    1.91738 (7) obj. -37.7797 iterations 5
Cbc0038I Pass  25: suminf.    2.17029 (7) obj. -37.7797 iterations 8
Cbc0038I Pass  26: suminf.    5.39107 (21) obj. -37.7797 iterations 31
Cbc0038I Pass  27: suminf.    3.16183 (17) obj. -37.7797 iterations 12
Cbc0038I Pass  28: suminf.    2.04845 (7) obj. -37.7797 iterations 40
Cbc0038I Pass  29: suminf.    1.99570 (7) obj. -37.7797 iterations 2
Cbc0038I Pass  30: suminf.    1.94165 (7) obj. -37.7797 iterations 1
Cbc0038I Pass  31: suminf.    3.02615 (9) obj. -37.7797 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 122 rows 67 columns - 2 fixed gives 107, 65 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 107 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -34.6534 - took 0.12 seconds
Cbc0012I Integer solution of -34.653383 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 91 rows 51 columns
Cbc0031I 41 added rows had average density of 63.073171
Cbc0013I At root node, 41 cuts changed objective from -65.915826 to -56.653871 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19776 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2614 row cuts average 100.5 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 179 row cuts average 100.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -34.653383 best solution, best possible -56.653871 (1.83 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 104 rows 59 columns
Cbc0038I Full problem 188 rows 101 columns, reduced to 30 rows 25 columns
Cbc0010I After 166 nodes, 15 on tree, -34.653383 best solution, best possible -56.653871 (2.53 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 4 rows 7 columns
Cbc0001I Search completed - best objective -34.65338300000001, took 16628 iterations and 222 nodes (2.60 seconds)
Cbc0032I Strong branching done 1686 times (30308 iterations), fathomed 28 nodes and fixed 67 variables
Cbc0035I Maximum depth 34, 874 variables fixed on reduced cost
Total time (CPU seconds):       2.53   (Wallclock seconds):       2.62

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-74) rows, 143 (-60) columns and 2484 (-3170) elements
Clp1000I sum of infeasibilities 1.08577e-07 - average 8.28833e-10, 37 fixed columns
Coin0506I Presolve 95 (-36) rows, 106 (-37) columns and 1579 (-905) elements
Clp0006I 0  Obj 61.955913 Dual inf 8.0687732 (106)
Clp0029I End of values pass after 106 iterations
Clp0014I Perturbing problem by 0.001% of 2.2729263 - largest nonzero change 2.9308912e-05 ( 0.0023005115%) - largest zero change 2.6218914e-05
Clp0000I Optimal - objective value 77.379355
Clp0000I Optimal - objective value 77.379355
Coin0511I After Postsolve, objective 77.379355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 77.379355
Clp0000I Optimal - objective value 77.379355
Clp0000I Optimal - objective value 77.379355
Clp0000I Optimal - objective value 77.379355
Coin0511I After Postsolve, objective 77.379355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.37935525 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 143 columns (143 integer (143 of which binary)) and 2488 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.604%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 8.58656
Cbc0038I Pass   1: suminf.    2.22605 (27) obj. -57.5672 iterations 23
Cbc0038I Pass   2: suminf.    2.22605 (27) obj. -57.5672 iterations 3
Cbc0038I Pass   3: suminf.    0.34975 (7) obj. -31.386 iterations 20
Cbc0038I Solution found of -24.7357
Cbc0038I Rounding solution of -28.0191 is better than previous of -24.7357

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -31.6405
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.22605 (27) obj. -57.5672 iterations 0
Cbc0038I Pass   5: suminf.    2.22605 (27) obj. -57.5672 iterations 2
Cbc0038I Pass   6: suminf.    0.88055 (13) obj. -31.6405 iterations 32
Cbc0038I Pass   7: suminf.    1.71602 (8) obj. -31.6405 iterations 26
Cbc0038I Pass   8: suminf.    1.53074 (8) obj. -31.8557 iterations 6
Cbc0038I Pass   9: suminf.    1.53743 (8) obj. -31.6405 iterations 15
Cbc0038I Pass  10: suminf.    1.36028 (8) obj. -31.6405 iterations 8
Cbc0038I Pass  11: suminf.    1.52093 (7) obj. -31.6405 iterations 9
Cbc0038I Pass  12: suminf.    2.21979 (14) obj. -31.6405 iterations 36
Cbc0038I Pass  13: suminf.    1.97885 (14) obj. -31.6405 iterations 19
Cbc0038I Pass  14: suminf.    1.51814 (8) obj. -31.6405 iterations 25
Cbc0038I Pass  15: suminf.    1.24734 (8) obj. -31.6405 iterations 8
Cbc0038I Pass  16: suminf.    1.41557 (8) obj. -31.6405 iterations 6
Cbc0038I Pass  17: suminf.    3.70592 (17) obj. -31.6405 iterations 40
Cbc0038I Pass  18: suminf.    3.03372 (15) obj. -31.6405 iterations 23
Cbc0038I Pass  19: suminf.    1.80284 (9) obj. -31.6405 iterations 19
Cbc0038I Pass  20: suminf.    1.80284 (9) obj. -31.6405 iterations 3
Cbc0038I Pass  21: suminf.    1.74913 (9) obj. -31.6405 iterations 7
Cbc0038I Pass  22: suminf.    1.74913 (9) obj. -31.6405 iterations 4
Cbc0038I Pass  23: suminf.    1.85743 (9) obj. -31.6405 iterations 7
Cbc0038I Pass  24: suminf.    1.85743 (9) obj. -31.6405 iterations 4
Cbc0038I Pass  25: suminf.    2.35921 (14) obj. -31.6405 iterations 23
Cbc0038I Pass  26: suminf.    1.92609 (13) obj. -32.02 iterations 9
Cbc0038I Pass  27: suminf.    2.71474 (10) obj. -31.6405 iterations 12
Cbc0038I Pass  28: suminf.    2.58598 (11) obj. -31.6405 iterations 14
Cbc0038I Pass  29: suminf.    2.51434 (13) obj. -31.6405 iterations 6
Cbc0038I Pass  30: suminf.    2.51434 (13) obj. -31.6405 iterations 0
Cbc0038I Pass  31: suminf.    2.92790 (12) obj. -31.6405 iterations 10
Cbc0038I Pass  32: suminf.    2.75581 (10) obj. -31.6405 iterations 8
Cbc0038I Pass  33: suminf.    2.36528 (10) obj. -31.6405 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 24 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -24.7357 to -29.2854 (0.08 seconds)
Cbc0038I Round again with cutoff of -38.1589
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.22605 (27) obj. -57.5672 iterations 0
Cbc0038I Pass  34: suminf.    2.22605 (27) obj. -57.5672 iterations 2
Cbc0038I Pass  35: suminf.    1.13334 (17) obj. -44.2183 iterations 10
Cbc0038I Pass  36: suminf.    1.71468 (15) obj. -38.1589 iterations 29
Cbc0038I Pass  37: suminf.    1.69399 (16) obj. -38.1589 iterations 4
Cbc0038I Pass  38: suminf.    2.19362 (14) obj. -38.1589 iterations 22
Cbc0038I Pass  39: suminf.    2.00750 (12) obj. -38.9022 iterations 5
Cbc0038I Pass  40: suminf.    1.82248 (12) obj. -38.1589 iterations 8
Cbc0038I Pass  41: suminf.    1.81562 (12) obj. -38.1589 iterations 6
Cbc0038I Pass  42: suminf.    1.82248 (12) obj. -38.1589 iterations 5
Cbc0038I Pass  43: suminf.    2.61966 (16) obj. -38.1589 iterations 32
Cbc0038I Pass  44: suminf.    2.54913 (16) obj. -38.1589 iterations 7
Cbc0038I Pass  45: suminf.    2.64864 (14) obj. -38.1589 iterations 21
Cbc0038I Pass  46: suminf.    2.43982 (14) obj. -38.1589 iterations 10
Cbc0038I Pass  47: suminf.    2.10792 (13) obj. -38.1589 iterations 13
Cbc0038I Pass  48: suminf.    1.91231 (13) obj. -38.1589 iterations 3
Cbc0038I Pass  49: suminf.    2.11320 (14) obj. -38.1589 iterations 12
Cbc0038I Pass  50: suminf.    2.08055 (14) obj. -38.1589 iterations 3
Cbc0038I Pass  51: suminf.    2.16177 (14) obj. -38.1589 iterations 14
Cbc0038I Pass  52: suminf.    2.14729 (15) obj. -38.1589 iterations 12
Cbc0038I Pass  53: suminf.    2.34415 (14) obj. -38.1589 iterations 8
Cbc0038I Pass  54: suminf.    1.93829 (12) obj. -38.1589 iterations 7
Cbc0038I Pass  55: suminf.    1.84718 (12) obj. -38.1589 iterations 4
Cbc0038I Pass  56: suminf.    2.20267 (12) obj. -38.1589 iterations 7
Cbc0038I Pass  57: suminf.    2.15443 (12) obj. -38.1589 iterations 4
Cbc0038I Pass  58: suminf.    2.24101 (11) obj. -38.1589 iterations 7
Cbc0038I Pass  59: suminf.    1.75773 (12) obj. -38.1589 iterations 4
Cbc0038I Pass  60: suminf.    2.07353 (11) obj. -38.1589 iterations 5
Cbc0038I Pass  61: suminf.    3.77985 (22) obj. -38.1589 iterations 32
Cbc0038I Pass  62: suminf.    2.65296 (18) obj. -38.1589 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 143 columns, reduced to 29 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -29.2854 - took 0.11 seconds
Cbc0012I Integer solution of -29.28545 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 15 rows 17 columns
Cbc0031I 67 added rows had average density of 51.880597
Cbc0013I At root node, 67 cuts changed objective from -64.232653 to -39.555893 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15105 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1444 row cuts average 137.7 elements, 0 column cuts (0 active)  in 0.223 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 690 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1400 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.160 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 32 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.525 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -29.28545 best solution, best possible -39.555893 (2.70 seconds)
Cbc0004I Integer solution of -31.048683 found after 7191 iterations and 1 nodes (2.71 seconds)
Cbc0010I After 10 nodes, 8 on tree, -31.048683 best solution, best possible -39.53117 (3.41 seconds)
Cbc0012I Integer solution of -31.36774 found by rounding after 8972 iterations and 23 nodes (3.75 seconds)
Cbc0012I Integer solution of -32.07757 found by rounding after 9327 iterations and 32 nodes (3.81 seconds)
Cbc0012I Integer solution of -32.134123 found by rounding after 9620 iterations and 39 nodes (3.86 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 4 rows 9 columns
Cbc0012I Integer solution of -32.249873 found by rounding after 9685 iterations and 43 nodes (3.88 seconds)
Cbc0004I Integer solution of -33.17712 found after 10089 iterations and 51 nodes (3.92 seconds)
Cbc0016I Integer solution of -33.36531 found by strong branching after 10909 iterations and 67 nodes (4.03 seconds)
Cbc0010I After 77 nodes, 16 on tree, -33.36531 best solution, best possible -39.53117 (4.12 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 53 rows 67 columns
Cbc0012I Integer solution of -34.24805 found by RINS after 11606 iterations and 92 nodes (4.29 seconds)
Cbc0012I Integer solution of -34.25583 found by rounding after 11854 iterations and 98 nodes (4.34 seconds)
Cbc0016I Integer solution of -34.4621 found by strong branching after 13448 iterations and 149 nodes (4.53 seconds)
Cbc0010I After 182 nodes, 5 on tree, -34.4621 best solution, best possible -39.53117 (4.87 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 6 rows 8 columns
Cbc0012I Integer solution of -34.653383 found by rounding after 15823 iterations and 218 nodes (5.12 seconds)
Cbc0038I Full problem 131 rows 143 columns, reduced to 4 rows 10 columns
Cbc0001I Search completed - best objective -34.65338300000001, took 16804 iterations and 312 nodes (5.26 seconds)
Cbc0032I Strong branching done 2324 times (25264 iterations), fathomed 55 nodes and fixed 90 variables
Cbc0035I Maximum depth 20, 1089 variables fixed on reduced cost
Total time (CPU seconds):       4.63   (Wallclock seconds):       5.29

