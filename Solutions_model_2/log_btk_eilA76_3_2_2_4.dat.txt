Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.79899e-05 - average 3.60826e-07, 17 fixed columns
Coin0506I Presolve 100 (-33) rows, 58 (-17) columns and 309 (-99) elements
Clp0029I End of values pass after 58 iterations
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Coin0511I After Postsolve, objective 80.72595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Coin0511I After Postsolve, objective 80.72595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.72594983 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.42718
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.997 iterations 52
Cbc0038I Solution found of -4.997
Cbc0038I Relaxing continuous gives -4.997
Cbc0038I Rounding solution of -42.3913 is better than previous of -4.997

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -42.3913 to -48.0109 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.2825
Cbc0038I Pass   2: suminf.    2.15249 (8) obj. -51.2825 iterations 13
Cbc0038I Pass   3: suminf.    1.74236 (6) obj. -51.2825 iterations 3
Cbc0038I Pass   4: suminf.    1.51023 (5) obj. -51.2825 iterations 14
Cbc0038I Pass   5: suminf.    1.51023 (5) obj. -51.2825 iterations 1
Cbc0038I Pass   6: suminf.    1.56880 (5) obj. -51.2825 iterations 13
Cbc0038I Pass   7: suminf.    1.15874 (5) obj. -51.2825 iterations 1
Cbc0038I Pass   8: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass   9: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  10: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  11: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  12: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  13: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I Pass  14: suminf.    0.94104 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  15: suminf.    1.26617 (5) obj. -51.2825 iterations 15
Cbc0038I Pass  16: suminf.    1.09798 (6) obj. -51.2825 iterations 8
Cbc0038I Pass  17: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass  18: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  19: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  20: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  21: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  22: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I Pass  23: suminf.    0.94104 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  24: suminf.    1.26617 (5) obj. -51.2825 iterations 15
Cbc0038I Pass  25: suminf.    1.09798 (6) obj. -51.2825 iterations 8
Cbc0038I Pass  26: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass  27: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  28: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  29: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  30: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  31: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -48.0109 to -48.8012 (0.07 seconds)
Cbc0038I Round again with cutoff of -57.1712
Cbc0038I Pass  31: suminf.    2.08507 (9) obj. -57.1712 iterations 1
Cbc0038I Pass  32: suminf.    1.42711 (4) obj. -57.1712 iterations 12
Cbc0038I Pass  33: suminf.    1.79082 (6) obj. -57.1712 iterations 24
Cbc0038I Pass  34: suminf.    1.68000 (9) obj. -57.1712 iterations 16
Cbc0038I Pass  35: suminf.    1.62458 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  36: suminf.    1.70495 (7) obj. -57.1712 iterations 6
Cbc0038I Pass  37: suminf.    1.70864 (6) obj. -57.1712 iterations 3
Cbc0038I Pass  38: suminf.    2.93972 (7) obj. -57.1712 iterations 16
Cbc0038I Pass  39: suminf.    2.50919 (7) obj. -57.1712 iterations 1
Cbc0038I Pass  40: suminf.    1.71807 (9) obj. -57.1712 iterations 3
Cbc0038I Pass  41: suminf.    1.99412 (5) obj. -57.1712 iterations 32
Cbc0038I Pass  42: suminf.    1.36731 (5) obj. -57.1712 iterations 14
Cbc0038I Pass  43: suminf.    1.77513 (6) obj. -57.1712 iterations 12
Cbc0038I Pass  44: suminf.    1.60991 (6) obj. -57.1712 iterations 1
Cbc0038I Pass  45: suminf.    2.09700 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  46: suminf.    1.66842 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  47: suminf.    1.77513 (6) obj. -57.1712 iterations 7
Cbc0038I Pass  48: suminf.    3.88676 (12) obj. -57.1712 iterations 22
Cbc0038I Pass  49: suminf.    1.54764 (10) obj. -57.1712 iterations 25
Cbc0038I Pass  50: suminf.    1.54764 (10) obj. -57.1712 iterations 0
Cbc0038I Pass  51: suminf.    2.05564 (6) obj. -57.1712 iterations 16
Cbc0038I Pass  52: suminf.    2.00438 (9) obj. -57.1712 iterations 7
Cbc0038I Pass  53: suminf.    1.60551 (8) obj. -57.1712 iterations 11
Cbc0038I Pass  54: suminf.    1.49638 (7) obj. -57.1712 iterations 6
Cbc0038I Pass  55: suminf.    2.09700 (6) obj. -57.1712 iterations 6
Cbc0038I Pass  56: suminf.    1.66842 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  57: suminf.    1.77513 (6) obj. -57.1712 iterations 7
Cbc0038I Pass  58: suminf.    1.60991 (6) obj. -57.1712 iterations 3
Cbc0038I Pass  59: suminf.    4.00303 (15) obj. -57.1712 iterations 31
Cbc0038I Pass  60: suminf.    3.00662 (12) obj. -57.1712 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 86 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -48.8012 - took 0.09 seconds
Cbc0012I Integer solution of -48.80117 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 64 rows 39 columns
Cbc0031I 12 added rows had average density of 50.916667
Cbc0013I At root node, 12 cuts changed objective from -80.72595 to -70.906882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9123 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1522 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.80117 best solution, best possible -70.906882 (0.70 seconds)
Cbc0012I Integer solution of -48.94435 found by DiveCoefficient after 7293 iterations and 29 nodes (0.90 seconds)
Cbc0012I Integer solution of -49.11299 found by rounding after 7368 iterations and 31 nodes (0.90 seconds)
Cbc0004I Integer solution of -49.16177 found after 7402 iterations and 32 nodes (0.90 seconds)
Cbc0016I Integer solution of -49.77038 found by strong branching after 8148 iterations and 64 nodes (0.96 seconds)
Cbc0001I Search completed - best objective -49.77038, took 8931 iterations and 92 nodes (0.99 seconds)
Cbc0032I Strong branching done 838 times (12086 iterations), fathomed 10 nodes and fixed 29 variables
Cbc0035I Maximum depth 25, 259 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.00

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 118 (-34) columns and 2025 (-1278) elements
Clp1000I sum of infeasibilities 4.44343e-08 - average 4.31401e-10, 76 fixed columns
Coin0506I Presolve 29 (-74) rows, 42 (-76) columns and 137 (-1888) elements
Clp0006I 0  Obj 11.909272 Dual inf 5.4515264 (42)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.5274588 - largest nonzero change 1.5305529e-05 ( 0.00096990836%) - largest zero change 2.9588276e-05
Clp0000I Optimal - objective value 12.622177
Clp0000I Optimal - objective value 12.622177
Coin0511I After Postsolve, objective 12.622177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 12.622177 Dual inf 86.900357 (44)
Clp0014I Perturbing problem by 0.001% of 1.6676167 - largest nonzero change 1.7085143e-05 ( 0.0017085143%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 91.729037
Clp0000I Optimal - objective value 91.729037
Clp0000I Optimal - objective value 91.729037
Coin0511I After Postsolve, objective 91.729037, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.72903724 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 118 columns (118 integer (118 of which binary)) and 2033 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.780%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 3.44687
Cbc0038I Pass   1: suminf.    2.80471 (30) obj. -76.3366 iterations 7
Cbc0038I Pass   2: suminf.    2.29951 (28) obj. -74.639 iterations 1
Cbc0038I Pass   3: suminf.    1.15946 (18) obj. -62.2411 iterations 10
Cbc0038I Solution found of -40.7706
Cbc0038I Rounding solution of -42.4939 is better than previous of -40.7706

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -46.0937
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.80471 (30) obj. -76.3366 iterations 0
Cbc0038I Pass   5: suminf.    2.29951 (28) obj. -74.639 iterations 4
Cbc0038I Pass   6: suminf.    0.63668 (4) obj. -46.0937 iterations 32
Cbc0038I Pass   7: suminf.    0.63668 (4) obj. -46.0937 iterations 0
Cbc0038I Pass   8: suminf.    1.41677 (4) obj. -46.0937 iterations 9
Cbc0038I Pass   9: suminf.    0.63668 (4) obj. -46.0937 iterations 5
Cbc0038I Pass  10: suminf.    1.61946 (15) obj. -46.0937 iterations 27
Cbc0038I Pass  11: suminf.    1.06493 (9) obj. -46.0937 iterations 14
Cbc0038I Pass  12: suminf.    0.97410 (9) obj. -46.0937 iterations 4
Cbc0038I Pass  13: suminf.    1.45984 (7) obj. -46.0937 iterations 17
Cbc0038I Pass  14: suminf.    1.45984 (7) obj. -46.0937 iterations 0
Cbc0038I Pass  15: suminf.    2.79942 (11) obj. -46.0937 iterations 17
Cbc0038I Pass  16: suminf.    0.70369 (7) obj. -46.0937 iterations 10
Cbc0038I Pass  17: suminf.    0.67146 (7) obj. -46.0937 iterations 1
Cbc0038I Pass  18: suminf.    1.28239 (6) obj. -46.0937 iterations 10
Cbc0038I Pass  19: suminf.    1.08139 (6) obj. -46.0937 iterations 4
Cbc0038I Pass  20: suminf.    1.28239 (6) obj. -46.0937 iterations 13
Cbc0038I Pass  21: suminf.    1.71016 (14) obj. -46.0937 iterations 29
Cbc0038I Pass  22: suminf.    1.71016 (14) obj. -46.0937 iterations 4
Cbc0038I Pass  23: suminf.    0.88668 (6) obj. -46.0937 iterations 35
Cbc0038I Pass  24: suminf.    0.68319 (6) obj. -46.0937 iterations 14
Cbc0038I Pass  25: suminf.    0.81292 (6) obj. -46.0937 iterations 9
Cbc0038I Pass  26: suminf.    1.59485 (11) obj. -46.0937 iterations 17
Cbc0038I Pass  27: suminf.    1.16600 (9) obj. -46.0937 iterations 14
Cbc0038I Pass  28: suminf.    1.26194 (5) obj. -46.0937 iterations 13
Cbc0038I Pass  29: suminf.    0.41942 (6) obj. -46.0937 iterations 18
Cbc0038I Pass  30: suminf.    0.96800 (6) obj. -46.0937 iterations 8
Cbc0038I Pass  31: suminf.    0.96800 (6) obj. -46.0937 iterations 6
Cbc0038I Pass  32: suminf.    1.09775 (6) obj. -46.0937 iterations 15
Cbc0038I Pass  33: suminf.    1.09775 (6) obj. -46.0937 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 23 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -40.7706 to -48.0109 (0.06 seconds)
Cbc0038I Round again with cutoff of -54.1069
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.80471 (30) obj. -76.3366 iterations 0
Cbc0038I Pass  34: suminf.    2.29951 (28) obj. -74.639 iterations 4
Cbc0038I Pass  35: suminf.    1.15946 (18) obj. -62.2411 iterations 10
Cbc0038I Pass  36: suminf.    1.39836 (10) obj. -54.1069 iterations 18
Cbc0038I Pass  37: suminf.    1.25784 (11) obj. -54.1069 iterations 4
Cbc0038I Pass  38: suminf.    1.77250 (9) obj. -54.1069 iterations 25
Cbc0038I Pass  39: suminf.    1.77250 (9) obj. -54.1069 iterations 3
Cbc0038I Pass  40: suminf.    1.76735 (9) obj. -54.1069 iterations 8
Cbc0038I Pass  41: suminf.    1.76735 (9) obj. -54.1069 iterations 6
Cbc0038I Pass  42: suminf.    1.77250 (9) obj. -54.1069 iterations 8
Cbc0038I Pass  43: suminf.    2.33251 (15) obj. -54.1069 iterations 27
Cbc0038I Pass  44: suminf.    1.88410 (13) obj. -54.1069 iterations 18
Cbc0038I Pass  45: suminf.    1.79578 (10) obj. -54.1069 iterations 15
Cbc0038I Pass  46: suminf.    1.30410 (9) obj. -54.1069 iterations 6
Cbc0038I Pass  47: suminf.    1.30410 (9) obj. -54.1069 iterations 0
Cbc0038I Pass  48: suminf.    1.65690 (9) obj. -54.1069 iterations 11
Cbc0038I Pass  49: suminf.    1.50672 (10) obj. -54.1069 iterations 7
Cbc0038I Pass  50: suminf.    1.43100 (10) obj. -54.1069 iterations 11
Cbc0038I Pass  51: suminf.    1.43100 (10) obj. -54.1069 iterations 7
Cbc0038I Pass  52: suminf.    1.50672 (10) obj. -54.1069 iterations 9
Cbc0038I Pass  53: suminf.    1.86960 (12) obj. -54.1069 iterations 13
Cbc0038I Pass  54: suminf.    1.78702 (13) obj. -54.1069 iterations 8
Cbc0038I Pass  55: suminf.    1.77578 (10) obj. -54.1069 iterations 23
Cbc0038I Pass  56: suminf.    1.37917 (9) obj. -54.1069 iterations 10
Cbc0038I Pass  57: suminf.    1.37917 (9) obj. -54.1069 iterations 0
Cbc0038I Pass  58: suminf.    1.60037 (9) obj. -54.1069 iterations 11
Cbc0038I Pass  59: suminf.    2.11302 (15) obj. -54.1069 iterations 20
Cbc0038I Pass  60: suminf.    1.58424 (14) obj. -54.1069 iterations 6
Cbc0038I Pass  61: suminf.    1.73131 (12) obj. -54.1069 iterations 14
Cbc0038I Pass  62: suminf.    1.54065 (13) obj. -54.1069 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -48.0109 - took 0.06 seconds
Cbc0012I Integer solution of -48.01092 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 5 rows 5 columns
Cbc0031I 41 added rows had average density of 31.804878
Cbc0013I At root node, 41 cuts changed objective from -78.490376 to -57.061518 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9033 row cuts average 9.7 elements, 1 column cuts (24 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1604 row cuts average 106.2 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 711 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 912 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 66.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.661 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.01092 best solution, best possible -57.061518 (2.33 seconds)
Cbc0012I Integer solution of -48.12853 found by rounding after 3825 iterations and 1 nodes (2.33 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 12 rows 18 columns
Cbc0012I Integer solution of -48.97361 found by RINS after 5503 iterations and 42 nodes (2.82 seconds)
Cbc0012I Integer solution of -49.77038 found by rounding after 5647 iterations and 47 nodes (2.85 seconds)
Cbc0001I Search completed - best objective -49.77038, took 5981 iterations and 60 nodes (2.87 seconds)
Cbc0032I Strong branching done 762 times (8804 iterations), fathomed 6 nodes and fixed 12 variables
Cbc0035I Maximum depth 18, 203 variables fixed on reduced cost
Total time (CPU seconds):       2.10   (Wallclock seconds):       2.89

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.79899e-05 - average 3.60826e-07, 17 fixed columns
Coin0506I Presolve 100 (-33) rows, 58 (-17) columns and 309 (-99) elements
Clp0029I End of values pass after 58 iterations
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Coin0511I After Postsolve, objective 80.72595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Clp0000I Optimal - objective value 80.72595
Coin0511I After Postsolve, objective 80.72595, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 80.72594983 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.42718
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.997 iterations 52
Cbc0038I Solution found of -4.997
Cbc0038I Relaxing continuous gives -4.997
Cbc0038I Rounding solution of -42.3913 is better than previous of -4.997

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 62 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -42.3913 to -48.0109 (0.04 seconds)
Cbc0038I Round again with cutoff of -51.2825
Cbc0038I Pass   2: suminf.    2.15249 (8) obj. -51.2825 iterations 13
Cbc0038I Pass   3: suminf.    1.74236 (6) obj. -51.2825 iterations 3
Cbc0038I Pass   4: suminf.    1.51023 (5) obj. -51.2825 iterations 14
Cbc0038I Pass   5: suminf.    1.51023 (5) obj. -51.2825 iterations 1
Cbc0038I Pass   6: suminf.    1.56880 (5) obj. -51.2825 iterations 13
Cbc0038I Pass   7: suminf.    1.15874 (5) obj. -51.2825 iterations 1
Cbc0038I Pass   8: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass   9: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  10: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  11: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  12: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  13: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I Pass  14: suminf.    0.94104 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  15: suminf.    1.26617 (5) obj. -51.2825 iterations 15
Cbc0038I Pass  16: suminf.    1.09798 (6) obj. -51.2825 iterations 8
Cbc0038I Pass  17: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass  18: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  19: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  20: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  21: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  22: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I Pass  23: suminf.    0.94104 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  24: suminf.    1.26617 (5) obj. -51.2825 iterations 15
Cbc0038I Pass  25: suminf.    1.09798 (6) obj. -51.2825 iterations 8
Cbc0038I Pass  26: suminf.    1.09495 (5) obj. -51.2825 iterations 2
Cbc0038I Pass  27: suminf.    1.35738 (4) obj. -51.2825 iterations 8
Cbc0038I Pass  28: suminf.    1.35738 (4) obj. -51.2825 iterations 5
Cbc0038I Pass  29: suminf.    1.76596 (5) obj. -51.2825 iterations 17
Cbc0038I Pass  30: suminf.    1.76596 (5) obj. -51.2825 iterations 0
Cbc0038I Pass  31: suminf.    0.97178 (4) obj. -51.2825 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 68 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -48.0109 to -48.8012 (0.07 seconds)
Cbc0038I Round again with cutoff of -57.1712
Cbc0038I Pass  31: suminf.    2.08507 (9) obj. -57.1712 iterations 1
Cbc0038I Pass  32: suminf.    1.42711 (4) obj. -57.1712 iterations 12
Cbc0038I Pass  33: suminf.    1.79082 (6) obj. -57.1712 iterations 24
Cbc0038I Pass  34: suminf.    1.68000 (9) obj. -57.1712 iterations 16
Cbc0038I Pass  35: suminf.    1.62458 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  36: suminf.    1.70495 (7) obj. -57.1712 iterations 6
Cbc0038I Pass  37: suminf.    1.70864 (6) obj. -57.1712 iterations 3
Cbc0038I Pass  38: suminf.    2.93972 (7) obj. -57.1712 iterations 16
Cbc0038I Pass  39: suminf.    2.50919 (7) obj. -57.1712 iterations 1
Cbc0038I Pass  40: suminf.    1.71807 (9) obj. -57.1712 iterations 3
Cbc0038I Pass  41: suminf.    1.99412 (5) obj. -57.1712 iterations 32
Cbc0038I Pass  42: suminf.    1.36731 (5) obj. -57.1712 iterations 14
Cbc0038I Pass  43: suminf.    1.77513 (6) obj. -57.1712 iterations 12
Cbc0038I Pass  44: suminf.    1.60991 (6) obj. -57.1712 iterations 1
Cbc0038I Pass  45: suminf.    2.09700 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  46: suminf.    1.66842 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  47: suminf.    1.77513 (6) obj. -57.1712 iterations 7
Cbc0038I Pass  48: suminf.    3.88676 (12) obj. -57.1712 iterations 22
Cbc0038I Pass  49: suminf.    1.54764 (10) obj. -57.1712 iterations 25
Cbc0038I Pass  50: suminf.    1.54764 (10) obj. -57.1712 iterations 0
Cbc0038I Pass  51: suminf.    2.05564 (6) obj. -57.1712 iterations 16
Cbc0038I Pass  52: suminf.    2.00438 (9) obj. -57.1712 iterations 7
Cbc0038I Pass  53: suminf.    1.60551 (8) obj. -57.1712 iterations 11
Cbc0038I Pass  54: suminf.    1.49638 (7) obj. -57.1712 iterations 6
Cbc0038I Pass  55: suminf.    2.09700 (6) obj. -57.1712 iterations 6
Cbc0038I Pass  56: suminf.    1.66842 (6) obj. -57.1712 iterations 5
Cbc0038I Pass  57: suminf.    1.77513 (6) obj. -57.1712 iterations 7
Cbc0038I Pass  58: suminf.    1.60991 (6) obj. -57.1712 iterations 3
Cbc0038I Pass  59: suminf.    4.00303 (15) obj. -57.1712 iterations 31
Cbc0038I Pass  60: suminf.    3.00662 (12) obj. -57.1712 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 86 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -48.8012 - took 0.09 seconds
Cbc0012I Integer solution of -48.80117 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 64 rows 39 columns
Cbc0031I 12 added rows had average density of 50.916667
Cbc0013I At root node, 12 cuts changed objective from -80.72595 to -70.906882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9123 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1522 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -48.80117 best solution, best possible -70.906882 (0.71 seconds)
Cbc0012I Integer solution of -48.94435 found by DiveCoefficient after 7293 iterations and 29 nodes (0.90 seconds)
Cbc0012I Integer solution of -49.11299 found by rounding after 7368 iterations and 31 nodes (0.90 seconds)
Cbc0004I Integer solution of -49.16177 found after 7402 iterations and 32 nodes (0.90 seconds)
Cbc0016I Integer solution of -49.77038 found by strong branching after 8148 iterations and 64 nodes (0.96 seconds)
Cbc0001I Search completed - best objective -49.77038, took 8931 iterations and 92 nodes (0.99 seconds)
Cbc0032I Strong branching done 838 times (12086 iterations), fathomed 10 nodes and fixed 29 variables
Cbc0035I Maximum depth 25, 259 variables fixed on reduced cost
Total time (CPU seconds):       0.97   (Wallclock seconds):       1.00

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 118 (-35) columns and 2025 (-1279) elements
Clp1000I sum of infeasibilities 4.44343e-08 - average 4.31401e-10, 76 fixed columns
Coin0506I Presolve 29 (-74) rows, 42 (-76) columns and 137 (-1888) elements
Clp0006I 0  Obj 11.909272 Dual inf 5.4515264 (42)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 1.5274588 - largest nonzero change 1.5305529e-05 ( 0.00096990836%) - largest zero change 2.9588276e-05
Clp0000I Optimal - objective value 12.622177
Clp0000I Optimal - objective value 12.622177
Coin0511I After Postsolve, objective 12.622177, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 12.622177 Dual inf 86.900357 (44)
Clp0014I Perturbing problem by 0.001% of 1.6676167 - largest nonzero change 1.7085143e-05 ( 0.0017085143%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 91.729037
Clp0000I Optimal - objective value 91.729037
Clp0000I Optimal - objective value 91.729037
Coin0511I After Postsolve, objective 91.729037, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 91.72903724 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 118 columns (118 integer (118 of which binary)) and 2033 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.780%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 3.44687
Cbc0038I Pass   1: suminf.    2.80471 (30) obj. -76.3366 iterations 7
Cbc0038I Pass   2: suminf.    2.29951 (28) obj. -74.639 iterations 1
Cbc0038I Pass   3: suminf.    1.15946 (18) obj. -62.2411 iterations 10
Cbc0038I Solution found of -40.7706
Cbc0038I Rounding solution of -42.4939 is better than previous of -40.7706

Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -46.0937
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.80471 (30) obj. -76.3366 iterations 0
Cbc0038I Pass   5: suminf.    2.29951 (28) obj. -74.639 iterations 4
Cbc0038I Pass   6: suminf.    0.63668 (4) obj. -46.0937 iterations 32
Cbc0038I Pass   7: suminf.    0.63668 (4) obj. -46.0937 iterations 0
Cbc0038I Pass   8: suminf.    1.41677 (4) obj. -46.0937 iterations 9
Cbc0038I Pass   9: suminf.    0.63668 (4) obj. -46.0937 iterations 5
Cbc0038I Pass  10: suminf.    1.61946 (15) obj. -46.0937 iterations 27
Cbc0038I Pass  11: suminf.    1.06493 (9) obj. -46.0937 iterations 14
Cbc0038I Pass  12: suminf.    0.97410 (9) obj. -46.0937 iterations 4
Cbc0038I Pass  13: suminf.    1.45984 (7) obj. -46.0937 iterations 17
Cbc0038I Pass  14: suminf.    1.45984 (7) obj. -46.0937 iterations 0
Cbc0038I Pass  15: suminf.    2.79942 (11) obj. -46.0937 iterations 17
Cbc0038I Pass  16: suminf.    0.70369 (7) obj. -46.0937 iterations 10
Cbc0038I Pass  17: suminf.    0.67146 (7) obj. -46.0937 iterations 1
Cbc0038I Pass  18: suminf.    1.28239 (6) obj. -46.0937 iterations 10
Cbc0038I Pass  19: suminf.    1.08139 (6) obj. -46.0937 iterations 4
Cbc0038I Pass  20: suminf.    1.28239 (6) obj. -46.0937 iterations 13
Cbc0038I Pass  21: suminf.    1.71016 (14) obj. -46.0937 iterations 29
Cbc0038I Pass  22: suminf.    1.71016 (14) obj. -46.0937 iterations 4
Cbc0038I Pass  23: suminf.    0.88668 (6) obj. -46.0937 iterations 35
Cbc0038I Pass  24: suminf.    0.68319 (6) obj. -46.0937 iterations 14
Cbc0038I Pass  25: suminf.    0.81292 (6) obj. -46.0937 iterations 9
Cbc0038I Pass  26: suminf.    1.59485 (11) obj. -46.0937 iterations 17
Cbc0038I Pass  27: suminf.    1.16600 (9) obj. -46.0937 iterations 14
Cbc0038I Pass  28: suminf.    1.26194 (5) obj. -46.0937 iterations 13
Cbc0038I Pass  29: suminf.    0.41942 (6) obj. -46.0937 iterations 18
Cbc0038I Pass  30: suminf.    0.96800 (6) obj. -46.0937 iterations 8
Cbc0038I Pass  31: suminf.    0.96800 (6) obj. -46.0937 iterations 6
Cbc0038I Pass  32: suminf.    1.09775 (6) obj. -46.0937 iterations 15
Cbc0038I Pass  33: suminf.    1.09775 (6) obj. -46.0937 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 23 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -40.7706 to -48.0109 (0.06 seconds)
Cbc0038I Round again with cutoff of -54.1069
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.80471 (30) obj. -76.3366 iterations 0
Cbc0038I Pass  34: suminf.    2.29951 (28) obj. -74.639 iterations 4
Cbc0038I Pass  35: suminf.    1.15946 (18) obj. -62.2411 iterations 10
Cbc0038I Pass  36: suminf.    1.39836 (10) obj. -54.1069 iterations 18
Cbc0038I Pass  37: suminf.    1.25784 (11) obj. -54.1069 iterations 4
Cbc0038I Pass  38: suminf.    1.77250 (9) obj. -54.1069 iterations 25
Cbc0038I Pass  39: suminf.    1.77250 (9) obj. -54.1069 iterations 3
Cbc0038I Pass  40: suminf.    1.76735 (9) obj. -54.1069 iterations 8
Cbc0038I Pass  41: suminf.    1.76735 (9) obj. -54.1069 iterations 6
Cbc0038I Pass  42: suminf.    1.77250 (9) obj. -54.1069 iterations 8
Cbc0038I Pass  43: suminf.    2.33251 (15) obj. -54.1069 iterations 27
Cbc0038I Pass  44: suminf.    1.88410 (13) obj. -54.1069 iterations 18
Cbc0038I Pass  45: suminf.    1.79578 (10) obj. -54.1069 iterations 15
Cbc0038I Pass  46: suminf.    1.30410 (9) obj. -54.1069 iterations 6
Cbc0038I Pass  47: suminf.    1.30410 (9) obj. -54.1069 iterations 0
Cbc0038I Pass  48: suminf.    1.65690 (9) obj. -54.1069 iterations 11
Cbc0038I Pass  49: suminf.    1.50672 (10) obj. -54.1069 iterations 7
Cbc0038I Pass  50: suminf.    1.43100 (10) obj. -54.1069 iterations 11
Cbc0038I Pass  51: suminf.    1.43100 (10) obj. -54.1069 iterations 7
Cbc0038I Pass  52: suminf.    1.50672 (10) obj. -54.1069 iterations 9
Cbc0038I Pass  53: suminf.    1.86960 (12) obj. -54.1069 iterations 13
Cbc0038I Pass  54: suminf.    1.78702 (13) obj. -54.1069 iterations 8
Cbc0038I Pass  55: suminf.    1.77578 (10) obj. -54.1069 iterations 23
Cbc0038I Pass  56: suminf.    1.37917 (9) obj. -54.1069 iterations 10
Cbc0038I Pass  57: suminf.    1.37917 (9) obj. -54.1069 iterations 0
Cbc0038I Pass  58: suminf.    1.60037 (9) obj. -54.1069 iterations 11
Cbc0038I Pass  59: suminf.    2.11302 (15) obj. -54.1069 iterations 20
Cbc0038I Pass  60: suminf.    1.58424 (14) obj. -54.1069 iterations 6
Cbc0038I Pass  61: suminf.    1.73131 (12) obj. -54.1069 iterations 14
Cbc0038I Pass  62: suminf.    1.54065 (13) obj. -54.1069 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 64 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 118 columns, reduced to 17 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -48.0109 - took 0.06 seconds
Cbc0012I Integer solution of -48.01092 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 5 rows 5 columns
Cbc0031I 41 added rows had average density of 31.804878
Cbc0013I At root node, 41 cuts changed objective from -78.490376 to -57.061518 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9033 row cuts average 9.7 elements, 1 column cuts (24 active)  in 0.152 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1604 row cuts average 106.2 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 711 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 912 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 351 row cuts average 66.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 33.2 elements, 0 column cuts (0 active)  in 0.685 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -48.01092 best solution, best possible -57.061518 (2.43 seconds)
Cbc0012I Integer solution of -48.12853 found by rounding after 3825 iterations and 1 nodes (2.43 seconds)
Cbc0038I Full problem 103 rows 118 columns, reduced to 12 rows 18 columns
Cbc0012I Integer solution of -48.97361 found by RINS after 5503 iterations and 42 nodes (2.92 seconds)
Cbc0012I Integer solution of -49.77038 found by rounding after 5647 iterations and 47 nodes (2.95 seconds)
Cbc0001I Search completed - best objective -49.77038, took 5981 iterations and 60 nodes (2.97 seconds)
Cbc0032I Strong branching done 762 times (8804 iterations), fathomed 6 nodes and fixed 12 variables
Cbc0035I Maximum depth 18, 203 variables fixed on reduced cost
Total time (CPU seconds):       2.16   (Wallclock seconds):       2.99

