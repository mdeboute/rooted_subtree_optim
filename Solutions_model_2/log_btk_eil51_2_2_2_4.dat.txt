Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 3.92628e-06 - average 4.3146e-08, 3 fixed columns
Coin0506I Presolve 85 (-6) rows, 48 (-3) columns and 258 (-18) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Coin0511I After Postsolve, objective 35.304621, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Coin0511I After Postsolve, objective 35.304621, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.30462065 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.20335
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.00462 iterations 38
Cbc0038I Solution found of 3.00462
Cbc0038I Relaxing continuous gives 3.00462
Cbc0038I Rounding solution of 0.59987 is better than previous of 3.00462

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 0.59987 to -3.58757 (0.05 seconds)
Cbc0038I Round again with cutoff of -6.75937
Cbc0038I Pass   2: suminf.    1.54506 (13) obj. -6.75937 iterations 13
Cbc0038I Pass   3: suminf.    1.25659 (6) obj. -6.75937 iterations 18
Cbc0038I Pass   4: suminf.    1.24059 (7) obj. -6.75937 iterations 1
Cbc0038I Pass   5: suminf.    1.94235 (5) obj. -6.75937 iterations 11
Cbc0038I Pass   6: suminf.    1.77645 (6) obj. -6.75937 iterations 4
Cbc0038I Pass   7: suminf.    0.92532 (5) obj. -6.75937 iterations 5
Cbc0038I Pass   8: suminf.    0.89689 (5) obj. -6.75937 iterations 3
Cbc0038I Pass   9: suminf.    1.84279 (5) obj. -6.75937 iterations 8
Cbc0038I Pass  10: suminf.    1.67784 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  11: suminf.    1.53133 (5) obj. -6.75937 iterations 3
Cbc0038I Pass  12: suminf.    1.42778 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  13: suminf.    1.17041 (5) obj. -6.75937 iterations 8
Cbc0038I Pass  14: suminf.    2.18732 (6) obj. -6.75937 iterations 12
Cbc0038I Pass  15: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  16: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  17: suminf.    1.32094 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  18: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  19: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  20: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  21: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  22: suminf.    1.32094 (5) obj. -6.75937 iterations 6
Cbc0038I Pass  23: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  24: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  25: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  26: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  27: suminf.    1.32094 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  28: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  29: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  30: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  31: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -3.58757 - took 0.06 seconds
Cbc0012I Integer solution of -3.587572 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0031I 19 added rows had average density of 33.947368
Cbc0013I At root node, 19 cuts changed objective from -35.304621 to -24.791303 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8396 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1724 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 201 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 21 nodes, 9 on tree, -3.587572 best solution, best possible -24.791303 (0.68 seconds)
Cbc0012I Integer solution of -3.914414 found by rounding after 6929 iterations and 41 nodes (0.72 seconds)
Cbc0001I Search completed - best objective -3.914414000000001, took 7376 iterations and 58 nodes (0.73 seconds)
Cbc0032I Strong branching done 656 times (12972 iterations), fathomed 3 nodes and fixed 30 variables
Cbc0035I Maximum depth 21, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.74

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-27) rows, 86 (-16) columns and 1127 (-451) elements
Clp1000I sum of infeasibilities 1.09785e-07 - average 1.42578e-09, 7 fixed columns
Coin0506I Presolve 74 (-3) rows, 79 (-7) columns and 980 (-147) elements
Clp0006I 0  Obj 32.547116 Dual inf 1.6928305 (79)
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 4.9781834 - largest nonzero change 2.4596258e-05 ( 0.0012247315%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 44.041435
Clp0000I Optimal - objective value 44.041435
Coin0511I After Postsolve, objective 44.041435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 44.041435
Clp0000I Optimal - objective value 44.041435
Clp0000I Optimal - objective value 44.041435
Clp0000I Optimal - objective value 44.041435
Coin0511I After Postsolve, objective 44.041435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.04143477 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 86 columns (86 integer (86 of which binary)) and 1129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.990%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.02947
Cbc0038I Pass   1: suminf.    2.39788 (25) obj. -27.6508 iterations 15
Cbc0038I Pass   2: suminf.    2.39788 (25) obj. -27.6508 iterations 1
Cbc0038I Pass   3: suminf.    0.25080 (4) obj. 3.53042 iterations 23
Cbc0038I Solution found of 13.9787
Cbc0038I Rounding solution of 10.4898 is better than previous of 13.9787

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 86 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 10.4898 to 6.99355 (0.02 seconds)
Cbc0038I Round again with cutoff of 2.68677
Cbc0038I Pass   4: suminf.    2.39788 (25) obj. -27.6508 iterations 0
Cbc0038I Pass   5: suminf.    2.39788 (25) obj. -27.6508 iterations 1
Cbc0038I Pass   6: suminf.    0.74875 (10) obj. -2.88951 iterations 15
Cbc0038I Pass   7: suminf.    0.69116 (7) obj. 2.68677 iterations 17
Cbc0038I Pass   8: suminf.    0.49550 (6) obj. 0.153985 iterations 3
Cbc0038I Pass   9: suminf.    0.53968 (2) obj. 2.68677 iterations 20
Cbc0038I Pass  10: suminf.    0.18200 (2) obj. 1.25606 iterations 4
Cbc0038I Pass  11: suminf.    2.12501 (10) obj. 2.68677 iterations 14
Cbc0038I Pass  12: suminf.    1.50892 (7) obj. 2.68677 iterations 6
Cbc0038I Pass  13: suminf.    0.82726 (5) obj. 1.41406 iterations 3
Cbc0038I Pass  14: suminf.    0.90862 (4) obj. 2.68677 iterations 12
Cbc0038I Pass  15: suminf.    0.90862 (4) obj. 2.68677 iterations 0
Cbc0038I Pass  16: suminf.    1.05178 (4) obj. 2.68677 iterations 2
Cbc0038I Pass  17: suminf.    0.35560 (4) obj. 2.68677 iterations 5
Cbc0038I Pass  18: suminf.    1.78434 (5) obj. 2.68677 iterations 7
Cbc0038I Pass  19: suminf.    1.34474 (6) obj. 2.68677 iterations 11
Cbc0038I Pass  20: suminf.    2.04534 (6) obj. 2.68677 iterations 4
Cbc0038I Pass  21: suminf.    1.31537 (4) obj. 2.68677 iterations 8
Cbc0038I Pass  22: suminf.    0.67651 (3) obj. 2.68677 iterations 3
Cbc0038I Pass  23: suminf.    0.63308 (3) obj. 2.51307 iterations 2
Cbc0038I Pass  24: suminf.    1.34474 (6) obj. 2.68677 iterations 6
Cbc0038I Pass  25: suminf.    1.34474 (6) obj. 2.68677 iterations 0
Cbc0038I Pass  26: suminf.    2.04534 (6) obj. 2.68677 iterations 4
Cbc0038I Pass  27: suminf.    1.31537 (4) obj. 2.68677 iterations 8
Cbc0038I Pass  28: suminf.    0.67651 (3) obj. 2.68677 iterations 3
Cbc0038I Pass  29: suminf.    0.63308 (3) obj. 2.51307 iterations 2
Cbc0038I Pass  30: suminf.    1.34474 (6) obj. 2.68677 iterations 6
Cbc0038I Pass  31: suminf.    1.34474 (6) obj. 2.68677 iterations 0
Cbc0038I Pass  32: suminf.    2.04534 (6) obj. 2.68677 iterations 4
Cbc0038I Pass  33: suminf.    1.31537 (4) obj. 2.68677 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 86 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 6.99355 to 3.51154 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.06525
Cbc0038I Pass  33: suminf.    2.39788 (25) obj. -27.6508 iterations 0
Cbc0038I Pass  34: suminf.    2.39788 (25) obj. -27.6508 iterations 1
Cbc0038I Pass  35: suminf.    1.35799 (10) obj. -5.06525 iterations 35
Cbc0038I Pass  36: suminf.    1.07296 (9) obj. -5.06525 iterations 8
Cbc0038I Pass  37: suminf.    0.78525 (8) obj. -5.83823 iterations 3
Cbc0038I Pass  38: suminf.    1.01455 (7) obj. -5.06525 iterations 30
Cbc0038I Pass  39: suminf.    0.84568 (6) obj. -5.06525 iterations 9
Cbc0038I Pass  40: suminf.    2.53967 (10) obj. -5.06525 iterations 10
Cbc0038I Pass  41: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  42: suminf.    1.64226 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  43: suminf.    0.92709 (6) obj. -5.06525 iterations 11
Cbc0038I Pass  44: suminf.    2.47742 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  45: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  46: suminf.    1.52001 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  47: suminf.    0.84568 (6) obj. -5.06525 iterations 15
Cbc0038I Pass  48: suminf.    2.53967 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  49: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  50: suminf.    1.64226 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  51: suminf.    0.92709 (6) obj. -5.06525 iterations 11
Cbc0038I Pass  52: suminf.    2.47742 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  53: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  54: suminf.    1.52001 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  55: suminf.    0.84568 (6) obj. -5.06525 iterations 15
Cbc0038I Pass  56: suminf.    2.53967 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  57: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  58: suminf.    1.64226 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  59: suminf.    0.92709 (6) obj. -5.06525 iterations 11
Cbc0038I Pass  60: suminf.    2.47742 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  61: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  62: suminf.    1.52001 (8) obj. -5.06525 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 86 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 3.51154 - took 0.03 seconds
Cbc0012I Integer solution of 3.511542 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 77 rows 86 columns, reduced to 14 rows 18 columns
Cbc0031I 51 added rows had average density of 32.862745
Cbc0013I At root node, 51 cuts changed objective from -36.073321 to -8.7674026 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10623 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1208 row cuts average 81.2 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 34 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 742 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 330 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 124 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.661 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3.511542 best solution, best possible -8.7674026 (2.04 seconds)
Cbc0012I Integer solution of -0.057722 found by rounding after 5171 iterations and 1 nodes (2.05 seconds)
Cbc0012I Integer solution of -1.815792 found by rounding after 5294 iterations and 2 nodes (2.21 seconds)
Cbc0016I Integer solution of -3.914414 found by strong branching after 5333 iterations and 2 nodes (2.30 seconds)
Cbc0010I After 8 nodes, 3 on tree, -3.914414 best solution, best possible -8.3091677 (2.75 seconds)
Cbc0010I After 21 nodes, 3 on tree, -3.914414 best solution, best possible -8.3091677 (3.51 seconds)
Cbc0010I After 36 nodes, 7 on tree, -3.914414 best solution, best possible -8.285311 (4.23 seconds)
Cbc0038I Full problem 77 rows 86 columns, reduced to 47 rows 60 columns
Cbc0001I Search completed - best objective -3.914414000000001, took 8230 iterations and 60 nodes (4.78 seconds)
Cbc0032I Strong branching done 1058 times (21055 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 16, 47 variables fixed on reduced cost
Total time (CPU seconds):       3.50   (Wallclock seconds):       4.80

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-14) rows, 51 (-2) columns and 276 (-27) elements
Clp1000I sum of infeasibilities 3.92628e-06 - average 4.3146e-08, 3 fixed columns
Coin0506I Presolve 85 (-6) rows, 48 (-3) columns and 258 (-18) elements
Clp0029I End of values pass after 48 iterations
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Coin0511I After Postsolve, objective 35.304621, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Clp0000I Optimal - objective value 35.304621
Coin0511I After Postsolve, objective 35.304621, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.30462065 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 51 columns (50 integer (50 of which binary)) and 276 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.694%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 8.20335
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.00462 iterations 38
Cbc0038I Solution found of 3.00462
Cbc0038I Relaxing continuous gives 3.00462
Cbc0038I Rounding solution of 0.59987 is better than previous of 3.00462

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0038I Mini branch and bound improved solution from 0.59987 to -3.58757 (0.08 seconds)
Cbc0038I Round again with cutoff of -6.75937
Cbc0038I Pass   2: suminf.    1.54506 (13) obj. -6.75937 iterations 13
Cbc0038I Pass   3: suminf.    1.25659 (6) obj. -6.75937 iterations 18
Cbc0038I Pass   4: suminf.    1.24059 (7) obj. -6.75937 iterations 1
Cbc0038I Pass   5: suminf.    1.94235 (5) obj. -6.75937 iterations 11
Cbc0038I Pass   6: suminf.    1.77645 (6) obj. -6.75937 iterations 4
Cbc0038I Pass   7: suminf.    0.92532 (5) obj. -6.75937 iterations 5
Cbc0038I Pass   8: suminf.    0.89689 (5) obj. -6.75937 iterations 3
Cbc0038I Pass   9: suminf.    1.84279 (5) obj. -6.75937 iterations 8
Cbc0038I Pass  10: suminf.    1.67784 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  11: suminf.    1.53133 (5) obj. -6.75937 iterations 3
Cbc0038I Pass  12: suminf.    1.42778 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  13: suminf.    1.17041 (5) obj. -6.75937 iterations 8
Cbc0038I Pass  14: suminf.    2.18732 (6) obj. -6.75937 iterations 12
Cbc0038I Pass  15: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  16: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  17: suminf.    1.32094 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  18: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  19: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  20: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  21: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  22: suminf.    1.32094 (5) obj. -6.75937 iterations 6
Cbc0038I Pass  23: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  24: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  25: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  26: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  27: suminf.    1.32094 (5) obj. -6.75937 iterations 4
Cbc0038I Pass  28: suminf.    1.17041 (5) obj. -6.75937 iterations 5
Cbc0038I Pass  29: suminf.    2.18732 (6) obj. -6.75937 iterations 10
Cbc0038I Pass  30: suminf.    1.29389 (7) obj. -6.75937 iterations 8
Cbc0038I Pass  31: suminf.    1.28421 (5) obj. -6.75937 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -3.58757 - took 0.08 seconds
Cbc0012I Integer solution of -3.587572 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 91 rows 51 columns, reduced to 73 rows 40 columns
Cbc0031I 19 added rows had average density of 33.947368
Cbc0013I At root node, 19 cuts changed objective from -35.304621 to -24.791303 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8396 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1724 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 201 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 168 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0010I After 3 nodes, 4 on tree, -3.587572 best solution, best possible -24.791303 (0.70 seconds)
Cbc0012I Integer solution of -3.914414 found by rounding after 6929 iterations and 41 nodes (0.84 seconds)
Cbc0001I Search completed - best objective -3.914414000000001, took 7376 iterations and 58 nodes (0.85 seconds)
Cbc0032I Strong branching done 656 times (12972 iterations), fathomed 3 nodes and fixed 30 variables
Cbc0035I Maximum depth 21, 53 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.87

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 77 (-28) rows, 86 (-17) columns and 1127 (-452) elements
Clp1000I sum of infeasibilities 1.09785e-07 - average 1.42578e-09, 7 fixed columns
Coin0506I Presolve 74 (-3) rows, 79 (-7) columns and 980 (-147) elements
Clp0006I 0  Obj 32.547116 Dual inf 1.6928305 (79)
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 4.9781834 - largest nonzero change 2.4596258e-05 ( 0.0012247315%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 44.041435
Clp0000I Optimal - objective value 44.041435
Coin0511I After Postsolve, objective 44.041435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 44.041435
Clp0000I Optimal - objective value 44.041435
Clp0000I Optimal - objective value 44.041435
Clp0000I Optimal - objective value 44.041435
Coin0511I After Postsolve, objective 44.041435, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.04143477 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 77 rows, 86 columns (86 integer (86 of which binary)) and 1129 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.990%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.02947
Cbc0038I Pass   1: suminf.    2.39788 (25) obj. -27.6508 iterations 15
Cbc0038I Pass   2: suminf.    2.39788 (25) obj. -27.6508 iterations 1
Cbc0038I Pass   3: suminf.    0.25080 (4) obj. 3.53042 iterations 23
Cbc0038I Solution found of 13.9787
Cbc0038I Rounding solution of 10.4898 is better than previous of 13.9787

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 86 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 10.4898 to 6.99355 (0.02 seconds)
Cbc0038I Round again with cutoff of 2.68677
Cbc0038I Pass   4: suminf.    2.39788 (25) obj. -27.6508 iterations 0
Cbc0038I Pass   5: suminf.    2.39788 (25) obj. -27.6508 iterations 1
Cbc0038I Pass   6: suminf.    0.74875 (10) obj. -2.88951 iterations 15
Cbc0038I Pass   7: suminf.    0.69116 (7) obj. 2.68677 iterations 17
Cbc0038I Pass   8: suminf.    0.49550 (6) obj. 0.153985 iterations 3
Cbc0038I Pass   9: suminf.    0.53968 (2) obj. 2.68677 iterations 20
Cbc0038I Pass  10: suminf.    0.18200 (2) obj. 1.25606 iterations 4
Cbc0038I Pass  11: suminf.    2.12501 (10) obj. 2.68677 iterations 14
Cbc0038I Pass  12: suminf.    1.50892 (7) obj. 2.68677 iterations 6
Cbc0038I Pass  13: suminf.    0.82726 (5) obj. 1.41406 iterations 3
Cbc0038I Pass  14: suminf.    0.90862 (4) obj. 2.68677 iterations 12
Cbc0038I Pass  15: suminf.    0.90862 (4) obj. 2.68677 iterations 0
Cbc0038I Pass  16: suminf.    1.05178 (4) obj. 2.68677 iterations 2
Cbc0038I Pass  17: suminf.    0.35560 (4) obj. 2.68677 iterations 5
Cbc0038I Pass  18: suminf.    1.78434 (5) obj. 2.68677 iterations 7
Cbc0038I Pass  19: suminf.    1.34474 (6) obj. 2.68677 iterations 11
Cbc0038I Pass  20: suminf.    2.04534 (6) obj. 2.68677 iterations 4
Cbc0038I Pass  21: suminf.    1.31537 (4) obj. 2.68677 iterations 8
Cbc0038I Pass  22: suminf.    0.67651 (3) obj. 2.68677 iterations 3
Cbc0038I Pass  23: suminf.    0.63308 (3) obj. 2.51307 iterations 2
Cbc0038I Pass  24: suminf.    1.34474 (6) obj. 2.68677 iterations 6
Cbc0038I Pass  25: suminf.    1.34474 (6) obj. 2.68677 iterations 0
Cbc0038I Pass  26: suminf.    2.04534 (6) obj. 2.68677 iterations 4
Cbc0038I Pass  27: suminf.    1.31537 (4) obj. 2.68677 iterations 8
Cbc0038I Pass  28: suminf.    0.67651 (3) obj. 2.68677 iterations 3
Cbc0038I Pass  29: suminf.    0.63308 (3) obj. 2.51307 iterations 2
Cbc0038I Pass  30: suminf.    1.34474 (6) obj. 2.68677 iterations 6
Cbc0038I Pass  31: suminf.    1.34474 (6) obj. 2.68677 iterations 0
Cbc0038I Pass  32: suminf.    2.04534 (6) obj. 2.68677 iterations 4
Cbc0038I Pass  33: suminf.    1.31537 (4) obj. 2.68677 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 86 columns, reduced to 18 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 6.99355 to 3.51154 (0.04 seconds)
Cbc0038I Round again with cutoff of -5.06525
Cbc0038I Pass  33: suminf.    2.39788 (25) obj. -27.6508 iterations 0
Cbc0038I Pass  34: suminf.    2.39788 (25) obj. -27.6508 iterations 1
Cbc0038I Pass  35: suminf.    1.35799 (10) obj. -5.06525 iterations 35
Cbc0038I Pass  36: suminf.    1.07296 (9) obj. -5.06525 iterations 8
Cbc0038I Pass  37: suminf.    0.78525 (8) obj. -5.83823 iterations 3
Cbc0038I Pass  38: suminf.    1.01455 (7) obj. -5.06525 iterations 30
Cbc0038I Pass  39: suminf.    0.84568 (6) obj. -5.06525 iterations 9
Cbc0038I Pass  40: suminf.    2.53967 (10) obj. -5.06525 iterations 10
Cbc0038I Pass  41: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  42: suminf.    1.64226 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  43: suminf.    0.92709 (6) obj. -5.06525 iterations 11
Cbc0038I Pass  44: suminf.    2.47742 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  45: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  46: suminf.    1.52001 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  47: suminf.    0.84568 (6) obj. -5.06525 iterations 15
Cbc0038I Pass  48: suminf.    2.53967 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  49: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  50: suminf.    1.64226 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  51: suminf.    0.92709 (6) obj. -5.06525 iterations 11
Cbc0038I Pass  52: suminf.    2.47742 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  53: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  54: suminf.    1.52001 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  55: suminf.    0.84568 (6) obj. -5.06525 iterations 15
Cbc0038I Pass  56: suminf.    2.53967 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  57: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  58: suminf.    1.64226 (8) obj. -5.06525 iterations 2
Cbc0038I Pass  59: suminf.    0.92709 (6) obj. -5.06525 iterations 11
Cbc0038I Pass  60: suminf.    2.47742 (10) obj. -5.06525 iterations 9
Cbc0038I Pass  61: suminf.    1.85657 (8) obj. -5.06525 iterations 6
Cbc0038I Pass  62: suminf.    1.52001 (8) obj. -5.06525 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 77 rows 86 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of 3.51154 - took 0.03 seconds
Cbc0012I Integer solution of 3.511542 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 77 rows 86 columns, reduced to 14 rows 18 columns
Cbc0031I 51 added rows had average density of 32.862745
Cbc0013I At root node, 51 cuts changed objective from -36.073321 to -8.7674026 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10623 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1208 row cuts average 81.2 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 34 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 742 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 330 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 124 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.744 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 3.511542 best solution, best possible -8.7674026 (2.36 seconds)
Cbc0012I Integer solution of -0.057722 found by rounding after 5171 iterations and 1 nodes (2.37 seconds)
Cbc0012I Integer solution of -1.815792 found by rounding after 5294 iterations and 2 nodes (2.54 seconds)
Cbc0016I Integer solution of -3.914414 found by strong branching after 5333 iterations and 2 nodes (2.65 seconds)
Cbc0010I After 7 nodes, 2 on tree, -3.914414 best solution, best possible -8.3091677 (3.08 seconds)
Cbc0010I After 16 nodes, 4 on tree, -3.914414 best solution, best possible -8.3091677 (3.79 seconds)
Cbc0010I After 30 nodes, 1 on tree, -3.914414 best solution, best possible -8.285311 (4.50 seconds)
Cbc0038I Full problem 77 rows 86 columns, reduced to 47 rows 60 columns
Cbc0010I After 44 nodes, 7 on tree, -3.914414 best solution, best possible -8.285311 (5.25 seconds)
Cbc0001I Search completed - best objective -3.914414000000001, took 8230 iterations and 60 nodes (5.51 seconds)
Cbc0032I Strong branching done 1058 times (21055 iterations), fathomed 5 nodes and fixed 13 variables
Cbc0035I Maximum depth 16, 47 variables fixed on reduced cost
Total time (CPU seconds):       3.92   (Wallclock seconds):       5.53

