Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 19 (-44) rows, 11 (-21) columns and 54 (-123) elements
Clp0000I Optimal - objective value 103.45382
Coin0511I After Postsolve, objective 103.45382, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.45382 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 11 columns (10 integer (10 of which binary)) and 54 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 3.22563
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11 iterations 10
Cbc0038I Solution found of 11
Cbc0038I Relaxing continuous gives 11
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 11 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1.32396
Cbc0038I Pass   2: suminf.    0.14848 (1) obj. -1.32396 iterations 1
Cbc0038I Pass   3: suminf.    0.36290 (1) obj. -1.32396 iterations 1
Cbc0038I Pass   4: suminf.    0.43548 (1) obj. -1.32396 iterations 4
Cbc0038I Pass   5: suminf.    0.22077 (1) obj. -1.32396 iterations 3
Cbc0038I Pass   6: suminf.    0.43548 (1) obj. -1.32396 iterations 1
Cbc0038I Pass   7: suminf.    0.46390 (2) obj. -1.32396 iterations 2
Cbc0038I Pass   8: suminf.    0.29560 (2) obj. -1.32396 iterations 5
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -1.32396 iterations 2
Cbc0038I Solution found of -1.32396
Cbc0038I Relaxing continuous gives -3
Cbc0038I Rounding solution of -56.324 is better than previous of -3

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 11 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -66.5072
Cbc0038I Pass  10: suminf.    1.42376 (5) obj. -66.5072 iterations 5
Cbc0038I Pass  11: suminf.    0.85856 (3) obj. -66.5072 iterations 4
Cbc0038I Pass  12: suminf.    0.85856 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  13: suminf.    0.84166 (2) obj. -66.5072 iterations 2
Cbc0038I Pass  14: suminf.    0.54592 (2) obj. -66.5072 iterations 2
Cbc0038I Pass  15: suminf.    0.84361 (3) obj. -66.5072 iterations 2
Cbc0038I Pass  16: suminf.    0.73501 (3) obj. -66.5072 iterations 1
Cbc0038I Pass  17: suminf.    0.54592 (2) obj. -66.5072 iterations 6
Cbc0038I Pass  18: suminf.    2.15400 (7) obj. -66.5072 iterations 4
Cbc0038I Pass  19: suminf.    1.39994 (7) obj. -66.5072 iterations 3
Cbc0038I Pass  20: suminf.    1.39994 (7) obj. -66.5072 iterations 0
Cbc0038I Pass  21: suminf.    0.85856 (3) obj. -66.5072 iterations 8
Cbc0038I Pass  22: suminf.    0.85856 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  23: suminf.    0.84166 (2) obj. -66.5072 iterations 2
Cbc0038I Pass  24: suminf.    0.54592 (2) obj. -66.5072 iterations 2
Cbc0038I Pass  25: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  26: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  27: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  28: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  29: suminf.    0.84166 (2) obj. -66.5072 iterations 3
Cbc0038I Pass  30: suminf.    1.63134 (6) obj. -66.5072 iterations 3
Cbc0038I Pass  31: suminf.    0.54592 (2) obj. -66.5072 iterations 4
Cbc0038I Pass  32: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  33: suminf.    1.28230 (3) obj. -66.5072 iterations 3
Cbc0038I Pass  34: suminf.    0.73501 (3) obj. -66.5072 iterations 1
Cbc0038I Pass  35: suminf.    0.73501 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  36: suminf.    0.73501 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  37: suminf.    0.73501 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  38: suminf.    0.73501 (3) obj. -66.5072 iterations 1
Cbc0038I Pass  39: suminf.    1.28230 (3) obj. -66.5072 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 11 columns, reduced to 19 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -56.324 - took 0.01 seconds
Cbc0012I Integer solution of -58 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 19 rows 11 columns, reduced to 10 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -103.24045 to -103.24045 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-36) rows, 27 (-33) columns and 147 (-465) elements
Clp1000I sum of infeasibilities 8.78311e-08 - average 3.37812e-09, 0 fixed columns
Coin0506I Presolve 26 (0) rows, 27 (0) columns and 147 (0) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 171.69534
Clp0000I Optimal - objective value 171.69534
Coin0511I After Postsolve, objective 171.69534, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 171.69534
Clp0000I Optimal - objective value 171.69534
Clp0000I Optimal - objective value 171.69534
Coin0511I After Postsolve, objective 171.69534, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 171.6953448 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 35 columns (35 integer (35 of which binary)) and 176 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.278%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 9.09718
Cbc0038I Pass   1: suminf.    0.14286 (1) obj. 13.1429 iterations 17
Cbc0038I Pass   2: suminf.    0.14286 (1) obj. 13.1429 iterations 0
Cbc0038I Solution found of 14
Cbc0038I Rounding solution of -24 is better than previous of 14

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.9496
Cbc0038I Pass   3: suminf.    2.82875 (10) obj. -32.9496 iterations 3
Cbc0038I Pass   4: suminf.    0.35798 (1) obj. -32.9496 iterations 14
Cbc0038I Pass   5: suminf.    0.35798 (1) obj. -32.9496 iterations 0
Cbc0038I Pass   6: suminf.    0.50000 (1) obj. -36.5 iterations 2
Cbc0038I Pass   7: suminf.    1.59830 (6) obj. -32.9496 iterations 7
Cbc0038I Pass   8: suminf.    1.16598 (3) obj. -32.9496 iterations 3
Cbc0038I Pass   9: suminf.    0.46248 (2) obj. -32.9496 iterations 5
Cbc0038I Pass  10: suminf.    0.46152 (7) obj. -32.9496 iterations 1
Cbc0038I Pass  11: suminf.    0.54435 (2) obj. -33.7056 iterations 7
Cbc0038I Pass  12: suminf.    0.51411 (2) obj. -32.9496 iterations 1
Cbc0038I Pass  13: suminf.    1.13217 (4) obj. -32.9496 iterations 4
Cbc0038I Pass  14: suminf.    0.88585 (4) obj. -32.9496 iterations 2
Cbc0038I Pass  15: suminf.    2.33220 (9) obj. -32.9496 iterations 8
Cbc0038I Pass  16: suminf.    2.26458 (9) obj. -32.9496 iterations 1
Cbc0038I Pass  17: suminf.    1.14336 (3) obj. -32.9496 iterations 8
Cbc0038I Pass  18: suminf.    0.86962 (2) obj. -55.7742 iterations 2
Cbc0038I Pass  19: suminf.    0.53676 (2) obj. -32.9496 iterations 1
Cbc0038I Pass  20: suminf.    0.45968 (1) obj. -45.1532 iterations 2
Cbc0038I Pass  21: suminf.    0.31265 (1) obj. -32.9496 iterations 1
Cbc0038I Pass  22: suminf.    1.51803 (4) obj. -32.9496 iterations 4
Cbc0038I Pass  23: suminf.    1.23112 (3) obj. -32.9496 iterations 2
Cbc0038I Pass  24: suminf.    3.85351 (11) obj. -32.9496 iterations 11
Cbc0038I Pass  25: suminf.    2.71198 (7) obj. -32.9496 iterations 4
Cbc0038I Pass  26: suminf.    0.47672 (3) obj. -32.9496 iterations 7
Cbc0038I Pass  27: suminf.    0.47672 (3) obj. -32.9496 iterations 0
Cbc0038I Pass  28: suminf.    0.45968 (1) obj. -45.1532 iterations 3
Cbc0038I Pass  29: suminf.    0.31265 (1) obj. -32.9496 iterations 1
Cbc0038I Pass  30: suminf.    2.67086 (7) obj. -32.9496 iterations 6
Cbc0038I Pass  31: suminf.    2.29219 (6) obj. -32.9496 iterations 1
Cbc0038I Pass  32: suminf.    1.87917 (15) obj. -32.9496 iterations 16
Cbc0038I Rounding solution of -25 is better than previous of -24

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -47.2591
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.35214 (10) obj. -47.2591 iterations 0
Cbc0038I Pass  33: suminf.    0.90227 (2) obj. -47.2591 iterations 13
Cbc0038I Pass  34: suminf.    0.83333 (2) obj. -48.5 iterations 1
Cbc0038I Pass  35: suminf.    0.90227 (2) obj. -47.2591 iterations 2
Cbc0038I Pass  36: suminf.    3.31838 (13) obj. -47.2591 iterations 12
Cbc0038I Pass  37: suminf.    1.20682 (7) obj. -47.2591 iterations 8
Cbc0038I Pass  38: suminf.    1.27448 (4) obj. -47.2591 iterations 5
Cbc0038I Pass  39: suminf.    1.21619 (3) obj. -47.2591 iterations 1
Cbc0038I Pass  40: suminf.    0.54391 (2) obj. -47.2591 iterations 2
Cbc0038I Pass  41: suminf.    0.84476 (2) obj. -54.7802 iterations 2
Cbc0038I Pass  42: suminf.    1.63536 (5) obj. -47.2591 iterations 4
Cbc0038I Pass  43: suminf.    0.70482 (2) obj. -47.2591 iterations 3
Cbc0038I Pass  44: suminf.    0.54391 (2) obj. -47.2591 iterations 3
Cbc0038I Pass  45: suminf.    0.67359 (3) obj. -47.2591 iterations 2
Cbc0038I Pass  46: suminf.    2.07881 (8) obj. -47.2591 iterations 9
Cbc0038I Pass  47: suminf.    1.91435 (7) obj. -47.2591 iterations 2
Cbc0038I Pass  48: suminf.    1.27448 (4) obj. -47.2591 iterations 5
Cbc0038I Pass  49: suminf.    1.21619 (3) obj. -47.2591 iterations 1
Cbc0038I Pass  50: suminf.    0.54391 (2) obj. -47.2591 iterations 2
Cbc0038I Pass  51: suminf.    0.84476 (2) obj. -54.7802 iterations 2
Cbc0038I Pass  52: suminf.    2.04860 (7) obj. -47.2591 iterations 6
Cbc0038I Pass  53: suminf.    1.01398 (5) obj. -47.2591 iterations 6
Cbc0038I Pass  54: suminf.    0.16415 (4) obj. -47.2591 iterations 3
Cbc0038I Pass  55: suminf.    0.29637 (3) obj. -47.7198 iterations 2
Cbc0038I Pass  56: suminf.    0.27078 (3) obj. -47.2591 iterations 2
Cbc0038I Pass  57: suminf.    1.92190 (8) obj. -47.2591 iterations 7
Cbc0038I Pass  58: suminf.    1.21014 (5) obj. -47.2591 iterations 4
Cbc0038I Pass  59: suminf.    0.58829 (5) obj. -47.2591 iterations 3
Cbc0038I Pass  60: suminf.    3.10487 (8) obj. -47.2591 iterations 11
Cbc0038I Pass  61: suminf.    2.65222 (7) obj. -47.2591 iterations 1
Cbc0038I Rounding solution of -58 is better than previous of -25

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 35 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -72.649
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.84946 (18) obj. -72.649 iterations 3
Cbc0038I Pass  62: suminf.    2.83959 (10) obj. -72.649 iterations 9
Cbc0038I Pass  63: suminf.    2.49338 (9) obj. -72.649 iterations 2
Cbc0038I Pass  64: suminf.    2.49338 (9) obj. -72.649 iterations 0
Cbc0038I Pass  65: suminf.    1.68322 (5) obj. -72.649 iterations 16
Cbc0038I Pass  66: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  67: suminf.    1.95496 (5) obj. -72.649 iterations 4
Cbc0038I Pass  68: suminf.    1.68322 (5) obj. -72.649 iterations 1
Cbc0038I Pass  69: suminf.    3.37914 (9) obj. -72.649 iterations 4
Cbc0038I Pass  70: suminf.    3.06585 (7) obj. -72.649 iterations 3
Cbc0038I Pass  71: suminf.    1.68322 (5) obj. -72.649 iterations 5
Cbc0038I Pass  72: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  73: suminf.    1.95496 (5) obj. -72.649 iterations 4
Cbc0038I Pass  74: suminf.    1.68322 (5) obj. -72.649 iterations 1
Cbc0038I Pass  75: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  76: suminf.    2.73010 (9) obj. -72.649 iterations 6
Cbc0038I Pass  77: suminf.    1.83956 (5) obj. -72.649 iterations 6
Cbc0038I Pass  78: suminf.    1.68322 (5) obj. -72.649 iterations 4
Cbc0038I Pass  79: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  80: suminf.    1.95496 (5) obj. -72.649 iterations 4
Cbc0038I Pass  81: suminf.    1.68322 (5) obj. -72.649 iterations 1
Cbc0038I Pass  82: suminf.    3.19909 (9) obj. -72.649 iterations 7
Cbc0038I Pass  83: suminf.    2.67216 (7) obj. -72.649 iterations 2
Cbc0038I Pass  84: suminf.    1.68322 (5) obj. -72.649 iterations 5
Cbc0038I Pass  85: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  86: suminf.    1.95496 (5) obj. -72.649 iterations 4
Cbc0038I Pass  87: suminf.    1.68322 (5) obj. -72.649 iterations 1
Cbc0038I Pass  88: suminf.    5.11112 (13) obj. -72.649 iterations 12
Cbc0038I Pass  89: suminf.    3.99115 (9) obj. -72.649 iterations 6
Cbc0038I Pass  90: suminf.    3.99115 (9) obj. -72.649 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 35 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -58 - took 0.03 seconds
Cbc0012I Integer solution of -58 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -104.49688 to -104.49688 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58, took 0 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 19 (-44) rows, 11 (-21) columns and 54 (-123) elements
Clp0000I Optimal - objective value 103.45382
Coin0511I After Postsolve, objective 103.45382, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 103.45382 - 11 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 19 rows, 11 columns (10 integer (10 of which binary)) and 54 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 3.22563
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11 iterations 10
Cbc0038I Solution found of 11
Cbc0038I Relaxing continuous gives 11
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 11 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1.32396
Cbc0038I Pass   2: suminf.    0.14848 (1) obj. -1.32396 iterations 1
Cbc0038I Pass   3: suminf.    0.36290 (1) obj. -1.32396 iterations 1
Cbc0038I Pass   4: suminf.    0.43548 (1) obj. -1.32396 iterations 4
Cbc0038I Pass   5: suminf.    0.22077 (1) obj. -1.32396 iterations 3
Cbc0038I Pass   6: suminf.    0.43548 (1) obj. -1.32396 iterations 1
Cbc0038I Pass   7: suminf.    0.46390 (2) obj. -1.32396 iterations 2
Cbc0038I Pass   8: suminf.    0.29560 (2) obj. -1.32396 iterations 5
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -1.32396 iterations 2
Cbc0038I Solution found of -1.32396
Cbc0038I Relaxing continuous gives -3
Cbc0038I Rounding solution of -56.324 is better than previous of -3

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 11 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -66.5072
Cbc0038I Pass  10: suminf.    1.42376 (5) obj. -66.5072 iterations 5
Cbc0038I Pass  11: suminf.    0.85856 (3) obj. -66.5072 iterations 4
Cbc0038I Pass  12: suminf.    0.85856 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  13: suminf.    0.84166 (2) obj. -66.5072 iterations 2
Cbc0038I Pass  14: suminf.    0.54592 (2) obj. -66.5072 iterations 2
Cbc0038I Pass  15: suminf.    0.84361 (3) obj. -66.5072 iterations 2
Cbc0038I Pass  16: suminf.    0.73501 (3) obj. -66.5072 iterations 1
Cbc0038I Pass  17: suminf.    0.54592 (2) obj. -66.5072 iterations 6
Cbc0038I Pass  18: suminf.    2.15400 (7) obj. -66.5072 iterations 4
Cbc0038I Pass  19: suminf.    1.39994 (7) obj. -66.5072 iterations 3
Cbc0038I Pass  20: suminf.    1.39994 (7) obj. -66.5072 iterations 0
Cbc0038I Pass  21: suminf.    0.85856 (3) obj. -66.5072 iterations 8
Cbc0038I Pass  22: suminf.    0.85856 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  23: suminf.    0.84166 (2) obj. -66.5072 iterations 2
Cbc0038I Pass  24: suminf.    0.54592 (2) obj. -66.5072 iterations 2
Cbc0038I Pass  25: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  26: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  27: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  28: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  29: suminf.    0.84166 (2) obj. -66.5072 iterations 3
Cbc0038I Pass  30: suminf.    1.63134 (6) obj. -66.5072 iterations 3
Cbc0038I Pass  31: suminf.    0.54592 (2) obj. -66.5072 iterations 4
Cbc0038I Pass  32: suminf.    0.54592 (2) obj. -66.5072 iterations 0
Cbc0038I Pass  33: suminf.    1.28230 (3) obj. -66.5072 iterations 3
Cbc0038I Pass  34: suminf.    0.73501 (3) obj. -66.5072 iterations 1
Cbc0038I Pass  35: suminf.    0.73501 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  36: suminf.    0.73501 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  37: suminf.    0.73501 (3) obj. -66.5072 iterations 0
Cbc0038I Pass  38: suminf.    0.73501 (3) obj. -66.5072 iterations 1
Cbc0038I Pass  39: suminf.    1.28230 (3) obj. -66.5072 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 19 rows 11 columns, reduced to 19 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -56.324 - took 0.01 seconds
Cbc0012I Integer solution of -58 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 19 rows 11 columns, reduced to 10 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -103.24045 to -103.24045 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 26 (-37) rows, 27 (-34) columns and 147 (-466) elements
Clp1000I sum of infeasibilities 8.78311e-08 - average 3.37812e-09, 0 fixed columns
Coin0506I Presolve 26 (0) rows, 27 (0) columns and 147 (0) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 171.69534
Clp0000I Optimal - objective value 171.69534
Coin0511I After Postsolve, objective 171.69534, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 171.69534
Clp0000I Optimal - objective value 171.69534
Clp0000I Optimal - objective value 171.69534
Coin0511I After Postsolve, objective 171.69534, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 171.6953448 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 35 columns (35 integer (35 of which binary)) and 176 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.278%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 9.09718
Cbc0038I Pass   1: suminf.    0.14286 (1) obj. 13.1429 iterations 17
Cbc0038I Pass   2: suminf.    0.14286 (1) obj. 13.1429 iterations 0
Cbc0038I Solution found of 14
Cbc0038I Rounding solution of -24 is better than previous of 14

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -32.9496
Cbc0038I Pass   3: suminf.    2.82875 (10) obj. -32.9496 iterations 3
Cbc0038I Pass   4: suminf.    0.35798 (1) obj. -32.9496 iterations 14
Cbc0038I Pass   5: suminf.    0.35798 (1) obj. -32.9496 iterations 0
Cbc0038I Pass   6: suminf.    0.50000 (1) obj. -36.5 iterations 2
Cbc0038I Pass   7: suminf.    1.59830 (6) obj. -32.9496 iterations 7
Cbc0038I Pass   8: suminf.    1.16598 (3) obj. -32.9496 iterations 3
Cbc0038I Pass   9: suminf.    0.46248 (2) obj. -32.9496 iterations 5
Cbc0038I Pass  10: suminf.    0.46152 (7) obj. -32.9496 iterations 1
Cbc0038I Pass  11: suminf.    0.54435 (2) obj. -33.7056 iterations 7
Cbc0038I Pass  12: suminf.    0.51411 (2) obj. -32.9496 iterations 1
Cbc0038I Pass  13: suminf.    1.13217 (4) obj. -32.9496 iterations 4
Cbc0038I Pass  14: suminf.    0.88585 (4) obj. -32.9496 iterations 2
Cbc0038I Pass  15: suminf.    2.33220 (9) obj. -32.9496 iterations 8
Cbc0038I Pass  16: suminf.    2.26458 (9) obj. -32.9496 iterations 1
Cbc0038I Pass  17: suminf.    1.14336 (3) obj. -32.9496 iterations 8
Cbc0038I Pass  18: suminf.    0.86962 (2) obj. -55.7742 iterations 2
Cbc0038I Pass  19: suminf.    0.53676 (2) obj. -32.9496 iterations 1
Cbc0038I Pass  20: suminf.    0.45968 (1) obj. -45.1532 iterations 2
Cbc0038I Pass  21: suminf.    0.31265 (1) obj. -32.9496 iterations 1
Cbc0038I Pass  22: suminf.    1.51803 (4) obj. -32.9496 iterations 4
Cbc0038I Pass  23: suminf.    1.23112 (3) obj. -32.9496 iterations 2
Cbc0038I Pass  24: suminf.    3.85351 (11) obj. -32.9496 iterations 11
Cbc0038I Pass  25: suminf.    2.71198 (7) obj. -32.9496 iterations 4
Cbc0038I Pass  26: suminf.    0.47672 (3) obj. -32.9496 iterations 7
Cbc0038I Pass  27: suminf.    0.47672 (3) obj. -32.9496 iterations 0
Cbc0038I Pass  28: suminf.    0.45968 (1) obj. -45.1532 iterations 3
Cbc0038I Pass  29: suminf.    0.31265 (1) obj. -32.9496 iterations 1
Cbc0038I Pass  30: suminf.    2.67086 (7) obj. -32.9496 iterations 6
Cbc0038I Pass  31: suminf.    2.29219 (6) obj. -32.9496 iterations 1
Cbc0038I Pass  32: suminf.    1.87917 (15) obj. -32.9496 iterations 16
Cbc0038I Rounding solution of -25 is better than previous of -24

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -47.2591
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.35214 (10) obj. -47.2591 iterations 0
Cbc0038I Pass  33: suminf.    0.90227 (2) obj. -47.2591 iterations 13
Cbc0038I Pass  34: suminf.    0.83333 (2) obj. -48.5 iterations 1
Cbc0038I Pass  35: suminf.    0.90227 (2) obj. -47.2591 iterations 2
Cbc0038I Pass  36: suminf.    3.31838 (13) obj. -47.2591 iterations 12
Cbc0038I Pass  37: suminf.    1.20682 (7) obj. -47.2591 iterations 8
Cbc0038I Pass  38: suminf.    1.27448 (4) obj. -47.2591 iterations 5
Cbc0038I Pass  39: suminf.    1.21619 (3) obj. -47.2591 iterations 1
Cbc0038I Pass  40: suminf.    0.54391 (2) obj. -47.2591 iterations 2
Cbc0038I Pass  41: suminf.    0.84476 (2) obj. -54.7802 iterations 2
Cbc0038I Pass  42: suminf.    1.63536 (5) obj. -47.2591 iterations 4
Cbc0038I Pass  43: suminf.    0.70482 (2) obj. -47.2591 iterations 3
Cbc0038I Pass  44: suminf.    0.54391 (2) obj. -47.2591 iterations 3
Cbc0038I Pass  45: suminf.    0.67359 (3) obj. -47.2591 iterations 2
Cbc0038I Pass  46: suminf.    2.07881 (8) obj. -47.2591 iterations 9
Cbc0038I Pass  47: suminf.    1.91435 (7) obj. -47.2591 iterations 2
Cbc0038I Pass  48: suminf.    1.27448 (4) obj. -47.2591 iterations 5
Cbc0038I Pass  49: suminf.    1.21619 (3) obj. -47.2591 iterations 1
Cbc0038I Pass  50: suminf.    0.54391 (2) obj. -47.2591 iterations 2
Cbc0038I Pass  51: suminf.    0.84476 (2) obj. -54.7802 iterations 2
Cbc0038I Pass  52: suminf.    2.04860 (7) obj. -47.2591 iterations 6
Cbc0038I Pass  53: suminf.    1.01398 (5) obj. -47.2591 iterations 6
Cbc0038I Pass  54: suminf.    0.16415 (4) obj. -47.2591 iterations 3
Cbc0038I Pass  55: suminf.    0.29637 (3) obj. -47.7198 iterations 2
Cbc0038I Pass  56: suminf.    0.27078 (3) obj. -47.2591 iterations 2
Cbc0038I Pass  57: suminf.    1.92190 (8) obj. -47.2591 iterations 7
Cbc0038I Pass  58: suminf.    1.21014 (5) obj. -47.2591 iterations 4
Cbc0038I Pass  59: suminf.    0.58829 (5) obj. -47.2591 iterations 3
Cbc0038I Pass  60: suminf.    3.10487 (8) obj. -47.2591 iterations 11
Cbc0038I Pass  61: suminf.    2.65222 (7) obj. -47.2591 iterations 1
Cbc0038I Rounding solution of -58 is better than previous of -25

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 35 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -72.649
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.84946 (18) obj. -72.649 iterations 3
Cbc0038I Pass  62: suminf.    2.83959 (10) obj. -72.649 iterations 9
Cbc0038I Pass  63: suminf.    2.49338 (9) obj. -72.649 iterations 2
Cbc0038I Pass  64: suminf.    2.49338 (9) obj. -72.649 iterations 0
Cbc0038I Pass  65: suminf.    1.68322 (5) obj. -72.649 iterations 16
Cbc0038I Pass  66: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  67: suminf.    1.95496 (5) obj. -72.649 iterations 4
Cbc0038I Pass  68: suminf.    1.68322 (5) obj. -72.649 iterations 1
Cbc0038I Pass  69: suminf.    3.37914 (9) obj. -72.649 iterations 4
Cbc0038I Pass  70: suminf.    3.06585 (7) obj. -72.649 iterations 3
Cbc0038I Pass  71: suminf.    1.68322 (5) obj. -72.649 iterations 5
Cbc0038I Pass  72: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  73: suminf.    1.95496 (5) obj. -72.649 iterations 4
Cbc0038I Pass  74: suminf.    1.68322 (5) obj. -72.649 iterations 1
Cbc0038I Pass  75: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  76: suminf.    2.73010 (9) obj. -72.649 iterations 6
Cbc0038I Pass  77: suminf.    1.83956 (5) obj. -72.649 iterations 6
Cbc0038I Pass  78: suminf.    1.68322 (5) obj. -72.649 iterations 4
Cbc0038I Pass  79: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  80: suminf.    1.95496 (5) obj. -72.649 iterations 4
Cbc0038I Pass  81: suminf.    1.68322 (5) obj. -72.649 iterations 1
Cbc0038I Pass  82: suminf.    3.19909 (9) obj. -72.649 iterations 7
Cbc0038I Pass  83: suminf.    2.67216 (7) obj. -72.649 iterations 2
Cbc0038I Pass  84: suminf.    1.68322 (5) obj. -72.649 iterations 5
Cbc0038I Pass  85: suminf.    1.68322 (5) obj. -72.649 iterations 0
Cbc0038I Pass  86: suminf.    1.95496 (5) obj. -72.649 iterations 4
Cbc0038I Pass  87: suminf.    1.68322 (5) obj. -72.649 iterations 1
Cbc0038I Pass  88: suminf.    5.11112 (13) obj. -72.649 iterations 12
Cbc0038I Pass  89: suminf.    3.99115 (9) obj. -72.649 iterations 6
Cbc0038I Pass  90: suminf.    3.99115 (9) obj. -72.649 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 35 columns, reduced to 26 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -58 - took 0.05 seconds
Cbc0012I Integer solution of -58 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -104.49688 to -104.49688 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -58, took 0 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

