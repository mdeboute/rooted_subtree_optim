Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 33 (-2) columns and 170 (-25) elements
Clp1000I sum of infeasibilities 0.000268505 - average 4.79473e-06, 1 fixed columns
Coin0506I Presolve 55 (-1) rows, 32 (-1) columns and 166 (-4) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Coin0511I After Postsolve, objective 94.30797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Coin0511I After Postsolve, objective 94.30797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.30797019 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.45927
Cbc0038I Solution found of 20.3069
Cbc0038I Relaxing continuous gives 0.54467
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 0.54467 to -40.6408 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.9426
Cbc0038I Pass   1: suminf.    3.07924 (11) obj. -45.9426 iterations 24
Cbc0038I Pass   2: suminf.    0.97617 (4) obj. -45.9426 iterations 12
Cbc0038I Pass   3: suminf.    0.81249 (4) obj. -45.9426 iterations 2
Cbc0038I Pass   4: suminf.    0.53634 (4) obj. -45.9426 iterations 2
Cbc0038I Pass   5: suminf.    0.99469 (3) obj. -45.9426 iterations 2
Cbc0038I Pass   6: suminf.    0.70860 (3) obj. -45.9426 iterations 2
Cbc0038I Pass   7: suminf.    1.10543 (3) obj. -45.9426 iterations 3
Cbc0038I Pass   8: suminf.    1.87342 (6) obj. -45.9426 iterations 6
Cbc0038I Pass   9: suminf.    1.32303 (5) obj. -45.9426 iterations 7
Cbc0038I Pass  10: suminf.    0.57430 (3) obj. -45.9426 iterations 8
Cbc0038I Pass  11: suminf.    0.57430 (3) obj. -45.9426 iterations 0
Cbc0038I Pass  12: suminf.    1.09738 (3) obj. -45.9426 iterations 3
Cbc0038I Pass  13: suminf.    1.04122 (4) obj. -45.9426 iterations 1
Cbc0038I Pass  14: suminf.    0.69371 (2) obj. -45.9426 iterations 7
Cbc0038I Pass  15: suminf.    0.69371 (2) obj. -45.9426 iterations 0
Cbc0038I Pass  16: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  17: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  18: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I Pass  19: suminf.    0.34723 (3) obj. -45.9426 iterations 4
Cbc0038I Pass  20: suminf.    0.94977 (3) obj. -45.9426 iterations 5
Cbc0038I Pass  21: suminf.    0.69371 (2) obj. -45.9426 iterations 1
Cbc0038I Pass  22: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  23: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  24: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I Pass  25: suminf.    0.34723 (3) obj. -45.9426 iterations 4
Cbc0038I Pass  26: suminf.    0.94977 (3) obj. -45.9426 iterations 5
Cbc0038I Pass  27: suminf.    0.69371 (2) obj. -45.9426 iterations 1
Cbc0038I Pass  28: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  29: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  30: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.6408 - took 0.06 seconds
Cbc0012I Integer solution of -40.64084 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 56 rows 33 columns, reduced to 41 rows 24 columns
Cbc0031I 16 added rows had average density of 20.8125
Cbc0013I At root node, 16 cuts changed objective from -93.657503 to -70.577984 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2849 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1259 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.714 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.64084 best solution, best possible -70.577984 (1.55 seconds)
Cbc0012I Integer solution of -41.21939 found by DiveCoefficient after 3774 iterations and 3 nodes (1.60 seconds)
Cbc0012I Integer solution of -41.38704 found by DiveCoefficient after 3953 iterations and 4 nodes (1.61 seconds)
Cbc0012I Integer solution of -43.75301 found by DiveCoefficient after 4399 iterations and 14 nodes (1.63 seconds)
Cbc0001I Search completed - best objective -43.75301000000002, took 4452 iterations and 18 nodes (1.63 seconds)
Cbc0032I Strong branching done 234 times (2961 iterations), fathomed 0 nodes and fixed 19 variables
Cbc0035I Maximum depth 5, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-17) rows, 59 (-7) columns and 600 (-123) elements
Clp1000I sum of infeasibilities 1.11906e-08 - average 2.19424e-10, 4 fixed columns
Coin0506I Presolve 48 (-3) rows, 55 (-4) columns and 532 (-68) elements
Clp0006I 0  Obj 82.181243 Dual inf 9.0630865 (55)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.8861964 - largest nonzero change 2.9019889e-05 ( 0.0023005115%) - largest zero change 2.2820896e-05
Clp0000I Optimal - objective value 104.43764
Clp0000I Optimal - objective value 104.43764
Coin0511I After Postsolve, objective 104.43764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 104.43764
Clp0000I Optimal - objective value 104.43764
Clp0000I Optimal - objective value 104.43764
Clp0000I Optimal - objective value 104.43764
Coin0511I After Postsolve, objective 104.43764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.4376429 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 59 columns (59 integer (59 of which binary)) and 604 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.862%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 7.51112
Cbc0038I Pass   1: suminf.    0.41414 (10) obj. -24.4613 iterations 10
Cbc0038I Pass   2: suminf.    0.41414 (10) obj. -24.4613 iterations 1
Cbc0038I Solution found of 6.22127
Cbc0038I Rounding solution of -25.7839 is better than previous of 6.22127

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 59 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -25.7839 to -34.769 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.3554
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.26421 (19) obj. -41.3554 iterations 1
Cbc0038I Pass   4: suminf.    1.26421 (19) obj. -41.3554 iterations 0
Cbc0038I Pass   5: suminf.    0.97131 (6) obj. -41.3554 iterations 15
Cbc0038I Pass   6: suminf.    0.46742 (6) obj. -41.3554 iterations 9
Cbc0038I Pass   7: suminf.    1.69332 (6) obj. -41.3554 iterations 8
Cbc0038I Pass   8: suminf.    1.13339 (3) obj. -41.3554 iterations 4
Cbc0038I Pass   9: suminf.    0.93342 (4) obj. -41.3554 iterations 4
Cbc0038I Pass  10: suminf.    0.90742 (3) obj. -41.3554 iterations 1
Cbc0038I Pass  11: suminf.    1.15506 (5) obj. -41.3554 iterations 5
Cbc0038I Pass  12: suminf.    1.68452 (9) obj. -41.3554 iterations 11
Cbc0038I Pass  13: suminf.    1.35562 (6) obj. -41.3554 iterations 2
Cbc0038I Pass  14: suminf.    0.86571 (4) obj. -41.3554 iterations 9
Cbc0038I Pass  15: suminf.    0.56218 (3) obj. -42.7989 iterations 4
Cbc0038I Pass  16: suminf.    0.74263 (3) obj. -41.3554 iterations 4
Cbc0038I Pass  17: suminf.    1.70195 (8) obj. -41.3554 iterations 15
Cbc0038I Pass  18: suminf.    0.98073 (5) obj. -41.3554 iterations 4
Cbc0038I Pass  19: suminf.    0.88055 (5) obj. -45.1235 iterations 1
Cbc0038I Pass  20: suminf.    0.44934 (2) obj. -41.3554 iterations 6
Cbc0038I Pass  21: suminf.    0.40800 (2) obj. -41.7275 iterations 2
Cbc0038I Pass  22: suminf.    2.72036 (13) obj. -41.3554 iterations 13
Cbc0038I Pass  23: suminf.    2.72036 (13) obj. -41.3554 iterations 0
Cbc0038I Pass  24: suminf.    1.63909 (6) obj. -41.3554 iterations 11
Cbc0038I Pass  25: suminf.    1.11132 (5) obj. -41.3554 iterations 4
Cbc0038I Pass  26: suminf.    1.19911 (5) obj. -41.3554 iterations 3
Cbc0038I Pass  27: suminf.    3.85160 (15) obj. -41.3554 iterations 22
Cbc0038I Pass  28: suminf.    3.50213 (15) obj. -41.3554 iterations 3
Cbc0038I Pass  29: suminf.    1.38029 (6) obj. -41.3554 iterations 15
Cbc0038I Pass  30: suminf.    1.31838 (5) obj. -41.3554 iterations 3
Cbc0038I Pass  31: suminf.    1.59479 (6) obj. -41.3554 iterations 2
Cbc0038I Pass  32: suminf.    1.53245 (5) obj. -41.3554 iterations 2
Cbc0038I Rounding solution of -40.9367 is better than previous of -34.769

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 59 columns, reduced to 39 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -53.2106
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.44295 (19) obj. -53.2106 iterations 0
Cbc0038I Pass  33: suminf.    1.44295 (19) obj. -53.2106 iterations 0
Cbc0038I Pass  34: suminf.    1.17432 (5) obj. -53.2106 iterations 22
Cbc0038I Pass  35: suminf.    1.17432 (5) obj. -53.2106 iterations 0
Cbc0038I Pass  36: suminf.    1.71199 (6) obj. -53.2106 iterations 4
Cbc0038I Pass  37: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  38: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  39: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  40: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  41: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I Pass  42: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  43: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  44: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  45: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  46: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I Pass  47: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  48: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  49: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  50: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  51: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I Pass  52: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  53: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  54: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  55: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  56: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I Pass  57: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  58: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  59: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  60: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  61: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 59 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.9367 - took 0.03 seconds
Cbc0012I Integer solution of -40.93668 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 59 columns, reduced to 6 rows 8 columns
Cbc0031I 29 added rows had average density of 16.931034
Cbc0013I At root node, 29 cuts changed objective from -100.63142 to -53.831097 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2342 row cuts average 4.6 elements, 5 column cuts (5 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 590 row cuts average 47.6 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 418 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.93668 best solution, best possible -53.831097 (1.40 seconds)
Cbc0012I Integer solution of -41.38704 found by rounding after 1704 iterations and 1 nodes (1.42 seconds)
Cbc0012I Integer solution of -43.75301 found by rounding after 2040 iterations and 7 nodes (1.50 seconds)
Cbc0001I Search completed - best objective -43.75301000000002, took 2231 iterations and 12 nodes (1.52 seconds)
Cbc0032I Strong branching done 206 times (2601 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.53

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-13) rows, 33 (-2) columns and 170 (-25) elements
Clp1000I sum of infeasibilities 0.000268505 - average 4.79473e-06, 1 fixed columns
Coin0506I Presolve 55 (-1) rows, 32 (-1) columns and 166 (-4) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Coin0511I After Postsolve, objective 94.30797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Clp0000I Optimal - objective value 94.30797
Coin0511I After Postsolve, objective 94.30797, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.30797019 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.623%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 7.45927
Cbc0038I Solution found of 20.3069
Cbc0038I Relaxing continuous gives 0.54467
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound improved solution from 0.54467 to -40.6408 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.9426
Cbc0038I Pass   1: suminf.    3.07924 (11) obj. -45.9426 iterations 24
Cbc0038I Pass   2: suminf.    0.97617 (4) obj. -45.9426 iterations 12
Cbc0038I Pass   3: suminf.    0.81249 (4) obj. -45.9426 iterations 2
Cbc0038I Pass   4: suminf.    0.53634 (4) obj. -45.9426 iterations 2
Cbc0038I Pass   5: suminf.    0.99469 (3) obj. -45.9426 iterations 2
Cbc0038I Pass   6: suminf.    0.70860 (3) obj. -45.9426 iterations 2
Cbc0038I Pass   7: suminf.    1.10543 (3) obj. -45.9426 iterations 3
Cbc0038I Pass   8: suminf.    1.87342 (6) obj. -45.9426 iterations 6
Cbc0038I Pass   9: suminf.    1.32303 (5) obj. -45.9426 iterations 7
Cbc0038I Pass  10: suminf.    0.57430 (3) obj. -45.9426 iterations 8
Cbc0038I Pass  11: suminf.    0.57430 (3) obj. -45.9426 iterations 0
Cbc0038I Pass  12: suminf.    1.09738 (3) obj. -45.9426 iterations 3
Cbc0038I Pass  13: suminf.    1.04122 (4) obj. -45.9426 iterations 1
Cbc0038I Pass  14: suminf.    0.69371 (2) obj. -45.9426 iterations 7
Cbc0038I Pass  15: suminf.    0.69371 (2) obj. -45.9426 iterations 0
Cbc0038I Pass  16: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  17: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  18: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I Pass  19: suminf.    0.34723 (3) obj. -45.9426 iterations 4
Cbc0038I Pass  20: suminf.    0.94977 (3) obj. -45.9426 iterations 5
Cbc0038I Pass  21: suminf.    0.69371 (2) obj. -45.9426 iterations 1
Cbc0038I Pass  22: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  23: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  24: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I Pass  25: suminf.    0.34723 (3) obj. -45.9426 iterations 4
Cbc0038I Pass  26: suminf.    0.94977 (3) obj. -45.9426 iterations 5
Cbc0038I Pass  27: suminf.    0.69371 (2) obj. -45.9426 iterations 1
Cbc0038I Pass  28: suminf.    0.63302 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  29: suminf.    1.67667 (4) obj. -45.9426 iterations 5
Cbc0038I Pass  30: suminf.    1.26081 (3) obj. -45.9426 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 33 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.6408 - took 0.03 seconds
Cbc0012I Integer solution of -40.64084 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 56 rows 33 columns, reduced to 41 rows 24 columns
Cbc0031I 16 added rows had average density of 20.8125
Cbc0013I At root node, 16 cuts changed objective from -93.657503 to -70.577984 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2849 row cuts average 3.8 elements, 1 column cuts (1 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1259 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 89 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 61 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.709 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.64084 best solution, best possible -70.577984 (1.50 seconds)
Cbc0012I Integer solution of -41.21939 found by DiveCoefficient after 3774 iterations and 3 nodes (1.56 seconds)
Cbc0012I Integer solution of -41.38704 found by DiveCoefficient after 3953 iterations and 4 nodes (1.57 seconds)
Cbc0012I Integer solution of -43.75301 found by DiveCoefficient after 4399 iterations and 14 nodes (1.59 seconds)
Cbc0001I Search completed - best objective -43.75301000000002, took 4452 iterations and 18 nodes (1.59 seconds)
Cbc0032I Strong branching done 234 times (2961 iterations), fathomed 0 nodes and fixed 19 variables
Cbc0035I Maximum depth 5, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.08   (Wallclock seconds):       1.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-18) rows, 59 (-8) columns and 600 (-124) elements
Clp1000I sum of infeasibilities 1.11906e-08 - average 2.19424e-10, 4 fixed columns
Coin0506I Presolve 48 (-3) rows, 55 (-4) columns and 532 (-68) elements
Clp0006I 0  Obj 82.181243 Dual inf 9.0630865 (55)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 1.8861964 - largest nonzero change 2.9019889e-05 ( 0.0023005115%) - largest zero change 2.2820896e-05
Clp0000I Optimal - objective value 104.43764
Clp0000I Optimal - objective value 104.43764
Coin0511I After Postsolve, objective 104.43764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 104.43764
Clp0000I Optimal - objective value 104.43764
Clp0000I Optimal - objective value 104.43764
Clp0000I Optimal - objective value 104.43764
Coin0511I After Postsolve, objective 104.43764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 104.4376429 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 59 columns (59 integer (59 of which binary)) and 604 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.862%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 7.51112
Cbc0038I Pass   1: suminf.    0.41414 (10) obj. -24.4613 iterations 10
Cbc0038I Pass   2: suminf.    0.41414 (10) obj. -24.4613 iterations 1
Cbc0038I Solution found of 6.22127
Cbc0038I Rounding solution of -25.7839 is better than previous of 6.22127

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 59 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -25.7839 to -34.769 (0.02 seconds)
Cbc0038I Round again with cutoff of -41.3554
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.26421 (19) obj. -41.3554 iterations 1
Cbc0038I Pass   4: suminf.    1.26421 (19) obj. -41.3554 iterations 0
Cbc0038I Pass   5: suminf.    0.97131 (6) obj. -41.3554 iterations 15
Cbc0038I Pass   6: suminf.    0.46742 (6) obj. -41.3554 iterations 9
Cbc0038I Pass   7: suminf.    1.69332 (6) obj. -41.3554 iterations 8
Cbc0038I Pass   8: suminf.    1.13339 (3) obj. -41.3554 iterations 4
Cbc0038I Pass   9: suminf.    0.93342 (4) obj. -41.3554 iterations 4
Cbc0038I Pass  10: suminf.    0.90742 (3) obj. -41.3554 iterations 1
Cbc0038I Pass  11: suminf.    1.15506 (5) obj. -41.3554 iterations 5
Cbc0038I Pass  12: suminf.    1.68452 (9) obj. -41.3554 iterations 11
Cbc0038I Pass  13: suminf.    1.35562 (6) obj. -41.3554 iterations 2
Cbc0038I Pass  14: suminf.    0.86571 (4) obj. -41.3554 iterations 9
Cbc0038I Pass  15: suminf.    0.56218 (3) obj. -42.7989 iterations 4
Cbc0038I Pass  16: suminf.    0.74263 (3) obj. -41.3554 iterations 4
Cbc0038I Pass  17: suminf.    1.70195 (8) obj. -41.3554 iterations 15
Cbc0038I Pass  18: suminf.    0.98073 (5) obj. -41.3554 iterations 4
Cbc0038I Pass  19: suminf.    0.88055 (5) obj. -45.1235 iterations 1
Cbc0038I Pass  20: suminf.    0.44934 (2) obj. -41.3554 iterations 6
Cbc0038I Pass  21: suminf.    0.40800 (2) obj. -41.7275 iterations 2
Cbc0038I Pass  22: suminf.    2.72036 (13) obj. -41.3554 iterations 13
Cbc0038I Pass  23: suminf.    2.72036 (13) obj. -41.3554 iterations 0
Cbc0038I Pass  24: suminf.    1.63909 (6) obj. -41.3554 iterations 11
Cbc0038I Pass  25: suminf.    1.11132 (5) obj. -41.3554 iterations 4
Cbc0038I Pass  26: suminf.    1.19911 (5) obj. -41.3554 iterations 3
Cbc0038I Pass  27: suminf.    3.85160 (15) obj. -41.3554 iterations 22
Cbc0038I Pass  28: suminf.    3.50213 (15) obj. -41.3554 iterations 3
Cbc0038I Pass  29: suminf.    1.38029 (6) obj. -41.3554 iterations 15
Cbc0038I Pass  30: suminf.    1.31838 (5) obj. -41.3554 iterations 3
Cbc0038I Pass  31: suminf.    1.59479 (6) obj. -41.3554 iterations 2
Cbc0038I Pass  32: suminf.    1.53245 (5) obj. -41.3554 iterations 2
Cbc0038I Rounding solution of -40.9367 is better than previous of -34.769

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 59 columns, reduced to 39 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -53.2106
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.44295 (19) obj. -53.2106 iterations 0
Cbc0038I Pass  33: suminf.    1.44295 (19) obj. -53.2106 iterations 0
Cbc0038I Pass  34: suminf.    1.17432 (5) obj. -53.2106 iterations 22
Cbc0038I Pass  35: suminf.    1.17432 (5) obj. -53.2106 iterations 0
Cbc0038I Pass  36: suminf.    1.71199 (6) obj. -53.2106 iterations 4
Cbc0038I Pass  37: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  38: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  39: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  40: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  41: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I Pass  42: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  43: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  44: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  45: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  46: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I Pass  47: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  48: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  49: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  50: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  51: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I Pass  52: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  53: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  54: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  55: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  56: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I Pass  57: suminf.    1.52402 (4) obj. -53.2106 iterations 3
Cbc0038I Pass  58: suminf.    1.17226 (4) obj. -53.2106 iterations 1
Cbc0038I Pass  59: suminf.    1.47605 (6) obj. -53.2106 iterations 6
Cbc0038I Pass  60: suminf.    1.47205 (4) obj. -53.2106 iterations 2
Cbc0038I Pass  61: suminf.    1.71199 (6) obj. -53.2106 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 59 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.9367 - took 0.03 seconds
Cbc0012I Integer solution of -40.93668 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 51 rows 59 columns, reduced to 6 rows 8 columns
Cbc0031I 29 added rows had average density of 16.931034
Cbc0013I At root node, 29 cuts changed objective from -100.63142 to -53.831097 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2342 row cuts average 4.6 elements, 5 column cuts (5 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 590 row cuts average 47.6 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 22 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 418 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 237 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 38 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.650 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.93668 best solution, best possible -53.831097 (1.42 seconds)
Cbc0012I Integer solution of -41.38704 found by rounding after 1704 iterations and 1 nodes (1.44 seconds)
Cbc0012I Integer solution of -43.75301 found by rounding after 2040 iterations and 7 nodes (1.51 seconds)
Cbc0001I Search completed - best objective -43.75301000000002, took 2231 iterations and 12 nodes (1.54 seconds)
Cbc0032I Strong branching done 206 times (2601 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.54

