Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 49 (-61) rows, 27 (-29) columns and 98 (-171) elements
Clp0000I Optimal - objective value 2874.3861
Coin0511I After Postsolve, objective 2874.3861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2874.386089 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 49 rows, 27 columns (26 integer (26 of which binary)) and 98 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.300%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 8.3704
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 475 iterations 26
Cbc0038I Solution found of 475
Cbc0038I Relaxing continuous gives 475
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 27 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 475 to -1475 (0.01 seconds)
Cbc0038I Round again with cutoff of -1615.84
Cbc0038I Pass   2: suminf.    0.62983 (4) obj. -1615.84 iterations 10
Cbc0038I Pass   3: suminf.    0.03275 (1) obj. -1615.84 iterations 6
Cbc0038I Pass   4: suminf.    0.25258 (2) obj. -1615.84 iterations 2
Cbc0038I Pass   5: suminf.    0.25258 (2) obj. -1615.84 iterations 6
Cbc0038I Pass   6: suminf.    0.92781 (4) obj. -1615.84 iterations 10
Cbc0038I Pass   7: suminf.    0.03275 (1) obj. -1615.84 iterations 6
Cbc0038I Pass   8: suminf.    0.21838 (1) obj. -1615.84 iterations 2
Cbc0038I Pass   9: suminf.    0.55659 (4) obj. -1615.84 iterations 3
Cbc0038I Pass  10: suminf.    0.08495 (2) obj. -1615.84 iterations 2
Cbc0038I Pass  11: suminf.    1.34043 (13) obj. -1615.84 iterations 11
Cbc0038I Pass  12: suminf.    0.84668 (7) obj. -1615.84 iterations 8
Cbc0038I Pass  13: suminf.    2.15719 (8) obj. -1615.84 iterations 11
Cbc0038I Pass  14: suminf.    2.09625 (7) obj. -1615.84 iterations 1
Cbc0038I Pass  15: suminf.    2.20701 (6) obj. -1615.84 iterations 9
Cbc0038I Pass  16: suminf.    1.89483 (7) obj. -1615.84 iterations 5
Cbc0038I Pass  17: suminf.    2.01375 (10) obj. -1615.84 iterations 11
Cbc0038I Pass  18: suminf.    1.96227 (9) obj. -1615.84 iterations 2
Cbc0038I Pass  19: suminf.    2.05648 (5) obj. -1615.84 iterations 10
Cbc0038I Pass  20: suminf.    1.85548 (5) obj. -1615.84 iterations 2
Cbc0038I Pass  21: suminf.    1.80947 (9) obj. -1615.84 iterations 8
Cbc0038I Pass  22: suminf.    0.50863 (4) obj. -1615.84 iterations 10
Cbc0038I Pass  23: suminf.    0.50863 (4) obj. -1615.84 iterations 0
Cbc0038I Pass  24: suminf.    1.99190 (8) obj. -1615.84 iterations 7
Cbc0038I Pass  25: suminf.    1.98103 (7) obj. -1615.84 iterations 1
Cbc0038I Pass  26: suminf.    2.10080 (5) obj. -1615.84 iterations 9
Cbc0038I Pass  27: suminf.    1.85548 (5) obj. -1615.84 iterations 4
Cbc0038I Pass  28: suminf.    1.80947 (9) obj. -1615.84 iterations 8
Cbc0038I Pass  29: suminf.    0.50863 (4) obj. -1615.84 iterations 10
Cbc0038I Pass  30: suminf.    0.50863 (4) obj. -1615.84 iterations 0
Cbc0038I Pass  31: suminf.    1.99190 (8) obj. -1615.84 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 27 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -1475 - took 0.03 seconds
Cbc0012I Integer solution of -1475 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 49 rows 27 columns, reduced to 28 rows 16 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -2874.3861 to -2874.3861 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1475, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-63) rows, 49 (-59) columns and 358 (-1342) elements
Clp1000I sum of infeasibilities 8.7578e-06 - average 1.90387e-07, 19 fixed columns
Coin0506I Presolve 20 (-26) rows, 21 (-28) columns and 83 (-275) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 6230.8286
Clp0000I Optimal - objective value 6230.8286
Coin0511I After Postsolve, objective 6230.8286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9012934 - largest nonzero change 2.9757159e-05 ( 0.0021710699%) - largest zero change 2.7540308e-05
Clp0000I Optimal - objective value 6230.8286
Clp0000I Optimal - objective value 6230.8286
Clp0000I Optimal - objective value 6230.8286
Coin0511I After Postsolve, objective 6230.8286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6230.828593 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0004I processed model has 46 rows, 49 columns (49 integer (49 of which binary)) and 358 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.442%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 9.22751
Cbc0038I Pass   1: suminf.    1.38690 (4) obj. 438.393 iterations 23
Cbc0038I Pass   2: suminf.    1.38690 (4) obj. 438.393 iterations 0
Cbc0038I Solution found of 1075
Cbc0038I Rounding solution of 1050 is better than previous of 1075

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 49 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 1050 to -875 (0.01 seconds)
Cbc0038I Round again with cutoff of -1191.63
Cbc0038I Pass   3: suminf.    2.47163 (6) obj. -1191.63 iterations 1
Cbc0038I Pass   4: suminf.    0.26386 (1) obj. -1191.63 iterations 8
Cbc0038I Pass   5: suminf.    0.26386 (1) obj. -1191.63 iterations 0
Cbc0038I Pass   6: suminf.    0.30769 (1) obj. -1244.23 iterations 1
Cbc0038I Pass   7: suminf.    0.68269 (2) obj. -1431.73 iterations 8
Cbc0038I Pass   8: suminf.    0.33859 (2) obj. -1191.63 iterations 7
Cbc0038I Pass   9: suminf.    0.80769 (2) obj. -1531.73 iterations 2
Cbc0038I Pass  10: suminf.    0.52427 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  11: suminf.    0.33859 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  12: suminf.    2.21579 (7) obj. -1191.63 iterations 8
Cbc0038I Pass  13: suminf.    0.52427 (2) obj. -1191.63 iterations 7
Cbc0038I Pass  14: suminf.    0.36379 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  15: suminf.    0.36379 (2) obj. -1191.63 iterations 0
Cbc0038I Pass  16: suminf.    0.76923 (2) obj. -1485.58 iterations 2
Cbc0038I Pass  17: suminf.    1.82598 (5) obj. -1191.63 iterations 7
Cbc0038I Pass  18: suminf.    1.24581 (3) obj. -1191.63 iterations 5
Cbc0038I Pass  19: suminf.    0.62844 (2) obj. -1191.63 iterations 2
Cbc0038I Pass  20: suminf.    0.48580 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  21: suminf.    0.48580 (2) obj. -1191.63 iterations 0
Cbc0038I Pass  22: suminf.    0.84615 (2) obj. -1452.88 iterations 2
Cbc0038I Pass  23: suminf.    1.95125 (7) obj. -1191.63 iterations 15
Cbc0038I Pass  24: suminf.    0.53620 (2) obj. -1191.63 iterations 6
Cbc0038I Pass  25: suminf.    0.76923 (2) obj. -1360.58 iterations 2
Cbc0038I Pass  26: suminf.    0.62844 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  27: suminf.    0.53620 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  28: suminf.    4.23978 (21) obj. -1191.63 iterations 20
Cbc0038I Pass  29: suminf.    1.63086 (6) obj. -1191.63 iterations 5
Cbc0038I Pass  30: suminf.    1.25216 (4) obj. -1191.63 iterations 5
Cbc0038I Pass  31: suminf.    1.00048 (4) obj. -1304.88 iterations 2
Cbc0038I Pass  32: suminf.    1.25216 (4) obj. -1191.63 iterations 1
Cbc0038I Rounding solution of -900 is better than previous of -875

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 49 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1716.56
Cbc0038I Pass  32: suminf.    2.49891 (6) obj. -1716.56 iterations 0
Cbc0038I Pass  33: suminf.    0.96459 (3) obj. -1716.56 iterations 10
Cbc0038I Pass  34: suminf.    0.96459 (3) obj. -1716.56 iterations 0
Cbc0038I Pass  35: suminf.    0.97355 (3) obj. -1716.56 iterations 1
Cbc0038I Pass  36: suminf.    0.96459 (3) obj. -1716.56 iterations 1
Cbc0038I Pass  37: suminf.    1.41043 (4) obj. -1716.56 iterations 5
Cbc0038I Pass  38: suminf.    1.02778 (3) obj. -1716.56 iterations 3
Cbc0038I Pass  39: suminf.    1.03036 (3) obj. -1716.56 iterations 1
Cbc0038I Pass  40: suminf.    1.02778 (3) obj. -1716.56 iterations 1
Cbc0038I Pass  41: suminf.    1.65782 (5) obj. -1716.56 iterations 13
Cbc0038I Pass  42: suminf.    1.40511 (5) obj. -1716.56 iterations 6
Cbc0038I Pass  43: suminf.    1.43863 (5) obj. -1716.56 iterations 1
Cbc0038I Pass  44: suminf.    1.40511 (5) obj. -1716.56 iterations 1
Cbc0038I Pass  45: suminf.    3.21725 (9) obj. -1716.56 iterations 9
Cbc0038I Pass  46: suminf.    1.81487 (5) obj. -1716.56 iterations 5
Cbc0038I Pass  47: suminf.    1.36844 (4) obj. -1716.56 iterations 3
Cbc0038I Pass  48: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  49: suminf.    1.37673 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  50: suminf.    1.36844 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  51: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  52: suminf.    1.36844 (4) obj. -1716.56 iterations 2
Cbc0038I Pass  53: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  54: suminf.    1.37673 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  55: suminf.    1.36844 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  56: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  57: suminf.    1.36844 (4) obj. -1716.56 iterations 2
Cbc0038I Pass  58: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  59: suminf.    1.37673 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  60: suminf.    1.36844 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  61: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 49 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -900 - took 0.01 seconds
Cbc0012I Integer solution of -900 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -1475 found by DiveCoefficient after 26 iterations and 0 nodes (0.03 seconds)
Cbc0013I At root node, 0 cuts changed objective from -3816.2887 to -1475 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1475, took 26 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 49 (-61) rows, 27 (-29) columns and 98 (-171) elements
Clp0000I Optimal - objective value 2874.3861
Coin0511I After Postsolve, objective 2874.3861, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2874.386089 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 49 rows, 27 columns (26 integer (26 of which binary)) and 98 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.300%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 8.3704
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 475 iterations 26
Cbc0038I Solution found of 475
Cbc0038I Relaxing continuous gives 475
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 27 columns, reduced to 28 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 475 to -1475 (0.01 seconds)
Cbc0038I Round again with cutoff of -1615.84
Cbc0038I Pass   2: suminf.    0.62983 (4) obj. -1615.84 iterations 10
Cbc0038I Pass   3: suminf.    0.03275 (1) obj. -1615.84 iterations 6
Cbc0038I Pass   4: suminf.    0.25258 (2) obj. -1615.84 iterations 2
Cbc0038I Pass   5: suminf.    0.25258 (2) obj. -1615.84 iterations 6
Cbc0038I Pass   6: suminf.    0.92781 (4) obj. -1615.84 iterations 10
Cbc0038I Pass   7: suminf.    0.03275 (1) obj. -1615.84 iterations 6
Cbc0038I Pass   8: suminf.    0.21838 (1) obj. -1615.84 iterations 2
Cbc0038I Pass   9: suminf.    0.55659 (4) obj. -1615.84 iterations 3
Cbc0038I Pass  10: suminf.    0.08495 (2) obj. -1615.84 iterations 2
Cbc0038I Pass  11: suminf.    1.34043 (13) obj. -1615.84 iterations 11
Cbc0038I Pass  12: suminf.    0.84668 (7) obj. -1615.84 iterations 8
Cbc0038I Pass  13: suminf.    2.15719 (8) obj. -1615.84 iterations 11
Cbc0038I Pass  14: suminf.    2.09625 (7) obj. -1615.84 iterations 1
Cbc0038I Pass  15: suminf.    2.20701 (6) obj. -1615.84 iterations 9
Cbc0038I Pass  16: suminf.    1.89483 (7) obj. -1615.84 iterations 5
Cbc0038I Pass  17: suminf.    2.01375 (10) obj. -1615.84 iterations 11
Cbc0038I Pass  18: suminf.    1.96227 (9) obj. -1615.84 iterations 2
Cbc0038I Pass  19: suminf.    2.05648 (5) obj. -1615.84 iterations 10
Cbc0038I Pass  20: suminf.    1.85548 (5) obj. -1615.84 iterations 2
Cbc0038I Pass  21: suminf.    1.80947 (9) obj. -1615.84 iterations 8
Cbc0038I Pass  22: suminf.    0.50863 (4) obj. -1615.84 iterations 10
Cbc0038I Pass  23: suminf.    0.50863 (4) obj. -1615.84 iterations 0
Cbc0038I Pass  24: suminf.    1.99190 (8) obj. -1615.84 iterations 7
Cbc0038I Pass  25: suminf.    1.98103 (7) obj. -1615.84 iterations 1
Cbc0038I Pass  26: suminf.    2.10080 (5) obj. -1615.84 iterations 9
Cbc0038I Pass  27: suminf.    1.85548 (5) obj. -1615.84 iterations 4
Cbc0038I Pass  28: suminf.    1.80947 (9) obj. -1615.84 iterations 8
Cbc0038I Pass  29: suminf.    0.50863 (4) obj. -1615.84 iterations 10
Cbc0038I Pass  30: suminf.    0.50863 (4) obj. -1615.84 iterations 0
Cbc0038I Pass  31: suminf.    1.99190 (8) obj. -1615.84 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 27 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -1475 - took 0.03 seconds
Cbc0012I Integer solution of -1475 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 49 rows 27 columns, reduced to 28 rows 16 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -2874.3861 to -2874.3861 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1475, took 0 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-64) rows, 49 (-60) columns and 358 (-1343) elements
Clp1000I sum of infeasibilities 8.7578e-06 - average 1.90387e-07, 19 fixed columns
Coin0506I Presolve 20 (-26) rows, 21 (-28) columns and 83 (-275) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 6230.8286
Clp0000I Optimal - objective value 6230.8286
Coin0511I After Postsolve, objective 6230.8286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9012934 - largest nonzero change 2.9757159e-05 ( 0.0021710699%) - largest zero change 2.7540308e-05
Clp0000I Optimal - objective value 6230.8286
Clp0000I Optimal - objective value 6230.8286
Clp0000I Optimal - objective value 6230.8286
Coin0511I After Postsolve, objective 6230.8286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 6230.828593 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 46 rows, 49 columns (49 integer (49 of which binary)) and 358 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.442%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 9.22751
Cbc0038I Pass   1: suminf.    1.38690 (4) obj. 438.393 iterations 23
Cbc0038I Pass   2: suminf.    1.38690 (4) obj. 438.393 iterations 0
Cbc0038I Solution found of 1075
Cbc0038I Rounding solution of 1050 is better than previous of 1075

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 49 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 1050 to -875 (0.01 seconds)
Cbc0038I Round again with cutoff of -1191.63
Cbc0038I Pass   3: suminf.    2.47163 (6) obj. -1191.63 iterations 1
Cbc0038I Pass   4: suminf.    0.26386 (1) obj. -1191.63 iterations 8
Cbc0038I Pass   5: suminf.    0.26386 (1) obj. -1191.63 iterations 0
Cbc0038I Pass   6: suminf.    0.30769 (1) obj. -1244.23 iterations 1
Cbc0038I Pass   7: suminf.    0.68269 (2) obj. -1431.73 iterations 8
Cbc0038I Pass   8: suminf.    0.33859 (2) obj. -1191.63 iterations 7
Cbc0038I Pass   9: suminf.    0.80769 (2) obj. -1531.73 iterations 2
Cbc0038I Pass  10: suminf.    0.52427 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  11: suminf.    0.33859 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  12: suminf.    2.21579 (7) obj. -1191.63 iterations 8
Cbc0038I Pass  13: suminf.    0.52427 (2) obj. -1191.63 iterations 7
Cbc0038I Pass  14: suminf.    0.36379 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  15: suminf.    0.36379 (2) obj. -1191.63 iterations 0
Cbc0038I Pass  16: suminf.    0.76923 (2) obj. -1485.58 iterations 2
Cbc0038I Pass  17: suminf.    1.82598 (5) obj. -1191.63 iterations 7
Cbc0038I Pass  18: suminf.    1.24581 (3) obj. -1191.63 iterations 5
Cbc0038I Pass  19: suminf.    0.62844 (2) obj. -1191.63 iterations 2
Cbc0038I Pass  20: suminf.    0.48580 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  21: suminf.    0.48580 (2) obj. -1191.63 iterations 0
Cbc0038I Pass  22: suminf.    0.84615 (2) obj. -1452.88 iterations 2
Cbc0038I Pass  23: suminf.    1.95125 (7) obj. -1191.63 iterations 15
Cbc0038I Pass  24: suminf.    0.53620 (2) obj. -1191.63 iterations 6
Cbc0038I Pass  25: suminf.    0.76923 (2) obj. -1360.58 iterations 2
Cbc0038I Pass  26: suminf.    0.62844 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  27: suminf.    0.53620 (2) obj. -1191.63 iterations 1
Cbc0038I Pass  28: suminf.    4.23978 (21) obj. -1191.63 iterations 20
Cbc0038I Pass  29: suminf.    1.63086 (6) obj. -1191.63 iterations 5
Cbc0038I Pass  30: suminf.    1.25216 (4) obj. -1191.63 iterations 5
Cbc0038I Pass  31: suminf.    1.00048 (4) obj. -1304.88 iterations 2
Cbc0038I Pass  32: suminf.    1.25216 (4) obj. -1191.63 iterations 1
Cbc0038I Rounding solution of -900 is better than previous of -875

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 49 columns, reduced to 17 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -1716.56
Cbc0038I Pass  32: suminf.    2.49891 (6) obj. -1716.56 iterations 0
Cbc0038I Pass  33: suminf.    0.96459 (3) obj. -1716.56 iterations 10
Cbc0038I Pass  34: suminf.    0.96459 (3) obj. -1716.56 iterations 0
Cbc0038I Pass  35: suminf.    0.97355 (3) obj. -1716.56 iterations 1
Cbc0038I Pass  36: suminf.    0.96459 (3) obj. -1716.56 iterations 1
Cbc0038I Pass  37: suminf.    1.41043 (4) obj. -1716.56 iterations 5
Cbc0038I Pass  38: suminf.    1.02778 (3) obj. -1716.56 iterations 3
Cbc0038I Pass  39: suminf.    1.03036 (3) obj. -1716.56 iterations 1
Cbc0038I Pass  40: suminf.    1.02778 (3) obj. -1716.56 iterations 1
Cbc0038I Pass  41: suminf.    1.65782 (5) obj. -1716.56 iterations 13
Cbc0038I Pass  42: suminf.    1.40511 (5) obj. -1716.56 iterations 6
Cbc0038I Pass  43: suminf.    1.43863 (5) obj. -1716.56 iterations 1
Cbc0038I Pass  44: suminf.    1.40511 (5) obj. -1716.56 iterations 1
Cbc0038I Pass  45: suminf.    3.21725 (9) obj. -1716.56 iterations 9
Cbc0038I Pass  46: suminf.    1.81487 (5) obj. -1716.56 iterations 5
Cbc0038I Pass  47: suminf.    1.36844 (4) obj. -1716.56 iterations 3
Cbc0038I Pass  48: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  49: suminf.    1.37673 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  50: suminf.    1.36844 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  51: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  52: suminf.    1.36844 (4) obj. -1716.56 iterations 2
Cbc0038I Pass  53: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  54: suminf.    1.37673 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  55: suminf.    1.36844 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  56: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  57: suminf.    1.36844 (4) obj. -1716.56 iterations 2
Cbc0038I Pass  58: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I Pass  59: suminf.    1.37673 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  60: suminf.    1.36844 (4) obj. -1716.56 iterations 1
Cbc0038I Pass  61: suminf.    1.36844 (4) obj. -1716.56 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 49 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -900 - took 0.01 seconds
Cbc0012I Integer solution of -900 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0012I Integer solution of -1475 found by DiveCoefficient after 26 iterations and 0 nodes (0.03 seconds)
Cbc0013I At root node, 0 cuts changed objective from -3816.2887 to -1475 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1475, took 26 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.03

