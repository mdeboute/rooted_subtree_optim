Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 274 (-29) elements
Clp1000I sum of infeasibilities 5.028e-05 - average 5.58667e-07, 2 fixed columns
Coin0506I Presolve 87 (-3) rows, 49 (-2) columns and 264 (-10) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 48.051029
Clp0000I Optimal - objective value 48.051029
Coin0511I After Postsolve, objective 48.051029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.051029
Clp0000I Optimal - objective value 48.051029
Clp0000I Optimal - objective value 48.051029
Coin0511I After Postsolve, objective 48.051029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.05102932 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.99732
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.82572 iterations 33
Cbc0038I Solution found of -2.82572
Cbc0038I Relaxing continuous gives -2.82572
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -2.82572 to -20.636 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.3776
Cbc0038I Pass   2: suminf.    1.74269 (7) obj. -23.3776 iterations 8
Cbc0038I Pass   3: suminf.    1.66573 (4) obj. -23.3776 iterations 1
Cbc0038I Pass   4: suminf.    0.78316 (3) obj. -23.3776 iterations 7
Cbc0038I Pass   5: suminf.    1.16104 (3) obj. -23.3776 iterations 6
Cbc0038I Pass   6: suminf.    1.16104 (3) obj. -23.3776 iterations 0
Cbc0038I Pass   7: suminf.    0.78316 (3) obj. -23.3776 iterations 7
Cbc0038I Pass   8: suminf.    2.21795 (7) obj. -23.3776 iterations 13
Cbc0038I Pass   9: suminf.    1.11159 (6) obj. -23.3776 iterations 8
Cbc0038I Pass  10: suminf.    1.16104 (3) obj. -23.3776 iterations 14
Cbc0038I Pass  11: suminf.    4.33915 (12) obj. -23.3776 iterations 15
Cbc0038I Pass  12: suminf.    2.82011 (8) obj. -23.3776 iterations 8
Cbc0038I Pass  13: suminf.    1.16260 (4) obj. -23.3776 iterations 12
Cbc0038I Pass  14: suminf.    0.96693 (3) obj. -23.3776 iterations 1
Cbc0038I Pass  15: suminf.    0.58648 (3) obj. -23.3776 iterations 5
Cbc0038I Pass  16: suminf.    0.58648 (3) obj. -23.3776 iterations 0
Cbc0038I Pass  17: suminf.    0.96693 (3) obj. -23.3776 iterations 4
Cbc0038I Pass  18: suminf.    2.02421 (6) obj. -23.3776 iterations 13
Cbc0038I Pass  19: suminf.    1.63029 (5) obj. -23.3776 iterations 5
Cbc0038I Pass  20: suminf.    0.60330 (2) obj. -23.3776 iterations 6
Cbc0038I Pass  21: suminf.    0.60330 (2) obj. -23.3776 iterations 0
Cbc0038I Pass  22: suminf.    0.52151 (2) obj. -23.3776 iterations 1
Cbc0038I Pass  23: suminf.    2.18268 (7) obj. -23.3776 iterations 15
Cbc0038I Pass  24: suminf.    1.11304 (5) obj. -23.3776 iterations 9
Cbc0038I Pass  25: suminf.    1.71255 (6) obj. -23.3776 iterations 6
Cbc0038I Pass  26: suminf.    0.80772 (3) obj. -23.3776 iterations 2
Cbc0038I Pass  27: suminf.    0.66579 (3) obj. -23.3776 iterations 4
Cbc0038I Pass  28: suminf.    0.50860 (2) obj. -23.3776 iterations 4
Cbc0038I Pass  29: suminf.    0.26451 (2) obj. -23.3776 iterations 1
Cbc0038I Pass  30: suminf.    0.81950 (3) obj. -23.3776 iterations 5
Cbc0038I Pass  31: suminf.    3.52780 (11) obj. -23.3776 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 82 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -20.636 to -21.9978 (0.07 seconds)
Cbc0038I Round again with cutoff of -28.3123
Cbc0038I Pass  31: suminf.    2.39922 (8) obj. -28.3123 iterations 2
Cbc0038I Pass  32: suminf.    1.27237 (6) obj. -28.3123 iterations 3
Cbc0038I Pass  33: suminf.    1.13292 (6) obj. -28.3123 iterations 3
Cbc0038I Pass  34: suminf.    1.05462 (4) obj. -28.3123 iterations 9
Cbc0038I Pass  35: suminf.    0.90152 (3) obj. -28.3123 iterations 3
Cbc0038I Pass  36: suminf.    0.90152 (3) obj. -28.3123 iterations 0
Cbc0038I Pass  37: suminf.    0.52021 (3) obj. -28.3123 iterations 7
Cbc0038I Pass  38: suminf.    0.52021 (3) obj. -28.3123 iterations 0
Cbc0038I Pass  39: suminf.    0.90152 (3) obj. -28.3123 iterations 6
Cbc0038I Pass  40: suminf.    1.87143 (7) obj. -28.3123 iterations 15
Cbc0038I Pass  41: suminf.    0.84215 (4) obj. -28.3123 iterations 5
Cbc0038I Pass  42: suminf.    0.83121 (3) obj. -28.3123 iterations 8
Cbc0038I Pass  43: suminf.    0.83121 (3) obj. -28.3123 iterations 0
Cbc0038I Pass  44: suminf.    1.21704 (3) obj. -28.3123 iterations 3
Cbc0038I Pass  45: suminf.    1.21704 (3) obj. -28.3123 iterations 0
Cbc0038I Pass  46: suminf.    0.83121 (3) obj. -28.3123 iterations 3
Cbc0038I Pass  47: suminf.    2.79757 (9) obj. -28.3123 iterations 9
Cbc0038I Pass  48: suminf.    1.47284 (4) obj. -28.3123 iterations 8
Cbc0038I Pass  49: suminf.    1.47284 (4) obj. -28.3123 iterations 0
Cbc0038I Pass  50: suminf.    1.25305 (4) obj. -28.3123 iterations 7
Cbc0038I Pass  51: suminf.    0.84288 (4) obj. -28.3123 iterations 7
Cbc0038I Pass  52: suminf.    0.83363 (4) obj. -28.3123 iterations 2
Cbc0038I Pass  53: suminf.    1.25305 (4) obj. -28.3123 iterations 7
Cbc0038I Pass  54: suminf.    2.55998 (11) obj. -28.3123 iterations 14
Cbc0038I Pass  55: suminf.    0.91966 (5) obj. -28.3123 iterations 14
Cbc0038I Pass  56: suminf.    0.90849 (7) obj. -28.3123 iterations 2
Cbc0038I Pass  57: suminf.    1.17148 (4) obj. -28.3123 iterations 8
Cbc0038I Pass  58: suminf.    0.81265 (3) obj. -28.3123 iterations 5
Cbc0038I Pass  59: suminf.    0.90152 (3) obj. -28.3123 iterations 4
Cbc0038I Pass  60: suminf.    0.90152 (3) obj. -28.3123 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 75 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -21.9978 - took 0.08 seconds
Cbc0012I Integer solution of -21.997822 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 67 rows 38 columns
Cbc0031I 21 added rows had average density of 32.190476
Cbc0013I At root node, 21 cuts changed objective from -48.051029 to -37.157324 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8649 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1636 row cuts average 47.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 138 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0010I After 17 nodes, 8 on tree, -21.997822 best solution, best possible -37.157324 (0.68 seconds)
Cbc0001I Search completed - best objective -21.99782200000001, took 6605 iterations and 32 nodes (0.70 seconds)
Cbc0032I Strong branching done 454 times (8545 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.68   (Wallclock seconds):       0.71

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-24) rows, 90 (-12) columns and 1245 (-333) elements
Clp1000I sum of infeasibilities 9.53585e-08 - average 1.19198e-09, 12 fixed columns
Coin0506I Presolve 68 (-12) rows, 75 (-15) columns and 894 (-351) elements
Clp0006I 0  Obj 53.310229 Dual inf 2.5860183 (75)
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 5.0997735 - largest nonzero change 1.8247024e-05 ( 0.00086475376%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 64.695702
Clp0000I Optimal - objective value 64.695702
Coin0511I After Postsolve, objective 64.695702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 64.695702
Clp0000I Optimal - objective value 64.695702
Clp0000I Optimal - objective value 64.695702
Clp0000I Optimal - objective value 64.695702
Coin0511I After Postsolve, objective 64.695702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.69570153 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 90 columns (90 integer (90 of which binary)) and 1247 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.45112
Cbc0038I Pass   1: suminf.    2.43070 (28) obj. -42.1168 iterations 14
Cbc0038I Pass   2: suminf.    2.43070 (28) obj. -42.1168 iterations 1
Cbc0038I Pass   3: suminf.    0.94693 (13) obj. -16.1258 iterations 15
Cbc0038I Solution found of 1.49239
Cbc0038I Rounding solution of -0.036742 is better than previous of 1.49239

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 90 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -5.23965
Cbc0038I Pass   4: suminf.    2.43070 (28) obj. -42.1168 iterations 0
Cbc0038I Pass   5: suminf.    2.43070 (28) obj. -42.1168 iterations 1
Cbc0038I Pass   6: suminf.    1.29940 (17) obj. -20.6844 iterations 11
Cbc0038I Pass   7: suminf.    0.40398 (6) obj. -6.90363 iterations 11
Cbc0038I Pass   8: suminf.    0.34395 (2) obj. -5.23965 iterations 19
Cbc0038I Pass   9: suminf.    0.12245 (1) obj. -6.40557 iterations 3
Cbc0038I Pass  10: suminf.    3.21905 (16) obj. -5.23965 iterations 23
Cbc0038I Pass  11: suminf.    1.63262 (8) obj. -5.23965 iterations 7
Cbc0038I Pass  12: suminf.    1.28793 (6) obj. -5.23965 iterations 3
Cbc0038I Pass  13: suminf.    0.91229 (4) obj. -5.23965 iterations 8
Cbc0038I Pass  14: suminf.    0.20822 (3) obj. -5.23965 iterations 9
Cbc0038I Pass  15: suminf.    0.60366 (2) obj. -5.23965 iterations 3
Cbc0038I Pass  16: suminf.    1.47800 (10) obj. -5.23965 iterations 31
Cbc0038I Pass  17: suminf.    1.47800 (10) obj. -5.23965 iterations 2
Cbc0038I Pass  18: suminf.    0.86237 (9) obj. -5.23965 iterations 14
Cbc0038I Pass  19: suminf.    0.86237 (9) obj. -5.23965 iterations 0
Cbc0038I Pass  20: suminf.    1.09007 (4) obj. -5.23965 iterations 15
Cbc0038I Pass  21: suminf.    0.61706 (3) obj. -5.23965 iterations 4
Cbc0038I Pass  22: suminf.    0.58633 (2) obj. -5.23965 iterations 5
Cbc0038I Pass  23: suminf.    0.40816 (2) obj. -5.48974 iterations 3
Cbc0038I Pass  24: suminf.    0.43595 (2) obj. -5.23965 iterations 2
Cbc0038I Pass  25: suminf.    1.93195 (11) obj. -5.23965 iterations 31
Cbc0038I Pass  26: suminf.    0.85776 (7) obj. -5.90271 iterations 5
Cbc0038I Pass  27: suminf.    0.72541 (4) obj. -5.23965 iterations 8
Cbc0038I Pass  28: suminf.    0.47484 (4) obj. -5.23965 iterations 1
Cbc0038I Pass  29: suminf.    0.68394 (3) obj. -5.23965 iterations 9
Cbc0038I Pass  30: suminf.    0.68394 (3) obj. -5.23965 iterations 0
Cbc0038I Pass  31: suminf.    1.06662 (3) obj. -5.23965 iterations 5
Cbc0038I Pass  32: suminf.    1.06662 (3) obj. -5.23965 iterations 1
Cbc0038I Pass  33: suminf.    0.68394 (3) obj. -5.23965 iterations 2
Cbc0038I Rounding solution of -0.154512 is better than previous of -0.036742

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 90 columns, reduced to 51 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -0.154512 to -20.3273 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.6749
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.43070 (28) obj. -42.1168 iterations 0
Cbc0038I Pass  34: suminf.    2.43070 (28) obj. -42.1168 iterations 1
Cbc0038I Pass  35: suminf.    2.35017 (11) obj. -26.6749 iterations 42
Cbc0038I Pass  36: suminf.    1.98039 (12) obj. -26.6749 iterations 6
Cbc0038I Pass  37: suminf.    1.86086 (9) obj. -26.6749 iterations 12
Cbc0038I Pass  38: suminf.    1.28129 (8) obj. -26.6749 iterations 1
Cbc0038I Pass  39: suminf.    1.28343 (8) obj. -26.6749 iterations 3
Cbc0038I Pass  40: suminf.    1.28343 (8) obj. -26.6749 iterations 2
Cbc0038I Pass  41: suminf.    1.28129 (8) obj. -26.6749 iterations 3
Cbc0038I Pass  42: suminf.    2.45964 (16) obj. -26.6749 iterations 13
Cbc0038I Pass  43: suminf.    2.42404 (16) obj. -26.6749 iterations 3
Cbc0038I Pass  44: suminf.    1.15636 (10) obj. -26.6749 iterations 13
Cbc0038I Pass  45: suminf.    1.12088 (10) obj. -26.6749 iterations 4
Cbc0038I Pass  46: suminf.    1.05279 (8) obj. -26.6749 iterations 5
Cbc0038I Pass  47: suminf.    1.02392 (9) obj. -26.6749 iterations 1
Cbc0038I Pass  48: suminf.    1.47273 (15) obj. -27.2491 iterations 18
Cbc0038I Pass  49: suminf.    1.47273 (15) obj. -27.2491 iterations 1
Cbc0038I Pass  50: suminf.    1.83379 (11) obj. -26.6749 iterations 20
Cbc0038I Pass  51: suminf.    1.30026 (11) obj. -26.6749 iterations 2
Cbc0038I Pass  52: suminf.    1.14613 (11) obj. -26.7299 iterations 5
Cbc0038I Pass  53: suminf.    1.83379 (11) obj. -26.6749 iterations 6
Cbc0038I Pass  54: suminf.    1.88166 (13) obj. -26.6749 iterations 14
Cbc0038I Pass  55: suminf.    1.55583 (12) obj. -26.6749 iterations 4
Cbc0038I Pass  56: suminf.    1.50099 (9) obj. -26.6749 iterations 8
Cbc0038I Pass  57: suminf.    1.13119 (9) obj. -27.2339 iterations 3
Cbc0038I Pass  58: suminf.    1.41070 (9) obj. -26.6749 iterations 4
Cbc0038I Pass  59: suminf.    1.87130 (17) obj. -26.6749 iterations 12
Cbc0038I Pass  60: suminf.    1.84528 (14) obj. -26.6749 iterations 3
Cbc0038I Pass  61: suminf.    1.05279 (8) obj. -26.6749 iterations 12
Cbc0038I Pass  62: suminf.    1.02392 (9) obj. -26.6749 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 90 columns, reduced to 39 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -20.3273 - took 0.07 seconds
Cbc0012I Integer solution of -20.327312 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 80 rows 90 columns, reduced to 8 rows 10 columns
Cbc0031I 56 added rows had average density of 21.446429
Cbc0013I At root node, 56 cuts changed objective from -52.064959 to -25.299731 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11245 row cuts average 2.1 elements, 1 column cuts (16 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1336 row cuts average 80.9 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 19 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 685 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 331 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 269 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.327312 best solution, best possible -25.299731 (2.04 seconds)
Cbc0012I Integer solution of -20.468692 found by rounding after 4205 iterations and 4 nodes (2.48 seconds)
Cbc0010I After 11 nodes, 2 on tree, -20.468692 best solution, best possible -25.298886 (2.84 seconds)
Cbc0004I Integer solution of -21.997822 found after 4876 iterations and 12 nodes (2.92 seconds)
Cbc0001I Search completed - best objective -21.99782200000001, took 5122 iterations and 16 nodes (3.07 seconds)
Cbc0032I Strong branching done 400 times (4341 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 24 variables fixed on reduced cost
Total time (CPU seconds):       2.29   (Wallclock seconds):       3.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 90 (-15) rows, 51 (-2) columns and 274 (-29) elements
Clp1000I sum of infeasibilities 5.028e-05 - average 5.58667e-07, 2 fixed columns
Coin0506I Presolve 87 (-3) rows, 49 (-2) columns and 264 (-10) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 48.051029
Clp0000I Optimal - objective value 48.051029
Coin0511I After Postsolve, objective 48.051029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.051029
Clp0000I Optimal - objective value 48.051029
Clp0000I Optimal - objective value 48.051029
Coin0511I After Postsolve, objective 48.051029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.05102932 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 90 rows, 51 columns (50 integer (50 of which binary)) and 274 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.675%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 7.99732
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.82572 iterations 33
Cbc0038I Solution found of -2.82572
Cbc0038I Relaxing continuous gives -2.82572
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -2.82572 to -20.636 (0.04 seconds)
Cbc0038I Round again with cutoff of -23.3776
Cbc0038I Pass   2: suminf.    1.74269 (7) obj. -23.3776 iterations 8
Cbc0038I Pass   3: suminf.    1.66573 (4) obj. -23.3776 iterations 1
Cbc0038I Pass   4: suminf.    0.78316 (3) obj. -23.3776 iterations 7
Cbc0038I Pass   5: suminf.    1.16104 (3) obj. -23.3776 iterations 6
Cbc0038I Pass   6: suminf.    1.16104 (3) obj. -23.3776 iterations 0
Cbc0038I Pass   7: suminf.    0.78316 (3) obj. -23.3776 iterations 7
Cbc0038I Pass   8: suminf.    2.21795 (7) obj. -23.3776 iterations 13
Cbc0038I Pass   9: suminf.    1.11159 (6) obj. -23.3776 iterations 8
Cbc0038I Pass  10: suminf.    1.16104 (3) obj. -23.3776 iterations 14
Cbc0038I Pass  11: suminf.    4.33915 (12) obj. -23.3776 iterations 15
Cbc0038I Pass  12: suminf.    2.82011 (8) obj. -23.3776 iterations 8
Cbc0038I Pass  13: suminf.    1.16260 (4) obj. -23.3776 iterations 12
Cbc0038I Pass  14: suminf.    0.96693 (3) obj. -23.3776 iterations 1
Cbc0038I Pass  15: suminf.    0.58648 (3) obj. -23.3776 iterations 5
Cbc0038I Pass  16: suminf.    0.58648 (3) obj. -23.3776 iterations 0
Cbc0038I Pass  17: suminf.    0.96693 (3) obj. -23.3776 iterations 4
Cbc0038I Pass  18: suminf.    2.02421 (6) obj. -23.3776 iterations 13
Cbc0038I Pass  19: suminf.    1.63029 (5) obj. -23.3776 iterations 5
Cbc0038I Pass  20: suminf.    0.60330 (2) obj. -23.3776 iterations 6
Cbc0038I Pass  21: suminf.    0.60330 (2) obj. -23.3776 iterations 0
Cbc0038I Pass  22: suminf.    0.52151 (2) obj. -23.3776 iterations 1
Cbc0038I Pass  23: suminf.    2.18268 (7) obj. -23.3776 iterations 15
Cbc0038I Pass  24: suminf.    1.11304 (5) obj. -23.3776 iterations 9
Cbc0038I Pass  25: suminf.    1.71255 (6) obj. -23.3776 iterations 6
Cbc0038I Pass  26: suminf.    0.80772 (3) obj. -23.3776 iterations 2
Cbc0038I Pass  27: suminf.    0.66579 (3) obj. -23.3776 iterations 4
Cbc0038I Pass  28: suminf.    0.50860 (2) obj. -23.3776 iterations 4
Cbc0038I Pass  29: suminf.    0.26451 (2) obj. -23.3776 iterations 1
Cbc0038I Pass  30: suminf.    0.81950 (3) obj. -23.3776 iterations 5
Cbc0038I Pass  31: suminf.    3.52780 (11) obj. -23.3776 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 82 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -20.636 to -21.9978 (0.07 seconds)
Cbc0038I Round again with cutoff of -28.3123
Cbc0038I Pass  31: suminf.    2.39922 (8) obj. -28.3123 iterations 2
Cbc0038I Pass  32: suminf.    1.27237 (6) obj. -28.3123 iterations 3
Cbc0038I Pass  33: suminf.    1.13292 (6) obj. -28.3123 iterations 3
Cbc0038I Pass  34: suminf.    1.05462 (4) obj. -28.3123 iterations 9
Cbc0038I Pass  35: suminf.    0.90152 (3) obj. -28.3123 iterations 3
Cbc0038I Pass  36: suminf.    0.90152 (3) obj. -28.3123 iterations 0
Cbc0038I Pass  37: suminf.    0.52021 (3) obj. -28.3123 iterations 7
Cbc0038I Pass  38: suminf.    0.52021 (3) obj. -28.3123 iterations 0
Cbc0038I Pass  39: suminf.    0.90152 (3) obj. -28.3123 iterations 6
Cbc0038I Pass  40: suminf.    1.87143 (7) obj. -28.3123 iterations 15
Cbc0038I Pass  41: suminf.    0.84215 (4) obj. -28.3123 iterations 5
Cbc0038I Pass  42: suminf.    0.83121 (3) obj. -28.3123 iterations 8
Cbc0038I Pass  43: suminf.    0.83121 (3) obj. -28.3123 iterations 0
Cbc0038I Pass  44: suminf.    1.21704 (3) obj. -28.3123 iterations 3
Cbc0038I Pass  45: suminf.    1.21704 (3) obj. -28.3123 iterations 0
Cbc0038I Pass  46: suminf.    0.83121 (3) obj. -28.3123 iterations 3
Cbc0038I Pass  47: suminf.    2.79757 (9) obj. -28.3123 iterations 9
Cbc0038I Pass  48: suminf.    1.47284 (4) obj. -28.3123 iterations 8
Cbc0038I Pass  49: suminf.    1.47284 (4) obj. -28.3123 iterations 0
Cbc0038I Pass  50: suminf.    1.25305 (4) obj. -28.3123 iterations 7
Cbc0038I Pass  51: suminf.    0.84288 (4) obj. -28.3123 iterations 7
Cbc0038I Pass  52: suminf.    0.83363 (4) obj. -28.3123 iterations 2
Cbc0038I Pass  53: suminf.    1.25305 (4) obj. -28.3123 iterations 7
Cbc0038I Pass  54: suminf.    2.55998 (11) obj. -28.3123 iterations 14
Cbc0038I Pass  55: suminf.    0.91966 (5) obj. -28.3123 iterations 14
Cbc0038I Pass  56: suminf.    0.90849 (7) obj. -28.3123 iterations 2
Cbc0038I Pass  57: suminf.    1.17148 (4) obj. -28.3123 iterations 8
Cbc0038I Pass  58: suminf.    0.81265 (3) obj. -28.3123 iterations 5
Cbc0038I Pass  59: suminf.    0.90152 (3) obj. -28.3123 iterations 4
Cbc0038I Pass  60: suminf.    0.90152 (3) obj. -28.3123 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 51 columns, reduced to 75 rows 42 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -21.9978 - took 0.09 seconds
Cbc0012I Integer solution of -21.997822 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 90 rows 51 columns, reduced to 67 rows 38 columns
Cbc0031I 21 added rows had average density of 32.190476
Cbc0013I At root node, 21 cuts changed objective from -48.051029 to -37.157324 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8649 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1636 row cuts average 47.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 138 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 159 row cuts average 42.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0010I After 11 nodes, 8 on tree, -21.997822 best solution, best possible -37.157324 (0.68 seconds)
Cbc0001I Search completed - best objective -21.99782200000001, took 6605 iterations and 32 nodes (0.72 seconds)
Cbc0032I Strong branching done 454 times (8545 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 80 (-25) rows, 90 (-13) columns and 1245 (-334) elements
Clp1000I sum of infeasibilities 9.53585e-08 - average 1.19198e-09, 12 fixed columns
Coin0506I Presolve 68 (-12) rows, 75 (-15) columns and 894 (-351) elements
Clp0006I 0  Obj 53.310229 Dual inf 2.5860183 (75)
Clp0029I End of values pass after 75 iterations
Clp0014I Perturbing problem by 0.001% of 5.0997735 - largest nonzero change 1.8247024e-05 ( 0.00086475376%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 64.695702
Clp0000I Optimal - objective value 64.695702
Coin0511I After Postsolve, objective 64.695702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 64.695702
Clp0000I Optimal - objective value 64.695702
Clp0000I Optimal - objective value 64.695702
Clp0000I Optimal - objective value 64.695702
Coin0511I After Postsolve, objective 64.695702, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.69570153 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 80 rows, 90 columns (90 integer (90 of which binary)) and 1247 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.45112
Cbc0038I Pass   1: suminf.    2.43070 (28) obj. -42.1168 iterations 14
Cbc0038I Pass   2: suminf.    2.43070 (28) obj. -42.1168 iterations 1
Cbc0038I Pass   3: suminf.    0.94693 (13) obj. -16.1258 iterations 15
Cbc0038I Solution found of 1.49239
Cbc0038I Rounding solution of -0.036742 is better than previous of 1.49239

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 90 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -5.23965
Cbc0038I Pass   4: suminf.    2.43070 (28) obj. -42.1168 iterations 0
Cbc0038I Pass   5: suminf.    2.43070 (28) obj. -42.1168 iterations 1
Cbc0038I Pass   6: suminf.    1.29940 (17) obj. -20.6844 iterations 11
Cbc0038I Pass   7: suminf.    0.40398 (6) obj. -6.90363 iterations 11
Cbc0038I Pass   8: suminf.    0.34395 (2) obj. -5.23965 iterations 19
Cbc0038I Pass   9: suminf.    0.12245 (1) obj. -6.40557 iterations 3
Cbc0038I Pass  10: suminf.    3.21905 (16) obj. -5.23965 iterations 23
Cbc0038I Pass  11: suminf.    1.63262 (8) obj. -5.23965 iterations 7
Cbc0038I Pass  12: suminf.    1.28793 (6) obj. -5.23965 iterations 3
Cbc0038I Pass  13: suminf.    0.91229 (4) obj. -5.23965 iterations 8
Cbc0038I Pass  14: suminf.    0.20822 (3) obj. -5.23965 iterations 9
Cbc0038I Pass  15: suminf.    0.60366 (2) obj. -5.23965 iterations 3
Cbc0038I Pass  16: suminf.    1.47800 (10) obj. -5.23965 iterations 31
Cbc0038I Pass  17: suminf.    1.47800 (10) obj. -5.23965 iterations 2
Cbc0038I Pass  18: suminf.    0.86237 (9) obj. -5.23965 iterations 14
Cbc0038I Pass  19: suminf.    0.86237 (9) obj. -5.23965 iterations 0
Cbc0038I Pass  20: suminf.    1.09007 (4) obj. -5.23965 iterations 15
Cbc0038I Pass  21: suminf.    0.61706 (3) obj. -5.23965 iterations 4
Cbc0038I Pass  22: suminf.    0.58633 (2) obj. -5.23965 iterations 5
Cbc0038I Pass  23: suminf.    0.40816 (2) obj. -5.48974 iterations 3
Cbc0038I Pass  24: suminf.    0.43595 (2) obj. -5.23965 iterations 2
Cbc0038I Pass  25: suminf.    1.93195 (11) obj. -5.23965 iterations 31
Cbc0038I Pass  26: suminf.    0.85776 (7) obj. -5.90271 iterations 5
Cbc0038I Pass  27: suminf.    0.72541 (4) obj. -5.23965 iterations 8
Cbc0038I Pass  28: suminf.    0.47484 (4) obj. -5.23965 iterations 1
Cbc0038I Pass  29: suminf.    0.68394 (3) obj. -5.23965 iterations 9
Cbc0038I Pass  30: suminf.    0.68394 (3) obj. -5.23965 iterations 0
Cbc0038I Pass  31: suminf.    1.06662 (3) obj. -5.23965 iterations 5
Cbc0038I Pass  32: suminf.    1.06662 (3) obj. -5.23965 iterations 1
Cbc0038I Pass  33: suminf.    0.68394 (3) obj. -5.23965 iterations 2
Cbc0038I Rounding solution of -0.154512 is better than previous of -0.036742

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 90 columns, reduced to 51 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -0.154512 to -20.3273 (0.05 seconds)
Cbc0038I Round again with cutoff of -26.6749
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.43070 (28) obj. -42.1168 iterations 0
Cbc0038I Pass  34: suminf.    2.43070 (28) obj. -42.1168 iterations 1
Cbc0038I Pass  35: suminf.    2.35017 (11) obj. -26.6749 iterations 42
Cbc0038I Pass  36: suminf.    1.98039 (12) obj. -26.6749 iterations 6
Cbc0038I Pass  37: suminf.    1.86086 (9) obj. -26.6749 iterations 12
Cbc0038I Pass  38: suminf.    1.28129 (8) obj. -26.6749 iterations 1
Cbc0038I Pass  39: suminf.    1.28343 (8) obj. -26.6749 iterations 3
Cbc0038I Pass  40: suminf.    1.28343 (8) obj. -26.6749 iterations 2
Cbc0038I Pass  41: suminf.    1.28129 (8) obj. -26.6749 iterations 3
Cbc0038I Pass  42: suminf.    2.45964 (16) obj. -26.6749 iterations 13
Cbc0038I Pass  43: suminf.    2.42404 (16) obj. -26.6749 iterations 3
Cbc0038I Pass  44: suminf.    1.15636 (10) obj. -26.6749 iterations 13
Cbc0038I Pass  45: suminf.    1.12088 (10) obj. -26.6749 iterations 4
Cbc0038I Pass  46: suminf.    1.05279 (8) obj. -26.6749 iterations 5
Cbc0038I Pass  47: suminf.    1.02392 (9) obj. -26.6749 iterations 1
Cbc0038I Pass  48: suminf.    1.47273 (15) obj. -27.2491 iterations 18
Cbc0038I Pass  49: suminf.    1.47273 (15) obj. -27.2491 iterations 1
Cbc0038I Pass  50: suminf.    1.83379 (11) obj. -26.6749 iterations 20
Cbc0038I Pass  51: suminf.    1.30026 (11) obj. -26.6749 iterations 2
Cbc0038I Pass  52: suminf.    1.14613 (11) obj. -26.7299 iterations 5
Cbc0038I Pass  53: suminf.    1.83379 (11) obj. -26.6749 iterations 6
Cbc0038I Pass  54: suminf.    1.88166 (13) obj. -26.6749 iterations 14
Cbc0038I Pass  55: suminf.    1.55583 (12) obj. -26.6749 iterations 4
Cbc0038I Pass  56: suminf.    1.50099 (9) obj. -26.6749 iterations 8
Cbc0038I Pass  57: suminf.    1.13119 (9) obj. -27.2339 iterations 3
Cbc0038I Pass  58: suminf.    1.41070 (9) obj. -26.6749 iterations 4
Cbc0038I Pass  59: suminf.    1.87130 (17) obj. -26.6749 iterations 12
Cbc0038I Pass  60: suminf.    1.84528 (14) obj. -26.6749 iterations 3
Cbc0038I Pass  61: suminf.    1.05279 (8) obj. -26.6749 iterations 12
Cbc0038I Pass  62: suminf.    1.02392 (9) obj. -26.6749 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 80 rows 90 columns, reduced to 39 rows 44 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -20.3273 - took 0.06 seconds
Cbc0012I Integer solution of -20.327312 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 80 rows 90 columns, reduced to 8 rows 10 columns
Cbc0031I 56 added rows had average density of 21.446429
Cbc0013I At root node, 56 cuts changed objective from -52.064959 to -25.299731 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11245 row cuts average 2.1 elements, 1 column cuts (16 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1336 row cuts average 80.9 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 19 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 685 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 331 row cuts average 40.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 269 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.754 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.327312 best solution, best possible -25.299731 (2.09 seconds)
Cbc0012I Integer solution of -20.468692 found by rounding after 4205 iterations and 4 nodes (2.55 seconds)
Cbc0010I After 10 nodes, 1 on tree, -20.468692 best solution, best possible -25.298886 (2.81 seconds)
Cbc0004I Integer solution of -21.997822 found after 4876 iterations and 12 nodes (3.01 seconds)
Cbc0001I Search completed - best objective -21.99782200000001, took 5122 iterations and 16 nodes (3.17 seconds)
Cbc0032I Strong branching done 400 times (4341 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 4, 24 variables fixed on reduced cost
Total time (CPU seconds):       2.33   (Wallclock seconds):       3.18

