Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 66 (-12) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 2.88179e-05 - average 2.34292e-07, 22 fixed columns
Coin0506I Presolve 74 (-49) rows, 41 (-25) columns and 222 (-148) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 107.33072
Clp0000I Optimal - objective value 107.33072
Coin0511I After Postsolve, objective 107.33072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25913 - largest nonzero change 0 ( 0%) - largest zero change 2.7184261e-05
Clp0000I Optimal - objective value 107.33072
Clp0000I Optimal - objective value 107.33072
Clp0000I Optimal - objective value 107.33072
Coin0511I After Postsolve, objective 107.33072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.3307168 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 66 columns (65 integer (65 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.538%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.30137
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -58.1431 iterations 30
Cbc0038I Solution found of -58.1431
Cbc0038I Relaxing continuous gives -58.1431
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -58.1431 to -75.0185 (0.02 seconds)
Cbc0038I Round again with cutoff of -78.2498
Cbc0038I Pass   2: suminf.    0.98251 (3) obj. -78.2498 iterations 7
Cbc0038I Pass   3: suminf.    0.91683 (3) obj. -78.2498 iterations 6
Cbc0038I Pass   4: suminf.    0.37050 (2) obj. -78.2498 iterations 3
Cbc0038I Pass   5: suminf.    0.56957 (2) obj. -78.2498 iterations 6
Cbc0038I Pass   6: suminf.    0.56957 (2) obj. -78.2498 iterations 0
Cbc0038I Pass   7: suminf.    2.10612 (8) obj. -78.2498 iterations 18
Cbc0038I Pass   8: suminf.    1.10774 (4) obj. -78.2498 iterations 14
Cbc0038I Pass   9: suminf.    1.43792 (5) obj. -78.2498 iterations 12
Cbc0038I Pass  10: suminf.    0.97649 (4) obj. -78.2498 iterations 9
Cbc0038I Pass  11: suminf.    1.30070 (7) obj. -78.2498 iterations 20
Cbc0038I Pass  12: suminf.    1.20764 (5) obj. -78.2498 iterations 12
Cbc0038I Pass  13: suminf.    0.79586 (4) obj. -78.2498 iterations 15
Cbc0038I Pass  14: suminf.    0.59304 (3) obj. -78.2498 iterations 1
Cbc0038I Pass  15: suminf.    0.38462 (1) obj. -78.2498 iterations 6
Cbc0038I Pass  16: suminf.    0.32603 (2) obj. -78.2498 iterations 4
Cbc0038I Pass  17: suminf.    0.53843 (2) obj. -78.2498 iterations 3
Cbc0038I Pass  18: suminf.    0.53843 (2) obj. -78.2498 iterations 0
Cbc0038I Pass  19: suminf.    0.77781 (2) obj. -78.2498 iterations 3
Cbc0038I Pass  20: suminf.    4.20351 (9) obj. -78.2498 iterations 21
Cbc0038I Pass  21: suminf.    1.03963 (6) obj. -78.2498 iterations 14
Cbc0038I Pass  22: suminf.    0.95270 (6) obj. -78.2498 iterations 8
Cbc0038I Pass  23: suminf.    0.70908 (4) obj. -78.2498 iterations 14
Cbc0038I Pass  24: suminf.    0.90316 (3) obj. -78.2498 iterations 7
Cbc0038I Pass  25: suminf.    0.85277 (3) obj. -78.2498 iterations 3
Cbc0038I Pass  26: suminf.    2.16853 (9) obj. -78.2498 iterations 16
Cbc0038I Pass  27: suminf.    0.84539 (4) obj. -78.2498 iterations 17
Cbc0038I Pass  28: suminf.    0.66919 (3) obj. -78.2498 iterations 3
Cbc0038I Pass  29: suminf.    1.13966 (5) obj. -78.2498 iterations 9
Cbc0038I Pass  30: suminf.    1.06539 (4) obj. -78.2498 iterations 2
Cbc0038I Pass  31: suminf.    0.83200 (2) obj. -78.2498 iterations 6
Cbc0038I Rounding solution of -78.6942 is better than previous of -75.0185

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -84.4216
Cbc0038I Pass  31: suminf.    1.27034 (5) obj. -84.4216 iterations 1
Cbc0038I Pass  32: suminf.    0.78586 (2) obj. -84.4216 iterations 5
Cbc0038I Pass  33: suminf.    0.65590 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  34: suminf.    0.78586 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  35: suminf.    3.82983 (12) obj. -84.4216 iterations 19
Cbc0038I Pass  36: suminf.    2.32879 (7) obj. -84.4216 iterations 22
Cbc0038I Pass  37: suminf.    1.68452 (5) obj. -84.4216 iterations 6
Cbc0038I Pass  38: suminf.    0.83822 (3) obj. -84.4216 iterations 4
Cbc0038I Pass  39: suminf.    0.65590 (2) obj. -84.4216 iterations 7
Cbc0038I Pass  40: suminf.    0.78586 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  41: suminf.    1.41341 (6) obj. -84.4216 iterations 9
Cbc0038I Pass  42: suminf.    0.92085 (3) obj. -84.4216 iterations 11
Cbc0038I Pass  43: suminf.    0.75197 (3) obj. -84.4216 iterations 5
Cbc0038I Pass  44: suminf.    1.09154 (6) obj. -84.4216 iterations 12
Cbc0038I Pass  45: suminf.    0.69547 (4) obj. -84.4216 iterations 6
Cbc0038I Pass  46: suminf.    1.71552 (5) obj. -84.4216 iterations 7
Cbc0038I Pass  47: suminf.    0.79086 (3) obj. -84.4216 iterations 1
Cbc0038I Pass  48: suminf.    0.65590 (2) obj. -84.4216 iterations 7
Cbc0038I Pass  49: suminf.    0.78586 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  50: suminf.    2.41948 (10) obj. -84.4216 iterations 12
Cbc0038I Pass  51: suminf.    1.94179 (8) obj. -84.4216 iterations 4
Cbc0038I Pass  52: suminf.    2.27358 (6) obj. -84.4216 iterations 9
Cbc0038I Pass  53: suminf.    1.09238 (3) obj. -84.4216 iterations 5
Cbc0038I Pass  54: suminf.    0.78586 (2) obj. -84.4216 iterations 1
Cbc0038I Pass  55: suminf.    0.65590 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  56: suminf.    0.78586 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  57: suminf.    1.92017 (8) obj. -84.4216 iterations 12
Cbc0038I Pass  58: suminf.    1.82954 (8) obj. -84.4216 iterations 10
Cbc0038I Pass  59: suminf.    1.86411 (5) obj. -84.4216 iterations 17
Cbc0038I Pass  60: suminf.    1.21286 (4) obj. -84.4216 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 64 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -78.6942 - took 0.05 seconds
Cbc0012I Integer solution of -78.6942 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 123 rows 66 columns, reduced to 50 rows 28 columns
Cbc0031I 20 added rows had average density of 34.7
Cbc0013I At root node, 20 cuts changed objective from -107.33072 to -94.688686 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3838 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 862 row cuts average 58.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0001I Search completed - best objective -78.6942, took 5641 iterations and 24 nodes (0.51 seconds)
Cbc0032I Strong branching done 352 times (6070 iterations), fathomed 0 nodes and fixed 14 variables
Cbc0035I Maximum depth 10, 60 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-45) rows, 116 (-36) columns and 1995 (-1308) elements
Clp1000I sum of infeasibilities 1.84343e-08 - average 1.69122e-10, 85 fixed columns
Coin0506I Presolve 27 (-82) rows, 31 (-85) columns and 110 (-1885) elements
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 3.8059188 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 59.940804
Clp0000I Optimal - objective value 59.940804
Coin0511I After Postsolve, objective 59.940804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.800281 - largest nonzero change 0 ( 0%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 168.20573
Clp0000I Optimal - objective value 168.20573
Clp0000I Optimal - objective value 168.20573
Coin0511I After Postsolve, objective 168.20573, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.2057289 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 2 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 114 columns (114 integer (114 of which binary)) and 1916 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.891%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.53903
Cbc0038I Pass   1: suminf.    2.33685 (35) obj. -111.605 iterations 14
Cbc0038I Pass   2: suminf.    0.49859 (11) obj. -78.7496 iterations 14
Cbc0038I Solution found of -60.6144
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 114 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -65.8929
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.33685 (35) obj. -111.605 iterations 0
Cbc0038I Pass   4: suminf.    0.48547 (10) obj. -65.8929 iterations 40
Cbc0038I Pass   5: suminf.    0.35221 (9) obj. -67.5329 iterations 5
Cbc0038I Pass   6: suminf.    1.07629 (6) obj. -65.8929 iterations 22
Cbc0038I Pass   7: suminf.    0.45985 (3) obj. -67.0533 iterations 7
Cbc0038I Pass   8: suminf.    1.53251 (14) obj. -65.8929 iterations 29
Cbc0038I Pass   9: suminf.    1.49088 (12) obj. -65.8929 iterations 3
Cbc0038I Pass  10: suminf.    0.59840 (6) obj. -65.8929 iterations 21
Cbc0038I Pass  11: suminf.    0.58729 (9) obj. -65.8929 iterations 4
Cbc0038I Pass  12: suminf.    1.61501 (7) obj. -65.8929 iterations 12
Cbc0038I Pass  13: suminf.    0.47800 (7) obj. -65.8929 iterations 6
Cbc0038I Pass  14: suminf.    1.30253 (17) obj. -65.8929 iterations 25
Cbc0038I Pass  15: suminf.    0.92747 (11) obj. -67.6127 iterations 13
Cbc0038I Pass  16: suminf.    0.70832 (6) obj. -65.8929 iterations 29
Cbc0038I Pass  17: suminf.    0.70832 (6) obj. -65.8929 iterations 0
Cbc0038I Pass  18: suminf.    1.07800 (5) obj. -65.8929 iterations 12
Cbc0038I Pass  19: suminf.    1.07800 (5) obj. -65.8929 iterations 0
Cbc0038I Pass  20: suminf.    0.92949 (8) obj. -65.8929 iterations 8
Cbc0038I Pass  21: suminf.    0.92949 (8) obj. -65.8929 iterations 1
Cbc0038I Pass  22: suminf.    1.11441 (7) obj. -65.8929 iterations 8
Cbc0038I Pass  23: suminf.    1.33346 (10) obj. -65.8929 iterations 19
Cbc0038I Pass  24: suminf.    1.22025 (10) obj. -66.4589 iterations 2
Cbc0038I Pass  25: suminf.    1.48020 (8) obj. -65.8929 iterations 19
Cbc0038I Pass  26: suminf.    0.96187 (6) obj. -65.8929 iterations 9
Cbc0038I Pass  27: suminf.    1.24172 (6) obj. -65.8929 iterations 5
Cbc0038I Pass  28: suminf.    1.59510 (12) obj. -65.8929 iterations 16
Cbc0038I Pass  29: suminf.    1.34419 (11) obj. -69.1547 iterations 4
Cbc0038I Pass  30: suminf.    1.22054 (8) obj. -65.8929 iterations 27
Cbc0038I Pass  31: suminf.    1.21136 (6) obj. -65.8929 iterations 4
Cbc0038I Pass  32: suminf.    1.38504 (6) obj. -65.8929 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 114 columns, reduced to 31 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -60.6144 to -70.6702 (0.06 seconds)
Cbc0038I Round again with cutoff of -79.2159
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.33685 (35) obj. -111.605 iterations 0
Cbc0038I Pass  33: suminf.    0.82438 (11) obj. -79.2159 iterations 41
Cbc0038I Pass  34: suminf.    0.56856 (11) obj. -80.2392 iterations 1
Cbc0038I Pass  35: suminf.    1.78669 (10) obj. -79.2159 iterations 21
Cbc0038I Pass  36: suminf.    0.81752 (10) obj. -79.2159 iterations 3
Cbc0038I Pass  37: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  38: suminf.    1.62815 (11) obj. -79.2159 iterations 5
Cbc0038I Pass  39: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  40: suminf.    1.78669 (10) obj. -79.2159 iterations 7
Cbc0038I Pass  41: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I Pass  42: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  43: suminf.    1.62815 (11) obj. -79.2159 iterations 5
Cbc0038I Pass  44: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  45: suminf.    1.78669 (10) obj. -79.2159 iterations 7
Cbc0038I Pass  46: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I Pass  47: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  48: suminf.    1.62815 (11) obj. -79.2159 iterations 5
Cbc0038I Pass  49: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  50: suminf.    1.78669 (10) obj. -79.2159 iterations 7
Cbc0038I Pass  51: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I Pass  52: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  53: suminf.    1.62815 (11) obj. -79.2159 iterations 5
Cbc0038I Pass  54: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  55: suminf.    1.78669 (10) obj. -79.2159 iterations 7
Cbc0038I Pass  56: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I Pass  57: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  58: suminf.    1.62815 (11) obj. -79.2159 iterations 5
Cbc0038I Pass  59: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  60: suminf.    1.78669 (10) obj. -79.2159 iterations 7
Cbc0038I Pass  61: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -70.6702 - took 0.05 seconds
Cbc0012I Integer solution of -70.6702 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 107 rows 114 columns, reduced to 23 rows 27 columns
Cbc0031I 57 added rows had average density of 30.175439
Cbc0013I At root node, 57 cuts changed objective from -113.39829 to -86.914246 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17500 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1698 row cuts average 99.8 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 506 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 490 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 327 row cuts average 54.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 330 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.643 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -70.6702 best solution, best possible -86.914246 (2.51 seconds)
Cbc0012I Integer solution of -74.25368 found by rounding after 6147 iterations and 6 nodes (3.26 seconds)
Cbc0010I After 6 nodes, 5 on tree, -74.25368 best solution, best possible -86.31821 (3.26 seconds)
Cbc0016I Integer solution of -78.3 found by strong branching after 6255 iterations and 7 nodes (3.37 seconds)
Cbc0004I Integer solution of -78.6942 found after 6337 iterations and 8 nodes (3.48 seconds)
Cbc0001I Search completed - best objective -78.6942, took 6659 iterations and 16 nodes (3.56 seconds)
Cbc0032I Strong branching done 378 times (10042 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 6, 26 variables fixed on reduced cost
Total time (CPU seconds):       2.58   (Wallclock seconds):       3.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 123 (-32) rows, 66 (-12) columns and 370 (-83) elements
Clp1000I sum of infeasibilities 2.88179e-05 - average 2.34292e-07, 22 fixed columns
Coin0506I Presolve 74 (-49) rows, 41 (-25) columns and 222 (-148) elements
Clp0029I End of values pass after 41 iterations
Clp0000I Optimal - objective value 107.33072
Clp0000I Optimal - objective value 107.33072
Coin0511I After Postsolve, objective 107.33072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.25913 - largest nonzero change 0 ( 0%) - largest zero change 2.7184261e-05
Clp0000I Optimal - objective value 107.33072
Clp0000I Optimal - objective value 107.33072
Clp0000I Optimal - objective value 107.33072
Coin0511I After Postsolve, objective 107.33072, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.3307168 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 123 rows, 66 columns (65 integer (65 of which binary)) and 380 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.538%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 4.30137
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -58.1431 iterations 30
Cbc0038I Solution found of -58.1431
Cbc0038I Relaxing continuous gives -58.1431
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 48 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -58.1431 to -75.0185 (0.02 seconds)
Cbc0038I Round again with cutoff of -78.2498
Cbc0038I Pass   2: suminf.    0.98251 (3) obj. -78.2498 iterations 7
Cbc0038I Pass   3: suminf.    0.91683 (3) obj. -78.2498 iterations 6
Cbc0038I Pass   4: suminf.    0.37050 (2) obj. -78.2498 iterations 3
Cbc0038I Pass   5: suminf.    0.56957 (2) obj. -78.2498 iterations 6
Cbc0038I Pass   6: suminf.    0.56957 (2) obj. -78.2498 iterations 0
Cbc0038I Pass   7: suminf.    2.10612 (8) obj. -78.2498 iterations 18
Cbc0038I Pass   8: suminf.    1.10774 (4) obj. -78.2498 iterations 14
Cbc0038I Pass   9: suminf.    1.43792 (5) obj. -78.2498 iterations 12
Cbc0038I Pass  10: suminf.    0.97649 (4) obj. -78.2498 iterations 9
Cbc0038I Pass  11: suminf.    1.30070 (7) obj. -78.2498 iterations 20
Cbc0038I Pass  12: suminf.    1.20764 (5) obj. -78.2498 iterations 12
Cbc0038I Pass  13: suminf.    0.79586 (4) obj. -78.2498 iterations 15
Cbc0038I Pass  14: suminf.    0.59304 (3) obj. -78.2498 iterations 1
Cbc0038I Pass  15: suminf.    0.38462 (1) obj. -78.2498 iterations 6
Cbc0038I Pass  16: suminf.    0.32603 (2) obj. -78.2498 iterations 4
Cbc0038I Pass  17: suminf.    0.53843 (2) obj. -78.2498 iterations 3
Cbc0038I Pass  18: suminf.    0.53843 (2) obj. -78.2498 iterations 0
Cbc0038I Pass  19: suminf.    0.77781 (2) obj. -78.2498 iterations 3
Cbc0038I Pass  20: suminf.    4.20351 (9) obj. -78.2498 iterations 21
Cbc0038I Pass  21: suminf.    1.03963 (6) obj. -78.2498 iterations 14
Cbc0038I Pass  22: suminf.    0.95270 (6) obj. -78.2498 iterations 8
Cbc0038I Pass  23: suminf.    0.70908 (4) obj. -78.2498 iterations 14
Cbc0038I Pass  24: suminf.    0.90316 (3) obj. -78.2498 iterations 7
Cbc0038I Pass  25: suminf.    0.85277 (3) obj. -78.2498 iterations 3
Cbc0038I Pass  26: suminf.    2.16853 (9) obj. -78.2498 iterations 16
Cbc0038I Pass  27: suminf.    0.84539 (4) obj. -78.2498 iterations 17
Cbc0038I Pass  28: suminf.    0.66919 (3) obj. -78.2498 iterations 3
Cbc0038I Pass  29: suminf.    1.13966 (5) obj. -78.2498 iterations 9
Cbc0038I Pass  30: suminf.    1.06539 (4) obj. -78.2498 iterations 2
Cbc0038I Pass  31: suminf.    0.83200 (2) obj. -78.2498 iterations 6
Cbc0038I Rounding solution of -78.6942 is better than previous of -75.0185

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 66 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -84.4216
Cbc0038I Pass  31: suminf.    1.27034 (5) obj. -84.4216 iterations 1
Cbc0038I Pass  32: suminf.    0.78586 (2) obj. -84.4216 iterations 5
Cbc0038I Pass  33: suminf.    0.65590 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  34: suminf.    0.78586 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  35: suminf.    3.82983 (12) obj. -84.4216 iterations 19
Cbc0038I Pass  36: suminf.    2.32879 (7) obj. -84.4216 iterations 22
Cbc0038I Pass  37: suminf.    1.68452 (5) obj. -84.4216 iterations 6
Cbc0038I Pass  38: suminf.    0.83822 (3) obj. -84.4216 iterations 4
Cbc0038I Pass  39: suminf.    0.65590 (2) obj. -84.4216 iterations 7
Cbc0038I Pass  40: suminf.    0.78586 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  41: suminf.    1.41341 (6) obj. -84.4216 iterations 9
Cbc0038I Pass  42: suminf.    0.92085 (3) obj. -84.4216 iterations 11
Cbc0038I Pass  43: suminf.    0.75197 (3) obj. -84.4216 iterations 5
Cbc0038I Pass  44: suminf.    1.09154 (6) obj. -84.4216 iterations 12
Cbc0038I Pass  45: suminf.    0.69547 (4) obj. -84.4216 iterations 6
Cbc0038I Pass  46: suminf.    1.71552 (5) obj. -84.4216 iterations 7
Cbc0038I Pass  47: suminf.    0.79086 (3) obj. -84.4216 iterations 1
Cbc0038I Pass  48: suminf.    0.65590 (2) obj. -84.4216 iterations 7
Cbc0038I Pass  49: suminf.    0.78586 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  50: suminf.    2.41948 (10) obj. -84.4216 iterations 12
Cbc0038I Pass  51: suminf.    1.94179 (8) obj. -84.4216 iterations 4
Cbc0038I Pass  52: suminf.    2.27358 (6) obj. -84.4216 iterations 9
Cbc0038I Pass  53: suminf.    1.09238 (3) obj. -84.4216 iterations 5
Cbc0038I Pass  54: suminf.    0.78586 (2) obj. -84.4216 iterations 1
Cbc0038I Pass  55: suminf.    0.65590 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  56: suminf.    0.78586 (2) obj. -84.4216 iterations 6
Cbc0038I Pass  57: suminf.    1.92017 (8) obj. -84.4216 iterations 12
Cbc0038I Pass  58: suminf.    1.82954 (8) obj. -84.4216 iterations 10
Cbc0038I Pass  59: suminf.    1.86411 (5) obj. -84.4216 iterations 17
Cbc0038I Pass  60: suminf.    1.21286 (4) obj. -84.4216 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 123 rows 66 columns, reduced to 64 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -78.6942 - took 0.05 seconds
Cbc0012I Integer solution of -78.6942 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 123 rows 66 columns, reduced to 50 rows 28 columns
Cbc0031I 20 added rows had average density of 34.7
Cbc0013I At root node, 20 cuts changed objective from -107.33072 to -94.688686 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3838 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 862 row cuts average 58.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 163 row cuts average 38.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0001I Search completed - best objective -78.6942, took 5641 iterations and 24 nodes (0.59 seconds)
Cbc0032I Strong branching done 352 times (6070 iterations), fathomed 0 nodes and fixed 14 variables
Cbc0035I Maximum depth 10, 60 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 107 (-48) rows, 114 (-39) columns and 1904 (-1400) elements
Clp1000I sum of infeasibilities 2.68271e-07 - average 2.50721e-09, 69 fixed columns
Coin0506I Presolve 35 (-72) rows, 45 (-69) columns and 154 (-1750) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 3.8124049 - largest nonzero change 2.0788976e-05 ( 0.00079945292%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 17.670092
Clp0000I Optimal - objective value 17.670092
Coin0511I After Postsolve, objective 17.670092, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8146525 - largest nonzero change 2.9680515e-05 ( 0.0016580886%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 125.05662
Clp0000I Optimal - objective value 125.05662
Clp0000I Optimal - objective value 125.05662
Coin0511I After Postsolve, objective 125.05662, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.0566223 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 114 columns (114 integer (114 of which binary)) and 1916 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.891%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 3.53903
Cbc0038I Pass   1: suminf.    2.33685 (35) obj. -111.605 iterations 16
Cbc0038I Pass   2: suminf.    0.49859 (11) obj. -78.7496 iterations 14
Cbc0038I Solution found of -60.6144
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 114 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -65.8929
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.33685 (35) obj. -111.605 iterations 0
Cbc0038I Pass   4: suminf.    0.48547 (10) obj. -65.8929 iterations 39
Cbc0038I Pass   5: suminf.    0.35221 (9) obj. -67.5329 iterations 4
Cbc0038I Pass   6: suminf.    1.07629 (6) obj. -65.8929 iterations 26
Cbc0038I Pass   7: suminf.    0.45985 (3) obj. -67.0533 iterations 7
Cbc0038I Pass   8: suminf.    1.53251 (14) obj. -65.8929 iterations 26
Cbc0038I Pass   9: suminf.    1.49088 (12) obj. -65.8929 iterations 3
Cbc0038I Pass  10: suminf.    0.59840 (6) obj. -65.8929 iterations 20
Cbc0038I Pass  11: suminf.    0.58729 (9) obj. -65.8929 iterations 3
Cbc0038I Pass  12: suminf.    1.61501 (7) obj. -65.8929 iterations 12
Cbc0038I Pass  13: suminf.    0.47800 (7) obj. -65.8929 iterations 7
Cbc0038I Pass  14: suminf.    1.30253 (17) obj. -65.8929 iterations 26
Cbc0038I Pass  15: suminf.    0.92747 (11) obj. -67.6127 iterations 14
Cbc0038I Pass  16: suminf.    0.70832 (6) obj. -65.8929 iterations 25
Cbc0038I Pass  17: suminf.    0.70832 (6) obj. -65.8929 iterations 0
Cbc0038I Pass  18: suminf.    1.07800 (5) obj. -65.8929 iterations 10
Cbc0038I Pass  19: suminf.    1.07800 (5) obj. -65.8929 iterations 0
Cbc0038I Pass  20: suminf.    0.92949 (8) obj. -65.8929 iterations 8
Cbc0038I Pass  21: suminf.    0.92949 (8) obj. -65.8929 iterations 1
Cbc0038I Pass  22: suminf.    1.11441 (7) obj. -65.8929 iterations 7
Cbc0038I Pass  23: suminf.    1.33346 (10) obj. -65.8929 iterations 23
Cbc0038I Pass  24: suminf.    1.22025 (10) obj. -66.4589 iterations 1
Cbc0038I Pass  25: suminf.    1.48020 (8) obj. -65.8929 iterations 19
Cbc0038I Pass  26: suminf.    0.96187 (6) obj. -65.8929 iterations 9
Cbc0038I Pass  27: suminf.    1.24172 (6) obj. -65.8929 iterations 5
Cbc0038I Pass  28: suminf.    1.59510 (12) obj. -65.8929 iterations 14
Cbc0038I Pass  29: suminf.    1.34419 (11) obj. -69.1547 iterations 2
Cbc0038I Pass  30: suminf.    1.22054 (8) obj. -65.8929 iterations 25
Cbc0038I Pass  31: suminf.    1.21136 (6) obj. -65.8929 iterations 2
Cbc0038I Pass  32: suminf.    1.38504 (6) obj. -65.8929 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 114 columns, reduced to 31 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -60.6144 to -70.6702 (0.07 seconds)
Cbc0038I Round again with cutoff of -79.2159
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.33685 (35) obj. -111.605 iterations 0
Cbc0038I Pass  33: suminf.    0.82438 (11) obj. -79.2159 iterations 40
Cbc0038I Pass  34: suminf.    0.56856 (11) obj. -80.2392 iterations 1
Cbc0038I Pass  35: suminf.    1.78669 (10) obj. -79.2159 iterations 27
Cbc0038I Pass  36: suminf.    0.81752 (10) obj. -79.2159 iterations 2
Cbc0038I Pass  37: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  38: suminf.    1.62815 (11) obj. -79.2159 iterations 4
Cbc0038I Pass  39: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  40: suminf.    1.78669 (10) obj. -79.2159 iterations 6
Cbc0038I Pass  41: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I Pass  42: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  43: suminf.    1.62815 (11) obj. -79.2159 iterations 4
Cbc0038I Pass  44: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  45: suminf.    1.78669 (10) obj. -79.2159 iterations 6
Cbc0038I Pass  46: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I Pass  47: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  48: suminf.    1.62815 (11) obj. -79.2159 iterations 4
Cbc0038I Pass  49: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  50: suminf.    1.78669 (10) obj. -79.2159 iterations 6
Cbc0038I Pass  51: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I Pass  52: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  53: suminf.    1.62815 (11) obj. -79.2159 iterations 4
Cbc0038I Pass  54: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  55: suminf.    1.78669 (10) obj. -79.2159 iterations 6
Cbc0038I Pass  56: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I Pass  57: suminf.    0.78129 (8) obj. -79.2159 iterations 3
Cbc0038I Pass  58: suminf.    1.62815 (11) obj. -79.2159 iterations 4
Cbc0038I Pass  59: suminf.    1.62815 (11) obj. -79.2159 iterations 0
Cbc0038I Pass  60: suminf.    1.78669 (10) obj. -79.2159 iterations 6
Cbc0038I Pass  61: suminf.    0.81752 (10) obj. -79.2159 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -70.6702 - took 0.06 seconds
Cbc0012I Integer solution of -70.6702 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 107 rows 114 columns, reduced to 23 rows 27 columns
Cbc0031I 58 added rows had average density of 17.465517
Cbc0013I At root node, 58 cuts changed objective from -113.39829 to -86.244542 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11725 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1142 row cuts average 97.4 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 465 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 480 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 336 row cuts average 55.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 272 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -70.6702 best solution, best possible -86.244542 (2.43 seconds)
Cbc0012I Integer solution of -76.98298 found by rounding after 3463 iterations and 2 nodes (2.45 seconds)
Cbc0012I Integer solution of -78.3 found by rounding after 3751 iterations and 3 nodes (2.75 seconds)
Cbc0010I After 6 nodes, 5 on tree, -78.3 best solution, best possible -84.705659 (3.20 seconds)
Cbc0010I After 18 nodes, 7 on tree, -78.3 best solution, best possible -84.705659 (3.92 seconds)
Cbc0012I Integer solution of -78.6942 found by rounding after 4980 iterations and 27 nodes (4.26 seconds)
Cbc0001I Search completed - best objective -78.6942, took 5114 iterations and 30 nodes (4.26 seconds)
Cbc0032I Strong branching done 500 times (9576 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 11, 27 variables fixed on reduced cost
Total time (CPU seconds):       2.99   (Wallclock seconds):       4.28

