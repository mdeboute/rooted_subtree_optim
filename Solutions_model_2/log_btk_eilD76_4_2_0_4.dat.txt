Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 55 (-23) columns and 300 (-153) elements
Clp1000I sum of infeasibilities 2.86904e-05 - average 2.92759e-07, 23 fixed columns
Coin0506I Presolve 35 (-63) rows, 25 (-30) columns and 114 (-186) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 1.3353756 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Coin0511I After Postsolve, objective 391.13648, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Coin0511I After Postsolve, objective 391.13648, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 391.1364806 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 98 rows, 55 columns (54 integer (54 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.572%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 0.763683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -379.009 iterations 13
Cbc0038I Solution found of -379.009
Cbc0038I Relaxing continuous gives -379.009
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 15 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -380.222
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.02339 (1) obj. -380.222 iterations 1
Cbc0038I Pass   3: suminf.    0.39976 (2) obj. -380.222 iterations 3
Cbc0038I Pass   4: suminf.    0.71143 (4) obj. -380.222 iterations 9
Cbc0038I Pass   5: suminf.    0.71143 (4) obj. -380.222 iterations 2
Cbc0038I Pass   6: suminf.    1.18237 (3) obj. -380.222 iterations 8
Cbc0038I Pass   7: suminf.    1.14710 (8) obj. -380.222 iterations 8
Cbc0038I Pass   8: suminf.    0.74833 (2) obj. -380.222 iterations 9
Cbc0038I Pass   9: suminf.    0.02339 (1) obj. -380.222 iterations 5
Cbc0038I Pass  10: suminf.    0.39976 (2) obj. -380.222 iterations 4
Cbc0038I Pass  11: suminf.    1.61096 (4) obj. -380.222 iterations 9
Cbc0038I Pass  12: suminf.    0.39976 (2) obj. -380.222 iterations 8
Cbc0038I Pass  13: suminf.    0.48622 (5) obj. -380.222 iterations 9
Cbc0038I Pass  14: suminf.    0.98476 (7) obj. -380.222 iterations 14
Cbc0038I Pass  15: suminf.    0.94065 (6) obj. -380.222 iterations 5
Cbc0038I Pass  16: suminf.    1.57453 (5) obj. -380.222 iterations 15
Cbc0038I Pass  17: suminf.    1.75563 (9) obj. -380.222 iterations 13
Cbc0038I Pass  18: suminf.    0.74845 (6) obj. -380.222 iterations 10
Cbc0038I Pass  19: suminf.    0.71143 (4) obj. -380.222 iterations 7
Cbc0038I Pass  20: suminf.    1.18237 (3) obj. -380.222 iterations 9
Cbc0038I Pass  21: suminf.    1.14710 (8) obj. -380.222 iterations 7
Cbc0038I Pass  22: suminf.    0.74833 (2) obj. -380.222 iterations 9
Cbc0038I Pass  23: suminf.    0.02339 (1) obj. -380.222 iterations 3
Cbc0038I Pass  24: suminf.    0.39976 (2) obj. -380.222 iterations 4
Cbc0038I Pass  25: suminf.    0.07101 (2) obj. -380.222 iterations 6
Cbc0038I Pass  26: suminf.    1.18237 (3) obj. -380.222 iterations 12
Cbc0038I Pass  27: suminf.    0.72421 (8) obj. -380.222 iterations 6
Cbc0038I Pass  28: suminf.    0.71143 (4) obj. -380.222 iterations 4
Cbc0038I Pass  29: suminf.    1.18237 (3) obj. -380.222 iterations 8
Cbc0038I Pass  30: suminf.    1.14710 (8) obj. -380.222 iterations 6
Cbc0038I Pass  31: suminf.    0.74833 (2) obj. -380.222 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -379.009 - took 0.01 seconds
Cbc0012I Integer solution of -379.00944 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 98 rows 55 columns, reduced to 15 rows 10 columns
Cbc0031I 7 added rows had average density of 11.571429
Cbc0013I At root node, 27 cuts changed objective from -391.13648 to -379.00944 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 2.8 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -379.00944, took 33 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-69) rows, 95 (-57) columns and 1363 (-1940) elements
Clp1000I sum of infeasibilities 6.97773e-07 - average 8.20909e-09, 28 fixed columns
Coin0506I Presolve 60 (-25) rows, 67 (-28) columns and 693 (-670) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 6.1635005 - largest nonzero change 1.6829834e-05 ( 0.00091204228%) - largest zero change 2.9595439e-05
Clp0000I Optimal - objective value 435.29973
Clp0000I Optimal - objective value 435.29973
Coin0511I After Postsolve, objective 435.29973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.1972169 - largest nonzero change 1.7045609e-05 ( 0.00091204228%) - largest zero change 2.9959698e-05
Clp0000I Optimal - objective value 435.29973
Clp0000I Optimal - objective value 435.29973
Clp0000I Optimal - objective value 435.29973
Coin0511I After Postsolve, objective 435.29973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 435.2997261 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1373 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.983%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 5.50248
Cbc0038I Pass   1: suminf.    3.50500 (26) obj. -352.504 iterations 22
Cbc0038I Pass   2: suminf.    3.50500 (26) obj. -352.504 iterations 1
Cbc0038I Pass   3: suminf.    1.81365 (15) obj. -338.964 iterations 11
Cbc0038I Solution found of -324.017
Cbc0038I Rounding solution of -334.346 is better than previous of -324.017

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -334.346 to -379.009 (0.04 seconds)
Cbc0038I Round again with cutoff of -383.155
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.85749 (33) obj. -383.155 iterations 6
Cbc0038I Pass   5: suminf.    1.39928 (10) obj. -383.155 iterations 29
Cbc0038I Pass   6: suminf.    1.05623 (8) obj. -387.799 iterations 4
Cbc0038I Pass   7: suminf.    0.07997 (1) obj. -383.155 iterations 11
Cbc0038I Pass   8: suminf.    0.27044 (2) obj. -383.155 iterations 3
Cbc0038I Pass   9: suminf.    1.14238 (5) obj. -383.155 iterations 11
Cbc0038I Pass  10: suminf.    0.48707 (4) obj. -383.155 iterations 8
Cbc0038I Pass  11: suminf.    0.18225 (2) obj. -383.155 iterations 7
Cbc0038I Pass  12: suminf.    0.11855 (1) obj. -383.155 iterations 3
Cbc0038I Pass  13: suminf.    2.34725 (13) obj. -383.155 iterations 18
Cbc0038I Pass  14: suminf.    1.47012 (9) obj. -388.84 iterations 12
Cbc0038I Pass  15: suminf.    2.68094 (15) obj. -383.155 iterations 35
Cbc0038I Pass  16: suminf.    2.38937 (14) obj. -383.155 iterations 8
Cbc0038I Pass  17: suminf.    2.38937 (14) obj. -383.155 iterations 5
Cbc0038I Pass  18: suminf.    0.15363 (2) obj. -383.155 iterations 23
Cbc0038I Pass  19: suminf.    0.11855 (1) obj. -383.155 iterations 3
Cbc0038I Pass  20: suminf.    0.18225 (2) obj. -383.155 iterations 3
Cbc0038I Pass  21: suminf.    2.99161 (14) obj. -383.155 iterations 14
Cbc0038I Pass  22: suminf.    1.82758 (9) obj. -383.155 iterations 7
Cbc0038I Pass  23: suminf.    1.27374 (7) obj. -384.564 iterations 2
Cbc0038I Pass  24: suminf.    0.09926 (1) obj. -383.155 iterations 10
Cbc0038I Pass  25: suminf.    0.22634 (2) obj. -383.155 iterations 3
Cbc0038I Pass  26: suminf.    2.06335 (8) obj. -383.155 iterations 13
Cbc0038I Pass  27: suminf.    1.54666 (8) obj. -383.155 iterations 6
Cbc0038I Pass  28: suminf.    1.08521 (7) obj. -383.155 iterations 3
Cbc0038I Pass  29: suminf.    2.11648 (11) obj. -383.155 iterations 14
Cbc0038I Pass  30: suminf.    1.56745 (9) obj. -386.271 iterations 11
Cbc0038I Pass  31: suminf.    0.09926 (1) obj. -383.155 iterations 13
Cbc0038I Pass  32: suminf.    0.22634 (2) obj. -383.155 iterations 2
Cbc0038I Pass  33: suminf.    2.29020 (15) obj. -383.155 iterations 19
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -390.617
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.94330 (33) obj. -390.617 iterations 0
Cbc0038I Pass  34: suminf.    3.29557 (23) obj. -390.617 iterations 14
Cbc0038I Pass  35: suminf.    3.09860 (22) obj. -390.617 iterations 3
Cbc0038I Pass  36: suminf.    1.49649 (12) obj. -390.617 iterations 15
Cbc0038I Pass  37: suminf.    1.33845 (11) obj. -390.617 iterations 1
Cbc0038I Pass  38: suminf.    0.78851 (5) obj. -390.617 iterations 26
Cbc0038I Pass  39: suminf.    0.72185 (3) obj. -390.617 iterations 2
Cbc0038I Pass  40: suminf.    0.65539 (3) obj. -390.617 iterations 22
Cbc0038I Pass  41: suminf.    0.65539 (3) obj. -390.617 iterations 4
Cbc0038I Pass  42: suminf.    0.72185 (3) obj. -390.617 iterations 5
Cbc0038I Pass  43: suminf.    1.66240 (11) obj. -390.617 iterations 32
Cbc0038I Pass  44: suminf.    1.33961 (8) obj. -390.617 iterations 7
Cbc0038I Pass  45: suminf.    0.59058 (3) obj. -390.617 iterations 20
Cbc0038I Pass  46: suminf.    0.39888 (3) obj. -390.617 iterations 8
Cbc0038I Pass  47: suminf.    2.14678 (12) obj. -390.617 iterations 24
Cbc0038I Pass  48: suminf.    1.25929 (9) obj. -390.617 iterations 7
Cbc0038I Pass  49: suminf.    0.94812 (7) obj. -390.617 iterations 24
Cbc0038I Pass  50: suminf.    0.94812 (7) obj. -390.617 iterations 0
Cbc0038I Pass  51: suminf.    1.01448 (7) obj. -390.617 iterations 3
Cbc0038I Pass  52: suminf.    1.01448 (7) obj. -390.617 iterations 1
Cbc0038I Pass  53: suminf.    0.94812 (7) obj. -390.617 iterations 4
Cbc0038I Pass  54: suminf.    1.24199 (7) obj. -390.617 iterations 8
Cbc0038I Pass  55: suminf.    1.24199 (7) obj. -390.617 iterations 2
Cbc0038I Pass  56: suminf.    0.95494 (5) obj. -390.617 iterations 26
Cbc0038I Pass  57: suminf.    0.94812 (7) obj. -390.617 iterations 2
Cbc0038I Pass  58: suminf.    1.01448 (7) obj. -390.617 iterations 3
Cbc0038I Pass  59: suminf.    1.01448 (7) obj. -390.617 iterations 1
Cbc0038I Pass  60: suminf.    0.94812 (7) obj. -390.617 iterations 4
Cbc0038I Pass  61: suminf.    1.90985 (14) obj. -390.617 iterations 25
Cbc0038I Pass  62: suminf.    1.51926 (11) obj. -390.617 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -379.009 - took 0.05 seconds
Cbc0012I Integer solution of -379.00944 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 18 added rows had average density of 3.6666667
Cbc0013I At root node, 41 cuts changed objective from -420.46576 to -379.00944 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 363 row cuts average 14.7 elements, 30 column cuts (30 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0001I Search completed - best objective -379.00944, took 94 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 98 (-57) rows, 55 (-23) columns and 300 (-153) elements
Clp1000I sum of infeasibilities 2.86904e-05 - average 2.92759e-07, 23 fixed columns
Coin0506I Presolve 35 (-63) rows, 25 (-30) columns and 114 (-186) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 1.3353756 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Coin0511I After Postsolve, objective 391.13648, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Clp0000I Optimal - objective value 391.13648
Coin0511I After Postsolve, objective 391.13648, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 391.1364806 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 98 rows, 55 columns (54 integer (54 of which binary)) and 300 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.572%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 0.763683
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -379.009 iterations 13
Cbc0038I Solution found of -379.009
Cbc0038I Relaxing continuous gives -379.009
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 15 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -380.222
Cbc0038I Reduced cost fixing fixed 29 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.02339 (1) obj. -380.222 iterations 1
Cbc0038I Pass   3: suminf.    0.39976 (2) obj. -380.222 iterations 3
Cbc0038I Pass   4: suminf.    0.71143 (4) obj. -380.222 iterations 9
Cbc0038I Pass   5: suminf.    0.71143 (4) obj. -380.222 iterations 2
Cbc0038I Pass   6: suminf.    1.18237 (3) obj. -380.222 iterations 8
Cbc0038I Pass   7: suminf.    1.14710 (8) obj. -380.222 iterations 8
Cbc0038I Pass   8: suminf.    0.74833 (2) obj. -380.222 iterations 9
Cbc0038I Pass   9: suminf.    0.02339 (1) obj. -380.222 iterations 5
Cbc0038I Pass  10: suminf.    0.39976 (2) obj. -380.222 iterations 4
Cbc0038I Pass  11: suminf.    1.61096 (4) obj. -380.222 iterations 9
Cbc0038I Pass  12: suminf.    0.39976 (2) obj. -380.222 iterations 8
Cbc0038I Pass  13: suminf.    0.48622 (5) obj. -380.222 iterations 9
Cbc0038I Pass  14: suminf.    0.98476 (7) obj. -380.222 iterations 14
Cbc0038I Pass  15: suminf.    0.94065 (6) obj. -380.222 iterations 5
Cbc0038I Pass  16: suminf.    1.57453 (5) obj. -380.222 iterations 15
Cbc0038I Pass  17: suminf.    1.75563 (9) obj. -380.222 iterations 13
Cbc0038I Pass  18: suminf.    0.74845 (6) obj. -380.222 iterations 10
Cbc0038I Pass  19: suminf.    0.71143 (4) obj. -380.222 iterations 7
Cbc0038I Pass  20: suminf.    1.18237 (3) obj. -380.222 iterations 9
Cbc0038I Pass  21: suminf.    1.14710 (8) obj. -380.222 iterations 7
Cbc0038I Pass  22: suminf.    0.74833 (2) obj. -380.222 iterations 9
Cbc0038I Pass  23: suminf.    0.02339 (1) obj. -380.222 iterations 3
Cbc0038I Pass  24: suminf.    0.39976 (2) obj. -380.222 iterations 4
Cbc0038I Pass  25: suminf.    0.07101 (2) obj. -380.222 iterations 6
Cbc0038I Pass  26: suminf.    1.18237 (3) obj. -380.222 iterations 12
Cbc0038I Pass  27: suminf.    0.72421 (8) obj. -380.222 iterations 6
Cbc0038I Pass  28: suminf.    0.71143 (4) obj. -380.222 iterations 4
Cbc0038I Pass  29: suminf.    1.18237 (3) obj. -380.222 iterations 8
Cbc0038I Pass  30: suminf.    1.14710 (8) obj. -380.222 iterations 6
Cbc0038I Pass  31: suminf.    0.74833 (2) obj. -380.222 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 55 columns, reduced to 21 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -379.009 - took 0.01 seconds
Cbc0012I Integer solution of -379.00944 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 98 rows 55 columns, reduced to 15 rows 10 columns
Cbc0031I 7 added rows had average density of 11.571429
Cbc0013I At root node, 27 cuts changed objective from -391.13648 to -379.00944 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 29 row cuts average 2.8 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 28 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 54.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0001I Search completed - best objective -379.00944, took 33 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 85 (-70) rows, 95 (-58) columns and 1363 (-1941) elements
Clp1000I sum of infeasibilities 6.97773e-07 - average 8.20909e-09, 28 fixed columns
Coin0506I Presolve 60 (-25) rows, 67 (-28) columns and 693 (-670) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 6.1635005 - largest nonzero change 1.6829834e-05 ( 0.00091204228%) - largest zero change 2.9595439e-05
Clp0000I Optimal - objective value 435.29973
Clp0000I Optimal - objective value 435.29973
Coin0511I After Postsolve, objective 435.29973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.1972169 - largest nonzero change 1.7045609e-05 ( 0.00091204228%) - largest zero change 2.9959698e-05
Clp0000I Optimal - objective value 435.29973
Clp0000I Optimal - objective value 435.29973
Clp0000I Optimal - objective value 435.29973
Coin0511I After Postsolve, objective 435.29973, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 435.2997261 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 85 rows, 95 columns (95 integer (95 of which binary)) and 1373 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.983%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 5.50248
Cbc0038I Pass   1: suminf.    3.50500 (26) obj. -352.504 iterations 22
Cbc0038I Pass   2: suminf.    3.50500 (26) obj. -352.504 iterations 1
Cbc0038I Pass   3: suminf.    1.81365 (15) obj. -338.964 iterations 11
Cbc0038I Solution found of -324.017
Cbc0038I Rounding solution of -334.346 is better than previous of -324.017

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -334.346 to -379.009 (0.04 seconds)
Cbc0038I Round again with cutoff of -383.155
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.85749 (33) obj. -383.155 iterations 6
Cbc0038I Pass   5: suminf.    1.39928 (10) obj. -383.155 iterations 29
Cbc0038I Pass   6: suminf.    1.05623 (8) obj. -387.799 iterations 4
Cbc0038I Pass   7: suminf.    0.07997 (1) obj. -383.155 iterations 11
Cbc0038I Pass   8: suminf.    0.27044 (2) obj. -383.155 iterations 3
Cbc0038I Pass   9: suminf.    1.14238 (5) obj. -383.155 iterations 11
Cbc0038I Pass  10: suminf.    0.48707 (4) obj. -383.155 iterations 8
Cbc0038I Pass  11: suminf.    0.18225 (2) obj. -383.155 iterations 7
Cbc0038I Pass  12: suminf.    0.11855 (1) obj. -383.155 iterations 3
Cbc0038I Pass  13: suminf.    2.34725 (13) obj. -383.155 iterations 18
Cbc0038I Pass  14: suminf.    1.47012 (9) obj. -388.84 iterations 12
Cbc0038I Pass  15: suminf.    2.68094 (15) obj. -383.155 iterations 35
Cbc0038I Pass  16: suminf.    2.38937 (14) obj. -383.155 iterations 8
Cbc0038I Pass  17: suminf.    2.38937 (14) obj. -383.155 iterations 5
Cbc0038I Pass  18: suminf.    0.15363 (2) obj. -383.155 iterations 23
Cbc0038I Pass  19: suminf.    0.11855 (1) obj. -383.155 iterations 3
Cbc0038I Pass  20: suminf.    0.18225 (2) obj. -383.155 iterations 3
Cbc0038I Pass  21: suminf.    2.99161 (14) obj. -383.155 iterations 14
Cbc0038I Pass  22: suminf.    1.82758 (9) obj. -383.155 iterations 7
Cbc0038I Pass  23: suminf.    1.27374 (7) obj. -384.564 iterations 2
Cbc0038I Pass  24: suminf.    0.09926 (1) obj. -383.155 iterations 10
Cbc0038I Pass  25: suminf.    0.22634 (2) obj. -383.155 iterations 3
Cbc0038I Pass  26: suminf.    2.06335 (8) obj. -383.155 iterations 13
Cbc0038I Pass  27: suminf.    1.54666 (8) obj. -383.155 iterations 6
Cbc0038I Pass  28: suminf.    1.08521 (7) obj. -383.155 iterations 3
Cbc0038I Pass  29: suminf.    2.11648 (11) obj. -383.155 iterations 14
Cbc0038I Pass  30: suminf.    1.56745 (9) obj. -386.271 iterations 11
Cbc0038I Pass  31: suminf.    0.09926 (1) obj. -383.155 iterations 13
Cbc0038I Pass  32: suminf.    0.22634 (2) obj. -383.155 iterations 2
Cbc0038I Pass  33: suminf.    2.29020 (15) obj. -383.155 iterations 19
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -390.617
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.94330 (33) obj. -390.617 iterations 0
Cbc0038I Pass  34: suminf.    3.29557 (23) obj. -390.617 iterations 14
Cbc0038I Pass  35: suminf.    3.09860 (22) obj. -390.617 iterations 3
Cbc0038I Pass  36: suminf.    1.49649 (12) obj. -390.617 iterations 15
Cbc0038I Pass  37: suminf.    1.33845 (11) obj. -390.617 iterations 1
Cbc0038I Pass  38: suminf.    0.78851 (5) obj. -390.617 iterations 26
Cbc0038I Pass  39: suminf.    0.72185 (3) obj. -390.617 iterations 2
Cbc0038I Pass  40: suminf.    0.65539 (3) obj. -390.617 iterations 22
Cbc0038I Pass  41: suminf.    0.65539 (3) obj. -390.617 iterations 4
Cbc0038I Pass  42: suminf.    0.72185 (3) obj. -390.617 iterations 5
Cbc0038I Pass  43: suminf.    1.66240 (11) obj. -390.617 iterations 32
Cbc0038I Pass  44: suminf.    1.33961 (8) obj. -390.617 iterations 7
Cbc0038I Pass  45: suminf.    0.59058 (3) obj. -390.617 iterations 20
Cbc0038I Pass  46: suminf.    0.39888 (3) obj. -390.617 iterations 8
Cbc0038I Pass  47: suminf.    2.14678 (12) obj. -390.617 iterations 24
Cbc0038I Pass  48: suminf.    1.25929 (9) obj. -390.617 iterations 7
Cbc0038I Pass  49: suminf.    0.94812 (7) obj. -390.617 iterations 24
Cbc0038I Pass  50: suminf.    0.94812 (7) obj. -390.617 iterations 0
Cbc0038I Pass  51: suminf.    1.01448 (7) obj. -390.617 iterations 3
Cbc0038I Pass  52: suminf.    1.01448 (7) obj. -390.617 iterations 1
Cbc0038I Pass  53: suminf.    0.94812 (7) obj. -390.617 iterations 4
Cbc0038I Pass  54: suminf.    1.24199 (7) obj. -390.617 iterations 8
Cbc0038I Pass  55: suminf.    1.24199 (7) obj. -390.617 iterations 2
Cbc0038I Pass  56: suminf.    0.95494 (5) obj. -390.617 iterations 26
Cbc0038I Pass  57: suminf.    0.94812 (7) obj. -390.617 iterations 2
Cbc0038I Pass  58: suminf.    1.01448 (7) obj. -390.617 iterations 3
Cbc0038I Pass  59: suminf.    1.01448 (7) obj. -390.617 iterations 1
Cbc0038I Pass  60: suminf.    0.94812 (7) obj. -390.617 iterations 4
Cbc0038I Pass  61: suminf.    1.90985 (14) obj. -390.617 iterations 25
Cbc0038I Pass  62: suminf.    1.51926 (11) obj. -390.617 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 85 rows 95 columns, reduced to 13 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -379.009 - took 0.05 seconds
Cbc0012I Integer solution of -379.00944 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0031I 18 added rows had average density of 3.6666667
Cbc0013I At root node, 41 cuts changed objective from -420.46576 to -379.00944 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 363 row cuts average 14.7 elements, 30 column cuts (30 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 12 row cuts average 35.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -379.00944, took 94 iterations and 0 nodes (0.16 seconds)
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.17

