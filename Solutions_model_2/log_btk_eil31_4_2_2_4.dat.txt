Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 134 (-49) elements
Clp1000I sum of infeasibilities 8.9233e-08 - average 1.93985e-09, 2 fixed columns
Coin0506I Presolve 42 (-4) rows, 23 (-2) columns and 123 (-11) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Coin0511I After Postsolve, objective 59.498152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Coin0511I After Postsolve, objective 59.498152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.49815153 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 25 columns (24 integer (24 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.87339
Cbc0038I Solution found of -7.00943
Cbc0038I Relaxing continuous gives -7.19795
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7.19795 to -26.3602 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.6016
Cbc0038I Pass   1: suminf.    1.28190 (5) obj. -29.6016 iterations 21
Cbc0038I Pass   2: suminf.    0.05000 (1) obj. -32.9867 iterations 8
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. -32.9867 iterations 1
Cbc0038I Pass   4: suminf.    0.21507 (1) obj. -29.6016 iterations 2
Cbc0038I Pass   5: suminf.    1.92148 (6) obj. -29.6016 iterations 10
Cbc0038I Pass   6: suminf.    0.95818 (4) obj. -29.6016 iterations 4
Cbc0038I Pass   7: suminf.    0.69010 (2) obj. -29.6016 iterations 2
Cbc0038I Pass   8: suminf.    0.65777 (2) obj. -29.6016 iterations 2
Cbc0038I Pass   9: suminf.    0.93864 (4) obj. -29.6016 iterations 7
Cbc0038I Pass  10: suminf.    0.51069 (2) obj. -29.6016 iterations 4
Cbc0038I Pass  11: suminf.    0.20000 (1) obj. -29.6016 iterations 2
Cbc0038I Pass  12: suminf.    0.37817 (1) obj. -29.6016 iterations 1
Cbc0038I Pass  13: suminf.    0.20000 (1) obj. -32.2015 iterations 2
Cbc0038I Pass  14: suminf.    0.68022 (4) obj. -29.6016 iterations 12
Cbc0038I Pass  15: suminf.    0.49435 (2) obj. -29.6016 iterations 2
Cbc0038I Pass  16: suminf.    0.54043 (2) obj. -31.1878 iterations 1
Cbc0038I Pass  17: suminf.    1.14830 (7) obj. -29.6016 iterations 9
Cbc0038I Pass  18: suminf.    1.12412 (5) obj. -29.6016 iterations 3
Cbc0038I Pass  19: suminf.    0.27856 (1) obj. -29.6016 iterations 8
Cbc0038I Pass  20: suminf.    0.16250 (1) obj. -30.3363 iterations 2
Cbc0038I Pass  21: suminf.    0.98810 (6) obj. -29.6016 iterations 5
Cbc0038I Pass  22: suminf.    0.57989 (4) obj. -29.6016 iterations 3
Cbc0038I Pass  23: suminf.    0.44852 (2) obj. -29.6016 iterations 7
Cbc0038I Pass  24: suminf.    0.64223 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  25: suminf.    0.99269 (3) obj. -29.6016 iterations 2
Cbc0038I Pass  26: suminf.    0.94657 (3) obj. -29.6016 iterations 6
Cbc0038I Pass  27: suminf.    0.81863 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  28: suminf.    0.69757 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  29: suminf.    1.86450 (5) obj. -29.6016 iterations 5
Cbc0038I Pass  30: suminf.    0.65230 (6) obj. -29.6016 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.3602 - took 0.06 seconds
Cbc0012I Integer solution of -26.360241 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0031I 14 added rows had average density of 18.142857
Cbc0013I At root node, 14 cuts changed objective from -58.772551 to -42.099855 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1232 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 555 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.36024089999999, took 2551 iterations and 14 nodes (0.22 seconds)
Cbc0032I Strong branching done 162 times (1884 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 44 (-19) rows, 47 (-15) columns and 413 (-233) elements
Clp1000I sum of infeasibilities 1.11661e-08 - average 2.53775e-10, 23 fixed columns
Coin0506I Presolve 21 (-23) rows, 24 (-23) columns and 85 (-328) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.8502828 - largest nonzero change 0 ( 0%) - largest zero change 2.8426234e-05
Clp0000I Optimal - objective value 34.356454
Clp0000I Optimal - objective value 34.356454
Coin0511I After Postsolve, objective 34.356454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5859588 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 77.843029
Clp0000I Optimal - objective value 77.843029
Clp0000I Optimal - objective value 77.843029
Coin0511I After Postsolve, objective 77.843029, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 77.84302856 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 329 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.963%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 2.60648
Cbc0038I Pass   1: suminf.    0.39657 (6) obj. -20.1919 iterations 8
Cbc0038I Pass   2: suminf.    0.39657 (6) obj. -20.1919 iterations 1
Cbc0038I Solution found of -4.45356
Cbc0038I Rounding solution of -20.0942 is better than previous of -4.45356

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -20.0942 to -25.0916 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.2925
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.85683 (14) obj. -28.2925 iterations 1
Cbc0038I Pass   4: suminf.    0.85683 (14) obj. -28.2925 iterations 0
Cbc0038I Pass   5: suminf.    0.03750 (1) obj. -30.2683 iterations 18
Cbc0038I Pass   6: suminf.    0.08779 (1) obj. -28.2925 iterations 1
Cbc0038I Pass   7: suminf.    1.34959 (6) obj. -28.2925 iterations 9
Cbc0038I Pass   8: suminf.    0.67967 (5) obj. -28.2925 iterations 2
Cbc0038I Pass   9: suminf.    0.65764 (5) obj. -28.2925 iterations 1
Cbc0038I Pass  10: suminf.    0.18703 (2) obj. -28.2925 iterations 5
Cbc0038I Pass  11: suminf.    0.18703 (2) obj. -28.2925 iterations 0
Cbc0038I Pass  12: suminf.    0.42144 (2) obj. -28.2925 iterations 1
Cbc0038I Pass  13: suminf.    0.60019 (5) obj. -28.2925 iterations 6
Cbc0038I Pass  14: suminf.    0.55216 (4) obj. -28.2925 iterations 1
Cbc0038I Pass  15: suminf.    0.68255 (3) obj. -28.2925 iterations 5
Cbc0038I Pass  16: suminf.    0.68255 (3) obj. -28.2925 iterations 0
Cbc0038I Pass  17: suminf.    0.77881 (3) obj. -32.8348 iterations 1
Cbc0038I Pass  18: suminf.    0.59651 (2) obj. -28.2925 iterations 2
Cbc0038I Pass  19: suminf.    0.60378 (6) obj. -28.2925 iterations 5
Cbc0038I Pass  20: suminf.    0.60378 (6) obj. -28.2925 iterations 0
Cbc0038I Pass  21: suminf.    0.99779 (3) obj. -28.2925 iterations 6
Cbc0038I Pass  22: suminf.    0.68255 (3) obj. -28.2925 iterations 1
Cbc0038I Pass  23: suminf.    0.68255 (3) obj. -28.2925 iterations 0
Cbc0038I Pass  24: suminf.    0.77881 (3) obj. -32.8348 iterations 1
Cbc0038I Pass  25: suminf.    0.59651 (2) obj. -28.2925 iterations 2
Cbc0038I Pass  26: suminf.    0.85877 (5) obj. -30.5663 iterations 9
Cbc0038I Pass  27: suminf.    0.85877 (5) obj. -30.5663 iterations 0
Cbc0038I Pass  28: suminf.    0.87537 (5) obj. -28.2925 iterations 8
Cbc0038I Pass  29: suminf.    0.51783 (8) obj. -28.2925 iterations 8
Cbc0038I Pass  30: suminf.    0.68255 (3) obj. -28.2925 iterations 10
Cbc0038I Pass  31: suminf.    0.68255 (3) obj. -28.2925 iterations 0
Cbc0038I Pass  32: suminf.    0.77881 (3) obj. -32.8348 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -25.0916 to -25.2852 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.054
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.18418 (14) obj. -34.054 iterations 0
Cbc0038I Pass  33: suminf.    1.18418 (14) obj. -34.054 iterations 0
Cbc0038I Pass  34: suminf.    0.51072 (2) obj. -34.054 iterations 22
Cbc0038I Pass  35: suminf.    0.24451 (2) obj. -34.054 iterations 1
Cbc0038I Pass  36: suminf.    0.16630 (2) obj. -37.2378 iterations 1
Cbc0038I Pass  37: suminf.    0.51072 (2) obj. -34.054 iterations 1
Cbc0038I Pass  38: suminf.    1.10569 (8) obj. -34.054 iterations 15
Cbc0038I Pass  39: suminf.    0.68655 (5) obj. -35.5924 iterations 5
Cbc0038I Pass  40: suminf.    0.44153 (4) obj. -34.054 iterations 12
Cbc0038I Pass  41: suminf.    0.44198 (5) obj. -34.054 iterations 1
Cbc0038I Pass  42: suminf.    1.09694 (7) obj. -34.054 iterations 8
Cbc0038I Pass  43: suminf.    0.55138 (3) obj. -34.054 iterations 2
Cbc0038I Pass  44: suminf.    0.75563 (2) obj. -34.054 iterations 3
Cbc0038I Pass  45: suminf.    0.52316 (3) obj. -34.054 iterations 1
Cbc0038I Pass  46: suminf.    1.09694 (7) obj. -34.054 iterations 5
Cbc0038I Pass  47: suminf.    1.44070 (6) obj. -34.054 iterations 7
Cbc0038I Pass  48: suminf.    1.18371 (6) obj. -34.054 iterations 2
Cbc0038I Pass  49: suminf.    0.64863 (3) obj. -34.054 iterations 5
Cbc0038I Pass  50: suminf.    1.21127 (8) obj. -34.054 iterations 3
Cbc0038I Pass  51: suminf.    0.71461 (4) obj. -34.054 iterations 3
Cbc0038I Pass  52: suminf.    1.14273 (8) obj. -34.054 iterations 6
Cbc0038I Pass  53: suminf.    1.08378 (7) obj. -34.054 iterations 3
Cbc0038I Pass  54: suminf.    1.29845 (4) obj. -34.054 iterations 7
Cbc0038I Pass  55: suminf.    0.70754 (3) obj. -34.054 iterations 2
Cbc0038I Pass  56: suminf.    0.95104 (3) obj. -34.054 iterations 2
Cbc0038I Pass  57: suminf.    1.79494 (5) obj. -34.054 iterations 2
Cbc0038I Pass  58: suminf.    1.79494 (5) obj. -34.054 iterations 0
Cbc0038I Pass  59: suminf.    0.95104 (3) obj. -34.054 iterations 3
Cbc0038I Pass  60: suminf.    1.04266 (5) obj. -34.054 iterations 8
Cbc0038I Pass  61: suminf.    0.90815 (4) obj. -34.3563 iterations 3
Cbc0038I Rounding solution of -25.7821 is better than previous of -25.2852

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -25.7821 to -26.3602 (0.06 seconds)
Cbc0038I Round again with cutoff of -40.9678
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.45292 (14) obj. -40.9678 iterations 0
Cbc0038I Pass  62: suminf.    0.70534 (6) obj. -40.9678 iterations 11
Cbc0038I Pass  63: suminf.    0.48097 (6) obj. -42.7627 iterations 1
Cbc0038I Pass  64: suminf.    0.62400 (5) obj. -40.9678 iterations 8
Cbc0038I Pass  65: suminf.    0.46036 (5) obj. -40.9678 iterations 1
Cbc0038I Pass  66: suminf.    1.09337 (8) obj. -40.9678 iterations 7
Cbc0038I Pass  67: suminf.    1.05723 (11) obj. -40.9678 iterations 3
Cbc0038I Pass  68: suminf.    1.50953 (5) obj. -40.9678 iterations 9
Cbc0038I Pass  69: suminf.    1.30370 (5) obj. -40.9678 iterations 2
Cbc0038I Pass  70: suminf.    1.50953 (5) obj. -40.9678 iterations 2
Cbc0038I Pass  71: suminf.    2.12101 (7) obj. -40.9678 iterations 8
Cbc0038I Pass  72: suminf.    1.80575 (7) obj. -40.9678 iterations 2
Cbc0038I Pass  73: suminf.    2.12101 (7) obj. -40.9678 iterations 4
Cbc0038I Pass  74: suminf.    2.16021 (8) obj. -40.9678 iterations 5
Cbc0038I Pass  75: suminf.    2.13541 (12) obj. -40.9678 iterations 1
Cbc0038I Pass  76: suminf.    2.65185 (7) obj. -40.9678 iterations 13
Cbc0038I Pass  77: suminf.    1.41452 (8) obj. -40.9678 iterations 6
Cbc0038I Pass  78: suminf.    0.88878 (7) obj. -40.9678 iterations 3
Cbc0038I Pass  79: suminf.    2.11918 (8) obj. -40.9678 iterations 4
Cbc0038I Pass  80: suminf.    1.12464 (6) obj. -40.9678 iterations 8
Cbc0038I Pass  81: suminf.    1.10089 (6) obj. -40.9678 iterations 4
Cbc0038I Pass  82: suminf.    1.59639 (8) obj. -40.9678 iterations 6
Cbc0038I Pass  83: suminf.    1.11347 (11) obj. -40.9678 iterations 3
Cbc0038I Pass  84: suminf.    0.88878 (7) obj. -40.9678 iterations 3
Cbc0038I Pass  85: suminf.    2.11918 (8) obj. -40.9678 iterations 4
Cbc0038I Pass  86: suminf.    1.12464 (6) obj. -40.9678 iterations 8
Cbc0038I Pass  87: suminf.    1.10089 (6) obj. -40.9678 iterations 4
Cbc0038I Pass  88: suminf.    1.59639 (8) obj. -40.9678 iterations 6
Cbc0038I Pass  89: suminf.    1.11347 (11) obj. -40.9678 iterations 3
Cbc0038I Pass  90: suminf.    0.88878 (7) obj. -40.9678 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 24 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -26.3602 - took 0.06 seconds
Cbc0012I Integer solution of -26.360241 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 12 rows 13 columns
Cbc0031I 14 added rows had average density of 11.642857
Cbc0013I At root node, 14 cuts changed objective from -57.099914 to -32.837512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 786 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 741 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 88 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 62 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 53 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 200 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.739 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.360241 best solution, best possible -32.837512 (1.59 seconds)
Cbc0010I After 7 nodes, 6 on tree, -26.360241 best solution, best possible -32.837512 (2.38 seconds)
Cbc0001I Search completed - best objective -26.36024089999999, took 2613 iterations and 18 nodes (2.83 seconds)
Cbc0032I Strong branching done 290 times (2156 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 7, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.78   (Wallclock seconds):       2.83

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 25 (-8) columns and 134 (-49) elements
Clp1000I sum of infeasibilities 8.9233e-08 - average 1.93985e-09, 2 fixed columns
Coin0506I Presolve 42 (-4) rows, 23 (-2) columns and 123 (-11) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Coin0511I After Postsolve, objective 59.498152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Clp0000I Optimal - objective value 59.498152
Coin0511I After Postsolve, objective 59.498152, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.49815153 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 25 columns (24 integer (24 of which binary)) and 136 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 4.87339
Cbc0038I Solution found of -7.00943
Cbc0038I Relaxing continuous gives -7.19795
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -7.19795 to -26.3602 (0.02 seconds)
Cbc0038I Round again with cutoff of -29.6016
Cbc0038I Pass   1: suminf.    1.28190 (5) obj. -29.6016 iterations 21
Cbc0038I Pass   2: suminf.    0.05000 (1) obj. -32.9867 iterations 8
Cbc0038I Pass   3: suminf.    0.05000 (1) obj. -32.9867 iterations 1
Cbc0038I Pass   4: suminf.    0.21507 (1) obj. -29.6016 iterations 2
Cbc0038I Pass   5: suminf.    1.92148 (6) obj. -29.6016 iterations 10
Cbc0038I Pass   6: suminf.    0.95818 (4) obj. -29.6016 iterations 4
Cbc0038I Pass   7: suminf.    0.69010 (2) obj. -29.6016 iterations 2
Cbc0038I Pass   8: suminf.    0.65777 (2) obj. -29.6016 iterations 2
Cbc0038I Pass   9: suminf.    0.93864 (4) obj. -29.6016 iterations 7
Cbc0038I Pass  10: suminf.    0.51069 (2) obj. -29.6016 iterations 4
Cbc0038I Pass  11: suminf.    0.20000 (1) obj. -29.6016 iterations 2
Cbc0038I Pass  12: suminf.    0.37817 (1) obj. -29.6016 iterations 1
Cbc0038I Pass  13: suminf.    0.20000 (1) obj. -32.2015 iterations 2
Cbc0038I Pass  14: suminf.    0.68022 (4) obj. -29.6016 iterations 12
Cbc0038I Pass  15: suminf.    0.49435 (2) obj. -29.6016 iterations 2
Cbc0038I Pass  16: suminf.    0.54043 (2) obj. -31.1878 iterations 1
Cbc0038I Pass  17: suminf.    1.14830 (7) obj. -29.6016 iterations 9
Cbc0038I Pass  18: suminf.    1.12412 (5) obj. -29.6016 iterations 3
Cbc0038I Pass  19: suminf.    0.27856 (1) obj. -29.6016 iterations 8
Cbc0038I Pass  20: suminf.    0.16250 (1) obj. -30.3363 iterations 2
Cbc0038I Pass  21: suminf.    0.98810 (6) obj. -29.6016 iterations 5
Cbc0038I Pass  22: suminf.    0.57989 (4) obj. -29.6016 iterations 3
Cbc0038I Pass  23: suminf.    0.44852 (2) obj. -29.6016 iterations 7
Cbc0038I Pass  24: suminf.    0.64223 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  25: suminf.    0.99269 (3) obj. -29.6016 iterations 2
Cbc0038I Pass  26: suminf.    0.94657 (3) obj. -29.6016 iterations 6
Cbc0038I Pass  27: suminf.    0.81863 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  28: suminf.    0.69757 (3) obj. -29.6016 iterations 3
Cbc0038I Pass  29: suminf.    1.86450 (5) obj. -29.6016 iterations 5
Cbc0038I Pass  30: suminf.    0.65230 (6) obj. -29.6016 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 25 columns, reduced to 39 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -26.3602 - took 0.05 seconds
Cbc0012I Integer solution of -26.360241 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 25 columns, reduced to 31 rows 18 columns
Cbc0031I 14 added rows had average density of 18.142857
Cbc0013I At root node, 14 cuts changed objective from -58.772551 to -42.099855 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1232 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 555 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.36024089999999, took 2551 iterations and 14 nodes (0.24 seconds)
Cbc0032I Strong branching done 162 times (1884 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 6, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 41 (-22) columns and 325 (-324) elements
Clp1000I sum of infeasibilities 1.90042e-08 - average 4.87288e-10, 22 fixed columns
Coin0506I Presolve 17 (-22) rows, 19 (-22) columns and 67 (-258) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 2.1670172 - largest nonzero change 2.2844504e-05 ( 0.0017511358%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 29.293728
Clp0000I Optimal - objective value 29.293728
Coin0511I After Postsolve, objective 29.293728, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7555668 - largest nonzero change 2.0843928e-05 ( 0.0017511358%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 69.275428
Clp0000I Optimal - objective value 69.275428
Clp0000I Optimal - objective value 69.275428
Coin0511I After Postsolve, objective 69.275428, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.27542776 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 329 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.963%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 2.60648
Cbc0038I Pass   1: suminf.    0.39657 (6) obj. -20.1919 iterations 8
Cbc0038I Pass   2: suminf.    0.39657 (6) obj. -20.1919 iterations 1
Cbc0038I Solution found of -4.45356
Cbc0038I Rounding solution of -20.0942 is better than previous of -4.45356

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -20.0942 to -25.0916 (0.01 seconds)
Cbc0038I Round again with cutoff of -28.2925
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.85683 (14) obj. -28.2925 iterations 1
Cbc0038I Pass   4: suminf.    0.85683 (14) obj. -28.2925 iterations 0
Cbc0038I Pass   5: suminf.    0.03750 (1) obj. -30.2683 iterations 18
Cbc0038I Pass   6: suminf.    0.08779 (1) obj. -28.2925 iterations 1
Cbc0038I Pass   7: suminf.    1.34959 (6) obj. -28.2925 iterations 9
Cbc0038I Pass   8: suminf.    0.67967 (5) obj. -28.2925 iterations 2
Cbc0038I Pass   9: suminf.    0.65764 (5) obj. -28.2925 iterations 1
Cbc0038I Pass  10: suminf.    0.18703 (2) obj. -28.2925 iterations 5
Cbc0038I Pass  11: suminf.    0.18703 (2) obj. -28.2925 iterations 0
Cbc0038I Pass  12: suminf.    0.42144 (2) obj. -28.2925 iterations 1
Cbc0038I Pass  13: suminf.    0.60019 (5) obj. -28.2925 iterations 6
Cbc0038I Pass  14: suminf.    0.55216 (4) obj. -28.2925 iterations 1
Cbc0038I Pass  15: suminf.    0.68255 (3) obj. -28.2925 iterations 5
Cbc0038I Pass  16: suminf.    0.68255 (3) obj. -28.2925 iterations 0
Cbc0038I Pass  17: suminf.    0.77881 (3) obj. -32.8348 iterations 1
Cbc0038I Pass  18: suminf.    0.59651 (2) obj. -28.2925 iterations 2
Cbc0038I Pass  19: suminf.    0.60378 (6) obj. -28.2925 iterations 5
Cbc0038I Pass  20: suminf.    0.60378 (6) obj. -28.2925 iterations 0
Cbc0038I Pass  21: suminf.    0.99779 (3) obj. -28.2925 iterations 6
Cbc0038I Pass  22: suminf.    0.68255 (3) obj. -28.2925 iterations 1
Cbc0038I Pass  23: suminf.    0.68255 (3) obj. -28.2925 iterations 0
Cbc0038I Pass  24: suminf.    0.77881 (3) obj. -32.8348 iterations 1
Cbc0038I Pass  25: suminf.    0.59651 (2) obj. -28.2925 iterations 2
Cbc0038I Pass  26: suminf.    0.85877 (5) obj. -30.5663 iterations 9
Cbc0038I Pass  27: suminf.    0.85877 (5) obj. -30.5663 iterations 0
Cbc0038I Pass  28: suminf.    0.87537 (5) obj. -28.2925 iterations 8
Cbc0038I Pass  29: suminf.    0.51783 (8) obj. -28.2925 iterations 8
Cbc0038I Pass  30: suminf.    0.68255 (3) obj. -28.2925 iterations 10
Cbc0038I Pass  31: suminf.    0.68255 (3) obj. -28.2925 iterations 0
Cbc0038I Pass  32: suminf.    0.77881 (3) obj. -32.8348 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 21 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -25.0916 to -25.2852 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.054
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.18418 (14) obj. -34.054 iterations 0
Cbc0038I Pass  33: suminf.    1.18418 (14) obj. -34.054 iterations 0
Cbc0038I Pass  34: suminf.    0.51072 (2) obj. -34.054 iterations 22
Cbc0038I Pass  35: suminf.    0.24451 (2) obj. -34.054 iterations 1
Cbc0038I Pass  36: suminf.    0.16630 (2) obj. -37.2378 iterations 1
Cbc0038I Pass  37: suminf.    0.51072 (2) obj. -34.054 iterations 1
Cbc0038I Pass  38: suminf.    1.10569 (8) obj. -34.054 iterations 15
Cbc0038I Pass  39: suminf.    0.68655 (5) obj. -35.5924 iterations 5
Cbc0038I Pass  40: suminf.    0.44153 (4) obj. -34.054 iterations 12
Cbc0038I Pass  41: suminf.    0.44198 (5) obj. -34.054 iterations 1
Cbc0038I Pass  42: suminf.    1.09694 (7) obj. -34.054 iterations 8
Cbc0038I Pass  43: suminf.    0.55138 (3) obj. -34.054 iterations 2
Cbc0038I Pass  44: suminf.    0.75563 (2) obj. -34.054 iterations 3
Cbc0038I Pass  45: suminf.    0.52316 (3) obj. -34.054 iterations 1
Cbc0038I Pass  46: suminf.    1.09694 (7) obj. -34.054 iterations 5
Cbc0038I Pass  47: suminf.    1.44070 (6) obj. -34.054 iterations 7
Cbc0038I Pass  48: suminf.    1.18371 (6) obj. -34.054 iterations 2
Cbc0038I Pass  49: suminf.    0.64863 (3) obj. -34.054 iterations 5
Cbc0038I Pass  50: suminf.    1.21127 (8) obj. -34.054 iterations 3
Cbc0038I Pass  51: suminf.    0.71461 (4) obj. -34.054 iterations 3
Cbc0038I Pass  52: suminf.    1.14273 (8) obj. -34.054 iterations 6
Cbc0038I Pass  53: suminf.    1.08378 (7) obj. -34.054 iterations 3
Cbc0038I Pass  54: suminf.    1.29845 (4) obj. -34.054 iterations 7
Cbc0038I Pass  55: suminf.    0.70754 (3) obj. -34.054 iterations 2
Cbc0038I Pass  56: suminf.    0.95104 (3) obj. -34.054 iterations 2
Cbc0038I Pass  57: suminf.    1.79494 (5) obj. -34.054 iterations 2
Cbc0038I Pass  58: suminf.    1.79494 (5) obj. -34.054 iterations 0
Cbc0038I Pass  59: suminf.    0.95104 (3) obj. -34.054 iterations 3
Cbc0038I Pass  60: suminf.    1.04266 (5) obj. -34.054 iterations 8
Cbc0038I Pass  61: suminf.    0.90815 (4) obj. -34.3563 iterations 3
Cbc0038I Rounding solution of -25.7821 is better than previous of -25.2852

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 31 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -25.7821 to -26.3602 (0.06 seconds)
Cbc0038I Round again with cutoff of -40.9678
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.45292 (14) obj. -40.9678 iterations 0
Cbc0038I Pass  62: suminf.    0.70534 (6) obj. -40.9678 iterations 11
Cbc0038I Pass  63: suminf.    0.48097 (6) obj. -42.7627 iterations 1
Cbc0038I Pass  64: suminf.    0.62400 (5) obj. -40.9678 iterations 8
Cbc0038I Pass  65: suminf.    0.46036 (5) obj. -40.9678 iterations 1
Cbc0038I Pass  66: suminf.    1.09337 (8) obj. -40.9678 iterations 7
Cbc0038I Pass  67: suminf.    1.05723 (11) obj. -40.9678 iterations 3
Cbc0038I Pass  68: suminf.    1.50953 (5) obj. -40.9678 iterations 9
Cbc0038I Pass  69: suminf.    1.30370 (5) obj. -40.9678 iterations 2
Cbc0038I Pass  70: suminf.    1.50953 (5) obj. -40.9678 iterations 2
Cbc0038I Pass  71: suminf.    2.12101 (7) obj. -40.9678 iterations 8
Cbc0038I Pass  72: suminf.    1.80575 (7) obj. -40.9678 iterations 2
Cbc0038I Pass  73: suminf.    2.12101 (7) obj. -40.9678 iterations 4
Cbc0038I Pass  74: suminf.    2.16021 (8) obj. -40.9678 iterations 5
Cbc0038I Pass  75: suminf.    2.13541 (12) obj. -40.9678 iterations 1
Cbc0038I Pass  76: suminf.    2.65185 (7) obj. -40.9678 iterations 13
Cbc0038I Pass  77: suminf.    1.41452 (8) obj. -40.9678 iterations 6
Cbc0038I Pass  78: suminf.    0.88878 (7) obj. -40.9678 iterations 3
Cbc0038I Pass  79: suminf.    2.11918 (8) obj. -40.9678 iterations 4
Cbc0038I Pass  80: suminf.    1.12464 (6) obj. -40.9678 iterations 8
Cbc0038I Pass  81: suminf.    1.10089 (6) obj. -40.9678 iterations 4
Cbc0038I Pass  82: suminf.    1.59639 (8) obj. -40.9678 iterations 6
Cbc0038I Pass  83: suminf.    1.11347 (11) obj. -40.9678 iterations 3
Cbc0038I Pass  84: suminf.    0.88878 (7) obj. -40.9678 iterations 3
Cbc0038I Pass  85: suminf.    2.11918 (8) obj. -40.9678 iterations 4
Cbc0038I Pass  86: suminf.    1.12464 (6) obj. -40.9678 iterations 8
Cbc0038I Pass  87: suminf.    1.10089 (6) obj. -40.9678 iterations 4
Cbc0038I Pass  88: suminf.    1.59639 (8) obj. -40.9678 iterations 6
Cbc0038I Pass  89: suminf.    1.11347 (11) obj. -40.9678 iterations 3
Cbc0038I Pass  90: suminf.    0.88878 (7) obj. -40.9678 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 24 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -26.3602 - took 0.06 seconds
Cbc0012I Integer solution of -26.360241 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 12 rows 13 columns
Cbc0031I 14 added rows had average density of 11.642857
Cbc0013I At root node, 14 cuts changed objective from -57.099914 to -32.837512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 786 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 741 row cuts average 31.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 88 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 62 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 53 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 153 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 200 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.700 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -26.360241 best solution, best possible -32.837512 (1.49 seconds)
Cbc0010I After 7 nodes, 6 on tree, -26.360241 best solution, best possible -32.837512 (2.24 seconds)
Cbc0001I Search completed - best objective -26.36024089999999, took 2613 iterations and 18 nodes (2.64 seconds)
Cbc0032I Strong branching done 290 times (2156 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 7, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       2.65

