Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-7) rows, 33 (-2) columns and 182 (-13) elements
Clp1000I sum of infeasibilities 3.46105e-06 - average 5.58234e-08, 4 fixed columns
Coin0506I Presolve 54 (-8) rows, 29 (-4) columns and 158 (-24) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 96.522438
Clp0000I Optimal - objective value 96.522438
Coin0511I After Postsolve, objective 96.522438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.522438
Clp0000I Optimal - objective value 96.522438
Clp0000I Optimal - objective value 96.522438
Coin0511I After Postsolve, objective 96.522438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.52243758 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 62 rows, 33 columns (32 integer (32 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.714%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.51919
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.84 iterations 21
Cbc0038I Solution found of -25.84
Cbc0038I Relaxing continuous gives -25.84
Cbc0038I Rounding solution of -28.5223 is better than previous of -25.84

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 45 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -28.5223 to -40.5459 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.1436
Cbc0038I Pass   2: suminf.    0.63919 (2) obj. -46.1436 iterations 2
Cbc0038I Pass   3: suminf.    0.65581 (2) obj. -46.1436 iterations 2
Cbc0038I Pass   4: suminf.    0.23861 (2) obj. -46.1436 iterations 2
Cbc0038I Pass   5: suminf.    0.66081 (3) obj. -46.1436 iterations 3
Cbc0038I Pass   6: suminf.    1.66214 (5) obj. -46.1436 iterations 13
Cbc0038I Pass   7: suminf.    1.48955 (5) obj. -46.1436 iterations 2
Cbc0038I Pass   8: suminf.    1.07529 (4) obj. -46.1436 iterations 9
Cbc0038I Pass   9: suminf.    0.24605 (3) obj. -46.1436 iterations 3
Cbc0038I Pass  10: suminf.    1.02114 (3) obj. -46.1436 iterations 2
Cbc0038I Pass  11: suminf.    1.15245 (5) obj. -46.1436 iterations 6
Cbc0038I Pass  12: suminf.    0.75796 (4) obj. -46.1436 iterations 3
Cbc0038I Pass  13: suminf.    1.39859 (4) obj. -46.1436 iterations 7
Cbc0038I Pass  14: suminf.    1.39859 (4) obj. -46.1436 iterations 0
Cbc0038I Pass  15: suminf.    0.86313 (4) obj. -46.1436 iterations 6
Cbc0038I Pass  16: suminf.    0.74588 (3) obj. -46.1436 iterations 3
Cbc0038I Pass  17: suminf.    1.94886 (5) obj. -46.1436 iterations 10
Cbc0038I Pass  18: suminf.    0.82822 (3) obj. -46.1436 iterations 9
Cbc0038I Pass  19: suminf.    0.66201 (2) obj. -46.1436 iterations 2
Cbc0038I Pass  20: suminf.    0.66201 (2) obj. -46.1436 iterations 0
Cbc0038I Pass  21: suminf.    0.72139 (2) obj. -46.1436 iterations 1
Cbc0038I Pass  22: suminf.    0.35687 (2) obj. -46.1436 iterations 4
Cbc0038I Pass  23: suminf.    0.89583 (4) obj. -46.1436 iterations 4
Cbc0038I Pass  24: suminf.    0.82822 (3) obj. -46.1436 iterations 2
Cbc0038I Pass  25: suminf.    0.66201 (2) obj. -46.1436 iterations 2
Cbc0038I Pass  26: suminf.    0.66201 (2) obj. -46.1436 iterations 0
Cbc0038I Pass  27: suminf.    0.72139 (2) obj. -46.1436 iterations 1
Cbc0038I Pass  28: suminf.    0.35687 (2) obj. -46.1436 iterations 4
Cbc0038I Pass  29: suminf.    0.89583 (4) obj. -46.1436 iterations 4
Cbc0038I Pass  30: suminf.    0.82822 (3) obj. -46.1436 iterations 2
Cbc0038I Pass  31: suminf.    0.66201 (2) obj. -46.1436 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 55 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -40.5459 - took 0.06 seconds
Cbc0012I Integer solution of -40.545886 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 62 rows 33 columns, reduced to 45 rows 24 columns
Cbc0031I 13 added rows had average density of 20.076923
Cbc0013I At root node, 13 cuts changed objective from -96.522438 to -71.013512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1844 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 852 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0001I Search completed - best objective -40.545886, took 3673 iterations and 10 nodes (0.30 seconds)
Cbc0032I Strong branching done 198 times (3198 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-10) rows, 60 (-6) columns and 624 (-99) elements
Clp1000I sum of infeasibilities 1.18914e-08 - average 2.05024e-10, 33 fixed columns
Coin0506I Presolve 25 (-33) rows, 27 (-33) columns and 99 (-525) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 4.4211927 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value -26.984994
Clp0000I Optimal - objective value -26.984994
Coin0511I After Postsolve, objective -26.984994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8341254 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 106.24294
Clp0000I Optimal - objective value 106.24294
Clp0000I Optimal - objective value 106.24294
Coin0511I After Postsolve, objective 106.24294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.2429355 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 60 columns (60 integer (60 of which binary)) and 626 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.796%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 10.7906
Cbc0038I Pass   1: suminf.    2.36040 (14) obj. -57.5997 iterations 16
Cbc0038I Pass   2: suminf.    2.36040 (14) obj. -57.5997 iterations 0
Cbc0038I Pass   3: suminf.    0.35932 (4) obj. -37.9453 iterations 10
Cbc0038I Solution found of -21.639
Cbc0038I Rounding solution of -29.5966 is better than previous of -21.639

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 60 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -29.5966 to -40.5459 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.4453
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.36040 (14) obj. -57.5997 iterations 0
Cbc0038I Pass   5: suminf.    2.36040 (14) obj. -57.5997 iterations 0
Cbc0038I Pass   6: suminf.    0.76853 (5) obj. -46.4453 iterations 15
Cbc0038I Pass   7: suminf.    0.46437 (5) obj. -46.4453 iterations 1
Cbc0038I Pass   8: suminf.    0.27953 (2) obj. -46.4453 iterations 4
Cbc0038I Pass   9: suminf.    0.22421 (2) obj. -47.944 iterations 1
Cbc0038I Pass  10: suminf.    0.34910 (2) obj. -46.4453 iterations 3
Cbc0038I Pass  11: suminf.    1.56129 (9) obj. -46.4453 iterations 16
Cbc0038I Pass  12: suminf.    1.38483 (6) obj. -46.4453 iterations 2
Cbc0038I Pass  13: suminf.    0.57277 (6) obj. -46.4453 iterations 5
Cbc0038I Pass  14: suminf.    1.00501 (6) obj. -46.4453 iterations 12
Cbc0038I Pass  15: suminf.    0.83510 (14) obj. -46.4453 iterations 3
Cbc0038I Pass  16: suminf.    2.17092 (9) obj. -46.4453 iterations 11
Cbc0038I Pass  17: suminf.    1.69976 (8) obj. -46.4453 iterations 6
Cbc0038I Pass  18: suminf.    1.72321 (6) obj. -46.4453 iterations 6
Cbc0038I Pass  19: suminf.    1.61843 (6) obj. -46.4453 iterations 3
Cbc0038I Pass  20: suminf.    1.72321 (6) obj. -46.4453 iterations 6
Cbc0038I Pass  21: suminf.    2.87950 (8) obj. -46.4453 iterations 8
Cbc0038I Pass  22: suminf.    2.06589 (7) obj. -46.4453 iterations 4
Cbc0038I Pass  23: suminf.    1.99861 (8) obj. -46.4453 iterations 1
Cbc0038I Pass  24: suminf.    1.72321 (6) obj. -46.4453 iterations 10
Cbc0038I Pass  25: suminf.    1.61843 (6) obj. -46.4453 iterations 2
Cbc0038I Pass  26: suminf.    1.72321 (6) obj. -46.4453 iterations 5
Cbc0038I Pass  27: suminf.    4.10140 (13) obj. -46.4453 iterations 13
Cbc0038I Pass  28: suminf.    2.62961 (10) obj. -46.4453 iterations 6
Cbc0038I Pass  29: suminf.    2.62961 (10) obj. -46.4453 iterations 0
Cbc0038I Pass  30: suminf.    0.98910 (7) obj. -46.4453 iterations 16
Cbc0038I Pass  31: suminf.    0.95763 (5) obj. -46.4453 iterations 6
Cbc0038I Pass  32: suminf.    1.19356 (4) obj. -46.4453 iterations 9
Cbc0038I Pass  33: suminf.    0.89637 (3) obj. -46.4453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 60 columns, reduced to 49 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -40.5459 - took 0.03 seconds
Cbc0012I Integer solution of -40.545886 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 58 rows 60 columns, reduced to 25 rows 27 columns
Cbc0031I 25 added rows had average density of 20.04
Cbc0013I At root node, 25 cuts changed objective from -99.539068 to -49.201801 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2284 row cuts average 4.0 elements, 11 column cuts (11 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 523 row cuts average 42.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 192 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 182 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.722 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -40.545886 best solution, best possible -49.201801 (1.59 seconds)
Cbc0001I Search completed - best objective -40.545886, took 2664 iterations and 8 nodes (2.17 seconds)
Cbc0032I Strong branching done 164 times (2317 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 30 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       2.17

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-7) rows, 33 (-2) columns and 182 (-13) elements
Clp1000I sum of infeasibilities 3.46105e-06 - average 5.58234e-08, 4 fixed columns
Coin0506I Presolve 54 (-8) rows, 29 (-4) columns and 158 (-24) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 96.522438
Clp0000I Optimal - objective value 96.522438
Coin0511I After Postsolve, objective 96.522438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.522438
Clp0000I Optimal - objective value 96.522438
Clp0000I Optimal - objective value 96.522438
Coin0511I After Postsolve, objective 96.522438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.52243758 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 62 rows, 33 columns (32 integer (32 of which binary)) and 182 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.714%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.51919
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -25.84 iterations 21
Cbc0038I Solution found of -25.84
Cbc0038I Relaxing continuous gives -25.84
Cbc0038I Rounding solution of -28.5223 is better than previous of -25.84

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 45 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -28.5223 to -40.5459 (0.03 seconds)
Cbc0038I Round again with cutoff of -46.1436
Cbc0038I Pass   2: suminf.    0.63919 (2) obj. -46.1436 iterations 2
Cbc0038I Pass   3: suminf.    0.65581 (2) obj. -46.1436 iterations 2
Cbc0038I Pass   4: suminf.    0.23861 (2) obj. -46.1436 iterations 2
Cbc0038I Pass   5: suminf.    0.66081 (3) obj. -46.1436 iterations 3
Cbc0038I Pass   6: suminf.    1.66214 (5) obj. -46.1436 iterations 13
Cbc0038I Pass   7: suminf.    1.48955 (5) obj. -46.1436 iterations 2
Cbc0038I Pass   8: suminf.    1.07529 (4) obj. -46.1436 iterations 9
Cbc0038I Pass   9: suminf.    0.24605 (3) obj. -46.1436 iterations 3
Cbc0038I Pass  10: suminf.    1.02114 (3) obj. -46.1436 iterations 2
Cbc0038I Pass  11: suminf.    1.15245 (5) obj. -46.1436 iterations 6
Cbc0038I Pass  12: suminf.    0.75796 (4) obj. -46.1436 iterations 3
Cbc0038I Pass  13: suminf.    1.39859 (4) obj. -46.1436 iterations 7
Cbc0038I Pass  14: suminf.    1.39859 (4) obj. -46.1436 iterations 0
Cbc0038I Pass  15: suminf.    0.86313 (4) obj. -46.1436 iterations 6
Cbc0038I Pass  16: suminf.    0.74588 (3) obj. -46.1436 iterations 3
Cbc0038I Pass  17: suminf.    1.94886 (5) obj. -46.1436 iterations 10
Cbc0038I Pass  18: suminf.    0.82822 (3) obj. -46.1436 iterations 9
Cbc0038I Pass  19: suminf.    0.66201 (2) obj. -46.1436 iterations 2
Cbc0038I Pass  20: suminf.    0.66201 (2) obj. -46.1436 iterations 0
Cbc0038I Pass  21: suminf.    0.72139 (2) obj. -46.1436 iterations 1
Cbc0038I Pass  22: suminf.    0.35687 (2) obj. -46.1436 iterations 4
Cbc0038I Pass  23: suminf.    0.89583 (4) obj. -46.1436 iterations 4
Cbc0038I Pass  24: suminf.    0.82822 (3) obj. -46.1436 iterations 2
Cbc0038I Pass  25: suminf.    0.66201 (2) obj. -46.1436 iterations 2
Cbc0038I Pass  26: suminf.    0.66201 (2) obj. -46.1436 iterations 0
Cbc0038I Pass  27: suminf.    0.72139 (2) obj. -46.1436 iterations 1
Cbc0038I Pass  28: suminf.    0.35687 (2) obj. -46.1436 iterations 4
Cbc0038I Pass  29: suminf.    0.89583 (4) obj. -46.1436 iterations 4
Cbc0038I Pass  30: suminf.    0.82822 (3) obj. -46.1436 iterations 2
Cbc0038I Pass  31: suminf.    0.66201 (2) obj. -46.1436 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 55 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -40.5459 - took 0.04 seconds
Cbc0012I Integer solution of -40.545886 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 62 rows 33 columns, reduced to 45 rows 24 columns
Cbc0031I 13 added rows had average density of 20.076923
Cbc0013I At root node, 13 cuts changed objective from -96.522438 to -71.013512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1844 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 852 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 32.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -40.545886, took 3673 iterations and 10 nodes (0.35 seconds)
Cbc0032I Strong branching done 198 times (3198 iterations), fathomed 0 nodes and fixed 11 variables
Cbc0035I Maximum depth 4, 31 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 58 (-11) rows, 60 (-7) columns and 624 (-100) elements
Clp1000I sum of infeasibilities 1.18914e-08 - average 2.05024e-10, 33 fixed columns
Coin0506I Presolve 25 (-33) rows, 27 (-33) columns and 99 (-525) elements
Clp0029I End of values pass after 27 iterations
Clp0014I Perturbing problem by 0.001% of 4.4211927 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value -26.984994
Clp0000I Optimal - objective value -26.984994
Coin0511I After Postsolve, objective -26.984994, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8341254 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 106.24294
Clp0000I Optimal - objective value 106.24294
Clp0000I Optimal - objective value 106.24294
Coin0511I After Postsolve, objective 106.24294, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.2429355 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 60 columns (60 integer (60 of which binary)) and 626 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.796%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 10.7906
Cbc0038I Pass   1: suminf.    2.36040 (14) obj. -57.5997 iterations 16
Cbc0038I Pass   2: suminf.    2.36040 (14) obj. -57.5997 iterations 0
Cbc0038I Pass   3: suminf.    0.35932 (4) obj. -37.9453 iterations 10
Cbc0038I Solution found of -21.639
Cbc0038I Rounding solution of -29.5966 is better than previous of -21.639

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 60 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -29.5966 to -40.5459 (0.02 seconds)
Cbc0038I Round again with cutoff of -46.4453
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.36040 (14) obj. -57.5997 iterations 0
Cbc0038I Pass   5: suminf.    2.36040 (14) obj. -57.5997 iterations 0
Cbc0038I Pass   6: suminf.    0.76853 (5) obj. -46.4453 iterations 15
Cbc0038I Pass   7: suminf.    0.46437 (5) obj. -46.4453 iterations 1
Cbc0038I Pass   8: suminf.    0.27953 (2) obj. -46.4453 iterations 4
Cbc0038I Pass   9: suminf.    0.22421 (2) obj. -47.944 iterations 1
Cbc0038I Pass  10: suminf.    0.34910 (2) obj. -46.4453 iterations 3
Cbc0038I Pass  11: suminf.    1.56129 (9) obj. -46.4453 iterations 16
Cbc0038I Pass  12: suminf.    1.38483 (6) obj. -46.4453 iterations 2
Cbc0038I Pass  13: suminf.    0.57277 (6) obj. -46.4453 iterations 5
Cbc0038I Pass  14: suminf.    1.00501 (6) obj. -46.4453 iterations 12
Cbc0038I Pass  15: suminf.    0.83510 (14) obj. -46.4453 iterations 3
Cbc0038I Pass  16: suminf.    2.17092 (9) obj. -46.4453 iterations 11
Cbc0038I Pass  17: suminf.    1.69976 (8) obj. -46.4453 iterations 6
Cbc0038I Pass  18: suminf.    1.72321 (6) obj. -46.4453 iterations 6
Cbc0038I Pass  19: suminf.    1.61843 (6) obj. -46.4453 iterations 3
Cbc0038I Pass  20: suminf.    1.72321 (6) obj. -46.4453 iterations 6
Cbc0038I Pass  21: suminf.    2.87950 (8) obj. -46.4453 iterations 8
Cbc0038I Pass  22: suminf.    2.06589 (7) obj. -46.4453 iterations 4
Cbc0038I Pass  23: suminf.    1.99861 (8) obj. -46.4453 iterations 1
Cbc0038I Pass  24: suminf.    1.72321 (6) obj. -46.4453 iterations 10
Cbc0038I Pass  25: suminf.    1.61843 (6) obj. -46.4453 iterations 2
Cbc0038I Pass  26: suminf.    1.72321 (6) obj. -46.4453 iterations 5
Cbc0038I Pass  27: suminf.    4.10140 (13) obj. -46.4453 iterations 13
Cbc0038I Pass  28: suminf.    2.62961 (10) obj. -46.4453 iterations 6
Cbc0038I Pass  29: suminf.    2.62961 (10) obj. -46.4453 iterations 0
Cbc0038I Pass  30: suminf.    0.98910 (7) obj. -46.4453 iterations 16
Cbc0038I Pass  31: suminf.    0.95763 (5) obj. -46.4453 iterations 6
Cbc0038I Pass  32: suminf.    1.19356 (4) obj. -46.4453 iterations 9
Cbc0038I Pass  33: suminf.    0.89637 (3) obj. -46.4453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 60 columns, reduced to 49 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -40.5459 - took 0.04 seconds
Cbc0012I Integer solution of -40.545886 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 58 rows 60 columns, reduced to 25 rows 27 columns
Cbc0031I 25 added rows had average density of 20.04
Cbc0013I At root node, 25 cuts changed objective from -99.539068 to -49.201801 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2284 row cuts average 4.0 elements, 11 column cuts (11 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 523 row cuts average 42.4 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 192 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 182 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 18.4 elements, 0 column cuts (0 active)  in 0.691 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -40.545886 best solution, best possible -49.201801 (1.50 seconds)
Cbc0001I Search completed - best objective -40.545886, took 2664 iterations and 8 nodes (2.17 seconds)
Cbc0032I Strong branching done 164 times (2317 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 30 variables fixed on reduced cost
Total time (CPU seconds):       1.44   (Wallclock seconds):       2.17

