Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-13) rows, 51 (-2) columns and 278 (-25) elements
Clp1000I sum of infeasibilities 8.49375e-05 - average 9.23233e-07, 5 fixed columns
Coin0506I Presolve 83 (-9) rows, 46 (-5) columns and 250 (-28) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Coin0511I After Postsolve, objective 52.394439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Coin0511I After Postsolve, objective 52.394439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.3944393 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 51 columns (50 integer (50 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 8.37677
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.49767 iterations 34
Cbc0038I Solution found of -0.49767
Cbc0038I Relaxing continuous gives -0.49767
Cbc0038I Rounding solution of -11.1429 is better than previous of -0.49767

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -11.1429 to -20.9683 (0.04 seconds)
Cbc0038I Round again with cutoff of -24.111
Cbc0038I Pass   2: suminf.    2.22437 (9) obj. -24.111 iterations 10
Cbc0038I Pass   3: suminf.    0.99505 (5) obj. -24.111 iterations 8
Cbc0038I Pass   4: suminf.    0.99505 (5) obj. -24.111 iterations 0
Cbc0038I Pass   5: suminf.    2.77506 (7) obj. -24.111 iterations 9
Cbc0038I Pass   6: suminf.    1.46915 (6) obj. -24.111 iterations 6
Cbc0038I Pass   7: suminf.    1.39509 (6) obj. -24.111 iterations 1
Cbc0038I Pass   8: suminf.    1.33597 (5) obj. -24.111 iterations 7
Cbc0038I Pass   9: suminf.    0.99280 (5) obj. -24.111 iterations 1
Cbc0038I Pass  10: suminf.    1.96700 (5) obj. -24.111 iterations 7
Cbc0038I Pass  11: suminf.    1.96700 (5) obj. -24.111 iterations 0
Cbc0038I Pass  12: suminf.    1.43664 (5) obj. -24.111 iterations 3
Cbc0038I Pass  13: suminf.    1.31566 (6) obj. -24.111 iterations 2
Cbc0038I Pass  14: suminf.    2.73567 (10) obj. -24.111 iterations 10
Cbc0038I Pass  15: suminf.    1.18745 (5) obj. -24.111 iterations 10
Cbc0038I Pass  16: suminf.    1.18745 (5) obj. -24.111 iterations 0
Cbc0038I Pass  17: suminf.    2.86983 (10) obj. -24.111 iterations 8
Cbc0038I Pass  18: suminf.    1.43912 (6) obj. -24.111 iterations 9
Cbc0038I Pass  19: suminf.    1.26945 (5) obj. -24.111 iterations 1
Cbc0038I Pass  20: suminf.    2.14311 (8) obj. -24.111 iterations 9
Cbc0038I Pass  21: suminf.    1.06842 (5) obj. -24.111 iterations 4
Cbc0038I Pass  22: suminf.    1.07137 (5) obj. -24.111 iterations 1
Cbc0038I Pass  23: suminf.    2.22437 (9) obj. -24.111 iterations 6
Cbc0038I Pass  24: suminf.    0.99505 (5) obj. -24.111 iterations 8
Cbc0038I Pass  25: suminf.    0.99505 (5) obj. -24.111 iterations 0
Cbc0038I Pass  26: suminf.    2.77506 (7) obj. -24.111 iterations 9
Cbc0038I Pass  27: suminf.    1.46915 (6) obj. -24.111 iterations 6
Cbc0038I Pass  28: suminf.    1.39509 (6) obj. -24.111 iterations 1
Cbc0038I Pass  29: suminf.    1.33597 (5) obj. -24.111 iterations 7
Cbc0038I Pass  30: suminf.    0.99280 (5) obj. -24.111 iterations 1
Cbc0038I Pass  31: suminf.    1.96700 (5) obj. -24.111 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -20.9683 - took 0.05 seconds
Cbc0012I Integer solution of -20.96833 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0031I 23 added rows had average density of 31.086957
Cbc0013I At root node, 23 cuts changed objective from -52.394439 to -42.2534 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6089 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1125 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.96832999999999, took 6127 iterations and 32 nodes (0.52 seconds)
Cbc0032I Strong branching done 480 times (8931 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 15, 99 variables fixed on reduced cost
Total time (CPU seconds):       0.50   (Wallclock seconds):       0.52

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-30) rows, 82 (-20) columns and 1073 (-505) elements
Clp1000I sum of infeasibilities 2.25716e-08 - average 3.05021e-10, 15 fixed columns
Coin0506I Presolve 61 (-13) rows, 67 (-15) columns and 729 (-344) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 3.8748315 - largest nonzero change 1.7409786e-05 ( 0.00093851637%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 67.103142
Clp0000I Optimal - objective value 67.103142
Coin0511I After Postsolve, objective 67.103142, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.103142
Clp0000I Optimal - objective value 67.103142
Clp0000I Optimal - objective value 67.103142
Coin0511I After Postsolve, objective 67.103142, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.10314153 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 82 columns (82 integer (82 of which binary)) and 1075 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.00244
Cbc0038I Pass   1: suminf.    3.22461 (22) obj. -54.3883 iterations 10
Cbc0038I Pass   2: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass   3: suminf.    0.07692 (1) obj. -20.3862 iterations 21
Cbc0038I Solution found of -17.6169
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 82 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -21.6272
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass   5: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass   6: suminf.    0.18111 (2) obj. -21.6272 iterations 22
Cbc0038I Pass   7: suminf.    0.60457 (2) obj. -21.6272 iterations 4
Cbc0038I Pass   8: suminf.    0.60457 (2) obj. -21.6272 iterations 2
Cbc0038I Pass   9: suminf.    0.29268 (2) obj. -23.5696 iterations 2
Cbc0038I Pass  10: suminf.    0.14634 (1) obj. -21.8852 iterations 1
Cbc0038I Pass  11: suminf.    1.89702 (9) obj. -21.6272 iterations 16
Cbc0038I Pass  12: suminf.    1.34669 (9) obj. -21.6272 iterations 6
Cbc0038I Pass  13: suminf.    1.33582 (7) obj. -21.6272 iterations 6
Cbc0038I Pass  14: suminf.    0.93031 (6) obj. -23.2891 iterations 6
Cbc0038I Pass  15: suminf.    1.33641 (6) obj. -21.6272 iterations 5
Cbc0038I Pass  16: suminf.    1.19465 (6) obj. -22.1943 iterations 2
Cbc0038I Pass  17: suminf.    2.30012 (14) obj. -21.6272 iterations 12
Cbc0038I Pass  18: suminf.    1.34431 (8) obj. -21.6272 iterations 9
Cbc0038I Pass  19: suminf.    1.42509 (6) obj. -21.6272 iterations 9
Cbc0038I Pass  20: suminf.    1.42509 (6) obj. -21.6272 iterations 0
Cbc0038I Pass  21: suminf.    1.30985 (5) obj. -21.6272 iterations 6
Cbc0038I Pass  22: suminf.    0.98421 (6) obj. -21.6272 iterations 1
Cbc0038I Pass  23: suminf.    0.78605 (4) obj. -21.6272 iterations 10
Cbc0038I Pass  24: suminf.    0.57618 (4) obj. -22.4101 iterations 4
Cbc0038I Pass  25: suminf.    0.77189 (4) obj. -21.6272 iterations 3
Cbc0038I Pass  26: suminf.    3.36515 (18) obj. -21.6272 iterations 26
Cbc0038I Pass  27: suminf.    2.91801 (15) obj. -21.6272 iterations 3
Cbc0038I Pass  28: suminf.    2.30673 (12) obj. -21.6272 iterations 10
Cbc0038I Pass  29: suminf.    2.07999 (11) obj. -21.6854 iterations 3
Cbc0038I Pass  30: suminf.    3.28816 (12) obj. -21.6272 iterations 5
Cbc0038I Pass  31: suminf.    3.06678 (12) obj. -22.2914 iterations 2
Cbc0038I Pass  32: suminf.    2.46934 (14) obj. -21.6272 iterations 9
Cbc0038I Pass  33: suminf.    2.27710 (12) obj. -21.6272 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 82 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -17.6169 to -19.5683 (0.05 seconds)
Cbc0038I Round again with cutoff of -28.8456
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass  34: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass  35: suminf.    0.89741 (4) obj. -28.8456 iterations 25
Cbc0038I Pass  36: suminf.    0.89741 (4) obj. -28.8456 iterations 0
Cbc0038I Pass  37: suminf.    0.94252 (4) obj. -28.8456 iterations 5
Cbc0038I Pass  38: suminf.    0.94252 (4) obj. -28.8456 iterations 2
Cbc0038I Pass  39: suminf.    0.89741 (4) obj. -28.8456 iterations 3
Cbc0038I Pass  40: suminf.    2.17390 (11) obj. -28.8456 iterations 22
Cbc0038I Pass  41: suminf.    1.09577 (6) obj. -29.3109 iterations 6
Cbc0038I Pass  42: suminf.    1.04611 (6) obj. -28.8456 iterations 1
Cbc0038I Pass  43: suminf.    0.77834 (5) obj. -28.8456 iterations 8
Cbc0038I Pass  44: suminf.    0.77834 (5) obj. -28.8456 iterations 0
Cbc0038I Pass  45: suminf.    0.91567 (5) obj. -28.8456 iterations 3
Cbc0038I Pass  46: suminf.    0.91567 (5) obj. -28.8456 iterations 2
Cbc0038I Pass  47: suminf.    0.77834 (5) obj. -28.8456 iterations 4
Cbc0038I Pass  48: suminf.    1.35061 (7) obj. -28.8456 iterations 13
Cbc0038I Pass  49: suminf.    1.20009 (7) obj. -29.2972 iterations 5
Cbc0038I Pass  50: suminf.    1.38201 (7) obj. -28.8456 iterations 7
Cbc0038I Pass  51: suminf.    1.02754 (6) obj. -29.2599 iterations 3
Cbc0038I Pass  52: suminf.    2.12854 (13) obj. -28.8456 iterations 14
Cbc0038I Pass  53: suminf.    1.62824 (11) obj. -28.8456 iterations 6
Cbc0038I Pass  54: suminf.    1.16564 (7) obj. -28.8456 iterations 12
Cbc0038I Pass  55: suminf.    2.72876 (21) obj. -28.8456 iterations 31
Cbc0038I Pass  56: suminf.    2.72876 (21) obj. -28.8456 iterations 2
Cbc0038I Pass  57: suminf.    2.24928 (10) obj. -28.8456 iterations 19
Cbc0038I Pass  58: suminf.    1.75774 (9) obj. -28.8456 iterations 3
Cbc0038I Pass  59: suminf.    1.54875 (9) obj. -29.4726 iterations 3
Cbc0038I Pass  60: suminf.    2.24928 (10) obj. -28.8456 iterations 4
Cbc0038I Pass  61: suminf.    2.03179 (14) obj. -28.8456 iterations 15
Cbc0038I Pass  62: suminf.    2.03179 (14) obj. -28.8456 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -19.5683 - took 0.05 seconds
Cbc0012I Integer solution of -19.56828 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 74 rows 82 columns, reduced to 14 rows 18 columns
Cbc0031I 39 added rows had average density of 15.717949
Cbc0013I At root node, 39 cuts changed objective from -57.719142 to -22.48949 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 1716 row cuts average 4.9 elements, 12 column cuts (12 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 205 row cuts average 53.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 45.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.56828 best solution, best possible -22.48949 (0.54 seconds)
Cbc0010I After 14 nodes, 7 on tree, -19.56828 best solution, best possible -22.48949 (1.26 seconds)
Cbc0004I Integer solution of -20.96833 found after 1282 iterations and 24 nodes (1.38 seconds)
Cbc0001I Search completed - best objective -20.96832999999999, took 1282 iterations and 24 nodes (1.38 seconds)
Cbc0032I Strong branching done 320 times (2472 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       1.39

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-13) rows, 51 (-2) columns and 278 (-25) elements
Clp1000I sum of infeasibilities 8.49375e-05 - average 9.23233e-07, 5 fixed columns
Coin0506I Presolve 83 (-9) rows, 46 (-5) columns and 250 (-28) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Coin0511I After Postsolve, objective 52.394439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Clp0000I Optimal - objective value 52.394439
Coin0511I After Postsolve, objective 52.394439, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.3944393 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 51 columns (50 integer (50 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 8.37677
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.49767 iterations 34
Cbc0038I Solution found of -0.49767
Cbc0038I Relaxing continuous gives -0.49767
Cbc0038I Rounding solution of -11.1429 is better than previous of -0.49767

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -11.1429 to -20.9683 (0.04 seconds)
Cbc0038I Round again with cutoff of -24.111
Cbc0038I Pass   2: suminf.    2.22437 (9) obj. -24.111 iterations 10
Cbc0038I Pass   3: suminf.    0.99505 (5) obj. -24.111 iterations 8
Cbc0038I Pass   4: suminf.    0.99505 (5) obj. -24.111 iterations 0
Cbc0038I Pass   5: suminf.    2.77506 (7) obj. -24.111 iterations 9
Cbc0038I Pass   6: suminf.    1.46915 (6) obj. -24.111 iterations 6
Cbc0038I Pass   7: suminf.    1.39509 (6) obj. -24.111 iterations 1
Cbc0038I Pass   8: suminf.    1.33597 (5) obj. -24.111 iterations 7
Cbc0038I Pass   9: suminf.    0.99280 (5) obj. -24.111 iterations 1
Cbc0038I Pass  10: suminf.    1.96700 (5) obj. -24.111 iterations 7
Cbc0038I Pass  11: suminf.    1.96700 (5) obj. -24.111 iterations 0
Cbc0038I Pass  12: suminf.    1.43664 (5) obj. -24.111 iterations 3
Cbc0038I Pass  13: suminf.    1.31566 (6) obj. -24.111 iterations 2
Cbc0038I Pass  14: suminf.    2.73567 (10) obj. -24.111 iterations 10
Cbc0038I Pass  15: suminf.    1.18745 (5) obj. -24.111 iterations 10
Cbc0038I Pass  16: suminf.    1.18745 (5) obj. -24.111 iterations 0
Cbc0038I Pass  17: suminf.    2.86983 (10) obj. -24.111 iterations 8
Cbc0038I Pass  18: suminf.    1.43912 (6) obj. -24.111 iterations 9
Cbc0038I Pass  19: suminf.    1.26945 (5) obj. -24.111 iterations 1
Cbc0038I Pass  20: suminf.    2.14311 (8) obj. -24.111 iterations 9
Cbc0038I Pass  21: suminf.    1.06842 (5) obj. -24.111 iterations 4
Cbc0038I Pass  22: suminf.    1.07137 (5) obj. -24.111 iterations 1
Cbc0038I Pass  23: suminf.    2.22437 (9) obj. -24.111 iterations 6
Cbc0038I Pass  24: suminf.    0.99505 (5) obj. -24.111 iterations 8
Cbc0038I Pass  25: suminf.    0.99505 (5) obj. -24.111 iterations 0
Cbc0038I Pass  26: suminf.    2.77506 (7) obj. -24.111 iterations 9
Cbc0038I Pass  27: suminf.    1.46915 (6) obj. -24.111 iterations 6
Cbc0038I Pass  28: suminf.    1.39509 (6) obj. -24.111 iterations 1
Cbc0038I Pass  29: suminf.    1.33597 (5) obj. -24.111 iterations 7
Cbc0038I Pass  30: suminf.    0.99280 (5) obj. -24.111 iterations 1
Cbc0038I Pass  31: suminf.    1.96700 (5) obj. -24.111 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -20.9683 - took 0.06 seconds
Cbc0012I Integer solution of -20.96833 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 92 rows 51 columns, reduced to 61 rows 35 columns
Cbc0031I 23 added rows had average density of 31.086957
Cbc0013I At root node, 23 cuts changed objective from -52.394439 to -42.2534 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6089 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1125 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.96832999999999, took 6127 iterations and 32 nodes (0.58 seconds)
Cbc0032I Strong branching done 480 times (8931 iterations), fathomed 3 nodes and fixed 4 variables
Cbc0035I Maximum depth 15, 99 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 74 (-31) rows, 82 (-21) columns and 1073 (-506) elements
Clp1000I sum of infeasibilities 2.25716e-08 - average 3.05021e-10, 15 fixed columns
Coin0506I Presolve 61 (-13) rows, 67 (-15) columns and 729 (-344) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 3.8748315 - largest nonzero change 1.7409786e-05 ( 0.00093851637%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 67.103142
Clp0000I Optimal - objective value 67.103142
Coin0511I After Postsolve, objective 67.103142, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 67.103142
Clp0000I Optimal - objective value 67.103142
Clp0000I Optimal - objective value 67.103142
Coin0511I After Postsolve, objective 67.103142, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.10314153 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 82 columns (82 integer (82 of which binary)) and 1075 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 5.00244
Cbc0038I Pass   1: suminf.    3.22461 (22) obj. -54.3883 iterations 10
Cbc0038I Pass   2: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass   3: suminf.    0.07692 (1) obj. -20.3862 iterations 21
Cbc0038I Solution found of -17.6169
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 82 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -21.6272
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass   5: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass   6: suminf.    0.18111 (2) obj. -21.6272 iterations 22
Cbc0038I Pass   7: suminf.    0.60457 (2) obj. -21.6272 iterations 4
Cbc0038I Pass   8: suminf.    0.60457 (2) obj. -21.6272 iterations 2
Cbc0038I Pass   9: suminf.    0.29268 (2) obj. -23.5696 iterations 2
Cbc0038I Pass  10: suminf.    0.14634 (1) obj. -21.8852 iterations 1
Cbc0038I Pass  11: suminf.    1.89702 (9) obj. -21.6272 iterations 16
Cbc0038I Pass  12: suminf.    1.34669 (9) obj. -21.6272 iterations 6
Cbc0038I Pass  13: suminf.    1.33582 (7) obj. -21.6272 iterations 6
Cbc0038I Pass  14: suminf.    0.93031 (6) obj. -23.2891 iterations 6
Cbc0038I Pass  15: suminf.    1.33641 (6) obj. -21.6272 iterations 5
Cbc0038I Pass  16: suminf.    1.19465 (6) obj. -22.1943 iterations 2
Cbc0038I Pass  17: suminf.    2.30012 (14) obj. -21.6272 iterations 12
Cbc0038I Pass  18: suminf.    1.34431 (8) obj. -21.6272 iterations 9
Cbc0038I Pass  19: suminf.    1.42509 (6) obj. -21.6272 iterations 9
Cbc0038I Pass  20: suminf.    1.42509 (6) obj. -21.6272 iterations 0
Cbc0038I Pass  21: suminf.    1.30985 (5) obj. -21.6272 iterations 6
Cbc0038I Pass  22: suminf.    0.98421 (6) obj. -21.6272 iterations 1
Cbc0038I Pass  23: suminf.    0.78605 (4) obj. -21.6272 iterations 10
Cbc0038I Pass  24: suminf.    0.57618 (4) obj. -22.4101 iterations 4
Cbc0038I Pass  25: suminf.    0.77189 (4) obj. -21.6272 iterations 3
Cbc0038I Pass  26: suminf.    3.36515 (18) obj. -21.6272 iterations 26
Cbc0038I Pass  27: suminf.    2.91801 (15) obj. -21.6272 iterations 3
Cbc0038I Pass  28: suminf.    2.30673 (12) obj. -21.6272 iterations 10
Cbc0038I Pass  29: suminf.    2.07999 (11) obj. -21.6854 iterations 3
Cbc0038I Pass  30: suminf.    3.28816 (12) obj. -21.6272 iterations 5
Cbc0038I Pass  31: suminf.    3.06678 (12) obj. -22.2914 iterations 2
Cbc0038I Pass  32: suminf.    2.46934 (14) obj. -21.6272 iterations 9
Cbc0038I Pass  33: suminf.    2.27710 (12) obj. -21.6272 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 82 columns, reduced to 40 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -17.6169 to -19.5683 (0.06 seconds)
Cbc0038I Round again with cutoff of -28.8456
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass  34: suminf.    3.22461 (22) obj. -54.3883 iterations 0
Cbc0038I Pass  35: suminf.    0.89741 (4) obj. -28.8456 iterations 25
Cbc0038I Pass  36: suminf.    0.89741 (4) obj. -28.8456 iterations 0
Cbc0038I Pass  37: suminf.    0.94252 (4) obj. -28.8456 iterations 5
Cbc0038I Pass  38: suminf.    0.94252 (4) obj. -28.8456 iterations 2
Cbc0038I Pass  39: suminf.    0.89741 (4) obj. -28.8456 iterations 3
Cbc0038I Pass  40: suminf.    2.17390 (11) obj. -28.8456 iterations 22
Cbc0038I Pass  41: suminf.    1.09577 (6) obj. -29.3109 iterations 6
Cbc0038I Pass  42: suminf.    1.04611 (6) obj. -28.8456 iterations 1
Cbc0038I Pass  43: suminf.    0.77834 (5) obj. -28.8456 iterations 8
Cbc0038I Pass  44: suminf.    0.77834 (5) obj. -28.8456 iterations 0
Cbc0038I Pass  45: suminf.    0.91567 (5) obj. -28.8456 iterations 3
Cbc0038I Pass  46: suminf.    0.91567 (5) obj. -28.8456 iterations 2
Cbc0038I Pass  47: suminf.    0.77834 (5) obj. -28.8456 iterations 4
Cbc0038I Pass  48: suminf.    1.35061 (7) obj. -28.8456 iterations 13
Cbc0038I Pass  49: suminf.    1.20009 (7) obj. -29.2972 iterations 5
Cbc0038I Pass  50: suminf.    1.38201 (7) obj. -28.8456 iterations 7
Cbc0038I Pass  51: suminf.    1.02754 (6) obj. -29.2599 iterations 3
Cbc0038I Pass  52: suminf.    2.12854 (13) obj. -28.8456 iterations 14
Cbc0038I Pass  53: suminf.    1.62824 (11) obj. -28.8456 iterations 6
Cbc0038I Pass  54: suminf.    1.16564 (7) obj. -28.8456 iterations 12
Cbc0038I Pass  55: suminf.    2.72876 (21) obj. -28.8456 iterations 31
Cbc0038I Pass  56: suminf.    2.72876 (21) obj. -28.8456 iterations 2
Cbc0038I Pass  57: suminf.    2.24928 (10) obj. -28.8456 iterations 19
Cbc0038I Pass  58: suminf.    1.75774 (9) obj. -28.8456 iterations 3
Cbc0038I Pass  59: suminf.    1.54875 (9) obj. -29.4726 iterations 3
Cbc0038I Pass  60: suminf.    2.24928 (10) obj. -28.8456 iterations 4
Cbc0038I Pass  61: suminf.    2.03179 (14) obj. -28.8456 iterations 15
Cbc0038I Pass  62: suminf.    2.03179 (14) obj. -28.8456 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -19.5683 - took 0.06 seconds
Cbc0012I Integer solution of -19.56828 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 74 rows 82 columns, reduced to 14 rows 18 columns
Cbc0031I 39 added rows had average density of 15.717949
Cbc0013I At root node, 39 cuts changed objective from -57.719142 to -22.48949 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 1716 row cuts average 4.9 elements, 12 column cuts (12 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 205 row cuts average 53.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 203 row cuts average 8.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 45.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.56828 best solution, best possible -22.48949 (0.56 seconds)
Cbc0010I After 12 nodes, 5 on tree, -19.56828 best solution, best possible -22.48949 (1.26 seconds)
Cbc0004I Integer solution of -20.96833 found after 1282 iterations and 24 nodes (1.46 seconds)
Cbc0001I Search completed - best objective -20.96832999999999, took 1282 iterations and 24 nodes (1.46 seconds)
Cbc0032I Strong branching done 320 times (2472 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 8, 76 variables fixed on reduced cost
Total time (CPU seconds):       0.93   (Wallclock seconds):       1.47

