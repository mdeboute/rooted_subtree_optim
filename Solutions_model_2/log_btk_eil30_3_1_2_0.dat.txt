Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 29 (-3) columns and 148 (-29) elements
Clp1000I sum of infeasibilities 0.00454275 - average 9.27091e-05, 9 fixed columns
Coin0506I Presolve 29 (-20) rows, 20 (-9) columns and 90 (-58) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 0.47265421 - largest nonzero change 0 ( 0%) - largest zero change 1.0711317e-05
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Coin0511I After Postsolve, objective 145.29565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Coin0511I After Postsolve, objective 145.29565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.2956472 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 29 columns (28 integer (28 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.56797
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -86.1025 iterations 14
Cbc0038I Solution found of -86.1025
Cbc0038I Relaxing continuous gives -86.1025
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -92.0219
Cbc0038I Pass   2: suminf.    0.09171 (1) obj. -92.0219 iterations 1
Cbc0038I Pass   3: suminf.    0.32500 (1) obj. -92.0219 iterations 1
Cbc0038I Pass   4: suminf.    1.19798 (4) obj. -92.0219 iterations 9
Cbc0038I Pass   5: suminf.    0.22682 (3) obj. -92.0219 iterations 3
Cbc0038I Pass   6: suminf.    0.53534 (3) obj. -92.0219 iterations 3
Cbc0038I Pass   7: suminf.    0.17338 (1) obj. -92.0219 iterations 2
Cbc0038I Pass   8: suminf.    0.39668 (2) obj. -92.0219 iterations 2
Cbc0038I Pass   9: suminf.    0.55939 (3) obj. -92.0219 iterations 5
Cbc0038I Pass  10: suminf.    0.55939 (3) obj. -92.0219 iterations 0
Cbc0038I Pass  11: suminf.    0.71576 (2) obj. -92.0219 iterations 3
Cbc0038I Pass  12: suminf.    0.10468 (1) obj. -92.0219 iterations 1
Cbc0038I Pass  13: suminf.    0.53605 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  14: suminf.    0.73195 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  15: suminf.    1.16801 (5) obj. -92.0219 iterations 9
Cbc0038I Pass  16: suminf.    1.16801 (5) obj. -92.0219 iterations 1
Cbc0038I Pass  17: suminf.    0.75948 (3) obj. -92.0219 iterations 4
Cbc0038I Pass  18: suminf.    0.25932 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  19: suminf.    1.80818 (5) obj. -92.0219 iterations 10
Cbc0038I Pass  20: suminf.    1.57188 (6) obj. -92.0219 iterations 2
Cbc0038I Pass  21: suminf.    1.27658 (3) obj. -92.0219 iterations 6
Cbc0038I Pass  22: suminf.    0.66964 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  23: suminf.    0.61965 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  24: suminf.    0.61965 (2) obj. -92.0219 iterations 0
Cbc0038I Pass  25: suminf.    0.27038 (2) obj. -92.0219 iterations 3
Cbc0038I Pass  26: suminf.    0.59143 (3) obj. -92.0219 iterations 2
Cbc0038I Pass  27: suminf.    1.76128 (7) obj. -92.0219 iterations 7
Cbc0038I Pass  28: suminf.    0.53154 (2) obj. -92.0219 iterations 4
Cbc0038I Pass  29: suminf.    0.92341 (3) obj. -92.0219 iterations 3
Cbc0038I Pass  30: suminf.    0.66388 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  31: suminf.    1.78133 (5) obj. -92.0219 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 24 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -86.1025 to -92.9622 (0.02 seconds)
Cbc0038I Round again with cutoff of -103.429
Cbc0038I Pass  31: suminf.    0.26845 (1) obj. -103.429 iterations 0
Cbc0038I Pass  32: suminf.    0.42879 (1) obj. -103.429 iterations 1
Cbc0038I Pass  33: suminf.    1.02199 (5) obj. -103.429 iterations 6
Cbc0038I Pass  34: suminf.    0.98866 (5) obj. -103.429 iterations 1
Cbc0038I Pass  35: suminf.    1.61598 (4) obj. -103.429 iterations 3
Cbc0038I Pass  36: suminf.    1.12531 (3) obj. -103.429 iterations 1
Cbc0038I Pass  37: suminf.    0.77624 (3) obj. -103.429 iterations 2
Cbc0038I Pass  38: suminf.    1.12531 (3) obj. -103.429 iterations 4
Cbc0038I Pass  39: suminf.    1.11372 (5) obj. -103.429 iterations 8
Cbc0038I Pass  40: suminf.    1.11372 (5) obj. -103.429 iterations 0
Cbc0038I Pass  41: suminf.    2.20599 (5) obj. -103.429 iterations 4
Cbc0038I Pass  42: suminf.    1.39251 (6) obj. -103.429 iterations 2
Cbc0038I Pass  43: suminf.    1.31536 (5) obj. -103.429 iterations 1
Cbc0038I Pass  44: suminf.    1.25310 (4) obj. -103.429 iterations 1
Cbc0038I Pass  45: suminf.    1.13546 (5) obj. -103.429 iterations 7
Cbc0038I Pass  46: suminf.    0.96866 (3) obj. -103.429 iterations 1
Cbc0038I Pass  47: suminf.    0.88728 (3) obj. -103.429 iterations 1
Cbc0038I Pass  48: suminf.    0.77730 (4) obj. -103.429 iterations 1
Cbc0038I Pass  49: suminf.    1.15159 (5) obj. -103.429 iterations 4
Cbc0038I Pass  50: suminf.    1.07255 (3) obj. -103.429 iterations 1
Cbc0038I Pass  51: suminf.    1.17466 (5) obj. -103.429 iterations 11
Cbc0038I Pass  52: suminf.    1.14298 (6) obj. -103.429 iterations 1
Cbc0038I Pass  53: suminf.    1.48091 (4) obj. -103.429 iterations 8
Cbc0038I Pass  54: suminf.    0.89034 (4) obj. -103.429 iterations 2
Cbc0038I Pass  55: suminf.    0.89034 (4) obj. -103.429 iterations 0
Cbc0038I Pass  56: suminf.    1.55992 (4) obj. -103.429 iterations 6
Cbc0038I Pass  57: suminf.    1.52644 (4) obj. -103.429 iterations 2
Cbc0038I Pass  58: suminf.    1.49194 (4) obj. -103.429 iterations 7
Cbc0038I Pass  59: suminf.    0.90253 (4) obj. -103.429 iterations 3
Cbc0038I Pass  60: suminf.    0.50228 (2) obj. -103.429 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 25 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -92.9622 - took 0.04 seconds
Cbc0012I Integer solution of -92.96217 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 29 columns, reduced to 19 rows 15 columns
Cbc0031I 14 added rows had average density of 24.071429
Cbc0013I At root node, 14 cuts changed objective from -145.29565 to -106.78483 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1370 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 682 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -93.83933 found by DiveCoefficient after 1988 iterations and 10 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -93.83932999999999, took 2004 iterations and 10 nodes (0.18 seconds)
Cbc0032I Strong branching done 94 times (1030 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-13) rows, 56 (-4) columns and 522 (-90) elements
Clp1000I sum of infeasibilities 1.05471e-14 - average 2.15247e-16, 46 fixed columns
Coin0506I Presolve 9 (-40) rows, 10 (-46) columns and 34 (-488) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 101.09282
Clp0000I Optimal - objective value 101.09282
Coin0511I After Postsolve, objective 101.09282, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21044776 - largest nonzero change 0 ( 0%) - largest zero change 2.9384811e-05
Clp0000I Optimal - objective value 221.32207
Clp0000I Optimal - objective value 221.32207
Clp0000I Optimal - objective value 221.32207
Coin0511I After Postsolve, objective 221.32207, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 221.3220652 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 55 columns (55 integer (55 of which binary)) and 496 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.420%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.71028
Cbc0038I Pass   1: suminf.    3.19214 (14) obj. -119.252 iterations 5
Cbc0038I Pass   2: suminf.    3.19214 (14) obj. -119.252 iterations 0
Cbc0038I Solution found of -45.1542
Cbc0038I Rounding solution of -71.6077 is better than previous of -45.1542

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -71.6077 to -72.6963 (0.02 seconds)
Cbc0038I Round again with cutoff of -83.2401
Cbc0038I Pass   3: suminf.    3.19214 (14) obj. -119.252 iterations 0
Cbc0038I Pass   4: suminf.    3.19214 (14) obj. -119.252 iterations 0
Cbc0038I Pass   5: suminf.    0.31769 (2) obj. -83.2401 iterations 15
Cbc0038I Pass   6: suminf.    0.31769 (2) obj. -83.2401 iterations 0
Cbc0038I Pass   7: suminf.    0.34213 (1) obj. -83.2401 iterations 2
Cbc0038I Pass   8: suminf.    0.07143 (1) obj. -103.179 iterations 1
Cbc0038I Pass   9: suminf.    1.53029 (6) obj. -108.898 iterations 12
Cbc0038I Pass  10: suminf.    0.66122 (4) obj. -90.782 iterations 3
Cbc0038I Pass  11: suminf.    0.33628 (2) obj. -83.2401 iterations 5
Cbc0038I Pass  12: suminf.    0.33628 (2) obj. -83.2401 iterations 0
Cbc0038I Pass  13: suminf.    0.87910 (2) obj. -83.2401 iterations 1
Cbc0038I Pass  14: suminf.    0.62619 (2) obj. -91.8392 iterations 1
Cbc0038I Pass  15: suminf.    2.19237 (9) obj. -83.2401 iterations 9
Cbc0038I Pass  16: suminf.    1.52392 (6) obj. -85.5518 iterations 4
Cbc0038I Pass  17: suminf.    1.05929 (9) obj. -83.2401 iterations 2
Cbc0038I Pass  18: suminf.    0.64069 (2) obj. -83.2401 iterations 11
Cbc0038I Pass  19: suminf.    0.63115 (2) obj. -83.2401 iterations 2
Cbc0038I Pass  20: suminf.    0.49073 (2) obj. -83.2401 iterations 1
Cbc0038I Pass  21: suminf.    2.77364 (9) obj. -83.2401 iterations 13
Cbc0038I Pass  22: suminf.    2.77364 (9) obj. -83.2401 iterations 1
Cbc0038I Pass  23: suminf.    0.78217 (3) obj. -83.2401 iterations 10
Cbc0038I Pass  24: suminf.    0.78217 (3) obj. -83.2401 iterations 0
Cbc0038I Pass  25: suminf.    0.64847 (2) obj. -83.2401 iterations 2
Cbc0038I Pass  26: suminf.    0.45238 (2) obj. -89.907 iterations 1
Cbc0038I Pass  27: suminf.    0.70299 (2) obj. -83.2401 iterations 2
Cbc0038I Pass  28: suminf.    2.81956 (13) obj. -83.2401 iterations 17
Cbc0038I Pass  29: suminf.    2.81956 (13) obj. -83.2401 iterations 0
Cbc0038I Pass  30: suminf.    0.53219 (2) obj. -83.2401 iterations 14
Cbc0038I Pass  31: suminf.    0.53219 (2) obj. -83.2401 iterations 1
Cbc0038I Pass  32: suminf.    0.40454 (1) obj. -83.2401 iterations 2
Cbc0038I Rounding solution of -83.9639 is better than previous of -72.6963

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 14 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -83.9639 to -87.06 (0.03 seconds)
Cbc0038I Round again with cutoff of -105.275
Cbc0038I Pass  32: suminf.    3.19214 (14) obj. -119.252 iterations 0
Cbc0038I Pass  33: suminf.    3.19214 (14) obj. -119.252 iterations 0
Cbc0038I Pass  34: suminf.    0.19407 (12) obj. -105.275 iterations 17
Cbc0038I Pass  35: suminf.    0.19407 (12) obj. -105.275 iterations 0
Cbc0038I Pass  36: suminf.    0.93083 (2) obj. -105.275 iterations 15
Cbc0038I Pass  37: suminf.    0.43597 (2) obj. -105.275 iterations 1
Cbc0038I Pass  38: suminf.    0.93083 (2) obj. -105.275 iterations 2
Cbc0038I Pass  39: suminf.    2.45095 (9) obj. -105.275 iterations 13
Cbc0038I Pass  40: suminf.    2.45095 (9) obj. -105.275 iterations 1
Cbc0038I Pass  41: suminf.    0.87564 (3) obj. -105.275 iterations 8
Cbc0038I Pass  42: suminf.    0.81234 (4) obj. -105.275 iterations 2
Cbc0038I Pass  43: suminf.    0.87564 (3) obj. -105.275 iterations 2
Cbc0038I Pass  44: suminf.    1.17730 (6) obj. -105.275 iterations 8
Cbc0038I Pass  45: suminf.    0.73987 (5) obj. -105.275 iterations 5
Cbc0038I Pass  46: suminf.    0.91087 (4) obj. -105.275 iterations 3
Cbc0038I Pass  47: suminf.    0.91087 (4) obj. -105.275 iterations 0
Cbc0038I Pass  48: suminf.    0.88576 (4) obj. -105.275 iterations 1
Cbc0038I Pass  49: suminf.    0.70773 (4) obj. -108.376 iterations 2
Cbc0038I Pass  50: suminf.    1.02322 (3) obj. -105.275 iterations 3
Cbc0038I Pass  51: suminf.    1.61603 (7) obj. -105.275 iterations 7
Cbc0038I Pass  52: suminf.    1.39578 (6) obj. -105.275 iterations 3
Cbc0038I Pass  53: suminf.    0.89951 (4) obj. -105.275 iterations 6
Cbc0038I Pass  54: suminf.    0.89951 (4) obj. -105.275 iterations 0
Cbc0038I Pass  55: suminf.    0.92377 (4) obj. -105.275 iterations 1
Cbc0038I Pass  56: suminf.    0.92377 (4) obj. -105.275 iterations 0
Cbc0038I Pass  57: suminf.    0.92734 (3) obj. -105.275 iterations 4
Cbc0038I Pass  58: suminf.    0.67681 (3) obj. -105.275 iterations 1
Cbc0038I Pass  59: suminf.    0.89951 (4) obj. -105.275 iterations 3
Cbc0038I Pass  60: suminf.    0.89951 (4) obj. -105.275 iterations 0
Cbc0038I Pass  61: suminf.    0.92377 (4) obj. -105.275 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 19 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -87.06 - took 0.03 seconds
Cbc0012I Integer solution of -87.05996 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 24 added rows had average density of 11.791667
Cbc0013I At root node, 24 cuts changed objective from -178.13383 to -95.546863 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 272 row cuts average 3.0 elements, 13 column cuts (13 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 317 row cuts average 28.4 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 118 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.723 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -87.05996 best solution, best possible -95.546863 (1.48 seconds)
Cbc0012I Integer solution of -92.1981 found by rounding after 1170 iterations and 4 nodes (1.52 seconds)
Cbc0012I Integer solution of -93.83933 found by DiveCoefficient after 1228 iterations and 7 nodes (1.53 seconds)
Cbc0001I Search completed - best objective -93.83932999999999, took 1253 iterations and 8 nodes (1.53 seconds)
Cbc0032I Strong branching done 126 times (1108 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 3, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.53

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 29 (-3) columns and 148 (-29) elements
Clp1000I sum of infeasibilities 0.00454275 - average 9.27091e-05, 9 fixed columns
Coin0506I Presolve 29 (-20) rows, 20 (-9) columns and 90 (-58) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 0.47265421 - largest nonzero change 0 ( 0%) - largest zero change 1.0711317e-05
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Coin0511I After Postsolve, objective 145.29565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Clp0000I Optimal - objective value 145.29565
Coin0511I After Postsolve, objective 145.29565, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.2956472 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 29 columns (28 integer (28 of which binary)) and 148 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.56797
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -86.1025 iterations 14
Cbc0038I Solution found of -86.1025
Cbc0038I Relaxing continuous gives -86.1025
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 16 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -92.0219
Cbc0038I Pass   2: suminf.    0.09171 (1) obj. -92.0219 iterations 1
Cbc0038I Pass   3: suminf.    0.32500 (1) obj. -92.0219 iterations 1
Cbc0038I Pass   4: suminf.    1.19798 (4) obj. -92.0219 iterations 9
Cbc0038I Pass   5: suminf.    0.22682 (3) obj. -92.0219 iterations 3
Cbc0038I Pass   6: suminf.    0.53534 (3) obj. -92.0219 iterations 3
Cbc0038I Pass   7: suminf.    0.17338 (1) obj. -92.0219 iterations 2
Cbc0038I Pass   8: suminf.    0.39668 (2) obj. -92.0219 iterations 2
Cbc0038I Pass   9: suminf.    0.55939 (3) obj. -92.0219 iterations 5
Cbc0038I Pass  10: suminf.    0.55939 (3) obj. -92.0219 iterations 0
Cbc0038I Pass  11: suminf.    0.71576 (2) obj. -92.0219 iterations 3
Cbc0038I Pass  12: suminf.    0.10468 (1) obj. -92.0219 iterations 1
Cbc0038I Pass  13: suminf.    0.53605 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  14: suminf.    0.73195 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  15: suminf.    1.16801 (5) obj. -92.0219 iterations 9
Cbc0038I Pass  16: suminf.    1.16801 (5) obj. -92.0219 iterations 1
Cbc0038I Pass  17: suminf.    0.75948 (3) obj. -92.0219 iterations 4
Cbc0038I Pass  18: suminf.    0.25932 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  19: suminf.    1.80818 (5) obj. -92.0219 iterations 10
Cbc0038I Pass  20: suminf.    1.57188 (6) obj. -92.0219 iterations 2
Cbc0038I Pass  21: suminf.    1.27658 (3) obj. -92.0219 iterations 6
Cbc0038I Pass  22: suminf.    0.66964 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  23: suminf.    0.61965 (2) obj. -92.0219 iterations 1
Cbc0038I Pass  24: suminf.    0.61965 (2) obj. -92.0219 iterations 0
Cbc0038I Pass  25: suminf.    0.27038 (2) obj. -92.0219 iterations 3
Cbc0038I Pass  26: suminf.    0.59143 (3) obj. -92.0219 iterations 2
Cbc0038I Pass  27: suminf.    1.76128 (7) obj. -92.0219 iterations 7
Cbc0038I Pass  28: suminf.    0.53154 (2) obj. -92.0219 iterations 4
Cbc0038I Pass  29: suminf.    0.92341 (3) obj. -92.0219 iterations 3
Cbc0038I Pass  30: suminf.    0.66388 (2) obj. -92.0219 iterations 2
Cbc0038I Pass  31: suminf.    1.78133 (5) obj. -92.0219 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 24 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -86.1025 to -92.9622 (0.02 seconds)
Cbc0038I Round again with cutoff of -103.429
Cbc0038I Pass  31: suminf.    0.26845 (1) obj. -103.429 iterations 0
Cbc0038I Pass  32: suminf.    0.42879 (1) obj. -103.429 iterations 1
Cbc0038I Pass  33: suminf.    1.02199 (5) obj. -103.429 iterations 6
Cbc0038I Pass  34: suminf.    0.98866 (5) obj. -103.429 iterations 1
Cbc0038I Pass  35: suminf.    1.61598 (4) obj. -103.429 iterations 3
Cbc0038I Pass  36: suminf.    1.12531 (3) obj. -103.429 iterations 1
Cbc0038I Pass  37: suminf.    0.77624 (3) obj. -103.429 iterations 2
Cbc0038I Pass  38: suminf.    1.12531 (3) obj. -103.429 iterations 4
Cbc0038I Pass  39: suminf.    1.11372 (5) obj. -103.429 iterations 8
Cbc0038I Pass  40: suminf.    1.11372 (5) obj. -103.429 iterations 0
Cbc0038I Pass  41: suminf.    2.20599 (5) obj. -103.429 iterations 4
Cbc0038I Pass  42: suminf.    1.39251 (6) obj. -103.429 iterations 2
Cbc0038I Pass  43: suminf.    1.31536 (5) obj. -103.429 iterations 1
Cbc0038I Pass  44: suminf.    1.25310 (4) obj. -103.429 iterations 1
Cbc0038I Pass  45: suminf.    1.13546 (5) obj. -103.429 iterations 7
Cbc0038I Pass  46: suminf.    0.96866 (3) obj. -103.429 iterations 1
Cbc0038I Pass  47: suminf.    0.88728 (3) obj. -103.429 iterations 1
Cbc0038I Pass  48: suminf.    0.77730 (4) obj. -103.429 iterations 1
Cbc0038I Pass  49: suminf.    1.15159 (5) obj. -103.429 iterations 4
Cbc0038I Pass  50: suminf.    1.07255 (3) obj. -103.429 iterations 1
Cbc0038I Pass  51: suminf.    1.17466 (5) obj. -103.429 iterations 11
Cbc0038I Pass  52: suminf.    1.14298 (6) obj. -103.429 iterations 1
Cbc0038I Pass  53: suminf.    1.48091 (4) obj. -103.429 iterations 8
Cbc0038I Pass  54: suminf.    0.89034 (4) obj. -103.429 iterations 2
Cbc0038I Pass  55: suminf.    0.89034 (4) obj. -103.429 iterations 0
Cbc0038I Pass  56: suminf.    1.55992 (4) obj. -103.429 iterations 6
Cbc0038I Pass  57: suminf.    1.52644 (4) obj. -103.429 iterations 2
Cbc0038I Pass  58: suminf.    1.49194 (4) obj. -103.429 iterations 7
Cbc0038I Pass  59: suminf.    0.90253 (4) obj. -103.429 iterations 3
Cbc0038I Pass  60: suminf.    0.50228 (2) obj. -103.429 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 29 columns, reduced to 25 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -92.9622 - took 0.02 seconds
Cbc0012I Integer solution of -92.96217 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 29 columns, reduced to 19 rows 15 columns
Cbc0031I 14 added rows had average density of 24.071429
Cbc0013I At root node, 14 cuts changed objective from -145.29565 to -106.78483 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1370 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 682 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 61 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 120 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -93.83933 found by DiveCoefficient after 1988 iterations and 10 nodes (0.32 seconds)
Cbc0001I Search completed - best objective -93.83932999999999, took 2004 iterations and 10 nodes (0.32 seconds)
Cbc0032I Strong branching done 94 times (1030 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-18) rows, 52 (-9) columns and 483 (-130) elements
Clp1000I sum of infeasibilities 0.000116396 - average 2.58659e-06, 42 fixed columns
Coin0506I Presolve 5 (-40) rows, 10 (-42) columns and 25 (-458) elements
Clp0029I End of values pass after 10 iterations
Clp0014I Perturbing problem by 0.001% of 2.3763223 - largest nonzero change 0 ( 0%) - largest zero change 1.8770327e-05
Clp0000I Optimal - objective value 82.333163
Clp0000I Optimal - objective value 82.333163
Coin0511I After Postsolve, objective 82.333163, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3890618 - largest nonzero change 2.5735924e-05 ( 0.0025735924%) - largest zero change 1.9498817e-05
Clp0000I Optimal - objective value 195.77752
Clp0000I Optimal - objective value 195.77752
Clp0000I Optimal - objective value 195.77752
Coin0511I After Postsolve, objective 195.77752, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 195.7775212 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 55 columns (55 integer (55 of which binary)) and 494 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.420%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 8.10406
Cbc0038I Pass   1: suminf.    3.62131 (15) obj. -120.381 iterations 6
Cbc0038I Pass   2: suminf.    3.62131 (15) obj. -120.381 iterations 0
Cbc0038I Solution found of -45.1542
Cbc0038I Rounding solution of -71.6077 is better than previous of -45.1542

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 11 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -71.6077 to -72.6963 (0.02 seconds)
Cbc0038I Round again with cutoff of -83.422
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.62131 (15) obj. -120.381 iterations 0
Cbc0038I Pass   4: suminf.    3.62131 (15) obj. -120.381 iterations 0
Cbc0038I Pass   5: suminf.    0.32457 (2) obj. -83.422 iterations 16
Cbc0038I Pass   6: suminf.    0.32457 (2) obj. -83.422 iterations 0
Cbc0038I Pass   7: suminf.    0.34748 (1) obj. -83.422 iterations 2
Cbc0038I Pass   8: suminf.    0.07143 (1) obj. -103.179 iterations 1
Cbc0038I Pass   9: suminf.    1.55979 (6) obj. -108.662 iterations 14
Cbc0038I Pass  10: suminf.    0.66122 (4) obj. -90.782 iterations 3
Cbc0038I Pass  11: suminf.    0.34311 (2) obj. -83.422 iterations 5
Cbc0038I Pass  12: suminf.    0.34311 (2) obj. -83.422 iterations 0
Cbc0038I Pass  13: suminf.    0.87376 (2) obj. -83.422 iterations 1
Cbc0038I Pass  14: suminf.    0.62619 (2) obj. -91.8392 iterations 1
Cbc0038I Pass  15: suminf.    2.79136 (10) obj. -83.422 iterations 11
Cbc0038I Pass  16: suminf.    2.00225 (7) obj. -87.1168 iterations 6
Cbc0038I Pass  17: suminf.    1.50492 (6) obj. -84.1328 iterations 1
Cbc0038I Pass  18: suminf.    1.29350 (5) obj. -83.422 iterations 8
Cbc0038I Pass  19: suminf.    1.23183 (5) obj. -83.422 iterations 1
Cbc0038I Pass  20: suminf.    0.63799 (2) obj. -83.422 iterations 5
Cbc0038I Pass  21: suminf.    0.49608 (2) obj. -83.422 iterations 1
Cbc0038I Pass  22: suminf.    2.25145 (9) obj. -83.422 iterations 11
Cbc0038I Pass  23: suminf.    2.06296 (7) obj. -83.422 iterations 2
Cbc0038I Pass  24: suminf.    0.49659 (5) obj. -83.422 iterations 11
Cbc0038I Pass  25: suminf.    0.48348 (2) obj. -83.422 iterations 9
Cbc0038I Pass  26: suminf.    0.21429 (1) obj. -89.6679 iterations 2
Cbc0038I Pass  27: suminf.    0.39799 (1) obj. -83.422 iterations 1
Cbc0038I Pass  28: suminf.    3.21228 (13) obj. -83.422 iterations 18
Cbc0038I Pass  29: suminf.    3.21228 (13) obj. -83.422 iterations 2
Cbc0038I Pass  30: suminf.    1.11277 (3) obj. -83.422 iterations 20
Cbc0038I Pass  31: suminf.    0.96728 (3) obj. -83.422 iterations 2
Cbc0038I Pass  32: suminf.    0.62973 (2) obj. -83.422 iterations 4
Cbc0038I Rounding solution of -83.9639 is better than previous of -72.6963

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 15 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -83.9639 to -88.5549 (0.04 seconds)
Cbc0038I Round again with cutoff of -106.834
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.62131 (15) obj. -120.381 iterations 0
Cbc0038I Pass  33: suminf.    3.62131 (15) obj. -120.381 iterations 0
Cbc0038I Pass  34: suminf.    0.29623 (12) obj. -106.834 iterations 18
Cbc0038I Pass  35: suminf.    0.29623 (12) obj. -106.834 iterations 0
Cbc0038I Pass  36: suminf.    0.88496 (2) obj. -106.834 iterations 16
Cbc0038I Pass  37: suminf.    0.67866 (3) obj. -106.834 iterations 2
Cbc0038I Pass  38: suminf.    0.49493 (2) obj. -106.834 iterations 1
Cbc0038I Pass  39: suminf.    0.49493 (2) obj. -106.834 iterations 0
Cbc0038I Pass  40: suminf.    0.88496 (2) obj. -106.834 iterations 2
Cbc0038I Pass  41: suminf.    4.35960 (12) obj. -106.834 iterations 18
Cbc0038I Pass  42: suminf.    3.18944 (9) obj. -106.834 iterations 8
Cbc0038I Pass  43: suminf.    2.72636 (9) obj. -106.834 iterations 3
Cbc0038I Pass  44: suminf.    1.38308 (4) obj. -106.834 iterations 12
Cbc0038I Pass  45: suminf.    1.38308 (4) obj. -106.834 iterations 0
Cbc0038I Pass  46: suminf.    1.04530 (3) obj. -106.834 iterations 2
Cbc0038I Pass  47: suminf.    0.69672 (3) obj. -106.834 iterations 1
Cbc0038I Pass  48: suminf.    0.69672 (3) obj. -106.834 iterations 0
Cbc0038I Pass  49: suminf.    0.68893 (3) obj. -106.834 iterations 3
Cbc0038I Pass  50: suminf.    0.68893 (3) obj. -106.834 iterations 0
Cbc0038I Pass  51: suminf.    1.04530 (3) obj. -106.834 iterations 1
Cbc0038I Pass  52: suminf.    0.69672 (3) obj. -106.834 iterations 1
Cbc0038I Pass  53: suminf.    0.69672 (3) obj. -106.834 iterations 0
Cbc0038I Pass  54: suminf.    0.68893 (3) obj. -106.834 iterations 3
Cbc0038I Pass  55: suminf.    0.68893 (3) obj. -106.834 iterations 0
Cbc0038I Pass  56: suminf.    1.04530 (3) obj. -106.834 iterations 1
Cbc0038I Pass  57: suminf.    0.69672 (3) obj. -106.834 iterations 1
Cbc0038I Pass  58: suminf.    0.69672 (3) obj. -106.834 iterations 0
Cbc0038I Pass  59: suminf.    0.68893 (3) obj. -106.834 iterations 3
Cbc0038I Pass  60: suminf.    0.68893 (3) obj. -106.834 iterations 0
Cbc0038I Pass  61: suminf.    1.04530 (3) obj. -106.834 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 55 columns, reduced to 15 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -88.5549 - took 0.03 seconds
Cbc0012I Integer solution of -88.5549 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 47 rows 55 columns, reduced to 3 rows 7 columns
Cbc0031I 24 added rows had average density of 11.416667
Cbc0013I At root node, 24 cuts changed objective from -179.95249 to -94.541226 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 463 row cuts average 3.2 elements, 12 column cuts (12 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 539 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 173 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 18.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.766 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -88.5549 best solution, best possible -94.540941 (1.59 seconds)
Cbc0012I Integer solution of -92.96217 found by rounding after 1143 iterations and 2 nodes (1.60 seconds)
Cbc0012I Integer solution of -93.83933 found by DiveCoefficient after 1143 iterations and 2 nodes (1.60 seconds)
Cbc0001I Search completed - best objective -93.83932999999999, took 1169 iterations and 4 nodes (1.60 seconds)
Cbc0032I Strong branching done 58 times (407 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 28 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.64

