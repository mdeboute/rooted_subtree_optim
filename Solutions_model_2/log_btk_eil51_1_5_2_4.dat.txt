Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 2.97418e-05 - average 3.4186e-07, 2 fixed columns
Coin0506I Presolve 83 (-4) rows, 49 (-2) columns and 256 (-12) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 39.195457
Clp0000I Optimal - objective value 39.195457
Coin0511I After Postsolve, objective 39.195457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.195457
Clp0000I Optimal - objective value 39.195457
Clp0000I Optimal - objective value 39.195457
Coin0511I After Postsolve, objective 39.195457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.19545698 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 9.90478
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.0808 iterations 30
Cbc0038I Solution found of 19.0808
Cbc0038I Relaxing continuous gives 19.0808
Cbc0038I Rounding solution of 5.17069 is better than previous of 19.0808

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 58 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 5.17069 to -3.88727 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.41818
Cbc0038I Pass   2: suminf.    1.15935 (26) obj. -7.41818 iterations 25
Cbc0038I Pass   3: suminf.    1.13579 (28) obj. -7.41818 iterations 6
Cbc0038I Pass   4: suminf.    1.19863 (8) obj. -7.41818 iterations 30
Cbc0038I Pass   5: suminf.    0.50337 (4) obj. -7.41818 iterations 5
Cbc0038I Pass   6: suminf.    1.10396 (5) obj. -7.41818 iterations 11
Cbc0038I Pass   7: suminf.    1.06947 (4) obj. -7.41818 iterations 1
Cbc0038I Pass   8: suminf.    1.15961 (6) obj. -7.41818 iterations 3
Cbc0038I Pass   9: suminf.    1.13012 (5) obj. -7.41818 iterations 1
Cbc0038I Pass  10: suminf.    1.39177 (7) obj. -7.41818 iterations 8
Cbc0038I Pass  11: suminf.    2.43411 (8) obj. -7.41818 iterations 11
Cbc0038I Pass  12: suminf.    2.17432 (9) obj. -7.41818 iterations 3
Cbc0038I Pass  13: suminf.    1.67966 (9) obj. -7.41818 iterations 3
Cbc0038I Pass  14: suminf.    1.04673 (6) obj. -7.41818 iterations 6
Cbc0038I Pass  15: suminf.    0.93172 (5) obj. -7.41818 iterations 3
Cbc0038I Pass  16: suminf.    1.14545 (4) obj. -7.41818 iterations 7
Cbc0038I Pass  17: suminf.    1.08021 (5) obj. -7.41818 iterations 1
Cbc0038I Pass  18: suminf.    1.80137 (9) obj. -7.41818 iterations 7
Cbc0038I Pass  19: suminf.    1.67966 (9) obj. -7.41818 iterations 3
Cbc0038I Pass  20: suminf.    1.04673 (6) obj. -7.41818 iterations 6
Cbc0038I Pass  21: suminf.    0.93172 (5) obj. -7.41818 iterations 3
Cbc0038I Pass  22: suminf.    1.14545 (4) obj. -7.41818 iterations 7
Cbc0038I Pass  23: suminf.    1.08021 (5) obj. -7.41818 iterations 1
Cbc0038I Pass  24: suminf.    1.80137 (9) obj. -7.41818 iterations 7
Cbc0038I Pass  25: suminf.    1.67966 (9) obj. -7.41818 iterations 3
Cbc0038I Pass  26: suminf.    1.04673 (6) obj. -7.41818 iterations 6
Cbc0038I Pass  27: suminf.    0.93172 (5) obj. -7.41818 iterations 3
Cbc0038I Pass  28: suminf.    1.14545 (4) obj. -7.41818 iterations 7
Cbc0038I Pass  29: suminf.    1.08021 (5) obj. -7.41818 iterations 1
Cbc0038I Pass  30: suminf.    1.80137 (9) obj. -7.41818 iterations 7
Cbc0038I Pass  31: suminf.    1.67966 (9) obj. -7.41818 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 62 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -3.88727 - took 0.06 seconds
Cbc0012I Integer solution of -3.887266 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 58 rows 36 columns
Cbc0031I 21 added rows had average density of 41.952381
Cbc0013I At root node, 21 cuts changed objective from -39.195457 to -28.793133 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8673 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1828 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0038I Full problem 87 rows 51 columns, reduced to 54 rows 34 columns
Cbc0010I After 43 nodes, 9 on tree, -3.887266 best solution, best possible -28.793133 (0.74 seconds)
Cbc0001I Search completed - best objective -3.887265999999997, took 7192 iterations and 70 nodes (0.78 seconds)
Cbc0032I Strong branching done 704 times (11554 iterations), fathomed 7 nodes and fixed 23 variables
Cbc0035I Maximum depth 19, 140 variables fixed on reduced cost
Total time (CPU seconds):       0.76   (Wallclock seconds):       0.79

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-36) rows, 81 (-21) columns and 1023 (-555) elements
Clp1000I sum of infeasibilities 1.36327e-07 - average 2.00481e-09, 43 fixed columns
Coin0506I Presolve 26 (-42) rows, 38 (-43) columns and 122 (-901) elements
Clp0006I 0  Obj -3.7598953 Dual inf 1.0184462 (38)
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 2.5146988 - largest nonzero change 1.7011975e-05 ( 0.00060188215%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value -0.66617806
Clp0000I Optimal - objective value -0.66617806
Coin0511I After Postsolve, objective -0.66617806, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -0.66617806 Dual inf 10.287897 (31)
Clp0014I Perturbing problem by 0.001% of 4.364462 - largest nonzero change 2.9801037e-05 ( 0.0021190981%) - largest zero change 2.9249654e-05
Clp0000I Optimal - objective value 49.471157
Clp0000I Optimal - objective value 49.471157
Clp0000I Optimal - objective value 49.471157
Coin0511I After Postsolve, objective 49.471157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.47115742 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 82 columns (82 integer (82 of which binary)) and 1028 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.970%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 6.92417
Cbc0038I Pass   1: suminf.    3.01171 (25) obj. -30.5886 iterations 7
Cbc0038I Pass   2: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass   3: suminf.    0.29230 (4) obj. 4.0818 iterations 21
Cbc0038I Solution found of 7.7895
Cbc0038I Rounding solution of 4.53694 is better than previous of 7.7895

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of 0.11129
Cbc0038I Pass   4: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass   5: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass   6: suminf.    0.62317 (6) obj. 0.11129 iterations 22
Cbc0038I Pass   7: suminf.    0.25320 (2) obj. -3.82035 iterations 5
Cbc0038I Pass   8: suminf.    0.14286 (1) obj. -2.49621 iterations 1
Cbc0038I Pass   9: suminf.    0.58084 (2) obj. 0.11129 iterations 2
Cbc0038I Pass  10: suminf.    1.07444 (12) obj. 0.11129 iterations 18
Cbc0038I Pass  11: suminf.    0.37824 (4) obj. 0.0394154 iterations 16
Cbc0038I Pass  12: suminf.    1.05542 (8) obj. 0.11129 iterations 15
Cbc0038I Pass  13: suminf.    1.05542 (8) obj. 0.11129 iterations 0
Cbc0038I Pass  14: suminf.    2.05568 (6) obj. 0.11129 iterations 6
Cbc0038I Pass  15: suminf.    1.84415 (6) obj. -1.46836 iterations 1
Cbc0038I Pass  16: suminf.    1.94903 (6) obj. 0.11129 iterations 7
Cbc0038I Pass  17: suminf.    1.78097 (7) obj. 0.11129 iterations 4
Cbc0038I Pass  18: suminf.    1.30257 (6) obj. 0.11129 iterations 4
Cbc0038I Pass  19: suminf.    0.43280 (4) obj. 0.11129 iterations 3
Cbc0038I Pass  20: suminf.    1.54660 (4) obj. 0.11129 iterations 6
Cbc0038I Pass  21: suminf.    3.61881 (14) obj. 0.11129 iterations 18
Cbc0038I Pass  22: suminf.    0.83251 (7) obj. 0.11129 iterations 10
Cbc0038I Pass  23: suminf.    0.62152 (6) obj. 0.11129 iterations 3
Cbc0038I Pass  24: suminf.    0.23856 (2) obj. -1.83139 iterations 5
Cbc0038I Pass  25: suminf.    0.20408 (1) obj. -1.4176 iterations 1
Cbc0038I Pass  26: suminf.    0.40045 (2) obj. 0.11129 iterations 2
Cbc0038I Pass  27: suminf.    1.36390 (12) obj. 0.11129 iterations 29
Cbc0038I Pass  28: suminf.    1.34586 (9) obj. 0.11129 iterations 9
Cbc0038I Pass  29: suminf.    0.82546 (8) obj. 0.11129 iterations 21
Cbc0038I Pass  30: suminf.    0.61361 (4) obj. -0.139243 iterations 2
Cbc0038I Pass  31: suminf.    1.17694 (6) obj. 0.11129 iterations 8
Cbc0038I Pass  32: suminf.    1.87982 (8) obj. -2.05476 iterations 12
Cbc0038I Pass  33: suminf.    1.87982 (8) obj. -2.05476 iterations 1
Cbc0038I Rounding solution of 4.10673 is better than previous of 4.53694

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 52 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 4.10673 to -2.81704 (0.07 seconds)
Cbc0038I Round again with cutoff of -10.1975
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass  34: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass  35: suminf.    0.75118 (7) obj. -10.1975 iterations 29
Cbc0038I Pass  36: suminf.    0.67810 (8) obj. -10.1975 iterations 2
Cbc0038I Pass  37: suminf.    1.07028 (6) obj. -10.1975 iterations 11
Cbc0038I Pass  38: suminf.    1.07028 (6) obj. -10.1975 iterations 1
Cbc0038I Pass  39: suminf.    1.39875 (6) obj. -10.1975 iterations 5
Cbc0038I Pass  40: suminf.    1.38133 (5) obj. -10.1975 iterations 3
Cbc0038I Pass  41: suminf.    1.61473 (8) obj. -10.1975 iterations 4
Cbc0038I Pass  42: suminf.    1.60449 (5) obj. -10.1975 iterations 4
Cbc0038I Pass  43: suminf.    1.39875 (6) obj. -10.1975 iterations 5
Cbc0038I Pass  44: suminf.    1.49482 (9) obj. -10.1975 iterations 18
Cbc0038I Pass  45: suminf.    1.38023 (10) obj. -10.1975 iterations 7
Cbc0038I Pass  46: suminf.    1.14580 (8) obj. -10.1975 iterations 16
Cbc0038I Pass  47: suminf.    1.13719 (9) obj. -10.1975 iterations 4
Cbc0038I Pass  48: suminf.    2.23846 (7) obj. -10.1975 iterations 12
Cbc0038I Pass  49: suminf.    1.38102 (6) obj. -10.1975 iterations 5
Cbc0038I Pass  50: suminf.    1.38102 (6) obj. -10.1975 iterations 0
Cbc0038I Pass  51: suminf.    2.09454 (7) obj. -10.1975 iterations 7
Cbc0038I Pass  52: suminf.    2.09454 (7) obj. -10.1975 iterations 1
Cbc0038I Pass  53: suminf.    2.49339 (7) obj. -10.1975 iterations 3
Cbc0038I Pass  54: suminf.    2.49339 (7) obj. -10.1975 iterations 0
Cbc0038I Pass  55: suminf.    2.34479 (7) obj. -10.1975 iterations 1
Cbc0038I Pass  56: suminf.    2.13057 (6) obj. -10.1975 iterations 2
Cbc0038I Pass  57: suminf.    1.98102 (7) obj. -10.1975 iterations 3
Cbc0038I Pass  58: suminf.    2.49339 (7) obj. -10.1975 iterations 2
Cbc0038I Pass  59: suminf.    2.49339 (7) obj. -10.1975 iterations 0
Cbc0038I Pass  60: suminf.    2.34479 (7) obj. -10.1975 iterations 1
Cbc0038I Pass  61: suminf.    2.13057 (6) obj. -10.1975 iterations 2
Cbc0038I Pass  62: suminf.    1.98102 (7) obj. -10.1975 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 18 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -2.81704 - took 0.07 seconds
Cbc0012I Integer solution of -2.81704 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 35 rows 38 columns
Cbc0031I 45 added rows had average density of 36.6
Cbc0013I At root node, 45 cuts changed objective from -39.718691 to -10.174698 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8796 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1476 row cuts average 78.6 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1373 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 390 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 45 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.81704 best solution, best possible -10.174698 (1.97 seconds)
Cbc0012I Integer solution of -3.026466 found by rounding after 4514 iterations and 2 nodes (2.00 seconds)
Cbc0012I Integer solution of -3.452606 found by rounding after 4529 iterations and 4 nodes (2.01 seconds)
Cbc0012I Integer solution of -3.645456 found by DiveCoefficient after 4579 iterations and 12 nodes (2.01 seconds)
Cbc0012I Integer solution of -3.887266 found by rounding after 5578 iterations and 34 nodes (2.34 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 11 rows 17 columns
Cbc0001I Search completed - best objective -3.887265999999997, took 6183 iterations and 60 nodes (2.37 seconds)
Cbc0032I Strong branching done 650 times (9896 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 17, 129 variables fixed on reduced cost
Total time (CPU seconds):       1.83   (Wallclock seconds):       2.38

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-18) rows, 51 (-2) columns and 268 (-35) elements
Clp1000I sum of infeasibilities 2.97418e-05 - average 3.4186e-07, 2 fixed columns
Coin0506I Presolve 83 (-4) rows, 49 (-2) columns and 256 (-12) elements
Clp0029I End of values pass after 49 iterations
Clp0000I Optimal - objective value 39.195457
Clp0000I Optimal - objective value 39.195457
Coin0511I After Postsolve, objective 39.195457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.195457
Clp0000I Optimal - objective value 39.195457
Clp0000I Optimal - objective value 39.195457
Coin0511I After Postsolve, objective 39.195457, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.19545698 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 87 rows, 51 columns (50 integer (50 of which binary)) and 268 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 9.90478
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 19.0808 iterations 30
Cbc0038I Solution found of 19.0808
Cbc0038I Relaxing continuous gives 19.0808
Cbc0038I Rounding solution of 5.17069 is better than previous of 19.0808

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 58 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 5.17069 to -3.88727 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.41818
Cbc0038I Pass   2: suminf.    1.15935 (26) obj. -7.41818 iterations 25
Cbc0038I Pass   3: suminf.    1.13579 (28) obj. -7.41818 iterations 6
Cbc0038I Pass   4: suminf.    1.19863 (8) obj. -7.41818 iterations 30
Cbc0038I Pass   5: suminf.    0.50337 (4) obj. -7.41818 iterations 5
Cbc0038I Pass   6: suminf.    1.10396 (5) obj. -7.41818 iterations 11
Cbc0038I Pass   7: suminf.    1.06947 (4) obj. -7.41818 iterations 1
Cbc0038I Pass   8: suminf.    1.15961 (6) obj. -7.41818 iterations 3
Cbc0038I Pass   9: suminf.    1.13012 (5) obj. -7.41818 iterations 1
Cbc0038I Pass  10: suminf.    1.39177 (7) obj. -7.41818 iterations 8
Cbc0038I Pass  11: suminf.    2.43411 (8) obj. -7.41818 iterations 11
Cbc0038I Pass  12: suminf.    2.17432 (9) obj. -7.41818 iterations 3
Cbc0038I Pass  13: suminf.    1.67966 (9) obj. -7.41818 iterations 3
Cbc0038I Pass  14: suminf.    1.04673 (6) obj. -7.41818 iterations 6
Cbc0038I Pass  15: suminf.    0.93172 (5) obj. -7.41818 iterations 3
Cbc0038I Pass  16: suminf.    1.14545 (4) obj. -7.41818 iterations 7
Cbc0038I Pass  17: suminf.    1.08021 (5) obj. -7.41818 iterations 1
Cbc0038I Pass  18: suminf.    1.80137 (9) obj. -7.41818 iterations 7
Cbc0038I Pass  19: suminf.    1.67966 (9) obj. -7.41818 iterations 3
Cbc0038I Pass  20: suminf.    1.04673 (6) obj. -7.41818 iterations 6
Cbc0038I Pass  21: suminf.    0.93172 (5) obj. -7.41818 iterations 3
Cbc0038I Pass  22: suminf.    1.14545 (4) obj. -7.41818 iterations 7
Cbc0038I Pass  23: suminf.    1.08021 (5) obj. -7.41818 iterations 1
Cbc0038I Pass  24: suminf.    1.80137 (9) obj. -7.41818 iterations 7
Cbc0038I Pass  25: suminf.    1.67966 (9) obj. -7.41818 iterations 3
Cbc0038I Pass  26: suminf.    1.04673 (6) obj. -7.41818 iterations 6
Cbc0038I Pass  27: suminf.    0.93172 (5) obj. -7.41818 iterations 3
Cbc0038I Pass  28: suminf.    1.14545 (4) obj. -7.41818 iterations 7
Cbc0038I Pass  29: suminf.    1.08021 (5) obj. -7.41818 iterations 1
Cbc0038I Pass  30: suminf.    1.80137 (9) obj. -7.41818 iterations 7
Cbc0038I Pass  31: suminf.    1.67966 (9) obj. -7.41818 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 51 columns, reduced to 62 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -3.88727 - took 0.07 seconds
Cbc0012I Integer solution of -3.887266 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 58 rows 36 columns
Cbc0031I 21 added rows had average density of 41.952381
Cbc0013I At root node, 21 cuts changed objective from -39.195457 to -28.793133 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8673 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1828 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 50.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0010I After 41 nodes, 9 on tree, -3.887266 best solution, best possible -28.793133 (0.68 seconds)
Cbc0038I Full problem 87 rows 51 columns, reduced to 54 rows 34 columns
Cbc0001I Search completed - best objective -3.887265999999997, took 7192 iterations and 70 nodes (0.84 seconds)
Cbc0032I Strong branching done 704 times (11554 iterations), fathomed 7 nodes and fixed 23 variables
Cbc0035I Maximum depth 19, 140 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.85

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 68 (-37) rows, 81 (-22) columns and 1023 (-556) elements
Clp1000I sum of infeasibilities 1.36327e-07 - average 2.00481e-09, 43 fixed columns
Coin0506I Presolve 26 (-42) rows, 38 (-43) columns and 122 (-901) elements
Clp0006I 0  Obj -3.7598953 Dual inf 1.0184462 (38)
Clp0029I End of values pass after 38 iterations
Clp0014I Perturbing problem by 0.001% of 2.5146988 - largest nonzero change 1.7011975e-05 ( 0.00060188215%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value -0.66617806
Clp0000I Optimal - objective value -0.66617806
Coin0511I After Postsolve, objective -0.66617806, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -0.66617806 Dual inf 10.287897 (31)
Clp0014I Perturbing problem by 0.001% of 4.364462 - largest nonzero change 2.9801037e-05 ( 0.0021190981%) - largest zero change 2.9249654e-05
Clp0000I Optimal - objective value 49.471157
Clp0000I Optimal - objective value 49.471157
Clp0000I Optimal - objective value 49.471157
Coin0511I After Postsolve, objective 49.471157, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.47115742 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 82 columns (82 integer (82 of which binary)) and 1028 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.970%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 6.92417
Cbc0038I Pass   1: suminf.    3.01171 (25) obj. -30.5886 iterations 7
Cbc0038I Pass   2: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass   3: suminf.    0.29230 (4) obj. 4.0818 iterations 21
Cbc0038I Solution found of 7.7895
Cbc0038I Rounding solution of 4.53694 is better than previous of 7.7895

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of 0.11129
Cbc0038I Pass   4: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass   5: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass   6: suminf.    0.62317 (6) obj. 0.11129 iterations 22
Cbc0038I Pass   7: suminf.    0.25320 (2) obj. -3.82035 iterations 5
Cbc0038I Pass   8: suminf.    0.14286 (1) obj. -2.49621 iterations 1
Cbc0038I Pass   9: suminf.    0.58084 (2) obj. 0.11129 iterations 2
Cbc0038I Pass  10: suminf.    1.07444 (12) obj. 0.11129 iterations 18
Cbc0038I Pass  11: suminf.    0.37824 (4) obj. 0.0394154 iterations 16
Cbc0038I Pass  12: suminf.    1.05542 (8) obj. 0.11129 iterations 15
Cbc0038I Pass  13: suminf.    1.05542 (8) obj. 0.11129 iterations 0
Cbc0038I Pass  14: suminf.    2.05568 (6) obj. 0.11129 iterations 6
Cbc0038I Pass  15: suminf.    1.84415 (6) obj. -1.46836 iterations 1
Cbc0038I Pass  16: suminf.    1.94903 (6) obj. 0.11129 iterations 7
Cbc0038I Pass  17: suminf.    1.78097 (7) obj. 0.11129 iterations 4
Cbc0038I Pass  18: suminf.    1.30257 (6) obj. 0.11129 iterations 4
Cbc0038I Pass  19: suminf.    0.43280 (4) obj. 0.11129 iterations 3
Cbc0038I Pass  20: suminf.    1.54660 (4) obj. 0.11129 iterations 6
Cbc0038I Pass  21: suminf.    3.61881 (14) obj. 0.11129 iterations 18
Cbc0038I Pass  22: suminf.    0.83251 (7) obj. 0.11129 iterations 10
Cbc0038I Pass  23: suminf.    0.62152 (6) obj. 0.11129 iterations 3
Cbc0038I Pass  24: suminf.    0.23856 (2) obj. -1.83139 iterations 5
Cbc0038I Pass  25: suminf.    0.20408 (1) obj. -1.4176 iterations 1
Cbc0038I Pass  26: suminf.    0.40045 (2) obj. 0.11129 iterations 2
Cbc0038I Pass  27: suminf.    1.36390 (12) obj. 0.11129 iterations 29
Cbc0038I Pass  28: suminf.    1.34586 (9) obj. 0.11129 iterations 9
Cbc0038I Pass  29: suminf.    0.82546 (8) obj. 0.11129 iterations 21
Cbc0038I Pass  30: suminf.    0.61361 (4) obj. -0.139243 iterations 2
Cbc0038I Pass  31: suminf.    1.17694 (6) obj. 0.11129 iterations 8
Cbc0038I Pass  32: suminf.    1.87982 (8) obj. -2.05476 iterations 12
Cbc0038I Pass  33: suminf.    1.87982 (8) obj. -2.05476 iterations 1
Cbc0038I Rounding solution of 4.10673 is better than previous of 4.53694

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 52 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 4.10673 to -2.81704 (0.08 seconds)
Cbc0038I Round again with cutoff of -10.1975
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass  34: suminf.    3.01171 (25) obj. -30.5886 iterations 0
Cbc0038I Pass  35: suminf.    0.75118 (7) obj. -10.1975 iterations 29
Cbc0038I Pass  36: suminf.    0.67810 (8) obj. -10.1975 iterations 2
Cbc0038I Pass  37: suminf.    1.07028 (6) obj. -10.1975 iterations 11
Cbc0038I Pass  38: suminf.    1.07028 (6) obj. -10.1975 iterations 1
Cbc0038I Pass  39: suminf.    1.39875 (6) obj. -10.1975 iterations 5
Cbc0038I Pass  40: suminf.    1.38133 (5) obj. -10.1975 iterations 3
Cbc0038I Pass  41: suminf.    1.61473 (8) obj. -10.1975 iterations 4
Cbc0038I Pass  42: suminf.    1.60449 (5) obj. -10.1975 iterations 4
Cbc0038I Pass  43: suminf.    1.39875 (6) obj. -10.1975 iterations 5
Cbc0038I Pass  44: suminf.    1.49482 (9) obj. -10.1975 iterations 18
Cbc0038I Pass  45: suminf.    1.38023 (10) obj. -10.1975 iterations 7
Cbc0038I Pass  46: suminf.    1.14580 (8) obj. -10.1975 iterations 16
Cbc0038I Pass  47: suminf.    1.13719 (9) obj. -10.1975 iterations 4
Cbc0038I Pass  48: suminf.    2.23846 (7) obj. -10.1975 iterations 12
Cbc0038I Pass  49: suminf.    1.38102 (6) obj. -10.1975 iterations 5
Cbc0038I Pass  50: suminf.    1.38102 (6) obj. -10.1975 iterations 0
Cbc0038I Pass  51: suminf.    2.09454 (7) obj. -10.1975 iterations 7
Cbc0038I Pass  52: suminf.    2.09454 (7) obj. -10.1975 iterations 1
Cbc0038I Pass  53: suminf.    2.49339 (7) obj. -10.1975 iterations 3
Cbc0038I Pass  54: suminf.    2.49339 (7) obj. -10.1975 iterations 0
Cbc0038I Pass  55: suminf.    2.34479 (7) obj. -10.1975 iterations 1
Cbc0038I Pass  56: suminf.    2.13057 (6) obj. -10.1975 iterations 2
Cbc0038I Pass  57: suminf.    1.98102 (7) obj. -10.1975 iterations 3
Cbc0038I Pass  58: suminf.    2.49339 (7) obj. -10.1975 iterations 2
Cbc0038I Pass  59: suminf.    2.49339 (7) obj. -10.1975 iterations 0
Cbc0038I Pass  60: suminf.    2.34479 (7) obj. -10.1975 iterations 1
Cbc0038I Pass  61: suminf.    2.13057 (6) obj. -10.1975 iterations 2
Cbc0038I Pass  62: suminf.    1.98102 (7) obj. -10.1975 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 82 columns, reduced to 18 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -2.81704 - took 0.07 seconds
Cbc0012I Integer solution of -2.81704 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 35 rows 38 columns
Cbc0031I 45 added rows had average density of 36.6
Cbc0013I At root node, 45 cuts changed objective from -39.718691 to -10.174698 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8796 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1476 row cuts average 78.6 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 26 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1373 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 390 row cuts average 38.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 45 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.691 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.81704 best solution, best possible -10.174698 (2.17 seconds)
Cbc0012I Integer solution of -3.026466 found by rounding after 4514 iterations and 2 nodes (2.21 seconds)
Cbc0012I Integer solution of -3.452606 found by rounding after 4529 iterations and 4 nodes (2.21 seconds)
Cbc0012I Integer solution of -3.645456 found by DiveCoefficient after 4579 iterations and 12 nodes (2.22 seconds)
Cbc0012I Integer solution of -3.887266 found by rounding after 5578 iterations and 34 nodes (2.58 seconds)
Cbc0038I Full problem 69 rows 82 columns, reduced to 11 rows 17 columns
Cbc0001I Search completed - best objective -3.887265999999997, took 6183 iterations and 60 nodes (2.61 seconds)
Cbc0032I Strong branching done 650 times (9896 iterations), fathomed 3 nodes and fixed 11 variables
Cbc0035I Maximum depth 17, 129 variables fixed on reduced cost
Total time (CPU seconds):       1.98   (Wallclock seconds):       2.63

