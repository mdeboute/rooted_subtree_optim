Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 48 (-2) columns and 260 (-25) elements
Clp1000I sum of infeasibilities 1.49864e-07 - average 1.7426e-09, 4 fixed columns
Coin0506I Presolve 79 (-7) rows, 44 (-4) columns and 238 (-22) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 20.83645 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 159583.38
Clp0000I Optimal - objective value 159583.38
Coin0511I After Postsolve, objective 159583.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 159583.38
Clp0000I Optimal - objective value 159583.38
Clp0000I Optimal - objective value 159583.38
Coin0511I After Postsolve, objective 159583.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 159583.3838 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 48 columns (47 integer (47 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.26658
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -157441 iterations 26
Cbc0038I Solution found of -157441
Cbc0038I Relaxing continuous gives -157441
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 25 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -157441 to -158524 (0.02 seconds)
Cbc0038I Round again with cutoff of -158630
Cbc0038I Pass   2: suminf.    2.00000 (8) obj. -158630 iterations 10
Cbc0038I Pass   3: suminf.    2.83868 (12) obj. -158630 iterations 17
Cbc0038I Pass   4: suminf.    0.82477 (3) obj. -158630 iterations 12
Cbc0038I Pass   5: suminf.    0.31120 (2) obj. -158630 iterations 2
Cbc0038I Pass   6: suminf.    0.99199 (2) obj. -158630 iterations 2
Cbc0038I Pass   7: suminf.    0.99199 (2) obj. -158630 iterations 0
Cbc0038I Pass   8: suminf.    0.64965 (2) obj. -158630 iterations 5
Cbc0038I Pass   9: suminf.    0.61742 (2) obj. -158630 iterations 1
Cbc0038I Pass  10: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  11: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I Pass  12: suminf.    0.97666 (2) obj. -158630 iterations 0
Cbc0038I Pass  13: suminf.    0.67676 (2) obj. -158630 iterations 7
Cbc0038I Pass  14: suminf.    0.67676 (2) obj. -158630 iterations 0
Cbc0038I Pass  15: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  16: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I Pass  17: suminf.    0.97666 (2) obj. -158630 iterations 0
Cbc0038I Pass  18: suminf.    0.67676 (2) obj. -158630 iterations 7
Cbc0038I Pass  19: suminf.    0.67676 (2) obj. -158630 iterations 0
Cbc0038I Pass  20: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  21: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I Pass  22: suminf.    0.97666 (2) obj. -158630 iterations 0
Cbc0038I Pass  23: suminf.    0.67676 (2) obj. -158630 iterations 7
Cbc0038I Pass  24: suminf.    0.67676 (2) obj. -158630 iterations 0
Cbc0038I Pass  25: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  26: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I Pass  27: suminf.    0.97666 (2) obj. -158630 iterations 0
Cbc0038I Pass  28: suminf.    0.67676 (2) obj. -158630 iterations 7
Cbc0038I Pass  29: suminf.    0.67676 (2) obj. -158630 iterations 0
Cbc0038I Pass  30: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  31: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 29 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -158524 - took 0.02 seconds
Cbc0012I Integer solution of -158523.6 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 86 rows 48 columns, reduced to 25 rows 18 columns
Cbc0031I 13 added rows had average density of 31.692308
Cbc0013I At root node, 13 cuts changed objective from -159583.38 to -158642.92 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2068 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 866 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 39.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0001I Search completed - best objective -158523.6, took 2235 iterations and 2 nodes (0.24 seconds)
Cbc0032I Strong branching done 64 times (914 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-12) rows, 94 (-2) columns and 1341 (-72) elements
Clp1000I sum of infeasibilities 1.21372e-09 - average 1.4113e-11, 30 fixed columns
Coin0506I Presolve 58 (-28) rows, 60 (-34) columns and 519 (-822) elements
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 3.3738747 - largest nonzero change 2.3155777e-05 ( 0.0016756202%) - largest zero change 2.9777876e-05
Clp0000I Optimal - objective value 160520.38
Clp0000I Optimal - objective value 160520.38
Coin0511I After Postsolve, objective 160520.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.3155777e-05 ( 0.0016756202%) - largest zero change 2.9777876e-05
Clp0000I Optimal - objective value 160520.38
Clp0000I Optimal - objective value 160520.38
Clp0000I Optimal - objective value 160520.38
Coin0511I After Postsolve, objective 160520.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 160520.382 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 94 columns (94 integer (94 of which binary)) and 1345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.79969
Cbc0038I Pass   1: suminf.    2.35611 (22) obj. -105843 iterations 25
Cbc0038I Pass   2: suminf.    2.35611 (22) obj. -105843 iterations 2
Cbc0038I Pass   3: suminf.    0.76910 (11) obj. -105169 iterations 11
Cbc0038I Solution found of -104816
Cbc0038I Rounding solution of -157271 is better than previous of -104816

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -157271 to -158278 (0.02 seconds)
Cbc0038I Round again with cutoff of -158462
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    8.94432 (42) obj. -158462 iterations 13
Cbc0038I Pass   5: suminf.    4.44050 (32) obj. -158462 iterations 14
Cbc0038I Pass   6: suminf.    4.43588 (33) obj. -158462 iterations 4
Cbc0038I Pass   7: suminf.    0.76261 (7) obj. -158462 iterations 33
Cbc0038I Pass   8: suminf.    0.73654 (6) obj. -158735 iterations 4
Cbc0038I Pass   9: suminf.    0.26468 (2) obj. -158462 iterations 17
Cbc0038I Pass  10: suminf.    0.26468 (2) obj. -158462 iterations 0
Cbc0038I Pass  11: suminf.    0.62134 (2) obj. -158462 iterations 3
Cbc0038I Pass  12: suminf.    2.54533 (9) obj. -158462 iterations 16
Cbc0038I Pass  13: suminf.    1.75194 (7) obj. -158655 iterations 11
Cbc0038I Pass  14: suminf.    0.47276 (1) obj. -158462 iterations 12
Cbc0038I Pass  15: suminf.    0.16667 (1) obj. -158535 iterations 6
Cbc0038I Pass  16: suminf.    2.64116 (13) obj. -158462 iterations 24
Cbc0038I Pass  17: suminf.    2.59298 (12) obj. -158508 iterations 7
Cbc0038I Pass  18: suminf.    0.48311 (3) obj. -158462 iterations 25
Cbc0038I Pass  19: suminf.    0.48311 (3) obj. -158462 iterations 0
Cbc0038I Pass  20: suminf.    0.37240 (2) obj. -158462 iterations 5
Cbc0038I Pass  21: suminf.    0.32051 (2) obj. -158473 iterations 6
Cbc0038I Pass  22: suminf.    0.48311 (3) obj. -158462 iterations 9
Cbc0038I Pass  23: suminf.    1.53150 (6) obj. -158462 iterations 23
Cbc0038I Pass  24: suminf.    1.21927 (6) obj. -158525 iterations 10
Cbc0038I Pass  25: suminf.    0.46783 (3) obj. -158462 iterations 15
Cbc0038I Pass  26: suminf.    0.46783 (3) obj. -158462 iterations 1
Cbc0038I Pass  27: suminf.    0.36715 (2) obj. -158462 iterations 4
Cbc0038I Pass  28: suminf.    0.24359 (2) obj. -158487 iterations 5
Cbc0038I Pass  29: suminf.    1.71514 (9) obj. -158462 iterations 22
Cbc0038I Pass  30: suminf.    1.51723 (8) obj. -158528 iterations 5
Cbc0038I Pass  31: suminf.    0.59654 (3) obj. -158462 iterations 17
Cbc0038I Pass  32: suminf.    0.53904 (3) obj. -158471 iterations 5
Cbc0038I Pass  33: suminf.    2.41727 (14) obj. -158462 iterations 12
Cbc0038I Rounding solution of -158367 is better than previous of -158278

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 8 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -158793
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    8.97666 (42) obj. -158793 iterations 0
Cbc0038I Pass  34: suminf.    3.50590 (26) obj. -158793 iterations 20
Cbc0038I Pass  35: suminf.    3.40516 (25) obj. -158793 iterations 1
Cbc0038I Pass  36: suminf.    2.10958 (13) obj. -158793 iterations 23
Cbc0038I Pass  37: suminf.    2.10958 (13) obj. -158793 iterations 1
Cbc0038I Pass  38: suminf.    1.73372 (5) obj. -158793 iterations 19
Cbc0038I Pass  39: suminf.    1.73372 (5) obj. -158793 iterations 0
Cbc0038I Pass  40: suminf.    0.46306 (3) obj. -158793 iterations 12
Cbc0038I Pass  41: suminf.    0.46306 (3) obj. -158793 iterations 2
Cbc0038I Pass  42: suminf.    0.54359 (3) obj. -158793 iterations 5
Cbc0038I Pass  43: suminf.    0.54359 (3) obj. -158793 iterations 0
Cbc0038I Pass  44: suminf.    0.46306 (3) obj. -158793 iterations 4
Cbc0038I Pass  45: suminf.    2.86145 (10) obj. -158793 iterations 13
Cbc0038I Pass  46: suminf.    2.86145 (10) obj. -158793 iterations 2
Cbc0038I Pass  47: suminf.    0.76918 (3) obj. -158793 iterations 22
Cbc0038I Pass  48: suminf.    0.69289 (3) obj. -158805 iterations 7
Cbc0038I Pass  49: suminf.    2.58683 (11) obj. -158793 iterations 17
Cbc0038I Pass  50: suminf.    2.58683 (11) obj. -158793 iterations 1
Cbc0038I Pass  51: suminf.    0.86501 (4) obj. -158793 iterations 31
Cbc0038I Pass  52: suminf.    0.86501 (4) obj. -158793 iterations 0
Cbc0038I Pass  53: suminf.    0.98124 (4) obj. -158793 iterations 1
Cbc0038I Pass  54: suminf.    0.98124 (4) obj. -158793 iterations 0
Cbc0038I Pass  55: suminf.    0.86501 (4) obj. -158793 iterations 2
Cbc0038I Pass  56: suminf.    3.33477 (12) obj. -158793 iterations 14
Cbc0038I Pass  57: suminf.    3.33477 (12) obj. -158793 iterations 4
Cbc0038I Pass  58: suminf.    0.79200 (3) obj. -158793 iterations 17
Cbc0038I Pass  59: suminf.    0.79200 (3) obj. -158793 iterations 0
Cbc0038I Pass  60: suminf.    0.69383 (3) obj. -158793 iterations 4
Cbc0038I Pass  61: suminf.    0.69383 (3) obj. -158793 iterations 0
Cbc0038I Pass  62: suminf.    0.79200 (3) obj. -158793 iterations 3
Cbc0038I Rounding solution of -158493 is better than previous of -158367

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -159191
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  62: suminf.    9.01547 (42) obj. -159191 iterations 0
Cbc0038I Pass  63: suminf.    5.43647 (28) obj. -159191 iterations 19
Cbc0038I Pass  64: suminf.    3.50336 (18) obj. -159191 iterations 26
Cbc0038I Pass  65: suminf.    2.75996 (9) obj. -159191 iterations 23
Cbc0038I Pass  66: suminf.    2.75996 (9) obj. -159191 iterations 1
Cbc0038I Pass  67: suminf.    2.45140 (9) obj. -159191 iterations 9
Cbc0038I Pass  68: suminf.    1.45764 (7) obj. -159191 iterations 1
Cbc0038I Pass  69: suminf.    1.45764 (7) obj. -159191 iterations 0
Cbc0038I Pass  70: suminf.    1.42141 (7) obj. -159191 iterations 2
Cbc0038I Pass  71: suminf.    1.42141 (7) obj. -159191 iterations 0
Cbc0038I Pass  72: suminf.    1.45764 (7) obj. -159191 iterations 2
Cbc0038I Pass  73: suminf.    2.98864 (12) obj. -159191 iterations 18
Cbc0038I Pass  74: suminf.    2.95398 (12) obj. -159195 iterations 12
Cbc0038I Pass  75: suminf.    1.86518 (8) obj. -159191 iterations 19
Cbc0038I Pass  76: suminf.    1.86518 (8) obj. -159191 iterations 0
Cbc0038I Pass  77: suminf.    1.84202 (8) obj. -159191 iterations 3
Cbc0038I Pass  78: suminf.    1.84202 (8) obj. -159191 iterations 0
Cbc0038I Pass  79: suminf.    1.86518 (8) obj. -159191 iterations 3
Cbc0038I Pass  80: suminf.    2.85214 (11) obj. -159191 iterations 10
Cbc0038I Pass  81: suminf.    2.85214 (11) obj. -159191 iterations 2
Cbc0038I Pass  82: suminf.    2.17830 (9) obj. -159191 iterations 9
Cbc0038I Pass  83: suminf.    2.17830 (9) obj. -159191 iterations 0
Cbc0038I Pass  84: suminf.    2.29142 (9) obj. -159191 iterations 4
Cbc0038I Pass  85: suminf.    2.29142 (9) obj. -159191 iterations 0
Cbc0038I Pass  86: suminf.    2.17830 (9) obj. -159191 iterations 4
Cbc0038I Pass  87: suminf.    4.08640 (19) obj. -159191 iterations 17
Cbc0038I Pass  88: suminf.    3.73453 (15) obj. -159191 iterations 7
Cbc0038I Pass  89: suminf.    2.13063 (8) obj. -159191 iterations 15
Cbc0038I Pass  90: suminf.    2.13063 (8) obj. -159191 iterations 3
Cbc0038I Pass  91: suminf.    2.09160 (8) obj. -159191 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -158493 - took 0.05 seconds
Cbc0012I Integer solution of -158493.2 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 86 rows 94 columns, reduced to 5 rows 7 columns
Cbc0012I Integer solution of -158523.6 found by DiveCoefficient after 76 iterations and 0 nodes (0.08 seconds)
Cbc0031I 31 added rows had average density of 12.16129
Cbc0013I At root node, 31 cuts changed objective from -160118.17 to -158523.6 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 375 row cuts average 2.0 elements, 14 column cuts (14 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 36.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -158523.6, took 76 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 48 (-2) columns and 260 (-25) elements
Clp1000I sum of infeasibilities 1.49864e-07 - average 1.7426e-09, 4 fixed columns
Coin0506I Presolve 79 (-7) rows, 44 (-4) columns and 238 (-22) elements
Clp0029I End of values pass after 44 iterations
Clp0014I Perturbing problem by 0.001% of 20.83645 - largest nonzero change 0 ( 0%) - largest zero change 2.5115664e-05
Clp0000I Optimal - objective value 159583.38
Clp0000I Optimal - objective value 159583.38
Coin0511I After Postsolve, objective 159583.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 159583.38
Clp0000I Optimal - objective value 159583.38
Clp0000I Optimal - objective value 159583.38
Coin0511I After Postsolve, objective 159583.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 159583.3838 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 48 columns (47 integer (47 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.26658
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -157441 iterations 26
Cbc0038I Solution found of -157441
Cbc0038I Relaxing continuous gives -157441
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 25 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -157441 to -158524 (0.01 seconds)
Cbc0038I Round again with cutoff of -158630
Cbc0038I Pass   2: suminf.    2.00000 (8) obj. -158630 iterations 10
Cbc0038I Pass   3: suminf.    2.83868 (12) obj. -158630 iterations 17
Cbc0038I Pass   4: suminf.    0.82477 (3) obj. -158630 iterations 12
Cbc0038I Pass   5: suminf.    0.31120 (2) obj. -158630 iterations 2
Cbc0038I Pass   6: suminf.    0.99199 (2) obj. -158630 iterations 2
Cbc0038I Pass   7: suminf.    0.99199 (2) obj. -158630 iterations 0
Cbc0038I Pass   8: suminf.    0.64965 (2) obj. -158630 iterations 5
Cbc0038I Pass   9: suminf.    0.61742 (2) obj. -158630 iterations 1
Cbc0038I Pass  10: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  11: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I Pass  12: suminf.    0.97666 (2) obj. -158630 iterations 0
Cbc0038I Pass  13: suminf.    0.67676 (2) obj. -158630 iterations 7
Cbc0038I Pass  14: suminf.    0.67676 (2) obj. -158630 iterations 0
Cbc0038I Pass  15: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  16: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I Pass  17: suminf.    0.97666 (2) obj. -158630 iterations 0
Cbc0038I Pass  18: suminf.    0.67676 (2) obj. -158630 iterations 7
Cbc0038I Pass  19: suminf.    0.67676 (2) obj. -158630 iterations 0
Cbc0038I Pass  20: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  21: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I Pass  22: suminf.    0.97666 (2) obj. -158630 iterations 0
Cbc0038I Pass  23: suminf.    0.67676 (2) obj. -158630 iterations 7
Cbc0038I Pass  24: suminf.    0.67676 (2) obj. -158630 iterations 0
Cbc0038I Pass  25: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  26: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I Pass  27: suminf.    0.97666 (2) obj. -158630 iterations 0
Cbc0038I Pass  28: suminf.    0.67676 (2) obj. -158630 iterations 7
Cbc0038I Pass  29: suminf.    0.67676 (2) obj. -158630 iterations 0
Cbc0038I Pass  30: suminf.    0.18558 (2) obj. -158630 iterations 2
Cbc0038I Pass  31: suminf.    0.97666 (2) obj. -158630 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 29 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -158524 - took 0.02 seconds
Cbc0012I Integer solution of -158523.6 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 86 rows 48 columns, reduced to 25 rows 18 columns
Cbc0031I 13 added rows had average density of 31.692308
Cbc0013I At root node, 13 cuts changed objective from -159583.38 to -158642.92 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2068 row cuts average 3.1 elements, 2 column cuts (2 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 866 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 39.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0001I Search completed - best objective -158523.6, took 2235 iterations and 2 nodes (0.28 seconds)
Cbc0032I Strong branching done 64 times (914 iterations), fathomed 2 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 94 (-3) columns and 1341 (-73) elements
Clp1000I sum of infeasibilities 1.21372e-09 - average 1.4113e-11, 30 fixed columns
Coin0506I Presolve 58 (-28) rows, 60 (-34) columns and 519 (-822) elements
Clp0029I End of values pass after 60 iterations
Clp0014I Perturbing problem by 0.001% of 3.3738747 - largest nonzero change 2.3155777e-05 ( 0.0016756202%) - largest zero change 2.9777876e-05
Clp0000I Optimal - objective value 160520.38
Clp0000I Optimal - objective value 160520.38
Coin0511I After Postsolve, objective 160520.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.3155777e-05 ( 0.0016756202%) - largest zero change 2.9777876e-05
Clp0000I Optimal - objective value 160520.38
Clp0000I Optimal - objective value 160520.38
Clp0000I Optimal - objective value 160520.38
Coin0511I After Postsolve, objective 160520.38, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 160520.382 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 94 columns (94 integer (94 of which binary)) and 1345 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 9.79969
Cbc0038I Pass   1: suminf.    2.35611 (22) obj. -105843 iterations 25
Cbc0038I Pass   2: suminf.    2.35611 (22) obj. -105843 iterations 2
Cbc0038I Pass   3: suminf.    0.76910 (11) obj. -105169 iterations 11
Cbc0038I Solution found of -104816
Cbc0038I Rounding solution of -157271 is better than previous of -104816

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -157271 to -158278 (0.03 seconds)
Cbc0038I Round again with cutoff of -158462
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    8.94432 (42) obj. -158462 iterations 13
Cbc0038I Pass   5: suminf.    4.44050 (32) obj. -158462 iterations 14
Cbc0038I Pass   6: suminf.    4.43588 (33) obj. -158462 iterations 4
Cbc0038I Pass   7: suminf.    0.76261 (7) obj. -158462 iterations 33
Cbc0038I Pass   8: suminf.    0.73654 (6) obj. -158735 iterations 4
Cbc0038I Pass   9: suminf.    0.26468 (2) obj. -158462 iterations 17
Cbc0038I Pass  10: suminf.    0.26468 (2) obj. -158462 iterations 0
Cbc0038I Pass  11: suminf.    0.62134 (2) obj. -158462 iterations 3
Cbc0038I Pass  12: suminf.    2.54533 (9) obj. -158462 iterations 16
Cbc0038I Pass  13: suminf.    1.75194 (7) obj. -158655 iterations 11
Cbc0038I Pass  14: suminf.    0.47276 (1) obj. -158462 iterations 12
Cbc0038I Pass  15: suminf.    0.16667 (1) obj. -158535 iterations 6
Cbc0038I Pass  16: suminf.    2.64116 (13) obj. -158462 iterations 24
Cbc0038I Pass  17: suminf.    2.59298 (12) obj. -158508 iterations 7
Cbc0038I Pass  18: suminf.    0.48311 (3) obj. -158462 iterations 25
Cbc0038I Pass  19: suminf.    0.48311 (3) obj. -158462 iterations 0
Cbc0038I Pass  20: suminf.    0.37240 (2) obj. -158462 iterations 5
Cbc0038I Pass  21: suminf.    0.32051 (2) obj. -158473 iterations 6
Cbc0038I Pass  22: suminf.    0.48311 (3) obj. -158462 iterations 9
Cbc0038I Pass  23: suminf.    1.53150 (6) obj. -158462 iterations 23
Cbc0038I Pass  24: suminf.    1.21927 (6) obj. -158525 iterations 10
Cbc0038I Pass  25: suminf.    0.46783 (3) obj. -158462 iterations 15
Cbc0038I Pass  26: suminf.    0.46783 (3) obj. -158462 iterations 1
Cbc0038I Pass  27: suminf.    0.36715 (2) obj. -158462 iterations 4
Cbc0038I Pass  28: suminf.    0.24359 (2) obj. -158487 iterations 5
Cbc0038I Pass  29: suminf.    1.71514 (9) obj. -158462 iterations 22
Cbc0038I Pass  30: suminf.    1.51723 (8) obj. -158528 iterations 5
Cbc0038I Pass  31: suminf.    0.59654 (3) obj. -158462 iterations 17
Cbc0038I Pass  32: suminf.    0.53904 (3) obj. -158471 iterations 5
Cbc0038I Pass  33: suminf.    2.41727 (14) obj. -158462 iterations 12
Cbc0038I Rounding solution of -158367 is better than previous of -158278

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 8 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -158793
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    8.97666 (42) obj. -158793 iterations 0
Cbc0038I Pass  34: suminf.    3.50590 (26) obj. -158793 iterations 20
Cbc0038I Pass  35: suminf.    3.40516 (25) obj. -158793 iterations 1
Cbc0038I Pass  36: suminf.    2.10958 (13) obj. -158793 iterations 23
Cbc0038I Pass  37: suminf.    2.10958 (13) obj. -158793 iterations 1
Cbc0038I Pass  38: suminf.    1.73372 (5) obj. -158793 iterations 19
Cbc0038I Pass  39: suminf.    1.73372 (5) obj. -158793 iterations 0
Cbc0038I Pass  40: suminf.    0.46306 (3) obj. -158793 iterations 12
Cbc0038I Pass  41: suminf.    0.46306 (3) obj. -158793 iterations 2
Cbc0038I Pass  42: suminf.    0.54359 (3) obj. -158793 iterations 5
Cbc0038I Pass  43: suminf.    0.54359 (3) obj. -158793 iterations 0
Cbc0038I Pass  44: suminf.    0.46306 (3) obj. -158793 iterations 4
Cbc0038I Pass  45: suminf.    2.86145 (10) obj. -158793 iterations 13
Cbc0038I Pass  46: suminf.    2.86145 (10) obj. -158793 iterations 2
Cbc0038I Pass  47: suminf.    0.76918 (3) obj. -158793 iterations 22
Cbc0038I Pass  48: suminf.    0.69289 (3) obj. -158805 iterations 7
Cbc0038I Pass  49: suminf.    2.58683 (11) obj. -158793 iterations 17
Cbc0038I Pass  50: suminf.    2.58683 (11) obj. -158793 iterations 1
Cbc0038I Pass  51: suminf.    0.86501 (4) obj. -158793 iterations 31
Cbc0038I Pass  52: suminf.    0.86501 (4) obj. -158793 iterations 0
Cbc0038I Pass  53: suminf.    0.98124 (4) obj. -158793 iterations 1
Cbc0038I Pass  54: suminf.    0.98124 (4) obj. -158793 iterations 0
Cbc0038I Pass  55: suminf.    0.86501 (4) obj. -158793 iterations 2
Cbc0038I Pass  56: suminf.    3.33477 (12) obj. -158793 iterations 14
Cbc0038I Pass  57: suminf.    3.33477 (12) obj. -158793 iterations 4
Cbc0038I Pass  58: suminf.    0.79200 (3) obj. -158793 iterations 17
Cbc0038I Pass  59: suminf.    0.79200 (3) obj. -158793 iterations 0
Cbc0038I Pass  60: suminf.    0.69383 (3) obj. -158793 iterations 4
Cbc0038I Pass  61: suminf.    0.69383 (3) obj. -158793 iterations 0
Cbc0038I Pass  62: suminf.    0.79200 (3) obj. -158793 iterations 3
Cbc0038I Rounding solution of -158493 is better than previous of -158367

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -159191
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  62: suminf.    9.01547 (42) obj. -159191 iterations 0
Cbc0038I Pass  63: suminf.    5.43647 (28) obj. -159191 iterations 19
Cbc0038I Pass  64: suminf.    3.50336 (18) obj. -159191 iterations 26
Cbc0038I Pass  65: suminf.    2.75996 (9) obj. -159191 iterations 23
Cbc0038I Pass  66: suminf.    2.75996 (9) obj. -159191 iterations 1
Cbc0038I Pass  67: suminf.    2.45140 (9) obj. -159191 iterations 9
Cbc0038I Pass  68: suminf.    1.45764 (7) obj. -159191 iterations 1
Cbc0038I Pass  69: suminf.    1.45764 (7) obj. -159191 iterations 0
Cbc0038I Pass  70: suminf.    1.42141 (7) obj. -159191 iterations 2
Cbc0038I Pass  71: suminf.    1.42141 (7) obj. -159191 iterations 0
Cbc0038I Pass  72: suminf.    1.45764 (7) obj. -159191 iterations 2
Cbc0038I Pass  73: suminf.    2.98864 (12) obj. -159191 iterations 18
Cbc0038I Pass  74: suminf.    2.95398 (12) obj. -159195 iterations 12
Cbc0038I Pass  75: suminf.    1.86518 (8) obj. -159191 iterations 19
Cbc0038I Pass  76: suminf.    1.86518 (8) obj. -159191 iterations 0
Cbc0038I Pass  77: suminf.    1.84202 (8) obj. -159191 iterations 3
Cbc0038I Pass  78: suminf.    1.84202 (8) obj. -159191 iterations 0
Cbc0038I Pass  79: suminf.    1.86518 (8) obj. -159191 iterations 3
Cbc0038I Pass  80: suminf.    2.85214 (11) obj. -159191 iterations 10
Cbc0038I Pass  81: suminf.    2.85214 (11) obj. -159191 iterations 2
Cbc0038I Pass  82: suminf.    2.17830 (9) obj. -159191 iterations 9
Cbc0038I Pass  83: suminf.    2.17830 (9) obj. -159191 iterations 0
Cbc0038I Pass  84: suminf.    2.29142 (9) obj. -159191 iterations 4
Cbc0038I Pass  85: suminf.    2.29142 (9) obj. -159191 iterations 0
Cbc0038I Pass  86: suminf.    2.17830 (9) obj. -159191 iterations 4
Cbc0038I Pass  87: suminf.    4.08640 (19) obj. -159191 iterations 17
Cbc0038I Pass  88: suminf.    3.73453 (15) obj. -159191 iterations 7
Cbc0038I Pass  89: suminf.    2.13063 (8) obj. -159191 iterations 15
Cbc0038I Pass  90: suminf.    2.13063 (8) obj. -159191 iterations 3
Cbc0038I Pass  91: suminf.    2.09160 (8) obj. -159191 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -158493 - took 0.05 seconds
Cbc0012I Integer solution of -158493.2 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 86 rows 94 columns, reduced to 5 rows 7 columns
Cbc0012I Integer solution of -158523.6 found by DiveCoefficient after 76 iterations and 0 nodes (0.09 seconds)
Cbc0031I 31 added rows had average density of 12.16129
Cbc0013I At root node, 31 cuts changed objective from -160118.17 to -158523.6 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 375 row cuts average 2.0 elements, 14 column cuts (14 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 36.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 26.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -158523.6, took 76 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 26 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.10

