Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-13) rows, 51 (-2) columns and 278 (-25) elements
Clp1000I sum of infeasibilities 4.98241e-06 - average 5.41566e-08, 0 fixed columns
Coin0506I Presolve 92 (0) rows, 51 (0) columns and 278 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Coin0511I After Postsolve, objective 34.141651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Coin0511I After Postsolve, objective 34.141651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.14165053 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 51 columns (50 integer (50 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.0328
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.24589 iterations 37
Cbc0038I Solution found of 8.24589
Cbc0038I Relaxing continuous gives 8.24589
Cbc0038I Rounding solution of 5.84324 is better than previous of 8.24589

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 83 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 5.84324 to -2.30589 (0.06 seconds)
Cbc0038I Round again with cutoff of -5.48955
Cbc0038I Pass   2: suminf.    1.46867 (27) obj. -5.48955 iterations 29
Cbc0038I Pass   3: suminf.    1.32444 (38) obj. -5.48955 iterations 17
Cbc0038I Pass   4: suminf.    1.10908 (7) obj. -5.48955 iterations 51
Cbc0038I Pass   5: suminf.    0.67337 (5) obj. -5.48955 iterations 4
Cbc0038I Pass   6: suminf.    0.91765 (3) obj. -5.48955 iterations 8
Cbc0038I Pass   7: suminf.    0.91765 (3) obj. -5.48955 iterations 1
Cbc0038I Pass   8: suminf.    1.33644 (3) obj. -5.48955 iterations 3
Cbc0038I Pass   9: suminf.    0.91765 (3) obj. -5.48955 iterations 2
Cbc0038I Pass  10: suminf.    1.81210 (7) obj. -5.48955 iterations 12
Cbc0038I Pass  11: suminf.    1.65627 (6) obj. -5.48955 iterations 5
Cbc0038I Pass  12: suminf.    1.47229 (5) obj. -5.48955 iterations 7
Cbc0038I Pass  13: suminf.    1.47229 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  14: suminf.    2.12964 (5) obj. -5.48955 iterations 3
Cbc0038I Pass  15: suminf.    2.17640 (9) obj. -5.48955 iterations 12
Cbc0038I Pass  16: suminf.    1.52756 (5) obj. -5.48955 iterations 5
Cbc0038I Pass  17: suminf.    1.35352 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  18: suminf.    1.35352 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  19: suminf.    1.22997 (5) obj. -5.48955 iterations 8
Cbc0038I Pass  20: suminf.    1.32029 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  21: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  22: suminf.    1.45064 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  23: suminf.    1.13130 (5) obj. -5.48955 iterations 6
Cbc0038I Pass  24: suminf.    1.04071 (4) obj. -5.48955 iterations 6
Cbc0038I Pass  25: suminf.    1.32029 (5) obj. -5.48955 iterations 2
Cbc0038I Pass  26: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  27: suminf.    1.45064 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  28: suminf.    1.13130 (5) obj. -5.48955 iterations 5
Cbc0038I Pass  29: suminf.    1.04071 (4) obj. -5.48955 iterations 5
Cbc0038I Pass  30: suminf.    1.32029 (5) obj. -5.48955 iterations 2
Cbc0038I Pass  31: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -2.30589 - took 0.08 seconds
Cbc0012I Integer solution of -2.305885 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 25 added rows had average density of 32.32
Cbc0013I At root node, 25 cuts changed objective from -34.141651 to -23.823882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10496 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1585 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 160 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 16 nodes, 10 on tree, -2.305885 best solution, best possible -23.823882 (0.68 seconds)
Cbc0001I Search completed - best objective -2.305884999999996, took 8921 iterations and 76 nodes (0.88 seconds)
Cbc0032I Strong branching done 992 times (16312 iterations), fathomed 1 nodes and fixed 47 variables
Cbc0035I Maximum depth 16, 106 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.89

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-31) rows, 81 (-21) columns and 1090 (-488) elements
Clp1000I sum of infeasibilities 2.24752e-07 - average 3.0788e-09, 37 fixed columns
Coin0506I Presolve 36 (-37) rows, 44 (-37) columns and 154 (-936) elements
Clp0006I 0  Obj -4.751558 Dual inf 40.526072 (44)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.40942928 - largest nonzero change 2.2248196e-05 ( 0.0017511358%) - largest zero change 2.9381674e-05
Clp0000I Optimal - objective value -4.5201362
Clp0000I Optimal - objective value -4.5201362
Coin0511I After Postsolve, objective -4.5201362, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.5201362 Dual inf 12.542948 (31)
Clp0014I Perturbing problem by 0.001% of 4.6862061 - largest nonzero change 1.8192046e-05 ( 0.00095608279%) - largest zero change 2.9797123e-05
Clp0000I Optimal - objective value 47.867529
Clp0000I Optimal - objective value 47.867529
Clp0000I Optimal - objective value 47.867529
Coin0511I After Postsolve, objective 47.867529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.86752859 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 81 columns (81 integer (81 of which binary)) and 1092 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.29282
Cbc0038I Pass   1: suminf.    2.27596 (25) obj. -28.9496 iterations 10
Cbc0038I Pass   2: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass   3: suminf.    1.11592 (15) obj. -7.83574 iterations 10
Cbc0038I Solution found of 11.6316
Cbc0038I Rounding solution of 5.19678 is better than previous of 11.6316

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 81 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 5.19678 to 4.07026 (0.02 seconds)
Cbc0038I Round again with cutoff of -0.421828
Cbc0038I Pass   4: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass   5: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass   6: suminf.    0.78395 (8) obj. -0.421828 iterations 24
Cbc0038I Pass   7: suminf.    0.68780 (7) obj. -1.10452 iterations 2
Cbc0038I Pass   8: suminf.    1.18334 (4) obj. -0.421828 iterations 12
Cbc0038I Pass   9: suminf.    1.18334 (4) obj. -0.421828 iterations 0
Cbc0038I Pass  10: suminf.    0.53524 (3) obj. -2.28133 iterations 7
Cbc0038I Pass  11: suminf.    0.13953 (1) obj. -0.641627 iterations 2
Cbc0038I Pass  12: suminf.    0.66957 (2) obj. -0.421828 iterations 5
Cbc0038I Pass  13: suminf.    1.66989 (10) obj. -0.421828 iterations 21
Cbc0038I Pass  14: suminf.    1.33351 (9) obj. -0.421828 iterations 11
Cbc0038I Pass  15: suminf.    1.20206 (5) obj. -0.421828 iterations 15
Cbc0038I Pass  16: suminf.    0.59771 (4) obj. -1.18837 iterations 3
Cbc0038I Pass  17: suminf.    0.93476 (3) obj. -0.421828 iterations 7
Cbc0038I Pass  18: suminf.    0.93476 (3) obj. -0.421828 iterations 0
Cbc0038I Pass  19: suminf.    0.34950 (3) obj. -0.421828 iterations 8
Cbc0038I Pass  20: suminf.    0.33476 (4) obj. -0.421828 iterations 12
Cbc0038I Pass  21: suminf.    0.41923 (4) obj. -1.28535 iterations 9
Cbc0038I Pass  22: suminf.    0.41923 (4) obj. -1.28535 iterations 0
Cbc0038I Pass  23: suminf.    0.31350 (3) obj. -0.421828 iterations 14
Cbc0038I Pass  24: suminf.    0.25182 (4) obj. -0.421828 iterations 2
Cbc0038I Pass  25: suminf.    0.73813 (4) obj. -0.421828 iterations 24
Cbc0038I Pass  26: suminf.    4.90831 (16) obj. -0.421828 iterations 27
Cbc0038I Pass  27: suminf.    2.73985 (10) obj. -0.421828 iterations 7
Cbc0038I Pass  28: suminf.    2.73985 (10) obj. -0.421828 iterations 0
Cbc0038I Pass  29: suminf.    1.36574 (4) obj. -0.421828 iterations 15
Cbc0038I Pass  30: suminf.    1.18905 (5) obj. -0.421828 iterations 2
Cbc0038I Pass  31: suminf.    1.54067 (5) obj. -0.421828 iterations 10
Cbc0038I Pass  32: suminf.    1.77816 (12) obj. -1.11336 iterations 34
Cbc0038I Pass  33: suminf.    1.63080 (12) obj. -0.421828 iterations 7
Cbc0038I Rounding solution of 2.80023 is better than previous of 4.07026

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 81 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 2.80023 to -0.903745 (0.06 seconds)
Cbc0038I Round again with cutoff of -8.89303
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass  34: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass  35: suminf.    1.21820 (14) obj. -8.89303 iterations 14
Cbc0038I Pass  36: suminf.    1.03108 (14) obj. -9.64151 iterations 2
Cbc0038I Pass  37: suminf.    1.66104 (9) obj. -8.89303 iterations 20
Cbc0038I Pass  38: suminf.    1.55217 (9) obj. -8.89303 iterations 5
Cbc0038I Pass  39: suminf.    1.33316 (6) obj. -8.89303 iterations 11
Cbc0038I Pass  40: suminf.    1.24263 (5) obj. -8.89303 iterations 2
Cbc0038I Pass  41: suminf.    1.22422 (6) obj. -8.89303 iterations 7
Cbc0038I Pass  42: suminf.    1.10972 (5) obj. -8.89303 iterations 6
Cbc0038I Pass  43: suminf.    1.35093 (6) obj. -8.89303 iterations 7
Cbc0038I Pass  44: suminf.    2.11888 (12) obj. -8.89303 iterations 26
Cbc0038I Pass  45: suminf.    1.99899 (9) obj. -8.89303 iterations 13
Cbc0038I Pass  46: suminf.    1.38454 (6) obj. -8.89303 iterations 8
Cbc0038I Pass  47: suminf.    1.20410 (6) obj. -8.89303 iterations 2
Cbc0038I Pass  48: suminf.    0.98797 (5) obj. -8.9345 iterations 5
Cbc0038I Pass  49: suminf.    1.00179 (5) obj. -8.89303 iterations 6
Cbc0038I Pass  50: suminf.    2.40187 (14) obj. -8.89303 iterations 23
Cbc0038I Pass  51: suminf.    1.74417 (9) obj. -8.89303 iterations 9
Cbc0038I Pass  52: suminf.    1.62751 (7) obj. -8.89303 iterations 12
Cbc0038I Pass  53: suminf.    1.62751 (7) obj. -8.89303 iterations 0
Cbc0038I Pass  54: suminf.    1.22434 (5) obj. -8.89303 iterations 16
Cbc0038I Pass  55: suminf.    1.19964 (5) obj. -8.89303 iterations 4
Cbc0038I Pass  56: suminf.    1.49829 (6) obj. -8.89303 iterations 15
Cbc0038I Pass  57: suminf.    1.16596 (7) obj. -8.89303 iterations 1
Cbc0038I Pass  58: suminf.    1.15205 (6) obj. -8.89303 iterations 21
Cbc0038I Pass  59: suminf.    0.92781 (8) obj. -8.89303 iterations 6
Cbc0038I Pass  60: suminf.    2.34646 (8) obj. -8.89303 iterations 12
Cbc0038I Pass  61: suminf.    1.48672 (7) obj. -8.89303 iterations 11
Cbc0038I Pass  62: suminf.    1.15205 (6) obj. -8.89303 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -0.903745 - took 0.06 seconds
Cbc0012I Integer solution of -0.903745 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 73 rows 81 columns, reduced to 26 rows 31 columns
Cbc0031I 43 added rows had average density of 34.348837
Cbc0013I At root node, 43 cuts changed objective from -40.849751 to -13.708111 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15316 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1584 row cuts average 79.2 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 70 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 913 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 314 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.663 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.903745 best solution, best possible -13.708111 (2.15 seconds)
Cbc0004I Integer solution of -1.06954 found after 5400 iterations and 1 nodes (2.16 seconds)
Cbc0012I Integer solution of -1.757695 found by rounding after 7225 iterations and 40 nodes (2.69 seconds)
Cbc0004I Integer solution of -2.305885 found after 7235 iterations and 42 nodes (2.69 seconds)
Cbc0010I After 69 nodes, 2 on tree, -2.305885 best solution, best possible -8.4627131 (2.87 seconds)
Cbc0001I Search completed - best objective -2.305884999999996, took 8474 iterations and 76 nodes (2.90 seconds)
Cbc0032I Strong branching done 998 times (17871 iterations), fathomed 5 nodes and fixed 11 variables
Cbc0035I Maximum depth 20, 74 variables fixed on reduced cost
Total time (CPU seconds):       2.33   (Wallclock seconds):       2.91

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-13) rows, 51 (-2) columns and 278 (-25) elements
Clp1000I sum of infeasibilities 4.98241e-06 - average 5.41566e-08, 0 fixed columns
Coin0506I Presolve 92 (0) rows, 51 (0) columns and 278 (0) elements
Clp0029I End of values pass after 51 iterations
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Coin0511I After Postsolve, objective 34.141651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Clp0000I Optimal - objective value 34.141651
Coin0511I After Postsolve, objective 34.141651, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.14165053 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 92 rows, 51 columns (50 integer (50 of which binary)) and 278 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.713%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 10.0328
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.24589 iterations 37
Cbc0038I Solution found of 8.24589
Cbc0038I Relaxing continuous gives 8.24589
Cbc0038I Rounding solution of 5.84324 is better than previous of 8.24589

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 83 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 5.84324 to -2.30589 (0.06 seconds)
Cbc0038I Round again with cutoff of -5.48955
Cbc0038I Pass   2: suminf.    1.46867 (27) obj. -5.48955 iterations 29
Cbc0038I Pass   3: suminf.    1.32444 (38) obj. -5.48955 iterations 17
Cbc0038I Pass   4: suminf.    1.10908 (7) obj. -5.48955 iterations 51
Cbc0038I Pass   5: suminf.    0.67337 (5) obj. -5.48955 iterations 4
Cbc0038I Pass   6: suminf.    0.91765 (3) obj. -5.48955 iterations 8
Cbc0038I Pass   7: suminf.    0.91765 (3) obj. -5.48955 iterations 1
Cbc0038I Pass   8: suminf.    1.33644 (3) obj. -5.48955 iterations 3
Cbc0038I Pass   9: suminf.    0.91765 (3) obj. -5.48955 iterations 2
Cbc0038I Pass  10: suminf.    1.81210 (7) obj. -5.48955 iterations 12
Cbc0038I Pass  11: suminf.    1.65627 (6) obj. -5.48955 iterations 5
Cbc0038I Pass  12: suminf.    1.47229 (5) obj. -5.48955 iterations 7
Cbc0038I Pass  13: suminf.    1.47229 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  14: suminf.    2.12964 (5) obj. -5.48955 iterations 3
Cbc0038I Pass  15: suminf.    2.17640 (9) obj. -5.48955 iterations 12
Cbc0038I Pass  16: suminf.    1.52756 (5) obj. -5.48955 iterations 5
Cbc0038I Pass  17: suminf.    1.35352 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  18: suminf.    1.35352 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  19: suminf.    1.22997 (5) obj. -5.48955 iterations 8
Cbc0038I Pass  20: suminf.    1.32029 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  21: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  22: suminf.    1.45064 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  23: suminf.    1.13130 (5) obj. -5.48955 iterations 6
Cbc0038I Pass  24: suminf.    1.04071 (4) obj. -5.48955 iterations 6
Cbc0038I Pass  25: suminf.    1.32029 (5) obj. -5.48955 iterations 2
Cbc0038I Pass  26: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I Pass  27: suminf.    1.45064 (5) obj. -5.48955 iterations 4
Cbc0038I Pass  28: suminf.    1.13130 (5) obj. -5.48955 iterations 5
Cbc0038I Pass  29: suminf.    1.04071 (4) obj. -5.48955 iterations 5
Cbc0038I Pass  30: suminf.    1.32029 (5) obj. -5.48955 iterations 2
Cbc0038I Pass  31: suminf.    1.32029 (5) obj. -5.48955 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 51 columns, reduced to 86 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -2.30589 - took 0.08 seconds
Cbc0012I Integer solution of -2.305885 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0031I 25 added rows had average density of 32.32
Cbc0013I At root node, 25 cuts changed objective from -34.141651 to -23.823882 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10496 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1585 row cuts average 51.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 160 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 187 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0010I After 6 nodes, 7 on tree, -2.305885 best solution, best possible -23.823882 (0.68 seconds)
Cbc0001I Search completed - best objective -2.305884999999996, took 8921 iterations and 76 nodes (0.94 seconds)
Cbc0032I Strong branching done 992 times (16312 iterations), fathomed 1 nodes and fixed 47 variables
Cbc0035I Maximum depth 16, 106 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.95

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-32) rows, 81 (-22) columns and 1090 (-489) elements
Clp1000I sum of infeasibilities 2.24752e-07 - average 3.0788e-09, 37 fixed columns
Coin0506I Presolve 36 (-37) rows, 44 (-37) columns and 154 (-936) elements
Clp0006I 0  Obj -4.751558 Dual inf 40.526072 (44)
Clp0029I End of values pass after 42 iterations
Clp0014I Perturbing problem by 0.001% of 0.40942928 - largest nonzero change 2.2248196e-05 ( 0.0017511358%) - largest zero change 2.9381674e-05
Clp0000I Optimal - objective value -4.5201362
Clp0000I Optimal - objective value -4.5201362
Coin0511I After Postsolve, objective -4.5201362, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -4.5201362 Dual inf 12.542948 (31)
Clp0014I Perturbing problem by 0.001% of 4.6862061 - largest nonzero change 1.8192046e-05 ( 0.00095608279%) - largest zero change 2.9797123e-05
Clp0000I Optimal - objective value 47.867529
Clp0000I Optimal - objective value 47.867529
Clp0000I Optimal - objective value 47.867529
Coin0511I After Postsolve, objective 47.867529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.86752859 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 73 rows, 81 columns (81 integer (81 of which binary)) and 1092 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.589%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 7.29282
Cbc0038I Pass   1: suminf.    2.27596 (25) obj. -28.9496 iterations 10
Cbc0038I Pass   2: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass   3: suminf.    1.11592 (15) obj. -7.83574 iterations 10
Cbc0038I Solution found of 11.6316
Cbc0038I Rounding solution of 5.19678 is better than previous of 11.6316

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 81 columns, reduced to 7 rows 10 columns
Cbc0038I Mini branch and bound improved solution from 5.19678 to 4.07026 (0.02 seconds)
Cbc0038I Round again with cutoff of -0.421828
Cbc0038I Pass   4: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass   5: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass   6: suminf.    0.78395 (8) obj. -0.421828 iterations 24
Cbc0038I Pass   7: suminf.    0.68780 (7) obj. -1.10452 iterations 2
Cbc0038I Pass   8: suminf.    1.18334 (4) obj. -0.421828 iterations 12
Cbc0038I Pass   9: suminf.    1.18334 (4) obj. -0.421828 iterations 0
Cbc0038I Pass  10: suminf.    0.53524 (3) obj. -2.28133 iterations 7
Cbc0038I Pass  11: suminf.    0.13953 (1) obj. -0.641627 iterations 2
Cbc0038I Pass  12: suminf.    0.66957 (2) obj. -0.421828 iterations 5
Cbc0038I Pass  13: suminf.    1.66989 (10) obj. -0.421828 iterations 21
Cbc0038I Pass  14: suminf.    1.33351 (9) obj. -0.421828 iterations 11
Cbc0038I Pass  15: suminf.    1.20206 (5) obj. -0.421828 iterations 15
Cbc0038I Pass  16: suminf.    0.59771 (4) obj. -1.18837 iterations 3
Cbc0038I Pass  17: suminf.    0.93476 (3) obj. -0.421828 iterations 7
Cbc0038I Pass  18: suminf.    0.93476 (3) obj. -0.421828 iterations 0
Cbc0038I Pass  19: suminf.    0.34950 (3) obj. -0.421828 iterations 8
Cbc0038I Pass  20: suminf.    0.33476 (4) obj. -0.421828 iterations 12
Cbc0038I Pass  21: suminf.    0.41923 (4) obj. -1.28535 iterations 9
Cbc0038I Pass  22: suminf.    0.41923 (4) obj. -1.28535 iterations 0
Cbc0038I Pass  23: suminf.    0.31350 (3) obj. -0.421828 iterations 14
Cbc0038I Pass  24: suminf.    0.25182 (4) obj. -0.421828 iterations 2
Cbc0038I Pass  25: suminf.    0.73813 (4) obj. -0.421828 iterations 24
Cbc0038I Pass  26: suminf.    4.90831 (16) obj. -0.421828 iterations 27
Cbc0038I Pass  27: suminf.    2.73985 (10) obj. -0.421828 iterations 7
Cbc0038I Pass  28: suminf.    2.73985 (10) obj. -0.421828 iterations 0
Cbc0038I Pass  29: suminf.    1.36574 (4) obj. -0.421828 iterations 15
Cbc0038I Pass  30: suminf.    1.18905 (5) obj. -0.421828 iterations 2
Cbc0038I Pass  31: suminf.    1.54067 (5) obj. -0.421828 iterations 10
Cbc0038I Pass  32: suminf.    1.77816 (12) obj. -1.11336 iterations 34
Cbc0038I Pass  33: suminf.    1.63080 (12) obj. -0.421828 iterations 7
Cbc0038I Rounding solution of 2.80023 is better than previous of 4.07026

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 73 rows 81 columns, reduced to 43 rows 53 columns
Cbc0038I Mini branch and bound improved solution from 2.80023 to -0.903745 (0.07 seconds)
Cbc0038I Round again with cutoff of -8.89303
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass  34: suminf.    2.27596 (25) obj. -28.9496 iterations 0
Cbc0038I Pass  35: suminf.    1.21820 (14) obj. -8.89303 iterations 14
Cbc0038I Pass  36: suminf.    1.03108 (14) obj. -9.64151 iterations 2
Cbc0038I Pass  37: suminf.    1.66104 (9) obj. -8.89303 iterations 20
Cbc0038I Pass  38: suminf.    1.55217 (9) obj. -8.89303 iterations 5
Cbc0038I Pass  39: suminf.    1.33316 (6) obj. -8.89303 iterations 11
Cbc0038I Pass  40: suminf.    1.24263 (5) obj. -8.89303 iterations 2
Cbc0038I Pass  41: suminf.    1.22422 (6) obj. -8.89303 iterations 7
Cbc0038I Pass  42: suminf.    1.10972 (5) obj. -8.89303 iterations 6
Cbc0038I Pass  43: suminf.    1.35093 (6) obj. -8.89303 iterations 7
Cbc0038I Pass  44: suminf.    2.11888 (12) obj. -8.89303 iterations 26
Cbc0038I Pass  45: suminf.    1.99899 (9) obj. -8.89303 iterations 13
Cbc0038I Pass  46: suminf.    1.38454 (6) obj. -8.89303 iterations 8
Cbc0038I Pass  47: suminf.    1.20410 (6) obj. -8.89303 iterations 2
Cbc0038I Pass  48: suminf.    0.98797 (5) obj. -8.9345 iterations 5
Cbc0038I Pass  49: suminf.    1.00179 (5) obj. -8.89303 iterations 6
Cbc0038I Pass  50: suminf.    2.40187 (14) obj. -8.89303 iterations 23
Cbc0038I Pass  51: suminf.    1.74417 (9) obj. -8.89303 iterations 9
Cbc0038I Pass  52: suminf.    1.62751 (7) obj. -8.89303 iterations 12
Cbc0038I Pass  53: suminf.    1.62751 (7) obj. -8.89303 iterations 0
Cbc0038I Pass  54: suminf.    1.22434 (5) obj. -8.89303 iterations 16
Cbc0038I Pass  55: suminf.    1.19964 (5) obj. -8.89303 iterations 4
Cbc0038I Pass  56: suminf.    1.49829 (6) obj. -8.89303 iterations 15
Cbc0038I Pass  57: suminf.    1.16596 (7) obj. -8.89303 iterations 1
Cbc0038I Pass  58: suminf.    1.15205 (6) obj. -8.89303 iterations 21
Cbc0038I Pass  59: suminf.    0.92781 (8) obj. -8.89303 iterations 6
Cbc0038I Pass  60: suminf.    2.34646 (8) obj. -8.89303 iterations 12
Cbc0038I Pass  61: suminf.    1.48672 (7) obj. -8.89303 iterations 11
Cbc0038I Pass  62: suminf.    1.15205 (6) obj. -8.89303 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -0.903745 - took 0.06 seconds
Cbc0012I Integer solution of -0.903745 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 73 rows 81 columns, reduced to 26 rows 31 columns
Cbc0031I 43 added rows had average density of 34.348837
Cbc0013I At root node, 43 cuts changed objective from -40.849751 to -13.708111 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15316 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1584 row cuts average 79.2 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 70 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 913 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 314 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 49 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.762 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.903745 best solution, best possible -13.708111 (2.51 seconds)
Cbc0004I Integer solution of -1.06954 found after 5400 iterations and 1 nodes (2.52 seconds)
Cbc0012I Integer solution of -1.757695 found by rounding after 7225 iterations and 40 nodes (3.14 seconds)
Cbc0004I Integer solution of -2.305885 found after 7235 iterations and 42 nodes (3.15 seconds)
Cbc0010I After 62 nodes, 1 on tree, -2.305885 best solution, best possible -9.9387222 (3.30 seconds)
Cbc0001I Search completed - best objective -2.305884999999996, took 8474 iterations and 76 nodes (3.43 seconds)
Cbc0032I Strong branching done 998 times (17871 iterations), fathomed 5 nodes and fixed 11 variables
Cbc0035I Maximum depth 20, 74 variables fixed on reduced cost
Total time (CPU seconds):       2.68   (Wallclock seconds):       3.44

