Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 0 - average 0, 20 fixed columns
Coin0506I Presolve 0 (-38) rows, 0 (-22) columns and 0 (-112) elements
Clp0000I Optimal - objective value 7678.5559
Clp0000I Optimal - objective value 7678.5559
Coin0511I After Postsolve, objective 7678.5559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 7678.5559
Clp0000I Optimal - objective value 7678.5559
Clp0000I Optimal - objective value 7678.5559
Coin0511I After Postsolve, objective 7678.5559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7678.55592 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.0609756
Cbc0038I Pass   1: suminf.    0.06098 (1) obj. -7678.56 iterations 0
Cbc0038I Solution found of -3742.27
Cbc0038I Relaxing continuous gives -3784.94
Cbc0038I Rounding solution of -3955.17 is better than previous of -3784.94

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -4327.5
Cbc0038I Pass   2: suminf.    0.06098 (1) obj. -7678.56 iterations 0
Cbc0038I Pass   3: suminf.    0.12943 (1) obj. -4327.5 iterations 2
Cbc0038I Pass   4: suminf.    0.12183 (1) obj. -4327.5 iterations 7
Cbc0038I Pass   5: suminf.    0.12183 (1) obj. -4327.5 iterations 3
Cbc0038I Pass   6: suminf.    0.13415 (1) obj. -7446.37 iterations 1
Cbc0038I Pass   7: suminf.    0.20976 (1) obj. -7123.91 iterations 3
Cbc0038I Pass   8: suminf.    0.12314 (1) obj. -4327.5 iterations 1
Cbc0038I Pass   9: suminf.    0.20976 (1) obj. -7123.91 iterations 1
Cbc0038I Pass  10: suminf.    0.26463 (1) obj. -6909.21 iterations 3
Cbc0038I Pass  11: suminf.    0.26463 (1) obj. -6909.21 iterations 1
Cbc0038I Pass  12: suminf.    0.11948 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  13: suminf.    0.11082 (1) obj. -4327.5 iterations 3
Cbc0038I Pass  14: suminf.    0.42439 (1) obj. -5641.95 iterations 1
Cbc0038I Pass  15: suminf.    0.11082 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  16: suminf.    0.09099 (1) obj. -4327.5 iterations 9
Cbc0038I Pass  17: suminf.    0.09099 (1) obj. -4327.5 iterations 3
Cbc0038I Pass  18: suminf.    0.23049 (1) obj. -4912.25 iterations 1
Cbc0038I Pass  19: suminf.    0.09332 (1) obj. -4327.5 iterations 3
Cbc0038I Pass  20: suminf.    0.23927 (1) obj. -4939.29 iterations 1
Cbc0038I Pass  21: suminf.    0.09332 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  22: suminf.    0.09764 (1) obj. -4327.5 iterations 2
Cbc0038I Pass  23: suminf.    0.09764 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  24: suminf.    0.25976 (1) obj. -5007.08 iterations 1
Cbc0038I Pass  25: suminf.    0.57106 (3) obj. -4327.5 iterations 3
Cbc0038I Pass  26: suminf.    0.07818 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  27: suminf.    0.19659 (1) obj. -4823.84 iterations 1
Cbc0038I Pass  28: suminf.    0.08589 (1) obj. -4327.5 iterations 8
Cbc0038I Pass  29: suminf.    0.08589 (1) obj. -4327.5 iterations 2
Cbc0038I Pass  30: suminf.    0.30854 (1) obj. -5260.8 iterations 1
Cbc0038I Pass  31: suminf.    0.11717 (1) obj. -4327.5 iterations 6
Cbc0038I Rounding solution of -4127.42 is better than previous of -3955.17

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -4127.42 to -4153.38 (0.01 seconds)
Cbc0038I Round again with cutoff of -4997.71
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.06098 (1) obj. -7678.56 iterations 0
Cbc0038I Pass  32: suminf.    0.28931 (1) obj. -4997.71 iterations 2
Cbc0038I Pass  33: suminf.    0.27308 (1) obj. -4997.71 iterations 11
Cbc0038I Pass  34: suminf.    0.27308 (1) obj. -4997.71 iterations 3
Cbc0038I Pass  35: suminf.    0.31707 (1) obj. -6715.74 iterations 1
Cbc0038I Pass  36: suminf.    0.27293 (1) obj. -6955.89 iterations 10
Cbc0038I Pass  37: suminf.    0.27293 (1) obj. -6955.89 iterations 0
Cbc0038I Pass  38: suminf.    0.25994 (1) obj. -4997.71 iterations 1
Cbc0038I Pass  39: suminf.    0.56238 (4) obj. -4997.71 iterations 7
Cbc0038I Pass  40: suminf.    0.52660 (2) obj. -4997.71 iterations 3
Cbc0038I Pass  41: suminf.    0.34415 (1) obj. -5412.67 iterations 2
Cbc0038I Pass  42: suminf.    0.24516 (1) obj. -4997.71 iterations 1
Cbc0038I Pass  43: suminf.    0.37844 (5) obj. -4997.71 iterations 8
Cbc0038I Pass  44: suminf.    0.23459 (1) obj. -4997.71 iterations 6
Cbc0038I Pass  45: suminf.    0.23927 (1) obj. -5017.34 iterations 1
Cbc0038I Pass  46: suminf.    0.23927 (1) obj. -5017.34 iterations 0
Cbc0038I Pass  47: suminf.    1.13143 (3) obj. -4997.71 iterations 5
Cbc0038I Pass  48: suminf.    0.26304 (1) obj. -4997.71 iterations 3
Cbc0038I Pass  49: suminf.    0.30244 (1) obj. -5162.89 iterations 1
Cbc0038I Pass  50: suminf.    0.26304 (1) obj. -4997.71 iterations 2
Cbc0038I Pass  51: suminf.    1.09905 (4) obj. -4997.71 iterations 5
Cbc0038I Pass  52: suminf.    0.61087 (2) obj. -4997.71 iterations 3
Cbc0038I Pass  53: suminf.    0.41829 (1) obj. -5691.41 iterations 2
Cbc0038I Pass  54: suminf.    0.25281 (1) obj. -4997.71 iterations 1
Cbc0038I Pass  55: suminf.    0.22223 (1) obj. -4997.71 iterations 6
Cbc0038I Pass  56: suminf.    0.22223 (1) obj. -4997.71 iterations 2
Cbc0038I Pass  57: suminf.    0.32463 (1) obj. -5426.97 iterations 1
Cbc0038I Pass  58: suminf.    0.62338 (2) obj. -5414.09 iterations 1
Cbc0038I Pass  59: suminf.    0.50092 (2) obj. -4997.71 iterations 1
Cbc0038I Pass  60: suminf.    0.64360 (2) obj. -4997.71 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -4153.38 - took 0.04 seconds
Cbc0012I Integer solution of -4153.3761 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 5 rows 5 columns
Cbc0012I Integer solution of -4191.443 found by DiveCoefficient after 1125 iterations and 0 nodes (0.11 seconds)
Cbc0031I 14 added rows had average density of 11
Cbc0013I At root node, 14 cuts changed objective from -7678.5559 to -4209.6793 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1150 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 357 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0012I Integer solution of -4191.9929 found by rounding after 1244 iterations and 3 nodes (0.12 seconds)
Cbc0001I Search completed - best objective -4191.99286411, took 1315 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 40 times (305 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.13

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-12) rows, 40 (-6) columns and 321 (-67) elements
Clp1000I sum of infeasibilities 0 - average 0, 39 fixed columns
Coin0506I Presolve 0 (-36) rows, 0 (-40) columns and 0 (-321) elements
Clp0000I Optimal - objective value 7618.2267
Clp0000I Optimal - objective value 7618.2267
Coin0511I After Postsolve, objective 7618.2267, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2527948 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 7807.9418
Clp0000I Optimal - objective value 7807.9418
Clp0000I Optimal - objective value 7807.9418
Coin0511I After Postsolve, objective 7807.9418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7807.941794 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 309 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.642%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 5.42755
Cbc0038I Pass   1: suminf.    0.53049 (2) obj. -7669.76 iterations 11
Cbc0038I Solution found of -3732.94
Cbc0038I Rounding solution of -3814.76 is better than previous of -3732.94

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4204.95
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.53049 (2) obj. -7669.76 iterations 0
Cbc0038I Pass   3: suminf.    0.11260 (1) obj. -4204.95 iterations 2
Cbc0038I Pass   4: suminf.    0.06098 (1) obj. -7669.23 iterations 1
Cbc0038I Pass   5: suminf.    0.27108 (3) obj. -4204.95 iterations 12
Cbc0038I Pass   6: suminf.    0.27108 (3) obj. -4204.95 iterations 4
Cbc0038I Pass   7: suminf.    0.47927 (1) obj. -5818.41 iterations 3
Cbc0038I Pass   8: suminf.    0.09437 (1) obj. -4204.95 iterations 1
Cbc0038I Pass   9: suminf.    0.78081 (4) obj. -4204.95 iterations 7
Cbc0038I Pass  10: suminf.    0.46098 (1) obj. -5757.45 iterations 4
Cbc0038I Pass  11: suminf.    0.09062 (1) obj. -4204.95 iterations 1
Cbc0038I Pass  12: suminf.    1.47762 (5) obj. -4204.95 iterations 9
Cbc0038I Pass  13: suminf.    1.04439 (4) obj. -4204.95 iterations 2
Cbc0038I Pass  14: suminf.    0.27585 (1) obj. -5051.34 iterations 4
Cbc0038I Pass  15: suminf.    0.07394 (1) obj. -4204.95 iterations 1
Cbc0038I Pass  16: suminf.    0.90410 (3) obj. -4204.95 iterations 5
Cbc0038I Pass  17: suminf.    0.36732 (1) obj. -5335.57 iterations 3
Cbc0038I Pass  18: suminf.    0.09760 (1) obj. -4204.95 iterations 1
Cbc0038I Pass  19: suminf.    0.08524 (1) obj. -4204.95 iterations 10
Cbc0038I Pass  20: suminf.    0.08524 (1) obj. -4204.95 iterations 4
Cbc0038I Pass  21: suminf.    0.24244 (1) obj. -7023.25 iterations 1
Cbc0038I Pass  22: suminf.    2.42413 (7) obj. -4204.95 iterations 13
Cbc0038I Pass  23: suminf.    0.37643 (2) obj. -4204.95 iterations 7
Cbc0038I Pass  24: suminf.    0.31244 (1) obj. -5309.34 iterations 2
Cbc0038I Pass  25: suminf.    0.04898 (1) obj. -4204.95 iterations 1
Cbc0038I Pass  26: suminf.    1.37408 (5) obj. -4204.95 iterations 12
Cbc0038I Pass  27: suminf.    0.61015 (3) obj. -4204.95 iterations 5
Cbc0038I Pass  28: suminf.    0.11122 (1) obj. -4526.59 iterations 3
Cbc0038I Pass  29: suminf.    0.03449 (1) obj. -4204.95 iterations 1
Cbc0038I Pass  30: suminf.    0.36891 (2) obj. -4204.95 iterations 8
Cbc0038I Pass  31: suminf.    0.36891 (2) obj. -4204.95 iterations 3
Cbc0038I Rounding solution of -4068.8 is better than previous of -3814.76

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4907.28
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.53049 (2) obj. -7669.76 iterations 0
Cbc0038I Pass  32: suminf.    0.28014 (1) obj. -4907.28 iterations 2
Cbc0038I Pass  33: suminf.    0.06098 (1) obj. -7669.23 iterations 1
Cbc0038I Pass  34: suminf.    1.20832 (5) obj. -4907.28 iterations 8
Cbc0038I Pass  35: suminf.    1.20832 (5) obj. -4907.28 iterations 0
Cbc0038I Pass  36: suminf.    0.16098 (1) obj. -7275.2 iterations 5
Cbc0038I Pass  37: suminf.    0.27414 (1) obj. -4907.28 iterations 1
Cbc0038I Pass  38: suminf.    1.78969 (5) obj. -4907.28 iterations 7
Cbc0038I Pass  39: suminf.    1.78969 (5) obj. -4907.28 iterations 1
Cbc0038I Pass  40: suminf.    0.39268 (1) obj. -6400.3 iterations 5
Cbc0038I Pass  41: suminf.    0.25115 (1) obj. -4907.28 iterations 1
Cbc0038I Pass  42: suminf.    0.80429 (3) obj. -4907.28 iterations 6
Cbc0038I Pass  43: suminf.    0.80429 (3) obj. -4907.28 iterations 0
Cbc0038I Pass  44: suminf.    0.18537 (1) obj. -7300.43 iterations 3
Cbc0038I Pass  45: suminf.    0.24373 (1) obj. -4907.28 iterations 1
Cbc0038I Pass  46: suminf.    1.18410 (4) obj. -4907.28 iterations 8
Cbc0038I Pass  47: suminf.    0.18537 (1) obj. -7217.39 iterations 4
Cbc0038I Pass  48: suminf.    0.26354 (1) obj. -4907.28 iterations 1
Cbc0038I Pass  49: suminf.    0.49120 (2) obj. -4907.28 iterations 6
Cbc0038I Pass  50: suminf.    0.49120 (2) obj. -4907.28 iterations 1
Cbc0038I Pass  51: suminf.    0.29512 (1) obj. -6826.58 iterations 2
Cbc0038I Pass  52: suminf.    0.24702 (1) obj. -4907.28 iterations 1
Cbc0038I Pass  53: suminf.    1.14070 (3) obj. -4907.28 iterations 6
Cbc0038I Pass  54: suminf.    0.66973 (2) obj. -4907.28 iterations 1
Cbc0038I Pass  55: suminf.    0.33683 (1) obj. -5358.61 iterations 2
Cbc0038I Pass  56: suminf.    0.22916 (1) obj. -4907.28 iterations 1
Cbc0038I Pass  57: suminf.    1.82249 (5) obj. -4907.28 iterations 4
Cbc0038I Pass  58: suminf.    0.59420 (2) obj. -4907.28 iterations 3
Cbc0038I Pass  59: suminf.    0.26366 (1) obj. -5139.91 iterations 2
Cbc0038I Pass  60: suminf.    0.20816 (1) obj. -4907.28 iterations 1
Cbc0038I Rounding solution of -4094.05 is better than previous of -4068.8

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 23 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -4094.05 to -4133.08 (0.04 seconds)
Cbc0038I Round again with cutoff of -5750.07
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.53049 (2) obj. -7669.76 iterations 0
Cbc0038I Pass  61: suminf.    0.48120 (1) obj. -5750.07 iterations 2
Cbc0038I Pass  62: suminf.    0.06098 (1) obj. -7669.23 iterations 1
Cbc0038I Pass  63: suminf.    1.48866 (4) obj. -5750.07 iterations 6
Cbc0038I Pass  64: suminf.    1.48866 (4) obj. -5750.07 iterations 0
Cbc0038I Pass  65: suminf.    0.14634 (1) obj. -7374.16 iterations 4
Cbc0038I Pass  66: suminf.    0.46622 (1) obj. -5750.07 iterations 1
Cbc0038I Pass  67: suminf.    2.62716 (6) obj. -5750.07 iterations 12
Cbc0038I Pass  68: suminf.    2.62716 (6) obj. -5750.07 iterations 2
Cbc0038I Pass  69: suminf.    0.46805 (1) obj. -6062.85 iterations 6
Cbc0038I Pass  70: suminf.    0.45734 (1) obj. -5750.07 iterations 1
Cbc0038I Pass  71: suminf.    0.90460 (3) obj. -5750.07 iterations 7
Cbc0038I Pass  72: suminf.    0.57864 (2) obj. -5750.07 iterations 3
Cbc0038I Pass  73: suminf.    0.44659 (1) obj. -5794.51 iterations 2
Cbc0038I Pass  74: suminf.    0.43598 (1) obj. -5750.07 iterations 1
Cbc0038I Pass  75: suminf.    1.37410 (3) obj. -5750.07 iterations 9
Cbc0038I Pass  76: suminf.    1.37410 (3) obj. -5750.07 iterations 1
Cbc0038I Pass  77: suminf.    0.44659 (1) obj. -5783.47 iterations 3
Cbc0038I Pass  78: suminf.    0.43862 (1) obj. -5750.07 iterations 1
Cbc0038I Pass  79: suminf.    2.25876 (8) obj. -5750.07 iterations 8
Cbc0038I Pass  80: suminf.    0.88306 (4) obj. -5750.07 iterations 5
Cbc0038I Pass  81: suminf.    0.26073 (1) obj. -6971.33 iterations 5
Cbc0038I Pass  82: suminf.    0.44793 (1) obj. -5750.07 iterations 1
Cbc0038I Pass  83: suminf.    2.25157 (5) obj. -5750.07 iterations 4
Cbc0038I Pass  84: suminf.    0.91881 (2) obj. -5750.07 iterations 3
Cbc0038I Pass  85: suminf.    1.25243 (4) obj. -5750.07 iterations 8
Cbc0038I Pass  86: suminf.    0.38809 (1) obj. -5750.07 iterations 5
Cbc0038I Pass  87: suminf.    0.42220 (1) obj. -5893.02 iterations 1
Cbc0038I Pass  88: suminf.    1.27602 (3) obj. -5978.14 iterations 3
Cbc0038I Pass  89: suminf.    0.89122 (2) obj. -5750.07 iterations 2
Cbc0038I Rounding solution of -4171.74 is better than previous of -4133.08

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -4171.74 to -4177.1 (0.04 seconds)
Cbc0038I Round again with cutoff of -6340.03
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 5
Cbc0038I Pass  89: suminf.    0.53049 (2) obj. -7669.76 iterations 0
Cbc0038I Pass  90: suminf.    0.37806 (1) obj. -6340.03 iterations 2
Cbc0038I Pass  91: suminf.    0.06098 (1) obj. -7669.23 iterations 1
Cbc0038I Pass  92: suminf.    0.53415 (2) obj. -7370.59 iterations 7
Cbc0038I Pass  93: suminf.    0.14634 (1) obj. -7365.16 iterations 4
Cbc0038I Pass  94: suminf.    0.39089 (1) obj. -6340.03 iterations 1
Cbc0038I Pass  95: suminf.    0.55535 (2) obj. -7659.22 iterations 5
Cbc0038I Pass  96: suminf.    0.06098 (1) obj. -7658.23 iterations 3
Cbc0038I Pass  97: suminf.    0.37544 (1) obj. -6340.03 iterations 1
Cbc0038I Pass  98: suminf.    1.80536 (5) obj. -6340.03 iterations 13
Cbc0038I Pass  99: suminf.    0.86758 (3) obj. -7064.5 iterations 6
Cbc0038I Pass 100: suminf.    0.41531 (1) obj. -6340.03 iterations 3
Cbc0038I Pass 101: suminf.    0.24854 (1) obj. -7039.12 iterations 1
Cbc0038I Pass 102: suminf.    1.31639 (3) obj. -6340.03 iterations 6
Cbc0038I Pass 103: suminf.    0.42170 (1) obj. -6340.03 iterations 3
Cbc0038I Pass 104: suminf.    0.35220 (1) obj. -6631.36 iterations 1
Cbc0038I Pass 105: suminf.    1.87042 (5) obj. -6340.03 iterations 10
Cbc0038I Pass 106: suminf.    0.37049 (1) obj. -6522.9 iterations 5
Cbc0038I Pass 107: suminf.    0.41411 (1) obj. -6340.03 iterations 1
Cbc0038I Pass 108: suminf.    1.93940 (7) obj. -6340.03 iterations 14
Cbc0038I Pass 109: suminf.    0.26829 (1) obj. -6848.1 iterations 6
Cbc0038I Pass 110: suminf.    0.38950 (1) obj. -6340.03 iterations 1
Cbc0038I Pass 111: suminf.    1.46079 (4) obj. -6340.03 iterations 6
Cbc0038I Pass 112: suminf.    0.48984 (2) obj. -6644.62 iterations 3
Cbc0038I Pass 113: suminf.    0.39563 (1) obj. -6340.03 iterations 2
Cbc0038I Pass 114: suminf.    0.32317 (1) obj. -6643.78 iterations 1
Cbc0038I Pass 115: suminf.    0.98589 (3) obj. -6340.03 iterations 7
Cbc0038I Pass 116: suminf.    0.29732 (1) obj. -6749.6 iterations 4
Cbc0038I Pass 117: suminf.    0.39502 (1) obj. -6340.03 iterations 1
Cbc0038I Pass 118: suminf.    1.66367 (5) obj. -6340.03 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -4177.1 - took 0.03 seconds
Cbc0012I Integer solution of -4177.1031 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 11 rows 12 columns
Cbc0031I 13 added rows had average density of 14.846154
Cbc0013I At root node, 13 cuts changed objective from -7716.5922 to -4204.8586 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1269 row cuts average 4.0 elements, 13 column cuts (13 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 480 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 94 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 33 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 118 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -4187.9616 found by DiveCoefficient after 1371 iterations and 2 nodes (0.20 seconds)
Cbc0012I Integer solution of -4188.2458 found by rounding after 1405 iterations and 3 nodes (0.21 seconds)
Cbc0016I Integer solution of -4191.9929 found by strong branching after 1414 iterations and 3 nodes (0.21 seconds)
Cbc0001I Search completed - best objective -4191.99286411, took 1448 iterations and 6 nodes (0.21 seconds)
Cbc0032I Strong branching done 68 times (427 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 22 (-3) columns and 112 (-23) elements
Clp1000I sum of infeasibilities 0 - average 0, 20 fixed columns
Coin0506I Presolve 0 (-38) rows, 0 (-22) columns and 0 (-112) elements
Clp0000I Optimal - objective value 7678.5559
Clp0000I Optimal - objective value 7678.5559
Coin0511I After Postsolve, objective 7678.5559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 7678.5559
Clp0000I Optimal - objective value 7678.5559
Clp0000I Optimal - objective value 7678.5559
Coin0511I After Postsolve, objective 7678.5559, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7678.55592 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 112 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.343%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1 integers unsatisfied sum - 0.0609756
Cbc0038I Pass   1: suminf.    0.06098 (1) obj. -7678.56 iterations 0
Cbc0038I Solution found of -3742.27
Cbc0038I Relaxing continuous gives -3784.94
Cbc0038I Rounding solution of -3955.17 is better than previous of -3784.94

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -4327.5
Cbc0038I Pass   2: suminf.    0.06098 (1) obj. -7678.56 iterations 0
Cbc0038I Pass   3: suminf.    0.12943 (1) obj. -4327.5 iterations 2
Cbc0038I Pass   4: suminf.    0.12183 (1) obj. -4327.5 iterations 7
Cbc0038I Pass   5: suminf.    0.12183 (1) obj. -4327.5 iterations 3
Cbc0038I Pass   6: suminf.    0.13415 (1) obj. -7446.37 iterations 1
Cbc0038I Pass   7: suminf.    0.20976 (1) obj. -7123.91 iterations 3
Cbc0038I Pass   8: suminf.    0.12314 (1) obj. -4327.5 iterations 1
Cbc0038I Pass   9: suminf.    0.20976 (1) obj. -7123.91 iterations 1
Cbc0038I Pass  10: suminf.    0.26463 (1) obj. -6909.21 iterations 3
Cbc0038I Pass  11: suminf.    0.26463 (1) obj. -6909.21 iterations 1
Cbc0038I Pass  12: suminf.    0.11948 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  13: suminf.    0.11082 (1) obj. -4327.5 iterations 3
Cbc0038I Pass  14: suminf.    0.42439 (1) obj. -5641.95 iterations 1
Cbc0038I Pass  15: suminf.    0.11082 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  16: suminf.    0.09099 (1) obj. -4327.5 iterations 9
Cbc0038I Pass  17: suminf.    0.09099 (1) obj. -4327.5 iterations 3
Cbc0038I Pass  18: suminf.    0.23049 (1) obj. -4912.25 iterations 1
Cbc0038I Pass  19: suminf.    0.09332 (1) obj. -4327.5 iterations 3
Cbc0038I Pass  20: suminf.    0.23927 (1) obj. -4939.29 iterations 1
Cbc0038I Pass  21: suminf.    0.09332 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  22: suminf.    0.09764 (1) obj. -4327.5 iterations 2
Cbc0038I Pass  23: suminf.    0.09764 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  24: suminf.    0.25976 (1) obj. -5007.08 iterations 1
Cbc0038I Pass  25: suminf.    0.57106 (3) obj. -4327.5 iterations 3
Cbc0038I Pass  26: suminf.    0.07818 (1) obj. -4327.5 iterations 1
Cbc0038I Pass  27: suminf.    0.19659 (1) obj. -4823.84 iterations 1
Cbc0038I Pass  28: suminf.    0.08589 (1) obj. -4327.5 iterations 8
Cbc0038I Pass  29: suminf.    0.08589 (1) obj. -4327.5 iterations 2
Cbc0038I Pass  30: suminf.    0.30854 (1) obj. -5260.8 iterations 1
Cbc0038I Pass  31: suminf.    0.11717 (1) obj. -4327.5 iterations 6
Cbc0038I Rounding solution of -4127.42 is better than previous of -3955.17

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 24 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -4127.42 to -4153.38 (0.01 seconds)
Cbc0038I Round again with cutoff of -4997.71
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.06098 (1) obj. -7678.56 iterations 0
Cbc0038I Pass  32: suminf.    0.28931 (1) obj. -4997.71 iterations 2
Cbc0038I Pass  33: suminf.    0.27308 (1) obj. -4997.71 iterations 11
Cbc0038I Pass  34: suminf.    0.27308 (1) obj. -4997.71 iterations 3
Cbc0038I Pass  35: suminf.    0.31707 (1) obj. -6715.74 iterations 1
Cbc0038I Pass  36: suminf.    0.27293 (1) obj. -6955.89 iterations 10
Cbc0038I Pass  37: suminf.    0.27293 (1) obj. -6955.89 iterations 0
Cbc0038I Pass  38: suminf.    0.25994 (1) obj. -4997.71 iterations 1
Cbc0038I Pass  39: suminf.    0.56238 (4) obj. -4997.71 iterations 7
Cbc0038I Pass  40: suminf.    0.52660 (2) obj. -4997.71 iterations 3
Cbc0038I Pass  41: suminf.    0.34415 (1) obj. -5412.67 iterations 2
Cbc0038I Pass  42: suminf.    0.24516 (1) obj. -4997.71 iterations 1
Cbc0038I Pass  43: suminf.    0.37844 (5) obj. -4997.71 iterations 8
Cbc0038I Pass  44: suminf.    0.23459 (1) obj. -4997.71 iterations 6
Cbc0038I Pass  45: suminf.    0.23927 (1) obj. -5017.34 iterations 1
Cbc0038I Pass  46: suminf.    0.23927 (1) obj. -5017.34 iterations 0
Cbc0038I Pass  47: suminf.    1.13143 (3) obj. -4997.71 iterations 5
Cbc0038I Pass  48: suminf.    0.26304 (1) obj. -4997.71 iterations 3
Cbc0038I Pass  49: suminf.    0.30244 (1) obj. -5162.89 iterations 1
Cbc0038I Pass  50: suminf.    0.26304 (1) obj. -4997.71 iterations 2
Cbc0038I Pass  51: suminf.    1.09905 (4) obj. -4997.71 iterations 5
Cbc0038I Pass  52: suminf.    0.61087 (2) obj. -4997.71 iterations 3
Cbc0038I Pass  53: suminf.    0.41829 (1) obj. -5691.41 iterations 2
Cbc0038I Pass  54: suminf.    0.25281 (1) obj. -4997.71 iterations 1
Cbc0038I Pass  55: suminf.    0.22223 (1) obj. -4997.71 iterations 6
Cbc0038I Pass  56: suminf.    0.22223 (1) obj. -4997.71 iterations 2
Cbc0038I Pass  57: suminf.    0.32463 (1) obj. -5426.97 iterations 1
Cbc0038I Pass  58: suminf.    0.62338 (2) obj. -5414.09 iterations 1
Cbc0038I Pass  59: suminf.    0.50092 (2) obj. -4997.71 iterations 1
Cbc0038I Pass  60: suminf.    0.64360 (2) obj. -4997.71 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -4153.38 - took 0.03 seconds
Cbc0012I Integer solution of -4153.3761 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 5 rows 5 columns
Cbc0012I Integer solution of -4191.443 found by DiveCoefficient after 1125 iterations and 0 nodes (0.14 seconds)
Cbc0031I 14 added rows had average density of 11
Cbc0013I At root node, 14 cuts changed objective from -7678.5559 to -4209.6793 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1150 row cuts average 3.3 elements, 3 column cuts (3 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 357 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 83 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -4191.9929 found by rounding after 1244 iterations and 3 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -4191.99286411, took 1315 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 40 times (305 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 11 variables fixed on reduced cost
Total time (CPU seconds):       0.15   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 39 (-8) columns and 304 (-85) elements
Clp1000I sum of infeasibilities 0 - average 0, 25 fixed columns
Coin0506I Presolve 0 (-35) rows, 0 (-39) columns and 0 (-304) elements
Clp0000I Optimal - objective value 7807.9418
Clp0000I Optimal - objective value 7807.9418
Coin0511I After Postsolve, objective 7807.9418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 7807.9418
Clp0000I Optimal - objective value 7807.9418
Clp0000I Optimal - objective value 7807.9418
Coin0511I After Postsolve, objective 7807.9418, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 7807.941794 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 309 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.642%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 5.52255
Cbc0038I Pass   1: suminf.    0.53049 (2) obj. -7669.76 iterations 11
Cbc0038I Solution found of -3732.94
Cbc0038I Rounding solution of -3814.76 is better than previous of -3732.94

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -4205.02
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.53049 (2) obj. -7669.76 iterations 0
Cbc0038I Pass   3: suminf.    0.11262 (1) obj. -4205.02 iterations 2
Cbc0038I Pass   4: suminf.    0.06098 (1) obj. -7669.23 iterations 1
Cbc0038I Pass   5: suminf.    0.27111 (3) obj. -4205.02 iterations 12
Cbc0038I Pass   6: suminf.    0.27111 (3) obj. -4205.02 iterations 3
Cbc0038I Pass   7: suminf.    0.47927 (1) obj. -5818.41 iterations 3
Cbc0038I Pass   8: suminf.    0.09438 (1) obj. -4205.02 iterations 1
Cbc0038I Pass   9: suminf.    0.79071 (4) obj. -4205.02 iterations 7
Cbc0038I Pass  10: suminf.    0.46098 (1) obj. -5757.45 iterations 4
Cbc0038I Pass  11: suminf.    0.09063 (1) obj. -4205.02 iterations 1
Cbc0038I Pass  12: suminf.    1.47763 (5) obj. -4205.02 iterations 9
Cbc0038I Pass  13: suminf.    1.04441 (4) obj. -4205.02 iterations 2
Cbc0038I Pass  14: suminf.    0.27585 (1) obj. -5051.34 iterations 4
Cbc0038I Pass  15: suminf.    0.07396 (1) obj. -4205.02 iterations 1
Cbc0038I Pass  16: suminf.    0.90412 (3) obj. -4205.02 iterations 5
Cbc0038I Pass  17: suminf.    0.36732 (1) obj. -5335.57 iterations 3
Cbc0038I Pass  18: suminf.    0.09762 (1) obj. -4205.02 iterations 1
Cbc0038I Pass  19: suminf.    0.08526 (1) obj. -4205.02 iterations 10
Cbc0038I Pass  20: suminf.    0.08526 (1) obj. -4205.02 iterations 4
Cbc0038I Pass  21: suminf.    0.24244 (1) obj. -7023.25 iterations 1
Cbc0038I Pass  22: suminf.    2.42409 (7) obj. -4205.02 iterations 17
Cbc0038I Pass  23: suminf.    0.37645 (2) obj. -4205.02 iterations 6
Cbc0038I Pass  24: suminf.    0.31244 (1) obj. -5309.34 iterations 2
Cbc0038I Pass  25: suminf.    0.04900 (1) obj. -4205.02 iterations 1
Cbc0038I Pass  26: suminf.    1.34192 (5) obj. -4205.02 iterations 12
Cbc0038I Pass  27: suminf.    0.61017 (3) obj. -4205.02 iterations 5
Cbc0038I Pass  28: suminf.    0.11122 (1) obj. -4526.59 iterations 3
Cbc0038I Pass  29: suminf.    0.03451 (1) obj. -4205.02 iterations 1
Cbc0038I Pass  30: suminf.    0.36893 (2) obj. -4205.02 iterations 7
Cbc0038I Pass  31: suminf.    0.36893 (2) obj. -4205.02 iterations 2
Cbc0038I Rounding solution of -4068.8 is better than previous of -3814.76

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 17 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4907.49
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.53049 (2) obj. -7669.76 iterations 0
Cbc0038I Pass  32: suminf.    0.28019 (1) obj. -4907.49 iterations 2
Cbc0038I Pass  33: suminf.    0.06098 (1) obj. -7669.23 iterations 1
Cbc0038I Pass  34: suminf.    1.20842 (5) obj. -4907.49 iterations 8
Cbc0038I Pass  35: suminf.    1.20842 (5) obj. -4907.49 iterations 0
Cbc0038I Pass  36: suminf.    0.16098 (1) obj. -7275.2 iterations 5
Cbc0038I Pass  37: suminf.    0.27419 (1) obj. -4907.49 iterations 1
Cbc0038I Pass  38: suminf.    1.78986 (5) obj. -4907.49 iterations 6
Cbc0038I Pass  39: suminf.    1.78986 (5) obj. -4907.49 iterations 0
Cbc0038I Pass  40: suminf.    0.39268 (1) obj. -6400.3 iterations 5
Cbc0038I Pass  41: suminf.    0.25120 (1) obj. -4907.49 iterations 1
Cbc0038I Pass  42: suminf.    0.80440 (3) obj. -4907.49 iterations 6
Cbc0038I Pass  43: suminf.    0.80440 (3) obj. -4907.49 iterations 0
Cbc0038I Pass  44: suminf.    0.18537 (1) obj. -7300.43 iterations 3
Cbc0038I Pass  45: suminf.    0.24378 (1) obj. -4907.49 iterations 1
Cbc0038I Pass  46: suminf.    1.18481 (4) obj. -4907.49 iterations 8
Cbc0038I Pass  47: suminf.    0.18537 (1) obj. -7217.39 iterations 4
Cbc0038I Pass  48: suminf.    0.26359 (1) obj. -4907.49 iterations 1
Cbc0038I Pass  49: suminf.    0.49128 (2) obj. -4907.49 iterations 6
Cbc0038I Pass  50: suminf.    0.49128 (2) obj. -4907.49 iterations 1
Cbc0038I Pass  51: suminf.    0.29512 (1) obj. -6826.58 iterations 2
Cbc0038I Pass  52: suminf.    0.24707 (1) obj. -4907.49 iterations 1
Cbc0038I Pass  53: suminf.    1.13729 (3) obj. -4907.49 iterations 6
Cbc0038I Pass  54: suminf.    0.68399 (2) obj. -4907.49 iterations 1
Cbc0038I Pass  55: suminf.    0.33683 (1) obj. -5358.61 iterations 2
Cbc0038I Pass  56: suminf.    0.22921 (1) obj. -4907.49 iterations 1
Cbc0038I Pass  57: suminf.    1.80109 (5) obj. -4907.49 iterations 4
Cbc0038I Pass  58: suminf.    1.09391 (3) obj. -4907.49 iterations 2
Cbc0038I Pass  59: suminf.    0.26366 (1) obj. -5139.91 iterations 3
Cbc0038I Pass  60: suminf.    0.20821 (1) obj. -4907.49 iterations 1
Cbc0038I Rounding solution of -4094.05 is better than previous of -4068.8

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 23 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -4094.05 to -4133.08 (0.03 seconds)
Cbc0038I Round again with cutoff of -5750.44
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.53049 (2) obj. -7669.76 iterations 0
Cbc0038I Pass  61: suminf.    0.48129 (1) obj. -5750.44 iterations 2
Cbc0038I Pass  62: suminf.    0.06098 (1) obj. -7669.23 iterations 1
Cbc0038I Pass  63: suminf.    1.48890 (4) obj. -5750.44 iterations 6
Cbc0038I Pass  64: suminf.    1.48890 (4) obj. -5750.44 iterations 0
Cbc0038I Pass  65: suminf.    0.14634 (1) obj. -7374.16 iterations 4
Cbc0038I Pass  66: suminf.    0.46631 (1) obj. -5750.44 iterations 1
Cbc0038I Pass  67: suminf.    2.62773 (6) obj. -5750.44 iterations 12
Cbc0038I Pass  68: suminf.    2.13109 (5) obj. -5750.44 iterations 3
Cbc0038I Pass  69: suminf.    0.46805 (1) obj. -6062.85 iterations 5
Cbc0038I Pass  70: suminf.    0.45743 (1) obj. -5750.44 iterations 1
Cbc0038I Pass  71: suminf.    0.90464 (3) obj. -5750.44 iterations 6
Cbc0038I Pass  72: suminf.    0.57873 (2) obj. -5750.44 iterations 2
Cbc0038I Pass  73: suminf.    0.44659 (1) obj. -5794.51 iterations 2
Cbc0038I Pass  74: suminf.    0.43607 (1) obj. -5750.44 iterations 1
Cbc0038I Pass  75: suminf.    1.37428 (3) obj. -5750.44 iterations 9
Cbc0038I Pass  76: suminf.    1.37428 (3) obj. -5750.44 iterations 1
Cbc0038I Pass  77: suminf.    0.44659 (1) obj. -5783.47 iterations 3
Cbc0038I Pass  78: suminf.    0.43871 (1) obj. -5750.44 iterations 1
Cbc0038I Pass  79: suminf.    2.23156 (8) obj. -5750.44 iterations 9
Cbc0038I Pass  80: suminf.    0.88393 (4) obj. -5750.44 iterations 5
Cbc0038I Pass  81: suminf.    0.26073 (1) obj. -6971.33 iterations 4
Cbc0038I Pass  82: suminf.    0.44802 (1) obj. -5750.44 iterations 1
Cbc0038I Pass  83: suminf.    2.24462 (5) obj. -5750.44 iterations 4
Cbc0038I Pass  84: suminf.    0.91894 (2) obj. -5750.44 iterations 3
Cbc0038I Pass  85: suminf.    1.23289 (4) obj. -5750.44 iterations 8
Cbc0038I Pass  86: suminf.    0.38818 (1) obj. -5750.44 iterations 5
Cbc0038I Pass  87: suminf.    0.42220 (1) obj. -5893.02 iterations 1
Cbc0038I Pass  88: suminf.    1.27602 (3) obj. -5978.14 iterations 3
Cbc0038I Pass  89: suminf.    0.39250 (1) obj. -5750.44 iterations 3
Cbc0038I Rounding solution of -4171.74 is better than previous of -4133.08

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 18 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -4171.74 to -4177.1 (0.04 seconds)
Cbc0038I Round again with cutoff of -6340.51
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 5
Cbc0038I Pass  89: suminf.    0.53049 (2) obj. -7669.76 iterations 0
Cbc0038I Pass  90: suminf.    0.37795 (1) obj. -6340.51 iterations 2
Cbc0038I Pass  91: suminf.    0.06098 (1) obj. -7669.23 iterations 1
Cbc0038I Pass  92: suminf.    0.53415 (2) obj. -7370.59 iterations 7
Cbc0038I Pass  93: suminf.    0.14634 (1) obj. -7365.16 iterations 4
Cbc0038I Pass  94: suminf.    0.39078 (1) obj. -6340.51 iterations 1
Cbc0038I Pass  95: suminf.    0.55535 (2) obj. -7659.22 iterations 4
Cbc0038I Pass  96: suminf.    0.06098 (1) obj. -7658.23 iterations 2
Cbc0038I Pass  97: suminf.    0.37532 (1) obj. -6340.51 iterations 1
Cbc0038I Pass  98: suminf.    1.80512 (5) obj. -6340.51 iterations 12
Cbc0038I Pass  99: suminf.    0.86758 (3) obj. -7064.5 iterations 5
Cbc0038I Pass 100: suminf.    0.41519 (1) obj. -6340.51 iterations 3
Cbc0038I Pass 101: suminf.    0.24854 (1) obj. -7039.12 iterations 1
Cbc0038I Pass 102: suminf.    1.31728 (3) obj. -6340.51 iterations 6
Cbc0038I Pass 103: suminf.    0.42158 (1) obj. -6340.51 iterations 3
Cbc0038I Pass 104: suminf.    0.35220 (1) obj. -6631.36 iterations 1
Cbc0038I Pass 105: suminf.    1.85678 (5) obj. -6340.51 iterations 11
Cbc0038I Pass 106: suminf.    0.87049 (2) obj. -6523.9 iterations 4
Cbc0038I Pass 107: suminf.    0.41400 (1) obj. -6340.51 iterations 2
Cbc0038I Pass 108: suminf.    0.37049 (1) obj. -6522.9 iterations 1
Cbc0038I Pass 109: suminf.    2.04807 (6) obj. -6340.51 iterations 13
Cbc0038I Pass 110: suminf.    0.94309 (3) obj. -6591.21 iterations 4
Cbc0038I Pass 111: suminf.    0.41189 (1) obj. -6340.51 iterations 3
Cbc0038I Pass 112: suminf.    0.35976 (1) obj. -6559.04 iterations 1
Cbc0038I Pass 113: suminf.    2.97561 (9) obj. -6340.51 iterations 7
Cbc0038I Pass 114: suminf.    0.35976 (1) obj. -6559.04 iterations 10
Cbc0038I Pass 115: suminf.    1.41777 (4) obj. -6340.51 iterations 5
Cbc0038I Pass 116: suminf.    2.89238 (10) obj. -6340.51 iterations 11
Cbc0038I Pass 117: suminf.    0.39634 (1) obj. -6417.08 iterations 9
Cbc0038I Pass 118: suminf.    0.41461 (1) obj. -6340.51 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -4177.1 - took 0.04 seconds
Cbc0012I Integer solution of -4177.1031 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 11 rows 12 columns
Cbc0031I 18 added rows had average density of 15.277778
Cbc0013I At root node, 18 cuts changed objective from -7717.3413 to -4208.9572 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1233 row cuts average 3.6 elements, 13 column cuts (13 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 314 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -4187.9616 found by DiveCoefficient after 1219 iterations and 1 nodes (0.20 seconds)
Cbc0012I Integer solution of -4191.9929 found by rounding after 1221 iterations and 2 nodes (0.20 seconds)
Cbc0001I Search completed - best objective -4191.99286411, took 1310 iterations and 4 nodes (0.20 seconds)
Cbc0032I Strong branching done 56 times (650 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.21

