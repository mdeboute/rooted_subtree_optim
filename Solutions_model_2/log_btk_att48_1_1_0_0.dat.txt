Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 264 (-21) elements
Clp1000I sum of infeasibilities 9.07788e-06 - average 1.03158e-07, 15 fixed columns
Coin0506I Presolve 59 (-29) rows, 33 (-15) columns and 176 (-88) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 3630.3333
Clp0000I Optimal - objective value 3630.3333
Coin0511I After Postsolve, objective 3630.3333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306143 - largest nonzero change 0 ( 0%) - largest zero change 2.3379487e-05
Clp0000I Optimal - objective value 3630.3333
Clp0000I Optimal - objective value 3630.3333
Clp0000I Optimal - objective value 3630.3333
Coin0511I After Postsolve, objective 3630.3333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3630.333332 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 11.5091
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1004.65 iterations 27
Cbc0038I Solution found of -1004.65
Cbc0038I Relaxing continuous gives -1004.65
Cbc0038I Rounding solution of -1648.58 is better than previous of -1004.65

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 49 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1648.58 to -1958.83 (0.03 seconds)
Cbc0038I Round again with cutoff of -2125.98
Cbc0038I Pass   2: suminf.    2.05106 (9) obj. -2125.98 iterations 5
Cbc0038I Pass   3: suminf.    1.89297 (5) obj. -2125.98 iterations 10
Cbc0038I Pass   4: suminf.    1.89297 (5) obj. -2125.98 iterations 0
Cbc0038I Pass   5: suminf.    1.50232 (6) obj. -2125.98 iterations 5
Cbc0038I Pass   6: suminf.    2.39961 (6) obj. -2125.98 iterations 5
Cbc0038I Pass   7: suminf.    1.03302 (4) obj. -2125.98 iterations 1
Cbc0038I Pass   8: suminf.    2.00000 (10) obj. -2125.98 iterations 7
Cbc0038I Pass   9: suminf.    2.00000 (6) obj. -2125.98 iterations 8
Cbc0038I Pass  10: suminf.    2.38809 (8) obj. -2125.98 iterations 6
Cbc0038I Pass  11: suminf.    1.77119 (5) obj. -2125.98 iterations 7
Cbc0038I Pass  12: suminf.    1.42919 (4) obj. -2125.98 iterations 1
Cbc0038I Pass  13: suminf.    1.91182 (6) obj. -2125.98 iterations 5
Cbc0038I Pass  14: suminf.    2.77422 (7) obj. -2125.98 iterations 5
Cbc0038I Pass  15: suminf.    2.69476 (8) obj. -2125.98 iterations 1
Cbc0038I Pass  16: suminf.    2.47554 (7) obj. -2125.98 iterations 8
Cbc0038I Pass  17: suminf.    2.42602 (8) obj. -2125.98 iterations 1
Cbc0038I Pass  18: suminf.    3.24982 (11) obj. -2125.98 iterations 11
Cbc0038I Pass  19: suminf.    2.88650 (12) obj. -2125.98 iterations 3
Cbc0038I Pass  20: suminf.    3.52281 (10) obj. -2125.98 iterations 18
Cbc0038I Pass  21: suminf.    3.52281 (10) obj. -2125.98 iterations 0
Cbc0038I Pass  22: suminf.    1.81129 (6) obj. -2125.98 iterations 9
Cbc0038I Pass  23: suminf.    1.81129 (6) obj. -2125.98 iterations 0
Cbc0038I Pass  24: suminf.    2.19831 (6) obj. -2125.98 iterations 5
Cbc0038I Pass  25: suminf.    2.06698 (7) obj. -2125.98 iterations 2
Cbc0038I Pass  26: suminf.    2.02435 (5) obj. -2125.98 iterations 6
Cbc0038I Pass  27: suminf.    2.02435 (5) obj. -2125.98 iterations 0
Cbc0038I Pass  28: suminf.    1.61047 (6) obj. -2125.98 iterations 5
Cbc0038I Pass  29: suminf.    2.58085 (6) obj. -2125.98 iterations 6
Cbc0038I Pass  30: suminf.    1.13766 (4) obj. -2125.98 iterations 1
Cbc0038I Pass  31: suminf.    2.68906 (9) obj. -2125.98 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 65 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1958.83 - took 0.04 seconds
Cbc0012I Integer solution of -1958.827 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 48 columns, reduced to 49 rows 30 columns
Cbc0031I 22 added rows had average density of 26.727273
Cbc0013I At root node, 22 cuts changed objective from -3630.3333 to -2552.2048 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5784 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1339 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 324 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1958.826999999999, took 5573 iterations and 12 nodes (0.55 seconds)
Cbc0032I Strong branching done 286 times (6171 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-10) rows, 94 (-2) columns and 1345 (-68) elements
Clp1000I sum of infeasibilities 0 - average 0, 84 fixed columns
Coin0506I Presolve 5 (-83) rows, 10 (-84) columns and 18 (-1327) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value -792.572
Clp0000I Optimal - objective value -792.572
Coin0511I After Postsolve, objective -792.572, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.1925507e-05 ( 0.0010767134%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4333.6852
Clp0000I Optimal - objective value 4333.6852
Clp0000I Optimal - objective value 4333.6852
Coin0511I After Postsolve, objective 4333.6852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4333.685198 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 94 columns (94 integer (94 of which binary)) and 1347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.09884
Cbc0038I Pass   1: suminf.    3.78536 (26) obj. -3423.94 iterations 8
Cbc0038I Pass   2: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass   3: suminf.    1.26292 (15) obj. -2083.32 iterations 11
Cbc0038I Pass   4: suminf.    0.16361 (4) obj. -1582.86 iterations 11
Cbc0038I Solution found of -1370.28
Cbc0038I Rounding solution of -1646.75 is better than previous of -1370.28

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1859.9
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass   6: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass   7: suminf.    0.34218 (2) obj. -1859.9 iterations 25
Cbc0038I Pass   8: suminf.    0.34218 (2) obj. -1859.9 iterations 0
Cbc0038I Pass   9: suminf.    0.57445 (2) obj. -1859.9 iterations 1
Cbc0038I Pass  10: suminf.    3.09052 (14) obj. -1859.9 iterations 28
Cbc0038I Pass  11: suminf.    1.56927 (11) obj. -1859.9 iterations 5
Cbc0038I Pass  12: suminf.    1.56927 (11) obj. -1859.9 iterations 0
Cbc0038I Pass  13: suminf.    0.62820 (2) obj. -1859.9 iterations 10
Cbc0038I Pass  14: suminf.    0.62820 (2) obj. -1859.9 iterations 0
Cbc0038I Pass  15: suminf.    0.77073 (2) obj. -1859.9 iterations 1
Cbc0038I Pass  16: suminf.    3.24416 (17) obj. -1859.9 iterations 24
Cbc0038I Pass  17: suminf.    2.47251 (12) obj. -1859.9 iterations 10
Cbc0038I Pass  18: suminf.    2.15666 (11) obj. -2044.51 iterations 1
Cbc0038I Pass  19: suminf.    1.19965 (4) obj. -1859.9 iterations 10
Cbc0038I Pass  20: suminf.    1.19965 (4) obj. -1859.9 iterations 0
Cbc0038I Pass  21: suminf.    1.06439 (4) obj. -1859.9 iterations 3
Cbc0038I Pass  22: suminf.    1.06439 (4) obj. -1859.9 iterations 0
Cbc0038I Pass  23: suminf.    1.19965 (4) obj. -1859.9 iterations 1
Cbc0038I Pass  24: suminf.    2.34287 (12) obj. -1859.9 iterations 22
Cbc0038I Pass  25: suminf.    1.76005 (9) obj. -1859.9 iterations 6
Cbc0038I Pass  26: suminf.    1.41350 (8) obj. -1859.9 iterations 8
Cbc0038I Pass  27: suminf.    1.41516 (5) obj. -1859.9 iterations 7
Cbc0038I Pass  28: suminf.    1.23391 (5) obj. -1892.71 iterations 2
Cbc0038I Pass  29: suminf.    1.41516 (5) obj. -1859.9 iterations 3
Cbc0038I Pass  30: suminf.    1.53815 (10) obj. -1859.9 iterations 20
Cbc0038I Pass  31: suminf.    1.53815 (10) obj. -1859.9 iterations 5
Cbc0038I Pass  32: suminf.    1.18297 (5) obj. -1859.9 iterations 11
Cbc0038I Pass  33: suminf.    1.18297 (5) obj. -1859.9 iterations 0
Cbc0038I Pass  34: suminf.    0.96085 (4) obj. -1859.9 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 50 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -1370.28 to -1880.39 (0.04 seconds)
Cbc0038I Round again with cutoff of -2259.97
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass  35: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass  36: suminf.    1.74479 (17) obj. -2259.97 iterations 10
Cbc0038I Pass  37: suminf.    0.57009 (8) obj. -2314.31 iterations 10
Cbc0038I Pass  38: suminf.    0.98998 (3) obj. -2259.97 iterations 9
Cbc0038I Pass  39: suminf.    0.54928 (2) obj. -2377.21 iterations 1
Cbc0038I Pass  40: suminf.    0.69810 (2) obj. -2259.97 iterations 1
Cbc0038I Pass  41: suminf.    0.69810 (2) obj. -2259.97 iterations 0
Cbc0038I Pass  42: suminf.    0.74632 (2) obj. -2259.97 iterations 1
Cbc0038I Pass  43: suminf.    1.53020 (6) obj. -2259.97 iterations 21
Cbc0038I Pass  44: suminf.    1.49171 (6) obj. -2267.94 iterations 8
Cbc0038I Pass  45: suminf.    1.26498 (4) obj. -2259.97 iterations 7
Cbc0038I Pass  46: suminf.    1.11555 (4) obj. -2291.05 iterations 3
Cbc0038I Pass  47: suminf.    2.07282 (10) obj. -2320.71 iterations 13
Cbc0038I Pass  48: suminf.    2.07282 (10) obj. -2320.71 iterations 2
Cbc0038I Pass  49: suminf.    1.73853 (6) obj. -2259.97 iterations 11
Cbc0038I Pass  50: suminf.    1.73853 (6) obj. -2259.97 iterations 0
Cbc0038I Pass  51: suminf.    1.61703 (6) obj. -2259.97 iterations 5
Cbc0038I Pass  52: suminf.    1.61703 (6) obj. -2259.97 iterations 0
Cbc0038I Pass  53: suminf.    1.73853 (6) obj. -2259.97 iterations 7
Cbc0038I Pass  54: suminf.    1.92071 (12) obj. -2259.97 iterations 18
Cbc0038I Pass  55: suminf.    1.72644 (9) obj. -2305.72 iterations 7
Cbc0038I Pass  56: suminf.    1.53402 (5) obj. -2259.97 iterations 13
Cbc0038I Pass  57: suminf.    1.21900 (5) obj. -2316.99 iterations 3
Cbc0038I Pass  58: suminf.    2.99079 (21) obj. -2259.97 iterations 19
Cbc0038I Pass  59: suminf.    2.99079 (21) obj. -2259.97 iterations 0
Cbc0038I Pass  60: suminf.    1.58465 (13) obj. -2259.97 iterations 11
Cbc0038I Pass  61: suminf.    1.58465 (13) obj. -2259.97 iterations 1
Cbc0038I Pass  62: suminf.    1.91729 (8) obj. -2259.97 iterations 11
Cbc0038I Pass  63: suminf.    1.91729 (8) obj. -2259.97 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1880.39 - took 0.04 seconds
Cbc0012I Integer solution of -1880.386 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 94 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -1958.827 found by DiveCoefficient after 118 iterations and 0 nodes (0.14 seconds)
Cbc0031I 34 added rows had average density of 15.941176
Cbc0013I At root node, 34 cuts changed objective from -3778.3022 to -1958.827 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 554 row cuts average 6.0 elements, 23 column cuts (23 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 73 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1958.826999999999, took 118 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 264 (-21) elements
Clp1000I sum of infeasibilities 9.07788e-06 - average 1.03158e-07, 15 fixed columns
Coin0506I Presolve 59 (-29) rows, 33 (-15) columns and 176 (-88) elements
Clp0029I End of values pass after 33 iterations
Clp0000I Optimal - objective value 3630.3333
Clp0000I Optimal - objective value 3630.3333
Coin0511I After Postsolve, objective 3630.3333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5306143 - largest nonzero change 0 ( 0%) - largest zero change 2.3379487e-05
Clp0000I Optimal - objective value 3630.3333
Clp0000I Optimal - objective value 3630.3333
Clp0000I Optimal - objective value 3630.3333
Coin0511I After Postsolve, objective 3630.3333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3630.333332 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 264 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 11.5091
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1004.65 iterations 27
Cbc0038I Solution found of -1004.65
Cbc0038I Relaxing continuous gives -1004.65
Cbc0038I Rounding solution of -1648.58 is better than previous of -1004.65

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 49 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1648.58 to -1958.83 (0.03 seconds)
Cbc0038I Round again with cutoff of -2125.98
Cbc0038I Pass   2: suminf.    2.05106 (9) obj. -2125.98 iterations 5
Cbc0038I Pass   3: suminf.    1.89297 (5) obj. -2125.98 iterations 10
Cbc0038I Pass   4: suminf.    1.89297 (5) obj. -2125.98 iterations 0
Cbc0038I Pass   5: suminf.    1.50232 (6) obj. -2125.98 iterations 5
Cbc0038I Pass   6: suminf.    2.39961 (6) obj. -2125.98 iterations 5
Cbc0038I Pass   7: suminf.    1.03302 (4) obj. -2125.98 iterations 1
Cbc0038I Pass   8: suminf.    2.00000 (10) obj. -2125.98 iterations 7
Cbc0038I Pass   9: suminf.    2.00000 (6) obj. -2125.98 iterations 8
Cbc0038I Pass  10: suminf.    2.38809 (8) obj. -2125.98 iterations 6
Cbc0038I Pass  11: suminf.    1.77119 (5) obj. -2125.98 iterations 7
Cbc0038I Pass  12: suminf.    1.42919 (4) obj. -2125.98 iterations 1
Cbc0038I Pass  13: suminf.    1.91182 (6) obj. -2125.98 iterations 5
Cbc0038I Pass  14: suminf.    2.77422 (7) obj. -2125.98 iterations 5
Cbc0038I Pass  15: suminf.    2.69476 (8) obj. -2125.98 iterations 1
Cbc0038I Pass  16: suminf.    2.47554 (7) obj. -2125.98 iterations 8
Cbc0038I Pass  17: suminf.    2.42602 (8) obj. -2125.98 iterations 1
Cbc0038I Pass  18: suminf.    3.24982 (11) obj. -2125.98 iterations 11
Cbc0038I Pass  19: suminf.    2.88650 (12) obj. -2125.98 iterations 3
Cbc0038I Pass  20: suminf.    3.52281 (10) obj. -2125.98 iterations 18
Cbc0038I Pass  21: suminf.    3.52281 (10) obj. -2125.98 iterations 0
Cbc0038I Pass  22: suminf.    1.81129 (6) obj. -2125.98 iterations 9
Cbc0038I Pass  23: suminf.    1.81129 (6) obj. -2125.98 iterations 0
Cbc0038I Pass  24: suminf.    2.19831 (6) obj. -2125.98 iterations 5
Cbc0038I Pass  25: suminf.    2.06698 (7) obj. -2125.98 iterations 2
Cbc0038I Pass  26: suminf.    2.02435 (5) obj. -2125.98 iterations 6
Cbc0038I Pass  27: suminf.    2.02435 (5) obj. -2125.98 iterations 0
Cbc0038I Pass  28: suminf.    1.61047 (6) obj. -2125.98 iterations 5
Cbc0038I Pass  29: suminf.    2.58085 (6) obj. -2125.98 iterations 6
Cbc0038I Pass  30: suminf.    1.13766 (4) obj. -2125.98 iterations 1
Cbc0038I Pass  31: suminf.    2.68906 (9) obj. -2125.98 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 65 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -1958.83 - took 0.04 seconds
Cbc0012I Integer solution of -1958.827 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 48 columns, reduced to 49 rows 30 columns
Cbc0031I 22 added rows had average density of 26.727273
Cbc0013I At root node, 22 cuts changed objective from -3630.3333 to -2552.2048 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5784 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1339 row cuts average 47.8 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 324 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1958.826999999999, took 5573 iterations and 12 nodes (0.54 seconds)
Cbc0032I Strong branching done 286 times (6171 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 94 (-3) columns and 1345 (-69) elements
Clp1000I sum of infeasibilities 0 - average 0, 84 fixed columns
Coin0506I Presolve 5 (-83) rows, 10 (-84) columns and 18 (-1327) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value -792.572
Clp0000I Optimal - objective value -792.572
Coin0511I After Postsolve, objective -792.572, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 1.1925507e-05 ( 0.0010767134%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 4333.6852
Clp0000I Optimal - objective value 4333.6852
Clp0000I Optimal - objective value 4333.6852
Coin0511I After Postsolve, objective 4333.6852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 4333.685198 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 94 columns (94 integer (94 of which binary)) and 1347 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.098%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 5.09884
Cbc0038I Pass   1: suminf.    3.78536 (26) obj. -3423.94 iterations 8
Cbc0038I Pass   2: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass   3: suminf.    1.26292 (15) obj. -2083.32 iterations 11
Cbc0038I Pass   4: suminf.    0.16361 (4) obj. -1582.86 iterations 11
Cbc0038I Solution found of -1370.28
Cbc0038I Rounding solution of -1646.75 is better than previous of -1370.28

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -1859.9
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass   6: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass   7: suminf.    0.34218 (2) obj. -1859.9 iterations 25
Cbc0038I Pass   8: suminf.    0.34218 (2) obj. -1859.9 iterations 0
Cbc0038I Pass   9: suminf.    0.57445 (2) obj. -1859.9 iterations 1
Cbc0038I Pass  10: suminf.    3.09052 (14) obj. -1859.9 iterations 28
Cbc0038I Pass  11: suminf.    1.56927 (11) obj. -1859.9 iterations 5
Cbc0038I Pass  12: suminf.    1.56927 (11) obj. -1859.9 iterations 0
Cbc0038I Pass  13: suminf.    0.62820 (2) obj. -1859.9 iterations 10
Cbc0038I Pass  14: suminf.    0.62820 (2) obj. -1859.9 iterations 0
Cbc0038I Pass  15: suminf.    0.77073 (2) obj. -1859.9 iterations 1
Cbc0038I Pass  16: suminf.    3.24416 (17) obj. -1859.9 iterations 24
Cbc0038I Pass  17: suminf.    2.47251 (12) obj. -1859.9 iterations 10
Cbc0038I Pass  18: suminf.    2.15666 (11) obj. -2044.51 iterations 1
Cbc0038I Pass  19: suminf.    1.19965 (4) obj. -1859.9 iterations 10
Cbc0038I Pass  20: suminf.    1.19965 (4) obj. -1859.9 iterations 0
Cbc0038I Pass  21: suminf.    1.06439 (4) obj. -1859.9 iterations 3
Cbc0038I Pass  22: suminf.    1.06439 (4) obj. -1859.9 iterations 0
Cbc0038I Pass  23: suminf.    1.19965 (4) obj. -1859.9 iterations 1
Cbc0038I Pass  24: suminf.    2.34287 (12) obj. -1859.9 iterations 22
Cbc0038I Pass  25: suminf.    1.76005 (9) obj. -1859.9 iterations 6
Cbc0038I Pass  26: suminf.    1.41350 (8) obj. -1859.9 iterations 8
Cbc0038I Pass  27: suminf.    1.41516 (5) obj. -1859.9 iterations 7
Cbc0038I Pass  28: suminf.    1.23391 (5) obj. -1892.71 iterations 2
Cbc0038I Pass  29: suminf.    1.41516 (5) obj. -1859.9 iterations 3
Cbc0038I Pass  30: suminf.    1.53815 (10) obj. -1859.9 iterations 20
Cbc0038I Pass  31: suminf.    1.53815 (10) obj. -1859.9 iterations 5
Cbc0038I Pass  32: suminf.    1.18297 (5) obj. -1859.9 iterations 11
Cbc0038I Pass  33: suminf.    1.18297 (5) obj. -1859.9 iterations 0
Cbc0038I Pass  34: suminf.    0.96085 (4) obj. -1859.9 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 50 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -1370.28 to -1880.39 (0.04 seconds)
Cbc0038I Round again with cutoff of -2259.97
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass  35: suminf.    3.78536 (26) obj. -3423.94 iterations 0
Cbc0038I Pass  36: suminf.    1.74479 (17) obj. -2259.97 iterations 10
Cbc0038I Pass  37: suminf.    0.57009 (8) obj. -2314.31 iterations 10
Cbc0038I Pass  38: suminf.    0.98998 (3) obj. -2259.97 iterations 9
Cbc0038I Pass  39: suminf.    0.54928 (2) obj. -2377.21 iterations 1
Cbc0038I Pass  40: suminf.    0.69810 (2) obj. -2259.97 iterations 1
Cbc0038I Pass  41: suminf.    0.69810 (2) obj. -2259.97 iterations 0
Cbc0038I Pass  42: suminf.    0.74632 (2) obj. -2259.97 iterations 1
Cbc0038I Pass  43: suminf.    1.53020 (6) obj. -2259.97 iterations 21
Cbc0038I Pass  44: suminf.    1.49171 (6) obj. -2267.94 iterations 8
Cbc0038I Pass  45: suminf.    1.26498 (4) obj. -2259.97 iterations 7
Cbc0038I Pass  46: suminf.    1.11555 (4) obj. -2291.05 iterations 3
Cbc0038I Pass  47: suminf.    2.07282 (10) obj. -2320.71 iterations 13
Cbc0038I Pass  48: suminf.    2.07282 (10) obj. -2320.71 iterations 2
Cbc0038I Pass  49: suminf.    1.73853 (6) obj. -2259.97 iterations 11
Cbc0038I Pass  50: suminf.    1.73853 (6) obj. -2259.97 iterations 0
Cbc0038I Pass  51: suminf.    1.61703 (6) obj. -2259.97 iterations 5
Cbc0038I Pass  52: suminf.    1.61703 (6) obj. -2259.97 iterations 0
Cbc0038I Pass  53: suminf.    1.73853 (6) obj. -2259.97 iterations 7
Cbc0038I Pass  54: suminf.    1.92071 (12) obj. -2259.97 iterations 18
Cbc0038I Pass  55: suminf.    1.72644 (9) obj. -2305.72 iterations 7
Cbc0038I Pass  56: suminf.    1.53402 (5) obj. -2259.97 iterations 13
Cbc0038I Pass  57: suminf.    1.21900 (5) obj. -2316.99 iterations 3
Cbc0038I Pass  58: suminf.    2.99079 (21) obj. -2259.97 iterations 19
Cbc0038I Pass  59: suminf.    2.99079 (21) obj. -2259.97 iterations 0
Cbc0038I Pass  60: suminf.    1.58465 (13) obj. -2259.97 iterations 11
Cbc0038I Pass  61: suminf.    1.58465 (13) obj. -2259.97 iterations 1
Cbc0038I Pass  62: suminf.    1.91729 (8) obj. -2259.97 iterations 11
Cbc0038I Pass  63: suminf.    1.91729 (8) obj. -2259.97 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 94 columns, reduced to 9 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -1880.39 - took 0.04 seconds
Cbc0012I Integer solution of -1880.386 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 94 columns, reduced to 1 rows 2 columns
Cbc0012I Integer solution of -1958.827 found by DiveCoefficient after 118 iterations and 0 nodes (0.14 seconds)
Cbc0031I 34 added rows had average density of 15.941176
Cbc0013I At root node, 34 cuts changed objective from -3778.3022 to -1958.827 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 554 row cuts average 6.0 elements, 23 column cuts (23 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 24 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 73 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 11.4 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1958.826999999999, took 118 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.11   (Wallclock seconds):       0.15

