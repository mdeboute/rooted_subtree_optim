Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 0.000121723 - average 6.47465e-07, 11 fixed columns
Coin0506I Presolve 155 (-33) rows, 89 (-12) columns and 480 (-90) elements
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.2734366 - largest nonzero change 0 ( 0%) - largest zero change 2.1620094e-05
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Coin0511I After Postsolve, objective 44.039392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Coin0511I After Postsolve, objective 44.039392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.03939174 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 13.8619
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.1351 iterations 101
Cbc0038I Solution found of 10.1351
Cbc0038I Relaxing continuous gives 10.1351
Cbc0038I Rounding solution of 4.67302 is better than previous of 10.1351

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 102 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 4.67302 to -13.8725 (0.08 seconds)
Cbc0038I Round again with cutoff of -16.8893
Cbc0038I Pass   2: suminf.    3.86741 (31) obj. -16.8893 iterations 39
Cbc0038I Pass   3: suminf.    3.86047 (33) obj. -16.8893 iterations 2
Cbc0038I Pass   4: suminf.    2.33719 (9) obj. -16.8893 iterations 33
Cbc0038I Pass   5: suminf.    2.33719 (9) obj. -16.8893 iterations 0
Cbc0038I Pass   6: suminf.    3.18954 (10) obj. -16.8893 iterations 21
Cbc0038I Pass   7: suminf.    3.18954 (10) obj. -16.8893 iterations 0
Cbc0038I Pass   8: suminf.    2.78078 (9) obj. -16.8893 iterations 10
Cbc0038I Pass   9: suminf.    2.78078 (9) obj. -16.8893 iterations 1
Cbc0038I Pass  10: suminf.    3.53543 (13) obj. -16.8893 iterations 18
Cbc0038I Pass  11: suminf.    3.46141 (12) obj. -16.8893 iterations 1
Cbc0038I Pass  12: suminf.    3.46141 (12) obj. -16.8893 iterations 0
Cbc0038I Pass  13: suminf.    3.44329 (11) obj. -16.8893 iterations 13
Cbc0038I Pass  14: suminf.    3.19303 (9) obj. -16.8893 iterations 2
Cbc0038I Pass  15: suminf.    3.58934 (11) obj. -16.8893 iterations 11
Cbc0038I Pass  16: suminf.    3.58367 (12) obj. -16.8893 iterations 1
Cbc0038I Pass  17: suminf.    3.06648 (9) obj. -16.8893 iterations 9
Cbc0038I Pass  18: suminf.    2.42792 (8) obj. -16.8893 iterations 4
Cbc0038I Pass  19: suminf.    3.65930 (11) obj. -16.8893 iterations 11
Cbc0038I Pass  20: suminf.    3.65930 (11) obj. -16.8893 iterations 0
Cbc0038I Pass  21: suminf.    3.83514 (11) obj. -16.8893 iterations 6
Cbc0038I Pass  22: suminf.    2.96413 (13) obj. -16.8893 iterations 8
Cbc0038I Pass  23: suminf.    3.11118 (8) obj. -16.8893 iterations 15
Cbc0038I Pass  24: suminf.    3.00813 (9) obj. -16.8893 iterations 2
Cbc0038I Pass  25: suminf.    2.07688 (7) obj. -16.8893 iterations 4
Cbc0038I Pass  26: suminf.    2.07688 (7) obj. -16.8893 iterations 0
Cbc0038I Pass  27: suminf.    2.92529 (9) obj. -16.8893 iterations 7
Cbc0038I Pass  28: suminf.    2.33661 (8) obj. -16.8893 iterations 4
Cbc0038I Pass  29: suminf.    2.32764 (7) obj. -16.8893 iterations 1
Cbc0038I Pass  30: suminf.    3.00813 (9) obj. -16.8893 iterations 9
Cbc0038I Pass  31: suminf.    2.07688 (7) obj. -16.8893 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 110 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -13.8725 to -15.1397 (0.16 seconds)
Cbc0038I Round again with cutoff of -22.3193
Cbc0038I Pass  31: suminf.    5.60847 (31) obj. -22.3193 iterations 0
Cbc0038I Pass  32: suminf.    5.38569 (39) obj. -22.3193 iterations 16
Cbc0038I Pass  33: suminf.    3.62308 (11) obj. -22.3193 iterations 41
Cbc0038I Pass  34: suminf.    3.11290 (10) obj. -22.3193 iterations 3
Cbc0038I Pass  35: suminf.    3.93508 (13) obj. -22.3193 iterations 15
Cbc0038I Pass  36: suminf.    3.74406 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  37: suminf.    4.82147 (14) obj. -22.3193 iterations 15
Cbc0038I Pass  38: suminf.    4.35305 (15) obj. -22.3193 iterations 2
Cbc0038I Pass  39: suminf.    3.76936 (11) obj. -22.3193 iterations 15
Cbc0038I Pass  40: suminf.    3.51783 (11) obj. -22.3193 iterations 3
Cbc0038I Pass  41: suminf.    4.76734 (12) obj. -22.3193 iterations 8
Cbc0038I Pass  42: suminf.    3.75505 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  43: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  44: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  45: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  46: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  47: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  48: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  49: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  50: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  51: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  52: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  53: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  54: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  55: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  56: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  57: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  58: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  59: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  60: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 118 rows 70 columns - 1 fixed gives 113, 69 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 113 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -15.1397 - took 0.24 seconds
Cbc0012I Integer solution of -15.13971 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 102 rows 62 columns
Cbc0031I 41 added rows had average density of 56.243902
Cbc0013I At root node, 41 cuts changed objective from -44.039392 to -35.682108 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19378 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3444 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.177 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.13971 best solution, best possible -35.682108 (1.88 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 77 rows 48 columns
Cbc0012I Integer solution of -15.24346 found by rounding after 12873 iterations and 79 nodes (2.35 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -15.24346, took 14205 iterations and 184 nodes (2.46 seconds)
Cbc0032I Strong branching done 1466 times (23753 iterations), fathomed 39 nodes and fixed 89 variables
Cbc0035I Maximum depth 29, 460 variables fixed on reduced cost
Total time (CPU seconds):       2.39   (Wallclock seconds):       2.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-71) rows, 145 (-57) columns and 2803 (-2850) elements
Clp1000I sum of infeasibilities 1.52418e-07 - average 1.146e-09, 43 fixed columns
Coin0506I Presolve 87 (-46) rows, 102 (-43) columns and 1577 (-1226) elements
Clp0006I 0  Obj 41.532925 Dual inf 4.9033569 (102)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 2.0771307 - largest nonzero change 2.9053855e-05 ( 0.0023600025%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 59.183876
Clp0000I Optimal - objective value 59.183876
Coin0511I After Postsolve, objective 59.183876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.183876 Dual inf 3.1694281 (2)
Clp0014I Perturbing problem by 0.001% of 1.6119245 - largest nonzero change 1.6812154e-05 ( 0.0015380202%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 60.083876
Clp0000I Optimal - objective value 60.083876
Clp0000I Optimal - objective value 60.083876
Coin0511I After Postsolve, objective 60.083876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.08387603 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 145 columns (145 integer (145 of which binary)) and 2806 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.28114
Cbc0038I Pass   1: suminf.    3.08253 (33) obj. -30.4391 iterations 14
Cbc0038I Pass   2: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass   3: suminf.    0.47955 (8) obj. 3.41701 iterations 25
Cbc0038I Solution found of 10.9375
Cbc0038I Rounding solution of -2.28503 is better than previous of 10.9375

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -2.28503 to -2.5859 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.77366
Cbc0038I Pass   4: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass   5: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass   6: suminf.    1.49318 (20) obj. -7.77366 iterations 15
Cbc0038I Pass   7: suminf.    0.55208 (7) obj. -7.77366 iterations 16
Cbc0038I Pass   8: suminf.    0.40889 (6) obj. -8.65513 iterations 2
Cbc0038I Pass   9: suminf.    1.24315 (10) obj. -7.77366 iterations 10
Cbc0038I Pass  10: suminf.    1.19880 (10) obj. -7.77366 iterations 1
Cbc0038I Pass  11: suminf.    0.89133 (4) obj. -7.77366 iterations 11
Cbc0038I Pass  12: suminf.    0.79435 (3) obj. -7.77366 iterations 2
Cbc0038I Pass  13: suminf.    0.76191 (4) obj. -7.77366 iterations 6
Cbc0038I Pass  14: suminf.    0.76191 (4) obj. -7.77366 iterations 0
Cbc0038I Pass  15: suminf.    0.51849 (2) obj. -7.77366 iterations 5
Cbc0038I Pass  16: suminf.    0.46426 (2) obj. -7.77366 iterations 1
Cbc0038I Pass  17: suminf.    2.15812 (18) obj. -10.7017 iterations 40
Cbc0038I Pass  18: suminf.    1.85911 (15) obj. -10.3157 iterations 5
Cbc0038I Pass  19: suminf.    1.42448 (7) obj. -7.77366 iterations 25
Cbc0038I Pass  20: suminf.    1.42448 (7) obj. -7.77366 iterations 0
Cbc0038I Pass  21: suminf.    0.98455 (5) obj. -7.77366 iterations 9
Cbc0038I Pass  22: suminf.    0.80399 (5) obj. -7.95275 iterations 3
Cbc0038I Pass  23: suminf.    2.05567 (6) obj. -7.77366 iterations 5
Cbc0038I Pass  24: suminf.    1.26036 (5) obj. -7.77366 iterations 5
Cbc0038I Pass  25: suminf.    1.26036 (5) obj. -7.77366 iterations 0
Cbc0038I Pass  26: suminf.    1.38278 (5) obj. -7.77366 iterations 10
Cbc0038I Pass  27: suminf.    1.18265 (7) obj. -7.77366 iterations 3
Cbc0038I Pass  28: suminf.    1.01267 (8) obj. -7.77366 iterations 1
Cbc0038I Pass  29: suminf.    1.74594 (6) obj. -7.77366 iterations 5
Cbc0038I Pass  30: suminf.    0.83574 (7) obj. -7.77366 iterations 4
Cbc0038I Pass  31: suminf.    0.83574 (7) obj. -7.77366 iterations 0
Cbc0038I Pass  32: suminf.    0.85508 (3) obj. -7.77366 iterations 8
Cbc0038I Pass  33: suminf.    0.81157 (5) obj. -7.77366 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 26 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -2.5859 to -3.86115 (0.09 seconds)
Cbc0038I Round again with cutoff of -17.1114
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass  34: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass  35: suminf.    1.62724 (22) obj. -17.1114 iterations 26
Cbc0038I Pass  36: suminf.    1.56390 (22) obj. -17.1114 iterations 2
Cbc0038I Pass  37: suminf.    2.29615 (9) obj. -17.1114 iterations 24
Cbc0038I Pass  38: suminf.    2.21093 (10) obj. -17.1114 iterations 5
Cbc0038I Pass  39: suminf.    1.75419 (6) obj. -17.1114 iterations 12
Cbc0038I Pass  40: suminf.    1.41762 (6) obj. -17.1114 iterations 2
Cbc0038I Pass  41: suminf.    1.37654 (5) obj. -17.1114 iterations 1
Cbc0038I Pass  42: suminf.    1.63367 (5) obj. -17.1114 iterations 3
Cbc0038I Pass  43: suminf.    3.49158 (20) obj. -17.1114 iterations 29
Cbc0038I Pass  44: suminf.    2.80110 (14) obj. -17.1114 iterations 21
Cbc0038I Pass  45: suminf.    1.20182 (5) obj. -17.1114 iterations 16
Cbc0038I Pass  46: suminf.    1.19724 (5) obj. -17.1114 iterations 6
Cbc0038I Pass  47: suminf.    1.30773 (5) obj. -17.1114 iterations 9
Cbc0038I Pass  48: suminf.    3.76665 (14) obj. -17.1114 iterations 23
Cbc0038I Pass  49: suminf.    2.60090 (11) obj. -17.1114 iterations 7
Cbc0038I Pass  50: suminf.    2.45966 (12) obj. -17.1114 iterations 4
Cbc0038I Pass  51: suminf.    1.48510 (7) obj. -17.1114 iterations 13
Cbc0038I Pass  52: suminf.    1.25768 (6) obj. -17.1114 iterations 2
Cbc0038I Pass  53: suminf.    1.47235 (5) obj. -17.1114 iterations 3
Cbc0038I Pass  54: suminf.    1.23351 (5) obj. -17.1114 iterations 2
Cbc0038I Pass  55: suminf.    1.45717 (5) obj. -17.1114 iterations 3
Cbc0038I Pass  56: suminf.    1.23351 (5) obj. -17.1114 iterations 1
Cbc0038I Pass  57: suminf.    3.19628 (15) obj. -17.1114 iterations 32
Cbc0038I Pass  58: suminf.    2.94236 (15) obj. -17.1114 iterations 8
Cbc0038I Pass  59: suminf.    1.52999 (8) obj. -17.1114 iterations 15
Cbc0038I Pass  60: suminf.    1.35814 (9) obj. -17.1114 iterations 2
Cbc0038I Pass  61: suminf.    1.77574 (6) obj. -17.1114 iterations 8
Cbc0038I Pass  62: suminf.    1.63513 (6) obj. -17.1114 iterations 1
Cbc0038I Rounding solution of -5.28112 is better than previous of -3.86115

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 21 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -28.3168
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass  63: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass  64: suminf.    4.28618 (22) obj. -28.3168 iterations 40
Cbc0038I Pass  65: suminf.    3.74734 (23) obj. -28.3168 iterations 8
Cbc0038I Pass  66: suminf.    3.18870 (16) obj. -28.3168 iterations 22
Cbc0038I Pass  67: suminf.    2.78828 (15) obj. -28.3168 iterations 5
Cbc0038I Pass  68: suminf.    2.78828 (15) obj. -28.3168 iterations 0
Cbc0038I Pass  69: suminf.    3.07764 (14) obj. -28.3168 iterations 20
Cbc0038I Pass  70: suminf.    2.98725 (14) obj. -28.3168 iterations 3
Cbc0038I Pass  71: suminf.    3.42696 (13) obj. -28.3168 iterations 11
Cbc0038I Pass  72: suminf.    3.39370 (13) obj. -28.3168 iterations 2
Cbc0038I Pass  73: suminf.    3.42696 (13) obj. -28.3168 iterations 8
Cbc0038I Pass  74: suminf.    4.82221 (22) obj. -28.3168 iterations 17
Cbc0038I Pass  75: suminf.    3.33882 (17) obj. -28.3168 iterations 10
Cbc0038I Pass  76: suminf.    3.33882 (17) obj. -28.3168 iterations 1
Cbc0038I Pass  77: suminf.    3.42696 (13) obj. -28.3168 iterations 13
Cbc0038I Pass  78: suminf.    3.39370 (13) obj. -28.3168 iterations 4
Cbc0038I Pass  79: suminf.    3.42696 (13) obj. -28.3168 iterations 6
Cbc0038I Pass  80: suminf.    3.55576 (16) obj. -28.3168 iterations 27
Cbc0038I Pass  81: suminf.    3.34299 (16) obj. -28.3168 iterations 8
Cbc0038I Pass  82: suminf.    3.75757 (14) obj. -28.3168 iterations 14
Cbc0038I Pass  83: suminf.    3.44647 (14) obj. -28.3168 iterations 5
Cbc0038I Pass  84: suminf.    3.01727 (14) obj. -28.3168 iterations 1
Cbc0038I Pass  85: suminf.    3.44647 (14) obj. -28.3168 iterations 12
Cbc0038I Pass  86: suminf.    3.16465 (14) obj. -28.3168 iterations 1
Cbc0038I Pass  87: suminf.    5.18048 (23) obj. -28.3168 iterations 20
Cbc0038I Pass  88: suminf.    3.02962 (16) obj. -29.5038 iterations 10
Cbc0038I Pass  89: suminf.    3.80317 (15) obj. -28.3168 iterations 13
Cbc0038I Pass  90: suminf.    3.34984 (14) obj. -28.3168 iterations 10
Cbc0038I Pass  91: suminf.    2.86430 (13) obj. -28.3168 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -5.28112 - took 0.14 seconds
Cbc0012I Integer solution of -5.281116 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 2 rows 5 columns
Cbc0031I 66 added rows had average density of 60.363636
Cbc0013I At root node, 66 cuts changed objective from -54.462605 to -22.424572 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25018 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3297 row cuts average 143.6 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1309 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2412 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.228 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 449 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.281116 best solution, best possible -22.424572 (2.66 seconds)
Cbc0012I Integer solution of -12.63644 found by rounding after 9947 iterations and 1 nodes (2.68 seconds)
Cbc0012I Integer solution of -12.80261 found by DiveCoefficient after 10206 iterations and 1 nodes (2.70 seconds)
Cbc0012I Integer solution of -14.72411 found by rounding after 10227 iterations and 3 nodes (2.71 seconds)
Cbc0012I Integer solution of -14.94388 found by rounding after 10264 iterations and 15 nodes (2.74 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 76 rows 91 columns
Cbc0012I Integer solution of -15.24346 found by RINS after 11619 iterations and 41 nodes (3.61 seconds)
Cbc0010I After 41 nodes, 2 on tree, -15.24346 best solution, best possible -22.372722 (3.61 seconds)
Cbc0010I After 57 nodes, 6 on tree, -15.24346 best solution, best possible -22.372722 (4.42 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 3 rows 7 columns
Cbc0001I Search completed - best objective -15.24346, took 13771 iterations and 118 nodes (4.58 seconds)
Cbc0032I Strong branching done 928 times (13278 iterations), fathomed 33 nodes and fixed 22 variables
Cbc0035I Maximum depth 10, 191 variables fixed on reduced cost
Total time (CPU seconds):       4.44   (Wallclock seconds):       4.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 101 (-2) columns and 570 (-33) elements
Clp1000I sum of infeasibilities 0.000121723 - average 6.47465e-07, 11 fixed columns
Coin0506I Presolve 155 (-33) rows, 89 (-12) columns and 480 (-90) elements
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 2.2734366 - largest nonzero change 0 ( 0%) - largest zero change 2.1620094e-05
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Coin0511I After Postsolve, objective 44.039392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Clp0000I Optimal - objective value 44.039392
Coin0511I After Postsolve, objective 44.039392, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.03939174 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 101 columns (100 integer (100 of which binary)) and 570 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.907%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 61 integers unsatisfied sum - 13.8619
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.1351 iterations 101
Cbc0038I Solution found of 10.1351
Cbc0038I Relaxing continuous gives 10.1351
Cbc0038I Rounding solution of 4.67302 is better than previous of 10.1351

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 102 rows 62 columns
Cbc0038I Mini branch and bound improved solution from 4.67302 to -13.8725 (0.18 seconds)
Cbc0038I Round again with cutoff of -16.8893
Cbc0038I Pass   2: suminf.    3.86741 (31) obj. -16.8893 iterations 39
Cbc0038I Pass   3: suminf.    3.86047 (33) obj. -16.8893 iterations 2
Cbc0038I Pass   4: suminf.    2.33719 (9) obj. -16.8893 iterations 33
Cbc0038I Pass   5: suminf.    2.33719 (9) obj. -16.8893 iterations 0
Cbc0038I Pass   6: suminf.    3.18954 (10) obj. -16.8893 iterations 21
Cbc0038I Pass   7: suminf.    3.18954 (10) obj. -16.8893 iterations 0
Cbc0038I Pass   8: suminf.    2.78078 (9) obj. -16.8893 iterations 10
Cbc0038I Pass   9: suminf.    2.78078 (9) obj. -16.8893 iterations 1
Cbc0038I Pass  10: suminf.    3.53543 (13) obj. -16.8893 iterations 18
Cbc0038I Pass  11: suminf.    3.46141 (12) obj. -16.8893 iterations 1
Cbc0038I Pass  12: suminf.    3.46141 (12) obj. -16.8893 iterations 0
Cbc0038I Pass  13: suminf.    3.44329 (11) obj. -16.8893 iterations 13
Cbc0038I Pass  14: suminf.    3.19303 (9) obj. -16.8893 iterations 2
Cbc0038I Pass  15: suminf.    3.58934 (11) obj. -16.8893 iterations 11
Cbc0038I Pass  16: suminf.    3.58367 (12) obj. -16.8893 iterations 1
Cbc0038I Pass  17: suminf.    3.06648 (9) obj. -16.8893 iterations 9
Cbc0038I Pass  18: suminf.    2.42792 (8) obj. -16.8893 iterations 4
Cbc0038I Pass  19: suminf.    3.65930 (11) obj. -16.8893 iterations 11
Cbc0038I Pass  20: suminf.    3.65930 (11) obj. -16.8893 iterations 0
Cbc0038I Pass  21: suminf.    3.83514 (11) obj. -16.8893 iterations 6
Cbc0038I Pass  22: suminf.    2.96413 (13) obj. -16.8893 iterations 8
Cbc0038I Pass  23: suminf.    3.11118 (8) obj. -16.8893 iterations 15
Cbc0038I Pass  24: suminf.    3.00813 (9) obj. -16.8893 iterations 2
Cbc0038I Pass  25: suminf.    2.07688 (7) obj. -16.8893 iterations 4
Cbc0038I Pass  26: suminf.    2.07688 (7) obj. -16.8893 iterations 0
Cbc0038I Pass  27: suminf.    2.92529 (9) obj. -16.8893 iterations 7
Cbc0038I Pass  28: suminf.    2.33661 (8) obj. -16.8893 iterations 4
Cbc0038I Pass  29: suminf.    2.32764 (7) obj. -16.8893 iterations 1
Cbc0038I Pass  30: suminf.    3.00813 (9) obj. -16.8893 iterations 9
Cbc0038I Pass  31: suminf.    2.07688 (7) obj. -16.8893 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 110 rows 66 columns
Cbc0038I Mini branch and bound improved solution from -13.8725 to -15.1397 (0.29 seconds)
Cbc0038I Round again with cutoff of -22.3193
Cbc0038I Pass  31: suminf.    5.60847 (31) obj. -22.3193 iterations 0
Cbc0038I Pass  32: suminf.    5.38569 (39) obj. -22.3193 iterations 16
Cbc0038I Pass  33: suminf.    3.62308 (11) obj. -22.3193 iterations 41
Cbc0038I Pass  34: suminf.    3.11290 (10) obj. -22.3193 iterations 3
Cbc0038I Pass  35: suminf.    3.93508 (13) obj. -22.3193 iterations 15
Cbc0038I Pass  36: suminf.    3.74406 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  37: suminf.    4.82147 (14) obj. -22.3193 iterations 15
Cbc0038I Pass  38: suminf.    4.35305 (15) obj. -22.3193 iterations 2
Cbc0038I Pass  39: suminf.    3.76936 (11) obj. -22.3193 iterations 15
Cbc0038I Pass  40: suminf.    3.51783 (11) obj. -22.3193 iterations 3
Cbc0038I Pass  41: suminf.    4.76734 (12) obj. -22.3193 iterations 8
Cbc0038I Pass  42: suminf.    3.75505 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  43: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  44: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  45: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  46: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  47: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  48: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  49: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  50: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  51: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  52: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  53: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  54: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I Pass  55: suminf.    3.59782 (12) obj. -22.3193 iterations 3
Cbc0038I Pass  56: suminf.    4.80684 (15) obj. -22.3193 iterations 10
Cbc0038I Pass  57: suminf.    4.28562 (11) obj. -22.3193 iterations 6
Cbc0038I Pass  58: suminf.    3.69434 (11) obj. -22.3193 iterations 4
Cbc0038I Pass  59: suminf.    4.81560 (14) obj. -22.3193 iterations 11
Cbc0038I Pass  60: suminf.    3.75505 (11) obj. -22.3193 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 101 columns, reduced to 118 rows 70 columns - 1 fixed gives 113, 69 - ok now
Cbc0038I Full problem 188 rows 101 columns, reduced to 113 rows 69 columns
Cbc0038I Mini branch and bound did not improve solution (0.41 seconds)
Cbc0038I After 0.41 seconds - Feasibility pump exiting with objective of -15.1397 - took 0.34 seconds
Cbc0012I Integer solution of -15.13971 found by feasibility pump after 0 iterations and 0 nodes (0.41 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 102 rows 62 columns
Cbc0031I 41 added rows had average density of 56.243902
Cbc0013I At root node, 41 cuts changed objective from -44.039392 to -35.682108 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19378 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3444 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.196 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15.13971 best solution, best possible -35.682108 (2.13 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 77 rows 48 columns
Cbc0012I Integer solution of -15.24346 found by rounding after 12873 iterations and 79 nodes (2.59 seconds)
Cbc0038I Full problem 188 rows 101 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -15.24346, took 14205 iterations and 184 nodes (2.71 seconds)
Cbc0032I Strong branching done 1466 times (23753 iterations), fathomed 39 nodes and fixed 89 variables
Cbc0035I Maximum depth 29, 460 variables fixed on reduced cost
Total time (CPU seconds):       2.59   (Wallclock seconds):       2.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-72) rows, 145 (-58) columns and 2803 (-2851) elements
Clp1000I sum of infeasibilities 1.52418e-07 - average 1.146e-09, 43 fixed columns
Coin0506I Presolve 87 (-46) rows, 102 (-43) columns and 1577 (-1226) elements
Clp0006I 0  Obj 41.532925 Dual inf 4.9033569 (102)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 2.0771307 - largest nonzero change 2.9053855e-05 ( 0.0023600025%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 59.183876
Clp0000I Optimal - objective value 59.183876
Coin0511I After Postsolve, objective 59.183876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.183876 Dual inf 3.1694281 (2)
Clp0014I Perturbing problem by 0.001% of 1.6119245 - largest nonzero change 1.6812154e-05 ( 0.0015380202%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 60.083876
Clp0000I Optimal - objective value 60.083876
Clp0000I Optimal - objective value 60.083876
Coin0511I After Postsolve, objective 60.083876, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 60.08387603 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 133 rows, 145 columns (145 integer (145 of which binary)) and 2806 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.207%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.28114
Cbc0038I Pass   1: suminf.    3.08253 (33) obj. -30.4391 iterations 14
Cbc0038I Pass   2: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass   3: suminf.    0.47955 (8) obj. 3.41701 iterations 25
Cbc0038I Solution found of 10.9375
Cbc0038I Rounding solution of -2.28503 is better than previous of 10.9375

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 12 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -2.28503 to -2.5859 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.77366
Cbc0038I Pass   4: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass   5: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass   6: suminf.    1.49318 (20) obj. -7.77366 iterations 15
Cbc0038I Pass   7: suminf.    0.55208 (7) obj. -7.77366 iterations 16
Cbc0038I Pass   8: suminf.    0.40889 (6) obj. -8.65513 iterations 2
Cbc0038I Pass   9: suminf.    1.24315 (10) obj. -7.77366 iterations 10
Cbc0038I Pass  10: suminf.    1.19880 (10) obj. -7.77366 iterations 1
Cbc0038I Pass  11: suminf.    0.89133 (4) obj. -7.77366 iterations 11
Cbc0038I Pass  12: suminf.    0.79435 (3) obj. -7.77366 iterations 2
Cbc0038I Pass  13: suminf.    0.76191 (4) obj. -7.77366 iterations 6
Cbc0038I Pass  14: suminf.    0.76191 (4) obj. -7.77366 iterations 0
Cbc0038I Pass  15: suminf.    0.51849 (2) obj. -7.77366 iterations 5
Cbc0038I Pass  16: suminf.    0.46426 (2) obj. -7.77366 iterations 1
Cbc0038I Pass  17: suminf.    2.15812 (18) obj. -10.7017 iterations 40
Cbc0038I Pass  18: suminf.    1.85911 (15) obj. -10.3157 iterations 5
Cbc0038I Pass  19: suminf.    1.42448 (7) obj. -7.77366 iterations 25
Cbc0038I Pass  20: suminf.    1.42448 (7) obj. -7.77366 iterations 0
Cbc0038I Pass  21: suminf.    0.98455 (5) obj. -7.77366 iterations 9
Cbc0038I Pass  22: suminf.    0.80399 (5) obj. -7.95275 iterations 3
Cbc0038I Pass  23: suminf.    2.05567 (6) obj. -7.77366 iterations 5
Cbc0038I Pass  24: suminf.    1.26036 (5) obj. -7.77366 iterations 5
Cbc0038I Pass  25: suminf.    1.26036 (5) obj. -7.77366 iterations 0
Cbc0038I Pass  26: suminf.    1.38278 (5) obj. -7.77366 iterations 10
Cbc0038I Pass  27: suminf.    1.18265 (7) obj. -7.77366 iterations 3
Cbc0038I Pass  28: suminf.    1.01267 (8) obj. -7.77366 iterations 1
Cbc0038I Pass  29: suminf.    1.74594 (6) obj. -7.77366 iterations 5
Cbc0038I Pass  30: suminf.    0.83574 (7) obj. -7.77366 iterations 4
Cbc0038I Pass  31: suminf.    0.83574 (7) obj. -7.77366 iterations 0
Cbc0038I Pass  32: suminf.    0.85508 (3) obj. -7.77366 iterations 8
Cbc0038I Pass  33: suminf.    0.81157 (5) obj. -7.77366 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 26 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -2.5859 to -3.86115 (0.08 seconds)
Cbc0038I Round again with cutoff of -17.1114
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass  34: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass  35: suminf.    1.62724 (22) obj. -17.1114 iterations 26
Cbc0038I Pass  36: suminf.    1.56390 (22) obj. -17.1114 iterations 2
Cbc0038I Pass  37: suminf.    2.29615 (9) obj. -17.1114 iterations 24
Cbc0038I Pass  38: suminf.    2.21093 (10) obj. -17.1114 iterations 5
Cbc0038I Pass  39: suminf.    1.75419 (6) obj. -17.1114 iterations 12
Cbc0038I Pass  40: suminf.    1.41762 (6) obj. -17.1114 iterations 2
Cbc0038I Pass  41: suminf.    1.37654 (5) obj. -17.1114 iterations 1
Cbc0038I Pass  42: suminf.    1.63367 (5) obj. -17.1114 iterations 3
Cbc0038I Pass  43: suminf.    3.49158 (20) obj. -17.1114 iterations 29
Cbc0038I Pass  44: suminf.    2.80110 (14) obj. -17.1114 iterations 21
Cbc0038I Pass  45: suminf.    1.20182 (5) obj. -17.1114 iterations 16
Cbc0038I Pass  46: suminf.    1.19724 (5) obj. -17.1114 iterations 6
Cbc0038I Pass  47: suminf.    1.30773 (5) obj. -17.1114 iterations 9
Cbc0038I Pass  48: suminf.    3.76665 (14) obj. -17.1114 iterations 23
Cbc0038I Pass  49: suminf.    2.60090 (11) obj. -17.1114 iterations 7
Cbc0038I Pass  50: suminf.    2.45966 (12) obj. -17.1114 iterations 4
Cbc0038I Pass  51: suminf.    1.48510 (7) obj. -17.1114 iterations 13
Cbc0038I Pass  52: suminf.    1.25768 (6) obj. -17.1114 iterations 2
Cbc0038I Pass  53: suminf.    1.47235 (5) obj. -17.1114 iterations 3
Cbc0038I Pass  54: suminf.    1.23351 (5) obj. -17.1114 iterations 2
Cbc0038I Pass  55: suminf.    1.45717 (5) obj. -17.1114 iterations 3
Cbc0038I Pass  56: suminf.    1.23351 (5) obj. -17.1114 iterations 1
Cbc0038I Pass  57: suminf.    3.19628 (15) obj. -17.1114 iterations 32
Cbc0038I Pass  58: suminf.    2.94236 (15) obj. -17.1114 iterations 8
Cbc0038I Pass  59: suminf.    1.52999 (8) obj. -17.1114 iterations 15
Cbc0038I Pass  60: suminf.    1.35814 (9) obj. -17.1114 iterations 2
Cbc0038I Pass  61: suminf.    1.77574 (6) obj. -17.1114 iterations 8
Cbc0038I Pass  62: suminf.    1.63513 (6) obj. -17.1114 iterations 1
Cbc0038I Rounding solution of -5.28112 is better than previous of -3.86115

Cbc0038I Before mini branch and bound, 81 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 145 columns, reduced to 21 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -28.3168
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass  63: suminf.    3.08253 (33) obj. -30.4391 iterations 0
Cbc0038I Pass  64: suminf.    4.28618 (22) obj. -28.3168 iterations 40
Cbc0038I Pass  65: suminf.    3.74734 (23) obj. -28.3168 iterations 8
Cbc0038I Pass  66: suminf.    3.18870 (16) obj. -28.3168 iterations 22
Cbc0038I Pass  67: suminf.    2.78828 (15) obj. -28.3168 iterations 5
Cbc0038I Pass  68: suminf.    2.78828 (15) obj. -28.3168 iterations 0
Cbc0038I Pass  69: suminf.    3.07764 (14) obj. -28.3168 iterations 20
Cbc0038I Pass  70: suminf.    2.98725 (14) obj. -28.3168 iterations 3
Cbc0038I Pass  71: suminf.    3.42696 (13) obj. -28.3168 iterations 11
Cbc0038I Pass  72: suminf.    3.39370 (13) obj. -28.3168 iterations 2
Cbc0038I Pass  73: suminf.    3.42696 (13) obj. -28.3168 iterations 8
Cbc0038I Pass  74: suminf.    4.82221 (22) obj. -28.3168 iterations 17
Cbc0038I Pass  75: suminf.    3.33882 (17) obj. -28.3168 iterations 10
Cbc0038I Pass  76: suminf.    3.33882 (17) obj. -28.3168 iterations 1
Cbc0038I Pass  77: suminf.    3.42696 (13) obj. -28.3168 iterations 13
Cbc0038I Pass  78: suminf.    3.39370 (13) obj. -28.3168 iterations 4
Cbc0038I Pass  79: suminf.    3.42696 (13) obj. -28.3168 iterations 6
Cbc0038I Pass  80: suminf.    3.55576 (16) obj. -28.3168 iterations 27
Cbc0038I Pass  81: suminf.    3.34299 (16) obj. -28.3168 iterations 8
Cbc0038I Pass  82: suminf.    3.75757 (14) obj. -28.3168 iterations 14
Cbc0038I Pass  83: suminf.    3.44647 (14) obj. -28.3168 iterations 5
Cbc0038I Pass  84: suminf.    3.01727 (14) obj. -28.3168 iterations 1
Cbc0038I Pass  85: suminf.    3.44647 (14) obj. -28.3168 iterations 12
Cbc0038I Pass  86: suminf.    3.16465 (14) obj. -28.3168 iterations 1
Cbc0038I Pass  87: suminf.    5.18048 (23) obj. -28.3168 iterations 20
Cbc0038I Pass  88: suminf.    3.02962 (16) obj. -29.5038 iterations 10
Cbc0038I Pass  89: suminf.    3.80317 (15) obj. -28.3168 iterations 13
Cbc0038I Pass  90: suminf.    3.34984 (14) obj. -28.3168 iterations 10
Cbc0038I Pass  91: suminf.    2.86430 (13) obj. -28.3168 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -5.28112 - took 0.15 seconds
Cbc0012I Integer solution of -5.281116 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 2 rows 5 columns
Cbc0031I 66 added rows had average density of 60.363636
Cbc0013I At root node, 66 cuts changed objective from -54.462605 to -22.424572 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25018 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3297 row cuts average 143.6 elements, 0 column cuts (0 active)  in 0.260 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1309 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2412 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.228 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 449 row cuts average 75.2 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 81 row cuts average 16.3 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.281116 best solution, best possible -22.424572 (2.72 seconds)
Cbc0012I Integer solution of -12.63644 found by rounding after 9947 iterations and 1 nodes (2.74 seconds)
Cbc0012I Integer solution of -12.80261 found by DiveCoefficient after 10206 iterations and 1 nodes (2.77 seconds)
Cbc0012I Integer solution of -14.72411 found by rounding after 10227 iterations and 3 nodes (2.78 seconds)
Cbc0012I Integer solution of -14.94388 found by rounding after 10264 iterations and 15 nodes (2.80 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 76 rows 91 columns
Cbc0012I Integer solution of -15.24346 found by RINS after 11619 iterations and 41 nodes (3.76 seconds)
Cbc0010I After 41 nodes, 2 on tree, -15.24346 best solution, best possible -22.372722 (3.76 seconds)
Cbc0010I After 57 nodes, 6 on tree, -15.24346 best solution, best possible -22.372722 (4.59 seconds)
Cbc0038I Full problem 133 rows 145 columns, reduced to 3 rows 7 columns
Cbc0001I Search completed - best objective -15.24346, took 13771 iterations and 118 nodes (4.87 seconds)
Cbc0032I Strong branching done 928 times (13278 iterations), fathomed 33 nodes and fixed 22 variables
Cbc0035I Maximum depth 10, 191 variables fixed on reduced cost
Total time (CPU seconds):       4.67   (Wallclock seconds):       4.92

