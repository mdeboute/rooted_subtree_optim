Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.98889e-05 - average 1.45175e-07, 13 fixed columns
Coin0506I Presolve 110 (-27) rows, 61 (-14) columns and 335 (-81) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.4207249 - largest nonzero change 0 ( 0%) - largest zero change 2.8358213e-05
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Coin0511I After Postsolve, objective 38.896925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Coin0511I After Postsolve, objective 38.896925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.89692482 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.192%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.91271
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.4003 iterations 41
Cbc0038I Solution found of 11.4003
Cbc0038I Relaxing continuous gives 11.4003
Cbc0038I Rounding solution of -3.93533 is better than previous of 11.4003

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 53 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.93533 to -10.2383 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.1043
Cbc0038I Pass   2: suminf.    2.91006 (11) obj. -13.1043 iterations 13
Cbc0038I Pass   3: suminf.    1.09815 (3) obj. -13.1043 iterations 16
Cbc0038I Pass   4: suminf.    1.09815 (3) obj. -13.1043 iterations 1
Cbc0038I Pass   5: suminf.    1.48658 (6) obj. -13.1043 iterations 7
Cbc0038I Pass   6: suminf.    1.45228 (5) obj. -13.1043 iterations 1
Cbc0038I Pass   7: suminf.    0.58234 (4) obj. -13.1043 iterations 6
Cbc0038I Pass   8: suminf.    0.54177 (5) obj. -13.1043 iterations 3
Cbc0038I Pass   9: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  10: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  11: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  12: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  13: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  14: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  15: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  16: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  17: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  18: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  19: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  20: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  21: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  22: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  23: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  24: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  25: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  26: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  27: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  28: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  29: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  30: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  31: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 55 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -10.2383 - took 0.09 seconds
Cbc0012I Integer solution of -10.23834 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 53 rows 33 columns
Cbc0031I 25 added rows had average density of 40.96
Cbc0013I At root node, 25 cuts changed objective from -38.896925 to -30.052781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9833 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1354 row cuts average 74.1 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.23834 best solution, best possible -30.052781 (0.69 seconds)
Cbc0012I Integer solution of -10.24866 found by rounding after 7602 iterations and 39 nodes (0.81 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -10.24866, took 8895 iterations and 70 nodes (0.95 seconds)
Cbc0032I Strong branching done 812 times (11313 iterations), fathomed 11 nodes and fixed 35 variables
Cbc0035I Maximum depth 13, 231 variables fixed on reduced cost
Total time (CPU seconds):       0.92   (Wallclock seconds):       0.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 116 (-36) columns and 1964 (-1339) elements
Clp1000I sum of infeasibilities 1.07921e-07 - average 1.02782e-09, 30 fixed columns
Coin0506I Presolve 77 (-28) rows, 85 (-31) columns and 1099 (-865) elements
Clp0006I 0  Obj 38.871077 Dual inf 2.3957959 (85)
Clp0029I End of values pass after 85 iterations
Clp0000I Optimal - objective value 52.319523
Clp0000I Optimal - objective value 52.319523
Coin0511I After Postsolve, objective 52.319523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 52.319523
Clp0000I Optimal - objective value 52.319523
Clp0000I Optimal - objective value 52.319523
Clp0000I Optimal - objective value 52.319523
Coin0511I After Postsolve, objective 52.319523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.31952316 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 117 columns (117 integer (117 of which binary)) and 1971 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.670%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 6.44775
Cbc0038I Pass   1: suminf.    3.41784 (32) obj. -38.8237 iterations 11
Cbc0038I Pass   2: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass   3: suminf.    1.85340 (19) obj. -20.3323 iterations 13
Cbc0038I Pass   4: suminf.    0.80898 (9) obj. -6.91068 iterations 10
Cbc0038I Solution found of 1.28034
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 117 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.12672
Cbc0038I Pass   5: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass   6: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass   7: suminf.    0.43564 (4) obj. -3.12672 iterations 30
Cbc0038I Pass   8: suminf.    0.66641 (2) obj. -3.12672 iterations 6
Cbc0038I Pass   9: suminf.    0.11268 (1) obj. -3.15628 iterations 3
Cbc0038I Pass  10: suminf.    0.66641 (2) obj. -3.12672 iterations 4
Cbc0038I Pass  11: suminf.    1.44007 (10) obj. -3.12672 iterations 22
Cbc0038I Pass  12: suminf.    1.13251 (9) obj. -3.24841 iterations 14
Cbc0038I Pass  13: suminf.    0.99298 (5) obj. -3.12672 iterations 14
Cbc0038I Pass  14: suminf.    0.64378 (5) obj. -4.17432 iterations 3
Cbc0038I Pass  15: suminf.    3.27189 (18) obj. -3.12672 iterations 30
Cbc0038I Pass  16: suminf.    1.78131 (12) obj. -3.12672 iterations 12
Cbc0038I Pass  17: suminf.    1.39605 (6) obj. -3.12672 iterations 13
Cbc0038I Pass  18: suminf.    1.39605 (6) obj. -3.12672 iterations 0
Cbc0038I Pass  19: suminf.    0.71312 (4) obj. -3.12672 iterations 7
Cbc0038I Pass  20: suminf.    0.71312 (4) obj. -3.12672 iterations 3
Cbc0038I Pass  21: suminf.    0.63657 (4) obj. -3.12672 iterations 4
Cbc0038I Pass  22: suminf.    0.63657 (4) obj. -3.12672 iterations 2
Cbc0038I Pass  23: suminf.    0.71312 (4) obj. -3.12672 iterations 2
Cbc0038I Pass  24: suminf.    0.90389 (10) obj. -3.12672 iterations 23
Cbc0038I Pass  25: suminf.    0.90389 (10) obj. -3.12672 iterations 9
Cbc0038I Pass  26: suminf.    0.75350 (4) obj. -3.12672 iterations 11
Cbc0038I Pass  27: suminf.    0.35679 (4) obj. -3.12672 iterations 1
Cbc0038I Pass  28: suminf.    0.75350 (4) obj. -3.12672 iterations 2
Cbc0038I Pass  29: suminf.    1.52908 (10) obj. -3.12672 iterations 21
Cbc0038I Pass  30: suminf.    1.35060 (10) obj. -3.12672 iterations 5
Cbc0038I Pass  31: suminf.    0.39607 (5) obj. -3.12672 iterations 14
Cbc0038I Pass  32: suminf.    0.39607 (5) obj. -3.12672 iterations 1
Cbc0038I Pass  33: suminf.    0.97966 (4) obj. -3.12672 iterations 4
Cbc0038I Pass  34: suminf.    0.67059 (5) obj. -3.12672 iterations 1
Cbc0038I Rounding solution of 0.42292 is better than previous of 1.28034

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 117 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 0.42292 to -1.8363 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.0592
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass  35: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass  36: suminf.    1.27661 (14) obj. -11.0592 iterations 20
Cbc0038I Pass  37: suminf.    0.91526 (5) obj. -11.0592 iterations 21
Cbc0038I Pass  38: suminf.    0.81027 (10) obj. -11.0592 iterations 3
Cbc0038I Pass  39: suminf.    1.58103 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  40: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  41: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  42: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  43: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I Pass  44: suminf.    1.58103 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  45: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  46: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  47: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  48: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I Pass  49: suminf.    1.58103 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  50: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  51: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  52: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  53: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I Pass  54: suminf.    1.58103 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  55: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  56: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  57: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  58: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I Pass  59: suminf.    1.58103 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  60: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  61: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  62: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  63: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -1.8363 - took 0.05 seconds
Cbc0012I Integer solution of -1.8363 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 106 rows 117 columns, reduced to 12 rows 16 columns
Cbc0031I 56 added rows had average density of 34.214286
Cbc0013I At root node, 56 cuts changed objective from -42.789318 to -15.880495 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13309 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1423 row cuts average 111.7 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 382 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1023 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 355 row cuts average 63.8 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.653 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.8363 best solution, best possible -15.880495 (2.47 seconds)
Cbc0012I Integer solution of -3.962955 found by DiveCoefficient after 5825 iterations and 2 nodes (2.70 seconds)
Cbc0012I Integer solution of -7.40583 found by DiveCoefficient after 5992 iterations and 4 nodes (2.82 seconds)
Cbc0012I Integer solution of -9.23415 found by DiveCoefficient after 6129 iterations and 6 nodes (2.87 seconds)
Cbc0012I Integer solution of -10.23706 found by rounding after 6192 iterations and 10 nodes (2.88 seconds)
Cbc0038I Full problem 106 rows 117 columns, reduced to 3 rows 5 columns
Cbc0012I Integer solution of -10.24866 found by rounding after 6784 iterations and 47 nodes (2.98 seconds)
Cbc0001I Search completed - best objective -10.24866, took 7368 iterations and 64 nodes (3.03 seconds)
Cbc0032I Strong branching done 564 times (10918 iterations), fathomed 5 nodes and fixed 6 variables
Cbc0035I Maximum depth 16, 210 variables fixed on reduced cost
Total time (CPU seconds):       2.37   (Wallclock seconds):       3.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 75 (-3) columns and 416 (-37) elements
Clp1000I sum of infeasibilities 1.98889e-05 - average 1.45175e-07, 13 fixed columns
Coin0506I Presolve 110 (-27) rows, 61 (-14) columns and 335 (-81) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 0.4207249 - largest nonzero change 0 ( 0%) - largest zero change 2.8358213e-05
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Coin0511I After Postsolve, objective 38.896925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Clp0000I Optimal - objective value 38.896925
Coin0511I After Postsolve, objective 38.896925, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.89692482 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 75 columns (74 integer (74 of which binary)) and 416 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.192%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 8.91271
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 11.4003 iterations 41
Cbc0038I Solution found of 11.4003
Cbc0038I Relaxing continuous gives 11.4003
Cbc0038I Rounding solution of -3.93533 is better than previous of 11.4003

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 53 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -3.93533 to -10.2383 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.1043
Cbc0038I Pass   2: suminf.    2.91006 (11) obj. -13.1043 iterations 13
Cbc0038I Pass   3: suminf.    1.09815 (3) obj. -13.1043 iterations 16
Cbc0038I Pass   4: suminf.    1.09815 (3) obj. -13.1043 iterations 1
Cbc0038I Pass   5: suminf.    1.48658 (6) obj. -13.1043 iterations 7
Cbc0038I Pass   6: suminf.    1.45228 (5) obj. -13.1043 iterations 1
Cbc0038I Pass   7: suminf.    0.58234 (4) obj. -13.1043 iterations 6
Cbc0038I Pass   8: suminf.    0.54177 (5) obj. -13.1043 iterations 3
Cbc0038I Pass   9: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  10: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  11: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  12: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  13: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  14: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  15: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  16: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  17: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  18: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  19: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  20: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  21: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  22: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  23: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  24: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  25: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  26: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I Pass  27: suminf.    1.06530 (3) obj. -13.1043 iterations 4
Cbc0038I Pass  28: suminf.    0.54177 (5) obj. -13.1043 iterations 6
Cbc0038I Pass  29: suminf.    1.39376 (4) obj. -13.1043 iterations 6
Cbc0038I Pass  30: suminf.    1.39376 (4) obj. -13.1043 iterations 0
Cbc0038I Pass  31: suminf.    1.49150 (4) obj. -13.1043 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 75 columns, reduced to 55 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -10.2383 - took 0.09 seconds
Cbc0012I Integer solution of -10.23834 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 53 rows 33 columns
Cbc0031I 25 added rows had average density of 40.96
Cbc0013I At root node, 25 cuts changed objective from -38.896925 to -30.052781 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9833 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1354 row cuts average 74.1 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 53 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 126 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -10.23834 best solution, best possible -30.052781 (0.79 seconds)
Cbc0012I Integer solution of -10.24866 found by rounding after 7602 iterations and 39 nodes (0.92 seconds)
Cbc0038I Full problem 137 rows 75 columns, reduced to 2 rows 4 columns
Cbc0001I Search completed - best objective -10.24866, took 8895 iterations and 70 nodes (1.08 seconds)
Cbc0032I Strong branching done 812 times (11313 iterations), fathomed 11 nodes and fixed 35 variables
Cbc0035I Maximum depth 13, 231 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.09

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 116 (-37) columns and 1964 (-1340) elements
Clp1000I sum of infeasibilities 1.07921e-07 - average 1.02782e-09, 30 fixed columns
Coin0506I Presolve 77 (-28) rows, 85 (-31) columns and 1099 (-865) elements
Clp0006I 0  Obj 38.871077 Dual inf 2.3957959 (85)
Clp0029I End of values pass after 85 iterations
Clp0000I Optimal - objective value 52.319523
Clp0000I Optimal - objective value 52.319523
Coin0511I After Postsolve, objective 52.319523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 52.319523
Clp0000I Optimal - objective value 52.319523
Clp0000I Optimal - objective value 52.319523
Clp0000I Optimal - objective value 52.319523
Coin0511I After Postsolve, objective 52.319523, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 52.31952316 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 117 columns (117 integer (117 of which binary)) and 1971 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.670%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 6.44775
Cbc0038I Pass   1: suminf.    3.41784 (32) obj. -38.8237 iterations 11
Cbc0038I Pass   2: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass   3: suminf.    1.85340 (19) obj. -20.3323 iterations 13
Cbc0038I Pass   4: suminf.    0.80898 (9) obj. -6.91068 iterations 10
Cbc0038I Solution found of 1.28034
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 117 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -3.12672
Cbc0038I Pass   5: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass   6: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass   7: suminf.    0.43564 (4) obj. -3.12672 iterations 30
Cbc0038I Pass   8: suminf.    0.66641 (2) obj. -3.12672 iterations 6
Cbc0038I Pass   9: suminf.    0.11268 (1) obj. -3.15628 iterations 3
Cbc0038I Pass  10: suminf.    0.66641 (2) obj. -3.12672 iterations 4
Cbc0038I Pass  11: suminf.    1.44007 (10) obj. -3.12672 iterations 22
Cbc0038I Pass  12: suminf.    1.13251 (9) obj. -3.24841 iterations 14
Cbc0038I Pass  13: suminf.    0.99298 (5) obj. -3.12672 iterations 14
Cbc0038I Pass  14: suminf.    0.64378 (5) obj. -4.17432 iterations 3
Cbc0038I Pass  15: suminf.    3.27189 (18) obj. -3.12672 iterations 30
Cbc0038I Pass  16: suminf.    1.78131 (12) obj. -3.12672 iterations 12
Cbc0038I Pass  17: suminf.    1.39605 (6) obj. -3.12672 iterations 13
Cbc0038I Pass  18: suminf.    1.39605 (6) obj. -3.12672 iterations 0
Cbc0038I Pass  19: suminf.    0.71312 (4) obj. -3.12672 iterations 7
Cbc0038I Pass  20: suminf.    0.71312 (4) obj. -3.12672 iterations 3
Cbc0038I Pass  21: suminf.    0.63657 (4) obj. -3.12672 iterations 4
Cbc0038I Pass  22: suminf.    0.63657 (4) obj. -3.12672 iterations 2
Cbc0038I Pass  23: suminf.    0.71312 (4) obj. -3.12672 iterations 2
Cbc0038I Pass  24: suminf.    0.90389 (10) obj. -3.12672 iterations 23
Cbc0038I Pass  25: suminf.    0.90389 (10) obj. -3.12672 iterations 9
Cbc0038I Pass  26: suminf.    0.75350 (4) obj. -3.12672 iterations 11
Cbc0038I Pass  27: suminf.    0.35679 (4) obj. -3.12672 iterations 1
Cbc0038I Pass  28: suminf.    0.75350 (4) obj. -3.12672 iterations 2
Cbc0038I Pass  29: suminf.    1.52908 (10) obj. -3.12672 iterations 21
Cbc0038I Pass  30: suminf.    1.35060 (10) obj. -3.12672 iterations 5
Cbc0038I Pass  31: suminf.    0.39607 (5) obj. -3.12672 iterations 14
Cbc0038I Pass  32: suminf.    0.39607 (5) obj. -3.12672 iterations 1
Cbc0038I Pass  33: suminf.    0.97966 (4) obj. -3.12672 iterations 4
Cbc0038I Pass  34: suminf.    0.67059 (5) obj. -3.12672 iterations 1
Cbc0038I Rounding solution of 0.42292 is better than previous of 1.28034

Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 117 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound improved solution from 0.42292 to -1.8363 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.0592
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass  35: suminf.    3.41784 (32) obj. -38.8237 iterations 0
Cbc0038I Pass  36: suminf.    1.27661 (14) obj. -11.0592 iterations 20
Cbc0038I Pass  37: suminf.    0.91526 (5) obj. -11.0592 iterations 21
Cbc0038I Pass  38: suminf.    0.81027 (10) obj. -11.0592 iterations 3
Cbc0038I Pass  39: suminf.    1.58103 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  40: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  41: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  42: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  43: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I Pass  44: suminf.    1.58103 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  45: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  46: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  47: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  48: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I Pass  49: suminf.    1.58103 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  50: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  51: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  52: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  53: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I Pass  54: suminf.    1.58103 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  55: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  56: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  57: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  58: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I Pass  59: suminf.    1.58103 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  60: suminf.    1.23660 (9) obj. -11.0592 iterations 3
Cbc0038I Pass  61: suminf.    3.55437 (10) obj. -11.0592 iterations 7
Cbc0038I Pass  62: suminf.    0.66057 (10) obj. -11.0592 iterations 6
Cbc0038I Pass  63: suminf.    0.66057 (10) obj. -11.0592 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -1.8363 - took 0.05 seconds
Cbc0012I Integer solution of -1.8363 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 106 rows 117 columns, reduced to 12 rows 16 columns
Cbc0031I 56 added rows had average density of 34.214286
Cbc0013I At root node, 56 cuts changed objective from -42.789318 to -15.880495 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13309 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1423 row cuts average 111.7 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 382 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1023 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 355 row cuts average 63.8 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 57 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.768 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -1.8363 best solution, best possible -15.880495 (3.06 seconds)
Cbc0012I Integer solution of -3.962955 found by DiveCoefficient after 5825 iterations and 2 nodes (3.33 seconds)
Cbc0012I Integer solution of -7.40583 found by DiveCoefficient after 5992 iterations and 4 nodes (3.47 seconds)
Cbc0012I Integer solution of -9.23415 found by DiveCoefficient after 6129 iterations and 6 nodes (3.54 seconds)
Cbc0012I Integer solution of -10.23706 found by rounding after 6192 iterations and 10 nodes (3.54 seconds)
Cbc0038I Full problem 106 rows 117 columns, reduced to 3 rows 5 columns
Cbc0012I Integer solution of -10.24866 found by rounding after 6784 iterations and 47 nodes (3.67 seconds)
Cbc0001I Search completed - best objective -10.24866, took 7368 iterations and 64 nodes (3.73 seconds)
Cbc0032I Strong branching done 564 times (10918 iterations), fathomed 5 nodes and fixed 6 variables
Cbc0035I Maximum depth 16, 210 variables fixed on reduced cost
Total time (CPU seconds):       2.81   (Wallclock seconds):       3.75

