Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 26 (-7) columns and 130 (-53) elements
Clp1000I sum of infeasibilities 2.85179e-06 - average 6.63206e-08, 5 fixed columns
Coin0506I Presolve 31 (-12) rows, 21 (-5) columns and 97 (-33) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 130.26441
Clp0000I Optimal - objective value 130.26441
Coin0511I After Postsolve, objective 130.26441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 130.26441
Clp0000I Optimal - objective value 130.26441
Clp0000I Optimal - objective value 130.26441
Coin0511I After Postsolve, objective 130.26441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 130.2644088 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 26 columns (25 integer (25 of which binary)) and 130 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.991%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.17336
Cbc0038I Pass   1: suminf.    0.27368 (1) obj. -111.356 iterations 10
Cbc0038I Solution found of -69.1915
Cbc0038I Relaxing continuous gives -69.1915
Cbc0038I Rounding solution of -75.9788 is better than previous of -69.1915

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -75.9788 to -90.2713 (0.01 seconds)
Cbc0038I Round again with cutoff of -94.2707
Cbc0038I Pass   2: suminf.    0.27368 (1) obj. -111.356 iterations 0
Cbc0038I Pass   3: suminf.    0.43200 (1) obj. -94.2707 iterations 1
Cbc0038I Pass   4: suminf.    1.44323 (5) obj. -94.2707 iterations 8
Cbc0038I Pass   5: suminf.    1.44323 (5) obj. -94.2707 iterations 0
Cbc0038I Pass   6: suminf.    0.36728 (2) obj. -94.2707 iterations 7
Cbc0038I Pass   7: suminf.    0.15789 (1) obj. -106.472 iterations 2
Cbc0038I Pass   8: suminf.    0.44336 (1) obj. -94.2707 iterations 2
Cbc0038I Pass   9: suminf.    1.68738 (4) obj. -94.2707 iterations 14
Cbc0038I Pass  10: suminf.    1.38070 (4) obj. -94.2707 iterations 3
Cbc0038I Pass  11: suminf.    0.82324 (3) obj. -94.2707 iterations 2
Cbc0038I Pass  12: suminf.    0.47695 (2) obj. -94.2707 iterations 7
Cbc0038I Pass  13: suminf.    0.55005 (2) obj. -94.2707 iterations 4
Cbc0038I Pass  14: suminf.    1.41440 (4) obj. -94.2707 iterations 3
Cbc0038I Pass  15: suminf.    1.41440 (4) obj. -94.2707 iterations 0
Cbc0038I Pass  16: suminf.    0.87906 (5) obj. -94.2707 iterations 15
Cbc0038I Pass  17: suminf.    0.37357 (4) obj. -94.2707 iterations 2
Cbc0038I Pass  18: suminf.    0.61510 (3) obj. -94.2707 iterations 7
Cbc0038I Pass  19: suminf.    0.52433 (3) obj. -94.2707 iterations 3
Cbc0038I Pass  20: suminf.    0.77710 (3) obj. -94.2707 iterations 6
Cbc0038I Pass  21: suminf.    0.39000 (2) obj. -94.2707 iterations 2
Cbc0038I Pass  22: suminf.    0.54703 (3) obj. -94.2707 iterations 4
Cbc0038I Pass  23: suminf.    0.15859 (3) obj. -94.2707 iterations 5
Cbc0038I Pass  24: suminf.    0.09482 (1) obj. -94.2707 iterations 2
Cbc0038I Pass  25: suminf.    0.10526 (1) obj. -94.8769 iterations 1
Cbc0038I Pass  26: suminf.    0.71797 (2) obj. -94.2707 iterations 7
Cbc0038I Pass  27: suminf.    0.77639 (2) obj. -97.0984 iterations 1
Cbc0038I Pass  28: suminf.    0.71681 (2) obj. -94.2707 iterations 1
Cbc0038I Pass  29: suminf.    0.74017 (3) obj. -94.2707 iterations 3
Cbc0038I Pass  30: suminf.    0.71797 (2) obj. -94.2707 iterations 2
Cbc0038I Pass  31: suminf.    1.39151 (6) obj. -94.2707 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 29 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -90.2713 to -97.3245 (0.02 seconds)
Cbc0038I Round again with cutoff of -103.913
Cbc0038I Pass  31: suminf.    0.27368 (1) obj. -111.356 iterations 0
Cbc0038I Pass  32: suminf.    0.40191 (1) obj. -103.913 iterations 1
Cbc0038I Pass  33: suminf.    0.86630 (3) obj. -103.913 iterations 1
Cbc0038I Pass  34: suminf.    1.16565 (5) obj. -103.913 iterations 8
Cbc0038I Pass  35: suminf.    0.81882 (3) obj. -103.913 iterations 6
Cbc0038I Pass  36: suminf.    0.37565 (2) obj. -104.551 iterations 3
Cbc0038I Pass  37: suminf.    0.35987 (2) obj. -103.913 iterations 1
Cbc0038I Pass  38: suminf.    1.06531 (6) obj. -103.913 iterations 10
Cbc0038I Pass  39: suminf.    0.74978 (3) obj. -103.913 iterations 4
Cbc0038I Pass  40: suminf.    0.28765 (3) obj. -103.913 iterations 4
Cbc0038I Pass  41: suminf.    0.28765 (3) obj. -103.913 iterations 2
Cbc0038I Pass  42: suminf.    0.87450 (4) obj. -103.913 iterations 5
Cbc0038I Pass  43: suminf.    0.82821 (2) obj. -105.733 iterations 6
Cbc0038I Pass  44: suminf.    0.82821 (2) obj. -105.733 iterations 0
Cbc0038I Pass  45: suminf.    0.75987 (2) obj. -103.913 iterations 1
Cbc0038I Pass  46: suminf.    0.73191 (3) obj. -103.913 iterations 2
Cbc0038I Pass  47: suminf.    0.84585 (3) obj. -103.913 iterations 5
Cbc0038I Pass  48: suminf.    0.58048 (2) obj. -106.707 iterations 2
Cbc0038I Pass  49: suminf.    0.84585 (3) obj. -103.913 iterations 4
Cbc0038I Pass  50: suminf.    1.12364 (5) obj. -103.913 iterations 6
Cbc0038I Pass  51: suminf.    0.47989 (4) obj. -103.913 iterations 4
Cbc0038I Pass  52: suminf.    0.67426 (3) obj. -103.913 iterations 4
Cbc0038I Pass  53: suminf.    0.59617 (3) obj. -103.913 iterations 2
Cbc0038I Pass  54: suminf.    0.93966 (3) obj. -103.913 iterations 3
Cbc0038I Pass  55: suminf.    0.67809 (3) obj. -103.913 iterations 3
Cbc0038I Pass  56: suminf.    1.19331 (4) obj. -103.913 iterations 4
Cbc0038I Pass  57: suminf.    1.19331 (4) obj. -103.913 iterations 0
Cbc0038I Pass  58: suminf.    0.93542 (3) obj. -103.913 iterations 8
Cbc0038I Pass  59: suminf.    0.39265 (2) obj. -105.778 iterations 3
Cbc0038I Pass  60: suminf.    1.11003 (4) obj. -103.913 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -97.3245 - took 0.05 seconds
Cbc0012I Integer solution of -97.3245 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 42 rows 26 columns, reduced to 15 rows 12 columns
Cbc0031I 7 added rows had average density of 22.714286
Cbc0013I At root node, 7 cuts changed objective from -130.26441 to -114.08254 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 500 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 572 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 137 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -97.3245, took 2130 iterations and 20 nodes (0.22 seconds)
Cbc0032I Strong branching done 180 times (1096 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 5, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-18) rows, 53 (-9) columns and 473 (-173) elements
Clp1000I sum of infeasibilities 8.76856e-08 - average 1.94857e-09, 17 fixed columns
Coin0506I Presolve 24 (-21) rows, 31 (-22) columns and 221 (-252) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 144.09328
Clp0000I Optimal - objective value 144.09328
Coin0511I After Postsolve, objective 144.09328, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.1445475 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 145.90492
Clp0000I Optimal - objective value 145.90492
Clp0000I Optimal - objective value 145.90492
Coin0511I After Postsolve, objective 145.90492, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.9049232 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 48 columns (48 integer (48 of which binary)) and 390 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.753%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.94745
Cbc0038I Pass   1: suminf.    0.53296 (5) obj. -82.7833 iterations 11
Cbc0038I Pass   2: suminf.    0.53296 (5) obj. -82.7833 iterations 0
Cbc0038I Solution found of -73.8937
Cbc0038I Rounding solution of -89.6809 is better than previous of -73.8937

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 48 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -93.7634
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.26139 (21) obj. -93.7634 iterations 3
Cbc0038I Pass   4: suminf.    1.76813 (16) obj. -93.7634 iterations 4
Cbc0038I Pass   5: suminf.    1.56655 (5) obj. -93.7634 iterations 22
Cbc0038I Pass   6: suminf.    0.46902 (2) obj. -93.7634 iterations 5
Cbc0038I Pass   7: suminf.    0.23787 (2) obj. -103.11 iterations 1
Cbc0038I Pass   8: suminf.    0.87791 (3) obj. -102.485 iterations 4
Cbc0038I Pass   9: suminf.    0.87791 (3) obj. -102.485 iterations 1
Cbc0038I Pass  10: suminf.    0.35507 (2) obj. -93.7634 iterations 3
Cbc0038I Pass  11: suminf.    0.35507 (2) obj. -93.7634 iterations 0
Cbc0038I Pass  12: suminf.    0.61271 (2) obj. -93.7634 iterations 1
Cbc0038I Pass  13: suminf.    0.47614 (2) obj. -101.887 iterations 1
Cbc0038I Pass  14: suminf.    2.73153 (13) obj. -93.7634 iterations 14
Cbc0038I Pass  15: suminf.    2.43704 (8) obj. -93.7634 iterations 3
Cbc0038I Pass  16: suminf.    0.87456 (3) obj. -93.7634 iterations 11
Cbc0038I Pass  17: suminf.    0.75104 (4) obj. -93.7634 iterations 1
Cbc0038I Pass  18: suminf.    0.47762 (2) obj. -93.7634 iterations 2
Cbc0038I Pass  19: suminf.    0.33684 (1) obj. -94.5197 iterations 2
Cbc0038I Pass  20: suminf.    0.34987 (1) obj. -93.7634 iterations 1
Cbc0038I Pass  21: suminf.    1.44241 (4) obj. -93.7634 iterations 7
Cbc0038I Pass  22: suminf.    1.06536 (4) obj. -93.7634 iterations 3
Cbc0038I Pass  23: suminf.    0.81583 (3) obj. -93.7634 iterations 4
Cbc0038I Pass  24: suminf.    0.65447 (4) obj. -93.7634 iterations 2
Cbc0038I Pass  25: suminf.    0.62397 (2) obj. -93.7634 iterations 3
Cbc0038I Pass  26: suminf.    0.54140 (2) obj. -97.1018 iterations 1
Cbc0038I Pass  27: suminf.    0.62397 (2) obj. -93.7634 iterations 2
Cbc0038I Pass  28: suminf.    2.32584 (9) obj. -93.7634 iterations 12
Cbc0038I Pass  29: suminf.    1.97271 (7) obj. -93.7634 iterations 2
Cbc0038I Pass  30: suminf.    0.92301 (3) obj. -93.7634 iterations 6
Cbc0038I Pass  31: suminf.    0.92301 (3) obj. -93.7634 iterations 0
Cbc0038I Pass  32: suminf.    0.81298 (2) obj. -93.7634 iterations 2
Cbc0038I Rounding solution of -89.7499 is better than previous of -89.6809

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 48 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -89.7499 to -97.3244 (0.04 seconds)
Cbc0038I Round again with cutoff of -103.961
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.40922 (22) obj. -103.961 iterations 1
Cbc0038I Pass  33: suminf.    3.40922 (22) obj. -103.961 iterations 0
Cbc0038I Pass  34: suminf.    1.09298 (6) obj. -103.961 iterations 23
Cbc0038I Pass  35: suminf.    0.83859 (5) obj. -103.961 iterations 1
Cbc0038I Pass  36: suminf.    0.58752 (3) obj. -103.961 iterations 4
Cbc0038I Pass  37: suminf.    0.58752 (3) obj. -103.961 iterations 0
Cbc0038I Pass  38: suminf.    0.79217 (2) obj. -103.961 iterations 2
Cbc0038I Pass  39: suminf.    0.79217 (2) obj. -103.961 iterations 0
Cbc0038I Pass  40: suminf.    0.75163 (2) obj. -103.961 iterations 1
Cbc0038I Pass  41: suminf.    3.33327 (10) obj. -103.961 iterations 13
Cbc0038I Pass  42: suminf.    2.56962 (9) obj. -103.961 iterations 4
Cbc0038I Pass  43: suminf.    2.17585 (8) obj. -105.415 iterations 2
Cbc0038I Pass  44: suminf.    0.47692 (3) obj. -103.961 iterations 9
Cbc0038I Pass  45: suminf.    0.46912 (3) obj. -103.961 iterations 2
Cbc0038I Pass  46: suminf.    0.96432 (3) obj. -103.961 iterations 1
Cbc0038I Pass  47: suminf.    0.75604 (3) obj. -103.961 iterations 1
Cbc0038I Pass  48: suminf.    0.47692 (3) obj. -103.961 iterations 3
Cbc0038I Pass  49: suminf.    1.61145 (5) obj. -103.961 iterations 3
Cbc0038I Pass  50: suminf.    1.61145 (5) obj. -103.961 iterations 0
Cbc0038I Pass  51: suminf.    0.94226 (2) obj. -103.961 iterations 4
Cbc0038I Pass  52: suminf.    0.94226 (2) obj. -103.961 iterations 0
Cbc0038I Pass  53: suminf.    0.80691 (2) obj. -103.961 iterations 1
Cbc0038I Pass  54: suminf.    2.50153 (7) obj. -103.961 iterations 6
Cbc0038I Pass  55: suminf.    1.27516 (5) obj. -103.961 iterations 6
Cbc0038I Pass  56: suminf.    0.90921 (4) obj. -103.961 iterations 1
Cbc0038I Pass  57: suminf.    0.78444 (2) obj. -105.333 iterations 5
Cbc0038I Pass  58: suminf.    0.43254 (2) obj. -103.961 iterations 2
Cbc0038I Pass  59: suminf.    0.47436 (2) obj. -105.651 iterations 1
Cbc0038I Pass  60: suminf.    3.50427 (10) obj. -103.961 iterations 11
Cbc0038I Pass  61: suminf.    2.69500 (9) obj. -103.961 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 48 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -97.3244 - took 0.04 seconds
Cbc0012I Integer solution of -97.32442 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 40 rows 48 columns, reduced to 4 rows 7 columns
Cbc0012I Integer solution of -97.32443 found by RINS after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 21 added rows had average density of 18.52381
Cbc0013I At root node, 21 cuts changed objective from -130.50503 to -108.36036 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1678 row cuts average 2.7 elements, 5 column cuts (5 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 497 row cuts average 33.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 51 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 48 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 296 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 288 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 23 row cuts average 17.6 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -97.32443 best solution, best possible -108.36036 (1.58 seconds)
Cbc0001I Search completed - best objective -97.32443000000001, took 2698 iterations and 26 nodes (1.71 seconds)
Cbc0032I Strong branching done 304 times (2418 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 9, 26 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.72

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-22) rows, 26 (-7) columns and 130 (-53) elements
Clp1000I sum of infeasibilities 2.85179e-06 - average 6.63206e-08, 5 fixed columns
Coin0506I Presolve 31 (-12) rows, 21 (-5) columns and 97 (-33) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 130.26441
Clp0000I Optimal - objective value 130.26441
Coin0511I After Postsolve, objective 130.26441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 130.26441
Clp0000I Optimal - objective value 130.26441
Clp0000I Optimal - objective value 130.26441
Coin0511I After Postsolve, objective 130.26441, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 130.2644088 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 42 rows, 26 columns (25 integer (25 of which binary)) and 130 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.991%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 3.17336
Cbc0038I Pass   1: suminf.    0.27368 (1) obj. -111.356 iterations 10
Cbc0038I Solution found of -69.1915
Cbc0038I Relaxing continuous gives -69.1915
Cbc0038I Rounding solution of -75.9788 is better than previous of -69.1915

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 12 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -75.9788 to -90.2713 (0.01 seconds)
Cbc0038I Round again with cutoff of -94.2707
Cbc0038I Pass   2: suminf.    0.27368 (1) obj. -111.356 iterations 0
Cbc0038I Pass   3: suminf.    0.43200 (1) obj. -94.2707 iterations 1
Cbc0038I Pass   4: suminf.    1.44323 (5) obj. -94.2707 iterations 8
Cbc0038I Pass   5: suminf.    1.44323 (5) obj. -94.2707 iterations 0
Cbc0038I Pass   6: suminf.    0.36728 (2) obj. -94.2707 iterations 7
Cbc0038I Pass   7: suminf.    0.15789 (1) obj. -106.472 iterations 2
Cbc0038I Pass   8: suminf.    0.44336 (1) obj. -94.2707 iterations 2
Cbc0038I Pass   9: suminf.    1.68738 (4) obj. -94.2707 iterations 14
Cbc0038I Pass  10: suminf.    1.38070 (4) obj. -94.2707 iterations 3
Cbc0038I Pass  11: suminf.    0.82324 (3) obj. -94.2707 iterations 2
Cbc0038I Pass  12: suminf.    0.47695 (2) obj. -94.2707 iterations 7
Cbc0038I Pass  13: suminf.    0.55005 (2) obj. -94.2707 iterations 4
Cbc0038I Pass  14: suminf.    1.41440 (4) obj. -94.2707 iterations 3
Cbc0038I Pass  15: suminf.    1.41440 (4) obj. -94.2707 iterations 0
Cbc0038I Pass  16: suminf.    0.87906 (5) obj. -94.2707 iterations 15
Cbc0038I Pass  17: suminf.    0.37357 (4) obj. -94.2707 iterations 2
Cbc0038I Pass  18: suminf.    0.61510 (3) obj. -94.2707 iterations 7
Cbc0038I Pass  19: suminf.    0.52433 (3) obj. -94.2707 iterations 3
Cbc0038I Pass  20: suminf.    0.77710 (3) obj. -94.2707 iterations 6
Cbc0038I Pass  21: suminf.    0.39000 (2) obj. -94.2707 iterations 2
Cbc0038I Pass  22: suminf.    0.54703 (3) obj. -94.2707 iterations 4
Cbc0038I Pass  23: suminf.    0.15859 (3) obj. -94.2707 iterations 5
Cbc0038I Pass  24: suminf.    0.09482 (1) obj. -94.2707 iterations 2
Cbc0038I Pass  25: suminf.    0.10526 (1) obj. -94.8769 iterations 1
Cbc0038I Pass  26: suminf.    0.71797 (2) obj. -94.2707 iterations 7
Cbc0038I Pass  27: suminf.    0.77639 (2) obj. -97.0984 iterations 1
Cbc0038I Pass  28: suminf.    0.71681 (2) obj. -94.2707 iterations 1
Cbc0038I Pass  29: suminf.    0.74017 (3) obj. -94.2707 iterations 3
Cbc0038I Pass  30: suminf.    0.71797 (2) obj. -94.2707 iterations 2
Cbc0038I Pass  31: suminf.    1.39151 (6) obj. -94.2707 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 29 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -90.2713 to -97.3245 (0.03 seconds)
Cbc0038I Round again with cutoff of -103.913
Cbc0038I Pass  31: suminf.    0.27368 (1) obj. -111.356 iterations 0
Cbc0038I Pass  32: suminf.    0.40191 (1) obj. -103.913 iterations 1
Cbc0038I Pass  33: suminf.    0.86630 (3) obj. -103.913 iterations 1
Cbc0038I Pass  34: suminf.    1.16565 (5) obj. -103.913 iterations 8
Cbc0038I Pass  35: suminf.    0.81882 (3) obj. -103.913 iterations 6
Cbc0038I Pass  36: suminf.    0.37565 (2) obj. -104.551 iterations 3
Cbc0038I Pass  37: suminf.    0.35987 (2) obj. -103.913 iterations 1
Cbc0038I Pass  38: suminf.    1.06531 (6) obj. -103.913 iterations 10
Cbc0038I Pass  39: suminf.    0.74978 (3) obj. -103.913 iterations 4
Cbc0038I Pass  40: suminf.    0.28765 (3) obj. -103.913 iterations 4
Cbc0038I Pass  41: suminf.    0.28765 (3) obj. -103.913 iterations 2
Cbc0038I Pass  42: suminf.    0.87450 (4) obj. -103.913 iterations 5
Cbc0038I Pass  43: suminf.    0.82821 (2) obj. -105.733 iterations 6
Cbc0038I Pass  44: suminf.    0.82821 (2) obj. -105.733 iterations 0
Cbc0038I Pass  45: suminf.    0.75987 (2) obj. -103.913 iterations 1
Cbc0038I Pass  46: suminf.    0.73191 (3) obj. -103.913 iterations 2
Cbc0038I Pass  47: suminf.    0.84585 (3) obj. -103.913 iterations 5
Cbc0038I Pass  48: suminf.    0.58048 (2) obj. -106.707 iterations 2
Cbc0038I Pass  49: suminf.    0.84585 (3) obj. -103.913 iterations 4
Cbc0038I Pass  50: suminf.    1.12364 (5) obj. -103.913 iterations 6
Cbc0038I Pass  51: suminf.    0.47989 (4) obj. -103.913 iterations 4
Cbc0038I Pass  52: suminf.    0.67426 (3) obj. -103.913 iterations 4
Cbc0038I Pass  53: suminf.    0.59617 (3) obj. -103.913 iterations 2
Cbc0038I Pass  54: suminf.    0.93966 (3) obj. -103.913 iterations 3
Cbc0038I Pass  55: suminf.    0.67809 (3) obj. -103.913 iterations 3
Cbc0038I Pass  56: suminf.    1.19331 (4) obj. -103.913 iterations 4
Cbc0038I Pass  57: suminf.    1.19331 (4) obj. -103.913 iterations 0
Cbc0038I Pass  58: suminf.    0.93542 (3) obj. -103.913 iterations 8
Cbc0038I Pass  59: suminf.    0.39265 (2) obj. -105.778 iterations 3
Cbc0038I Pass  60: suminf.    1.11003 (4) obj. -103.913 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 42 rows 26 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -97.3245 - took 0.03 seconds
Cbc0012I Integer solution of -97.3245 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 42 rows 26 columns, reduced to 15 rows 12 columns
Cbc0031I 7 added rows had average density of 22.714286
Cbc0013I At root node, 7 cuts changed objective from -130.26441 to -114.08254 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 500 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 572 row cuts average 25.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 26 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 13 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 137 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -97.3245, took 2130 iterations and 20 nodes (0.26 seconds)
Cbc0032I Strong branching done 180 times (1096 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 5, 39 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.26

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-29) rows, 43 (-20) columns and 366 (-283) elements
Clp1000I sum of infeasibilities 0 - average 0, 38 fixed columns
Coin0506I Presolve 3 (-33) rows, 5 (-38) columns and 12 (-354) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 120.94592
Clp0000I Optimal - objective value 120.94592
Coin0511I After Postsolve, objective 120.94592, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15495297 - largest nonzero change 0 ( 0%) - largest zero change 2.8094955e-05
Clp0000I Optimal - objective value 145.90492
Clp0000I Optimal - objective value 145.90492
Clp0000I Optimal - objective value 145.90492
Coin0511I After Postsolve, objective 145.90492, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 145.9049232 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 40 rows, 48 columns (48 integer (48 of which binary)) and 390 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.753%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.94745
Cbc0038I Pass   1: suminf.    0.53296 (5) obj. -82.7833 iterations 12
Cbc0038I Pass   2: suminf.    0.53296 (5) obj. -82.7833 iterations 1
Cbc0038I Solution found of -73.8937
Cbc0038I Rounding solution of -89.6809 is better than previous of -73.8937

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 48 columns, reduced to 21 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -93.7634
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.26139 (21) obj. -93.7634 iterations 4
Cbc0038I Pass   4: suminf.    1.76813 (16) obj. -93.7634 iterations 5
Cbc0038I Pass   5: suminf.    1.56655 (5) obj. -93.7634 iterations 23
Cbc0038I Pass   6: suminf.    0.46902 (2) obj. -93.7634 iterations 7
Cbc0038I Pass   7: suminf.    0.23787 (2) obj. -103.11 iterations 1
Cbc0038I Pass   8: suminf.    0.87791 (3) obj. -102.485 iterations 5
Cbc0038I Pass   9: suminf.    0.87791 (3) obj. -102.485 iterations 2
Cbc0038I Pass  10: suminf.    0.35507 (2) obj. -93.7634 iterations 3
Cbc0038I Pass  11: suminf.    0.35507 (2) obj. -93.7634 iterations 0
Cbc0038I Pass  12: suminf.    0.61271 (2) obj. -93.7634 iterations 1
Cbc0038I Pass  13: suminf.    0.47614 (2) obj. -101.887 iterations 1
Cbc0038I Pass  14: suminf.    2.73153 (13) obj. -93.7634 iterations 14
Cbc0038I Pass  15: suminf.    2.43704 (8) obj. -93.7634 iterations 4
Cbc0038I Pass  16: suminf.    0.87456 (3) obj. -93.7634 iterations 11
Cbc0038I Pass  17: suminf.    0.75104 (4) obj. -93.7634 iterations 1
Cbc0038I Pass  18: suminf.    0.47762 (2) obj. -93.7634 iterations 3
Cbc0038I Pass  19: suminf.    0.33684 (1) obj. -94.5197 iterations 2
Cbc0038I Pass  20: suminf.    0.34987 (1) obj. -93.7634 iterations 1
Cbc0038I Pass  21: suminf.    1.44241 (4) obj. -93.7634 iterations 8
Cbc0038I Pass  22: suminf.    1.06536 (4) obj. -93.7634 iterations 4
Cbc0038I Pass  23: suminf.    0.81583 (3) obj. -93.7634 iterations 5
Cbc0038I Pass  24: suminf.    0.65447 (4) obj. -93.7634 iterations 3
Cbc0038I Pass  25: suminf.    0.62397 (2) obj. -93.7634 iterations 3
Cbc0038I Pass  26: suminf.    0.54140 (2) obj. -97.1018 iterations 1
Cbc0038I Pass  27: suminf.    0.62397 (2) obj. -93.7634 iterations 2
Cbc0038I Pass  28: suminf.    2.32584 (9) obj. -93.7634 iterations 13
Cbc0038I Pass  29: suminf.    1.97271 (7) obj. -93.7634 iterations 3
Cbc0038I Pass  30: suminf.    0.92301 (3) obj. -93.7634 iterations 7
Cbc0038I Pass  31: suminf.    0.92301 (3) obj. -93.7634 iterations 0
Cbc0038I Pass  32: suminf.    0.81298 (2) obj. -93.7634 iterations 3
Cbc0038I Rounding solution of -89.7499 is better than previous of -89.6809

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 48 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -89.7499 to -97.3244 (0.04 seconds)
Cbc0038I Round again with cutoff of -103.961
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.40922 (22) obj. -103.961 iterations 1
Cbc0038I Pass  33: suminf.    3.40922 (22) obj. -103.961 iterations 0
Cbc0038I Pass  34: suminf.    1.09298 (6) obj. -103.961 iterations 23
Cbc0038I Pass  35: suminf.    0.83859 (5) obj. -103.961 iterations 1
Cbc0038I Pass  36: suminf.    0.58752 (3) obj. -103.961 iterations 5
Cbc0038I Pass  37: suminf.    0.58752 (3) obj. -103.961 iterations 0
Cbc0038I Pass  38: suminf.    0.79217 (2) obj. -103.961 iterations 3
Cbc0038I Pass  39: suminf.    0.79217 (2) obj. -103.961 iterations 0
Cbc0038I Pass  40: suminf.    0.75163 (2) obj. -103.961 iterations 1
Cbc0038I Pass  41: suminf.    3.33327 (10) obj. -103.961 iterations 14
Cbc0038I Pass  42: suminf.    2.56962 (9) obj. -103.961 iterations 5
Cbc0038I Pass  43: suminf.    2.17585 (8) obj. -105.415 iterations 2
Cbc0038I Pass  44: suminf.    0.47692 (3) obj. -103.961 iterations 10
Cbc0038I Pass  45: suminf.    0.46912 (3) obj. -103.961 iterations 2
Cbc0038I Pass  46: suminf.    0.96432 (3) obj. -103.961 iterations 2
Cbc0038I Pass  47: suminf.    0.75604 (3) obj. -103.961 iterations 1
Cbc0038I Pass  48: suminf.    0.47692 (3) obj. -103.961 iterations 4
Cbc0038I Pass  49: suminf.    1.61145 (5) obj. -103.961 iterations 3
Cbc0038I Pass  50: suminf.    1.61145 (5) obj. -103.961 iterations 0
Cbc0038I Pass  51: suminf.    0.94226 (2) obj. -103.961 iterations 5
Cbc0038I Pass  52: suminf.    0.94226 (2) obj. -103.961 iterations 0
Cbc0038I Pass  53: suminf.    0.80691 (2) obj. -103.961 iterations 1
Cbc0038I Pass  54: suminf.    2.50153 (7) obj. -103.961 iterations 7
Cbc0038I Pass  55: suminf.    1.27516 (5) obj. -103.961 iterations 6
Cbc0038I Pass  56: suminf.    0.90921 (4) obj. -103.961 iterations 2
Cbc0038I Pass  57: suminf.    0.78444 (2) obj. -105.333 iterations 5
Cbc0038I Pass  58: suminf.    0.43254 (2) obj. -103.961 iterations 2
Cbc0038I Pass  59: suminf.    0.47436 (2) obj. -105.651 iterations 1
Cbc0038I Pass  60: suminf.    3.50427 (10) obj. -103.961 iterations 11
Cbc0038I Pass  61: suminf.    2.69500 (9) obj. -103.961 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 40 rows 48 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -97.3244 - took 0.04 seconds
Cbc0012I Integer solution of -97.32442 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 40 rows 48 columns, reduced to 4 rows 7 columns
Cbc0012I Integer solution of -97.32443 found by RINS after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 22 added rows had average density of 17.318182
Cbc0013I At root node, 22 cuts changed objective from -130.50503 to -108.14041 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1461 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 546 row cuts average 33.6 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 71 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 105 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 101 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 265 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 276 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.711 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -97.32443 best solution, best possible -108.14041 (1.48 seconds)
Cbc0001I Search completed - best objective -97.32443000000001, took 2476 iterations and 30 nodes (1.61 seconds)
Cbc0032I Strong branching done 394 times (2359 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 13, 36 variables fixed on reduced cost
Total time (CPU seconds):       1.12   (Wallclock seconds):       1.62

