Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 2.34163e-07 - average 1.3009e-08, 0 fixed columns
Coin0506I Presolve 18 (0) rows, 12 (0) columns and 52 (0) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Coin0511I After Postsolve, objective 42.58754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Coin0511I After Postsolve, objective 42.58754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.58754007 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.67724
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.8503 iterations 9
Cbc0038I Solution found of -15.8503
Cbc0038I Relaxing continuous gives -15.8503
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -18.3866
Cbc0038I Pass   2: suminf.    0.12637 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   3: suminf.    0.48610 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   4: suminf.    0.39171 (3) obj. -18.3866 iterations 4
Cbc0038I Pass   5: suminf.    0.36315 (3) obj. -18.3866 iterations 2
Cbc0038I Pass   6: suminf.    0.55418 (2) obj. -18.3866 iterations 6
Cbc0038I Pass   7: suminf.    0.42528 (1) obj. -18.3866 iterations 2
Cbc0038I Pass   8: suminf.    0.46590 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   9: suminf.    0.21053 (1) obj. -18.3866 iterations 2
Cbc0038I Pass  10: suminf.    0.21053 (1) obj. -18.3866 iterations 0
Cbc0038I Pass  11: suminf.    0.85187 (4) obj. -18.3866 iterations 9
Cbc0038I Pass  12: suminf.    0.85187 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  13: suminf.    0.48845 (8) obj. -18.3866 iterations 9
Cbc0038I Pass  14: suminf.    0.91427 (4) obj. -18.3866 iterations 11
Cbc0038I Pass  15: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  16: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  17: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  18: suminf.    0.33751 (2) obj. -18.3866 iterations 4
Cbc0038I Pass  19: suminf.    0.33751 (2) obj. -18.3866 iterations 0
Cbc0038I Pass  20: suminf.    0.31602 (1) obj. -18.3866 iterations 3
Cbc0038I Pass  21: suminf.    0.34155 (1) obj. -18.3866 iterations 1
Cbc0038I Pass  22: suminf.    0.34155 (1) obj. -18.3866 iterations 0
Cbc0038I Pass  23: suminf.    0.66898 (3) obj. -18.3866 iterations 3
Cbc0038I Pass  24: suminf.    0.71250 (2) obj. -18.3866 iterations 4
Cbc0038I Pass  25: suminf.    0.70593 (2) obj. -18.3866 iterations 2
Cbc0038I Pass  26: suminf.    0.66898 (3) obj. -18.3866 iterations 3
Cbc0038I Pass  27: suminf.    1.00295 (4) obj. -18.3866 iterations 2
Cbc0038I Pass  28: suminf.    0.94917 (4) obj. -18.3866 iterations 1
Cbc0038I Pass  29: suminf.    0.48845 (8) obj. -18.3866 iterations 7
Cbc0038I Pass  30: suminf.    0.91427 (4) obj. -18.3866 iterations 11
Cbc0038I Pass  31: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 16 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.9518
Cbc0038I Pass  31: suminf.    0.35382 (1) obj. -22.9518 iterations 0
Cbc0038I Pass  32: suminf.    0.38683 (1) obj. -22.9518 iterations 1
Cbc0038I Pass  33: suminf.    1.88459 (4) obj. -22.9518 iterations 9
Cbc0038I Pass  34: suminf.    1.29760 (3) obj. -22.9518 iterations 4
Cbc0038I Pass  35: suminf.    1.00513 (3) obj. -22.9518 iterations 3
Cbc0038I Pass  36: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  37: suminf.    0.98303 (8) obj. -22.9518 iterations 5
Cbc0038I Pass  38: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  39: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  40: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  41: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  42: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  43: suminf.    1.00045 (5) obj. -22.9518 iterations 5
Cbc0038I Pass  44: suminf.    0.31817 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  45: suminf.    1.02891 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  46: suminf.    1.00513 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  47: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  48: suminf.    0.98303 (8) obj. -22.9518 iterations 6
Cbc0038I Pass  49: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  50: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  51: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  52: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  53: suminf.    1.00045 (5) obj. -22.9518 iterations 5
Cbc0038I Pass  54: suminf.    0.31817 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  55: suminf.    1.02891 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  56: suminf.    1.00513 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  57: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  58: suminf.    0.98303 (8) obj. -22.9518 iterations 6
Cbc0038I Pass  59: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  60: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.8503 - took 0.02 seconds
Cbc0012I Integer solution of -15.85027 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 7 added rows had average density of 6.7142857
Cbc0013I At root node, 7 cuts changed objective from -41.212788 to -17.200974 in 71 passes
Cbc0014I Cut generator 0 (Probing) - 128 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15.85027, took 469 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 8 times (27 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 19 (-9) rows, 23 (-3) columns and 116 (-37) elements
Clp1000I sum of infeasibilities 1.02442e-10 - average 5.39169e-12, 15 fixed columns
Coin0506I Presolve 4 (-15) rows, 8 (-15) columns and 18 (-98) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 56.083166
Clp0000I Optimal - objective value 56.083166
Coin0511I After Postsolve, objective 56.083166, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.8172974 - largest nonzero change 1.2926654e-05 ( 0.00074300197%) - largest zero change 2.8835962e-05
Clp0000I Optimal - objective value 87.835038
Clp0000I Optimal - objective value 87.835038
Clp0000I Optimal - objective value 87.835038
Coin0511I After Postsolve, objective 87.835038, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.83503813 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 17 rows, 23 columns (23 integer (23 of which binary)) and 119 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.528%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.838072
Cbc0038I Solution found of -55.1905
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 17 rows 23 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -55.532
Cbc0038I Reduced cost fixing fixed 7 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.02250 (1) obj. -55.532 iterations 14
Cbc0038I Pass   2: suminf.    0.05882 (1) obj. -56.0832 iterations 2
Cbc0038I Pass   3: suminf.    0.57321 (4) obj. -55.532 iterations 6
Cbc0038I Pass   4: suminf.    0.58272 (5) obj. -55.9534 iterations 4
Cbc0038I Pass   5: suminf.    0.05882 (1) obj. -56.0832 iterations 7
Cbc0038I Pass   6: suminf.    0.44660 (5) obj. -55.532 iterations 7
Cbc0038I Pass   7: suminf.    0.71541 (5) obj. -55.532 iterations 13
Cbc0038I Pass   8: suminf.    0.33406 (4) obj. -55.532 iterations 5
Cbc0038I Pass   9: suminf.    0.23529 (2) obj. -56.6126 iterations 7
Cbc0038I Pass  10: suminf.    0.37745 (3) obj. -56.5965 iterations 4
Cbc0038I Pass  11: suminf.    0.55576 (4) obj. -55.532 iterations 4
Cbc0038I Pass  12: suminf.    0.58460 (4) obj. -57.5276 iterations 10
Cbc0038I Pass  13: suminf.    1.10161 (7) obj. -55.532 iterations 6
Cbc0038I Pass  14: suminf.    1.22635 (7) obj. -55.532 iterations 3
Cbc0038I Pass  15: suminf.    0.73555 (6) obj. -55.532 iterations 7
Cbc0038I Pass  16: suminf.    0.18182 (1) obj. -55.7359 iterations 9
Cbc0038I Pass  17: suminf.    0.02250 (1) obj. -55.532 iterations 4
Cbc0038I Pass  18: suminf.    0.43052 (3) obj. -55.532 iterations 6
Cbc0038I Pass  19: suminf.    0.29167 (2) obj. -55.6488 iterations 5
Cbc0038I Pass  20: suminf.    0.16720 (2) obj. -55.532 iterations 4
Cbc0038I Pass  21: suminf.    0.34848 (2) obj. -56.0693 iterations 5
Cbc0038I Pass  22: suminf.    0.05882 (1) obj. -56.0832 iterations 6
Cbc0038I Pass  23: suminf.    0.16394 (2) obj. -55.532 iterations 6
Cbc0038I Pass  24: suminf.    0.71397 (4) obj. -55.9596 iterations 5
Cbc0038I Pass  25: suminf.    0.52647 (3) obj. -55.5846 iterations 2
Cbc0038I Pass  26: suminf.    0.02250 (1) obj. -55.532 iterations 5
Cbc0038I Pass  27: suminf.    0.54772 (4) obj. -55.532 iterations 5
Cbc0038I Pass  28: suminf.    0.16720 (2) obj. -55.532 iterations 4
Cbc0038I Pass  29: suminf.    0.02250 (1) obj. -55.532 iterations 2
Cbc0038I Pass  30: suminf.    0.05882 (1) obj. -56.0832 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -55.1905 - took 0.00 seconds
Cbc0012I Integer solution of -55.19049 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -55.777671 to -55.777671 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -55.19049000000001, took 7 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 18 (-11) rows, 12 (-3) columns and 52 (-23) elements
Clp1000I sum of infeasibilities 2.34163e-07 - average 1.3009e-08, 0 fixed columns
Coin0506I Presolve 18 (0) rows, 12 (0) columns and 52 (0) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Coin0511I After Postsolve, objective 42.58754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Clp0000I Optimal - objective value 42.58754
Coin0511I After Postsolve, objective 42.58754, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.58754007 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 16 rows, 12 columns (11 integer (11 of which binary)) and 51 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.000%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.67724
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.8503 iterations 9
Cbc0038I Solution found of -15.8503
Cbc0038I Relaxing continuous gives -15.8503
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 13 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -18.3866
Cbc0038I Pass   2: suminf.    0.12637 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   3: suminf.    0.48610 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   4: suminf.    0.39171 (3) obj. -18.3866 iterations 4
Cbc0038I Pass   5: suminf.    0.36315 (3) obj. -18.3866 iterations 2
Cbc0038I Pass   6: suminf.    0.55418 (2) obj. -18.3866 iterations 6
Cbc0038I Pass   7: suminf.    0.42528 (1) obj. -18.3866 iterations 2
Cbc0038I Pass   8: suminf.    0.46590 (1) obj. -18.3866 iterations 1
Cbc0038I Pass   9: suminf.    0.21053 (1) obj. -18.3866 iterations 2
Cbc0038I Pass  10: suminf.    0.21053 (1) obj. -18.3866 iterations 0
Cbc0038I Pass  11: suminf.    0.85187 (4) obj. -18.3866 iterations 9
Cbc0038I Pass  12: suminf.    0.85187 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  13: suminf.    0.48845 (8) obj. -18.3866 iterations 9
Cbc0038I Pass  14: suminf.    0.91427 (4) obj. -18.3866 iterations 11
Cbc0038I Pass  15: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  16: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  17: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Pass  18: suminf.    0.33751 (2) obj. -18.3866 iterations 4
Cbc0038I Pass  19: suminf.    0.33751 (2) obj. -18.3866 iterations 0
Cbc0038I Pass  20: suminf.    0.31602 (1) obj. -18.3866 iterations 3
Cbc0038I Pass  21: suminf.    0.34155 (1) obj. -18.3866 iterations 1
Cbc0038I Pass  22: suminf.    0.34155 (1) obj. -18.3866 iterations 0
Cbc0038I Pass  23: suminf.    0.66898 (3) obj. -18.3866 iterations 3
Cbc0038I Pass  24: suminf.    0.71250 (2) obj. -18.3866 iterations 4
Cbc0038I Pass  25: suminf.    0.70593 (2) obj. -18.3866 iterations 2
Cbc0038I Pass  26: suminf.    0.66898 (3) obj. -18.3866 iterations 3
Cbc0038I Pass  27: suminf.    1.00295 (4) obj. -18.3866 iterations 2
Cbc0038I Pass  28: suminf.    0.94917 (4) obj. -18.3866 iterations 1
Cbc0038I Pass  29: suminf.    0.48845 (8) obj. -18.3866 iterations 7
Cbc0038I Pass  30: suminf.    0.91427 (4) obj. -18.3866 iterations 11
Cbc0038I Pass  31: suminf.    0.91427 (4) obj. -18.3866 iterations 0
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 16 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.9518
Cbc0038I Pass  31: suminf.    0.35382 (1) obj. -22.9518 iterations 0
Cbc0038I Pass  32: suminf.    0.38683 (1) obj. -22.9518 iterations 1
Cbc0038I Pass  33: suminf.    1.88459 (4) obj. -22.9518 iterations 9
Cbc0038I Pass  34: suminf.    1.29760 (3) obj. -22.9518 iterations 4
Cbc0038I Pass  35: suminf.    1.00513 (3) obj. -22.9518 iterations 3
Cbc0038I Pass  36: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  37: suminf.    0.98303 (8) obj. -22.9518 iterations 5
Cbc0038I Pass  38: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  39: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  40: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  41: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  42: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  43: suminf.    1.00045 (5) obj. -22.9518 iterations 5
Cbc0038I Pass  44: suminf.    0.31817 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  45: suminf.    1.02891 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  46: suminf.    1.00513 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  47: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  48: suminf.    0.98303 (8) obj. -22.9518 iterations 6
Cbc0038I Pass  49: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  50: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  51: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  52: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I Pass  53: suminf.    1.00045 (5) obj. -22.9518 iterations 5
Cbc0038I Pass  54: suminf.    0.31817 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  55: suminf.    1.02891 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  56: suminf.    1.00513 (3) obj. -22.9518 iterations 6
Cbc0038I Pass  57: suminf.    1.17962 (4) obj. -22.9518 iterations 3
Cbc0038I Pass  58: suminf.    0.98303 (8) obj. -22.9518 iterations 6
Cbc0038I Pass  59: suminf.    0.93794 (4) obj. -22.9518 iterations 11
Cbc0038I Pass  60: suminf.    0.93794 (4) obj. -22.9518 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 16 rows 12 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -15.8503 - took 0.01 seconds
Cbc0012I Integer solution of -15.85027 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 7 added rows had average density of 6.7142857
Cbc0013I At root node, 7 cuts changed objective from -41.212788 to -17.200974 in 71 passes
Cbc0014I Cut generator 0 (Probing) - 128 row cuts average 3.2 elements, 6 column cuts (6 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 196 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 74 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 41 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -15.85027, took 469 iterations and 2 nodes (0.04 seconds)
Cbc0032I Strong branching done 8 times (27 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 16 (-13) rows, 20 (-7) columns and 98 (-56) elements
Clp1000I sum of infeasibilities 1.81899e-12 - average 1.13687e-13, 5 fixed columns
Coin0506I Presolve 12 (-4) rows, 15 (-5) columns and 58 (-40) elements
Clp0029I End of values pass after 15 iterations
Clp0000I Optimal - objective value 47.591886
Clp0000I Optimal - objective value 47.591886
Coin0511I After Postsolve, objective 47.591886, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9413042 - largest nonzero change 0 ( 0%) - largest zero change 2.7540308e-05
Clp0000I Optimal - objective value 50.177252
Clp0000I Optimal - objective value 50.177252
Clp0000I Optimal - objective value 50.177252
Coin0511I After Postsolve, objective 50.177252, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.17725188 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 15 rows, 21 columns (21 integer (21 of which binary)) and 103 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.856%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.65238
Cbc0038I Pass   1: suminf.    0.67190 (4) obj. -24.2955 iterations 3
Cbc0038I Pass   2: suminf.    0.67190 (4) obj. -24.2955 iterations 0
Cbc0038I Solution found of 8.78891
Cbc0038I Rounding solution of -2.19316 is better than previous of 8.78891

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -5.78757
Cbc0038I Pass   3: suminf.    0.67190 (4) obj. -24.2955 iterations 0
Cbc0038I Pass   4: suminf.    0.67190 (4) obj. -24.2955 iterations 0
Cbc0038I Pass   5: suminf.    0.19020 (1) obj. -5.78757 iterations 5
Cbc0038I Pass   6: suminf.    0.18182 (1) obj. -5.93836 iterations 1
Cbc0038I Pass   7: suminf.    0.52904 (3) obj. -19.4384 iterations 4
Cbc0038I Pass   8: suminf.    0.52904 (3) obj. -19.4384 iterations 0
Cbc0038I Pass   9: suminf.    0.52705 (3) obj. -5.78757 iterations 4
Cbc0038I Pass  10: suminf.    0.50259 (2) obj. -5.78757 iterations 1
Cbc0038I Pass  11: suminf.    0.57369 (2) obj. -5.78757 iterations 1
Cbc0038I Pass  12: suminf.    0.46834 (5) obj. -5.78757 iterations 4
Cbc0038I Pass  13: suminf.    0.40703 (3) obj. -5.78757 iterations 2
Cbc0038I Pass  14: suminf.    0.50259 (2) obj. -5.78757 iterations 3
Cbc0038I Pass  15: suminf.    0.57369 (2) obj. -5.78757 iterations 1
Cbc0038I Pass  16: suminf.    1.15082 (6) obj. -5.78757 iterations 2
Cbc0038I Pass  17: suminf.    0.57369 (2) obj. -5.78757 iterations 2
Cbc0038I Pass  18: suminf.    0.76150 (6) obj. -5.78757 iterations 6
Cbc0038I Pass  19: suminf.    0.70000 (3) obj. -5.93816 iterations 3
Cbc0038I Pass  20: suminf.    0.41105 (3) obj. -5.78757 iterations 7
Cbc0038I Pass  21: suminf.    0.41105 (3) obj. -5.78757 iterations 0
Cbc0038I Pass  22: suminf.    0.87195 (3) obj. -8.49369 iterations 5
Cbc0038I Pass  23: suminf.    0.54648 (3) obj. -5.78757 iterations 5
Cbc0038I Pass  24: suminf.    0.35054 (3) obj. -5.78757 iterations 3
Cbc0038I Pass  25: suminf.    0.35054 (3) obj. -5.78757 iterations 0
Cbc0038I Pass  26: suminf.    0.13549 (2) obj. -5.78757 iterations 5
Cbc0038I Pass  27: suminf.    0.13549 (2) obj. -5.78757 iterations 0
Cbc0038I Pass  28: suminf.    0.52176 (2) obj. -5.78757 iterations 3
Cbc0038I Pass  29: suminf.    0.60865 (3) obj. -5.78757 iterations 6
Cbc0038I Pass  30: suminf.    0.32680 (2) obj. -8.93826 iterations 4
Cbc0038I Pass  31: suminf.    0.39900 (3) obj. -5.78757 iterations 7
Cbc0038I Pass  32: suminf.    0.39900 (3) obj. -5.78757 iterations 1
Cbc0038I Rounding solution of -12.0437 is better than previous of -2.19316

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 21 columns, reduced to 14 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -12.0437 to -15.8503 (0.01 seconds)
Cbc0038I Round again with cutoff of -20.3076
Cbc0038I Pass  32: suminf.    0.67190 (4) obj. -24.2955 iterations 0
Cbc0038I Pass  33: suminf.    0.67190 (4) obj. -24.2955 iterations 0
Cbc0038I Pass  34: suminf.    0.76599 (5) obj. -20.3076 iterations 4
Cbc0038I Pass  35: suminf.    0.70789 (4) obj. -20.3076 iterations 1
Cbc0038I Pass  36: suminf.    0.52896 (3) obj. -20.3076 iterations 4
Cbc0038I Pass  37: suminf.    0.45289 (4) obj. -20.3076 iterations 2
Cbc0038I Pass  38: suminf.    0.54088 (3) obj. -20.3076 iterations 6
Cbc0038I Pass  39: suminf.    0.22917 (2) obj. -24.1796 iterations 2
Cbc0038I Pass  40: suminf.    0.53920 (2) obj. -20.3076 iterations 1
Cbc0038I Pass  41: suminf.    0.33987 (3) obj. -26.0334 iterations 6
Cbc0038I Pass  42: suminf.    0.33987 (3) obj. -26.0334 iterations 0
Cbc0038I Pass  43: suminf.    0.49452 (3) obj. -20.3076 iterations 2
Cbc0038I Pass  44: suminf.    0.46560 (3) obj. -20.3076 iterations 1
Cbc0038I Pass  45: suminf.    0.67191 (3) obj. -20.3076 iterations 1
Cbc0038I Pass  46: suminf.    0.67191 (3) obj. -20.3076 iterations 0
Cbc0038I Pass  47: suminf.    0.51298 (2) obj. -20.3076 iterations 4
Cbc0038I Pass  48: suminf.    1.06772 (5) obj. -20.3076 iterations 2
Cbc0038I Pass  49: suminf.    0.57021 (2) obj. -20.3076 iterations 2
Cbc0038I Pass  50: suminf.    0.46560 (3) obj. -20.3076 iterations 2
Cbc0038I Pass  51: suminf.    0.67191 (3) obj. -20.3076 iterations 1
Cbc0038I Pass  52: suminf.    0.67191 (3) obj. -20.3076 iterations 0
Cbc0038I Pass  53: suminf.    0.51298 (2) obj. -20.3076 iterations 4
Cbc0038I Pass  54: suminf.    0.41074 (4) obj. -20.3076 iterations 2
Cbc0038I Pass  55: suminf.    0.41074 (4) obj. -20.3076 iterations 0
Cbc0038I Pass  56: suminf.    0.68548 (3) obj. -20.3076 iterations 2
Cbc0038I Pass  57: suminf.    0.55941 (3) obj. -21.1319 iterations 2
Cbc0038I Pass  58: suminf.    0.51298 (2) obj. -20.3076 iterations 3
Cbc0038I Pass  59: suminf.    0.46560 (3) obj. -20.3076 iterations 1
Cbc0038I Pass  60: suminf.    0.67191 (3) obj. -20.3076 iterations 1
Cbc0038I Pass  61: suminf.    0.67191 (3) obj. -20.3076 iterations 0
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 21 columns, reduced to 11 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -25.6562
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    0.99836 (9) obj. -25.6562 iterations 1
Cbc0038I Pass  62: suminf.    0.80263 (5) obj. -25.6562 iterations 1
Cbc0038I Pass  63: suminf.    0.95477 (4) obj. -25.6562 iterations 3
Cbc0038I Pass  64: suminf.    0.95477 (4) obj. -25.6562 iterations 0
Cbc0038I Pass  65: suminf.    0.39323 (3) obj. -25.6562 iterations 4
Cbc0038I Pass  66: suminf.    0.39323 (3) obj. -25.6562 iterations 0
Cbc0038I Pass  67: suminf.    0.60933 (3) obj. -25.6562 iterations 1
Cbc0038I Pass  68: suminf.    0.60933 (3) obj. -25.6562 iterations 0
Cbc0038I Pass  69: suminf.    0.44060 (2) obj. -25.6562 iterations 2
Cbc0038I Pass  70: suminf.    1.49264 (7) obj. -25.6562 iterations 6
Cbc0038I Pass  71: suminf.    1.29179 (5) obj. -25.6562 iterations 2
Cbc0038I Pass  72: suminf.    1.23331 (5) obj. -25.6562 iterations 2
Cbc0038I Pass  73: suminf.    1.23331 (5) obj. -25.6562 iterations 0
Cbc0038I Pass  74: suminf.    1.47541 (5) obj. -25.6562 iterations 5
Cbc0038I Pass  75: suminf.    1.47541 (5) obj. -25.6562 iterations 0
Cbc0038I Pass  76: suminf.    0.82815 (4) obj. -25.6562 iterations 4
Cbc0038I Pass  77: suminf.    0.82815 (4) obj. -25.6562 iterations 0
Cbc0038I Pass  78: suminf.    1.26566 (4) obj. -25.6562 iterations 5
Cbc0038I Pass  79: suminf.    0.94730 (4) obj. -25.6562 iterations 2
Cbc0038I Pass  80: suminf.    0.82815 (4) obj. -25.6562 iterations 4
Cbc0038I Pass  81: suminf.    1.58680 (7) obj. -25.6562 iterations 8
Cbc0038I Pass  82: suminf.    1.53125 (6) obj. -25.6562 iterations 3
Cbc0038I Pass  83: suminf.    1.12906 (4) obj. -25.6562 iterations 3
Cbc0038I Pass  84: suminf.    1.03794 (4) obj. -25.6562 iterations 1
Cbc0038I Pass  85: suminf.    1.26566 (4) obj. -25.6562 iterations 5
Cbc0038I Pass  86: suminf.    0.94730 (4) obj. -25.6562 iterations 2
Cbc0038I Pass  87: suminf.    0.82815 (4) obj. -25.6562 iterations 4
Cbc0038I Pass  88: suminf.    0.82815 (4) obj. -25.6562 iterations 0
Cbc0038I Pass  89: suminf.    1.53164 (6) obj. -25.6562 iterations 5
Cbc0038I Pass  90: suminf.    1.53164 (6) obj. -25.6562 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 15 rows 21 columns, reduced to 12 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -15.8503 - took 0.01 seconds
Cbc0012I Integer solution of -15.85027 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 15 rows 21 columns, reduced to 11 rows 14 columns
Cbc0031I 5 added rows had average density of 3.8
Cbc0013I At root node, 67 cuts changed objective from -38.136322 to -12.0437 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 33 row cuts average 4.4 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15.85027, took 3 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.06

