Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-8) rows, 22 (-2) columns and 115 (-14) elements
Clp1000I sum of infeasibilities 6.86091e-05 - average 1.75921e-06, 2 fixed columns
Coin0506I Presolve 35 (-4) rows, 20 (-2) columns and 103 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 3.3687887 - largest nonzero change 0 ( 0%) - largest zero change 1.4912486e-05
Clp0000I Optimal - objective value 62.47933
Clp0000I Optimal - objective value 62.47933
Coin0511I After Postsolve, objective 62.47933, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.47933
Clp0000I Optimal - objective value 62.47933
Clp0000I Optimal - objective value 62.47933
Coin0511I After Postsolve, objective 62.47933, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.47932988 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 122 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.2661
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.2011 iterations 16
Cbc0038I Solution found of 14.2011
Cbc0038I Relaxing continuous gives 14.2011
Cbc0038I Rounding solution of -5.76406 is better than previous of 14.2011

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -5.76406 to -34.0462 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.7347
Cbc0038I Pass   2: suminf.    1.82923 (7) obj. -36.7347 iterations 8
Cbc0038I Pass   3: suminf.    0.99297 (3) obj. -36.7347 iterations 6
Cbc0038I Pass   4: suminf.    0.68788 (3) obj. -36.7347 iterations 5
Cbc0038I Pass   5: suminf.    1.54118 (5) obj. -36.7347 iterations 4
Cbc0038I Pass   6: suminf.    0.63851 (4) obj. -36.7347 iterations 7
Cbc0038I Pass   7: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass   8: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass   9: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  10: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  11: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I Pass  12: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass  13: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass  14: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  15: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  16: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I Pass  17: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass  18: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass  19: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  20: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  21: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I Pass  22: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass  23: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass  24: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  25: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  26: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I Pass  27: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass  28: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass  29: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  30: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  31: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 27 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -34.0462 - took 0.05 seconds
Cbc0012I Integer solution of -34.04618 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 20 rows 13 columns
Cbc0031I 6 added rows had average density of 18.166667
Cbc0013I At root node, 6 cuts changed objective from -60.930239 to -44.123297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 802 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 533 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -34.04618000000001, took 1648 iterations and 2 nodes (0.13 seconds)
Cbc0032I Strong branching done 32 times (235 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-10) rows, 39 (-5) columns and 300 (-60) elements
Clp1000I sum of infeasibilities 1.60914e-08 - average 4.46985e-10, 25 fixed columns
Coin0506I Presolve 13 (-23) rows, 14 (-25) columns and 49 (-251) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 2.9346142 - largest nonzero change 1.3854507e-05 ( 0.00055269619%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 21.647795
Clp0000I Optimal - objective value 21.647795
Coin0511I After Postsolve, objective 21.647795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.1984061 - largest nonzero change 2.6343855e-05 ( 0.00089819337%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 85.74537
Clp0000I Optimal - objective value 85.74537
Clp0000I Optimal - objective value 85.74537
Coin0511I After Postsolve, objective 85.74537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.74537028 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 39 columns (39 integer (39 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.056%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.91903
Cbc0038I Pass   1: suminf.    1.61526 (12) obj. -55.0835 iterations 11
Cbc0038I Pass   2: suminf.    1.58525 (10) obj. -54.8787 iterations 2
Cbc0038I Solution found of -7.26416
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -7.26416 to -34.0462 (0.01 seconds)
Cbc0038I Round again with cutoff of -38.0321
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.61526 (12) obj. -55.0835 iterations 0
Cbc0038I Pass   4: suminf.    1.58525 (10) obj. -54.8787 iterations 2
Cbc0038I Pass   5: suminf.    1.02431 (5) obj. -38.0321 iterations 15
Cbc0038I Pass   6: suminf.    1.02431 (5) obj. -38.0321 iterations 0
Cbc0038I Pass   7: suminf.    0.49062 (3) obj. -38.0321 iterations 5
Cbc0038I Pass   8: suminf.    0.39880 (2) obj. -38.0321 iterations 3
Cbc0038I Pass   9: suminf.    0.49484 (2) obj. -38.0321 iterations 5
Cbc0038I Pass  10: suminf.    1.58114 (6) obj. -38.0321 iterations 8
Cbc0038I Pass  11: suminf.    0.87180 (4) obj. -40.3977 iterations 5
Cbc0038I Pass  12: suminf.    1.04990 (4) obj. -38.0321 iterations 6
Cbc0038I Pass  13: suminf.    0.53455 (3) obj. -38.0321 iterations 3
Cbc0038I Pass  14: suminf.    0.82817 (3) obj. -38.0321 iterations 3
Cbc0038I Pass  15: suminf.    1.45930 (7) obj. -38.0321 iterations 9
Cbc0038I Pass  16: suminf.    1.26659 (7) obj. -38.0321 iterations 1
Cbc0038I Pass  17: suminf.    0.41740 (3) obj. -38.0321 iterations 8
Cbc0038I Pass  18: suminf.    0.41740 (3) obj. -38.0321 iterations 0
Cbc0038I Pass  19: suminf.    0.50704 (3) obj. -38.0321 iterations 3
Cbc0038I Pass  20: suminf.    0.50704 (3) obj. -38.0321 iterations 0
Cbc0038I Pass  21: suminf.    0.41740 (3) obj. -38.0321 iterations 3
Cbc0038I Pass  22: suminf.    1.00600 (5) obj. -38.0321 iterations 11
Cbc0038I Pass  23: suminf.    1.00600 (5) obj. -38.0321 iterations 0
Cbc0038I Pass  24: suminf.    0.80655 (5) obj. -38.0321 iterations 4
Cbc0038I Pass  25: suminf.    0.78410 (4) obj. -38.0321 iterations 1
Cbc0038I Pass  26: suminf.    0.85602 (5) obj. -38.0321 iterations 6
Cbc0038I Pass  27: suminf.    0.80895 (4) obj. -38.0321 iterations 2
Cbc0038I Pass  28: suminf.    0.80655 (5) obj. -38.0321 iterations 3
Cbc0038I Pass  29: suminf.    1.80035 (6) obj. -38.0321 iterations 14
Cbc0038I Pass  30: suminf.    1.80035 (6) obj. -38.0321 iterations 1
Cbc0038I Pass  31: suminf.    1.04164 (4) obj. -38.0321 iterations 7
Cbc0038I Pass  32: suminf.    1.03364 (4) obj. -38.0321 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -34.0462 - took 0.01 seconds
Cbc0012I Integer solution of -34.04618 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 39 columns, reduced to 3 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 3.3333333
Cbc0013I At root node, 9 cuts changed objective from -73.904439 to -36.169329 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 68 row cuts average 2.1 elements, 13 column cuts (13 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -34.04618000000001, took 51 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-8) rows, 22 (-2) columns and 115 (-14) elements
Clp1000I sum of infeasibilities 6.86091e-05 - average 1.75921e-06, 2 fixed columns
Coin0506I Presolve 35 (-4) rows, 20 (-2) columns and 103 (-12) elements
Clp0029I End of values pass after 20 iterations
Clp0014I Perturbing problem by 0.001% of 3.3687887 - largest nonzero change 0 ( 0%) - largest zero change 1.4912486e-05
Clp0000I Optimal - objective value 62.47933
Clp0000I Optimal - objective value 62.47933
Coin0511I After Postsolve, objective 62.47933, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.47933
Clp0000I Optimal - objective value 62.47933
Clp0000I Optimal - objective value 62.47933
Coin0511I After Postsolve, objective 62.47933, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.47932988 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 22 columns (21 integer (21 of which binary)) and 122 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.2661
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.2011 iterations 16
Cbc0038I Solution found of 14.2011
Cbc0038I Relaxing continuous gives 14.2011
Cbc0038I Rounding solution of -5.76406 is better than previous of 14.2011

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -5.76406 to -34.0462 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.7347
Cbc0038I Pass   2: suminf.    1.82923 (7) obj. -36.7347 iterations 8
Cbc0038I Pass   3: suminf.    0.99297 (3) obj. -36.7347 iterations 6
Cbc0038I Pass   4: suminf.    0.68788 (3) obj. -36.7347 iterations 5
Cbc0038I Pass   5: suminf.    1.54118 (5) obj. -36.7347 iterations 4
Cbc0038I Pass   6: suminf.    0.63851 (4) obj. -36.7347 iterations 7
Cbc0038I Pass   7: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass   8: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass   9: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  10: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  11: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I Pass  12: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass  13: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass  14: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  15: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  16: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I Pass  17: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass  18: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass  19: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  20: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  21: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I Pass  22: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass  23: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass  24: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  25: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  26: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I Pass  27: suminf.    0.63851 (4) obj. -36.7347 iterations 1
Cbc0038I Pass  28: suminf.    1.43441 (4) obj. -36.7347 iterations 7
Cbc0038I Pass  29: suminf.    0.46854 (4) obj. -36.7347 iterations 2
Cbc0038I Pass  30: suminf.    1.45167 (5) obj. -36.7347 iterations 4
Cbc0038I Pass  31: suminf.    0.63851 (4) obj. -36.7347 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 22 columns, reduced to 27 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -34.0462 - took 0.02 seconds
Cbc0012I Integer solution of -34.04618 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 38 rows 22 columns, reduced to 20 rows 13 columns
Cbc0031I 6 added rows had average density of 18.166667
Cbc0013I At root node, 6 cuts changed objective from -60.930239 to -44.123297 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 802 row cuts average 3.5 elements, 2 column cuts (2 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 533 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 80 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -34.04618000000001, took 1648 iterations and 2 nodes (0.14 seconds)
Cbc0032I Strong branching done 32 times (235 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 39 (-6) columns and 300 (-61) elements
Clp1000I sum of infeasibilities 1.60914e-08 - average 4.46985e-10, 25 fixed columns
Coin0506I Presolve 13 (-23) rows, 14 (-25) columns and 49 (-251) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 2.9346142 - largest nonzero change 1.3854507e-05 ( 0.00055269619%) - largest zero change 1.2037643e-05
Clp0000I Optimal - objective value 21.647795
Clp0000I Optimal - objective value 21.647795
Coin0511I After Postsolve, objective 21.647795, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.1984061 - largest nonzero change 2.6343855e-05 ( 0.00089819337%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 85.74537
Clp0000I Optimal - objective value 85.74537
Clp0000I Optimal - objective value 85.74537
Coin0511I After Postsolve, objective 85.74537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.74537028 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 39 columns (39 integer (39 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.056%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.91903
Cbc0038I Pass   1: suminf.    1.61526 (12) obj. -55.0835 iterations 11
Cbc0038I Pass   2: suminf.    1.58525 (10) obj. -54.8787 iterations 2
Cbc0038I Solution found of -7.26416
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -7.26416 to -34.0462 (0.01 seconds)
Cbc0038I Round again with cutoff of -38.0321
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.61526 (12) obj. -55.0835 iterations 0
Cbc0038I Pass   4: suminf.    1.58525 (10) obj. -54.8787 iterations 2
Cbc0038I Pass   5: suminf.    1.02431 (5) obj. -38.0321 iterations 15
Cbc0038I Pass   6: suminf.    1.02431 (5) obj. -38.0321 iterations 0
Cbc0038I Pass   7: suminf.    0.49062 (3) obj. -38.0321 iterations 5
Cbc0038I Pass   8: suminf.    0.39880 (2) obj. -38.0321 iterations 3
Cbc0038I Pass   9: suminf.    0.49484 (2) obj. -38.0321 iterations 5
Cbc0038I Pass  10: suminf.    1.58114 (6) obj. -38.0321 iterations 8
Cbc0038I Pass  11: suminf.    0.87180 (4) obj. -40.3977 iterations 5
Cbc0038I Pass  12: suminf.    1.04990 (4) obj. -38.0321 iterations 6
Cbc0038I Pass  13: suminf.    0.53455 (3) obj. -38.0321 iterations 3
Cbc0038I Pass  14: suminf.    0.82817 (3) obj. -38.0321 iterations 3
Cbc0038I Pass  15: suminf.    1.45930 (7) obj. -38.0321 iterations 9
Cbc0038I Pass  16: suminf.    1.26659 (7) obj. -38.0321 iterations 1
Cbc0038I Pass  17: suminf.    0.41740 (3) obj. -38.0321 iterations 8
Cbc0038I Pass  18: suminf.    0.41740 (3) obj. -38.0321 iterations 0
Cbc0038I Pass  19: suminf.    0.50704 (3) obj. -38.0321 iterations 3
Cbc0038I Pass  20: suminf.    0.50704 (3) obj. -38.0321 iterations 0
Cbc0038I Pass  21: suminf.    0.41740 (3) obj. -38.0321 iterations 3
Cbc0038I Pass  22: suminf.    1.00600 (5) obj. -38.0321 iterations 11
Cbc0038I Pass  23: suminf.    1.00600 (5) obj. -38.0321 iterations 0
Cbc0038I Pass  24: suminf.    0.80655 (5) obj. -38.0321 iterations 4
Cbc0038I Pass  25: suminf.    0.78410 (4) obj. -38.0321 iterations 1
Cbc0038I Pass  26: suminf.    0.85602 (5) obj. -38.0321 iterations 6
Cbc0038I Pass  27: suminf.    0.80895 (4) obj. -38.0321 iterations 2
Cbc0038I Pass  28: suminf.    0.80655 (5) obj. -38.0321 iterations 3
Cbc0038I Pass  29: suminf.    1.80035 (6) obj. -38.0321 iterations 14
Cbc0038I Pass  30: suminf.    1.80035 (6) obj. -38.0321 iterations 1
Cbc0038I Pass  31: suminf.    1.04164 (4) obj. -38.0321 iterations 7
Cbc0038I Pass  32: suminf.    1.03364 (4) obj. -38.0321 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 39 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -34.0462 - took 0.01 seconds
Cbc0012I Integer solution of -34.04618 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 35 rows 39 columns, reduced to 3 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 3.3333333
Cbc0013I At root node, 9 cuts changed objective from -73.904439 to -36.169329 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 68 row cuts average 2.1 elements, 13 column cuts (13 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 11 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -34.04618000000001, took 51 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.07

