Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 28 (-4) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 9.22079e-06 - average 1.77323e-07, 1 fixed columns
Coin0506I Presolve 50 (-2) rows, 27 (-1) columns and 146 (-6) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Coin0511I After Postsolve, objective 79.15983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31394075 - largest nonzero change 0 ( 0%) - largest zero change 2.4390152e-05
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Coin0511I After Postsolve, objective 79.15983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.15983042 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 28 columns (27 integer (27 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.321%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.60391
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.2417 iterations 21
Cbc0038I Solution found of -16.2417
Cbc0038I Relaxing continuous gives -16.2417
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -16.2417 to -17.3564 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.5256
Cbc0038I Pass   2: suminf.    0.15437 (3) obj. -23.5256 iterations 3
Cbc0038I Pass   3: suminf.    0.18851 (1) obj. -23.5256 iterations 3
Cbc0038I Pass   4: suminf.    0.31478 (2) obj. -23.5256 iterations 2
Cbc0038I Pass   5: suminf.    0.47077 (1) obj. -23.5256 iterations 2
Cbc0038I Pass   6: suminf.    0.33699 (1) obj. -23.5256 iterations 1
Cbc0038I Pass   7: suminf.    2.23455 (9) obj. -23.5256 iterations 8
Cbc0038I Pass   8: suminf.    1.01547 (6) obj. -23.5256 iterations 5
Cbc0038I Pass   9: suminf.    0.35815 (3) obj. -23.5256 iterations 6
Cbc0038I Pass  10: suminf.    0.33054 (2) obj. -23.5256 iterations 5
Cbc0038I Pass  11: suminf.    0.56087 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  12: suminf.    0.33699 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  13: suminf.    0.47077 (1) obj. -23.5256 iterations 1
Cbc0038I Pass  14: suminf.    2.83330 (7) obj. -23.5256 iterations 6
Cbc0038I Pass  15: suminf.    0.81203 (2) obj. -23.5256 iterations 5
Cbc0038I Pass  16: suminf.    1.79624 (8) obj. -23.5256 iterations 9
Cbc0038I Pass  17: suminf.    0.34639 (2) obj. -23.5256 iterations 6
Cbc0038I Pass  18: suminf.    0.18548 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  19: suminf.    0.56761 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  20: suminf.    0.15323 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  21: suminf.    0.36004 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  22: suminf.    0.18851 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  23: suminf.    0.31478 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  24: suminf.    0.47077 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  25: suminf.    0.33699 (1) obj. -23.5256 iterations 1
Cbc0038I Pass  26: suminf.    1.25824 (8) obj. -23.5256 iterations 9
Cbc0038I Pass  27: suminf.    0.94029 (5) obj. -23.5256 iterations 3
Cbc0038I Pass  28: suminf.    0.57308 (2) obj. -23.5256 iterations 7
Cbc0038I Pass  29: suminf.    0.18851 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  30: suminf.    0.33054 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  31: suminf.    0.56087 (2) obj. -23.5256 iterations 2
Cbc0038I Rounding solution of -17.833 is better than previous of -17.3564

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -17.833 to -26.2446 (0.02 seconds)
Cbc0038I Round again with cutoff of -36.8054
Cbc0038I Pass  31: suminf.    0.68569 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  32: suminf.    0.90921 (2) obj. -36.8054 iterations 4
Cbc0038I Pass  33: suminf.    0.63940 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  34: suminf.    1.78465 (5) obj. -36.8054 iterations 6
Cbc0038I Pass  35: suminf.    0.31604 (3) obj. -36.8054 iterations 4
Cbc0038I Pass  36: suminf.    0.31604 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  37: suminf.    0.54159 (6) obj. -36.8054 iterations 6
Cbc0038I Pass  38: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  39: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I Pass  40: suminf.    2.47803 (10) obj. -36.8054 iterations 11
Cbc0038I Pass  41: suminf.    0.64624 (4) obj. -36.8054 iterations 11
Cbc0038I Pass  42: suminf.    0.43384 (3) obj. -36.8054 iterations 5
Cbc0038I Pass  43: suminf.    0.78714 (3) obj. -36.8054 iterations 5
Cbc0038I Pass  44: suminf.    0.77775 (5) obj. -36.8054 iterations 3
Cbc0038I Pass  45: suminf.    1.15062 (4) obj. -36.8054 iterations 6
Cbc0038I Pass  46: suminf.    0.65922 (2) obj. -36.8054 iterations 3
Cbc0038I Pass  47: suminf.    0.32283 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  48: suminf.    0.31604 (3) obj. -36.8054 iterations 3
Cbc0038I Pass  49: suminf.    0.31604 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  50: suminf.    0.54159 (6) obj. -36.8054 iterations 6
Cbc0038I Pass  51: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  52: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I Pass  53: suminf.    1.02939 (6) obj. -36.8054 iterations 5
Cbc0038I Pass  54: suminf.    0.72381 (4) obj. -36.8054 iterations 2
Cbc0038I Pass  55: suminf.    0.66464 (4) obj. -36.8054 iterations 6
Cbc0038I Pass  56: suminf.    0.52429 (2) obj. -36.8054 iterations 6
Cbc0038I Pass  57: suminf.    0.42992 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  58: suminf.    0.54159 (6) obj. -36.8054 iterations 4
Cbc0038I Pass  59: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  60: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.2446 - took 0.05 seconds
Cbc0012I Integer solution of -26.2446 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 28 columns, reduced to 31 rows 17 columns
Cbc0031I 13 added rows had average density of 22.384615
Cbc0013I At root node, 13 cuts changed objective from -79.048067 to -40.540147 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2301 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 825 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.2446, took 2793 iterations and 4 nodes (0.22 seconds)
Cbc0032I Strong branching done 64 times (1087 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-12) rows, 52 (-8) columns and 508 (-104) elements
Clp1000I sum of infeasibilities 0 - average 0, 42 fixed columns
Coin0506I Presolve 10 (-40) rows, 10 (-42) columns and 35 (-473) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 41.643667
Clp0000I Optimal - objective value 41.643667
Coin0511I After Postsolve, objective 41.643667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2183654 - largest nonzero change 0 ( 0%) - largest zero change 2.2616025e-05
Clp0000I Optimal - objective value 165.86329
Clp0000I Optimal - objective value 165.86329
Clp0000I Optimal - objective value 165.86329
Coin0511I After Postsolve, objective 165.86329, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 165.8632935 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 53 columns (53 integer (53 of which binary)) and 499 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.953%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.37758
Cbc0038I Pass   1: suminf.    2.76360 (15) obj. -67.6409 iterations 5
Cbc0038I Pass   2: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Solution found of -5.96945
Cbc0038I Rounding solution of -14.8529 is better than previous of -5.96945

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.3138
Cbc0038I Pass   3: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Pass   4: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Pass   5: suminf.    0.39953 (1) obj. -22.3138 iterations 17
Cbc0038I Pass   6: suminf.    0.29839 (1) obj. -34.6715 iterations 1
Cbc0038I Pass   7: suminf.    1.43708 (6) obj. -39.1455 iterations 11
Cbc0038I Pass   8: suminf.    1.43708 (6) obj. -39.1455 iterations 2
Cbc0038I Pass   9: suminf.    1.15007 (3) obj. -22.3138 iterations 6
Cbc0038I Pass  10: suminf.    1.15007 (3) obj. -22.3138 iterations 0
Cbc0038I Pass  11: suminf.    1.15537 (3) obj. -22.3138 iterations 1
Cbc0038I Pass  12: suminf.    1.15537 (3) obj. -22.3138 iterations 0
Cbc0038I Pass  13: suminf.    1.15007 (3) obj. -22.3138 iterations 1
Cbc0038I Pass  14: suminf.    1.76019 (7) obj. -22.3138 iterations 11
Cbc0038I Pass  15: suminf.    1.45019 (4) obj. -24.2295 iterations 4
Cbc0038I Pass  16: suminf.    1.66657 (4) obj. -22.3138 iterations 7
Cbc0038I Pass  17: suminf.    1.59730 (5) obj. -22.3138 iterations 1
Cbc0038I Pass  18: suminf.    1.51307 (5) obj. -22.3138 iterations 1
Cbc0038I Pass  19: suminf.    0.97983 (3) obj. -22.3138 iterations 4
Cbc0038I Pass  20: suminf.    0.97983 (3) obj. -22.3138 iterations 0
Cbc0038I Pass  21: suminf.    1.02553 (3) obj. -22.3138 iterations 1
Cbc0038I Pass  22: suminf.    1.02553 (3) obj. -22.3138 iterations 0
Cbc0038I Pass  23: suminf.    0.97983 (3) obj. -22.3138 iterations 1
Cbc0038I Pass  24: suminf.    2.19002 (8) obj. -26.524 iterations 13
Cbc0038I Pass  25: suminf.    1.99432 (8) obj. -22.3138 iterations 1
Cbc0038I Pass  26: suminf.    1.37179 (3) obj. -22.3138 iterations 10
Cbc0038I Pass  27: suminf.    1.34067 (3) obj. -22.7183 iterations 1
Cbc0038I Pass  28: suminf.    1.37179 (3) obj. -22.3138 iterations 2
Cbc0038I Pass  29: suminf.    2.02453 (6) obj. -22.3138 iterations 18
Cbc0038I Pass  30: suminf.    2.02453 (6) obj. -22.3138 iterations 0
Cbc0038I Pass  31: suminf.    1.90706 (5) obj. -22.3138 iterations 2
Cbc0038I Pass  32: suminf.    1.90706 (5) obj. -22.3138 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 53 columns, reduced to 12 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -5.96945 to -19.2331 (0.02 seconds)
Cbc0038I Round again with cutoff of -35.7431
Cbc0038I Pass  32: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Pass  33: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Pass  34: suminf.    0.36536 (2) obj. -35.7431 iterations 18
Cbc0038I Pass  35: suminf.    0.36536 (2) obj. -35.7431 iterations 0
Cbc0038I Pass  36: suminf.    0.81187 (2) obj. -35.7431 iterations 1
Cbc0038I Pass  37: suminf.    3.99296 (13) obj. -35.7431 iterations 27
Cbc0038I Pass  38: suminf.    3.42398 (12) obj. -35.7431 iterations 3
Cbc0038I Pass  39: suminf.    1.61802 (5) obj. -35.7431 iterations 12
Cbc0038I Pass  40: suminf.    1.61802 (5) obj. -35.7431 iterations 0
Cbc0038I Pass  41: suminf.    1.67948 (5) obj. -35.7431 iterations 1
Cbc0038I Pass  42: suminf.    1.28831 (6) obj. -35.7431 iterations 1
Cbc0038I Pass  43: suminf.    1.61802 (5) obj. -35.7431 iterations 3
Cbc0038I Pass  44: suminf.    2.13102 (7) obj. -35.7431 iterations 9
Cbc0038I Pass  45: suminf.    2.13102 (7) obj. -35.7431 iterations 0
Cbc0038I Pass  46: suminf.    1.82243 (5) obj. -35.7431 iterations 3
Cbc0038I Pass  47: suminf.    1.70487 (5) obj. -36.6835 iterations 1
Cbc0038I Pass  48: suminf.    1.82243 (5) obj. -35.7431 iterations 2
Cbc0038I Pass  49: suminf.    2.65807 (8) obj. -35.7431 iterations 14
Cbc0038I Pass  50: suminf.    2.64414 (8) obj. -35.966 iterations 3
Cbc0038I Pass  51: suminf.    2.46484 (6) obj. -35.7431 iterations 8
Cbc0038I Pass  52: suminf.    2.16459 (6) obj. -38.1451 iterations 1
Cbc0038I Pass  53: suminf.    3.58411 (11) obj. -38.1526 iterations 8
Cbc0038I Pass  54: suminf.    3.58411 (11) obj. -38.1526 iterations 1
Cbc0038I Pass  55: suminf.    2.77199 (8) obj. -35.7431 iterations 8
Cbc0038I Pass  56: suminf.    2.77834 (8) obj. -35.7431 iterations 1
Cbc0038I Pass  57: suminf.    2.42912 (7) obj. -35.7431 iterations 1
Cbc0038I Pass  58: suminf.    2.10774 (7) obj. -37.9927 iterations 1
Cbc0038I Pass  59: suminf.    2.88197 (13) obj. -35.7431 iterations 11
Cbc0038I Pass  60: suminf.    2.78185 (11) obj. -37.7784 iterations 3
Cbc0038I Pass  61: suminf.    2.54066 (7) obj. -35.7431 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 53 columns, reduced to 17 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -19.2331 to -23.5526 (0.03 seconds)
Cbc0038I Round again with cutoff of -51.8582
Cbc0038I Pass  61: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Pass  62: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Pass  63: suminf.    1.12006 (3) obj. -51.8582 iterations 17
Cbc0038I Pass  64: suminf.    1.02782 (3) obj. -53.0574 iterations 1
Cbc0038I Pass  65: suminf.    2.55337 (8) obj. -51.8582 iterations 9
Cbc0038I Pass  66: suminf.    2.21828 (7) obj. -51.8582 iterations 2
Cbc0038I Pass  67: suminf.    2.10689 (6) obj. -53.2473 iterations 2
Cbc0038I Pass  68: suminf.    1.79315 (5) obj. -51.8582 iterations 6
Cbc0038I Pass  69: suminf.    1.79315 (5) obj. -51.8582 iterations 0
Cbc0038I Pass  70: suminf.    2.01972 (5) obj. -51.8582 iterations 1
Cbc0038I Pass  71: suminf.    2.01972 (5) obj. -51.8582 iterations 0
Cbc0038I Pass  72: suminf.    1.79315 (5) obj. -51.8582 iterations 1
Cbc0038I Pass  73: suminf.    2.71495 (8) obj. -51.8582 iterations 8
Cbc0038I Pass  74: suminf.    2.71495 (8) obj. -51.8582 iterations 1
Cbc0038I Pass  75: suminf.    1.88114 (5) obj. -51.8582 iterations 4
Cbc0038I Pass  76: suminf.    1.84540 (5) obj. -52.1442 iterations 1
Cbc0038I Pass  77: suminf.    1.88114 (5) obj. -51.8582 iterations 2
Cbc0038I Pass  78: suminf.    2.65319 (7) obj. -51.8582 iterations 12
Cbc0038I Pass  79: suminf.    2.65319 (7) obj. -51.8582 iterations 1
Cbc0038I Pass  80: suminf.    2.47430 (6) obj. -51.8582 iterations 4
Cbc0038I Pass  81: suminf.    2.47430 (6) obj. -51.8582 iterations 0
Cbc0038I Pass  82: suminf.    1.92799 (6) obj. -51.8582 iterations 1
Cbc0038I Pass  83: suminf.    1.92799 (6) obj. -51.8582 iterations 0
Cbc0038I Pass  84: suminf.    2.06958 (7) obj. -51.8582 iterations 6
Cbc0038I Pass  85: suminf.    2.06958 (7) obj. -51.8582 iterations 1
Cbc0038I Pass  86: suminf.    2.06958 (7) obj. -51.8582 iterations 0
Cbc0038I Pass  87: suminf.    3.10942 (11) obj. -51.8582 iterations 6
Cbc0038I Pass  88: suminf.    2.25645 (7) obj. -51.8582 iterations 2
Cbc0038I Pass  89: suminf.    2.25645 (7) obj. -51.8582 iterations 0
Cbc0038I Pass  90: suminf.    2.35471 (6) obj. -51.8582 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 53 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -23.5526 - took 0.03 seconds
Cbc0012I Integer solution of -23.552562 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -24.86832 found by DiveCoefficient after 2338 iterations and 0 nodes (1.41 seconds)
Cbc0031I 31 added rows had average density of 8
Cbc0013I At root node, 31 cuts changed objective from -89.46028 to -27.769523 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3364 row cuts average 3.7 elements, 1 column cuts (1 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1053 row cuts average 46.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 181 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 420 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 439 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 256 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 68 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.637 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.86832 best solution, best possible -27.769523 (1.42 seconds)
Cbc0004I Integer solution of -26.2446 found after 2740 iterations and 4 nodes (1.50 seconds)
Cbc0001I Search completed - best objective -26.2446, took 2740 iterations and 4 nodes (1.50 seconds)
Cbc0032I Strong branching done 104 times (1820 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 6 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 28 (-4) columns and 152 (-25) elements
Clp1000I sum of infeasibilities 9.22079e-06 - average 1.77323e-07, 1 fixed columns
Coin0506I Presolve 50 (-2) rows, 27 (-1) columns and 146 (-6) elements
Clp0029I End of values pass after 27 iterations
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Coin0511I After Postsolve, objective 79.15983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.31394075 - largest nonzero change 0 ( 0%) - largest zero change 2.4390152e-05
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Clp0000I Optimal - objective value 79.15983
Coin0511I After Postsolve, objective 79.15983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.15983042 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 28 columns (27 integer (27 of which binary)) and 153 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.321%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.60391
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -16.2417 iterations 21
Cbc0038I Solution found of -16.2417
Cbc0038I Relaxing continuous gives -16.2417
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 25 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -16.2417 to -17.3564 (0.01 seconds)
Cbc0038I Round again with cutoff of -23.5256
Cbc0038I Pass   2: suminf.    0.15437 (3) obj. -23.5256 iterations 3
Cbc0038I Pass   3: suminf.    0.18851 (1) obj. -23.5256 iterations 3
Cbc0038I Pass   4: suminf.    0.31478 (2) obj. -23.5256 iterations 2
Cbc0038I Pass   5: suminf.    0.47077 (1) obj. -23.5256 iterations 2
Cbc0038I Pass   6: suminf.    0.33699 (1) obj. -23.5256 iterations 1
Cbc0038I Pass   7: suminf.    2.23455 (9) obj. -23.5256 iterations 8
Cbc0038I Pass   8: suminf.    1.01547 (6) obj. -23.5256 iterations 5
Cbc0038I Pass   9: suminf.    0.35815 (3) obj. -23.5256 iterations 6
Cbc0038I Pass  10: suminf.    0.33054 (2) obj. -23.5256 iterations 5
Cbc0038I Pass  11: suminf.    0.56087 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  12: suminf.    0.33699 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  13: suminf.    0.47077 (1) obj. -23.5256 iterations 1
Cbc0038I Pass  14: suminf.    2.83330 (7) obj. -23.5256 iterations 6
Cbc0038I Pass  15: suminf.    0.81203 (2) obj. -23.5256 iterations 5
Cbc0038I Pass  16: suminf.    1.79624 (8) obj. -23.5256 iterations 9
Cbc0038I Pass  17: suminf.    0.34639 (2) obj. -23.5256 iterations 6
Cbc0038I Pass  18: suminf.    0.18548 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  19: suminf.    0.56761 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  20: suminf.    0.15323 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  21: suminf.    0.36004 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  22: suminf.    0.18851 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  23: suminf.    0.31478 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  24: suminf.    0.47077 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  25: suminf.    0.33699 (1) obj. -23.5256 iterations 1
Cbc0038I Pass  26: suminf.    1.25824 (8) obj. -23.5256 iterations 9
Cbc0038I Pass  27: suminf.    0.94029 (5) obj. -23.5256 iterations 3
Cbc0038I Pass  28: suminf.    0.57308 (2) obj. -23.5256 iterations 7
Cbc0038I Pass  29: suminf.    0.18851 (1) obj. -23.5256 iterations 2
Cbc0038I Pass  30: suminf.    0.33054 (2) obj. -23.5256 iterations 2
Cbc0038I Pass  31: suminf.    0.56087 (2) obj. -23.5256 iterations 2
Cbc0038I Rounding solution of -17.833 is better than previous of -17.3564

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -17.833 to -26.2446 (0.02 seconds)
Cbc0038I Round again with cutoff of -36.8054
Cbc0038I Pass  31: suminf.    0.68569 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  32: suminf.    0.90921 (2) obj. -36.8054 iterations 4
Cbc0038I Pass  33: suminf.    0.63940 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  34: suminf.    1.78465 (5) obj. -36.8054 iterations 6
Cbc0038I Pass  35: suminf.    0.31604 (3) obj. -36.8054 iterations 4
Cbc0038I Pass  36: suminf.    0.31604 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  37: suminf.    0.54159 (6) obj. -36.8054 iterations 6
Cbc0038I Pass  38: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  39: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I Pass  40: suminf.    2.47803 (10) obj. -36.8054 iterations 11
Cbc0038I Pass  41: suminf.    0.64624 (4) obj. -36.8054 iterations 11
Cbc0038I Pass  42: suminf.    0.43384 (3) obj. -36.8054 iterations 5
Cbc0038I Pass  43: suminf.    0.78714 (3) obj. -36.8054 iterations 5
Cbc0038I Pass  44: suminf.    0.77775 (5) obj. -36.8054 iterations 3
Cbc0038I Pass  45: suminf.    1.15062 (4) obj. -36.8054 iterations 6
Cbc0038I Pass  46: suminf.    0.65922 (2) obj. -36.8054 iterations 3
Cbc0038I Pass  47: suminf.    0.32283 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  48: suminf.    0.31604 (3) obj. -36.8054 iterations 3
Cbc0038I Pass  49: suminf.    0.31604 (3) obj. -36.8054 iterations 0
Cbc0038I Pass  50: suminf.    0.54159 (6) obj. -36.8054 iterations 6
Cbc0038I Pass  51: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  52: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I Pass  53: suminf.    1.02939 (6) obj. -36.8054 iterations 5
Cbc0038I Pass  54: suminf.    0.72381 (4) obj. -36.8054 iterations 2
Cbc0038I Pass  55: suminf.    0.66464 (4) obj. -36.8054 iterations 6
Cbc0038I Pass  56: suminf.    0.52429 (2) obj. -36.8054 iterations 6
Cbc0038I Pass  57: suminf.    0.42992 (2) obj. -36.8054 iterations 1
Cbc0038I Pass  58: suminf.    0.54159 (6) obj. -36.8054 iterations 4
Cbc0038I Pass  59: suminf.    0.53264 (5) obj. -36.8054 iterations 1
Cbc0038I Pass  60: suminf.    0.56964 (3) obj. -36.8054 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -26.2446 - took 0.06 seconds
Cbc0012I Integer solution of -26.2446 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 52 rows 28 columns, reduced to 31 rows 17 columns
Cbc0031I 13 added rows had average density of 22.384615
Cbc0013I At root node, 13 cuts changed objective from -79.048067 to -40.540147 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2301 row cuts average 4.4 elements, 1 column cuts (1 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 825 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 20 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 113 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -26.2446, took 2793 iterations and 4 nodes (0.20 seconds)
Cbc0032I Strong branching done 64 times (1087 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 51 (-10) columns and 489 (-124) elements
Clp1000I sum of infeasibilities 1.47397e-07 - average 3.00809e-09, 40 fixed columns
Coin0506I Presolve 10 (-39) rows, 11 (-40) columns and 37 (-452) elements
Clp0029I End of values pass after 11 iterations
Clp0014I Perturbing problem by 0.001% of 1.8524733 - largest nonzero change 2.2924379e-05 ( 0.0018908272%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 3.2587465
Clp0000I Optimal - objective value 3.2587465
Coin0511I After Postsolve, objective 3.2587465, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3762606 - largest nonzero change 2.1238489e-05 ( 0.0017125872%) - largest zero change 2.0584863e-05
Clp0000I Optimal - objective value 115.88114
Clp0000I Optimal - objective value 115.88114
Clp0000I Optimal - objective value 115.88114
Coin0511I After Postsolve, objective 115.88114, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 115.8811439 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 53 columns (53 integer (53 of which binary)) and 499 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.953%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.2309
Cbc0038I Pass   1: suminf.    2.76360 (15) obj. -67.6409 iterations 2
Cbc0038I Pass   2: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Solution found of -5.96945
Cbc0038I Rounding solution of -14.8529 is better than previous of -5.96945

Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -22.4238
Cbc0038I Pass   3: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Pass   4: suminf.    2.76360 (15) obj. -67.6409 iterations 0
Cbc0038I Pass   5: suminf.    0.40222 (1) obj. -22.4238 iterations 17
Cbc0038I Pass   6: suminf.    0.29839 (1) obj. -34.6715 iterations 1
Cbc0038I Pass   7: suminf.    1.41382 (6) obj. -39.5177 iterations 10
Cbc0038I Pass   8: suminf.    1.41382 (6) obj. -39.5177 iterations 2
Cbc0038I Pass   9: suminf.    1.10664 (3) obj. -22.4238 iterations 6
Cbc0038I Pass  10: suminf.    1.10664 (3) obj. -22.4238 iterations 0
Cbc0038I Pass  11: suminf.    1.11840 (3) obj. -22.4238 iterations 1
Cbc0038I Pass  12: suminf.    1.11840 (3) obj. -22.4238 iterations 0
Cbc0038I Pass  13: suminf.    1.10664 (3) obj. -22.4238 iterations 1
Cbc0038I Pass  14: suminf.    2.51385 (7) obj. -22.4238 iterations 11
Cbc0038I Pass  15: suminf.    1.57959 (5) obj. -22.4238 iterations 5
Cbc0038I Pass  16: suminf.    1.19863 (3) obj. -22.4238 iterations 4
Cbc0038I Pass  17: suminf.    1.19863 (3) obj. -22.4238 iterations 0
Cbc0038I Pass  18: suminf.    1.20012 (3) obj. -22.4238 iterations 1
Cbc0038I Pass  19: suminf.    1.20012 (3) obj. -22.4238 iterations 0
Cbc0038I Pass  20: suminf.    1.19863 (3) obj. -22.4238 iterations 1
Cbc0038I Pass  21: suminf.    2.99003 (10) obj. -22.4238 iterations 13
Cbc0038I Pass  22: suminf.    2.89525 (9) obj. -22.4238 iterations 1
Cbc0038I Pass  23: suminf.    1.66792 (6) obj. -22.4238 iterations 8
Cbc0038I Pass  24: suminf.    1.66792 (6) obj. -22.4238 iterations 0
Cbc0038I Pass  25: suminf.    2.06078 (5) obj. -22.4238 iterations 2
Cbc0038I Pass  26: suminf.    2.06078 (5) obj. -22.4238 iterations 0
Cbc0038I Pass  27: suminf.    1.81731 (5) obj. -22.4238 iterations 1
Cbc0038I Pass  28: suminf.    1.81731 (5) obj. -22.4238 iterations 0
Cbc0038I Pass  29: suminf.    1.98239 (6) obj. -22.4238 iterations 15
Cbc0038I Pass  30: suminf.    1.98239 (6) obj. -22.4238 iterations 5
Cbc0038I Pass  31: suminf.    2.02815 (5) obj. -22.4238 iterations 2
Cbc0038I Pass  32: suminf.    1.61487 (6) obj. -22.4238 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 53 columns, reduced to 10 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -14.8529 - took 0.01 seconds
Cbc0012I Integer solution of -14.852948 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0031I 27 added rows had average density of 20.592593
Cbc0013I At root node, 27 cuts changed objective from -90.56089 to -27.629048 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3056 row cuts average 5.1 elements, 1 column cuts (3 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 850 row cuts average 46.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 42 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 147 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 361 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 441 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 272 row cuts average 21.5 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 84 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.718 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.852948 best solution, best possible -27.629048 (1.54 seconds)
Cbc0012I Integer solution of -26.2446 found by DiveCoefficient after 1969 iterations and 1 nodes (1.55 seconds)
Cbc0001I Search completed - best objective -26.2446, took 2407 iterations and 6 nodes (1.81 seconds)
Cbc0032I Strong branching done 146 times (2604 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 1 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.81

