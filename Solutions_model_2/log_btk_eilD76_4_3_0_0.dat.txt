Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 2.07844e-05 - average 1.50612e-07, 12 fixed columns
Coin0506I Presolve 115 (-23) rows, 64 (-12) columns and 350 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 0.32358326 - largest nonzero change 0 ( 0%) - largest zero change 2.3241849e-05
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Coin0511I After Postsolve, objective 62.211844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Coin0511I After Postsolve, objective 62.211844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.21184438 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 11.2363
Cbc0038I Solution found of 1.39244
Cbc0038I Relaxing continuous gives -6.30458
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 95 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -6.30458 to -38.4987 (0.05 seconds)
Cbc0038I Round again with cutoff of -40.8701
Cbc0038I Pass   1: suminf.    4.96983 (40) obj. -40.8701 iterations 39
Cbc0038I Pass   2: suminf.    4.96983 (40) obj. -40.8701 iterations 0
Cbc0038I Pass   3: suminf.    1.59049 (7) obj. -40.8701 iterations 38
Cbc0038I Pass   4: suminf.    1.52226 (7) obj. -40.8701 iterations 4
Cbc0038I Pass   5: suminf.    2.67590 (8) obj. -40.8701 iterations 13
Cbc0038I Pass   6: suminf.    2.07965 (9) obj. -40.8701 iterations 4
Cbc0038I Pass   7: suminf.    1.08131 (4) obj. -40.8701 iterations 4
Cbc0038I Pass   8: suminf.    1.51329 (4) obj. -40.8701 iterations 2
Cbc0038I Pass   9: suminf.    1.51069 (4) obj. -40.8701 iterations 1
Cbc0038I Pass  10: suminf.    1.32558 (4) obj. -40.8701 iterations 5
Cbc0038I Pass  11: suminf.    1.29113 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  12: suminf.    1.51329 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  13: suminf.    1.89030 (9) obj. -40.8701 iterations 26
Cbc0038I Pass  14: suminf.    1.50531 (8) obj. -40.8701 iterations 9
Cbc0038I Pass  15: suminf.    2.55404 (11) obj. -40.8701 iterations 17
Cbc0038I Pass  16: suminf.    1.57503 (7) obj. -40.8701 iterations 5
Cbc0038I Pass  17: suminf.    2.09042 (7) obj. -40.8701 iterations 6
Cbc0038I Pass  18: suminf.    1.68500 (8) obj. -40.8701 iterations 6
Cbc0038I Pass  19: suminf.    3.75994 (10) obj. -40.8701 iterations 13
Cbc0038I Pass  20: suminf.    1.34771 (5) obj. -40.8701 iterations 13
Cbc0038I Pass  21: suminf.    1.04703 (4) obj. -40.8701 iterations 4
Cbc0038I Pass  22: suminf.    1.51329 (4) obj. -40.8701 iterations 8
Cbc0038I Pass  23: suminf.    1.51069 (4) obj. -40.8701 iterations 1
Cbc0038I Pass  24: suminf.    1.32558 (4) obj. -40.8701 iterations 5
Cbc0038I Pass  25: suminf.    1.29113 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  26: suminf.    1.51329 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  27: suminf.    6.20554 (15) obj. -40.8701 iterations 29
Cbc0038I Pass  28: suminf.    4.12929 (11) obj. -40.8701 iterations 15
Cbc0038I Pass  29: suminf.    4.02466 (10) obj. -40.8701 iterations 5
Cbc0038I Pass  30: suminf.    3.11012 (9) obj. -40.8701 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 109 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -38.4987 to -39.4544 (0.09 seconds)
Cbc0038I Round again with cutoff of -45.1385
Cbc0038I Pass  30: suminf.    5.72733 (40) obj. -45.1385 iterations 0
Cbc0038I Pass  31: suminf.    5.72733 (40) obj. -45.1385 iterations 0
Cbc0038I Pass  32: suminf.    1.64595 (6) obj. -45.1385 iterations 36
Cbc0038I Pass  33: suminf.    1.48893 (6) obj. -45.1385 iterations 11
Cbc0038I Pass  34: suminf.    2.12734 (6) obj. -45.1385 iterations 14
Cbc0038I Pass  35: suminf.    1.93991 (6) obj. -45.1385 iterations 3
Cbc0038I Pass  36: suminf.    1.70754 (4) obj. -45.1385 iterations 6
Cbc0038I Pass  37: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  38: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  39: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  40: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  41: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  42: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  43: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  44: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  45: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  46: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  47: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  48: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  49: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  50: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  51: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  52: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  53: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  54: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  55: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  56: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  57: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  58: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  59: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -39.4544 - took 0.11 seconds
Cbc0012I Integer solution of -39.45437 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 97 rows 55 columns
Cbc0031I 30 added rows had average density of 56.9
Cbc0013I At root node, 30 cuts changed objective from -62.211844 to -55.586234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19663 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3475 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -39.45437 best solution, best possible -55.586234 (1.18 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 39 rows 30 columns
Cbc0038I Full problem 138 rows 76 columns, reduced to 6 rows 6 columns
Cbc0001I Search completed - best objective -39.45437, took 12417 iterations and 100 nodes (1.56 seconds)
Cbc0032I Strong branching done 1268 times (19200 iterations), fathomed 14 nodes and fixed 69 variables
Cbc0035I Maximum depth 21, 210 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       1.58

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 118 (-34) columns and 2059 (-1244) elements
Clp1000I sum of infeasibilities 4.92884e-08 - average 4.64985e-10, 57 fixed columns
Coin0506I Presolve 50 (-56) rows, 61 (-57) columns and 216 (-1843) elements
Clp0006I 0  Obj 7.5553904 Dual inf 3.6563386 (61)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0812813 - largest nonzero change 1.739046e-05 ( 0.00095415479%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 10.386764
Clp0000I Optimal - objective value 10.386764
Coin0511I After Postsolve, objective 10.386764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 10.386764 Dual inf 54.000669 (43)
Clp0014I Perturbing problem by 0.001% of 1.8499185 - largest nonzero change 2.4276379e-05 ( 0.001737495%) - largest zero change 2.9946866e-05
Clp0000I Optimal - objective value 68.460258
Clp0000I Optimal - objective value 68.460258
Clp0000I Optimal - objective value 68.460258
Coin0511I After Postsolve, objective 68.460258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.46025767 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 118 columns (118 integer (118 of which binary)) and 2061 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.34747
Cbc0038I Pass   1: suminf.    2.66631 (30) obj. -63.1353 iterations 17
Cbc0038I Pass   2: suminf.    2.66631 (30) obj. -63.1353 iterations 1
Cbc0038I Pass   3: suminf.    1.54888 (20) obj. -46.3538 iterations 10
Cbc0038I Solution found of -25.1845
Cbc0038I Rounding solution of -26.2096 is better than previous of -25.1845

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -30.1824
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.66631 (30) obj. -63.1353 iterations 0
Cbc0038I Pass   5: suminf.    2.66631 (30) obj. -63.1353 iterations 1
Cbc0038I Pass   6: suminf.    0.52278 (4) obj. -30.1824 iterations 33
Cbc0038I Pass   7: suminf.    0.17217 (2) obj. -31.3367 iterations 4
Cbc0038I Pass   8: suminf.    0.32525 (3) obj. -30.1824 iterations 6
Cbc0038I Pass   9: suminf.    0.13514 (1) obj. -30.3737 iterations 5
Cbc0038I Pass  10: suminf.    2.36495 (13) obj. -30.1824 iterations 28
Cbc0038I Pass  11: suminf.    1.47528 (10) obj. -30.1824 iterations 9
Cbc0038I Pass  12: suminf.    0.91449 (6) obj. -30.1824 iterations 16
Cbc0038I Pass  13: suminf.    0.79852 (6) obj. -30.1824 iterations 4
Cbc0038I Pass  14: suminf.    0.85785 (5) obj. -30.1824 iterations 10
Cbc0038I Pass  15: suminf.    0.84870 (5) obj. -30.1824 iterations 4
Cbc0038I Pass  16: suminf.    2.38605 (15) obj. -30.1824 iterations 35
Cbc0038I Pass  17: suminf.    1.68695 (13) obj. -30.1824 iterations 10
Cbc0038I Pass  18: suminf.    1.16094 (11) obj. -32.8517 iterations 2
Cbc0038I Pass  19: suminf.    1.17829 (7) obj. -30.1824 iterations 17
Cbc0038I Pass  20: suminf.    1.16793 (9) obj. -30.1824 iterations 4
Cbc0038I Pass  21: suminf.    1.30943 (15) obj. -30.1824 iterations 21
Cbc0038I Pass  22: suminf.    1.31058 (12) obj. -30.1824 iterations 4
Cbc0038I Pass  23: suminf.    1.06875 (5) obj. -30.1824 iterations 13
Cbc0038I Pass  24: suminf.    0.66733 (5) obj. -30.1824 iterations 6
Cbc0038I Pass  25: suminf.    0.84803 (5) obj. -30.1824 iterations 3
Cbc0038I Pass  26: suminf.    1.80231 (14) obj. -30.1824 iterations 22
Cbc0038I Pass  27: suminf.    1.61777 (12) obj. -30.1824 iterations 6
Cbc0038I Pass  28: suminf.    1.74035 (6) obj. -30.1824 iterations 19
Cbc0038I Pass  29: suminf.    1.13736 (6) obj. -30.1824 iterations 8
Cbc0038I Pass  30: suminf.    1.13458 (6) obj. -30.1824 iterations 8
Cbc0038I Pass  31: suminf.    0.92001 (6) obj. -30.6115 iterations 4
Cbc0038I Pass  32: suminf.    1.34786 (5) obj. -30.1824 iterations 6
Cbc0038I Pass  33: suminf.    1.06201 (5) obj. -30.1824 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 42 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -25.1845 to -32.9949 (0.11 seconds)
Cbc0038I Round again with cutoff of -39.5833
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.66631 (30) obj. -63.1353 iterations 0
Cbc0038I Pass  34: suminf.    2.66631 (30) obj. -63.1353 iterations 1
Cbc0038I Pass  35: suminf.    1.54888 (20) obj. -48.1538 iterations 10
Cbc0038I Pass  36: suminf.    1.00091 (11) obj. -39.5833 iterations 21
Cbc0038I Pass  37: suminf.    1.00091 (11) obj. -39.5833 iterations 0
Cbc0038I Pass  38: suminf.    1.18250 (7) obj. -39.5833 iterations 15
Cbc0038I Pass  39: suminf.    0.82972 (6) obj. -39.7388 iterations 3
Cbc0038I Pass  40: suminf.    1.18250 (7) obj. -39.5833 iterations 4
Cbc0038I Pass  41: suminf.    3.00203 (22) obj. -39.5833 iterations 28
Cbc0038I Pass  42: suminf.    1.39056 (18) obj. -39.5833 iterations 8
Cbc0038I Pass  43: suminf.    1.39056 (18) obj. -39.5833 iterations 0
Cbc0038I Pass  44: suminf.    2.26642 (11) obj. -39.5833 iterations 14
Cbc0038I Pass  45: suminf.    1.97094 (10) obj. -39.5833 iterations 7
Cbc0038I Pass  46: suminf.    1.62623 (8) obj. -39.5833 iterations 8
Cbc0038I Pass  47: suminf.    1.43818 (8) obj. -39.5833 iterations 3
Cbc0038I Pass  48: suminf.    1.91854 (12) obj. -39.5833 iterations 12
Cbc0038I Pass  49: suminf.    1.30945 (10) obj. -39.6523 iterations 4
Cbc0038I Pass  50: suminf.    1.44992 (8) obj. -39.5833 iterations 10
Cbc0038I Pass  51: suminf.    0.90154 (7) obj. -39.9308 iterations 3
Cbc0038I Pass  52: suminf.    1.44992 (8) obj. -39.5833 iterations 4
Cbc0038I Pass  53: suminf.    1.94623 (18) obj. -39.5833 iterations 19
Cbc0038I Pass  54: suminf.    1.70024 (17) obj. -39.5833 iterations 7
Cbc0038I Pass  55: suminf.    1.60792 (10) obj. -39.5833 iterations 21
Cbc0038I Pass  56: suminf.    1.57670 (11) obj. -39.5833 iterations 2
Cbc0038I Pass  57: suminf.    2.08243 (10) obj. -39.5833 iterations 9
Cbc0038I Pass  58: suminf.    2.01684 (10) obj. -39.5833 iterations 3
Cbc0038I Pass  59: suminf.    2.59542 (11) obj. -39.5833 iterations 5
Cbc0038I Pass  60: suminf.    1.66264 (11) obj. -39.5833 iterations 6
Cbc0038I Pass  61: suminf.    2.11721 (11) obj. -39.5833 iterations 6
Cbc0038I Pass  62: suminf.    2.38345 (15) obj. -39.5833 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -32.9949 - took 0.11 seconds
Cbc0012I Integer solution of -32.99486 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 13 rows 15 columns
Cbc0031I 68 added rows had average density of 25.882353
Cbc0013I At root node, 68 cuts changed objective from -65.936424 to -46.163548 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24939 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1841 row cuts average 111.8 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 415 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 863 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.103 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 302 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 124 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.585 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.99486 best solution, best possible -46.163548 (2.85 seconds)
Cbc0010I After 5 nodes, 4 on tree, -32.99486 best solution, best possible -45.613468 (3.62 seconds)
Cbc0010I After 11 nodes, 8 on tree, -32.99486 best solution, best possible -45.613468 (4.42 seconds)
Cbc0012I Integer solution of -36.51953 found by rounding after 9870 iterations and 13 nodes (4.74 seconds)
Cbc0010I After 20 nodes, 11 on tree, -36.51953 best solution, best possible -45.613468 (5.15 seconds)
Cbc0012I Integer solution of -36.79591 found by rounding after 11112 iterations and 32 nodes (5.76 seconds)
Cbc0010I After 36 nodes, 14 on tree, -36.79591 best solution, best possible -45.613468 (5.86 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 48 rows 66 columns
Cbc0012I Integer solution of -39.45437 found by RINS after 11388 iterations and 41 nodes (6.28 seconds)
Cbc0010I After 51 nodes, 17 on tree, -39.45437 best solution, best possible -45.613468 (6.57 seconds)
Cbc0001I Search completed - best objective -39.45437, took 13069 iterations and 78 nodes (6.92 seconds)
Cbc0032I Strong branching done 1032 times (21346 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 26, 91 variables fixed on reduced cost
Total time (CPU seconds):       5.45   (Wallclock seconds):       6.94

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 2.07844e-05 - average 1.50612e-07, 12 fixed columns
Coin0506I Presolve 115 (-23) rows, 64 (-12) columns and 350 (-70) elements
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 0.32358326 - largest nonzero change 0 ( 0%) - largest zero change 2.3241849e-05
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Coin0511I After Postsolve, objective 62.211844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Clp0000I Optimal - objective value 62.211844
Coin0511I After Postsolve, objective 62.211844, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.21184438 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 53 integers unsatisfied sum - 11.2363
Cbc0038I Solution found of 1.39244
Cbc0038I Relaxing continuous gives -6.30458
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 95 rows 54 columns
Cbc0038I Mini branch and bound improved solution from -6.30458 to -38.4987 (0.04 seconds)
Cbc0038I Round again with cutoff of -40.8701
Cbc0038I Pass   1: suminf.    4.96983 (40) obj. -40.8701 iterations 39
Cbc0038I Pass   2: suminf.    4.96983 (40) obj. -40.8701 iterations 0
Cbc0038I Pass   3: suminf.    1.59049 (7) obj. -40.8701 iterations 38
Cbc0038I Pass   4: suminf.    1.52226 (7) obj. -40.8701 iterations 4
Cbc0038I Pass   5: suminf.    2.67590 (8) obj. -40.8701 iterations 13
Cbc0038I Pass   6: suminf.    2.07965 (9) obj. -40.8701 iterations 4
Cbc0038I Pass   7: suminf.    1.08131 (4) obj. -40.8701 iterations 4
Cbc0038I Pass   8: suminf.    1.51329 (4) obj. -40.8701 iterations 2
Cbc0038I Pass   9: suminf.    1.51069 (4) obj. -40.8701 iterations 1
Cbc0038I Pass  10: suminf.    1.32558 (4) obj. -40.8701 iterations 5
Cbc0038I Pass  11: suminf.    1.29113 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  12: suminf.    1.51329 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  13: suminf.    1.89030 (9) obj. -40.8701 iterations 26
Cbc0038I Pass  14: suminf.    1.50531 (8) obj. -40.8701 iterations 9
Cbc0038I Pass  15: suminf.    2.55404 (11) obj. -40.8701 iterations 17
Cbc0038I Pass  16: suminf.    1.57503 (7) obj. -40.8701 iterations 5
Cbc0038I Pass  17: suminf.    2.09042 (7) obj. -40.8701 iterations 6
Cbc0038I Pass  18: suminf.    1.68500 (8) obj. -40.8701 iterations 6
Cbc0038I Pass  19: suminf.    3.75994 (10) obj. -40.8701 iterations 13
Cbc0038I Pass  20: suminf.    1.34771 (5) obj. -40.8701 iterations 13
Cbc0038I Pass  21: suminf.    1.04703 (4) obj. -40.8701 iterations 4
Cbc0038I Pass  22: suminf.    1.51329 (4) obj. -40.8701 iterations 8
Cbc0038I Pass  23: suminf.    1.51069 (4) obj. -40.8701 iterations 1
Cbc0038I Pass  24: suminf.    1.32558 (4) obj. -40.8701 iterations 5
Cbc0038I Pass  25: suminf.    1.29113 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  26: suminf.    1.51329 (4) obj. -40.8701 iterations 3
Cbc0038I Pass  27: suminf.    6.20554 (15) obj. -40.8701 iterations 29
Cbc0038I Pass  28: suminf.    4.12929 (11) obj. -40.8701 iterations 15
Cbc0038I Pass  29: suminf.    4.02466 (10) obj. -40.8701 iterations 5
Cbc0038I Pass  30: suminf.    3.11012 (9) obj. -40.8701 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 109 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -38.4987 to -39.4544 (0.09 seconds)
Cbc0038I Round again with cutoff of -45.1385
Cbc0038I Pass  30: suminf.    5.72733 (40) obj. -45.1385 iterations 0
Cbc0038I Pass  31: suminf.    5.72733 (40) obj. -45.1385 iterations 0
Cbc0038I Pass  32: suminf.    1.64595 (6) obj. -45.1385 iterations 36
Cbc0038I Pass  33: suminf.    1.48893 (6) obj. -45.1385 iterations 11
Cbc0038I Pass  34: suminf.    2.12734 (6) obj. -45.1385 iterations 14
Cbc0038I Pass  35: suminf.    1.93991 (6) obj. -45.1385 iterations 3
Cbc0038I Pass  36: suminf.    1.70754 (4) obj. -45.1385 iterations 6
Cbc0038I Pass  37: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  38: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  39: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  40: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  41: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  42: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  43: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  44: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  45: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  46: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  47: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  48: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  49: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  50: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  51: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  52: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  53: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  54: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I Pass  55: suminf.    1.31274 (4) obj. -45.1385 iterations 1
Cbc0038I Pass  56: suminf.    1.70754 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  57: suminf.    1.43360 (4) obj. -45.1385 iterations 2
Cbc0038I Pass  58: suminf.    1.64420 (4) obj. -45.1385 iterations 3
Cbc0038I Pass  59: suminf.    1.31274 (4) obj. -45.1385 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 105 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -39.4544 - took 0.11 seconds
Cbc0012I Integer solution of -39.45437 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 97 rows 55 columns
Cbc0031I 30 added rows had average density of 56.9
Cbc0013I At root node, 30 cuts changed objective from -62.211844 to -55.586234 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 19663 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3475 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -39.45437 best solution, best possible -55.586234 (1.31 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 39 rows 30 columns
Cbc0038I Full problem 138 rows 76 columns, reduced to 6 rows 6 columns
Cbc0001I Search completed - best objective -39.45437, took 12417 iterations and 100 nodes (1.70 seconds)
Cbc0032I Strong branching done 1268 times (19200 iterations), fathomed 14 nodes and fixed 69 variables
Cbc0035I Maximum depth 21, 210 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       1.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 118 (-35) columns and 2059 (-1245) elements
Clp1000I sum of infeasibilities 4.92884e-08 - average 4.64985e-10, 57 fixed columns
Coin0506I Presolve 50 (-56) rows, 61 (-57) columns and 216 (-1843) elements
Clp0006I 0  Obj 7.5553904 Dual inf 3.6563386 (61)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0812813 - largest nonzero change 1.739046e-05 ( 0.00095415479%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 10.386764
Clp0000I Optimal - objective value 10.386764
Coin0511I After Postsolve, objective 10.386764, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 10.386764 Dual inf 54.000669 (43)
Clp0014I Perturbing problem by 0.001% of 1.8499185 - largest nonzero change 2.4276379e-05 ( 0.001737495%) - largest zero change 2.9946866e-05
Clp0000I Optimal - objective value 68.460258
Clp0000I Optimal - objective value 68.460258
Clp0000I Optimal - objective value 68.460258
Coin0511I After Postsolve, objective 68.460258, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.46025767 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 118 columns (118 integer (118 of which binary)) and 2061 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 4.34747
Cbc0038I Pass   1: suminf.    2.66631 (30) obj. -63.1353 iterations 17
Cbc0038I Pass   2: suminf.    2.66631 (30) obj. -63.1353 iterations 1
Cbc0038I Pass   3: suminf.    1.54888 (20) obj. -46.3538 iterations 10
Cbc0038I Solution found of -25.1845
Cbc0038I Rounding solution of -26.2096 is better than previous of -25.1845

Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 3 rows 3 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -30.1824
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.66631 (30) obj. -63.1353 iterations 0
Cbc0038I Pass   5: suminf.    2.66631 (30) obj. -63.1353 iterations 1
Cbc0038I Pass   6: suminf.    0.52278 (4) obj. -30.1824 iterations 33
Cbc0038I Pass   7: suminf.    0.17217 (2) obj. -31.3367 iterations 4
Cbc0038I Pass   8: suminf.    0.32525 (3) obj. -30.1824 iterations 6
Cbc0038I Pass   9: suminf.    0.13514 (1) obj. -30.3737 iterations 5
Cbc0038I Pass  10: suminf.    2.36495 (13) obj. -30.1824 iterations 28
Cbc0038I Pass  11: suminf.    1.47528 (10) obj. -30.1824 iterations 9
Cbc0038I Pass  12: suminf.    0.91449 (6) obj. -30.1824 iterations 16
Cbc0038I Pass  13: suminf.    0.79852 (6) obj. -30.1824 iterations 4
Cbc0038I Pass  14: suminf.    0.85785 (5) obj. -30.1824 iterations 10
Cbc0038I Pass  15: suminf.    0.84870 (5) obj. -30.1824 iterations 4
Cbc0038I Pass  16: suminf.    2.38605 (15) obj. -30.1824 iterations 35
Cbc0038I Pass  17: suminf.    1.68695 (13) obj. -30.1824 iterations 10
Cbc0038I Pass  18: suminf.    1.16094 (11) obj. -32.8517 iterations 2
Cbc0038I Pass  19: suminf.    1.17829 (7) obj. -30.1824 iterations 17
Cbc0038I Pass  20: suminf.    1.16793 (9) obj. -30.1824 iterations 4
Cbc0038I Pass  21: suminf.    1.30943 (15) obj. -30.1824 iterations 21
Cbc0038I Pass  22: suminf.    1.31058 (12) obj. -30.1824 iterations 4
Cbc0038I Pass  23: suminf.    1.06875 (5) obj. -30.1824 iterations 13
Cbc0038I Pass  24: suminf.    0.66733 (5) obj. -30.1824 iterations 6
Cbc0038I Pass  25: suminf.    0.84803 (5) obj. -30.1824 iterations 3
Cbc0038I Pass  26: suminf.    1.80231 (14) obj. -30.1824 iterations 22
Cbc0038I Pass  27: suminf.    1.61777 (12) obj. -30.1824 iterations 6
Cbc0038I Pass  28: suminf.    1.74035 (6) obj. -30.1824 iterations 19
Cbc0038I Pass  29: suminf.    1.13736 (6) obj. -30.1824 iterations 8
Cbc0038I Pass  30: suminf.    1.13458 (6) obj. -30.1824 iterations 8
Cbc0038I Pass  31: suminf.    0.92001 (6) obj. -30.6115 iterations 4
Cbc0038I Pass  32: suminf.    1.34786 (5) obj. -30.1824 iterations 6
Cbc0038I Pass  33: suminf.    1.06201 (5) obj. -30.1824 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 118 columns, reduced to 42 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -25.1845 to -32.9949 (0.11 seconds)
Cbc0038I Round again with cutoff of -39.5833
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.66631 (30) obj. -63.1353 iterations 0
Cbc0038I Pass  34: suminf.    2.66631 (30) obj. -63.1353 iterations 1
Cbc0038I Pass  35: suminf.    1.54888 (20) obj. -48.1538 iterations 10
Cbc0038I Pass  36: suminf.    1.00091 (11) obj. -39.5833 iterations 21
Cbc0038I Pass  37: suminf.    1.00091 (11) obj. -39.5833 iterations 0
Cbc0038I Pass  38: suminf.    1.18250 (7) obj. -39.5833 iterations 15
Cbc0038I Pass  39: suminf.    0.82972 (6) obj. -39.7388 iterations 3
Cbc0038I Pass  40: suminf.    1.18250 (7) obj. -39.5833 iterations 4
Cbc0038I Pass  41: suminf.    3.00203 (22) obj. -39.5833 iterations 28
Cbc0038I Pass  42: suminf.    1.39056 (18) obj. -39.5833 iterations 8
Cbc0038I Pass  43: suminf.    1.39056 (18) obj. -39.5833 iterations 0
Cbc0038I Pass  44: suminf.    2.26642 (11) obj. -39.5833 iterations 14
Cbc0038I Pass  45: suminf.    1.97094 (10) obj. -39.5833 iterations 7
Cbc0038I Pass  46: suminf.    1.62623 (8) obj. -39.5833 iterations 8
Cbc0038I Pass  47: suminf.    1.43818 (8) obj. -39.5833 iterations 3
Cbc0038I Pass  48: suminf.    1.91854 (12) obj. -39.5833 iterations 12
Cbc0038I Pass  49: suminf.    1.30945 (10) obj. -39.6523 iterations 4
Cbc0038I Pass  50: suminf.    1.44992 (8) obj. -39.5833 iterations 10
Cbc0038I Pass  51: suminf.    0.90154 (7) obj. -39.9308 iterations 3
Cbc0038I Pass  52: suminf.    1.44992 (8) obj. -39.5833 iterations 4
Cbc0038I Pass  53: suminf.    1.94623 (18) obj. -39.5833 iterations 19
Cbc0038I Pass  54: suminf.    1.70024 (17) obj. -39.5833 iterations 7
Cbc0038I Pass  55: suminf.    1.60792 (10) obj. -39.5833 iterations 21
Cbc0038I Pass  56: suminf.    1.57670 (11) obj. -39.5833 iterations 2
Cbc0038I Pass  57: suminf.    2.08243 (10) obj. -39.5833 iterations 9
Cbc0038I Pass  58: suminf.    2.01684 (10) obj. -39.5833 iterations 3
Cbc0038I Pass  59: suminf.    2.59542 (11) obj. -39.5833 iterations 5
Cbc0038I Pass  60: suminf.    1.66264 (11) obj. -39.5833 iterations 6
Cbc0038I Pass  61: suminf.    2.11721 (11) obj. -39.5833 iterations 6
Cbc0038I Pass  62: suminf.    2.38345 (15) obj. -39.5833 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -32.9949 - took 0.11 seconds
Cbc0012I Integer solution of -32.99486 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 13 rows 15 columns
Cbc0031I 68 added rows had average density of 25.882353
Cbc0013I At root node, 68 cuts changed objective from -65.936424 to -46.163548 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24939 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.153 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1841 row cuts average 111.8 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 415 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 863 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 302 row cuts average 61.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 124 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.593 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -32.99486 best solution, best possible -46.163548 (2.93 seconds)
Cbc0010I After 5 nodes, 4 on tree, -32.99486 best solution, best possible -45.613468 (3.70 seconds)
Cbc0010I After 10 nodes, 8 on tree, -32.99486 best solution, best possible -45.613468 (4.42 seconds)
Cbc0012I Integer solution of -36.51953 found by rounding after 9870 iterations and 13 nodes (4.86 seconds)
Cbc0010I After 18 nodes, 10 on tree, -36.51953 best solution, best possible -45.613468 (5.16 seconds)
Cbc0010I After 31 nodes, 13 on tree, -36.51953 best solution, best possible -45.613468 (5.89 seconds)
Cbc0012I Integer solution of -36.79591 found by rounding after 11112 iterations and 32 nodes (5.92 seconds)
Cbc0038I Full problem 106 rows 118 columns, reduced to 48 rows 66 columns
Cbc0012I Integer solution of -39.45437 found by RINS after 11388 iterations and 41 nodes (6.43 seconds)
Cbc0010I After 48 nodes, 14 on tree, -39.45437 best solution, best possible -45.613468 (6.61 seconds)
Cbc0001I Search completed - best objective -39.45437, took 13069 iterations and 78 nodes (7.09 seconds)
Cbc0032I Strong branching done 1032 times (21346 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 26, 91 variables fixed on reduced cost
Total time (CPU seconds):       5.56   (Wallclock seconds):       7.12

