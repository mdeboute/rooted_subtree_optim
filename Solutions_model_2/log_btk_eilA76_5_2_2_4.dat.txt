Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 3.22936e-05 - average 2.35719e-07, 30 fixed columns
Coin0506I Presolve 79 (-58) rows, 46 (-30) columns and 244 (-174) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Coin0511I After Postsolve, objective 67.024948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24612527 - largest nonzero change 0 ( 0%) - largest zero change 2.8820022e-05
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Coin0511I After Postsolve, objective 67.024948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.02494782 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.31765
Cbc0038I Solution found of -9.89183
Cbc0038I Relaxing continuous gives -9.89183
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -9.89183 to -35.0432 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.2415
Cbc0038I Pass   1: suminf.    2.16309 (7) obj. -38.2415 iterations 25
Cbc0038I Pass   2: suminf.    1.00820 (3) obj. -38.2415 iterations 11
Cbc0038I Pass   3: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass   4: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass   5: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass   6: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass   7: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass   8: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass   9: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  10: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  11: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  12: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  13: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  14: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  15: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  16: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  17: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  18: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  19: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  20: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  21: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  22: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  23: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  24: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  25: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  26: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  27: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  28: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  29: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  30: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -35.0432 to -36.0882 (0.05 seconds)
Cbc0038I Round again with cutoff of -43.9982
Cbc0038I Pass  30: suminf.    2.48686 (11) obj. -43.9982 iterations 2
Cbc0038I Pass  31: suminf.    2.48686 (11) obj. -43.9982 iterations 0
Cbc0038I Pass  32: suminf.    1.31598 (4) obj. -43.9982 iterations 11
Cbc0038I Pass  33: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  34: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  35: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  36: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  37: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  38: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  39: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  40: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  41: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  42: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  43: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  44: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  45: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  46: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  47: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  48: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  49: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  50: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  51: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  52: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  53: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  54: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  55: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  56: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  57: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  58: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  59: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -36.0882 - took 0.05 seconds
Cbc0012I Integer solution of -36.088186 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0031I 13 added rows had average density of 59.384615
Cbc0013I At root node, 13 cuts changed objective from -67.024948 to -54.212683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3655 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 942 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 69.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0012I Integer solution of -37.187744 found by rounding after 3446 iterations and 5 nodes (0.42 seconds)
Cbc0012I Integer solution of -37.648376 found by rounding after 3554 iterations and 8 nodes (0.44 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 17 rows 14 columns
Cbc0012I Integer solution of -38.424406 found by RINS after 4050 iterations and 43 nodes (0.48 seconds)
Cbc0012I Integer solution of -38.795246 found by rounding after 4435 iterations and 74 nodes (0.50 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 11 rows 10 columns
Cbc0004I Integer solution of -38.918306 found after 4632 iterations and 94 nodes (0.52 seconds)
Cbc0001I Search completed - best objective -38.918306, took 5187 iterations and 110 nodes (0.54 seconds)
Cbc0032I Strong branching done 532 times (5549 iterations), fathomed 9 nodes and fixed 28 variables
Cbc0035I Maximum depth 17, 381 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 117 (-35) columns and 2004 (-1299) elements
Clp1000I sum of infeasibilities 3.81072e-07 - average 3.66415e-09, 59 fixed columns
Coin0506I Presolve 43 (-61) rows, 58 (-59) columns and 197 (-1807) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.24478359 - largest nonzero change 2.7926465e-05 ( 0.0023983587%) - largest zero change 2.9493605e-05
Clp0000I Optimal - objective value 28.208679
Clp0000I Optimal - objective value 28.208679
Coin0511I After Postsolve, objective 28.208679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.616896 - largest nonzero change 2.8371308e-05 ( 0.0018056464%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 85.161781
Clp0000I Optimal - objective value 85.161781
Clp0000I Optimal - objective value 85.161781
Coin0511I After Postsolve, objective 85.161781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.1617811 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 2012 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 3.18967
Cbc0038I Pass   1: suminf.    0.88240 (24) obj. -43.3301 iterations 18
Cbc0038I Pass   2: suminf.    0.88240 (24) obj. -43.3301 iterations 0
Cbc0038I Pass   3: suminf.    0.31039 (11) obj. -23.3112 iterations 13
Cbc0038I Pass   4: suminf.    0.02128 (1) obj. -12.6337 iterations 10
Cbc0038I Solution found of -11.6549
Cbc0038I Rounding solution of -25.8575 is better than previous of -11.6549

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -30.2541
Cbc0038I Pass   5: suminf.    0.88240 (24) obj. -43.3301 iterations 0
Cbc0038I Pass   6: suminf.    0.88240 (24) obj. -43.3301 iterations 0
Cbc0038I Pass   7: suminf.    0.60787 (15) obj. -30.2541 iterations 43
Cbc0038I Pass   8: suminf.    0.48913 (2) obj. -30.2541 iterations 4
Cbc0038I Pass   9: suminf.    0.02905 (2) obj. -30.2541 iterations 6
Cbc0038I Pass  10: suminf.    0.02905 (2) obj. -30.2541 iterations 0
Cbc0038I Pass  11: suminf.    0.68248 (2) obj. -31.2763 iterations 7
Cbc0038I Pass  12: suminf.    0.23333 (1) obj. -33.3244 iterations 1
Cbc0038I Pass  13: suminf.    0.34692 (1) obj. -30.2541 iterations 1
Cbc0038I Pass  14: suminf.    2.25501 (14) obj. -30.2541 iterations 28
Cbc0038I Pass  15: suminf.    0.31497 (6) obj. -30.2541 iterations 11
Cbc0038I Pass  16: suminf.    1.10115 (7) obj. -30.2541 iterations 14
Cbc0038I Pass  17: suminf.    1.02992 (7) obj. -30.2541 iterations 3
Cbc0038I Pass  18: suminf.    0.68454 (11) obj. -30.2541 iterations 13
Cbc0038I Pass  19: suminf.    0.68454 (11) obj. -30.2541 iterations 0
Cbc0038I Pass  20: suminf.    0.98920 (4) obj. -30.2541 iterations 17
Cbc0038I Pass  21: suminf.    0.85306 (7) obj. -30.2541 iterations 8
Cbc0038I Pass  22: suminf.    1.33862 (7) obj. -30.2541 iterations 6
Cbc0038I Pass  23: suminf.    0.82747 (7) obj. -30.2541 iterations 4
Cbc0038I Pass  24: suminf.    0.96596 (10) obj. -30.2541 iterations 25
Cbc0038I Pass  25: suminf.    0.76574 (11) obj. -30.2541 iterations 7
Cbc0038I Pass  26: suminf.    2.41515 (8) obj. -30.2541 iterations 21
Cbc0038I Pass  27: suminf.    1.75888 (9) obj. -30.2541 iterations 8
Cbc0038I Pass  28: suminf.    0.29130 (6) obj. -30.2541 iterations 4
Cbc0038I Pass  29: suminf.    1.54444 (6) obj. -30.2541 iterations 14
Cbc0038I Pass  30: suminf.    1.10219 (8) obj. -30.2541 iterations 9
Cbc0038I Pass  31: suminf.    1.55609 (8) obj. -30.2541 iterations 8
Cbc0038I Pass  32: suminf.    1.08416 (8) obj. -30.2541 iterations 5
Cbc0038I Pass  33: suminf.    1.55609 (8) obj. -30.2541 iterations 8
Cbc0038I Pass  34: suminf.    0.72853 (7) obj. -30.2541 iterations 4
Cbc0038I Rounding solution of -34.9408 is better than previous of -25.8575

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 55 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -34.9408 to -38.0668 (0.11 seconds)
Cbc0038I Round again with cutoff of -44.418
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.01224 (38) obj. -44.418 iterations 4
Cbc0038I Pass  35: suminf.    0.99365 (25) obj. -44.418 iterations 2
Cbc0038I Pass  36: suminf.    1.16298 (17) obj. -44.418 iterations 18
Cbc0038I Pass  37: suminf.    1.70964 (20) obj. -44.418 iterations 20
Cbc0038I Pass  38: suminf.    1.62220 (18) obj. -44.418 iterations 4
Cbc0038I Pass  39: suminf.    1.59434 (15) obj. -44.418 iterations 33
Cbc0038I Pass  40: suminf.    1.10338 (15) obj. -44.418 iterations 7
Cbc0038I Pass  41: suminf.    1.96068 (15) obj. -44.418 iterations 12
Cbc0038I Pass  42: suminf.    1.65418 (15) obj. -44.418 iterations 6
Cbc0038I Pass  43: suminf.    1.77328 (16) obj. -44.418 iterations 22
Cbc0038I Pass  44: suminf.    1.13973 (14) obj. -44.418 iterations 15
Cbc0038I Pass  45: suminf.    1.47541 (14) obj. -44.418 iterations 18
Cbc0038I Pass  46: suminf.    0.83565 (13) obj. -44.418 iterations 7
Cbc0038I Pass  47: suminf.    1.60654 (17) obj. -44.418 iterations 16
Cbc0038I Pass  48: suminf.    1.10338 (15) obj. -44.418 iterations 7
Cbc0038I Pass  49: suminf.    1.96068 (15) obj. -44.418 iterations 11
Cbc0038I Pass  50: suminf.    1.65418 (15) obj. -44.418 iterations 5
Cbc0038I Pass  51: suminf.    1.17997 (16) obj. -44.418 iterations 11
Cbc0038I Pass  52: suminf.    1.17324 (15) obj. -44.418 iterations 3
Cbc0038I Pass  53: suminf.    1.50482 (14) obj. -44.418 iterations 26
Cbc0038I Pass  54: suminf.    1.10338 (15) obj. -44.418 iterations 8
Cbc0038I Pass  55: suminf.    1.96068 (15) obj. -44.418 iterations 11
Cbc0038I Pass  56: suminf.    1.65418 (15) obj. -44.418 iterations 5
Cbc0038I Pass  57: suminf.    1.96068 (15) obj. -44.418 iterations 10
Cbc0038I Pass  58: suminf.    2.07229 (18) obj. -44.418 iterations 32
Cbc0038I Pass  59: suminf.    1.48858 (16) obj. -44.418 iterations 10
Cbc0038I Pass  60: suminf.    1.48858 (16) obj. -44.418 iterations 3
Cbc0038I Pass  61: suminf.    1.59434 (15) obj. -44.418 iterations 28
Cbc0038I Pass  62: suminf.    1.10338 (15) obj. -44.418 iterations 5
Cbc0038I Pass  63: suminf.    1.96068 (15) obj. -44.418 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 21 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -38.0668 - took 0.09 seconds
Cbc0012I Integer solution of -38.066766 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 18 rows 21 columns
Cbc0031I 57 added rows had average density of 26.859649
Cbc0013I At root node, 57 cuts changed objective from -69.822706 to -46.884782 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 1885 row cuts average 3.0 elements, 4 column cuts (4 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 76.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 77 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 312 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 76.2 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 71 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.066766 best solution, best possible -46.884782 (0.56 seconds)
Cbc0004I Integer solution of -38.918306 found after 593 iterations and 1 nodes (0.66 seconds)
Cbc0010I After 6 nodes, 3 on tree, -38.918306 best solution, best possible -44.850763 (1.26 seconds)
Cbc0010I After 34 nodes, 3 on tree, -38.918306 best solution, best possible -44.849394 (2.03 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 47 rows 58 columns
Cbc0038I Full problem 161 rows 117 columns, reduced to 91 rows 103 columns
Cbc0044I Reduced cost fixing - 91 rows, 103 columns - restarting search
Cbc0038I Initial state - 41 integers unsatisfied sum - 3.92542
Cbc0038I Pass   1: suminf.    1.09955 (37) obj. -38.9183 iterations 19
Cbc0038I Pass   2: suminf.    1.05124 (24) obj. -38.9183 iterations 3
Cbc0038I Pass   3: suminf.    1.00730 (25) obj. -38.9183 iterations 22
Cbc0038I Pass   4: suminf.    2.05377 (16) obj. -38.9183 iterations 12
Cbc0038I Pass   5: suminf.    1.43153 (13) obj. -38.9183 iterations 5
Cbc0038I Pass   6: suminf.    1.19507 (15) obj. -38.9183 iterations 3
Cbc0038I Pass   7: suminf.    1.17799 (9) obj. -38.9183 iterations 14
Cbc0038I Pass   8: suminf.    1.09459 (9) obj. -38.9183 iterations 2
Cbc0038I Pass   9: suminf.    1.65088 (10) obj. -38.9183 iterations 24
Cbc0038I Pass  10: suminf.    1.65088 (10) obj. -38.9183 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.77 seconds)
Cbc0038I Full problem 92 rows 103 columns, reduced to 92 rows 103 columns
Cbc0038I After 2.84 seconds - Feasibility pump exiting with objective of -34.0668 - took 0.07 seconds
Cbc0031I 45 added rows had average density of 50.533333
Cbc0013I At root node, 45 cuts changed objective from -68.453287 to -45.226495 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4074 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 589 row cuts average 99.1 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 187 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 517 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 838 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 89 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.634 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 644 row cuts average 16.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -45.226495 (4.70 seconds)
Cbc0010I After 33 nodes, 6 on tree, 1e+50 best solution, best possible -45.226374 (5.77 seconds)
Cbc0010I After 68 nodes, 2 on tree, 1e+50 best solution, best possible -43.706363 (6.78 seconds)
Cbc0001I Search completed - best objective 1e+50, took 6071 iterations and 78 nodes (7.24 seconds)
Cbc0032I Strong branching done 1028 times (15688 iterations), fathomed 2 nodes and fixed 30 variables
Cbc0035I Maximum depth 13, 220 variables fixed on reduced cost
Cbc0038I Probing was tried 268 times and created 5305 cuts of which 0 were active after adding rounds of cuts (0.085 seconds)
Cbc0038I Gomory was tried 258 times and created 592 cuts of which 0 were active after adding rounds of cuts (0.140 seconds)
Cbc0038I Knapsack was tried 258 times and created 499 cuts of which 0 were active after adding rounds of cuts (0.077 seconds)
Cbc0038I Clique was tried 258 times and created 756 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Cbc0038I MixedIntegerRounding2 was tried 258 times and created 1202 cuts of which 0 were active after adding rounds of cuts (0.104 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I TwoMirCuts was tried 258 times and created 216 cuts of which 0 were active after adding rounds of cuts (0.057 seconds)
Cbc0038I ZeroHalf was tried 258 times and created 215 cuts of which 0 were active after adding rounds of cuts (1.608 seconds)
Cbc0038I Stored from first was tried 258 times and created 869 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -38.918306, took 8890 iterations and 128 nodes (7.24 seconds)
Cbc0032I Strong branching done 894 times (18129 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 13, 103 variables fixed on reduced cost
Total time (CPU seconds):       4.75   (Wallclock seconds):       7.25

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 3.22936e-05 - average 2.35719e-07, 30 fixed columns
Coin0506I Presolve 79 (-58) rows, 46 (-30) columns and 244 (-174) elements
Clp0029I End of values pass after 46 iterations
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Coin0511I After Postsolve, objective 67.024948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.24612527 - largest nonzero change 0 ( 0%) - largest zero change 2.8820022e-05
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Clp0000I Optimal - objective value 67.024948
Coin0511I After Postsolve, objective 67.024948, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.02494782 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.31765
Cbc0038I Solution found of -9.89183
Cbc0038I Relaxing continuous gives -9.89183
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -9.89183 to -35.0432 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.2415
Cbc0038I Pass   1: suminf.    2.16309 (7) obj. -38.2415 iterations 25
Cbc0038I Pass   2: suminf.    1.00820 (3) obj. -38.2415 iterations 11
Cbc0038I Pass   3: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass   4: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass   5: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass   6: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass   7: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass   8: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass   9: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  10: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  11: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  12: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  13: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  14: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  15: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  16: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  17: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  18: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  19: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  20: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  21: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  22: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  23: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I Pass  24: suminf.    0.88388 (3) obj. -38.2415 iterations 1
Cbc0038I Pass  25: suminf.    0.46850 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  26: suminf.    0.77357 (2) obj. -38.2415 iterations 3
Cbc0038I Pass  27: suminf.    0.51547 (3) obj. -38.2415 iterations 3
Cbc0038I Pass  28: suminf.    0.58377 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  29: suminf.    0.36152 (2) obj. -38.2415 iterations 4
Cbc0038I Pass  30: suminf.    1.10218 (4) obj. -38.2415 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -35.0432 to -36.0882 (0.06 seconds)
Cbc0038I Round again with cutoff of -43.9982
Cbc0038I Pass  30: suminf.    2.48686 (11) obj. -43.9982 iterations 2
Cbc0038I Pass  31: suminf.    2.48686 (11) obj. -43.9982 iterations 0
Cbc0038I Pass  32: suminf.    1.31598 (4) obj. -43.9982 iterations 11
Cbc0038I Pass  33: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  34: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  35: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  36: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  37: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  38: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  39: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  40: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  41: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  42: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  43: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  44: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  45: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  46: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  47: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  48: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  49: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  50: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  51: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  52: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I Pass  53: suminf.    1.31598 (4) obj. -43.9982 iterations 2
Cbc0038I Pass  54: suminf.    1.31598 (4) obj. -43.9982 iterations 1
Cbc0038I Pass  55: suminf.    0.99049 (3) obj. -43.9982 iterations 4
Cbc0038I Pass  56: suminf.    0.98746 (3) obj. -43.9982 iterations 2
Cbc0038I Pass  57: suminf.    0.67078 (4) obj. -43.9982 iterations 4
Cbc0038I Pass  58: suminf.    0.67078 (4) obj. -43.9982 iterations 0
Cbc0038I Pass  59: suminf.    1.79807 (4) obj. -43.9982 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -36.0882 - took 0.06 seconds
Cbc0012I Integer solution of -36.088186 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 31 rows 20 columns
Cbc0031I 13 added rows had average density of 59.384615
Cbc0013I At root node, 13 cuts changed objective from -67.024948 to -54.212683 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3655 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 942 row cuts average 75.5 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 85 row cuts average 69.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0012I Integer solution of -37.187744 found by rounding after 3446 iterations and 5 nodes (0.45 seconds)
Cbc0012I Integer solution of -37.648376 found by rounding after 3554 iterations and 8 nodes (0.47 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 17 rows 14 columns
Cbc0012I Integer solution of -38.424406 found by RINS after 4050 iterations and 43 nodes (0.51 seconds)
Cbc0012I Integer solution of -38.795246 found by rounding after 4435 iterations and 74 nodes (0.54 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 11 rows 10 columns
Cbc0004I Integer solution of -38.918306 found after 4632 iterations and 94 nodes (0.56 seconds)
Cbc0001I Search completed - best objective -38.918306, took 5187 iterations and 110 nodes (0.58 seconds)
Cbc0032I Strong branching done 532 times (5549 iterations), fathomed 9 nodes and fixed 28 variables
Cbc0035I Maximum depth 17, 381 variables fixed on reduced cost
Total time (CPU seconds):       0.56   (Wallclock seconds):       0.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 117 (-36) columns and 2004 (-1300) elements
Clp1000I sum of infeasibilities 3.81072e-07 - average 3.66415e-09, 59 fixed columns
Coin0506I Presolve 43 (-61) rows, 58 (-59) columns and 197 (-1807) elements
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 0.24478359 - largest nonzero change 2.7926465e-05 ( 0.0023983587%) - largest zero change 2.9493605e-05
Clp0000I Optimal - objective value 28.208679
Clp0000I Optimal - objective value 28.208679
Coin0511I After Postsolve, objective 28.208679, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.616896 - largest nonzero change 2.8371308e-05 ( 0.0018056464%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 85.161781
Clp0000I Optimal - objective value 85.161781
Clp0000I Optimal - objective value 85.161781
Coin0511I After Postsolve, objective 85.161781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.1617811 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 2012 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.805%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 3.18967
Cbc0038I Pass   1: suminf.    0.88240 (24) obj. -43.3301 iterations 18
Cbc0038I Pass   2: suminf.    0.88240 (24) obj. -43.3301 iterations 0
Cbc0038I Pass   3: suminf.    0.31039 (11) obj. -23.3112 iterations 13
Cbc0038I Pass   4: suminf.    0.02128 (1) obj. -12.6337 iterations 10
Cbc0038I Solution found of -11.6549
Cbc0038I Rounding solution of -25.8575 is better than previous of -11.6549

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -30.2541
Cbc0038I Pass   5: suminf.    0.88240 (24) obj. -43.3301 iterations 0
Cbc0038I Pass   6: suminf.    0.88240 (24) obj. -43.3301 iterations 0
Cbc0038I Pass   7: suminf.    0.60787 (15) obj. -30.2541 iterations 43
Cbc0038I Pass   8: suminf.    0.48913 (2) obj. -30.2541 iterations 4
Cbc0038I Pass   9: suminf.    0.02905 (2) obj. -30.2541 iterations 6
Cbc0038I Pass  10: suminf.    0.02905 (2) obj. -30.2541 iterations 0
Cbc0038I Pass  11: suminf.    0.68248 (2) obj. -31.2763 iterations 7
Cbc0038I Pass  12: suminf.    0.23333 (1) obj. -33.3244 iterations 1
Cbc0038I Pass  13: suminf.    0.34692 (1) obj. -30.2541 iterations 1
Cbc0038I Pass  14: suminf.    2.25501 (14) obj. -30.2541 iterations 28
Cbc0038I Pass  15: suminf.    0.31497 (6) obj. -30.2541 iterations 11
Cbc0038I Pass  16: suminf.    1.10115 (7) obj. -30.2541 iterations 14
Cbc0038I Pass  17: suminf.    1.02992 (7) obj. -30.2541 iterations 3
Cbc0038I Pass  18: suminf.    0.68454 (11) obj. -30.2541 iterations 13
Cbc0038I Pass  19: suminf.    0.68454 (11) obj. -30.2541 iterations 0
Cbc0038I Pass  20: suminf.    0.98920 (4) obj. -30.2541 iterations 17
Cbc0038I Pass  21: suminf.    0.85306 (7) obj. -30.2541 iterations 8
Cbc0038I Pass  22: suminf.    1.33862 (7) obj. -30.2541 iterations 6
Cbc0038I Pass  23: suminf.    0.82747 (7) obj. -30.2541 iterations 4
Cbc0038I Pass  24: suminf.    0.96596 (10) obj. -30.2541 iterations 25
Cbc0038I Pass  25: suminf.    0.76574 (11) obj. -30.2541 iterations 7
Cbc0038I Pass  26: suminf.    2.41515 (8) obj. -30.2541 iterations 21
Cbc0038I Pass  27: suminf.    1.75888 (9) obj. -30.2541 iterations 8
Cbc0038I Pass  28: suminf.    0.29130 (6) obj. -30.2541 iterations 4
Cbc0038I Pass  29: suminf.    1.54444 (6) obj. -30.2541 iterations 14
Cbc0038I Pass  30: suminf.    1.10219 (8) obj. -30.2541 iterations 9
Cbc0038I Pass  31: suminf.    1.55609 (8) obj. -30.2541 iterations 8
Cbc0038I Pass  32: suminf.    1.08416 (8) obj. -30.2541 iterations 5
Cbc0038I Pass  33: suminf.    1.55609 (8) obj. -30.2541 iterations 8
Cbc0038I Pass  34: suminf.    0.72853 (7) obj. -30.2541 iterations 4
Cbc0038I Rounding solution of -34.9408 is better than previous of -25.8575

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 55 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -34.9408 to -38.0668 (0.10 seconds)
Cbc0038I Round again with cutoff of -44.418
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.01224 (38) obj. -44.418 iterations 4
Cbc0038I Pass  35: suminf.    0.99365 (25) obj. -44.418 iterations 2
Cbc0038I Pass  36: suminf.    1.16298 (17) obj. -44.418 iterations 18
Cbc0038I Pass  37: suminf.    1.70964 (20) obj. -44.418 iterations 20
Cbc0038I Pass  38: suminf.    1.62220 (18) obj. -44.418 iterations 4
Cbc0038I Pass  39: suminf.    1.59434 (15) obj. -44.418 iterations 33
Cbc0038I Pass  40: suminf.    1.10338 (15) obj. -44.418 iterations 7
Cbc0038I Pass  41: suminf.    1.96068 (15) obj. -44.418 iterations 12
Cbc0038I Pass  42: suminf.    1.65418 (15) obj. -44.418 iterations 6
Cbc0038I Pass  43: suminf.    1.77328 (16) obj. -44.418 iterations 22
Cbc0038I Pass  44: suminf.    1.13973 (14) obj. -44.418 iterations 15
Cbc0038I Pass  45: suminf.    1.47541 (14) obj. -44.418 iterations 18
Cbc0038I Pass  46: suminf.    0.83565 (13) obj. -44.418 iterations 7
Cbc0038I Pass  47: suminf.    1.60654 (17) obj. -44.418 iterations 16
Cbc0038I Pass  48: suminf.    1.10338 (15) obj. -44.418 iterations 7
Cbc0038I Pass  49: suminf.    1.96068 (15) obj. -44.418 iterations 11
Cbc0038I Pass  50: suminf.    1.65418 (15) obj. -44.418 iterations 5
Cbc0038I Pass  51: suminf.    1.17997 (16) obj. -44.418 iterations 11
Cbc0038I Pass  52: suminf.    1.17324 (15) obj. -44.418 iterations 3
Cbc0038I Pass  53: suminf.    1.50482 (14) obj. -44.418 iterations 26
Cbc0038I Pass  54: suminf.    1.10338 (15) obj. -44.418 iterations 8
Cbc0038I Pass  55: suminf.    1.96068 (15) obj. -44.418 iterations 11
Cbc0038I Pass  56: suminf.    1.65418 (15) obj. -44.418 iterations 5
Cbc0038I Pass  57: suminf.    1.96068 (15) obj. -44.418 iterations 10
Cbc0038I Pass  58: suminf.    2.07229 (18) obj. -44.418 iterations 32
Cbc0038I Pass  59: suminf.    1.48858 (16) obj. -44.418 iterations 10
Cbc0038I Pass  60: suminf.    1.48858 (16) obj. -44.418 iterations 3
Cbc0038I Pass  61: suminf.    1.59434 (15) obj. -44.418 iterations 28
Cbc0038I Pass  62: suminf.    1.10338 (15) obj. -44.418 iterations 5
Cbc0038I Pass  63: suminf.    1.96068 (15) obj. -44.418 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 21 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -38.0668 - took 0.10 seconds
Cbc0012I Integer solution of -38.066766 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 18 rows 21 columns
Cbc0031I 57 added rows had average density of 26.859649
Cbc0013I At root node, 57 cuts changed objective from -69.822706 to -46.884782 in 20 passes
Cbc0014I Cut generator 0 (Probing) - 1885 row cuts average 3.0 elements, 4 column cuts (4 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 61 row cuts average 76.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 21 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 77 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 312 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 76.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 71 row cuts average 28.1 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.066766 best solution, best possible -46.884782 (0.58 seconds)
Cbc0004I Integer solution of -38.918306 found after 593 iterations and 1 nodes (0.68 seconds)
Cbc0010I After 6 nodes, 3 on tree, -38.918306 best solution, best possible -44.850763 (1.34 seconds)
Cbc0010I After 32 nodes, 1 on tree, -38.918306 best solution, best possible -44.849394 (2.04 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 47 rows 58 columns
Cbc0010I After 41 nodes, 8 on tree, -38.918306 best solution, best possible -44.849394 (2.75 seconds)
Cbc0038I Full problem 161 rows 117 columns, reduced to 91 rows 103 columns
Cbc0044I Reduced cost fixing - 91 rows, 103 columns - restarting search
Cbc0038I Initial state - 41 integers unsatisfied sum - 3.92542
Cbc0038I Pass   1: suminf.    1.09955 (37) obj. -38.9183 iterations 19
Cbc0038I Pass   2: suminf.    1.05124 (24) obj. -38.9183 iterations 3
Cbc0038I Pass   3: suminf.    1.00730 (25) obj. -38.9183 iterations 22
Cbc0038I Pass   4: suminf.    2.05377 (16) obj. -38.9183 iterations 12
Cbc0038I Pass   5: suminf.    1.43153 (13) obj. -38.9183 iterations 5
Cbc0038I Pass   6: suminf.    1.19507 (15) obj. -38.9183 iterations 3
Cbc0038I Pass   7: suminf.    1.17799 (9) obj. -38.9183 iterations 14
Cbc0038I Pass   8: suminf.    1.09459 (9) obj. -38.9183 iterations 2
Cbc0038I Pass   9: suminf.    1.65088 (10) obj. -38.9183 iterations 24
Cbc0038I Pass  10: suminf.    1.65088 (10) obj. -38.9183 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (2.99 seconds)
Cbc0038I Full problem 92 rows 103 columns, reduced to 92 rows 103 columns
Cbc0038I After 3.08 seconds - Feasibility pump exiting with objective of -34.0668 - took 0.10 seconds
Cbc0031I 45 added rows had average density of 50.533333
Cbc0013I At root node, 45 cuts changed objective from -68.453287 to -45.226495 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4074 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 589 row cuts average 99.1 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 187 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 517 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 838 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 35.4 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 89 row cuts average 28.6 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 644 row cuts average 16.6 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -45.226495 (5.30 seconds)
Cbc0010I After 32 nodes, 5 on tree, 1e+50 best solution, best possible -45.226374 (6.36 seconds)
Cbc0010I After 58 nodes, 7 on tree, 1e+50 best solution, best possible -43.706363 (7.36 seconds)
Cbc0001I Search completed - best objective 1e+50, took 6071 iterations and 78 nodes (8.03 seconds)
Cbc0032I Strong branching done 1028 times (15688 iterations), fathomed 2 nodes and fixed 30 variables
Cbc0035I Maximum depth 13, 220 variables fixed on reduced cost
Cbc0038I Probing was tried 268 times and created 5305 cuts of which 0 were active after adding rounds of cuts (0.096 seconds)
Cbc0038I Gomory was tried 258 times and created 592 cuts of which 0 were active after adding rounds of cuts (0.164 seconds)
Cbc0038I Knapsack was tried 258 times and created 499 cuts of which 0 were active after adding rounds of cuts (0.085 seconds)
Cbc0038I Clique was tried 258 times and created 756 cuts of which 0 were active after adding rounds of cuts (0.026 seconds)
Cbc0038I OddWheel was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.036 seconds)
Cbc0038I MixedIntegerRounding2 was tried 258 times and created 1202 cuts of which 0 were active after adding rounds of cuts (0.118 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I TwoMirCuts was tried 258 times and created 216 cuts of which 0 were active after adding rounds of cuts (0.067 seconds)
Cbc0038I ZeroHalf was tried 258 times and created 215 cuts of which 0 were active after adding rounds of cuts (1.773 seconds)
Cbc0038I Stored from first was tried 258 times and created 869 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -38.918306, took 8890 iterations and 128 nodes (8.03 seconds)
Cbc0032I Strong branching done 894 times (18129 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 13, 103 variables fixed on reduced cost
Total time (CPU seconds):       5.21   (Wallclock seconds):       8.04

