Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000144689 - average 1.07977e-06, 6 fixed columns
Coin0506I Presolve 123 (-11) rows, 70 (-6) columns and 378 (-34) elements
Clp0029I End of values pass after 70 iterations
Clp0000I Optimal - objective value 42.372878
Clp0000I Optimal - objective value 42.372878
Coin0511I After Postsolve, objective 42.372878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.372878
Clp0000I Optimal - objective value 42.372878
Clp0000I Optimal - objective value 42.372878
Coin0511I After Postsolve, objective 42.372878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.37287788 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 8.69068
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.01963 iterations 50
Cbc0038I Solution found of -2.01963
Cbc0038I Relaxing continuous gives -2.01963
Cbc0038I Rounding solution of -4.86593 is better than previous of -2.01963

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -4.86593 to -14.7963 (0.04 seconds)
Cbc0038I Round again with cutoff of -17.5541
Cbc0038I Pass   2: suminf.    1.79586 (9) obj. -17.5541 iterations 7
Cbc0038I Pass   3: suminf.    1.36656 (6) obj. -17.5541 iterations 10
Cbc0038I Pass   4: suminf.    1.35071 (8) obj. -17.5541 iterations 6
Cbc0038I Pass   5: suminf.    1.65666 (5) obj. -17.5541 iterations 14
Cbc0038I Pass   6: suminf.    1.64632 (5) obj. -17.5541 iterations 1
Cbc0038I Pass   7: suminf.    1.39709 (5) obj. -17.5541 iterations 9
Cbc0038I Pass   8: suminf.    1.34108 (5) obj. -17.5541 iterations 1
Cbc0038I Pass   9: suminf.    1.94159 (6) obj. -17.5541 iterations 6
Cbc0038I Pass  10: suminf.    1.58917 (6) obj. -17.5541 iterations 7
Cbc0038I Pass  11: suminf.    2.86358 (11) obj. -17.5541 iterations 15
Cbc0038I Pass  12: suminf.    2.10584 (8) obj. -17.5541 iterations 8
Cbc0038I Pass  13: suminf.    2.08689 (9) obj. -17.5541 iterations 15
Cbc0038I Pass  14: suminf.    2.08689 (9) obj. -17.5541 iterations 0
Cbc0038I Pass  15: suminf.    2.13781 (6) obj. -17.5541 iterations 8
Cbc0038I Pass  16: suminf.    1.83064 (7) obj. -17.5541 iterations 1
Cbc0038I Pass  17: suminf.    1.83064 (7) obj. -17.5541 iterations 0
Cbc0038I Pass  18: suminf.    1.83701 (7) obj. -17.5541 iterations 9
Cbc0038I Pass  19: suminf.    1.83701 (7) obj. -17.5541 iterations 0
Cbc0038I Pass  20: suminf.    2.89249 (7) obj. -17.5541 iterations 3
Cbc0038I Pass  21: suminf.    1.47363 (6) obj. -17.5541 iterations 5
Cbc0038I Pass  22: suminf.    1.47363 (6) obj. -17.5541 iterations 0
Cbc0038I Pass  23: suminf.    2.65068 (8) obj. -17.5541 iterations 7
Cbc0038I Pass  24: suminf.    3.09710 (7) obj. -17.5541 iterations 4
Cbc0038I Pass  25: suminf.    1.61449 (6) obj. -17.5541 iterations 7
Cbc0038I Pass  26: suminf.    1.54181 (5) obj. -17.5541 iterations 1
Cbc0038I Pass  27: suminf.    2.42229 (6) obj. -17.5541 iterations 4
Cbc0038I Pass  28: suminf.    2.42229 (6) obj. -17.5541 iterations 0
Cbc0038I Pass  29: suminf.    1.88939 (6) obj. -17.5541 iterations 4
Cbc0038I Pass  30: suminf.    1.71455 (7) obj. -17.5541 iterations 2
Cbc0038I Pass  31: suminf.    2.03974 (9) obj. -17.5541 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -14.7963 - took 0.06 seconds
Cbc0012I Integer solution of -14.796328 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 87 rows 50 columns
Cbc0031I 26 added rows had average density of 62.230769
Cbc0013I At root node, 26 cuts changed objective from -42.372878 to -34.118254 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16249 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.090 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1786 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.796328 best solution, best possible -34.118254 (0.98 seconds)
Cbc0012I Integer solution of -14.885548 found by rounding after 8168 iterations and 18 nodes (1.21 seconds)
Cbc0012I Integer solution of -14.916928 found by rounding after 8189 iterations and 19 nodes (1.21 seconds)
Cbc0012I Integer solution of -15.256568 found by rounding after 8350 iterations and 29 nodes (1.23 seconds)
Cbc0004I Integer solution of -15.287948 found after 8401 iterations and 38 nodes (1.23 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 66 rows 40 columns
Cbc0012I Integer solution of -15.330878 found by RINS after 8415 iterations and 41 nodes (1.29 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 4 rows 7 columns
Cbc0001I Search completed - best objective -15.330878, took 10188 iterations and 102 nodes (1.41 seconds)
Cbc0032I Strong branching done 906 times (18564 iterations), fathomed 10 nodes and fixed 17 variables
Cbc0035I Maximum depth 30, 224 variables fixed on reduced cost
Total time (CPU seconds):       1.38   (Wallclock seconds):       1.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-54) rows, 116 (-36) columns and 1818 (-1485) elements
Clp1000I sum of infeasibilities 2.28488e-07 - average 2.28488e-09, 57 fixed columns
Coin0506I Presolve 45 (-55) rows, 59 (-57) columns and 203 (-1615) elements
Clp0006I 0  Obj -9.7556579 Dual inf 80.930307 (59)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.32180044 - largest nonzero change 2.9514315e-05 ( 0.0024750985%) - largest zero change 2.8599231e-05
Clp0000I Optimal - objective value -8.9730579
Clp0000I Optimal - objective value -8.9730579
Coin0511I After Postsolve, objective -8.9730579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -8.9730579 Dual inf 65.162948 (42)
Clp0014I Perturbing problem by 0.001% of 1.5355104 - largest nonzero change 2.2049403e-05 ( 0.0016580886%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 57.679509
Clp0000I Optimal - objective value 57.679509
Clp0000I Optimal - objective value 57.679509
Coin0511I After Postsolve, objective 57.679509, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.67950875 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 117 columns (117 integer (117 of which binary)) and 1825 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.150%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.44592
Cbc0038I Pass   1: suminf.    2.50849 (30) obj. -40.839 iterations 4
Cbc0038I Pass   2: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass   3: suminf.    1.22971 (16) obj. -12.2939 iterations 14
Cbc0038I Pass   4: suminf.    0.40365 (6) obj. 1.45743 iterations 10
Cbc0038I Solution found of 7.98061
Cbc0038I Rounding solution of 4.09997 is better than previous of 7.98061

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 4.09997 to -2.36709 (0.03 seconds)
Cbc0038I Round again with cutoff of -6.87309
Cbc0038I Pass   5: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass   6: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass   7: suminf.    1.08063 (5) obj. -6.87309 iterations 32
Cbc0038I Pass   8: suminf.    0.23168 (3) obj. -6.98064 iterations 2
Cbc0038I Pass   9: suminf.    0.55532 (2) obj. -6.87309 iterations 5
Cbc0038I Pass  10: suminf.    0.20385 (2) obj. -6.87309 iterations 1
Cbc0038I Pass  11: suminf.    0.33540 (3) obj. -6.87309 iterations 4
Cbc0038I Pass  12: suminf.    0.33540 (3) obj. -6.87309 iterations 1
Cbc0038I Pass  13: suminf.    1.81777 (12) obj. -6.87309 iterations 19
Cbc0038I Pass  14: suminf.    1.60510 (10) obj. -6.87309 iterations 3
Cbc0038I Pass  15: suminf.    1.18526 (4) obj. -6.87309 iterations 15
Cbc0038I Pass  16: suminf.    0.66072 (3) obj. -6.87309 iterations 5
Cbc0038I Pass  17: suminf.    0.71032 (3) obj. -6.87309 iterations 4
Cbc0038I Pass  18: suminf.    0.20696 (2) obj. -6.91941 iterations 4
Cbc0038I Pass  19: suminf.    0.69581 (3) obj. -6.87309 iterations 3
Cbc0038I Pass  20: suminf.    2.12841 (14) obj. -6.87309 iterations 17
Cbc0038I Pass  21: suminf.    0.93940 (12) obj. -6.87309 iterations 5
Cbc0038I Pass  22: suminf.    0.62704 (4) obj. -6.87309 iterations 16
Cbc0038I Pass  23: suminf.    0.35563 (3) obj. -6.87309 iterations 5
Cbc0038I Pass  24: suminf.    0.44581 (3) obj. -6.87309 iterations 4
Cbc0038I Pass  25: suminf.    0.31821 (3) obj. -6.87309 iterations 2
Cbc0038I Pass  26: suminf.    0.64644 (3) obj. -6.87309 iterations 5
Cbc0038I Pass  27: suminf.    1.42112 (12) obj. -6.87309 iterations 16
Cbc0038I Pass  28: suminf.    1.12526 (12) obj. -6.87309 iterations 4
Cbc0038I Pass  29: suminf.    0.53158 (5) obj. -6.87309 iterations 13
Cbc0038I Pass  30: suminf.    0.36254 (5) obj. -6.87309 iterations 2
Cbc0038I Pass  31: suminf.    0.53158 (5) obj. -6.87309 iterations 4
Cbc0038I Pass  32: suminf.    1.37597 (11) obj. -6.87309 iterations 17
Cbc0038I Pass  33: suminf.    0.41671 (8) obj. -7.49136 iterations 6
Cbc0038I Pass  34: suminf.    0.71461 (4) obj. -6.87309 iterations 9
Cbc0038I Rounding solution of -2.50777 is better than previous of -2.36709

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 39 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -2.50777 to -14.3845 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.9929
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass  35: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass  36: suminf.    1.71436 (15) obj. -20.9929 iterations 21
Cbc0038I Pass  37: suminf.    1.71436 (15) obj. -20.9929 iterations 0
Cbc0038I Pass  38: suminf.    1.29018 (9) obj. -20.9929 iterations 18
Cbc0038I Pass  39: suminf.    1.29018 (9) obj. -20.9929 iterations 1
Cbc0038I Pass  40: suminf.    1.20627 (9) obj. -20.9929 iterations 4
Cbc0038I Pass  41: suminf.    1.04377 (9) obj. -20.9929 iterations 2
Cbc0038I Pass  42: suminf.    1.29018 (9) obj. -20.9929 iterations 5
Cbc0038I Pass  43: suminf.    1.51717 (11) obj. -20.9929 iterations 13
Cbc0038I Pass  44: suminf.    0.93916 (11) obj. -20.9929 iterations 4
Cbc0038I Pass  45: suminf.    1.32324 (10) obj. -20.9929 iterations 6
Cbc0038I Pass  46: suminf.    0.80857 (10) obj. -20.9929 iterations 1
Cbc0038I Pass  47: suminf.    2.06561 (18) obj. -20.9929 iterations 12
Cbc0038I Pass  48: suminf.    1.53984 (12) obj. -20.9929 iterations 10
Cbc0038I Pass  49: suminf.    1.53984 (12) obj. -20.9929 iterations 2
Cbc0038I Pass  50: suminf.    1.20466 (10) obj. -20.9929 iterations 9
Cbc0038I Pass  51: suminf.    1.20466 (10) obj. -20.9929 iterations 0
Cbc0038I Pass  52: suminf.    1.43884 (10) obj. -20.9929 iterations 8
Cbc0038I Pass  53: suminf.    1.07485 (10) obj. -20.9929 iterations 4
Cbc0038I Pass  54: suminf.    1.20466 (10) obj. -20.9929 iterations 7
Cbc0038I Pass  55: suminf.    1.91324 (15) obj. -20.9929 iterations 16
Cbc0038I Pass  56: suminf.    1.91324 (15) obj. -20.9929 iterations 2
Cbc0038I Pass  57: suminf.    1.12716 (11) obj. -20.9929 iterations 10
Cbc0038I Pass  58: suminf.    0.98602 (12) obj. -20.9929 iterations 5
Cbc0038I Pass  59: suminf.    1.38056 (12) obj. -20.9929 iterations 8
Cbc0038I Pass  60: suminf.    1.38056 (12) obj. -20.9929 iterations 0
Cbc0038I Pass  61: suminf.    1.12716 (11) obj. -20.9929 iterations 5
Cbc0038I Pass  62: suminf.    0.98738 (12) obj. -20.9929 iterations 4
Cbc0038I Pass  63: suminf.    2.00486 (18) obj. -20.9929 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 40 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -14.3845 - took 0.08 seconds
Cbc0012I Integer solution of -14.384488 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 101 rows 117 columns, reduced to 35 rows 42 columns
Cbc0031I 59 added rows had average density of 29.542373
Cbc0013I At root node, 59 cuts changed objective from -47.426253 to -20.725043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16172 row cuts average 2.0 elements, 0 column cuts (30 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1488 row cuts average 109.7 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 379 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 724 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 70.4 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 117 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.613 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.384488 best solution, best possible -20.725043 (2.41 seconds)
Cbc0012I Integer solution of -14.771338 found by DiveCoefficient after 6133 iterations and 3 nodes (2.69 seconds)
Cbc0012I Integer solution of -14.885548 found by DiveCoefficient after 6244 iterations and 5 nodes (2.78 seconds)
Cbc0012I Integer solution of -15.256568 found by DiveCoefficient after 6303 iterations and 9 nodes (2.98 seconds)
Cbc0012I Integer solution of -15.287948 found by rounding after 6329 iterations and 11 nodes (3.02 seconds)
Cbc0012I Integer solution of -15.330878 found by rounding after 6363 iterations and 13 nodes (3.07 seconds)
Cbc0010I After 14 nodes, 7 on tree, -15.330878 best solution, best possible -20.725043 (3.12 seconds)
Cbc0010I After 26 nodes, 5 on tree, -15.330878 best solution, best possible -20.725043 (3.87 seconds)
Cbc0001I Search completed - best objective -15.330878, took 7630 iterations and 36 nodes (4.24 seconds)
Cbc0032I Strong branching done 568 times (12117 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 8, 53 variables fixed on reduced cost
Total time (CPU seconds):       3.11   (Wallclock seconds):       4.25

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 76 (-2) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000144689 - average 1.07977e-06, 6 fixed columns
Coin0506I Presolve 123 (-11) rows, 70 (-6) columns and 378 (-34) elements
Clp0029I End of values pass after 70 iterations
Clp0000I Optimal - objective value 42.372878
Clp0000I Optimal - objective value 42.372878
Coin0511I After Postsolve, objective 42.372878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.372878
Clp0000I Optimal - objective value 42.372878
Clp0000I Optimal - objective value 42.372878
Coin0511I After Postsolve, objective 42.372878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.37287788 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 76 columns (75 integer (75 of which binary)) and 412 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 8.69068
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -2.01963 iterations 50
Cbc0038I Solution found of -2.01963
Cbc0038I Relaxing continuous gives -2.01963
Cbc0038I Rounding solution of -4.86593 is better than previous of -2.01963

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 87 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -4.86593 to -14.7963 (0.04 seconds)
Cbc0038I Round again with cutoff of -17.5541
Cbc0038I Pass   2: suminf.    1.79586 (9) obj. -17.5541 iterations 7
Cbc0038I Pass   3: suminf.    1.36656 (6) obj. -17.5541 iterations 10
Cbc0038I Pass   4: suminf.    1.35071 (8) obj. -17.5541 iterations 6
Cbc0038I Pass   5: suminf.    1.65666 (5) obj. -17.5541 iterations 14
Cbc0038I Pass   6: suminf.    1.64632 (5) obj. -17.5541 iterations 1
Cbc0038I Pass   7: suminf.    1.39709 (5) obj. -17.5541 iterations 9
Cbc0038I Pass   8: suminf.    1.34108 (5) obj. -17.5541 iterations 1
Cbc0038I Pass   9: suminf.    1.94159 (6) obj. -17.5541 iterations 6
Cbc0038I Pass  10: suminf.    1.58917 (6) obj. -17.5541 iterations 7
Cbc0038I Pass  11: suminf.    2.86358 (11) obj. -17.5541 iterations 15
Cbc0038I Pass  12: suminf.    2.10584 (8) obj. -17.5541 iterations 8
Cbc0038I Pass  13: suminf.    2.08689 (9) obj. -17.5541 iterations 15
Cbc0038I Pass  14: suminf.    2.08689 (9) obj. -17.5541 iterations 0
Cbc0038I Pass  15: suminf.    2.13781 (6) obj. -17.5541 iterations 8
Cbc0038I Pass  16: suminf.    1.83064 (7) obj. -17.5541 iterations 1
Cbc0038I Pass  17: suminf.    1.83064 (7) obj. -17.5541 iterations 0
Cbc0038I Pass  18: suminf.    1.83701 (7) obj. -17.5541 iterations 9
Cbc0038I Pass  19: suminf.    1.83701 (7) obj. -17.5541 iterations 0
Cbc0038I Pass  20: suminf.    2.89249 (7) obj. -17.5541 iterations 3
Cbc0038I Pass  21: suminf.    1.47363 (6) obj. -17.5541 iterations 5
Cbc0038I Pass  22: suminf.    1.47363 (6) obj. -17.5541 iterations 0
Cbc0038I Pass  23: suminf.    2.65068 (8) obj. -17.5541 iterations 7
Cbc0038I Pass  24: suminf.    3.09710 (7) obj. -17.5541 iterations 4
Cbc0038I Pass  25: suminf.    1.61449 (6) obj. -17.5541 iterations 7
Cbc0038I Pass  26: suminf.    1.54181 (5) obj. -17.5541 iterations 1
Cbc0038I Pass  27: suminf.    2.42229 (6) obj. -17.5541 iterations 4
Cbc0038I Pass  28: suminf.    2.42229 (6) obj. -17.5541 iterations 0
Cbc0038I Pass  29: suminf.    1.88939 (6) obj. -17.5541 iterations 4
Cbc0038I Pass  30: suminf.    1.71455 (7) obj. -17.5541 iterations 2
Cbc0038I Pass  31: suminf.    2.03974 (9) obj. -17.5541 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -14.7963 - took 0.06 seconds
Cbc0012I Integer solution of -14.796328 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 87 rows 50 columns
Cbc0031I 26 added rows had average density of 62.230769
Cbc0013I At root node, 26 cuts changed objective from -42.372878 to -34.118254 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16249 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1786 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.796328 best solution, best possible -34.118254 (1.15 seconds)
Cbc0012I Integer solution of -14.885548 found by rounding after 8168 iterations and 18 nodes (1.41 seconds)
Cbc0012I Integer solution of -14.916928 found by rounding after 8189 iterations and 19 nodes (1.42 seconds)
Cbc0012I Integer solution of -15.256568 found by rounding after 8350 iterations and 29 nodes (1.43 seconds)
Cbc0004I Integer solution of -15.287948 found after 8401 iterations and 38 nodes (1.44 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 66 rows 40 columns
Cbc0012I Integer solution of -15.330878 found by RINS after 8415 iterations and 41 nodes (1.51 seconds)
Cbc0038I Full problem 134 rows 76 columns, reduced to 4 rows 7 columns
Cbc0001I Search completed - best objective -15.330878, took 10188 iterations and 102 nodes (1.67 seconds)
Cbc0032I Strong branching done 906 times (18564 iterations), fathomed 10 nodes and fixed 17 variables
Cbc0035I Maximum depth 30, 224 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       1.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 116 (-37) columns and 1818 (-1486) elements
Clp1000I sum of infeasibilities 2.28488e-07 - average 2.28488e-09, 57 fixed columns
Coin0506I Presolve 45 (-55) rows, 59 (-57) columns and 203 (-1615) elements
Clp0006I 0  Obj -9.7556579 Dual inf 80.930307 (59)
Clp0029I End of values pass after 55 iterations
Clp0014I Perturbing problem by 0.001% of 0.32180044 - largest nonzero change 2.9514315e-05 ( 0.0024750985%) - largest zero change 2.8599231e-05
Clp0000I Optimal - objective value -8.9730579
Clp0000I Optimal - objective value -8.9730579
Coin0511I After Postsolve, objective -8.9730579, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -8.9730579 Dual inf 65.162948 (42)
Clp0014I Perturbing problem by 0.001% of 1.5355104 - largest nonzero change 2.2049403e-05 ( 0.0016580886%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 57.679509
Clp0000I Optimal - objective value 57.679509
Clp0000I Optimal - objective value 57.679509
Coin0511I After Postsolve, objective 57.679509, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 57.67950875 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 117 columns (117 integer (117 of which binary)) and 1825 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.150%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.44592
Cbc0038I Pass   1: suminf.    2.50849 (30) obj. -40.839 iterations 4
Cbc0038I Pass   2: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass   3: suminf.    1.22971 (16) obj. -12.2939 iterations 14
Cbc0038I Pass   4: suminf.    0.40365 (6) obj. 1.45743 iterations 10
Cbc0038I Solution found of 7.98061
Cbc0038I Rounding solution of 4.09997 is better than previous of 7.98061

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 28 rows 32 columns
Cbc0038I Mini branch and bound improved solution from 4.09997 to -2.36709 (0.03 seconds)
Cbc0038I Round again with cutoff of -6.87309
Cbc0038I Pass   5: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass   6: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass   7: suminf.    1.08063 (5) obj. -6.87309 iterations 32
Cbc0038I Pass   8: suminf.    0.23168 (3) obj. -6.98064 iterations 2
Cbc0038I Pass   9: suminf.    0.55532 (2) obj. -6.87309 iterations 5
Cbc0038I Pass  10: suminf.    0.20385 (2) obj. -6.87309 iterations 1
Cbc0038I Pass  11: suminf.    0.33540 (3) obj. -6.87309 iterations 4
Cbc0038I Pass  12: suminf.    0.33540 (3) obj. -6.87309 iterations 1
Cbc0038I Pass  13: suminf.    1.81777 (12) obj. -6.87309 iterations 19
Cbc0038I Pass  14: suminf.    1.60510 (10) obj. -6.87309 iterations 3
Cbc0038I Pass  15: suminf.    1.18526 (4) obj. -6.87309 iterations 15
Cbc0038I Pass  16: suminf.    0.66072 (3) obj. -6.87309 iterations 5
Cbc0038I Pass  17: suminf.    0.71032 (3) obj. -6.87309 iterations 4
Cbc0038I Pass  18: suminf.    0.20696 (2) obj. -6.91941 iterations 4
Cbc0038I Pass  19: suminf.    0.69581 (3) obj. -6.87309 iterations 3
Cbc0038I Pass  20: suminf.    2.12841 (14) obj. -6.87309 iterations 17
Cbc0038I Pass  21: suminf.    0.93940 (12) obj. -6.87309 iterations 5
Cbc0038I Pass  22: suminf.    0.62704 (4) obj. -6.87309 iterations 16
Cbc0038I Pass  23: suminf.    0.35563 (3) obj. -6.87309 iterations 5
Cbc0038I Pass  24: suminf.    0.44581 (3) obj. -6.87309 iterations 4
Cbc0038I Pass  25: suminf.    0.31821 (3) obj. -6.87309 iterations 2
Cbc0038I Pass  26: suminf.    0.64644 (3) obj. -6.87309 iterations 5
Cbc0038I Pass  27: suminf.    1.42112 (12) obj. -6.87309 iterations 16
Cbc0038I Pass  28: suminf.    1.12526 (12) obj. -6.87309 iterations 4
Cbc0038I Pass  29: suminf.    0.53158 (5) obj. -6.87309 iterations 13
Cbc0038I Pass  30: suminf.    0.36254 (5) obj. -6.87309 iterations 2
Cbc0038I Pass  31: suminf.    0.53158 (5) obj. -6.87309 iterations 4
Cbc0038I Pass  32: suminf.    1.37597 (11) obj. -6.87309 iterations 17
Cbc0038I Pass  33: suminf.    0.41671 (8) obj. -7.49136 iterations 6
Cbc0038I Pass  34: suminf.    0.71461 (4) obj. -6.87309 iterations 9
Cbc0038I Rounding solution of -2.50777 is better than previous of -2.36709

Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 39 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -2.50777 to -14.3845 (0.10 seconds)
Cbc0038I Round again with cutoff of -20.9929
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass  35: suminf.    2.50849 (30) obj. -40.839 iterations 0
Cbc0038I Pass  36: suminf.    1.71436 (15) obj. -20.9929 iterations 21
Cbc0038I Pass  37: suminf.    1.71436 (15) obj. -20.9929 iterations 0
Cbc0038I Pass  38: suminf.    1.29018 (9) obj. -20.9929 iterations 18
Cbc0038I Pass  39: suminf.    1.29018 (9) obj. -20.9929 iterations 1
Cbc0038I Pass  40: suminf.    1.20627 (9) obj. -20.9929 iterations 4
Cbc0038I Pass  41: suminf.    1.04377 (9) obj. -20.9929 iterations 2
Cbc0038I Pass  42: suminf.    1.29018 (9) obj. -20.9929 iterations 5
Cbc0038I Pass  43: suminf.    1.51717 (11) obj. -20.9929 iterations 13
Cbc0038I Pass  44: suminf.    0.93916 (11) obj. -20.9929 iterations 4
Cbc0038I Pass  45: suminf.    1.32324 (10) obj. -20.9929 iterations 6
Cbc0038I Pass  46: suminf.    0.80857 (10) obj. -20.9929 iterations 1
Cbc0038I Pass  47: suminf.    2.06561 (18) obj. -20.9929 iterations 12
Cbc0038I Pass  48: suminf.    1.53984 (12) obj. -20.9929 iterations 10
Cbc0038I Pass  49: suminf.    1.53984 (12) obj. -20.9929 iterations 2
Cbc0038I Pass  50: suminf.    1.20466 (10) obj. -20.9929 iterations 9
Cbc0038I Pass  51: suminf.    1.20466 (10) obj. -20.9929 iterations 0
Cbc0038I Pass  52: suminf.    1.43884 (10) obj. -20.9929 iterations 8
Cbc0038I Pass  53: suminf.    1.07485 (10) obj. -20.9929 iterations 4
Cbc0038I Pass  54: suminf.    1.20466 (10) obj. -20.9929 iterations 7
Cbc0038I Pass  55: suminf.    1.91324 (15) obj. -20.9929 iterations 16
Cbc0038I Pass  56: suminf.    1.91324 (15) obj. -20.9929 iterations 2
Cbc0038I Pass  57: suminf.    1.12716 (11) obj. -20.9929 iterations 10
Cbc0038I Pass  58: suminf.    0.98602 (12) obj. -20.9929 iterations 5
Cbc0038I Pass  59: suminf.    1.38056 (12) obj. -20.9929 iterations 8
Cbc0038I Pass  60: suminf.    1.38056 (12) obj. -20.9929 iterations 0
Cbc0038I Pass  61: suminf.    1.12716 (11) obj. -20.9929 iterations 5
Cbc0038I Pass  62: suminf.    0.98738 (12) obj. -20.9929 iterations 4
Cbc0038I Pass  63: suminf.    2.00486 (18) obj. -20.9929 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 117 columns, reduced to 40 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -14.3845 - took 0.09 seconds
Cbc0012I Integer solution of -14.384488 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 101 rows 117 columns, reduced to 35 rows 42 columns
Cbc0031I 59 added rows had average density of 29.542373
Cbc0013I At root node, 59 cuts changed objective from -47.426253 to -20.725043 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16172 row cuts average 2.0 elements, 0 column cuts (30 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1488 row cuts average 109.7 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 379 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 724 row cuts average 11.1 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 290 row cuts average 70.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 117 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.657 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -14.384488 best solution, best possible -20.725043 (2.69 seconds)
Cbc0012I Integer solution of -14.771338 found by DiveCoefficient after 6133 iterations and 3 nodes (3.01 seconds)
Cbc0012I Integer solution of -14.885548 found by DiveCoefficient after 6244 iterations and 5 nodes (3.11 seconds)
Cbc0012I Integer solution of -15.256568 found by DiveCoefficient after 6303 iterations and 9 nodes (3.37 seconds)
Cbc0010I After 10 nodes, 8 on tree, -15.256568 best solution, best possible -20.725043 (3.41 seconds)
Cbc0012I Integer solution of -15.287948 found by rounding after 6329 iterations and 11 nodes (3.41 seconds)
Cbc0012I Integer solution of -15.330878 found by rounding after 6363 iterations and 13 nodes (3.47 seconds)
Cbc0010I After 25 nodes, 4 on tree, -15.330878 best solution, best possible -20.725043 (4.18 seconds)
Cbc0001I Search completed - best objective -15.330878, took 7630 iterations and 36 nodes (4.87 seconds)
Cbc0032I Strong branching done 568 times (12117 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 8, 53 variables fixed on reduced cost
Total time (CPU seconds):       3.48   (Wallclock seconds):       4.89

