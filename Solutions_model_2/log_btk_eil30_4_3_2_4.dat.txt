Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 29 (-3) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 2.05313e-05 - average 4.10627e-07, 1 fixed columns
Coin0506I Presolve 48 (-2) rows, 28 (-1) columns and 145 (-5) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Coin0511I After Postsolve, objective 92.28205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Coin0511I After Postsolve, objective 92.28205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.28205011 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 29 columns (28 integer (28 of which binary)) and 151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.12403
Cbc0038I Pass   1: suminf.    0.03333 (1) obj. -29.1799 iterations 21
Cbc0038I Solution found of -9.75776
Cbc0038I Relaxing continuous gives -9.75776
Cbc0038I Rounding solution of -10.0981 is better than previous of -9.75776

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -10.0981 to -29.2343 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.5391
Cbc0038I Pass   2: suminf.    0.20155 (5) obj. -35.5391 iterations 6
Cbc0038I Pass   3: suminf.    0.57559 (2) obj. -35.5391 iterations 7
Cbc0038I Pass   4: suminf.    0.52897 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   5: suminf.    0.47379 (2) obj. -35.5391 iterations 3
Cbc0038I Pass   6: suminf.    0.41707 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   7: suminf.    0.21837 (2) obj. -35.5391 iterations 2
Cbc0038I Pass   8: suminf.    0.21717 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   9: suminf.    0.41329 (2) obj. -35.5391 iterations 3
Cbc0038I Pass  10: suminf.    0.41329 (2) obj. -35.5391 iterations 0
Cbc0038I Pass  11: suminf.    0.61835 (2) obj. -35.5391 iterations 1
Cbc0038I Pass  12: suminf.    2.33651 (7) obj. -35.5391 iterations 6
Cbc0038I Pass  13: suminf.    1.43728 (4) obj. -35.5391 iterations 5
Cbc0038I Pass  14: suminf.    0.88787 (3) obj. -35.5391 iterations 3
Cbc0038I Pass  15: suminf.    2.22236 (8) obj. -35.5391 iterations 8
Cbc0038I Pass  16: suminf.    0.63626 (4) obj. -35.5391 iterations 7
Cbc0038I Pass  17: suminf.    1.52992 (6) obj. -35.5391 iterations 4
Cbc0038I Pass  18: suminf.    1.09836 (3) obj. -35.5391 iterations 8
Cbc0038I Pass  19: suminf.    1.09836 (3) obj. -35.5391 iterations 0
Cbc0038I Pass  20: suminf.    1.10351 (3) obj. -35.5391 iterations 2
Cbc0038I Pass  21: suminf.    0.54038 (2) obj. -35.5391 iterations 4
Cbc0038I Pass  22: suminf.    0.40214 (2) obj. -35.5391 iterations 2
Cbc0038I Pass  23: suminf.    0.39748 (3) obj. -35.5391 iterations 1
Cbc0038I Pass  24: suminf.    0.79265 (4) obj. -35.5391 iterations 3
Cbc0038I Pass  25: suminf.    0.63626 (4) obj. -35.5391 iterations 1
Cbc0038I Pass  26: suminf.    1.52992 (6) obj. -35.5391 iterations 4
Cbc0038I Pass  27: suminf.    1.09836 (3) obj. -35.5391 iterations 8
Cbc0038I Pass  28: suminf.    1.09836 (3) obj. -35.5391 iterations 0
Cbc0038I Pass  29: suminf.    1.10351 (3) obj. -35.5391 iterations 2
Cbc0038I Pass  30: suminf.    0.54038 (2) obj. -35.5391 iterations 4
Cbc0038I Pass  31: suminf.    0.40214 (2) obj. -35.5391 iterations 2
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -46.8877
Cbc0038I Pass  31: suminf.    0.73980 (7) obj. -46.8877 iterations 2
Cbc0038I Pass  32: suminf.    0.94626 (3) obj. -46.8877 iterations 6
Cbc0038I Pass  33: suminf.    0.94626 (3) obj. -46.8877 iterations 0
Cbc0038I Pass  34: suminf.    1.28143 (3) obj. -46.8877 iterations 1
Cbc0038I Pass  35: suminf.    1.06987 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  36: suminf.    1.06987 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  37: suminf.    1.36447 (5) obj. -46.8877 iterations 3
Cbc0038I Pass  38: suminf.    1.46094 (4) obj. -46.8877 iterations 6
Cbc0038I Pass  39: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  40: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  41: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  42: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  43: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  44: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  45: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  46: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  47: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  48: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  49: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  50: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  51: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  52: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  53: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  54: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  55: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  56: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  57: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  58: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  59: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  60: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -29.2343 - took 0.09 seconds
Cbc0012I Integer solution of -29.23427 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 21 columns
Cbc0031I 9 added rows had average density of 22.777778
Cbc0013I At root node, 9 cuts changed objective from -92.28205 to -60.613629 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2504 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 863 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 75 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.23427, took 2932 iterations and 18 nodes (0.29 seconds)
Cbc0032I Strong branching done 202 times (1879 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.32   (Wallclock seconds):       0.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-13) rows, 55 (-5) columns and 506 (-106) elements
Clp1000I sum of infeasibilities 1.16445e-07 - average 2.37642e-09, 14 fixed columns
Coin0506I Presolve 31 (-18) rows, 36 (-19) columns and 247 (-259) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 3.1395799 - largest nonzero change 1.9054745e-05 ( 0.001281334%) - largest zero change 2.7681465e-05
Clp0000I Optimal - objective value 109.24467
Clp0000I Optimal - objective value 109.24467
Coin0511I After Postsolve, objective 109.24467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3211755 - largest nonzero change 2.0655749e-05 ( 0.0017325834%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 122.92487
Clp0000I Optimal - objective value 122.92487
Clp0000I Optimal - objective value 122.92487
Coin0511I After Postsolve, objective 122.92487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.9248651 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 55 columns (55 integer (55 of which binary)) and 509 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.666%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 8.44055
Cbc0038I Pass   1: suminf.    1.42192 (14) obj. -82.5228 iterations 13
Cbc0038I Pass   2: suminf.    1.42192 (14) obj. -82.5228 iterations 1
Cbc0038I Solution found of -12.1601
Cbc0038I Rounding solution of -22.1811 is better than previous of -12.1601

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -22.1811 to -25.5939 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.7239
Cbc0038I Pass   3: suminf.    1.42192 (14) obj. -82.5228 iterations 0
Cbc0038I Pass   4: suminf.    1.42192 (14) obj. -82.5228 iterations 1
Cbc0038I Pass   5: suminf.    0.69799 (2) obj. -34.7239 iterations 13
Cbc0038I Pass   6: suminf.    0.69799 (2) obj. -34.7239 iterations 0
Cbc0038I Pass   7: suminf.    0.50354 (2) obj. -34.7239 iterations 1
Cbc0038I Pass   8: suminf.    1.43322 (6) obj. -34.7239 iterations 8
Cbc0038I Pass   9: suminf.    0.75547 (3) obj. -40.6856 iterations 2
Cbc0038I Pass  10: suminf.    0.47018 (2) obj. -34.7239 iterations 7
Cbc0038I Pass  11: suminf.    0.47018 (2) obj. -34.7239 iterations 0
Cbc0038I Pass  12: suminf.    0.31277 (2) obj. -34.7239 iterations 3
Cbc0038I Pass  13: suminf.    1.33256 (6) obj. -34.7239 iterations 19
Cbc0038I Pass  14: suminf.    1.21324 (6) obj. -36.8717 iterations 2
Cbc0038I Pass  15: suminf.    0.98639 (3) obj. -34.7239 iterations 8
Cbc0038I Pass  16: suminf.    0.97636 (3) obj. -34.9044 iterations 1
Cbc0038I Pass  17: suminf.    2.06234 (8) obj. -41.5389 iterations 13
Cbc0038I Pass  18: suminf.    2.06234 (8) obj. -41.5389 iterations 1
Cbc0038I Pass  19: suminf.    1.05440 (5) obj. -34.7239 iterations 9
Cbc0038I Pass  20: suminf.    1.05438 (5) obj. -34.7239 iterations 3
Cbc0038I Pass  21: suminf.    2.88642 (10) obj. -34.7239 iterations 27
Cbc0038I Pass  22: suminf.    2.80139 (9) obj. -34.7239 iterations 1
Cbc0038I Pass  23: suminf.    1.09272 (6) obj. -34.7239 iterations 8
Cbc0038I Pass  24: suminf.    1.08812 (4) obj. -34.7239 iterations 3
Cbc0038I Pass  25: suminf.    1.12406 (4) obj. -34.7239 iterations 3
Cbc0038I Pass  26: suminf.    1.12406 (4) obj. -34.7239 iterations 0
Cbc0038I Pass  27: suminf.    1.09272 (6) obj. -34.7239 iterations 5
Cbc0038I Pass  28: suminf.    4.14497 (13) obj. -34.7239 iterations 18
Cbc0038I Pass  29: suminf.    3.80553 (13) obj. -34.7239 iterations 4
Cbc0038I Pass  30: suminf.    3.67808 (14) obj. -34.7239 iterations 5
Cbc0038I Pass  31: suminf.    1.53909 (7) obj. -34.7239 iterations 19
Cbc0038I Pass  32: suminf.    1.49981 (5) obj. -34.7239 iterations 3
Cbc0038I Rounding solution of -26.5939 is better than previous of -25.5939

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 39 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -26.5939 to -29.2343 (0.07 seconds)
Cbc0038I Round again with cutoff of -51.1576
Cbc0038I Pass  32: suminf.    1.42192 (14) obj. -82.5228 iterations 0
Cbc0038I Pass  33: suminf.    1.42192 (14) obj. -82.5228 iterations 1
Cbc0038I Pass  34: suminf.    0.57660 (3) obj. -51.1576 iterations 15
Cbc0038I Pass  35: suminf.    0.43418 (3) obj. -52.8667 iterations 4
Cbc0038I Pass  36: suminf.    1.02488 (6) obj. -54.9522 iterations 9
Cbc0038I Pass  37: suminf.    1.02488 (6) obj. -54.9522 iterations 1
Cbc0038I Pass  38: suminf.    0.89163 (5) obj. -51.1576 iterations 11
Cbc0038I Pass  39: suminf.    0.89163 (5) obj. -51.1576 iterations 3
Cbc0038I Pass  40: suminf.    0.86325 (5) obj. -51.1576 iterations 5
Cbc0038I Pass  41: suminf.    0.86325 (5) obj. -51.1576 iterations 1
Cbc0038I Pass  42: suminf.    0.89163 (5) obj. -51.1576 iterations 2
Cbc0038I Pass  43: suminf.    2.53547 (12) obj. -51.1576 iterations 14
Cbc0038I Pass  44: suminf.    2.53547 (12) obj. -51.1576 iterations 0
Cbc0038I Pass  45: suminf.    1.91672 (7) obj. -51.1576 iterations 11
Cbc0038I Pass  46: suminf.    1.91672 (7) obj. -51.1576 iterations 1
Cbc0038I Pass  47: suminf.    1.26684 (4) obj. -51.1576 iterations 5
Cbc0038I Pass  48: suminf.    1.21920 (4) obj. -51.6815 iterations 3
Cbc0038I Pass  49: suminf.    1.26684 (4) obj. -51.1576 iterations 3
Cbc0038I Pass  50: suminf.    2.42272 (8) obj. -51.1576 iterations 12
Cbc0038I Pass  51: suminf.    2.42272 (8) obj. -51.1576 iterations 2
Cbc0038I Pass  52: suminf.    1.26684 (4) obj. -51.1576 iterations 7
Cbc0038I Pass  53: suminf.    2.57498 (9) obj. -51.1576 iterations 14
Cbc0038I Pass  54: suminf.    2.12240 (8) obj. -51.1576 iterations 1
Cbc0038I Pass  55: suminf.    1.29948 (4) obj. -51.1576 iterations 7
Cbc0038I Pass  56: suminf.    1.21920 (4) obj. -52.0406 iterations 3
Cbc0038I Pass  57: suminf.    1.29948 (4) obj. -51.1576 iterations 3
Cbc0038I Pass  58: suminf.    2.21787 (7) obj. -51.1576 iterations 11
Cbc0038I Pass  59: suminf.    1.79631 (5) obj. -51.1576 iterations 10
Cbc0038I Pass  60: suminf.    1.61411 (5) obj. -53.3439 iterations 2
Cbc0038I Pass  61: suminf.    1.79627 (5) obj. -51.1576 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -29.2343 - took 0.07 seconds
Cbc0012I Integer solution of -29.23427 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 48 rows 55 columns, reduced to 29 rows 32 columns
Cbc0031I 29 added rows had average density of 10
Cbc0013I At root node, 29 cuts changed objective from -116.89241 to -37.332303 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2619 row cuts average 3.1 elements, 11 column cuts (11 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 483 row cuts average 37.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 99 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 175 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 231 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.768 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.23427 best solution, best possible -37.332303 (1.69 seconds)
Cbc0010I After 7 nodes, 4 on tree, -29.23427 best solution, best possible -35.870419 (2.43 seconds)
Cbc0001I Search completed - best objective -29.23427, took 2667 iterations and 14 nodes (2.73 seconds)
Cbc0032I Strong branching done 238 times (1819 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 5, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.74   (Wallclock seconds):       2.73

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-13) rows, 29 (-3) columns and 150 (-27) elements
Clp1000I sum of infeasibilities 2.05313e-05 - average 4.10627e-07, 1 fixed columns
Coin0506I Presolve 48 (-2) rows, 28 (-1) columns and 145 (-5) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Coin0511I After Postsolve, objective 92.28205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Clp0000I Optimal - objective value 92.28205
Coin0511I After Postsolve, objective 92.28205, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 92.28205011 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 29 columns (28 integer (28 of which binary)) and 151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.273%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.12403
Cbc0038I Pass   1: suminf.    0.03333 (1) obj. -29.1799 iterations 21
Cbc0038I Solution found of -9.75776
Cbc0038I Relaxing continuous gives -9.75776
Cbc0038I Rounding solution of -10.0981 is better than previous of -9.75776

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -10.0981 to -29.2343 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.5391
Cbc0038I Pass   2: suminf.    0.20155 (5) obj. -35.5391 iterations 6
Cbc0038I Pass   3: suminf.    0.57559 (2) obj. -35.5391 iterations 7
Cbc0038I Pass   4: suminf.    0.52897 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   5: suminf.    0.47379 (2) obj. -35.5391 iterations 3
Cbc0038I Pass   6: suminf.    0.41707 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   7: suminf.    0.21837 (2) obj. -35.5391 iterations 2
Cbc0038I Pass   8: suminf.    0.21717 (2) obj. -35.5391 iterations 1
Cbc0038I Pass   9: suminf.    0.41329 (2) obj. -35.5391 iterations 3
Cbc0038I Pass  10: suminf.    0.41329 (2) obj. -35.5391 iterations 0
Cbc0038I Pass  11: suminf.    0.61835 (2) obj. -35.5391 iterations 1
Cbc0038I Pass  12: suminf.    2.33651 (7) obj. -35.5391 iterations 6
Cbc0038I Pass  13: suminf.    1.43728 (4) obj. -35.5391 iterations 5
Cbc0038I Pass  14: suminf.    0.88787 (3) obj. -35.5391 iterations 3
Cbc0038I Pass  15: suminf.    2.22236 (8) obj. -35.5391 iterations 8
Cbc0038I Pass  16: suminf.    0.63626 (4) obj. -35.5391 iterations 7
Cbc0038I Pass  17: suminf.    1.52992 (6) obj. -35.5391 iterations 4
Cbc0038I Pass  18: suminf.    1.09836 (3) obj. -35.5391 iterations 8
Cbc0038I Pass  19: suminf.    1.09836 (3) obj. -35.5391 iterations 0
Cbc0038I Pass  20: suminf.    1.10351 (3) obj. -35.5391 iterations 2
Cbc0038I Pass  21: suminf.    0.54038 (2) obj. -35.5391 iterations 4
Cbc0038I Pass  22: suminf.    0.40214 (2) obj. -35.5391 iterations 2
Cbc0038I Pass  23: suminf.    0.39748 (3) obj. -35.5391 iterations 1
Cbc0038I Pass  24: suminf.    0.79265 (4) obj. -35.5391 iterations 3
Cbc0038I Pass  25: suminf.    0.63626 (4) obj. -35.5391 iterations 1
Cbc0038I Pass  26: suminf.    1.52992 (6) obj. -35.5391 iterations 4
Cbc0038I Pass  27: suminf.    1.09836 (3) obj. -35.5391 iterations 8
Cbc0038I Pass  28: suminf.    1.09836 (3) obj. -35.5391 iterations 0
Cbc0038I Pass  29: suminf.    1.10351 (3) obj. -35.5391 iterations 2
Cbc0038I Pass  30: suminf.    0.54038 (2) obj. -35.5391 iterations 4
Cbc0038I Pass  31: suminf.    0.40214 (2) obj. -35.5391 iterations 2
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 38 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -46.8877
Cbc0038I Pass  31: suminf.    0.73980 (7) obj. -46.8877 iterations 2
Cbc0038I Pass  32: suminf.    0.94626 (3) obj. -46.8877 iterations 6
Cbc0038I Pass  33: suminf.    0.94626 (3) obj. -46.8877 iterations 0
Cbc0038I Pass  34: suminf.    1.28143 (3) obj. -46.8877 iterations 1
Cbc0038I Pass  35: suminf.    1.06987 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  36: suminf.    1.06987 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  37: suminf.    1.36447 (5) obj. -46.8877 iterations 3
Cbc0038I Pass  38: suminf.    1.46094 (4) obj. -46.8877 iterations 6
Cbc0038I Pass  39: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  40: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  41: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  42: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  43: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  44: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  45: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  46: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  47: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  48: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  49: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  50: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  51: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  52: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  53: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  54: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I Pass  55: suminf.    2.10721 (6) obj. -46.8877 iterations 3
Cbc0038I Pass  56: suminf.    1.46094 (4) obj. -46.8877 iterations 7
Cbc0038I Pass  57: suminf.    1.46094 (4) obj. -46.8877 iterations 0
Cbc0038I Pass  58: suminf.    1.68576 (4) obj. -46.8877 iterations 3
Cbc0038I Pass  59: suminf.    1.21626 (3) obj. -46.8877 iterations 3
Cbc0038I Pass  60: suminf.    0.90973 (4) obj. -46.8877 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -29.2343 - took 0.07 seconds
Cbc0012I Integer solution of -29.23427 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 49 rows 29 columns, reduced to 34 rows 21 columns
Cbc0031I 9 added rows had average density of 22.777778
Cbc0013I At root node, 9 cuts changed objective from -92.28205 to -60.613629 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2504 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 863 row cuts average 28.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 75 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 103 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.23427, took 2932 iterations and 18 nodes (0.38 seconds)
Cbc0032I Strong branching done 202 times (1879 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 36 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-14) rows, 55 (-6) columns and 506 (-107) elements
Clp1000I sum of infeasibilities 1.16445e-07 - average 2.37642e-09, 14 fixed columns
Coin0506I Presolve 31 (-18) rows, 36 (-19) columns and 247 (-259) elements
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 3.1395799 - largest nonzero change 1.9054745e-05 ( 0.001281334%) - largest zero change 2.7681465e-05
Clp0000I Optimal - objective value 109.24467
Clp0000I Optimal - objective value 109.24467
Coin0511I After Postsolve, objective 109.24467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3211755 - largest nonzero change 2.0655749e-05 ( 0.0017325834%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 122.92487
Clp0000I Optimal - objective value 122.92487
Clp0000I Optimal - objective value 122.92487
Coin0511I After Postsolve, objective 122.92487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 122.9248651 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 55 columns (55 integer (55 of which binary)) and 509 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.666%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 8.44055
Cbc0038I Pass   1: suminf.    1.42192 (14) obj. -82.5228 iterations 13
Cbc0038I Pass   2: suminf.    1.42192 (14) obj. -82.5228 iterations 1
Cbc0038I Solution found of -12.1601
Cbc0038I Rounding solution of -22.1811 is better than previous of -12.1601

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -22.1811 to -25.5939 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.7239
Cbc0038I Pass   3: suminf.    1.42192 (14) obj. -82.5228 iterations 0
Cbc0038I Pass   4: suminf.    1.42192 (14) obj. -82.5228 iterations 1
Cbc0038I Pass   5: suminf.    0.69799 (2) obj. -34.7239 iterations 13
Cbc0038I Pass   6: suminf.    0.69799 (2) obj. -34.7239 iterations 0
Cbc0038I Pass   7: suminf.    0.50354 (2) obj. -34.7239 iterations 1
Cbc0038I Pass   8: suminf.    1.43322 (6) obj. -34.7239 iterations 8
Cbc0038I Pass   9: suminf.    0.75547 (3) obj. -40.6856 iterations 2
Cbc0038I Pass  10: suminf.    0.47018 (2) obj. -34.7239 iterations 7
Cbc0038I Pass  11: suminf.    0.47018 (2) obj. -34.7239 iterations 0
Cbc0038I Pass  12: suminf.    0.31277 (2) obj. -34.7239 iterations 3
Cbc0038I Pass  13: suminf.    1.33256 (6) obj. -34.7239 iterations 19
Cbc0038I Pass  14: suminf.    1.21324 (6) obj. -36.8717 iterations 2
Cbc0038I Pass  15: suminf.    0.98639 (3) obj. -34.7239 iterations 8
Cbc0038I Pass  16: suminf.    0.97636 (3) obj. -34.9044 iterations 1
Cbc0038I Pass  17: suminf.    2.06234 (8) obj. -41.5389 iterations 13
Cbc0038I Pass  18: suminf.    2.06234 (8) obj. -41.5389 iterations 1
Cbc0038I Pass  19: suminf.    1.05440 (5) obj. -34.7239 iterations 9
Cbc0038I Pass  20: suminf.    1.05438 (5) obj. -34.7239 iterations 3
Cbc0038I Pass  21: suminf.    2.88642 (10) obj. -34.7239 iterations 27
Cbc0038I Pass  22: suminf.    2.80139 (9) obj. -34.7239 iterations 1
Cbc0038I Pass  23: suminf.    1.09272 (6) obj. -34.7239 iterations 8
Cbc0038I Pass  24: suminf.    1.08812 (4) obj. -34.7239 iterations 3
Cbc0038I Pass  25: suminf.    1.12406 (4) obj. -34.7239 iterations 3
Cbc0038I Pass  26: suminf.    1.12406 (4) obj. -34.7239 iterations 0
Cbc0038I Pass  27: suminf.    1.09272 (6) obj. -34.7239 iterations 5
Cbc0038I Pass  28: suminf.    4.14497 (13) obj. -34.7239 iterations 18
Cbc0038I Pass  29: suminf.    3.80553 (13) obj. -34.7239 iterations 4
Cbc0038I Pass  30: suminf.    3.67808 (14) obj. -34.7239 iterations 5
Cbc0038I Pass  31: suminf.    1.53909 (7) obj. -34.7239 iterations 19
Cbc0038I Pass  32: suminf.    1.49981 (5) obj. -34.7239 iterations 3
Cbc0038I Rounding solution of -26.5939 is better than previous of -25.5939

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 39 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -26.5939 to -29.2343 (0.08 seconds)
Cbc0038I Round again with cutoff of -51.1576
Cbc0038I Pass  32: suminf.    1.42192 (14) obj. -82.5228 iterations 0
Cbc0038I Pass  33: suminf.    1.42192 (14) obj. -82.5228 iterations 1
Cbc0038I Pass  34: suminf.    0.57660 (3) obj. -51.1576 iterations 15
Cbc0038I Pass  35: suminf.    0.43418 (3) obj. -52.8667 iterations 4
Cbc0038I Pass  36: suminf.    1.02488 (6) obj. -54.9522 iterations 9
Cbc0038I Pass  37: suminf.    1.02488 (6) obj. -54.9522 iterations 1
Cbc0038I Pass  38: suminf.    0.89163 (5) obj. -51.1576 iterations 11
Cbc0038I Pass  39: suminf.    0.89163 (5) obj. -51.1576 iterations 3
Cbc0038I Pass  40: suminf.    0.86325 (5) obj. -51.1576 iterations 5
Cbc0038I Pass  41: suminf.    0.86325 (5) obj. -51.1576 iterations 1
Cbc0038I Pass  42: suminf.    0.89163 (5) obj. -51.1576 iterations 2
Cbc0038I Pass  43: suminf.    2.53547 (12) obj. -51.1576 iterations 14
Cbc0038I Pass  44: suminf.    2.53547 (12) obj. -51.1576 iterations 0
Cbc0038I Pass  45: suminf.    1.91672 (7) obj. -51.1576 iterations 11
Cbc0038I Pass  46: suminf.    1.91672 (7) obj. -51.1576 iterations 1
Cbc0038I Pass  47: suminf.    1.26684 (4) obj. -51.1576 iterations 5
Cbc0038I Pass  48: suminf.    1.21920 (4) obj. -51.6815 iterations 3
Cbc0038I Pass  49: suminf.    1.26684 (4) obj. -51.1576 iterations 3
Cbc0038I Pass  50: suminf.    2.42272 (8) obj. -51.1576 iterations 12
Cbc0038I Pass  51: suminf.    2.42272 (8) obj. -51.1576 iterations 2
Cbc0038I Pass  52: suminf.    1.26684 (4) obj. -51.1576 iterations 7
Cbc0038I Pass  53: suminf.    2.57498 (9) obj. -51.1576 iterations 14
Cbc0038I Pass  54: suminf.    2.12240 (8) obj. -51.1576 iterations 1
Cbc0038I Pass  55: suminf.    1.29948 (4) obj. -51.1576 iterations 7
Cbc0038I Pass  56: suminf.    1.21920 (4) obj. -52.0406 iterations 3
Cbc0038I Pass  57: suminf.    1.29948 (4) obj. -51.1576 iterations 3
Cbc0038I Pass  58: suminf.    2.21787 (7) obj. -51.1576 iterations 11
Cbc0038I Pass  59: suminf.    1.79631 (5) obj. -51.1576 iterations 10
Cbc0038I Pass  60: suminf.    1.61411 (5) obj. -53.3439 iterations 2
Cbc0038I Pass  61: suminf.    1.79627 (5) obj. -51.1576 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 55 columns, reduced to 18 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -29.2343 - took 0.08 seconds
Cbc0012I Integer solution of -29.23427 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 48 rows 55 columns, reduced to 29 rows 32 columns
Cbc0031I 29 added rows had average density of 10
Cbc0013I At root node, 29 cuts changed objective from -116.89241 to -37.332303 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2619 row cuts average 3.1 elements, 11 column cuts (11 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 483 row cuts average 37.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 19 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 99 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 175 row cuts average 6.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 231 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.854 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -29.23427 best solution, best possible -37.332303 (1.98 seconds)
Cbc0010I After 6 nodes, 3 on tree, -29.23427 best solution, best possible -35.870419 (2.78 seconds)
Cbc0001I Search completed - best objective -29.23427, took 2667 iterations and 14 nodes (3.21 seconds)
Cbc0032I Strong branching done 238 times (1819 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 5, 15 variables fixed on reduced cost
Total time (CPU seconds):       1.94   (Wallclock seconds):       3.21

