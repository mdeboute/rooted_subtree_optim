Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 6.26052e-05 - average 3.38407e-07, 16 fixed columns
Coin0506I Presolve 156 (-29) rows, 85 (-16) columns and 474 (-90) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 0.25634332 - largest nonzero change 0 ( 0%) - largest zero change 2.2040389e-05
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Coin0511I After Postsolve, objective 38.421599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Coin0511I After Postsolve, objective 38.421599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.42159898 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 15.2915
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.5914 iterations 94
Cbc0038I Solution found of 13.5914
Cbc0038I Relaxing continuous gives 13.5914
Cbc0038I Rounding solution of -0.607685 is better than previous of 13.5914

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -0.607685 to -10.3604 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.1666
Cbc0038I Pass   2: suminf.    4.59861 (16) obj. -13.1666 iterations 22
Cbc0038I Pass   3: suminf.    2.86705 (11) obj. -13.1666 iterations 23
Cbc0038I Pass   4: suminf.    2.60955 (11) obj. -13.1666 iterations 9
Cbc0038I Pass   5: suminf.    2.06378 (7) obj. -13.1666 iterations 22
Cbc0038I Pass   6: suminf.    2.05619 (7) obj. -13.1666 iterations 1
Cbc0038I Pass   7: suminf.    2.05619 (7) obj. -13.1666 iterations 0
Cbc0038I Pass   8: suminf.    2.47305 (7) obj. -13.1666 iterations 6
Cbc0038I Pass   9: suminf.    1.63561 (5) obj. -13.1666 iterations 4
Cbc0038I Pass  10: suminf.    1.62828 (6) obj. -13.1666 iterations 1
Cbc0038I Pass  11: suminf.    3.15969 (9) obj. -13.1666 iterations 12
Cbc0038I Pass  12: suminf.    2.02313 (10) obj. -13.1666 iterations 14
Cbc0038I Pass  13: suminf.    1.83798 (8) obj. -13.1666 iterations 10
Cbc0038I Pass  14: suminf.    3.38801 (10) obj. -13.1666 iterations 8
Cbc0038I Pass  15: suminf.    2.15212 (11) obj. -13.1666 iterations 12
Cbc0038I Pass  16: suminf.    6.38210 (17) obj. -13.1666 iterations 26
Cbc0038I Pass  17: suminf.    2.51859 (10) obj. -13.1666 iterations 16
Cbc0038I Pass  18: suminf.    1.14044 (7) obj. -13.1666 iterations 14
Cbc0038I Pass  19: suminf.    1.95885 (5) obj. -13.1666 iterations 9
Cbc0038I Pass  20: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  21: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  22: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  23: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  24: suminf.    1.95885 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  25: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  26: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  27: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  28: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  29: suminf.    1.95885 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  30: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  31: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Rounding solution of -11.0074 is better than previous of -10.3604

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 116 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -18.2176
Cbc0038I Pass  31: suminf.    5.66056 (17) obj. -18.2176 iterations 6
Cbc0038I Pass  32: suminf.    5.11295 (15) obj. -18.2176 iterations 8
Cbc0038I Pass  33: suminf.    4.12612 (13) obj. -18.2176 iterations 17
Cbc0038I Pass  34: suminf.    3.65091 (11) obj. -18.2176 iterations 4
Cbc0038I Pass  35: suminf.    4.53273 (14) obj. -18.2176 iterations 17
Cbc0038I Pass  36: suminf.    4.53273 (14) obj. -18.2176 iterations 0
Cbc0038I Pass  37: suminf.    4.30963 (15) obj. -18.2176 iterations 20
Cbc0038I Pass  38: suminf.    3.67328 (12) obj. -18.2176 iterations 9
Cbc0038I Pass  39: suminf.    4.79984 (13) obj. -18.2176 iterations 15
Cbc0038I Pass  40: suminf.    4.79984 (13) obj. -18.2176 iterations 0
Cbc0038I Pass  41: suminf.    2.34517 (10) obj. -18.2176 iterations 14
Cbc0038I Pass  42: suminf.    2.34517 (10) obj. -18.2176 iterations 0
Cbc0038I Pass  43: suminf.    3.05326 (9) obj. -18.2176 iterations 15
Cbc0038I Pass  44: suminf.    2.17699 (9) obj. -18.2176 iterations 12
Cbc0038I Pass  45: suminf.    2.17699 (9) obj. -18.2176 iterations 0
Cbc0038I Pass  46: suminf.    2.99402 (8) obj. -18.2176 iterations 14
Cbc0038I Pass  47: suminf.    2.34352 (9) obj. -18.2176 iterations 7
Cbc0038I Pass  48: suminf.    3.10081 (11) obj. -18.2176 iterations 12
Cbc0038I Pass  49: suminf.    2.71911 (9) obj. -18.2176 iterations 3
Cbc0038I Pass  50: suminf.    4.00863 (11) obj. -18.2176 iterations 14
Cbc0038I Pass  51: suminf.    4.00863 (11) obj. -18.2176 iterations 0
Cbc0038I Pass  52: suminf.    2.34517 (10) obj. -18.2176 iterations 23
Cbc0038I Pass  53: suminf.    3.05326 (9) obj. -18.2176 iterations 17
Cbc0038I Pass  54: suminf.    2.17699 (9) obj. -18.2176 iterations 12
Cbc0038I Pass  55: suminf.    2.17699 (9) obj. -18.2176 iterations 0
Cbc0038I Pass  56: suminf.    2.99402 (8) obj. -18.2176 iterations 14
Cbc0038I Pass  57: suminf.    2.34352 (9) obj. -18.2176 iterations 7
Cbc0038I Pass  58: suminf.    3.10081 (11) obj. -18.2176 iterations 14
Cbc0038I Pass  59: suminf.    2.71911 (9) obj. -18.2176 iterations 4
Cbc0038I Pass  60: suminf.    4.00863 (11) obj. -18.2176 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 108 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -11.0074 - took 0.19 seconds
Cbc0012I Integer solution of -11.007375 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -11.848654 found by RINS after 0 iterations and 0 nodes (0.27 seconds)
Cbc0031I 37 added rows had average density of 66.756757
Cbc0013I At root node, 37 cuts changed objective from -38.421599 to -30.6337 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20380 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2566 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.848654 best solution, best possible -30.6337 (1.75 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 37 rows 29 columns
Cbc0038I Full problem 185 rows 101 columns, reduced to 10 rows 10 columns
Cbc0004I Integer solution of -11.999125 found after 14609 iterations and 106 nodes (2.25 seconds)
Cbc0001I Search completed - best objective -11.99912500000001, took 16612 iterations and 158 nodes (2.38 seconds)
Cbc0032I Strong branching done 1616 times (30934 iterations), fathomed 14 nodes and fixed 72 variables
Cbc0035I Maximum depth 45, 607 variables fixed on reduced cost
Total time (CPU seconds):       2.33   (Wallclock seconds):       2.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-73) rows, 146 (-56) columns and 2858 (-2795) elements
Clp1000I sum of infeasibilities 1.88036e-07 - average 1.43539e-09, 28 fixed columns
Coin0506I Presolve 106 (-25) rows, 118 (-28) columns and 1973 (-885) elements
Clp0006I 0  Obj 41.296312 Dual inf 5.9605462 (117)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 1.5668851 - largest nonzero change 2.4437573e-05 ( 0.0016580886%) - largest zero change 2.9639875e-05
Clp0000I Optimal - objective value 58.005508
Clp0000I Optimal - objective value 58.005508
Coin0511I After Postsolve, objective 58.005508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 58.005508
Clp0000I Optimal - objective value 58.005508
Clp0000I Optimal - objective value 58.005508
Clp0000I Optimal - objective value 58.005508
Coin0511I After Postsolve, objective 58.005508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.0055076 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 147 columns (147 integer (147 of which binary)) and 2864 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.180%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 9.28566
Cbc0038I Pass   1: suminf.    4.60435 (40) obj. -37.593 iterations 18
Cbc0038I Pass   2: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass   3: suminf.    1.48430 (15) obj. -10.4901 iterations 25
Cbc0038I Solution found of 3.92927
Cbc0038I Rounding solution of 1.21972 is better than previous of 3.92927

Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 1.21972 to -4.35641 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.85033
Cbc0038I Pass   4: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass   5: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass   6: suminf.    2.88634 (27) obj. -21.088 iterations 13
Cbc0038I Pass   7: suminf.    1.70652 (17) obj. -12.2678 iterations 10
Cbc0038I Pass   8: suminf.    0.90746 (4) obj. -8.85033 iterations 25
Cbc0038I Pass   9: suminf.    0.90746 (4) obj. -8.85033 iterations 0
Cbc0038I Pass  10: suminf.    0.78246 (4) obj. -8.85033 iterations 5
Cbc0038I Pass  11: suminf.    0.78246 (4) obj. -8.85033 iterations 3
Cbc0038I Pass  12: suminf.    0.70610 (4) obj. -8.85033 iterations 4
Cbc0038I Pass  13: suminf.    0.70610 (4) obj. -8.85033 iterations 3
Cbc0038I Pass  14: suminf.    2.55122 (23) obj. -8.85033 iterations 39
Cbc0038I Pass  15: suminf.    2.51319 (20) obj. -8.85033 iterations 9
Cbc0038I Pass  16: suminf.    1.48814 (7) obj. -8.85033 iterations 26
Cbc0038I Pass  17: suminf.    1.09233 (8) obj. -8.85033 iterations 3
Cbc0038I Pass  18: suminf.    1.26219 (8) obj. -8.85033 iterations 18
Cbc0038I Pass  19: suminf.    1.19983 (7) obj. -8.85033 iterations 11
Cbc0038I Pass  20: suminf.    1.96259 (6) obj. -8.85033 iterations 17
Cbc0038I Pass  21: suminf.    1.96259 (6) obj. -8.85033 iterations 0
Cbc0038I Pass  22: suminf.    0.72756 (4) obj. -8.85033 iterations 15
Cbc0038I Pass  23: suminf.    0.72756 (4) obj. -8.85033 iterations 4
Cbc0038I Pass  24: suminf.    0.67160 (4) obj. -8.85033 iterations 6
Cbc0038I Pass  25: suminf.    0.67160 (4) obj. -8.85033 iterations 5
Cbc0038I Pass  26: suminf.    0.72756 (4) obj. -8.85033 iterations 7
Cbc0038I Pass  27: suminf.    2.88372 (19) obj. -8.85033 iterations 28
Cbc0038I Pass  28: suminf.    2.24309 (15) obj. -8.85033 iterations 13
Cbc0038I Pass  29: suminf.    0.80563 (4) obj. -8.85033 iterations 22
Cbc0038I Pass  30: suminf.    0.80485 (4) obj. -8.85033 iterations 6
Cbc0038I Pass  31: suminf.    0.78305 (3) obj. -8.85033 iterations 6
Cbc0038I Pass  32: suminf.    0.78289 (4) obj. -8.85033 iterations 5
Cbc0038I Pass  33: suminf.    0.80502 (3) obj. -8.85033 iterations 11
Cbc0038I Rounding solution of -5.14451 is better than previous of -4.35641

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 14 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -5.14451 to -5.87821 (0.06 seconds)
Cbc0038I Round again with cutoff of -16.9392
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass  34: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass  35: suminf.    1.63030 (13) obj. -16.9392 iterations 33
Cbc0038I Pass  36: suminf.    1.63030 (13) obj. -16.9392 iterations 0
Cbc0038I Pass  37: suminf.    1.61805 (8) obj. -16.9392 iterations 25
Cbc0038I Pass  38: suminf.    1.56193 (13) obj. -16.9392 iterations 4
Cbc0038I Pass  39: suminf.    2.41502 (12) obj. -16.9392 iterations 11
Cbc0038I Pass  40: suminf.    2.35792 (12) obj. -16.9392 iterations 4
Cbc0038I Pass  41: suminf.    3.49770 (15) obj. -16.9392 iterations 9
Cbc0038I Pass  42: suminf.    2.55757 (13) obj. -16.9392 iterations 3
Cbc0038I Pass  43: suminf.    1.89739 (12) obj. -16.9392 iterations 9
Cbc0038I Pass  44: suminf.    3.12797 (13) obj. -16.9392 iterations 15
Cbc0038I Pass  45: suminf.    2.68179 (13) obj. -16.9392 iterations 1
Cbc0038I Pass  46: suminf.    1.92236 (12) obj. -16.9392 iterations 8
Cbc0038I Pass  47: suminf.    3.49770 (15) obj. -16.9392 iterations 12
Cbc0038I Pass  48: suminf.    2.55757 (13) obj. -16.9392 iterations 3
Cbc0038I Pass  49: suminf.    1.89739 (12) obj. -16.9392 iterations 9
Cbc0038I Pass  50: suminf.    3.12797 (13) obj. -16.9392 iterations 15
Cbc0038I Pass  51: suminf.    2.68179 (13) obj. -16.9392 iterations 1
Cbc0038I Pass  52: suminf.    1.92236 (12) obj. -16.9392 iterations 8
Cbc0038I Pass  53: suminf.    3.49770 (15) obj. -16.9392 iterations 12
Cbc0038I Pass  54: suminf.    2.55757 (13) obj. -16.9392 iterations 3
Cbc0038I Pass  55: suminf.    1.89739 (12) obj. -16.9392 iterations 9
Cbc0038I Pass  56: suminf.    3.12797 (13) obj. -16.9392 iterations 15
Cbc0038I Pass  57: suminf.    2.68179 (13) obj. -16.9392 iterations 1
Cbc0038I Pass  58: suminf.    1.92236 (12) obj. -16.9392 iterations 8
Cbc0038I Pass  59: suminf.    3.49770 (15) obj. -16.9392 iterations 12
Cbc0038I Pass  60: suminf.    2.55757 (13) obj. -16.9392 iterations 3
Cbc0038I Pass  61: suminf.    1.89739 (12) obj. -16.9392 iterations 9
Cbc0038I Pass  62: suminf.    3.12797 (13) obj. -16.9392 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -5.87821 - took 0.08 seconds
Cbc0012I Integer solution of -5.878214 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 5 rows 7 columns
Cbc0031I 72 added rows had average density of 50.861111
Cbc0013I At root node, 72 cuts changed objective from -49.294669 to -16.770515 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20225 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.181 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2029 row cuts average 140.1 elements, 0 column cuts (0 active)  in 0.272 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1144 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.145 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1625 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 441 row cuts average 89.3 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.342 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.878214 best solution, best possible -16.770515 (2.79 seconds)
Cbc0012I Integer solution of -11.007375 found by rounding after 8103 iterations and 1 nodes (2.79 seconds)
Cbc0016I Integer solution of -11.372151 found by strong branching after 8164 iterations and 1 nodes (2.80 seconds)
Cbc0016I Integer solution of -11.761325 found by strong branching after 8165 iterations and 1 nodes (2.80 seconds)
Cbc0010I After 9 nodes, 6 on tree, -11.761325 best solution, best possible -16.222811 (3.49 seconds)
Cbc0012I Integer solution of -11.999125 found by DiveCoefficient after 9572 iterations and 14 nodes (3.50 seconds)
Cbc0001I Search completed - best objective -11.99912500000001, took 11321 iterations and 36 nodes (4.08 seconds)
Cbc0032I Strong branching done 626 times (16070 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 10, 131 variables fixed on reduced cost
Total time (CPU seconds):       3.66   (Wallclock seconds):       4.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 185 (-20) rows, 101 (-2) columns and 564 (-39) elements
Clp1000I sum of infeasibilities 6.26052e-05 - average 3.38407e-07, 16 fixed columns
Coin0506I Presolve 156 (-29) rows, 85 (-16) columns and 474 (-90) elements
Clp0029I End of values pass after 85 iterations
Clp0014I Perturbing problem by 0.001% of 0.25634332 - largest nonzero change 0 ( 0%) - largest zero change 2.2040389e-05
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Coin0511I After Postsolve, objective 38.421599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Clp0000I Optimal - objective value 38.421599
Coin0511I After Postsolve, objective 38.421599, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 38.42159898 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 185 rows, 101 columns (100 integer (100 of which binary)) and 564 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.893%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 15.2915
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.5914 iterations 94
Cbc0038I Solution found of 13.5914
Cbc0038I Relaxing continuous gives 13.5914
Cbc0038I Rounding solution of -0.607685 is better than previous of 13.5914

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 101 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -0.607685 to -10.3604 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.1666
Cbc0038I Pass   2: suminf.    4.59861 (16) obj. -13.1666 iterations 22
Cbc0038I Pass   3: suminf.    2.86705 (11) obj. -13.1666 iterations 23
Cbc0038I Pass   4: suminf.    2.60955 (11) obj. -13.1666 iterations 9
Cbc0038I Pass   5: suminf.    2.06378 (7) obj. -13.1666 iterations 22
Cbc0038I Pass   6: suminf.    2.05619 (7) obj. -13.1666 iterations 1
Cbc0038I Pass   7: suminf.    2.05619 (7) obj. -13.1666 iterations 0
Cbc0038I Pass   8: suminf.    2.47305 (7) obj. -13.1666 iterations 6
Cbc0038I Pass   9: suminf.    1.63561 (5) obj. -13.1666 iterations 4
Cbc0038I Pass  10: suminf.    1.62828 (6) obj. -13.1666 iterations 1
Cbc0038I Pass  11: suminf.    3.15969 (9) obj. -13.1666 iterations 12
Cbc0038I Pass  12: suminf.    2.02313 (10) obj. -13.1666 iterations 14
Cbc0038I Pass  13: suminf.    1.83798 (8) obj. -13.1666 iterations 10
Cbc0038I Pass  14: suminf.    3.38801 (10) obj. -13.1666 iterations 8
Cbc0038I Pass  15: suminf.    2.15212 (11) obj. -13.1666 iterations 12
Cbc0038I Pass  16: suminf.    6.38210 (17) obj. -13.1666 iterations 26
Cbc0038I Pass  17: suminf.    2.51859 (10) obj. -13.1666 iterations 16
Cbc0038I Pass  18: suminf.    1.14044 (7) obj. -13.1666 iterations 14
Cbc0038I Pass  19: suminf.    1.95885 (5) obj. -13.1666 iterations 9
Cbc0038I Pass  20: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  21: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  22: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  23: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  24: suminf.    1.95885 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  25: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  26: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  27: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  28: suminf.    1.54710 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  29: suminf.    1.95885 (5) obj. -13.1666 iterations 3
Cbc0038I Pass  30: suminf.    1.95885 (5) obj. -13.1666 iterations 1
Cbc0038I Pass  31: suminf.    2.03241 (5) obj. -13.1666 iterations 3
Cbc0038I Rounding solution of -11.0074 is better than previous of -10.3604

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 116 rows 65 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -18.2176
Cbc0038I Pass  31: suminf.    5.66056 (17) obj. -18.2176 iterations 6
Cbc0038I Pass  32: suminf.    5.11295 (15) obj. -18.2176 iterations 8
Cbc0038I Pass  33: suminf.    4.12612 (13) obj. -18.2176 iterations 17
Cbc0038I Pass  34: suminf.    3.65091 (11) obj. -18.2176 iterations 4
Cbc0038I Pass  35: suminf.    4.53273 (14) obj. -18.2176 iterations 17
Cbc0038I Pass  36: suminf.    4.53273 (14) obj. -18.2176 iterations 0
Cbc0038I Pass  37: suminf.    4.30963 (15) obj. -18.2176 iterations 20
Cbc0038I Pass  38: suminf.    3.67328 (12) obj. -18.2176 iterations 9
Cbc0038I Pass  39: suminf.    4.79984 (13) obj. -18.2176 iterations 15
Cbc0038I Pass  40: suminf.    4.79984 (13) obj. -18.2176 iterations 0
Cbc0038I Pass  41: suminf.    2.34517 (10) obj. -18.2176 iterations 14
Cbc0038I Pass  42: suminf.    2.34517 (10) obj. -18.2176 iterations 0
Cbc0038I Pass  43: suminf.    3.05326 (9) obj. -18.2176 iterations 15
Cbc0038I Pass  44: suminf.    2.17699 (9) obj. -18.2176 iterations 12
Cbc0038I Pass  45: suminf.    2.17699 (9) obj. -18.2176 iterations 0
Cbc0038I Pass  46: suminf.    2.99402 (8) obj. -18.2176 iterations 14
Cbc0038I Pass  47: suminf.    2.34352 (9) obj. -18.2176 iterations 7
Cbc0038I Pass  48: suminf.    3.10081 (11) obj. -18.2176 iterations 12
Cbc0038I Pass  49: suminf.    2.71911 (9) obj. -18.2176 iterations 3
Cbc0038I Pass  50: suminf.    4.00863 (11) obj. -18.2176 iterations 14
Cbc0038I Pass  51: suminf.    4.00863 (11) obj. -18.2176 iterations 0
Cbc0038I Pass  52: suminf.    2.34517 (10) obj. -18.2176 iterations 23
Cbc0038I Pass  53: suminf.    3.05326 (9) obj. -18.2176 iterations 17
Cbc0038I Pass  54: suminf.    2.17699 (9) obj. -18.2176 iterations 12
Cbc0038I Pass  55: suminf.    2.17699 (9) obj. -18.2176 iterations 0
Cbc0038I Pass  56: suminf.    2.99402 (8) obj. -18.2176 iterations 14
Cbc0038I Pass  57: suminf.    2.34352 (9) obj. -18.2176 iterations 7
Cbc0038I Pass  58: suminf.    3.10081 (11) obj. -18.2176 iterations 14
Cbc0038I Pass  59: suminf.    2.71911 (9) obj. -18.2176 iterations 4
Cbc0038I Pass  60: suminf.    4.00863 (11) obj. -18.2176 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 185 rows 101 columns, reduced to 108 rows 60 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -11.0074 - took 0.19 seconds
Cbc0012I Integer solution of -11.007375 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 106 rows 60 columns
Cbc0012I Integer solution of -11.848654 found by RINS after 0 iterations and 0 nodes (0.28 seconds)
Cbc0031I 37 added rows had average density of 66.756757
Cbc0013I At root node, 37 cuts changed objective from -38.421599 to -30.6337 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20380 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2566 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.848654 best solution, best possible -30.6337 (1.70 seconds)
Cbc0038I Full problem 185 rows 101 columns, reduced to 37 rows 29 columns
Cbc0038I Full problem 185 rows 101 columns, reduced to 10 rows 10 columns
Cbc0004I Integer solution of -11.999125 found after 14609 iterations and 106 nodes (2.19 seconds)
Cbc0001I Search completed - best objective -11.99912500000001, took 16612 iterations and 158 nodes (2.32 seconds)
Cbc0032I Strong branching done 1616 times (30934 iterations), fathomed 14 nodes and fixed 72 variables
Cbc0035I Maximum depth 45, 607 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       2.34

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-74) rows, 146 (-57) columns and 2858 (-2796) elements
Clp1000I sum of infeasibilities 1.88036e-07 - average 1.43539e-09, 28 fixed columns
Coin0506I Presolve 106 (-25) rows, 118 (-28) columns and 1973 (-885) elements
Clp0006I 0  Obj 41.296312 Dual inf 5.9605462 (117)
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 1.5668851 - largest nonzero change 2.4437573e-05 ( 0.0016580886%) - largest zero change 2.9639875e-05
Clp0000I Optimal - objective value 58.005508
Clp0000I Optimal - objective value 58.005508
Coin0511I After Postsolve, objective 58.005508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 58.005508
Clp0000I Optimal - objective value 58.005508
Clp0000I Optimal - objective value 58.005508
Clp0000I Optimal - objective value 58.005508
Coin0511I After Postsolve, objective 58.005508, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.0055076 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 147 columns (147 integer (147 of which binary)) and 2864 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.180%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 9.28566
Cbc0038I Pass   1: suminf.    4.60435 (40) obj. -37.593 iterations 18
Cbc0038I Pass   2: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass   3: suminf.    1.48430 (15) obj. -10.4901 iterations 25
Cbc0038I Solution found of 3.92927
Cbc0038I Rounding solution of 1.21972 is better than previous of 3.92927

Cbc0038I Before mini branch and bound, 94 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from 1.21972 to -4.35641 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.85033
Cbc0038I Pass   4: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass   5: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass   6: suminf.    2.88634 (27) obj. -21.088 iterations 13
Cbc0038I Pass   7: suminf.    1.70652 (17) obj. -12.2678 iterations 10
Cbc0038I Pass   8: suminf.    0.90746 (4) obj. -8.85033 iterations 25
Cbc0038I Pass   9: suminf.    0.90746 (4) obj. -8.85033 iterations 0
Cbc0038I Pass  10: suminf.    0.78246 (4) obj. -8.85033 iterations 5
Cbc0038I Pass  11: suminf.    0.78246 (4) obj. -8.85033 iterations 3
Cbc0038I Pass  12: suminf.    0.70610 (4) obj. -8.85033 iterations 4
Cbc0038I Pass  13: suminf.    0.70610 (4) obj. -8.85033 iterations 3
Cbc0038I Pass  14: suminf.    2.55122 (23) obj. -8.85033 iterations 39
Cbc0038I Pass  15: suminf.    2.51319 (20) obj. -8.85033 iterations 9
Cbc0038I Pass  16: suminf.    1.48814 (7) obj. -8.85033 iterations 26
Cbc0038I Pass  17: suminf.    1.09233 (8) obj. -8.85033 iterations 3
Cbc0038I Pass  18: suminf.    1.26219 (8) obj. -8.85033 iterations 18
Cbc0038I Pass  19: suminf.    1.19983 (7) obj. -8.85033 iterations 11
Cbc0038I Pass  20: suminf.    1.96259 (6) obj. -8.85033 iterations 17
Cbc0038I Pass  21: suminf.    1.96259 (6) obj. -8.85033 iterations 0
Cbc0038I Pass  22: suminf.    0.72756 (4) obj. -8.85033 iterations 15
Cbc0038I Pass  23: suminf.    0.72756 (4) obj. -8.85033 iterations 4
Cbc0038I Pass  24: suminf.    0.67160 (4) obj. -8.85033 iterations 6
Cbc0038I Pass  25: suminf.    0.67160 (4) obj. -8.85033 iterations 5
Cbc0038I Pass  26: suminf.    0.72756 (4) obj. -8.85033 iterations 7
Cbc0038I Pass  27: suminf.    2.88372 (19) obj. -8.85033 iterations 28
Cbc0038I Pass  28: suminf.    2.24309 (15) obj. -8.85033 iterations 13
Cbc0038I Pass  29: suminf.    0.80563 (4) obj. -8.85033 iterations 22
Cbc0038I Pass  30: suminf.    0.80485 (4) obj. -8.85033 iterations 6
Cbc0038I Pass  31: suminf.    0.78305 (3) obj. -8.85033 iterations 6
Cbc0038I Pass  32: suminf.    0.78289 (4) obj. -8.85033 iterations 5
Cbc0038I Pass  33: suminf.    0.80502 (3) obj. -8.85033 iterations 11
Cbc0038I Rounding solution of -5.14451 is better than previous of -4.35641

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 147 columns, reduced to 14 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -5.14451 to -5.87821 (0.06 seconds)
Cbc0038I Round again with cutoff of -16.9392
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass  34: suminf.    4.60435 (40) obj. -37.593 iterations 0
Cbc0038I Pass  35: suminf.    1.63030 (13) obj. -16.9392 iterations 33
Cbc0038I Pass  36: suminf.    1.63030 (13) obj. -16.9392 iterations 0
Cbc0038I Pass  37: suminf.    1.61805 (8) obj. -16.9392 iterations 25
Cbc0038I Pass  38: suminf.    1.56193 (13) obj. -16.9392 iterations 4
Cbc0038I Pass  39: suminf.    2.41502 (12) obj. -16.9392 iterations 11
Cbc0038I Pass  40: suminf.    2.35792 (12) obj. -16.9392 iterations 4
Cbc0038I Pass  41: suminf.    3.49770 (15) obj. -16.9392 iterations 9
Cbc0038I Pass  42: suminf.    2.55757 (13) obj. -16.9392 iterations 3
Cbc0038I Pass  43: suminf.    1.89739 (12) obj. -16.9392 iterations 9
Cbc0038I Pass  44: suminf.    3.12797 (13) obj. -16.9392 iterations 15
Cbc0038I Pass  45: suminf.    2.68179 (13) obj. -16.9392 iterations 1
Cbc0038I Pass  46: suminf.    1.92236 (12) obj. -16.9392 iterations 8
Cbc0038I Pass  47: suminf.    3.49770 (15) obj. -16.9392 iterations 12
Cbc0038I Pass  48: suminf.    2.55757 (13) obj. -16.9392 iterations 3
Cbc0038I Pass  49: suminf.    1.89739 (12) obj. -16.9392 iterations 9
Cbc0038I Pass  50: suminf.    3.12797 (13) obj. -16.9392 iterations 15
Cbc0038I Pass  51: suminf.    2.68179 (13) obj. -16.9392 iterations 1
Cbc0038I Pass  52: suminf.    1.92236 (12) obj. -16.9392 iterations 8
Cbc0038I Pass  53: suminf.    3.49770 (15) obj. -16.9392 iterations 12
Cbc0038I Pass  54: suminf.    2.55757 (13) obj. -16.9392 iterations 3
Cbc0038I Pass  55: suminf.    1.89739 (12) obj. -16.9392 iterations 9
Cbc0038I Pass  56: suminf.    3.12797 (13) obj. -16.9392 iterations 15
Cbc0038I Pass  57: suminf.    2.68179 (13) obj. -16.9392 iterations 1
Cbc0038I Pass  58: suminf.    1.92236 (12) obj. -16.9392 iterations 8
Cbc0038I Pass  59: suminf.    3.49770 (15) obj. -16.9392 iterations 12
Cbc0038I Pass  60: suminf.    2.55757 (13) obj. -16.9392 iterations 3
Cbc0038I Pass  61: suminf.    1.89739 (12) obj. -16.9392 iterations 9
Cbc0038I Pass  62: suminf.    3.12797 (13) obj. -16.9392 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 86 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -5.87821 - took 0.08 seconds
Cbc0012I Integer solution of -5.878214 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 132 rows 147 columns, reduced to 5 rows 7 columns
Cbc0031I 72 added rows had average density of 50.861111
Cbc0013I At root node, 72 cuts changed objective from -49.294669 to -16.770515 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20225 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2029 row cuts average 140.1 elements, 0 column cuts (0 active)  in 0.262 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 17 row cuts average 2.5 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1144 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1625 row cuts average 9.8 elements, 0 column cuts (0 active)  in 0.174 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 441 row cuts average 89.3 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 21.2 elements, 0 column cuts (0 active)  in 0.333 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.878214 best solution, best possible -16.770515 (2.72 seconds)
Cbc0012I Integer solution of -11.007375 found by rounding after 8103 iterations and 1 nodes (2.73 seconds)
Cbc0016I Integer solution of -11.372151 found by strong branching after 8164 iterations and 1 nodes (2.74 seconds)
Cbc0016I Integer solution of -11.761325 found by strong branching after 8165 iterations and 1 nodes (2.74 seconds)
Cbc0012I Integer solution of -11.999125 found by DiveCoefficient after 9572 iterations and 14 nodes (3.42 seconds)
Cbc0010I After 21 nodes, 2 on tree, -11.999125 best solution, best possible -16.222811 (3.55 seconds)
Cbc0001I Search completed - best objective -11.99912500000001, took 11321 iterations and 36 nodes (3.99 seconds)
Cbc0032I Strong branching done 626 times (16070 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 10, 131 variables fixed on reduced cost
Total time (CPU seconds):       3.57   (Wallclock seconds):       4.01

