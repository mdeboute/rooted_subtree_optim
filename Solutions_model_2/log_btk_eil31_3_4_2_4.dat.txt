Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-30) rows, 21 (-12) columns and 104 (-79) elements
Clp1000I sum of infeasibilities 0 - average 0, 5 fixed columns
Coin0506I Presolve 26 (-9) rows, 16 (-5) columns and 76 (-28) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Coin0511I After Postsolve, objective 76.627075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Coin0511I After Postsolve, objective 76.627075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.6270748 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.21658
Cbc0038I Solution found of -13.3031
Cbc0038I Relaxing continuous gives -15.0966
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -15.0966 to -42.1726 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.0785
Cbc0038I Pass   1: suminf.    1.16162 (5) obj. -45.0785 iterations 11
Cbc0038I Pass   2: suminf.    0.26667 (1) obj. -52.4872 iterations 9
Cbc0038I Pass   3: suminf.    0.26667 (1) obj. -52.4872 iterations 0
Cbc0038I Pass   4: suminf.    0.41215 (2) obj. -45.0785 iterations 3
Cbc0038I Pass   5: suminf.    1.48929 (3) obj. -45.0785 iterations 4
Cbc0038I Pass   6: suminf.    0.34094 (1) obj. -45.0785 iterations 2
Cbc0038I Pass   7: suminf.    0.13333 (1) obj. -50.7962 iterations 3
Cbc0038I Pass   8: suminf.    0.13333 (1) obj. -50.7962 iterations 2
Cbc0038I Pass   9: suminf.    0.13333 (1) obj. -50.7962 iterations 2
Cbc0038I Pass  10: suminf.    0.45000 (1) obj. -47.419 iterations 5
Cbc0038I Pass  11: suminf.    0.37907 (1) obj. -45.0785 iterations 3
Cbc0038I Pass  12: suminf.    0.45000 (1) obj. -47.419 iterations 2
Cbc0038I Pass  13: suminf.    0.21667 (1) obj. -46.8984 iterations 3
Cbc0038I Pass  14: suminf.    0.16152 (1) obj. -45.0785 iterations 2
Cbc0038I Pass  15: suminf.    0.21667 (1) obj. -46.8984 iterations 2
Cbc0038I Pass  16: suminf.    1.35143 (9) obj. -45.0785 iterations 9
Cbc0038I Pass  17: suminf.    1.17403 (6) obj. -45.0785 iterations 4
Cbc0038I Pass  18: suminf.    0.83934 (3) obj. -45.0785 iterations 11
Cbc0038I Pass  19: suminf.    0.34435 (2) obj. -45.0785 iterations 3
Cbc0038I Pass  20: suminf.    0.51914 (3) obj. -45.0785 iterations 1
Cbc0038I Pass  21: suminf.    0.34435 (2) obj. -45.0785 iterations 1
Cbc0038I Pass  22: suminf.    1.01823 (4) obj. -45.0785 iterations 4
Cbc0038I Pass  23: suminf.    0.70955 (4) obj. -45.0785 iterations 2
Cbc0038I Pass  24: suminf.    0.63891 (4) obj. -45.0785 iterations 5
Cbc0038I Pass  25: suminf.    1.24346 (3) obj. -45.0785 iterations 11
Cbc0038I Pass  26: suminf.    0.49316 (1) obj. -45.0785 iterations 2
Cbc0038I Pass  27: suminf.    0.21046 (2) obj. -45.0785 iterations 3
Cbc0038I Pass  28: suminf.    0.40714 (2) obj. -45.0785 iterations 4
Cbc0038I Pass  29: suminf.    0.40714 (2) obj. -45.0785 iterations 0
Cbc0038I Pass  30: suminf.    0.40714 (2) obj. -45.0785 iterations 0
Cbc0038I Rounding solution of -44.706 is better than previous of -42.1726

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -44.706 to -50.0583 (0.02 seconds)
Cbc0038I Round again with cutoff of -54.2929
Cbc0038I Pass  30: suminf.    1.58189 (8) obj. -54.2929 iterations 1
Cbc0038I Pass  31: suminf.    1.13696 (3) obj. -54.2929 iterations 16
Cbc0038I Pass  32: suminf.    0.75259 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  33: suminf.    0.69778 (2) obj. -56.4749 iterations 2
Cbc0038I Pass  34: suminf.    0.64797 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  35: suminf.    0.75259 (2) obj. -54.2929 iterations 3
Cbc0038I Pass  36: suminf.    1.10912 (5) obj. -54.2929 iterations 8
Cbc0038I Pass  37: suminf.    0.83444 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  38: suminf.    0.97014 (3) obj. -54.2929 iterations 4
Cbc0038I Pass  39: suminf.    0.55394 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  40: suminf.    0.40155 (2) obj. -54.2929 iterations 2
Cbc0038I Pass  41: suminf.    0.40155 (2) obj. -54.2929 iterations 0
Cbc0038I Pass  42: suminf.    0.55394 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  43: suminf.    2.14846 (7) obj. -54.2929 iterations 9
Cbc0038I Pass  44: suminf.    1.33252 (6) obj. -54.2929 iterations 1
Cbc0038I Pass  45: suminf.    0.40155 (2) obj. -54.2929 iterations 6
Cbc0038I Pass  46: suminf.    2.00143 (6) obj. -54.2929 iterations 7
Cbc0038I Pass  47: suminf.    1.11654 (5) obj. -54.2929 iterations 3
Cbc0038I Pass  48: suminf.    1.06163 (3) obj. -54.2929 iterations 9
Cbc0038I Pass  49: suminf.    0.82992 (3) obj. -54.2929 iterations 2
Cbc0038I Pass  50: suminf.    0.94944 (3) obj. -54.2929 iterations 2
Cbc0038I Pass  51: suminf.    0.83373 (3) obj. -54.2929 iterations 1
Cbc0038I Pass  52: suminf.    1.66561 (6) obj. -54.2929 iterations 5
Cbc0038I Pass  53: suminf.    1.36694 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  54: suminf.    1.28247 (3) obj. -54.2929 iterations 5
Cbc0038I Pass  55: suminf.    1.16289 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  56: suminf.    0.27705 (2) obj. -54.2929 iterations 7
Cbc0038I Pass  57: suminf.    0.27705 (2) obj. -54.2929 iterations 0
Cbc0038I Pass  58: suminf.    1.07506 (3) obj. -54.2929 iterations 3
Cbc0038I Pass  59: suminf.    0.83263 (3) obj. -54.2929 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -50.0583 - took 0.06 seconds
Cbc0012I Integer solution of -50.058333 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 21 rows 13 columns
Cbc0031I 9 added rows had average density of 12.222222
Cbc0013I At root node, 9 cuts changed objective from -71.230539 to -55.960418 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 454 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -50.058333 best solution, best possible -55.960418 (1.46 seconds)
Cbc0001I Search completed - best objective -50.058333, took 1525 iterations and 2 nodes (1.47 seconds)
Cbc0032I Strong branching done 48 times (381 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       1.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-18) rows, 51 (-11) columns and 451 (-195) elements
Clp1000I sum of infeasibilities 7.13154e-08 - average 1.58479e-09, 15 fixed columns
Coin0506I Presolve 34 (-11) rows, 36 (-15) columns and 233 (-218) elements
Clp0006I 0  Obj 121.18028 Dual inf 10.088278 (34)
Clp0029I End of values pass after 36 iterations
Clp0014I Perturbing problem by 0.001% of 1.3328712 - largest nonzero change 0 ( 0%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value 134.31052
Clp0000I Optimal - objective value 134.31052
Coin0511I After Postsolve, objective 134.31052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 134.31052
Clp0000I Optimal - objective value 134.31052
Clp0000I Optimal - objective value 134.31052
Clp0000I Optimal - objective value 134.31052
Coin0511I After Postsolve, objective 134.31052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 134.3105215 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 391 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.976%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 2.60274
Cbc0038I Pass   1: suminf.    0.11111 (1) obj. -70.825 iterations 24
Cbc0038I Pass   2: suminf.    0.11111 (1) obj. -70.825 iterations 1
Cbc0038I Solution found of -68.1583
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -69.0703
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.11111 (1) obj. -70.825 iterations 0
Cbc0038I Pass   4: suminf.    0.11111 (1) obj. -70.825 iterations 2
Cbc0038I Pass   5: suminf.    0.03300 (2) obj. -69.0703 iterations 5
Cbc0038I Pass   6: suminf.    0.04144 (2) obj. -69.0703 iterations 2
Cbc0038I Pass   7: suminf.    0.08328 (6) obj. -69.0703 iterations 3
Cbc0038I Pass   8: suminf.    1.26149 (11) obj. -69.0703 iterations 16
Cbc0038I Pass   9: suminf.    0.85713 (8) obj. -69.0703 iterations 4
Cbc0038I Pass  10: suminf.    0.65811 (6) obj. -69.7378 iterations 4
Cbc0038I Pass  11: suminf.    0.87676 (5) obj. -69.0703 iterations 9
Cbc0038I Pass  12: suminf.    0.42857 (4) obj. -69.9933 iterations 3
Cbc0038I Pass  13: suminf.    1.16373 (7) obj. -69.0703 iterations 6
Cbc0038I Pass  14: suminf.    1.01190 (6) obj. -71.4099 iterations 4
Cbc0038I Pass  15: suminf.    1.39218 (10) obj. -69.0703 iterations 7
Cbc0038I Pass  16: suminf.    1.36170 (9) obj. -69.0703 iterations 2
Cbc0038I Pass  17: suminf.    1.18683 (7) obj. -69.0703 iterations 11
Cbc0038I Pass  18: suminf.    0.86348 (7) obj. -69.0703 iterations 4
Cbc0038I Pass  19: suminf.    2.31970 (8) obj. -69.0703 iterations 10
Cbc0038I Pass  20: suminf.    0.42857 (4) obj. -69.9933 iterations 4
Cbc0038I Pass  21: suminf.    0.87676 (5) obj. -69.0703 iterations 3
Cbc0038I Pass  22: suminf.    4.49360 (14) obj. -69.0703 iterations 18
Cbc0038I Pass  23: suminf.    1.20238 (6) obj. -71.8596 iterations 10
Cbc0038I Pass  24: suminf.    1.11253 (6) obj. -69.0703 iterations 6
Cbc0038I Pass  25: suminf.    0.61905 (4) obj. -70.443 iterations 2
Cbc0038I Pass  26: suminf.    1.00052 (10) obj. -69.0703 iterations 14
Cbc0038I Pass  27: suminf.    0.28690 (5) obj. -69.0703 iterations 7
Cbc0038I Pass  28: suminf.    0.34317 (9) obj. -69.0703 iterations 5
Cbc0038I Pass  29: suminf.    2.66758 (11) obj. -69.0703 iterations 12
Cbc0038I Pass  30: suminf.    1.01190 (6) obj. -71.4099 iterations 10
Cbc0038I Pass  31: suminf.    0.87676 (5) obj. -69.0703 iterations 5
Cbc0038I Pass  32: suminf.    0.42857 (4) obj. -69.9933 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -68.1583 - took 0.02 seconds
Cbc0012I Integer solution of -68.158333 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 22 rows 23 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -77.277238 to -58.832451 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 32 row cuts average 2.0 elements, 10 column cuts (10 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -68.158333, took 0 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-30) rows, 21 (-12) columns and 104 (-79) elements
Clp1000I sum of infeasibilities 0 - average 0, 5 fixed columns
Coin0506I Presolve 26 (-9) rows, 16 (-5) columns and 76 (-28) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Coin0511I After Postsolve, objective 76.627075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Clp0000I Optimal - objective value 76.627075
Coin0511I After Postsolve, objective 76.627075, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.6270748 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 21 columns (20 integer (20 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.312%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.21658
Cbc0038I Solution found of -13.3031
Cbc0038I Relaxing continuous gives -15.0966
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 18 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -15.0966 to -42.1726 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.0785
Cbc0038I Pass   1: suminf.    1.16162 (5) obj. -45.0785 iterations 11
Cbc0038I Pass   2: suminf.    0.26667 (1) obj. -52.4872 iterations 9
Cbc0038I Pass   3: suminf.    0.26667 (1) obj. -52.4872 iterations 0
Cbc0038I Pass   4: suminf.    0.41215 (2) obj. -45.0785 iterations 3
Cbc0038I Pass   5: suminf.    1.48929 (3) obj. -45.0785 iterations 4
Cbc0038I Pass   6: suminf.    0.34094 (1) obj. -45.0785 iterations 2
Cbc0038I Pass   7: suminf.    0.13333 (1) obj. -50.7962 iterations 3
Cbc0038I Pass   8: suminf.    0.13333 (1) obj. -50.7962 iterations 2
Cbc0038I Pass   9: suminf.    0.13333 (1) obj. -50.7962 iterations 2
Cbc0038I Pass  10: suminf.    0.45000 (1) obj. -47.419 iterations 5
Cbc0038I Pass  11: suminf.    0.37907 (1) obj. -45.0785 iterations 3
Cbc0038I Pass  12: suminf.    0.45000 (1) obj. -47.419 iterations 2
Cbc0038I Pass  13: suminf.    0.21667 (1) obj. -46.8984 iterations 3
Cbc0038I Pass  14: suminf.    0.16152 (1) obj. -45.0785 iterations 2
Cbc0038I Pass  15: suminf.    0.21667 (1) obj. -46.8984 iterations 2
Cbc0038I Pass  16: suminf.    1.35143 (9) obj. -45.0785 iterations 9
Cbc0038I Pass  17: suminf.    1.17403 (6) obj. -45.0785 iterations 4
Cbc0038I Pass  18: suminf.    0.83934 (3) obj. -45.0785 iterations 11
Cbc0038I Pass  19: suminf.    0.34435 (2) obj. -45.0785 iterations 3
Cbc0038I Pass  20: suminf.    0.51914 (3) obj. -45.0785 iterations 1
Cbc0038I Pass  21: suminf.    0.34435 (2) obj. -45.0785 iterations 1
Cbc0038I Pass  22: suminf.    1.01823 (4) obj. -45.0785 iterations 4
Cbc0038I Pass  23: suminf.    0.70955 (4) obj. -45.0785 iterations 2
Cbc0038I Pass  24: suminf.    0.63891 (4) obj. -45.0785 iterations 5
Cbc0038I Pass  25: suminf.    1.24346 (3) obj. -45.0785 iterations 11
Cbc0038I Pass  26: suminf.    0.49316 (1) obj. -45.0785 iterations 2
Cbc0038I Pass  27: suminf.    0.21046 (2) obj. -45.0785 iterations 3
Cbc0038I Pass  28: suminf.    0.40714 (2) obj. -45.0785 iterations 4
Cbc0038I Pass  29: suminf.    0.40714 (2) obj. -45.0785 iterations 0
Cbc0038I Pass  30: suminf.    0.40714 (2) obj. -45.0785 iterations 0
Cbc0038I Rounding solution of -44.706 is better than previous of -42.1726

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -44.706 to -50.0583 (0.03 seconds)
Cbc0038I Round again with cutoff of -54.2929
Cbc0038I Pass  30: suminf.    1.58189 (8) obj. -54.2929 iterations 1
Cbc0038I Pass  31: suminf.    1.13696 (3) obj. -54.2929 iterations 16
Cbc0038I Pass  32: suminf.    0.75259 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  33: suminf.    0.69778 (2) obj. -56.4749 iterations 2
Cbc0038I Pass  34: suminf.    0.64797 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  35: suminf.    0.75259 (2) obj. -54.2929 iterations 3
Cbc0038I Pass  36: suminf.    1.10912 (5) obj. -54.2929 iterations 8
Cbc0038I Pass  37: suminf.    0.83444 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  38: suminf.    0.97014 (3) obj. -54.2929 iterations 4
Cbc0038I Pass  39: suminf.    0.55394 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  40: suminf.    0.40155 (2) obj. -54.2929 iterations 2
Cbc0038I Pass  41: suminf.    0.40155 (2) obj. -54.2929 iterations 0
Cbc0038I Pass  42: suminf.    0.55394 (2) obj. -54.2929 iterations 1
Cbc0038I Pass  43: suminf.    2.14846 (7) obj. -54.2929 iterations 9
Cbc0038I Pass  44: suminf.    1.33252 (6) obj. -54.2929 iterations 1
Cbc0038I Pass  45: suminf.    0.40155 (2) obj. -54.2929 iterations 6
Cbc0038I Pass  46: suminf.    2.00143 (6) obj. -54.2929 iterations 7
Cbc0038I Pass  47: suminf.    1.11654 (5) obj. -54.2929 iterations 3
Cbc0038I Pass  48: suminf.    1.06163 (3) obj. -54.2929 iterations 9
Cbc0038I Pass  49: suminf.    0.82992 (3) obj. -54.2929 iterations 2
Cbc0038I Pass  50: suminf.    0.94944 (3) obj. -54.2929 iterations 2
Cbc0038I Pass  51: suminf.    0.83373 (3) obj. -54.2929 iterations 1
Cbc0038I Pass  52: suminf.    1.66561 (6) obj. -54.2929 iterations 5
Cbc0038I Pass  53: suminf.    1.36694 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  54: suminf.    1.28247 (3) obj. -54.2929 iterations 5
Cbc0038I Pass  55: suminf.    1.16289 (5) obj. -54.2929 iterations 2
Cbc0038I Pass  56: suminf.    0.27705 (2) obj. -54.2929 iterations 7
Cbc0038I Pass  57: suminf.    0.27705 (2) obj. -54.2929 iterations 0
Cbc0038I Pass  58: suminf.    1.07506 (3) obj. -54.2929 iterations 3
Cbc0038I Pass  59: suminf.    0.83263 (3) obj. -54.2929 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 21 columns, reduced to 28 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -50.0583 - took 0.03 seconds
Cbc0012I Integer solution of -50.058333 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 35 rows 21 columns, reduced to 21 rows 13 columns
Cbc0031I 9 added rows had average density of 12.222222
Cbc0013I At root node, 9 cuts changed objective from -71.230539 to -55.960418 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 454 row cuts average 2.9 elements, 3 column cuts (3 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 456 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 4 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 18.9 elements, 0 column cuts (0 active)  in 0.787 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -50.058333 best solution, best possible -55.960418 (1.51 seconds)
Cbc0001I Search completed - best objective -50.058333, took 1525 iterations and 2 nodes (1.53 seconds)
Cbc0032I Strong branching done 48 times (381 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       1.53

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-29) rows, 41 (-22) columns and 305 (-344) elements
Clp1000I sum of infeasibilities 1.08238e-10 - average 3.0066e-12, 27 fixed columns
Coin0506I Presolve 11 (-25) rows, 14 (-27) columns and 44 (-261) elements
Clp0006I 0  Obj 54.246813 Dual inf 0.96824339 (12)
Clp0029I End of values pass after 14 iterations
Clp0000I Optimal - objective value 55.016979
Clp0000I Optimal - objective value 55.016979
Coin0511I After Postsolve, objective 55.016979, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.016979 Dual inf 44.510394 (21)
Clp0014I Perturbing problem by 0.001% of 1.7407718 - largest nonzero change 1.3407615e-05 ( 0.0011136878%) - largest zero change 2.2521616e-05
Clp0000I Optimal - objective value 88.328907
Clp0000I Optimal - objective value 88.328907
Clp0000I Optimal - objective value 88.328907
Coin0511I After Postsolve, objective 88.328907, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 88.32890675 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 41 columns (41 integer (41 of which binary)) and 310 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.786%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 8.64512
Cbc0038I Pass   1: suminf.    2.43403 (12) obj. -44.932 iterations 14
Cbc0038I Pass   2: suminf.    1.79171 (11) obj. -30.889 iterations 1
Cbc0038I Solution found of -16.6647
Cbc0038I Rounding solution of -33.6224 is better than previous of -16.6647

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 7 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -37.1386
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.43403 (12) obj. -44.932 iterations 0
Cbc0038I Pass   4: suminf.    2.07756 (12) obj. -37.1386 iterations 2
Cbc0038I Pass   5: suminf.    0.84691 (3) obj. -37.1386 iterations 22
Cbc0038I Pass   6: suminf.    0.84691 (3) obj. -37.1386 iterations 0
Cbc0038I Pass   7: suminf.    0.15972 (3) obj. -37.1386 iterations 4
Cbc0038I Pass   8: suminf.    0.14633 (2) obj. -37.1386 iterations 1
Cbc0038I Pass   9: suminf.    0.91986 (2) obj. -37.1386 iterations 1
Cbc0038I Pass  10: suminf.    0.91986 (2) obj. -37.1386 iterations 0
Cbc0038I Pass  11: suminf.    0.47111 (2) obj. -51.3674 iterations 1
Cbc0038I Pass  12: suminf.    1.41095 (4) obj. -37.1386 iterations 6
Cbc0038I Pass  13: suminf.    1.41095 (4) obj. -37.1386 iterations 1
Cbc0038I Pass  14: suminf.    0.44901 (2) obj. -37.1386 iterations 7
Cbc0038I Pass  15: suminf.    0.73317 (2) obj. -37.1386 iterations 1
Cbc0038I Pass  16: suminf.    0.73317 (2) obj. -37.1386 iterations 0
Cbc0038I Pass  17: suminf.    0.64333 (2) obj. -45.652 iterations 1
Cbc0038I Pass  18: suminf.    2.44905 (7) obj. -37.1386 iterations 15
Cbc0038I Pass  19: suminf.    1.45532 (5) obj. -37.6076 iterations 4
Cbc0038I Pass  20: suminf.    1.19441 (4) obj. -37.1386 iterations 6
Cbc0038I Pass  21: suminf.    0.57403 (3) obj. -37.1386 iterations 2
Cbc0038I Pass  22: suminf.    0.62111 (2) obj. -37.1386 iterations 5
Cbc0038I Pass  23: suminf.    0.61803 (2) obj. -37.1386 iterations 1
Cbc0038I Pass  24: suminf.    0.65889 (2) obj. -38.7936 iterations 1
Cbc0038I Pass  25: suminf.    0.74190 (3) obj. -37.1386 iterations 8
Cbc0038I Pass  26: suminf.    0.28525 (2) obj. -37.1386 iterations 2
Cbc0038I Pass  27: suminf.    0.10000 (1) obj. -39.2251 iterations 2
Cbc0038I Pass  28: suminf.    0.05237 (1) obj. -37.1386 iterations 1
Cbc0038I Pass  29: suminf.    1.55336 (7) obj. -37.1386 iterations 10
Cbc0038I Pass  30: suminf.    1.55336 (7) obj. -37.1386 iterations 1
Cbc0038I Pass  31: suminf.    0.70211 (4) obj. -37.1386 iterations 8
Cbc0038I Pass  32: suminf.    2.07488 (8) obj. -37.1386 iterations 7
Cbc0038I Rounding solution of -34.8441 is better than previous of -33.6224

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 15 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -34.8441 to -50.0583 (0.03 seconds)
Cbc0038I Round again with cutoff of -53.8034
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.23164 (15) obj. -53.8034 iterations 4
Cbc0038I Pass  33: suminf.    3.23164 (15) obj. -53.8034 iterations 0
Cbc0038I Pass  34: suminf.    0.83067 (6) obj. -53.8034 iterations 19
Cbc0038I Pass  35: suminf.    0.81704 (7) obj. -53.8034 iterations 1
Cbc0038I Pass  36: suminf.    1.55112 (8) obj. -53.8034 iterations 1
Cbc0038I Pass  37: suminf.    4.15475 (16) obj. -53.8034 iterations 12
Cbc0038I Pass  38: suminf.    3.33135 (14) obj. -53.8034 iterations 2
Cbc0038I Pass  39: suminf.    3.16972 (15) obj. -53.8034 iterations 1
Cbc0038I Pass  40: suminf.    2.50099 (7) obj. -53.8034 iterations 21
Cbc0038I Pass  41: suminf.    1.72924 (7) obj. -53.8034 iterations 1
Cbc0038I Pass  42: suminf.    2.29720 (8) obj. -53.8034 iterations 1
Cbc0038I Pass  43: suminf.    1.71439 (6) obj. -53.8034 iterations 2
Cbc0038I Pass  44: suminf.    1.75872 (6) obj. -53.8034 iterations 2
Cbc0038I Pass  45: suminf.    3.43989 (12) obj. -53.8034 iterations 8
Cbc0038I Pass  46: suminf.    2.41796 (10) obj. -53.8034 iterations 3
Cbc0038I Pass  47: suminf.    0.83067 (6) obj. -53.8034 iterations 10
Cbc0038I Pass  48: suminf.    0.81704 (7) obj. -53.8034 iterations 1
Cbc0038I Pass  49: suminf.    1.55112 (8) obj. -53.8034 iterations 1
Cbc0038I Pass  50: suminf.    2.21505 (7) obj. -53.8034 iterations 14
Cbc0038I Pass  51: suminf.    0.93701 (5) obj. -53.8034 iterations 8
Cbc0038I Pass  52: suminf.    1.23648 (5) obj. -53.8034 iterations 5
Cbc0038I Pass  53: suminf.    3.57753 (10) obj. -53.8034 iterations 19
Cbc0038I Pass  54: suminf.    3.28942 (10) obj. -53.8034 iterations 2
Cbc0038I Pass  55: suminf.    1.75872 (6) obj. -53.8034 iterations 11
Cbc0038I Pass  56: suminf.    1.71439 (6) obj. -53.8034 iterations 1
Cbc0038I Pass  57: suminf.    1.75872 (6) obj. -53.8034 iterations 2
Cbc0038I Pass  58: suminf.    2.88851 (10) obj. -53.8034 iterations 8
Cbc0038I Pass  59: suminf.    2.48369 (10) obj. -53.8034 iterations 3
Cbc0038I Pass  60: suminf.    0.83067 (6) obj. -53.8034 iterations 10
Cbc0038I Pass  61: suminf.    0.81704 (7) obj. -53.8034 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 41 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -50.0583 - took 0.03 seconds
Cbc0012I Integer solution of -50.058333 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 36 rows 41 columns, reduced to 10 rows 9 columns
Cbc0031I 12 added rows had average density of 8.1666667
Cbc0013I At root node, 12 cuts changed objective from -68.783412 to -50.097345 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 906 row cuts average 2.4 elements, 12 column cuts (12 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 715 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 161 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 40 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 202 row cuts average 11.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 323 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.799 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -50.058333 best solution, best possible -50.090736 (1.60 seconds)
Cbc0001I Search completed - best objective -50.058333, took 1365 iterations and 2 nodes (1.61 seconds)
Cbc0032I Strong branching done 4 times (14 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 8 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.61

