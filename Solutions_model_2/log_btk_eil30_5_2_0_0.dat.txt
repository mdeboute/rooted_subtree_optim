Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 28 (-4) columns and 144 (-33) elements
Clp1000I sum of infeasibilities 1.47795e-05 - average 3.07906e-07, 4 fixed columns
Coin0506I Presolve 39 (-9) rows, 24 (-4) columns and 118 (-26) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 87.732865
Clp0000I Optimal - objective value 87.732865
Coin0511I After Postsolve, objective 87.732865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.732865
Clp0000I Optimal - objective value 87.732865
Clp0000I Optimal - objective value 87.732865
Coin0511I After Postsolve, objective 87.732865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.73286498 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 48 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.945%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.89216
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.24398 iterations 19
Cbc0038I Solution found of -6.24398
Cbc0038I Relaxing continuous gives -6.24398
Cbc0038I Rounding solution of -10.1524 is better than previous of -6.24398

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -10.1524 to -38.5138 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.4358
Cbc0038I Pass   2: suminf.    0.60944 (2) obj. -43.4358 iterations 2
Cbc0038I Pass   3: suminf.    0.32410 (2) obj. -43.4358 iterations 2
Cbc0038I Pass   4: suminf.    0.52656 (2) obj. -43.4358 iterations 3
Cbc0038I Pass   5: suminf.    0.23387 (1) obj. -43.4358 iterations 2
Cbc0038I Pass   6: suminf.    1.88199 (7) obj. -43.4358 iterations 7
Cbc0038I Pass   7: suminf.    1.58078 (7) obj. -43.4358 iterations 5
Cbc0038I Pass   8: suminf.    0.36290 (1) obj. -43.4358 iterations 10
Cbc0038I Pass   9: suminf.    0.41947 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  10: suminf.    0.74864 (2) obj. -43.4358 iterations 7
Cbc0038I Pass  11: suminf.    0.74864 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  12: suminf.    0.55425 (2) obj. -43.4358 iterations 3
Cbc0038I Pass  13: suminf.    0.36290 (1) obj. -43.4358 iterations 2
Cbc0038I Pass  14: suminf.    0.45968 (1) obj. -43.4358 iterations 4
Cbc0038I Pass  15: suminf.    0.45968 (1) obj. -43.4358 iterations 1
Cbc0038I Pass  16: suminf.    0.47978 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  17: suminf.    0.39516 (1) obj. -43.4358 iterations 2
Cbc0038I Pass  18: suminf.    0.45935 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  19: suminf.    0.36290 (1) obj. -43.4358 iterations 2
Cbc0038I Pass  20: suminf.    0.55425 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  21: suminf.    2.59935 (8) obj. -43.4358 iterations 10
Cbc0038I Pass  22: suminf.    2.44507 (9) obj. -43.4358 iterations 3
Cbc0038I Pass  23: suminf.    0.69977 (3) obj. -43.4358 iterations 15
Cbc0038I Pass  24: suminf.    0.56628 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  25: suminf.    0.36290 (1) obj. -43.4358 iterations 2
Cbc0038I Pass  26: suminf.    0.41947 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  27: suminf.    0.69480 (2) obj. -43.4358 iterations 4
Cbc0038I Pass  28: suminf.    0.33260 (2) obj. -43.4358 iterations 1
Cbc0038I Pass  29: suminf.    0.78167 (3) obj. -43.4358 iterations 3
Cbc0038I Pass  30: suminf.    0.65875 (2) obj. -43.4358 iterations 1
Cbc0038I Pass  31: suminf.    0.69480 (2) obj. -43.4358 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -38.5138 - took 0.06 seconds
Cbc0012I Integer solution of -38.5138 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 28 columns, reduced to 31 rows 19 columns
Cbc0031I 13 added rows had average density of 22.153846
Cbc0013I At root node, 13 cuts changed objective from -87.732865 to -53.072121 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2246 row cuts average 4.3 elements, 1 column cuts (1 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 818 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -38.51380000000002, took 2674 iterations and 2 nodes (0.18 seconds)
Cbc0032I Strong branching done 62 times (881 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-14) rows, 54 (-6) columns and 502 (-110) elements
Clp1000I sum of infeasibilities 0 - average 0, 49 fixed columns
Coin0506I Presolve 4 (-44) rows, 5 (-49) columns and 14 (-488) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 78.300476
Clp0000I Optimal - objective value 78.300476
Coin0511I After Postsolve, objective 78.300476, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21550915 - largest nonzero change 0 ( 0%) - largest zero change 2.9684905e-05
Clp0000I Optimal - objective value 191.61585
Clp0000I Optimal - objective value 191.61585
Clp0000I Optimal - objective value 191.61585
Coin0511I After Postsolve, objective 191.61585, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 191.6158476 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 54 columns (54 integer (54 of which binary)) and 505 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.832%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 8.57639
Cbc0038I Pass   1: suminf.    0.11056 (2) obj. -109.295 iterations 26
Cbc0038I Solution found of 34.8795
Cbc0038I Rounding solution of -61.1205 is better than previous of 34.8795

Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -69.4229
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.11056 (2) obj. -109.295 iterations 0
Cbc0038I Pass   3: suminf.    0.15249 (1) obj. -69.4229 iterations 2
Cbc0038I Pass   4: suminf.    0.15249 (1) obj. -69.4229 iterations 0
Cbc0038I Pass   5: suminf.    1.51765 (4) obj. -69.4229 iterations 11
Cbc0038I Pass   6: suminf.    1.51765 (4) obj. -69.4229 iterations 4
Cbc0038I Pass   7: suminf.    0.68945 (2) obj. -69.4229 iterations 3
Cbc0038I Pass   8: suminf.    0.62546 (2) obj. -72.6217 iterations 1
Cbc0038I Pass   9: suminf.    2.47207 (7) obj. -69.4229 iterations 14
Cbc0038I Pass  10: suminf.    2.32800 (6) obj. -69.4229 iterations 7
Cbc0038I Pass  11: suminf.    1.11593 (3) obj. -69.4229 iterations 5
Cbc0038I Pass  12: suminf.    1.03114 (3) obj. -69.4229 iterations 1
Cbc0038I Pass  13: suminf.    1.29265 (3) obj. -69.4229 iterations 2
Cbc0038I Pass  14: suminf.    1.12179 (3) obj. -69.4229 iterations 1
Cbc0038I Pass  15: suminf.    1.03114 (3) obj. -69.4229 iterations 1
Cbc0038I Pass  16: suminf.    4.12637 (10) obj. -69.4229 iterations 11
Cbc0038I Pass  17: suminf.    3.37060 (8) obj. -69.4229 iterations 3
Cbc0038I Pass  18: suminf.    1.21931 (4) obj. -69.4229 iterations 7
Cbc0038I Pass  19: suminf.    1.21931 (4) obj. -69.4229 iterations 1
Cbc0038I Pass  20: suminf.    1.31575 (3) obj. -69.4229 iterations 2
Cbc0038I Pass  21: suminf.    0.71685 (3) obj. -69.4229 iterations 1
Cbc0038I Pass  22: suminf.    0.51351 (2) obj. -69.4229 iterations 1
Cbc0038I Pass  23: suminf.    0.69078 (2) obj. -69.4229 iterations 1
Cbc0038I Pass  24: suminf.    3.41594 (8) obj. -69.4229 iterations 16
Cbc0038I Pass  25: suminf.    3.41594 (8) obj. -69.4229 iterations 3
Cbc0038I Pass  26: suminf.    0.58220 (2) obj. -86.9518 iterations 7
Cbc0038I Pass  27: suminf.    0.15642 (2) obj. -69.4229 iterations 1
Cbc0038I Pass  28: suminf.    0.77903 (2) obj. -69.4229 iterations 1
Cbc0038I Pass  29: suminf.    4.15753 (11) obj. -69.4229 iterations 16
Cbc0038I Pass  30: suminf.    3.99777 (10) obj. -69.4229 iterations 4
Cbc0038I Pass  31: suminf.    0.56994 (3) obj. -69.4229 iterations 9
Cbc0038I Rounding solution of -64.9774 is better than previous of -61.1205

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 30 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -64.9774 to -70.7996 (0.02 seconds)
Cbc0038I Round again with cutoff of -85.4684
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.11056 (2) obj. -109.295 iterations 0
Cbc0038I Pass  32: suminf.    0.44721 (1) obj. -85.4684 iterations 2
Cbc0038I Pass  33: suminf.    0.44721 (1) obj. -85.4684 iterations 0
Cbc0038I Pass  34: suminf.    2.07237 (5) obj. -85.4684 iterations 7
Cbc0038I Pass  35: suminf.    0.99196 (2) obj. -85.4684 iterations 5
Cbc0038I Pass  36: suminf.    0.11056 (2) obj. -106.295 iterations 3
Cbc0038I Pass  37: suminf.    0.49768 (1) obj. -85.4684 iterations 2
Cbc0038I Pass  38: suminf.    3.57824 (9) obj. -85.4684 iterations 15
Cbc0038I Pass  39: suminf.    3.15102 (8) obj. -85.4684 iterations 4
Cbc0038I Pass  40: suminf.    1.26390 (4) obj. -85.4684 iterations 6
Cbc0038I Pass  41: suminf.    1.26390 (4) obj. -85.4684 iterations 0
Cbc0038I Pass  42: suminf.    0.48153 (2) obj. -85.4684 iterations 4
Cbc0038I Pass  43: suminf.    0.39728 (2) obj. -89.6801 iterations 1
Cbc0038I Pass  44: suminf.    2.18965 (6) obj. -85.4684 iterations 7
Cbc0038I Pass  45: suminf.    2.18965 (6) obj. -85.4684 iterations 2
Cbc0038I Pass  46: suminf.    4.73395 (12) obj. -85.4684 iterations 11
Cbc0038I Pass  47: suminf.    4.07559 (10) obj. -85.4684 iterations 2
Cbc0038I Pass  48: suminf.    3.59436 (9) obj. -85.4684 iterations 1
Cbc0038I Pass  49: suminf.    0.26482 (3) obj. -85.4684 iterations 7
Cbc0038I Pass  50: suminf.    0.26482 (3) obj. -85.4684 iterations 0
Cbc0038I Pass  51: suminf.    1.01867 (3) obj. -85.4684 iterations 3
Cbc0038I Pass  52: suminf.    2.54294 (8) obj. -85.4684 iterations 10
Cbc0038I Pass  53: suminf.    1.42631 (5) obj. -85.4684 iterations 5
Cbc0038I Pass  54: suminf.    1.40999 (4) obj. -101.003 iterations 2
Cbc0038I Pass  55: suminf.    0.47208 (3) obj. -85.4684 iterations 3
Cbc0038I Pass  56: suminf.    0.80871 (3) obj. -85.4684 iterations 3
Cbc0038I Pass  57: suminf.    0.47208 (3) obj. -85.4684 iterations 1
Cbc0038I Pass  58: suminf.    1.93297 (7) obj. -85.4684 iterations 6
Cbc0038I Pass  59: suminf.    1.48975 (5) obj. -85.4684 iterations 2
Cbc0038I Pass  60: suminf.    1.58120 (4) obj. -85.4684 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 32 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -70.7996 to -84.5695 (0.03 seconds)
Cbc0038I Round again with cutoff of -103.071
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  60: suminf.    0.11056 (2) obj. -109.295 iterations 0
Cbc0038I Pass  61: suminf.    0.22947 (1) obj. -103.071 iterations 2
Cbc0038I Pass  62: suminf.    2.60863 (7) obj. -103.071 iterations 9
Cbc0038I Pass  63: suminf.    2.26819 (6) obj. -103.071 iterations 4
Cbc0038I Pass  64: suminf.    1.79896 (5) obj. -103.071 iterations 1
Cbc0038I Pass  65: suminf.    1.28060 (4) obj. -103.071 iterations 1
Cbc0038I Pass  66: suminf.    0.62980 (3) obj. -118.88 iterations 2
Cbc0038I Pass  67: suminf.    0.11056 (2) obj. -107.295 iterations 1
Cbc0038I Pass  68: suminf.    0.19274 (1) obj. -103.071 iterations 2
Cbc0038I Pass  69: suminf.    3.96335 (11) obj. -103.071 iterations 14
Cbc0038I Pass  70: suminf.    1.88757 (6) obj. -103.071 iterations 8
Cbc0038I Pass  71: suminf.    1.10824 (4) obj. -103.071 iterations 2
Cbc0038I Pass  72: suminf.    1.00540 (3) obj. -103.071 iterations 3
Cbc0038I Pass  73: suminf.    0.33350 (3) obj. -103.071 iterations 1
Cbc0038I Pass  74: suminf.    2.15548 (9) obj. -103.071 iterations 8
Cbc0038I Pass  75: suminf.    0.33350 (3) obj. -103.071 iterations 9
Cbc0038I Pass  76: suminf.    3.00339 (8) obj. -103.071 iterations 9
Cbc0038I Pass  77: suminf.    1.41717 (4) obj. -103.071 iterations 6
Cbc0038I Pass  78: suminf.    1.10824 (4) obj. -103.071 iterations 2
Cbc0038I Pass  79: suminf.    1.00540 (3) obj. -103.071 iterations 3
Cbc0038I Pass  80: suminf.    4.04896 (12) obj. -103.071 iterations 11
Cbc0038I Pass  81: suminf.    2.01487 (6) obj. -103.071 iterations 8
Cbc0038I Pass  82: suminf.    1.22203 (4) obj. -103.071 iterations 2
Cbc0038I Pass  83: suminf.    2.64308 (7) obj. -103.071 iterations 4
Cbc0038I Pass  84: suminf.    1.32116 (4) obj. -103.071 iterations 3
Cbc0038I Pass  85: suminf.    0.58341 (3) obj. -103.071 iterations 2
Cbc0038I Pass  86: suminf.    0.96996 (3) obj. -103.071 iterations 3
Cbc0038I Pass  87: suminf.    3.22748 (9) obj. -103.071 iterations 9
Cbc0038I Pass  88: suminf.    0.73648 (3) obj. -103.071 iterations 9
Cbc0038I Pass  89: suminf.    0.75908 (3) obj. -103.071 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 54 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -84.5695 - took 0.03 seconds
Cbc0012I Integer solution of -84.56949 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 54 columns, reduced to 25 rows 27 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 11 added rows had average density of 5.7272727
Cbc0013I At root node, 11 cuts changed objective from -144.14317 to -87.842698 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 55 row cuts average 2.0 elements, 26 column cuts (26 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 8 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 17 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -84.56949000000003, took 50 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-15) rows, 28 (-4) columns and 144 (-33) elements
Clp1000I sum of infeasibilities 1.47795e-05 - average 3.07906e-07, 4 fixed columns
Coin0506I Presolve 39 (-9) rows, 24 (-4) columns and 118 (-26) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 87.732865
Clp0000I Optimal - objective value 87.732865
Coin0511I After Postsolve, objective 87.732865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 87.732865
Clp0000I Optimal - objective value 87.732865
Clp0000I Optimal - objective value 87.732865
Coin0511I After Postsolve, objective 87.732865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.73286498 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 48 rows, 28 columns (27 integer (27 of which binary)) and 144 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.945%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.89216
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -6.24398 iterations 19
Cbc0038I Solution found of -6.24398
Cbc0038I Relaxing continuous gives -6.24398
Cbc0038I Rounding solution of -10.1524 is better than previous of -6.24398

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 31 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -10.1524 to -38.5138 (0.03 seconds)
Cbc0038I Round again with cutoff of -43.4358
Cbc0038I Pass   2: suminf.    0.60944 (2) obj. -43.4358 iterations 2
Cbc0038I Pass   3: suminf.    0.32410 (2) obj. -43.4358 iterations 2
Cbc0038I Pass   4: suminf.    0.52656 (2) obj. -43.4358 iterations 3
Cbc0038I Pass   5: suminf.    0.23387 (1) obj. -43.4358 iterations 2
Cbc0038I Pass   6: suminf.    1.88199 (7) obj. -43.4358 iterations 7
Cbc0038I Pass   7: suminf.    1.58078 (7) obj. -43.4358 iterations 5
Cbc0038I Pass   8: suminf.    0.36290 (1) obj. -43.4358 iterations 10
Cbc0038I Pass   9: suminf.    0.41947 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  10: suminf.    0.74864 (2) obj. -43.4358 iterations 7
Cbc0038I Pass  11: suminf.    0.74864 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  12: suminf.    0.55425 (2) obj. -43.4358 iterations 3
Cbc0038I Pass  13: suminf.    0.36290 (1) obj. -43.4358 iterations 2
Cbc0038I Pass  14: suminf.    0.45968 (1) obj. -43.4358 iterations 4
Cbc0038I Pass  15: suminf.    0.45968 (1) obj. -43.4358 iterations 1
Cbc0038I Pass  16: suminf.    0.47978 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  17: suminf.    0.39516 (1) obj. -43.4358 iterations 2
Cbc0038I Pass  18: suminf.    0.45935 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  19: suminf.    0.36290 (1) obj. -43.4358 iterations 2
Cbc0038I Pass  20: suminf.    0.55425 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  21: suminf.    2.59935 (8) obj. -43.4358 iterations 10
Cbc0038I Pass  22: suminf.    2.44507 (9) obj. -43.4358 iterations 3
Cbc0038I Pass  23: suminf.    0.69977 (3) obj. -43.4358 iterations 15
Cbc0038I Pass  24: suminf.    0.56628 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  25: suminf.    0.36290 (1) obj. -43.4358 iterations 2
Cbc0038I Pass  26: suminf.    0.41947 (2) obj. -43.4358 iterations 2
Cbc0038I Pass  27: suminf.    0.69480 (2) obj. -43.4358 iterations 4
Cbc0038I Pass  28: suminf.    0.33260 (2) obj. -43.4358 iterations 1
Cbc0038I Pass  29: suminf.    0.78167 (3) obj. -43.4358 iterations 3
Cbc0038I Pass  30: suminf.    0.65875 (2) obj. -43.4358 iterations 1
Cbc0038I Pass  31: suminf.    0.69480 (2) obj. -43.4358 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 28 columns, reduced to 36 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -38.5138 - took 0.02 seconds
Cbc0012I Integer solution of -38.5138 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 28 columns, reduced to 31 rows 19 columns
Cbc0031I 13 added rows had average density of 22.153846
Cbc0013I At root node, 13 cuts changed objective from -87.732865 to -53.072121 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2246 row cuts average 4.3 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 818 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 112 row cuts average 25.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -38.51380000000002, took 2674 iterations and 2 nodes (0.20 seconds)
Cbc0032I Strong branching done 62 times (881 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-16) rows, 53 (-8) columns and 476 (-137) elements
Clp1000I sum of infeasibilities 1.12488e-07 - average 2.39336e-09, 36 fixed columns
Coin0506I Presolve 14 (-33) rows, 17 (-36) columns and 56 (-420) elements
Clp0029I End of values pass after 17 iterations
Clp0014I Perturbing problem by 0.001% of 1.324616 - largest nonzero change 2.6913758e-05 ( 0.0022844162%) - largest zero change 2.3824688e-05
Clp0000I Optimal - objective value 18.352639
Clp0000I Optimal - objective value 18.352639
Coin0511I After Postsolve, objective 18.352639, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3167077 - largest nonzero change 2.8325925e-05 ( 0.0023267071%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 121.43655
Clp0000I Optimal - objective value 121.43655
Clp0000I Optimal - objective value 121.43655
Coin0511I After Postsolve, objective 121.43655, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.4365533 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 53 columns (53 integer (53 of which binary)) and 478 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.635%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 3.9003
Cbc0038I Pass   1: suminf.    2.25255 (15) obj. -53.9887 iterations 5
Cbc0038I Pass   2: suminf.    2.25255 (15) obj. -53.9887 iterations 0
Cbc0038I Solution found of 4.52586
Cbc0038I Rounding solution of -7.7509 is better than previous of 4.52586

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 53 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -16.6245
Cbc0038I Pass   3: suminf.    2.25255 (15) obj. -53.9887 iterations 0
Cbc0038I Pass   4: suminf.    2.25255 (15) obj. -53.9887 iterations 0
Cbc0038I Pass   5: suminf.    0.46066 (2) obj. -16.6245 iterations 21
Cbc0038I Pass   6: suminf.    0.18548 (1) obj. -38.8192 iterations 2
Cbc0038I Pass   7: suminf.    0.40685 (1) obj. -16.6245 iterations 1
Cbc0038I Pass   8: suminf.    2.05553 (9) obj. -16.6245 iterations 16
Cbc0038I Pass   9: suminf.    2.05553 (9) obj. -16.6245 iterations 1
Cbc0038I Pass  10: suminf.    0.72481 (3) obj. -16.6245 iterations 10
Cbc0038I Pass  11: suminf.    0.72481 (3) obj. -16.6245 iterations 0
Cbc0038I Pass  12: suminf.    1.15803 (3) obj. -29.8586 iterations 2
Cbc0038I Pass  13: suminf.    0.80930 (3) obj. -16.6245 iterations 1
Cbc0038I Pass  14: suminf.    0.27419 (1) obj. -20.0952 iterations 3
Cbc0038I Pass  15: suminf.    0.21045 (1) obj. -16.6245 iterations 1
Cbc0038I Pass  16: suminf.    1.19817 (6) obj. -22.632 iterations 10
Cbc0038I Pass  17: suminf.    0.98526 (4) obj. -21.0241 iterations 2
Cbc0038I Pass  18: suminf.    0.20011 (3) obj. -16.6245 iterations 8
Cbc0038I Pass  19: suminf.    0.17666 (4) obj. -16.6245 iterations 2
Cbc0038I Pass  20: suminf.    0.25667 (2) obj. -16.6245 iterations 2
Cbc0038I Pass  21: suminf.    0.03729 (1) obj. -16.6245 iterations 1
Cbc0038I Pass  22: suminf.    0.08871 (1) obj. -19.4238 iterations 1
Cbc0038I Pass  23: suminf.    1.61558 (8) obj. -16.6245 iterations 11
Cbc0038I Pass  24: suminf.    1.34348 (8) obj. -21.3604 iterations 3
Cbc0038I Pass  25: suminf.    0.34090 (1) obj. -16.6245 iterations 9
Cbc0038I Pass  26: suminf.    0.39516 (1) obj. -19.5789 iterations 1
Cbc0038I Pass  27: suminf.    1.17449 (7) obj. -22.2851 iterations 15
Cbc0038I Pass  28: suminf.    1.01143 (7) obj. -16.6245 iterations 1
Cbc0038I Pass  29: suminf.    0.46516 (2) obj. -16.6245 iterations 8
Cbc0038I Pass  30: suminf.    0.34677 (1) obj. -17.5587 iterations 1
Cbc0038I Pass  31: suminf.    0.36393 (1) obj. -16.6245 iterations 1
Cbc0038I Pass  32: suminf.    2.66132 (10) obj. -16.6245 iterations 23
Cbc0038I Rounding solution of -21.2983 is better than previous of -7.7509

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 53 columns, reduced to 33 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -21.2983 to -29.5101 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.9055
Cbc0038I Pass  32: suminf.    2.25255 (15) obj. -53.9887 iterations 0
Cbc0038I Pass  33: suminf.    2.25255 (15) obj. -53.9887 iterations 0
Cbc0038I Pass  34: suminf.    0.52647 (3) obj. -42.9055 iterations 19
Cbc0038I Pass  35: suminf.    0.52647 (3) obj. -42.9055 iterations 0
Cbc0038I Pass  36: suminf.    0.70451 (2) obj. -42.9055 iterations 4
Cbc0038I Pass  37: suminf.    0.52823 (2) obj. -54.5929 iterations 1
Cbc0038I Pass  38: suminf.    0.32978 (1) obj. -42.9055 iterations 2
Cbc0038I Pass  39: suminf.    0.16935 (1) obj. -51.6398 iterations 1
Cbc0038I Pass  40: suminf.    1.17521 (5) obj. -57.3916 iterations 7
Cbc0038I Pass  41: suminf.    1.17521 (5) obj. -57.3916 iterations 1
Cbc0038I Pass  42: suminf.    0.23795 (1) obj. -42.9055 iterations 5
Cbc0038I Pass  43: suminf.    0.16935 (1) obj. -46.6398 iterations 1
Cbc0038I Pass  44: suminf.    1.61074 (7) obj. -42.9055 iterations 13
Cbc0038I Pass  45: suminf.    1.32883 (5) obj. -42.9055 iterations 2
Cbc0038I Pass  46: suminf.    0.28441 (2) obj. -42.9055 iterations 4
Cbc0038I Pass  47: suminf.    0.28441 (2) obj. -42.9055 iterations 0
Cbc0038I Pass  48: suminf.    0.57585 (2) obj. -42.9055 iterations 1
Cbc0038I Pass  49: suminf.    0.46402 (2) obj. -49.3985 iterations 1
Cbc0038I Pass  50: suminf.    1.49933 (6) obj. -42.9055 iterations 10
Cbc0038I Pass  51: suminf.    1.49933 (6) obj. -42.9055 iterations 2
Cbc0038I Pass  52: suminf.    1.19314 (4) obj. -42.9055 iterations 6
Cbc0038I Pass  53: suminf.    1.19314 (4) obj. -42.9055 iterations 0
Cbc0038I Pass  54: suminf.    1.33286 (4) obj. -42.9055 iterations 2
Cbc0038I Pass  55: suminf.    1.33286 (4) obj. -42.9055 iterations 0
Cbc0038I Pass  56: suminf.    2.03703 (7) obj. -42.9055 iterations 13
Cbc0038I Pass  57: suminf.    1.98738 (6) obj. -42.9055 iterations 1
Cbc0038I Pass  58: suminf.    1.69246 (5) obj. -42.9055 iterations 6
Cbc0038I Pass  59: suminf.    1.33220 (4) obj. -47.488 iterations 3
Cbc0038I Pass  60: suminf.    1.22948 (4) obj. -42.9055 iterations 4
Cbc0038I Pass  61: suminf.    1.21901 (4) obj. -42.9055 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 53 columns, reduced to 13 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.5101 - took 0.03 seconds
Cbc0012I Integer solution of -29.5101 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0012I Integer solution of -38.5138 found by DiveCoefficient after 108 iterations and 0 nodes (0.13 seconds)
Cbc0031I 17 added rows had average density of 9.4705882
Cbc0013I At root node, 17 cuts changed objective from -96.486473 to -38.5138 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 195 row cuts average 4.2 elements, 15 column cuts (15 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 39 row cuts average 28.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 63 row cuts average 24.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0001I Search completed - best objective -38.51380000000002, took 108 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.14

