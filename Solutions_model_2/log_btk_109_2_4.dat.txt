Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 212 (-8) rows, 109 (-2) columns and 530 (-14) elements
Clp1000I sum of infeasibilities 0.0656584 - average 0.00030971, 39 fixed columns
Coin0506I Presolve 126 (-86) rows, 70 (-39) columns and 319 (-211) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.25372275 - largest nonzero change 0 ( 0%) - largest zero change 2.9415753e-05
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Coin0511I After Postsolve, objective 26618.954, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2143605 - largest nonzero change 2.3390799e-05 ( 0.0023390799%) - largest zero change 2.920788e-05
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Coin0511I After Postsolve, objective 26618.954, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26618.95411 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 212 rows, 109 columns (108 integer (108 of which binary)) and 530 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.884%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 25.3561
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10502.8 iterations 85
Cbc0038I Solution found of -10502.8
Cbc0038I Relaxing continuous gives -10502.8
Cbc0038I Rounding solution of -15459.2 is better than previous of -10502.8

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 109 columns, reduced to 126 rows 70 columns - 7 fixed gives 88, 60 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 88 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -15459.2 to -19727.8 (0.07 seconds)
Cbc0038I Round again with cutoff of -20416.9
Cbc0038I Pass   2: suminf.    3.61051 (11) obj. -20416.9 iterations 23
Cbc0038I Pass   3: suminf.    3.61051 (11) obj. -20416.9 iterations 0
Cbc0038I Pass   4: suminf.    2.04216 (6) obj. -20416.9 iterations 24
Cbc0038I Pass   5: suminf.    0.65087 (3) obj. -20416.9 iterations 6
Cbc0038I Pass   6: suminf.    0.51369 (3) obj. -20416.9 iterations 2
Cbc0038I Pass   7: suminf.    1.53014 (5) obj. -20416.9 iterations 4
Cbc0038I Pass   8: suminf.    0.64379 (3) obj. -20416.9 iterations 3
Cbc0038I Pass   9: suminf.    3.53870 (14) obj. -20416.9 iterations 23
Cbc0038I Pass  10: suminf.    1.93433 (7) obj. -20416.9 iterations 15
Cbc0038I Pass  11: suminf.    2.08942 (5) obj. -20416.9 iterations 14
Cbc0038I Pass  12: suminf.    0.64160 (7) obj. -20416.9 iterations 4
Cbc0038I Pass  13: suminf.    0.64160 (7) obj. -20416.9 iterations 0
Cbc0038I Pass  14: suminf.    2.03701 (6) obj. -20416.9 iterations 6
Cbc0038I Pass  15: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  16: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  17: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  18: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  19: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  20: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  21: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  22: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  23: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  24: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  25: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  26: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  27: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  28: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  29: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  30: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  31: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 109 columns, reduced to 133 rows 72 columns - 18 fixed gives 85, 54 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 85 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -19727.8 - took 0.09 seconds
Cbc0012I Integer solution of -19727.827 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 212 rows 109 columns, reduced to 126 rows 70 columns - 17 fixed gives 84, 53 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 84 rows 53 columns
Cbc0031I 23 added rows had average density of 67.26087
Cbc0013I At root node, 23 cuts changed objective from -26618.954 to -23119.202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16133 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1642 row cuts average 96.5 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 85.2 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19727.827 best solution, best possible -23119.202 (1.12 seconds)
Cbc0012I Integer solution of -19733.474 found by rounding after 6578 iterations and 36 nodes (1.36 seconds)
Cbc0038I Full problem 212 rows 109 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 212 rows 109 columns, reduced to 1 rows 5 columns
Cbc0001I Search completed - best objective -19733.47427, took 7225 iterations and 100 nodes (1.43 seconds)
Cbc0032I Strong branching done 868 times (16642 iterations), fathomed 30 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 266 variables fixed on reduced cost
Total time (CPU seconds):       1.40   (Wallclock seconds):       1.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 169 (-50) rows, 173 (-45) columns and 3691 (-2739) elements
Clp1000I sum of infeasibilities 7.00028e-07 - average 4.14218e-09, 112 fixed columns
Coin0506I Presolve 58 (-111) rows, 61 (-112) columns and 175 (-3516) elements
Clp0006I 0  Obj 12273.406 Dual inf 406.14028 (52)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.3320116 - largest nonzero change 2.9359366e-05 ( 0.00161507%) - largest zero change 2.7881143e-05
Clp0000I Optimal - objective value 13979.911
Clp0000I Optimal - objective value 13979.911
Coin0511I After Postsolve, objective 13979.911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 13979.911 Dual inf 52634.957 (77)
Clp0014I Perturbing problem by 0.001% of 2.0252402 - largest nonzero change 2.9983794e-05 ( 0.0027250874%) - largest zero change 2.9914327e-05
Clp0000I Optimal - objective value 32327.534
Clp0000I Optimal - objective value 32327.534
Clp0000I Optimal - objective value 32327.534
Coin0511I After Postsolve, objective 32327.534, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32327.534 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0004I processed model has 169 rows, 173 columns (173 integer (173 of which binary)) and 3691 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.977%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 73 integers unsatisfied sum - 12.4684
Cbc0038I Pass   1: suminf.    8.85541 (48) obj. -27960.5 iterations 41
Cbc0038I Pass   2: suminf.    8.85541 (48) obj. -27960.5 iterations 3
Cbc0038I Pass   3: suminf.    6.16649 (37) obj. -24957.9 iterations 11
Cbc0038I Pass   4: suminf.    2.95320 (22) obj. -22032.2 iterations 15
Cbc0038I Pass   5: suminf.    0.71930 (9) obj. -19372.3 iterations 13
Cbc0038I Solution found of -16019.4
Cbc0038I Rounding solution of -16312.4 is better than previous of -16019.4

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -17914
Cbc0038I Pass   6: suminf.    8.85541 (48) obj. -27960.5 iterations 0
Cbc0038I Pass   7: suminf.    8.85541 (48) obj. -27960.5 iterations 1
Cbc0038I Pass   8: suminf.    2.38122 (19) obj. -21566.6 iterations 29
Cbc0038I Pass   9: suminf.    1.07939 (17) obj. -17914 iterations 32
Cbc0038I Pass  10: suminf.    0.70090 (4) obj. -17914 iterations 29
Cbc0038I Pass  11: suminf.    0.70090 (4) obj. -17914 iterations 1
Cbc0038I Pass  12: suminf.    0.88247 (4) obj. -17914 iterations 11
Cbc0038I Pass  13: suminf.    0.88247 (4) obj. -17914 iterations 7
Cbc0038I Pass  14: suminf.    0.70090 (4) obj. -17914 iterations 13
Cbc0038I Pass  15: suminf.    5.75581 (34) obj. -19122.9 iterations 66
Cbc0038I Pass  16: suminf.    5.38856 (29) obj. -18750.3 iterations 12
Cbc0038I Pass  17: suminf.    2.22725 (12) obj. -17914 iterations 29
Cbc0038I Pass  18: suminf.    1.68557 (10) obj. -17914 iterations 12
Cbc0038I Pass  19: suminf.    1.37740 (12) obj. -17914 iterations 18
Cbc0038I Pass  20: suminf.    1.21271 (7) obj. -17914 iterations 22
Cbc0038I Pass  21: suminf.    1.19939 (6) obj. -17914 iterations 2
Cbc0038I Pass  22: suminf.    1.01942 (5) obj. -17914 iterations 21
Cbc0038I Pass  23: suminf.    1.01942 (5) obj. -17914 iterations 1
Cbc0038I Pass  24: suminf.    1.32173 (5) obj. -17914 iterations 9
Cbc0038I Pass  25: suminf.    1.32173 (5) obj. -17914 iterations 9
Cbc0038I Pass  26: suminf.    1.23453 (5) obj. -17914 iterations 12
Cbc0038I Pass  27: suminf.    1.23453 (5) obj. -17914 iterations 6
Cbc0038I Pass  28: suminf.    2.74332 (14) obj. -17914 iterations 41
Cbc0038I Pass  29: suminf.    2.42828 (14) obj. -17914 iterations 14
Cbc0038I Pass  30: suminf.    1.05737 (8) obj. -17914 iterations 24
Cbc0038I Pass  31: suminf.    1.02048 (15) obj. -17914 iterations 2
Cbc0038I Pass  32: suminf.    4.24334 (15) obj. -17914 iterations 23
Cbc0038I Pass  33: suminf.    4.24334 (15) obj. -17914 iterations 3
Cbc0038I Pass  34: suminf.    0.78330 (4) obj. -17914 iterations 27
Cbc0038I Pass  35: suminf.    0.48000 (3) obj. -18061.3 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 173 columns, reduced to 100 rows 104 columns - 18 fixed gives 74, 81 - ok now
Cbc0038I Full problem 169 rows 173 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -16019.4 to -18047.9 (0.08 seconds)
Cbc0038I Round again with cutoff of -20903.8
Cbc0038I Pass  35: suminf.    8.85541 (48) obj. -27960.5 iterations 0
Cbc0038I Pass  36: suminf.    8.85541 (48) obj. -27960.5 iterations 1
Cbc0038I Pass  37: suminf.    5.47080 (34) obj. -24228.3 iterations 14
Cbc0038I Pass  38: suminf.    2.95320 (22) obj. -22032.2 iterations 12
Cbc0038I Pass  39: suminf.    1.89663 (17) obj. -20903.8 iterations 39
Cbc0038I Pass  40: suminf.    1.72870 (19) obj. -20903.8 iterations 3
Cbc0038I Pass  41: suminf.    1.91055 (9) obj. -20903.8 iterations 28
Cbc0038I Pass  42: suminf.    1.54792 (10) obj. -20925.9 iterations 11
Cbc0038I Pass  43: suminf.    1.79710 (9) obj. -20903.8 iterations 9
Cbc0038I Pass  44: suminf.    1.67116 (9) obj. -20998.3 iterations 5
Cbc0038I Pass  45: suminf.    5.10713 (30) obj. -20903.8 iterations 29
Cbc0038I Pass  46: suminf.    4.47826 (23) obj. -20903.8 iterations 9
Cbc0038I Pass  47: suminf.    4.06620 (21) obj. -20903.8 iterations 9
Cbc0038I Pass  48: suminf.    2.45680 (11) obj. -20903.8 iterations 23
Cbc0038I Pass  49: suminf.    2.36246 (11) obj. -20903.8 iterations 13
Cbc0038I Pass  50: suminf.    1.70157 (9) obj. -20903.8 iterations 21
Cbc0038I Pass  51: suminf.    1.60857 (10) obj. -20921.9 iterations 11
Cbc0038I Pass  52: suminf.    1.79439 (11) obj. -20903.8 iterations 7
Cbc0038I Pass  53: suminf.    1.78828 (11) obj. -20903.8 iterations 5
Cbc0038I Pass  54: suminf.    1.85157 (9) obj. -20903.8 iterations 9
Cbc0038I Pass  55: suminf.    4.62528 (20) obj. -20903.8 iterations 34
Cbc0038I Pass  56: suminf.    3.66555 (19) obj. -20903.8 iterations 16
Cbc0038I Pass  57: suminf.    3.59607 (20) obj. -20903.8 iterations 10
Cbc0038I Pass  58: suminf.    2.52301 (12) obj. -20903.8 iterations 24
Cbc0038I Pass  59: suminf.    1.95069 (12) obj. -20903.8 iterations 19
Cbc0038I Pass  60: suminf.    1.86978 (11) obj. -20903.8 iterations 19
Cbc0038I Pass  61: suminf.    1.86933 (12) obj. -20903.8 iterations 9
Cbc0038I Pass  62: suminf.    2.15269 (10) obj. -20903.8 iterations 16
Cbc0038I Pass  63: suminf.    1.95779 (12) obj. -20903.8 iterations 5
Cbc0038I Pass  64: suminf.    2.15269 (10) obj. -20903.8 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 173 columns, reduced to 67 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -18047.9 to -18277.6 (0.11 seconds)
Cbc0038I Round again with cutoff of -24331
Cbc0038I Pass  64: suminf.    8.85541 (48) obj. -27960.5 iterations 0
Cbc0038I Pass  65: suminf.    8.85541 (48) obj. -27960.5 iterations 1
Cbc0038I Pass  66: suminf.    3.80729 (25) obj. -24331 iterations 37
Cbc0038I Pass  67: suminf.    3.59941 (25) obj. -24523.2 iterations 4
Cbc0038I Pass  68: suminf.    3.09854 (24) obj. -24331 iterations 36
Cbc0038I Pass  69: suminf.    2.86466 (23) obj. -24331 iterations 7
Cbc0038I Pass  70: suminf.    2.95978 (14) obj. -24331 iterations 25
Cbc0038I Pass  71: suminf.    2.81348 (16) obj. -24331 iterations 4
Cbc0038I Pass  72: suminf.    2.95978 (14) obj. -24331 iterations 11
Cbc0038I Pass  73: suminf.    4.53740 (24) obj. -24331 iterations 36
Cbc0038I Pass  74: suminf.    4.25667 (23) obj. -24331 iterations 16
Cbc0038I Pass  75: suminf.    3.81354 (23) obj. -24331 iterations 8
Cbc0038I Pass  76: suminf.    3.01776 (18) obj. -24331 iterations 17
Cbc0038I Pass  77: suminf.    3.01776 (18) obj. -24331 iterations 1
Cbc0038I Pass  78: suminf.    2.46568 (14) obj. -24331 iterations 14
Cbc0038I Pass  79: suminf.    2.46568 (14) obj. -24331 iterations 2
Cbc0038I Pass  80: suminf.    2.46971 (14) obj. -24331 iterations 5
Cbc0038I Pass  81: suminf.    2.46971 (14) obj. -24331 iterations 3
Cbc0038I Pass  82: suminf.    2.46568 (14) obj. -24331 iterations 5
Cbc0038I Pass  83: suminf.    5.95131 (29) obj. -24331 iterations 36
Cbc0038I Pass  84: suminf.    5.10299 (23) obj. -24331 iterations 21
Cbc0038I Pass  85: suminf.    4.62029 (23) obj. -24619.5 iterations 11
Cbc0038I Pass  86: suminf.    4.15569 (22) obj. -24420.6 iterations 2
Cbc0038I Pass  87: suminf.    3.29863 (17) obj. -24331 iterations 27
Cbc0038I Pass  88: suminf.    3.29863 (17) obj. -24331 iterations 4
Cbc0038I Pass  89: suminf.    3.24578 (17) obj. -24331 iterations 18
Cbc0038I Pass  90: suminf.    3.24578 (17) obj. -24331 iterations 0
Cbc0038I Pass  91: suminf.    3.32143 (17) obj. -24331 iterations 12
Cbc0038I Pass  92: suminf.    3.32143 (17) obj. -24331 iterations 11
Cbc0038I Pass  93: suminf.    3.24578 (17) obj. -24331 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 173 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -18277.6 - took 0.13 seconds
Cbc0012I Integer solution of -18277.64 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 169 rows 173 columns, reduced to 38 rows 42 columns
Cbc0031I 68 added rows had average density of 50.691176
Cbc0013I At root node, 68 cuts changed objective from -32327.534 to -21232.809 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21296 row cuts average 2.0 elements, 0 column cuts (29 active)  in 0.219 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1778 row cuts average 151.2 elements, 0 column cuts (0 active)  in 0.275 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1592 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.234 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1153 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 435 row cuts average 90.9 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.274 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -18277.64 best solution, best possible -21232.809 (2.70 seconds)
Cbc0010I After 4 nodes, 5 on tree, -18277.64 best solution, best possible -21232.809 (3.49 seconds)
Cbc0012I Integer solution of -18465.105 found by DiveCoefficient after 5713 iterations and 6 nodes (3.66 seconds)
Cbc0012I Integer solution of -18896.616 found by DiveCoefficient after 5814 iterations and 8 nodes (3.72 seconds)
Cbc0012I Integer solution of -19090.593 found by rounding after 6431 iterations and 39 nodes (3.96 seconds)
Cbc0038I Full problem 169 rows 173 columns, reduced to 14 rows 19 columns
Cbc0012I Integer solution of -19727.827 found by RINS after 6440 iterations and 41 nodes (3.98 seconds)
Cbc0012I Integer solution of -19733.474 found by rounding after 6651 iterations and 61 nodes (4.03 seconds)
Cbc0038I Full problem 169 rows 173 columns, reduced to 1 rows 5 columns
Cbc0010I After 129 nodes, 2 on tree, -19733.474 best solution, best possible -21232.809 (4.40 seconds)
Cbc0001I Search completed - best objective -19733.47427, took 8698 iterations and 134 nodes (4.63 seconds)
Cbc0032I Strong branching done 970 times (19773 iterations), fathomed 19 nodes and fixed 7 variables
Cbc0035I Maximum depth 34, 273 variables fixed on reduced cost
Total time (CPU seconds):       4.31   (Wallclock seconds):       4.65

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 212 (-8) rows, 109 (-2) columns and 530 (-14) elements
Clp1000I sum of infeasibilities 0.0656584 - average 0.00030971, 39 fixed columns
Coin0506I Presolve 126 (-86) rows, 70 (-39) columns and 319 (-211) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.25372275 - largest nonzero change 0 ( 0%) - largest zero change 2.9415753e-05
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Coin0511I After Postsolve, objective 26618.954, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.2143605 - largest nonzero change 2.3390799e-05 ( 0.0023390799%) - largest zero change 2.920788e-05
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Clp0000I Optimal - objective value 26618.954
Coin0511I After Postsolve, objective 26618.954, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 26618.95411 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 212 rows, 109 columns (108 integer (108 of which binary)) and 530 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.884%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 69 integers unsatisfied sum - 25.3561
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -10502.8 iterations 85
Cbc0038I Solution found of -10502.8
Cbc0038I Relaxing continuous gives -10502.8
Cbc0038I Rounding solution of -15459.2 is better than previous of -10502.8

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 109 columns, reduced to 126 rows 70 columns - 7 fixed gives 88, 60 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 88 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -15459.2 to -19727.8 (0.06 seconds)
Cbc0038I Round again with cutoff of -20416.9
Cbc0038I Pass   2: suminf.    3.61051 (11) obj. -20416.9 iterations 23
Cbc0038I Pass   3: suminf.    3.61051 (11) obj. -20416.9 iterations 0
Cbc0038I Pass   4: suminf.    2.04216 (6) obj. -20416.9 iterations 24
Cbc0038I Pass   5: suminf.    0.65087 (3) obj. -20416.9 iterations 6
Cbc0038I Pass   6: suminf.    0.51369 (3) obj. -20416.9 iterations 2
Cbc0038I Pass   7: suminf.    1.53014 (5) obj. -20416.9 iterations 4
Cbc0038I Pass   8: suminf.    0.64379 (3) obj. -20416.9 iterations 3
Cbc0038I Pass   9: suminf.    3.53870 (14) obj. -20416.9 iterations 23
Cbc0038I Pass  10: suminf.    1.93433 (7) obj. -20416.9 iterations 15
Cbc0038I Pass  11: suminf.    2.08942 (5) obj. -20416.9 iterations 14
Cbc0038I Pass  12: suminf.    0.64160 (7) obj. -20416.9 iterations 4
Cbc0038I Pass  13: suminf.    0.64160 (7) obj. -20416.9 iterations 0
Cbc0038I Pass  14: suminf.    2.03701 (6) obj. -20416.9 iterations 6
Cbc0038I Pass  15: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  16: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  17: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  18: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  19: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  20: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  21: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  22: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  23: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  24: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  25: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  26: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  27: suminf.    0.81958 (6) obj. -20416.9 iterations 1
Cbc0038I Pass  28: suminf.    0.81958 (6) obj. -20416.9 iterations 0
Cbc0038I Pass  29: suminf.    2.03701 (6) obj. -20416.9 iterations 5
Cbc0038I Pass  30: suminf.    1.89191 (6) obj. -20416.9 iterations 2
Cbc0038I Pass  31: suminf.    1.67709 (6) obj. -20416.9 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 212 rows 109 columns, reduced to 133 rows 72 columns - 18 fixed gives 85, 54 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 85 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -19727.8 - took 0.09 seconds
Cbc0012I Integer solution of -19727.827 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 212 rows 109 columns, reduced to 126 rows 70 columns - 17 fixed gives 84, 53 - ok now
Cbc0038I Full problem 212 rows 109 columns, reduced to 84 rows 53 columns
Cbc0031I 23 added rows had average density of 67.26087
Cbc0013I At root node, 23 cuts changed objective from -26618.954 to -23119.202 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16133 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1642 row cuts average 96.5 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.094 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 85.2 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19727.827 best solution, best possible -23119.202 (1.11 seconds)
Cbc0012I Integer solution of -19733.474 found by rounding after 6578 iterations and 36 nodes (1.35 seconds)
Cbc0038I Full problem 212 rows 109 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 212 rows 109 columns, reduced to 1 rows 5 columns
Cbc0001I Search completed - best objective -19733.47427, took 7225 iterations and 100 nodes (1.41 seconds)
Cbc0032I Strong branching done 868 times (16642 iterations), fathomed 30 nodes and fixed 10 variables
Cbc0035I Maximum depth 13, 266 variables fixed on reduced cost
Total time (CPU seconds):       1.38   (Wallclock seconds):       1.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 169 (-51) rows, 173 (-46) columns and 3691 (-2740) elements
Clp1000I sum of infeasibilities 7.00028e-07 - average 4.14218e-09, 112 fixed columns
Coin0506I Presolve 58 (-111) rows, 61 (-112) columns and 175 (-3516) elements
Clp0006I 0  Obj 12273.406 Dual inf 406.14028 (52)
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.3320116 - largest nonzero change 2.9359366e-05 ( 0.00161507%) - largest zero change 2.7881143e-05
Clp0000I Optimal - objective value 13979.911
Clp0000I Optimal - objective value 13979.911
Coin0511I After Postsolve, objective 13979.911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 13979.911 Dual inf 52634.957 (77)
Clp0014I Perturbing problem by 0.001% of 2.0252402 - largest nonzero change 2.9983794e-05 ( 0.0027250874%) - largest zero change 2.9914327e-05
Clp0000I Optimal - objective value 32327.534
Clp0000I Optimal - objective value 32327.534
Clp0000I Optimal - objective value 32327.534
Coin0511I After Postsolve, objective 32327.534, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 32327.534 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 169 rows, 173 columns (173 integer (173 of which binary)) and 3691 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.977%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 73 integers unsatisfied sum - 12.4684
Cbc0038I Pass   1: suminf.    8.85541 (48) obj. -27960.5 iterations 41
Cbc0038I Pass   2: suminf.    8.85541 (48) obj. -27960.5 iterations 3
Cbc0038I Pass   3: suminf.    6.16649 (37) obj. -24957.9 iterations 11
Cbc0038I Pass   4: suminf.    2.95320 (22) obj. -22032.2 iterations 15
Cbc0038I Pass   5: suminf.    0.71930 (9) obj. -19372.3 iterations 13
Cbc0038I Solution found of -16019.4
Cbc0038I Rounding solution of -16312.4 is better than previous of -16019.4

Cbc0038I Before mini branch and bound, 98 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -17914
Cbc0038I Pass   6: suminf.    8.85541 (48) obj. -27960.5 iterations 0
Cbc0038I Pass   7: suminf.    8.85541 (48) obj. -27960.5 iterations 1
Cbc0038I Pass   8: suminf.    2.38122 (19) obj. -21566.6 iterations 29
Cbc0038I Pass   9: suminf.    1.07939 (17) obj. -17914 iterations 32
Cbc0038I Pass  10: suminf.    0.70090 (4) obj. -17914 iterations 29
Cbc0038I Pass  11: suminf.    0.70090 (4) obj. -17914 iterations 1
Cbc0038I Pass  12: suminf.    0.88247 (4) obj. -17914 iterations 11
Cbc0038I Pass  13: suminf.    0.88247 (4) obj. -17914 iterations 7
Cbc0038I Pass  14: suminf.    0.70090 (4) obj. -17914 iterations 13
Cbc0038I Pass  15: suminf.    5.75581 (34) obj. -19122.9 iterations 66
Cbc0038I Pass  16: suminf.    5.38856 (29) obj. -18750.3 iterations 12
Cbc0038I Pass  17: suminf.    2.22725 (12) obj. -17914 iterations 29
Cbc0038I Pass  18: suminf.    1.68557 (10) obj. -17914 iterations 12
Cbc0038I Pass  19: suminf.    1.37740 (12) obj. -17914 iterations 18
Cbc0038I Pass  20: suminf.    1.21271 (7) obj. -17914 iterations 22
Cbc0038I Pass  21: suminf.    1.19939 (6) obj. -17914 iterations 2
Cbc0038I Pass  22: suminf.    1.01942 (5) obj. -17914 iterations 21
Cbc0038I Pass  23: suminf.    1.01942 (5) obj. -17914 iterations 1
Cbc0038I Pass  24: suminf.    1.32173 (5) obj. -17914 iterations 9
Cbc0038I Pass  25: suminf.    1.32173 (5) obj. -17914 iterations 9
Cbc0038I Pass  26: suminf.    1.23453 (5) obj. -17914 iterations 12
Cbc0038I Pass  27: suminf.    1.23453 (5) obj. -17914 iterations 6
Cbc0038I Pass  28: suminf.    2.74332 (14) obj. -17914 iterations 41
Cbc0038I Pass  29: suminf.    2.42828 (14) obj. -17914 iterations 14
Cbc0038I Pass  30: suminf.    1.05737 (8) obj. -17914 iterations 24
Cbc0038I Pass  31: suminf.    1.02048 (15) obj. -17914 iterations 2
Cbc0038I Pass  32: suminf.    4.24334 (15) obj. -17914 iterations 23
Cbc0038I Pass  33: suminf.    4.24334 (15) obj. -17914 iterations 3
Cbc0038I Pass  34: suminf.    0.78330 (4) obj. -17914 iterations 27
Cbc0038I Pass  35: suminf.    0.48000 (3) obj. -18061.3 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 173 columns, reduced to 100 rows 104 columns - 18 fixed gives 74, 81 - ok now
Cbc0038I Full problem 169 rows 173 columns, reduced to 43 rows 50 columns
Cbc0038I Mini branch and bound improved solution from -16019.4 to -18047.9 (0.08 seconds)
Cbc0038I Round again with cutoff of -20903.8
Cbc0038I Pass  35: suminf.    8.85541 (48) obj. -27960.5 iterations 0
Cbc0038I Pass  36: suminf.    8.85541 (48) obj. -27960.5 iterations 1
Cbc0038I Pass  37: suminf.    5.47080 (34) obj. -24228.3 iterations 14
Cbc0038I Pass  38: suminf.    2.95320 (22) obj. -22032.2 iterations 12
Cbc0038I Pass  39: suminf.    1.89663 (17) obj. -20903.8 iterations 39
Cbc0038I Pass  40: suminf.    1.72870 (19) obj. -20903.8 iterations 3
Cbc0038I Pass  41: suminf.    1.91055 (9) obj. -20903.8 iterations 28
Cbc0038I Pass  42: suminf.    1.54792 (10) obj. -20925.9 iterations 11
Cbc0038I Pass  43: suminf.    1.79710 (9) obj. -20903.8 iterations 9
Cbc0038I Pass  44: suminf.    1.67116 (9) obj. -20998.3 iterations 5
Cbc0038I Pass  45: suminf.    5.10713 (30) obj. -20903.8 iterations 29
Cbc0038I Pass  46: suminf.    4.47826 (23) obj. -20903.8 iterations 9
Cbc0038I Pass  47: suminf.    4.06620 (21) obj. -20903.8 iterations 9
Cbc0038I Pass  48: suminf.    2.45680 (11) obj. -20903.8 iterations 23
Cbc0038I Pass  49: suminf.    2.36246 (11) obj. -20903.8 iterations 13
Cbc0038I Pass  50: suminf.    1.70157 (9) obj. -20903.8 iterations 21
Cbc0038I Pass  51: suminf.    1.60857 (10) obj. -20921.9 iterations 11
Cbc0038I Pass  52: suminf.    1.79439 (11) obj. -20903.8 iterations 7
Cbc0038I Pass  53: suminf.    1.78828 (11) obj. -20903.8 iterations 5
Cbc0038I Pass  54: suminf.    1.85157 (9) obj. -20903.8 iterations 9
Cbc0038I Pass  55: suminf.    4.62528 (20) obj. -20903.8 iterations 34
Cbc0038I Pass  56: suminf.    3.66555 (19) obj. -20903.8 iterations 16
Cbc0038I Pass  57: suminf.    3.59607 (20) obj. -20903.8 iterations 10
Cbc0038I Pass  58: suminf.    2.52301 (12) obj. -20903.8 iterations 24
Cbc0038I Pass  59: suminf.    1.95069 (12) obj. -20903.8 iterations 19
Cbc0038I Pass  60: suminf.    1.86978 (11) obj. -20903.8 iterations 19
Cbc0038I Pass  61: suminf.    1.86933 (12) obj. -20903.8 iterations 9
Cbc0038I Pass  62: suminf.    2.15269 (10) obj. -20903.8 iterations 16
Cbc0038I Pass  63: suminf.    1.95779 (12) obj. -20903.8 iterations 5
Cbc0038I Pass  64: suminf.    2.15269 (10) obj. -20903.8 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 173 columns, reduced to 67 rows 72 columns
Cbc0038I Mini branch and bound improved solution from -18047.9 to -18277.6 (0.12 seconds)
Cbc0038I Round again with cutoff of -24331
Cbc0038I Pass  64: suminf.    8.85541 (48) obj. -27960.5 iterations 0
Cbc0038I Pass  65: suminf.    8.85541 (48) obj. -27960.5 iterations 1
Cbc0038I Pass  66: suminf.    3.80729 (25) obj. -24331 iterations 37
Cbc0038I Pass  67: suminf.    3.59941 (25) obj. -24523.2 iterations 4
Cbc0038I Pass  68: suminf.    3.09854 (24) obj. -24331 iterations 36
Cbc0038I Pass  69: suminf.    2.86466 (23) obj. -24331 iterations 7
Cbc0038I Pass  70: suminf.    2.95978 (14) obj. -24331 iterations 25
Cbc0038I Pass  71: suminf.    2.81348 (16) obj. -24331 iterations 4
Cbc0038I Pass  72: suminf.    2.95978 (14) obj. -24331 iterations 11
Cbc0038I Pass  73: suminf.    4.53740 (24) obj. -24331 iterations 36
Cbc0038I Pass  74: suminf.    4.25667 (23) obj. -24331 iterations 16
Cbc0038I Pass  75: suminf.    3.81354 (23) obj. -24331 iterations 8
Cbc0038I Pass  76: suminf.    3.01776 (18) obj. -24331 iterations 17
Cbc0038I Pass  77: suminf.    3.01776 (18) obj. -24331 iterations 1
Cbc0038I Pass  78: suminf.    2.46568 (14) obj. -24331 iterations 14
Cbc0038I Pass  79: suminf.    2.46568 (14) obj. -24331 iterations 2
Cbc0038I Pass  80: suminf.    2.46971 (14) obj. -24331 iterations 5
Cbc0038I Pass  81: suminf.    2.46971 (14) obj. -24331 iterations 3
Cbc0038I Pass  82: suminf.    2.46568 (14) obj. -24331 iterations 5
Cbc0038I Pass  83: suminf.    5.95131 (29) obj. -24331 iterations 36
Cbc0038I Pass  84: suminf.    5.10299 (23) obj. -24331 iterations 21
Cbc0038I Pass  85: suminf.    4.62029 (23) obj. -24619.5 iterations 11
Cbc0038I Pass  86: suminf.    4.15569 (22) obj. -24420.6 iterations 2
Cbc0038I Pass  87: suminf.    3.29863 (17) obj. -24331 iterations 27
Cbc0038I Pass  88: suminf.    3.29863 (17) obj. -24331 iterations 4
Cbc0038I Pass  89: suminf.    3.24578 (17) obj. -24331 iterations 18
Cbc0038I Pass  90: suminf.    3.24578 (17) obj. -24331 iterations 0
Cbc0038I Pass  91: suminf.    3.32143 (17) obj. -24331 iterations 12
Cbc0038I Pass  92: suminf.    3.32143 (17) obj. -24331 iterations 11
Cbc0038I Pass  93: suminf.    3.24578 (17) obj. -24331 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 169 rows 173 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -18277.6 - took 0.12 seconds
Cbc0012I Integer solution of -18277.64 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 169 rows 173 columns, reduced to 38 rows 42 columns
Cbc0031I 68 added rows had average density of 50.691176
Cbc0013I At root node, 68 cuts changed objective from -32327.534 to -21232.809 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 21296 row cuts average 2.0 elements, 0 column cuts (29 active)  in 0.220 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1778 row cuts average 151.2 elements, 0 column cuts (0 active)  in 0.278 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1592 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.233 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1153 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 435 row cuts average 90.9 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 85 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.275 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -18277.64 best solution, best possible -21232.809 (2.74 seconds)
Cbc0010I After 4 nodes, 5 on tree, -18277.64 best solution, best possible -21232.809 (3.53 seconds)
Cbc0012I Integer solution of -18465.105 found by DiveCoefficient after 5713 iterations and 6 nodes (3.70 seconds)
Cbc0012I Integer solution of -18896.616 found by DiveCoefficient after 5814 iterations and 8 nodes (3.76 seconds)
Cbc0012I Integer solution of -19090.593 found by rounding after 6431 iterations and 39 nodes (4.00 seconds)
Cbc0038I Full problem 169 rows 173 columns, reduced to 14 rows 19 columns
Cbc0012I Integer solution of -19727.827 found by RINS after 6440 iterations and 41 nodes (4.02 seconds)
Cbc0012I Integer solution of -19733.474 found by rounding after 6651 iterations and 61 nodes (4.07 seconds)
Cbc0038I Full problem 169 rows 173 columns, reduced to 1 rows 5 columns
Cbc0010I After 129 nodes, 2 on tree, -19733.474 best solution, best possible -21232.809 (4.44 seconds)
Cbc0001I Search completed - best objective -19733.47427, took 8698 iterations and 134 nodes (4.67 seconds)
Cbc0032I Strong branching done 970 times (19773 iterations), fathomed 19 nodes and fixed 7 variables
Cbc0035I Maximum depth 34, 273 variables fixed on reduced cost
Total time (CPU seconds):       4.33   (Wallclock seconds):       4.71

