Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 101 (-2) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 2.22969e-05 - average 1.21841e-07, 10 fixed columns
Coin0506I Presolve 161 (-22) rows, 90 (-11) columns and 494 (-66) elements
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.2334355 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Coin0511I After Postsolve, objective 36.15831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Coin0511I After Postsolve, objective 36.15831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.15831029 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 101 columns (100 integer (100 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 12.4124
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.7784 iterations 73
Cbc0038I Solution found of 0.7784
Cbc0038I Relaxing continuous gives 0.7784
Cbc0038I Rounding solution of -0.108347 is better than previous of 0.7784

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -0.108347 to -10.9859 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.5032
Cbc0038I Pass   2: suminf.    2.09354 (11) obj. -13.5032 iterations 10
Cbc0038I Pass   3: suminf.    2.75495 (9) obj. -13.5032 iterations 7
Cbc0038I Pass   4: suminf.    2.32482 (7) obj. -13.5032 iterations 5
Cbc0038I Pass   5: suminf.    1.97756 (7) obj. -13.5032 iterations 1
Cbc0038I Pass   6: suminf.    1.92219 (7) obj. -13.5032 iterations 1
Cbc0038I Pass   7: suminf.    2.37750 (7) obj. -13.5032 iterations 7
Cbc0038I Pass   8: suminf.    2.35033 (8) obj. -13.5032 iterations 3
Cbc0038I Pass   9: suminf.    3.28055 (8) obj. -13.5032 iterations 6
Cbc0038I Pass  10: suminf.    2.80660 (8) obj. -13.5032 iterations 2
Cbc0038I Pass  11: suminf.    2.48925 (9) obj. -13.5032 iterations 5
Cbc0038I Pass  12: suminf.    3.36192 (9) obj. -13.5032 iterations 7
Cbc0038I Pass  13: suminf.    2.23681 (8) obj. -13.5032 iterations 5
Cbc0038I Pass  14: suminf.    2.75497 (11) obj. -13.5032 iterations 18
Cbc0038I Pass  15: suminf.    2.65193 (10) obj. -13.5032 iterations 11
Cbc0038I Pass  16: suminf.    2.30535 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  17: suminf.    2.93746 (9) obj. -13.5032 iterations 9
Cbc0038I Pass  18: suminf.    3.61092 (10) obj. -13.5032 iterations 9
Cbc0038I Pass  19: suminf.    5.01567 (15) obj. -13.5032 iterations 25
Cbc0038I Pass  20: suminf.    3.65195 (13) obj. -13.5032 iterations 18
Cbc0038I Pass  21: suminf.    3.44509 (10) obj. -13.5032 iterations 35
Cbc0038I Pass  22: suminf.    3.44509 (10) obj. -13.5032 iterations 5
Cbc0038I Pass  23: suminf.    1.61727 (7) obj. -13.5032 iterations 18
Cbc0038I Pass  24: suminf.    1.20850 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  25: suminf.    2.23060 (6) obj. -13.5032 iterations 8
Cbc0038I Pass  26: suminf.    2.23060 (6) obj. -13.5032 iterations 0
Cbc0038I Pass  27: suminf.    2.15205 (6) obj. -13.5032 iterations 2
Cbc0038I Pass  28: suminf.    1.61727 (7) obj. -13.5032 iterations 3
Cbc0038I Pass  29: suminf.    1.20850 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  30: suminf.    2.23060 (6) obj. -13.5032 iterations 8
Cbc0038I Pass  31: suminf.    2.23060 (6) obj. -13.5032 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -10.9859 to -11.0713 (0.14 seconds)
Cbc0038I Round again with cutoff of -18.0343
Cbc0038I Pass  31: suminf.    3.00243 (11) obj. -18.0343 iterations 5
Cbc0038I Pass  32: suminf.    3.72280 (10) obj. -18.0343 iterations 13
Cbc0038I Pass  33: suminf.    2.70671 (8) obj. -18.0343 iterations 10
Cbc0038I Pass  34: suminf.    2.68470 (7) obj. -18.0343 iterations 6
Cbc0038I Pass  35: suminf.    2.90123 (8) obj. -18.0343 iterations 7
Cbc0038I Pass  36: suminf.    2.77271 (8) obj. -18.0343 iterations 2
Cbc0038I Pass  37: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  38: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  39: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  40: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  41: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  42: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  43: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  44: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  45: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  46: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  47: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  48: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  49: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  50: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  51: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  52: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  53: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  54: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  55: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  56: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  57: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  58: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  59: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  60: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -11.0713 - took 0.16 seconds
Cbc0012I Integer solution of -11.071265 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0031I 38 added rows had average density of 68.236842
Cbc0013I At root node, 38 cuts changed objective from -36.15831 to -27.401551 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20277 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2079 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.159 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.071265 best solution, best possible -27.401551 (1.81 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 88 rows 53 columns
Cbc0001I Search completed - best objective -11.071265, took 13412 iterations and 80 nodes (2.30 seconds)
Cbc0032I Strong branching done 988 times (23596 iterations), fathomed 11 nodes and fixed 37 variables
Cbc0035I Maximum depth 22, 174 variables fixed on reduced cost
Total time (CPU seconds):       2.20   (Wallclock seconds):       2.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-72) rows, 149 (-53) columns and 2794 (-2859) elements
Clp1000I sum of infeasibilities 5.49709e-08 - average 4.16446e-10, 11 fixed columns
Coin0506I Presolve 121 (-11) rows, 138 (-11) columns and 2437 (-357) elements
Clp0006I 0  Obj 37.738449 Dual inf 6.6780979 (138)
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 1.8919734 - largest nonzero change 2.1602339e-05 ( 0.0015380202%) - largest zero change 2.7814203e-05
Clp0000I Optimal - objective value 49.698804
Clp0000I Optimal - objective value 49.698804
Coin0511I After Postsolve, objective 49.698804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.698804
Clp0000I Optimal - objective value 49.698804
Clp0000I Optimal - objective value 49.698804
Clp0000I Optimal - objective value 49.698804
Coin0511I After Postsolve, objective 49.698804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.69880412 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 149 columns (149 integer (149 of which binary)) and 2797 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.870%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.35394
Cbc0038I Pass   1: suminf.    3.31769 (37) obj. -37.5657 iterations 15
Cbc0038I Pass   2: suminf.    0.54664 (15) obj. -13.5929 iterations 21
Cbc0038I Pass   3: suminf.    0.02500 (1) obj. 0.833775 iterations 14
Cbc0038I Solution found of 1.80878
Cbc0038I Rounding solution of -0.958055 is better than previous of 1.80878

Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 149 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -4.89028
Cbc0038I Pass   4: suminf.    3.31769 (37) obj. -37.5657 iterations 0
Cbc0038I Pass   5: suminf.    1.33672 (25) obj. -22.8028 iterations 12
Cbc0038I Pass   6: suminf.    1.31760 (6) obj. -4.89028 iterations 35
Cbc0038I Pass   7: suminf.    0.93777 (6) obj. -4.89028 iterations 1
Cbc0038I Pass   8: suminf.    1.31760 (6) obj. -4.89028 iterations 8
Cbc0038I Pass   9: suminf.    1.62216 (17) obj. -9.90349 iterations 47
Cbc0038I Pass  10: suminf.    1.62216 (17) obj. -9.90349 iterations 7
Cbc0038I Pass  11: suminf.    1.35586 (7) obj. -4.89028 iterations 23
Cbc0038I Pass  12: suminf.    1.25850 (7) obj. -4.89028 iterations 4
Cbc0038I Pass  13: suminf.    2.29549 (10) obj. -4.89028 iterations 21
Cbc0038I Pass  14: suminf.    2.29549 (10) obj. -4.89028 iterations 0
Cbc0038I Pass  15: suminf.    3.25601 (10) obj. -4.89028 iterations 10
Cbc0038I Pass  16: suminf.    1.01652 (7) obj. -4.89028 iterations 4
Cbc0038I Pass  17: suminf.    1.01652 (7) obj. -4.89028 iterations 0
Cbc0038I Pass  18: suminf.    1.58250 (7) obj. -4.89028 iterations 7
Cbc0038I Pass  19: suminf.    1.58250 (7) obj. -4.89028 iterations 0
Cbc0038I Pass  20: suminf.    0.92035 (5) obj. -4.89028 iterations 14
Cbc0038I Pass  21: suminf.    0.74657 (5) obj. -4.89028 iterations 3
Cbc0038I Pass  22: suminf.    1.46973 (6) obj. -4.89028 iterations 15
Cbc0038I Pass  23: suminf.    1.46973 (6) obj. -4.89028 iterations 0
Cbc0038I Pass  24: suminf.    0.92515 (6) obj. -4.89028 iterations 14
Cbc0038I Pass  25: suminf.    0.90671 (5) obj. -4.89028 iterations 3
Cbc0038I Pass  26: suminf.    1.41626 (8) obj. -4.89028 iterations 9
Cbc0038I Pass  27: suminf.    0.74657 (5) obj. -4.89028 iterations 6
Cbc0038I Pass  28: suminf.    1.46973 (6) obj. -4.89028 iterations 15
Cbc0038I Pass  29: suminf.    1.46973 (6) obj. -4.89028 iterations 0
Cbc0038I Pass  30: suminf.    0.92515 (6) obj. -4.89028 iterations 14
Cbc0038I Pass  31: suminf.    0.90671 (5) obj. -4.89028 iterations 3
Cbc0038I Pass  32: suminf.    1.41626 (8) obj. -4.89028 iterations 9
Cbc0038I Pass  33: suminf.    0.74657 (5) obj. -4.89028 iterations 6
Cbc0038I Rounding solution of -1.41305 is better than previous of -0.958055

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 149 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -1.41305 to -7.75906 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.2632
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.31769 (37) obj. -37.5657 iterations 0
Cbc0038I Pass  34: suminf.    1.12047 (23) obj. -21.019 iterations 15
Cbc0038I Pass  35: suminf.    1.21265 (17) obj. -14.2632 iterations 14
Cbc0038I Pass  36: suminf.    2.64237 (15) obj. -14.2632 iterations 25
Cbc0038I Pass  37: suminf.    1.61413 (12) obj. -14.2632 iterations 3
Cbc0038I Pass  38: suminf.    1.59060 (12) obj. -14.2632 iterations 5
Cbc0038I Pass  39: suminf.    2.64237 (15) obj. -14.2632 iterations 16
Cbc0038I Pass  40: suminf.    1.75957 (13) obj. -14.2632 iterations 10
Cbc0038I Pass  41: suminf.    1.75957 (13) obj. -14.2632 iterations 0
Cbc0038I Pass  42: suminf.    2.64237 (15) obj. -14.2632 iterations 17
Cbc0038I Pass  43: suminf.    1.64080 (12) obj. -14.2632 iterations 9
Cbc0038I Pass  44: suminf.    1.63281 (13) obj. -14.2632 iterations 5
Cbc0038I Pass  45: suminf.    2.64237 (15) obj. -14.2632 iterations 12
Cbc0038I Pass  46: suminf.    1.75957 (13) obj. -14.2632 iterations 9
Cbc0038I Pass  47: suminf.    1.75957 (13) obj. -14.2632 iterations 0
Cbc0038I Pass  48: suminf.    2.64237 (15) obj. -14.2632 iterations 15
Cbc0038I Pass  49: suminf.    1.64080 (12) obj. -14.2632 iterations 9
Cbc0038I Pass  50: suminf.    1.63281 (13) obj. -14.2632 iterations 5
Cbc0038I Pass  51: suminf.    2.64237 (15) obj. -14.2632 iterations 12
Cbc0038I Pass  52: suminf.    1.75957 (13) obj. -14.2632 iterations 9
Cbc0038I Pass  53: suminf.    1.75957 (13) obj. -14.2632 iterations 0
Cbc0038I Pass  54: suminf.    2.64237 (15) obj. -14.2632 iterations 15
Cbc0038I Pass  55: suminf.    1.64080 (12) obj. -14.2632 iterations 9
Cbc0038I Pass  56: suminf.    1.63281 (13) obj. -14.2632 iterations 5
Cbc0038I Pass  57: suminf.    2.64237 (15) obj. -14.2632 iterations 12
Cbc0038I Pass  58: suminf.    1.75957 (13) obj. -14.2632 iterations 9
Cbc0038I Pass  59: suminf.    1.75957 (13) obj. -14.2632 iterations 0
Cbc0038I Pass  60: suminf.    2.64237 (15) obj. -14.2632 iterations 15
Cbc0038I Pass  61: suminf.    1.64080 (12) obj. -14.2632 iterations 8
Cbc0038I Pass  62: suminf.    1.63281 (13) obj. -14.2632 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -7.75906 - took 0.10 seconds
Cbc0012I Integer solution of -7.759065 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 132 rows 149 columns, reduced to 18 rows 21 columns
Cbc0031I 60 added rows had average density of 33.416667
Cbc0013I At root node, 60 cuts changed objective from -40.279376 to -16.07179 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12466 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.182 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1476 row cuts average 139.0 elements, 0 column cuts (0 active)  in 0.188 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 851 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1597 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 361 row cuts average 81.6 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 96 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.469 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.759065 best solution, best possible -16.07179 (2.69 seconds)
Cbc0012I Integer solution of -8.511594 found by DiveCoefficient after 6211 iterations and 17 nodes (3.36 seconds)
Cbc0010I After 22 nodes, 11 on tree, -8.511594 best solution, best possible -16.07179 (3.40 seconds)
Cbc0012I Integer solution of -8.560501 found by rounding after 6546 iterations and 29 nodes (3.41 seconds)
Cbc0012I Integer solution of -8.976571 found by rounding after 6575 iterations and 32 nodes (3.43 seconds)
Cbc0012I Integer solution of -9.253665 found by rounding after 6585 iterations and 35 nodes (3.43 seconds)
Cbc0012I Integer solution of -9.293461 found by rounding after 6597 iterations and 37 nodes (3.43 seconds)
Cbc0038I Full problem 132 rows 149 columns, reduced to 3 rows 5 columns
Cbc0012I Integer solution of -9.293651 found by rounding after 6667 iterations and 43 nodes (3.46 seconds)
Cbc0012I Integer solution of -9.485209 found by rounding after 6900 iterations and 64 nodes (3.50 seconds)
Cbc0012I Integer solution of -10.225662 found by rounding after 6980 iterations and 72 nodes (3.51 seconds)
Cbc0012I Integer solution of -10.429208 found by rounding after 7132 iterations and 80 nodes (3.56 seconds)
Cbc0012I Integer solution of -10.591341 found by rounding after 7176 iterations and 83 nodes (3.57 seconds)
Cbc0012I Integer solution of -10.649402 found by rounding after 7224 iterations and 88 nodes (3.58 seconds)
Cbc0016I Integer solution of -10.783019 found by strong branching after 7362 iterations and 91 nodes (3.59 seconds)
Cbc0038I Full problem 132 rows 149 columns, reduced to 2 rows 5 columns
Cbc0012I Integer solution of -10.937648 found by rounding after 7733 iterations and 111 nodes (3.66 seconds)
Cbc0012I Integer solution of -11.071265 found by rounding after 7782 iterations and 114 nodes (3.67 seconds)
Cbc0001I Search completed - best objective -11.071265, took 8559 iterations and 131 nodes (3.71 seconds)
Cbc0032I Strong branching done 1022 times (16091 iterations), fathomed 19 nodes and fixed 27 variables
Cbc0035I Maximum depth 22, 269 variables fixed on reduced cost
Total time (CPU seconds):       2.97   (Wallclock seconds):       3.73

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 101 (-2) columns and 560 (-43) elements
Clp1000I sum of infeasibilities 2.22969e-05 - average 1.21841e-07, 10 fixed columns
Coin0506I Presolve 161 (-22) rows, 90 (-11) columns and 494 (-66) elements
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.2334355 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Coin0511I After Postsolve, objective 36.15831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Clp0000I Optimal - objective value 36.15831
Coin0511I After Postsolve, objective 36.15831, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.15831029 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 101 columns (100 integer (100 of which binary)) and 560 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.883%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 58 integers unsatisfied sum - 12.4124
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0.7784 iterations 73
Cbc0038I Solution found of 0.7784
Cbc0038I Relaxing continuous gives 0.7784
Cbc0038I Rounding solution of -0.108347 is better than previous of 0.7784

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -0.108347 to -10.9859 (0.06 seconds)
Cbc0038I Round again with cutoff of -13.5032
Cbc0038I Pass   2: suminf.    2.09354 (11) obj. -13.5032 iterations 10
Cbc0038I Pass   3: suminf.    2.75495 (9) obj. -13.5032 iterations 7
Cbc0038I Pass   4: suminf.    2.32482 (7) obj. -13.5032 iterations 5
Cbc0038I Pass   5: suminf.    1.97756 (7) obj. -13.5032 iterations 1
Cbc0038I Pass   6: suminf.    1.92219 (7) obj. -13.5032 iterations 1
Cbc0038I Pass   7: suminf.    2.37750 (7) obj. -13.5032 iterations 7
Cbc0038I Pass   8: suminf.    2.35033 (8) obj. -13.5032 iterations 3
Cbc0038I Pass   9: suminf.    3.28055 (8) obj. -13.5032 iterations 6
Cbc0038I Pass  10: suminf.    2.80660 (8) obj. -13.5032 iterations 2
Cbc0038I Pass  11: suminf.    2.48925 (9) obj. -13.5032 iterations 5
Cbc0038I Pass  12: suminf.    3.36192 (9) obj. -13.5032 iterations 7
Cbc0038I Pass  13: suminf.    2.23681 (8) obj. -13.5032 iterations 5
Cbc0038I Pass  14: suminf.    2.75497 (11) obj. -13.5032 iterations 18
Cbc0038I Pass  15: suminf.    2.65193 (10) obj. -13.5032 iterations 11
Cbc0038I Pass  16: suminf.    2.30535 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  17: suminf.    2.93746 (9) obj. -13.5032 iterations 9
Cbc0038I Pass  18: suminf.    3.61092 (10) obj. -13.5032 iterations 9
Cbc0038I Pass  19: suminf.    5.01567 (15) obj. -13.5032 iterations 25
Cbc0038I Pass  20: suminf.    3.65195 (13) obj. -13.5032 iterations 18
Cbc0038I Pass  21: suminf.    3.44509 (10) obj. -13.5032 iterations 35
Cbc0038I Pass  22: suminf.    3.44509 (10) obj. -13.5032 iterations 5
Cbc0038I Pass  23: suminf.    1.61727 (7) obj. -13.5032 iterations 18
Cbc0038I Pass  24: suminf.    1.20850 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  25: suminf.    2.23060 (6) obj. -13.5032 iterations 8
Cbc0038I Pass  26: suminf.    2.23060 (6) obj. -13.5032 iterations 0
Cbc0038I Pass  27: suminf.    2.15205 (6) obj. -13.5032 iterations 2
Cbc0038I Pass  28: suminf.    1.61727 (7) obj. -13.5032 iterations 3
Cbc0038I Pass  29: suminf.    1.20850 (7) obj. -13.5032 iterations 2
Cbc0038I Pass  30: suminf.    2.23060 (6) obj. -13.5032 iterations 8
Cbc0038I Pass  31: suminf.    2.23060 (6) obj. -13.5032 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 112 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -10.9859 to -11.0713 (0.14 seconds)
Cbc0038I Round again with cutoff of -18.0343
Cbc0038I Pass  31: suminf.    3.00243 (11) obj. -18.0343 iterations 5
Cbc0038I Pass  32: suminf.    3.72280 (10) obj. -18.0343 iterations 13
Cbc0038I Pass  33: suminf.    2.70671 (8) obj. -18.0343 iterations 10
Cbc0038I Pass  34: suminf.    2.68470 (7) obj. -18.0343 iterations 6
Cbc0038I Pass  35: suminf.    2.90123 (8) obj. -18.0343 iterations 7
Cbc0038I Pass  36: suminf.    2.77271 (8) obj. -18.0343 iterations 2
Cbc0038I Pass  37: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  38: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  39: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  40: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  41: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  42: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  43: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  44: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  45: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  46: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  47: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  48: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  49: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  50: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  51: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  52: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  53: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  54: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  55: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  56: suminf.    2.77271 (8) obj. -18.0343 iterations 5
Cbc0038I Pass  57: suminf.    3.23292 (9) obj. -18.0343 iterations 22
Cbc0038I Pass  58: suminf.    3.18705 (9) obj. -18.0343 iterations 5
Cbc0038I Pass  59: suminf.    3.90695 (10) obj. -18.0343 iterations 7
Cbc0038I Pass  60: suminf.    2.89580 (10) obj. -18.0343 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -11.0713 - took 0.16 seconds
Cbc0012I Integer solution of -11.071265 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 102 rows 59 columns
Cbc0031I 38 added rows had average density of 68.236842
Cbc0013I At root node, 38 cuts changed objective from -36.15831 to -27.401551 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 20277 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2079 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 100.8 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.071265 best solution, best possible -27.401551 (1.77 seconds)
Cbc0038I Full problem 183 rows 101 columns, reduced to 88 rows 53 columns
Cbc0001I Search completed - best objective -11.071265, took 13412 iterations and 80 nodes (2.25 seconds)
Cbc0032I Strong branching done 988 times (23596 iterations), fathomed 11 nodes and fixed 37 variables
Cbc0035I Maximum depth 22, 174 variables fixed on reduced cost
Total time (CPU seconds):       2.17   (Wallclock seconds):       2.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-73) rows, 149 (-54) columns and 2794 (-2860) elements
Clp1000I sum of infeasibilities 5.49709e-08 - average 4.16446e-10, 11 fixed columns
Coin0506I Presolve 121 (-11) rows, 138 (-11) columns and 2437 (-357) elements
Clp0006I 0  Obj 37.738449 Dual inf 6.6780979 (138)
Clp0029I End of values pass after 138 iterations
Clp0014I Perturbing problem by 0.001% of 1.8919734 - largest nonzero change 2.1602339e-05 ( 0.0015380202%) - largest zero change 2.7814203e-05
Clp0000I Optimal - objective value 49.698804
Clp0000I Optimal - objective value 49.698804
Coin0511I After Postsolve, objective 49.698804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.698804
Clp0000I Optimal - objective value 49.698804
Clp0000I Optimal - objective value 49.698804
Clp0000I Optimal - objective value 49.698804
Coin0511I After Postsolve, objective 49.698804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.69880412 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 149 columns (149 integer (149 of which binary)) and 2797 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.870%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 5.35394
Cbc0038I Pass   1: suminf.    3.31769 (37) obj. -37.5657 iterations 15
Cbc0038I Pass   2: suminf.    0.54664 (15) obj. -13.5929 iterations 21
Cbc0038I Pass   3: suminf.    0.02500 (1) obj. 0.833775 iterations 14
Cbc0038I Solution found of 1.80878
Cbc0038I Rounding solution of -0.958055 is better than previous of 1.80878

Cbc0038I Before mini branch and bound, 105 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 149 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -4.89028
Cbc0038I Pass   4: suminf.    3.31769 (37) obj. -37.5657 iterations 0
Cbc0038I Pass   5: suminf.    1.33672 (25) obj. -22.8028 iterations 12
Cbc0038I Pass   6: suminf.    1.31760 (6) obj. -4.89028 iterations 35
Cbc0038I Pass   7: suminf.    0.93777 (6) obj. -4.89028 iterations 1
Cbc0038I Pass   8: suminf.    1.31760 (6) obj. -4.89028 iterations 8
Cbc0038I Pass   9: suminf.    1.62216 (17) obj. -9.90349 iterations 47
Cbc0038I Pass  10: suminf.    1.62216 (17) obj. -9.90349 iterations 7
Cbc0038I Pass  11: suminf.    1.35586 (7) obj. -4.89028 iterations 23
Cbc0038I Pass  12: suminf.    1.25850 (7) obj. -4.89028 iterations 4
Cbc0038I Pass  13: suminf.    2.29549 (10) obj. -4.89028 iterations 21
Cbc0038I Pass  14: suminf.    2.29549 (10) obj. -4.89028 iterations 0
Cbc0038I Pass  15: suminf.    3.25601 (10) obj. -4.89028 iterations 10
Cbc0038I Pass  16: suminf.    1.01652 (7) obj. -4.89028 iterations 4
Cbc0038I Pass  17: suminf.    1.01652 (7) obj. -4.89028 iterations 0
Cbc0038I Pass  18: suminf.    1.58250 (7) obj. -4.89028 iterations 7
Cbc0038I Pass  19: suminf.    1.58250 (7) obj. -4.89028 iterations 0
Cbc0038I Pass  20: suminf.    0.92035 (5) obj. -4.89028 iterations 14
Cbc0038I Pass  21: suminf.    0.74657 (5) obj. -4.89028 iterations 3
Cbc0038I Pass  22: suminf.    1.46973 (6) obj. -4.89028 iterations 15
Cbc0038I Pass  23: suminf.    1.46973 (6) obj. -4.89028 iterations 0
Cbc0038I Pass  24: suminf.    0.92515 (6) obj. -4.89028 iterations 14
Cbc0038I Pass  25: suminf.    0.90671 (5) obj. -4.89028 iterations 3
Cbc0038I Pass  26: suminf.    1.41626 (8) obj. -4.89028 iterations 9
Cbc0038I Pass  27: suminf.    0.74657 (5) obj. -4.89028 iterations 6
Cbc0038I Pass  28: suminf.    1.46973 (6) obj. -4.89028 iterations 15
Cbc0038I Pass  29: suminf.    1.46973 (6) obj. -4.89028 iterations 0
Cbc0038I Pass  30: suminf.    0.92515 (6) obj. -4.89028 iterations 14
Cbc0038I Pass  31: suminf.    0.90671 (5) obj. -4.89028 iterations 3
Cbc0038I Pass  32: suminf.    1.41626 (8) obj. -4.89028 iterations 9
Cbc0038I Pass  33: suminf.    0.74657 (5) obj. -4.89028 iterations 6
Cbc0038I Rounding solution of -1.41305 is better than previous of -0.958055

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 149 columns, reduced to 29 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -1.41305 to -7.75906 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.2632
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.31769 (37) obj. -37.5657 iterations 0
Cbc0038I Pass  34: suminf.    1.12047 (23) obj. -21.019 iterations 15
Cbc0038I Pass  35: suminf.    1.21265 (17) obj. -14.2632 iterations 14
Cbc0038I Pass  36: suminf.    2.64237 (15) obj. -14.2632 iterations 25
Cbc0038I Pass  37: suminf.    1.61413 (12) obj. -14.2632 iterations 3
Cbc0038I Pass  38: suminf.    1.59060 (12) obj. -14.2632 iterations 5
Cbc0038I Pass  39: suminf.    2.64237 (15) obj. -14.2632 iterations 16
Cbc0038I Pass  40: suminf.    1.75957 (13) obj. -14.2632 iterations 10
Cbc0038I Pass  41: suminf.    1.75957 (13) obj. -14.2632 iterations 0
Cbc0038I Pass  42: suminf.    2.64237 (15) obj. -14.2632 iterations 17
Cbc0038I Pass  43: suminf.    1.64080 (12) obj. -14.2632 iterations 9
Cbc0038I Pass  44: suminf.    1.63281 (13) obj. -14.2632 iterations 5
Cbc0038I Pass  45: suminf.    2.64237 (15) obj. -14.2632 iterations 12
Cbc0038I Pass  46: suminf.    1.75957 (13) obj. -14.2632 iterations 9
Cbc0038I Pass  47: suminf.    1.75957 (13) obj. -14.2632 iterations 0
Cbc0038I Pass  48: suminf.    2.64237 (15) obj. -14.2632 iterations 15
Cbc0038I Pass  49: suminf.    1.64080 (12) obj. -14.2632 iterations 9
Cbc0038I Pass  50: suminf.    1.63281 (13) obj. -14.2632 iterations 5
Cbc0038I Pass  51: suminf.    2.64237 (15) obj. -14.2632 iterations 12
Cbc0038I Pass  52: suminf.    1.75957 (13) obj. -14.2632 iterations 9
Cbc0038I Pass  53: suminf.    1.75957 (13) obj. -14.2632 iterations 0
Cbc0038I Pass  54: suminf.    2.64237 (15) obj. -14.2632 iterations 15
Cbc0038I Pass  55: suminf.    1.64080 (12) obj. -14.2632 iterations 9
Cbc0038I Pass  56: suminf.    1.63281 (13) obj. -14.2632 iterations 5
Cbc0038I Pass  57: suminf.    2.64237 (15) obj. -14.2632 iterations 12
Cbc0038I Pass  58: suminf.    1.75957 (13) obj. -14.2632 iterations 9
Cbc0038I Pass  59: suminf.    1.75957 (13) obj. -14.2632 iterations 0
Cbc0038I Pass  60: suminf.    2.64237 (15) obj. -14.2632 iterations 15
Cbc0038I Pass  61: suminf.    1.64080 (12) obj. -14.2632 iterations 8
Cbc0038I Pass  62: suminf.    1.63281 (13) obj. -14.2632 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -7.75906 - took 0.09 seconds
Cbc0012I Integer solution of -7.759065 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 132 rows 149 columns, reduced to 18 rows 21 columns
Cbc0031I 60 added rows had average density of 33.416667
Cbc0013I At root node, 60 cuts changed objective from -40.279376 to -16.07179 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12466 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.173 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1476 row cuts average 139.0 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 851 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.090 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1597 row cuts average 8.4 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 361 row cuts average 81.6 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 96 row cuts average 12.5 elements, 0 column cuts (0 active)  in 0.475 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.759065 best solution, best possible -16.07179 (2.56 seconds)
Cbc0010I After 15 nodes, 9 on tree, -7.759065 best solution, best possible -16.07179 (3.27 seconds)
Cbc0012I Integer solution of -8.511594 found by DiveCoefficient after 6211 iterations and 17 nodes (3.27 seconds)
Cbc0012I Integer solution of -8.560501 found by rounding after 6546 iterations and 29 nodes (3.33 seconds)
Cbc0012I Integer solution of -8.976571 found by rounding after 6575 iterations and 32 nodes (3.34 seconds)
Cbc0012I Integer solution of -9.253665 found by rounding after 6585 iterations and 35 nodes (3.35 seconds)
Cbc0012I Integer solution of -9.293461 found by rounding after 6597 iterations and 37 nodes (3.35 seconds)
Cbc0038I Full problem 132 rows 149 columns, reduced to 3 rows 5 columns
Cbc0012I Integer solution of -9.293651 found by rounding after 6667 iterations and 43 nodes (3.38 seconds)
Cbc0012I Integer solution of -9.485209 found by rounding after 6900 iterations and 64 nodes (3.42 seconds)
Cbc0012I Integer solution of -10.225662 found by rounding after 6980 iterations and 72 nodes (3.43 seconds)
Cbc0012I Integer solution of -10.429208 found by rounding after 7132 iterations and 80 nodes (3.48 seconds)
Cbc0012I Integer solution of -10.591341 found by rounding after 7176 iterations and 83 nodes (3.48 seconds)
Cbc0012I Integer solution of -10.649402 found by rounding after 7224 iterations and 88 nodes (3.49 seconds)
Cbc0016I Integer solution of -10.783019 found by strong branching after 7362 iterations and 91 nodes (3.51 seconds)
Cbc0038I Full problem 132 rows 149 columns, reduced to 2 rows 5 columns
Cbc0012I Integer solution of -10.937648 found by rounding after 7733 iterations and 111 nodes (3.58 seconds)
Cbc0012I Integer solution of -11.071265 found by rounding after 7782 iterations and 114 nodes (3.58 seconds)
Cbc0001I Search completed - best objective -11.071265, took 8559 iterations and 131 nodes (3.63 seconds)
Cbc0032I Strong branching done 1022 times (16091 iterations), fathomed 19 nodes and fixed 27 variables
Cbc0035I Maximum depth 22, 269 variables fixed on reduced cost
Total time (CPU seconds):       2.94   (Wallclock seconds):       3.65

