Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 71 (-7) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 6.02836e-05 - average 4.70965e-07, 19 fixed columns
Coin0506I Presolve 90 (-38) rows, 51 (-20) columns and 274 (-116) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 0.2639517 - largest nonzero change 0 ( 0%) - largest zero change 2.7410221e-05
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Coin0511I After Postsolve, objective 54.735199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22427318 - largest nonzero change 0 ( 0%) - largest zero change 2.8164545e-05
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Coin0511I After Postsolve, objective 54.735199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.73519864 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 71 columns (70 integer (70 of which binary)) and 417 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.862%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.06097
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.7465 iterations 46
Cbc0038I Solution found of -11.7465
Cbc0038I Relaxing continuous gives -11.7465
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -11.7465 to -27.3722 (0.03 seconds)
Cbc0038I Round again with cutoff of -30.0751
Cbc0038I Pass   2: suminf.    1.17174 (8) obj. -30.0751 iterations 13
Cbc0038I Pass   3: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass   4: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass   5: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass   6: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass   7: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass   8: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass   9: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  10: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass  11: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass  12: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  13: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass  14: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  15: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass  16: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  17: suminf.    1.34747 (5) obj. -30.0751 iterations 17
Cbc0038I Pass  18: suminf.    1.25958 (5) obj. -30.0751 iterations 4
Cbc0038I Pass  19: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  20: suminf.    0.48304 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  21: suminf.    0.31670 (2) obj. -30.0751 iterations 5
Cbc0038I Pass  22: suminf.    1.38530 (4) obj. -30.0751 iterations 4
Cbc0038I Pass  23: suminf.    1.17174 (8) obj. -30.0751 iterations 13
Cbc0038I Pass  24: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass  25: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass  26: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  27: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass  28: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  29: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass  30: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  31: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -27.3722 - took 0.03 seconds
Cbc0012I Integer solution of -27.3722 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0031I 25 added rows had average density of 44.76
Cbc0013I At root node, 25 cuts changed objective from -54.399928 to -46.778398 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5783 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1381 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 116 row cuts average 70.8 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0038I Full problem 121 rows 71 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -28.97205 found by RINS after 6422 iterations and 41 nodes (0.66 seconds)
Cbc0016I Integer solution of -29.24625 found by strong branching after 7089 iterations and 54 nodes (0.69 seconds)
Cbc0001I Search completed - best objective -29.24625, took 7093 iterations and 54 nodes (0.69 seconds)
Cbc0032I Strong branching done 620 times (11210 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 20, 161 variables fixed on reduced cost
Total time (CPU seconds):       0.67   (Wallclock seconds):       0.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-53) rows, 113 (-39) columns and 1724 (-1579) elements
Clp1000I sum of infeasibilities 2.91258e-07 - average 2.88374e-09, 66 fixed columns
Coin0506I Presolve 45 (-56) rows, 47 (-66) columns and 257 (-1467) elements
Clp0006I 0  Obj 144.41266 Dual inf 1.786751 (47)
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 10.437898 - largest nonzero change 0 ( 0%) - largest zero change 1.3900554e-05
Clp0000I Optimal - objective value 154.19229
Clp0000I Optimal - objective value 154.19229
Coin0511I After Postsolve, objective 154.19229, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 154.19229 Dual inf 8.4842502 (2)
Clp0014I Perturbing problem by 0.001% of 1.4077657 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 156.70809
Clp0000I Optimal - objective value 156.70809
Clp0000I Optimal - objective value 156.70809
Coin0511I After Postsolve, objective 156.70809, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 156.7080882 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 66 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 94 rows, 113 columns (113 integer (113 of which binary)) and 1760 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.468%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 12.4448
Cbc0038I Pass   1: suminf.    0.02837 (2) obj. -1.36677 iterations 16
Cbc0038I Pass   2: suminf.    0.02837 (2) obj. -1.36677 iterations 0
Cbc0038I Solution found of 4.54852
Cbc0038I Rounding solution of -19.7868 is better than previous of 4.54852

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 113 columns, reduced to 43 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -19.7868 to -79.4515 (0.04 seconds)
Cbc0038I Round again with cutoff of -84.7647
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.40775 (36) obj. -84.7647 iterations 1
Cbc0038I Pass   4: suminf.    2.93880 (37) obj. -84.7647 iterations 2
Cbc0038I Pass   5: suminf.    2.93880 (37) obj. -84.7647 iterations 1
Cbc0038I Pass   6: suminf.    1.14445 (24) obj. -112.758 iterations 14
Cbc0038I Pass   7: suminf.    0.50455 (14) obj. -100.64 iterations 10
Cbc0038I Pass   8: suminf.    0.10418 (1) obj. -84.7647 iterations 29
Cbc0038I Pass   9: suminf.    0.64194 (2) obj. -94.966 iterations 2
Cbc0038I Pass  10: suminf.    0.10418 (1) obj. -84.7647 iterations 2
Cbc0038I Pass  11: suminf.    2.55559 (12) obj. -84.7647 iterations 24
Cbc0038I Pass  12: suminf.    2.04645 (11) obj. -84.7647 iterations 7
Cbc0038I Pass  13: suminf.    4.02248 (22) obj. -84.7647 iterations 19
Cbc0038I Pass  14: suminf.    3.11053 (18) obj. -84.7647 iterations 9
Cbc0038I Pass  15: suminf.    1.09858 (4) obj. -84.7647 iterations 24
Cbc0038I Pass  16: suminf.    0.19882 (2) obj. -84.7647 iterations 2
Cbc0038I Pass  17: suminf.    0.10418 (1) obj. -84.7647 iterations 2
Cbc0038I Pass  18: suminf.    0.64194 (2) obj. -94.966 iterations 2
Cbc0038I Pass  19: suminf.    0.10418 (1) obj. -84.7647 iterations 2
Cbc0038I Pass  20: suminf.    1.87982 (15) obj. -84.7647 iterations 16
Cbc0038I Pass  21: suminf.    1.17329 (11) obj. -84.7647 iterations 3
Cbc0038I Pass  22: suminf.    2.26943 (21) obj. -84.7647 iterations 18
Cbc0038I Pass  23: suminf.    2.12306 (17) obj. -84.7647 iterations 9
Cbc0038I Pass  24: suminf.    0.77861 (7) obj. -84.7647 iterations 15
Cbc0038I Pass  25: suminf.    0.77861 (7) obj. -84.7647 iterations 0
Cbc0038I Pass  26: suminf.    0.10418 (1) obj. -84.7647 iterations 11
Cbc0038I Pass  27: suminf.    0.10418 (1) obj. -84.7647 iterations 0
Cbc0038I Pass  28: suminf.    0.64194 (2) obj. -94.966 iterations 2
Cbc0038I Pass  29: suminf.    1.80612 (9) obj. -84.7647 iterations 16
Cbc0038I Pass  30: suminf.    0.94843 (6) obj. -84.7647 iterations 10
Cbc0038I Pass  31: suminf.    0.64194 (2) obj. -93.966 iterations 7
Cbc0038I Pass  32: suminf.    0.12379 (1) obj. -84.7647 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 113 columns, reduced to 50 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -79.4515 - took 0.02 seconds
Cbc0012I Integer solution of -79.45148 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 94 rows 113 columns, reduced to 43 rows 41 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 16 added rows had average density of 10.1875
Cbc0013I At root node, 16 cuts changed objective from -132.58243 to -82.670788 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 240 row cuts average 5.5 elements, 75 column cuts (75 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 10 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 40.6 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 11 row cuts average 35.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -79.45148, took 140 iterations and 0 nodes (0.13 seconds)
Cbc0035I Maximum depth 0, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 128 (-27) rows, 71 (-7) columns and 390 (-63) elements
Clp1000I sum of infeasibilities 6.02836e-05 - average 4.70965e-07, 19 fixed columns
Coin0506I Presolve 90 (-38) rows, 51 (-20) columns and 274 (-116) elements
Clp0029I End of values pass after 51 iterations
Clp0014I Perturbing problem by 0.001% of 0.2639517 - largest nonzero change 0 ( 0%) - largest zero change 2.7410221e-05
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Coin0511I After Postsolve, objective 54.735199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22427318 - largest nonzero change 0 ( 0%) - largest zero change 2.8164545e-05
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Clp0000I Optimal - objective value 54.735199
Coin0511I After Postsolve, objective 54.735199, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.73519864 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 121 rows, 71 columns (70 integer (70 of which binary)) and 417 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.862%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 4.06097
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.7465 iterations 46
Cbc0038I Solution found of -11.7465
Cbc0038I Relaxing continuous gives -11.7465
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -11.7465 to -27.3722 (0.04 seconds)
Cbc0038I Round again with cutoff of -30.0751
Cbc0038I Pass   2: suminf.    1.17174 (8) obj. -30.0751 iterations 13
Cbc0038I Pass   3: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass   4: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass   5: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass   6: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass   7: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass   8: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass   9: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  10: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass  11: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass  12: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  13: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass  14: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  15: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass  16: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  17: suminf.    1.34747 (5) obj. -30.0751 iterations 17
Cbc0038I Pass  18: suminf.    1.25958 (5) obj. -30.0751 iterations 4
Cbc0038I Pass  19: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  20: suminf.    0.48304 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  21: suminf.    0.31670 (2) obj. -30.0751 iterations 5
Cbc0038I Pass  22: suminf.    1.38530 (4) obj. -30.0751 iterations 4
Cbc0038I Pass  23: suminf.    1.17174 (8) obj. -30.0751 iterations 13
Cbc0038I Pass  24: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I Pass  25: suminf.    1.25958 (5) obj. -30.0751 iterations 5
Cbc0038I Pass  26: suminf.    1.70072 (4) obj. -30.0751 iterations 6
Cbc0038I Pass  27: suminf.    0.48304 (2) obj. -30.0751 iterations 7
Cbc0038I Pass  28: suminf.    0.31670 (2) obj. -30.0751 iterations 6
Cbc0038I Pass  29: suminf.    1.38530 (4) obj. -30.0751 iterations 5
Cbc0038I Pass  30: suminf.    1.17174 (8) obj. -30.0751 iterations 14
Cbc0038I Pass  31: suminf.    1.34747 (5) obj. -30.0751 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -27.3722 - took 0.04 seconds
Cbc0012I Integer solution of -27.3722 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 121 rows 71 columns, reduced to 55 rows 31 columns
Cbc0031I 25 added rows had average density of 44.76
Cbc0013I At root node, 25 cuts changed objective from -54.399928 to -46.778398 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5783 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1381 row cuts average 71.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 116 row cuts average 70.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0010I After 33 nodes, 11 on tree, -27.3722 best solution, best possible -46.778398 (0.68 seconds)
Cbc0038I Full problem 121 rows 71 columns, reduced to 6 rows 6 columns
Cbc0012I Integer solution of -28.97205 found by RINS after 6422 iterations and 41 nodes (0.69 seconds)
Cbc0016I Integer solution of -29.24625 found by strong branching after 7089 iterations and 54 nodes (0.72 seconds)
Cbc0001I Search completed - best objective -29.24625, took 7093 iterations and 54 nodes (0.72 seconds)
Cbc0032I Strong branching done 620 times (11210 iterations), fathomed 1 nodes and fixed 17 variables
Cbc0035I Maximum depth 20, 161 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-64) rows, 103 (-50) columns and 1556 (-1748) elements
Clp1000I sum of infeasibilities 2.57229e-07 - average 2.82669e-09, 24 fixed columns
Coin0506I Presolve 68 (-23) rows, 79 (-24) columns and 984 (-572) elements
Clp0006I 0  Obj 59.558077 Dual inf 9.3096392 (78)
Clp0029I End of values pass after 79 iterations
Clp0014I Perturbing problem by 0.001% of 1.7552025 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 67.385045
Clp0000I Optimal - objective value 67.385045
Coin0511I After Postsolve, objective 67.385045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 67.385045
Clp0000I Optimal - objective value 67.385045
Clp0000I Optimal - objective value 67.385045
Clp0000I Optimal - objective value 67.385045
Coin0511I After Postsolve, objective 67.385045, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 67.38504476 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 60 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 90 rows, 109 columns (109 integer (109 of which binary)) and 1606 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 4.90034
Cbc0038I Pass   1: suminf.    2.48848 (27) obj. -51.5862 iterations 12
Cbc0038I Pass   2: suminf.    1.74539 (26) obj. -46.7132 iterations 3
Cbc0038I Solution found of -6.48088
Cbc0038I Rounding solution of -7.82072 is better than previous of -6.48088

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 109 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -7.82072 to -11.7988 (0.04 seconds)
Cbc0038I Round again with cutoff of -16.2409
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.48848 (27) obj. -51.5862 iterations 0
Cbc0038I Pass   4: suminf.    1.74539 (26) obj. -46.7132 iterations 4
Cbc0038I Pass   5: suminf.    0.44437 (6) obj. -16.2409 iterations 35
Cbc0038I Pass   6: suminf.    1.45194 (4) obj. -16.2409 iterations 12
Cbc0038I Pass   7: suminf.    0.28341 (2) obj. -17.191 iterations 2
Cbc0038I Pass   8: suminf.    0.23137 (2) obj. -16.2409 iterations 2
Cbc0038I Pass   9: suminf.    0.92091 (9) obj. -22.9612 iterations 21
Cbc0038I Pass  10: suminf.    0.37139 (6) obj. -17.5306 iterations 6
Cbc0038I Pass  11: suminf.    0.72539 (5) obj. -16.2409 iterations 19
Cbc0038I Pass  12: suminf.    0.72539 (5) obj. -16.2409 iterations 0
Cbc0038I Pass  13: suminf.    0.75150 (4) obj. -16.2409 iterations 5
Cbc0038I Pass  14: suminf.    0.36920 (4) obj. -16.2409 iterations 4
Cbc0038I Pass  15: suminf.    1.24575 (5) obj. -16.2409 iterations 5
Cbc0038I Pass  16: suminf.    0.84033 (4) obj. -16.2409 iterations 3
Cbc0038I Pass  17: suminf.    3.20739 (16) obj. -25.1305 iterations 23
Cbc0038I Pass  18: suminf.    3.20739 (16) obj. -25.1305 iterations 3
Cbc0038I Pass  19: suminf.    0.66243 (4) obj. -16.2409 iterations 30
Cbc0038I Pass  20: suminf.    0.66243 (4) obj. -16.2409 iterations 0
Cbc0038I Pass  21: suminf.    0.66578 (3) obj. -16.2409 iterations 6
Cbc0038I Pass  22: suminf.    0.26187 (2) obj. -16.5651 iterations 3
Cbc0038I Pass  23: suminf.    0.66578 (3) obj. -16.2409 iterations 9
Cbc0038I Pass  24: suminf.    0.66786 (9) obj. -22.0588 iterations 23
Cbc0038I Pass  25: suminf.    0.21918 (5) obj. -16.2409 iterations 7
Cbc0038I Pass  26: suminf.    0.73289 (3) obj. -16.2409 iterations 14
Cbc0038I Pass  27: suminf.    0.20164 (3) obj. -16.2409 iterations 7
Cbc0038I Pass  28: suminf.    0.76579 (8) obj. -21.8252 iterations 17
Cbc0038I Pass  29: suminf.    0.38858 (6) obj. -17.8026 iterations 6
Cbc0038I Pass  30: suminf.    0.79011 (4) obj. -16.2409 iterations 16
Cbc0038I Pass  31: suminf.    0.79011 (4) obj. -16.2409 iterations 0
Cbc0038I Pass  32: suminf.    0.72575 (4) obj. -16.2409 iterations 6
Cbc0038I Rounding solution of -12.5811 is better than previous of -11.7988

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 109 columns, reduced to 16 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -12.5811 to -17.3267 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.1052
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.48848 (27) obj. -51.5862 iterations 0
Cbc0038I Pass  33: suminf.    1.74539 (26) obj. -46.7132 iterations 4
Cbc0038I Pass  34: suminf.    0.82742 (14) obj. -32.8357 iterations 12
Cbc0038I Pass  35: suminf.    0.97629 (5) obj. -25.1052 iterations 40
Cbc0038I Pass  36: suminf.    0.97629 (5) obj. -25.1052 iterations 0
Cbc0038I Pass  37: suminf.    0.97500 (7) obj. -25.1052 iterations 12
Cbc0038I Pass  38: suminf.    0.97500 (7) obj. -25.1052 iterations 2
Cbc0038I Pass  39: suminf.    2.48348 (7) obj. -25.1052 iterations 11
Cbc0038I Pass  40: suminf.    0.57653 (7) obj. -25.1052 iterations 12
Cbc0038I Pass  41: suminf.    0.57173 (6) obj. -25.9379 iterations 7
Cbc0038I Pass  42: suminf.    1.28601 (8) obj. -25.1052 iterations 15
Cbc0038I Pass  43: suminf.    0.40711 (6) obj. -25.1052 iterations 24
Cbc0038I Pass  44: suminf.    1.61365 (8) obj. -25.1052 iterations 11
Cbc0038I Pass  45: suminf.    1.54860 (8) obj. -25.1052 iterations 2
Cbc0038I Pass  46: suminf.    1.19601 (8) obj. -25.1052 iterations 14
Cbc0038I Pass  47: suminf.    0.66858 (7) obj. -25.1052 iterations 9
Cbc0038I Pass  48: suminf.    1.23884 (6) obj. -25.1052 iterations 13
Cbc0038I Pass  49: suminf.    1.13524 (6) obj. -25.1052 iterations 1
Cbc0038I Pass  50: suminf.    1.52472 (7) obj. -25.1052 iterations 10
Cbc0038I Pass  51: suminf.    1.38283 (7) obj. -25.1052 iterations 9
Cbc0038I Pass  52: suminf.    1.19601 (8) obj. -25.1052 iterations 13
Cbc0038I Pass  53: suminf.    0.66858 (7) obj. -25.1052 iterations 9
Cbc0038I Pass  54: suminf.    1.23884 (6) obj. -25.1052 iterations 13
Cbc0038I Pass  55: suminf.    1.13524 (6) obj. -25.1052 iterations 1
Cbc0038I Pass  56: suminf.    1.52472 (7) obj. -25.1052 iterations 10
Cbc0038I Pass  57: suminf.    1.38283 (7) obj. -25.1052 iterations 9
Cbc0038I Pass  58: suminf.    1.19601 (8) obj. -25.1052 iterations 13
Cbc0038I Pass  59: suminf.    0.66858 (7) obj. -25.1052 iterations 9
Cbc0038I Pass  60: suminf.    1.23884 (6) obj. -25.1052 iterations 13
Cbc0038I Pass  61: suminf.    1.13524 (6) obj. -25.1052 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 90 rows 109 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -17.3267 - took 0.04 seconds
Cbc0012I Integer solution of -17.32668 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 90 rows 109 columns, reduced to 13 rows 14 columns
Cbc0031I 44 added rows had average density of 26.090909
Cbc0013I At root node, 44 cuts changed objective from -56.218684 to -37.142139 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6286 row cuts average 2.0 elements, 2 column cuts (2 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 727 row cuts average 89.1 elements, 0 column cuts (0 active)  in 0.113 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 492 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1389 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 307 row cuts average 10.3 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 307 row cuts average 65.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 128 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -17.32668 best solution, best possible -37.142139 (2.15 seconds)
Cbc0012I Integer solution of -23.90118 found by rounding after 3620 iterations and 2 nodes (2.17 seconds)
Cbc0012I Integer solution of -26.68203 found by DiveCoefficient after 4074 iterations and 4 nodes (2.66 seconds)
Cbc0012I Integer solution of -28.28188 found by DiveCoefficient after 4159 iterations and 6 nodes (2.90 seconds)
Cbc0010I After 6 nodes, 5 on tree, -28.28188 best solution, best possible -36.882545 (2.90 seconds)
Cbc0012I Integer solution of -28.97205 found by rounding after 4184 iterations and 8 nodes (2.95 seconds)
Cbc0016I Integer solution of -29.24625 found by strong branching after 4269 iterations and 11 nodes (3.14 seconds)
Cbc0010I After 20 nodes, 5 on tree, -29.24625 best solution, best possible -36.882545 (3.62 seconds)
Cbc0010I After 37 nodes, 4 on tree, -29.24625 best solution, best possible -36.882545 (4.33 seconds)
Cbc0001I Search completed - best objective -29.24625, took 5539 iterations and 42 nodes (4.47 seconds)
Cbc0032I Strong branching done 678 times (13083 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 12, 57 variables fixed on reduced cost
Total time (CPU seconds):       3.09   (Wallclock seconds):       4.49

