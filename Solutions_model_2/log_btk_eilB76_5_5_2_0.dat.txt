Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 72 (-6) columns and 403 (-50) elements
Clp1000I sum of infeasibilities 0.000122032 - average 9.17533e-07, 31 fixed columns
Coin0506I Presolve 66 (-67) rows, 38 (-34) columns and 201 (-202) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 61.989484
Clp0000I Optimal - objective value 61.989484
Coin0511I After Postsolve, objective 61.989484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22431686 - largest nonzero change 0 ( 0%) - largest zero change 2.9721497e-05
Clp0000I Optimal - objective value 61.989484
Clp0000I Optimal - objective value 61.989484
Clp0000I Optimal - objective value 61.989484
Coin0511I After Postsolve, objective 61.989484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.9894838 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 72 columns (71 integer (71 of which binary)) and 436 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.801%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 3.46082
Cbc0038I Solution found of -19.7885
Cbc0038I Relaxing continuous gives -20.053
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 49 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -20.053 to -31.5304 (0.03 seconds)
Cbc0038I Round again with cutoff of -34.5419
Cbc0038I Pass   1: suminf.    0.82561 (6) obj. -34.5419 iterations 36
Cbc0038I Pass   2: suminf.    0.78222 (2) obj. -34.5419 iterations 10
Cbc0038I Pass   3: suminf.    0.18791 (2) obj. -34.5419 iterations 3
Cbc0038I Pass   4: suminf.    0.24023 (2) obj. -34.5419 iterations 4
Cbc0038I Pass   5: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass   6: suminf.    0.72782 (2) obj. -34.5419 iterations 4
Cbc0038I Pass   7: suminf.    0.50965 (2) obj. -34.5419 iterations 2
Cbc0038I Pass   8: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass   9: suminf.    1.72645 (6) obj. -34.5419 iterations 21
Cbc0038I Pass  10: suminf.    0.68050 (2) obj. -34.5419 iterations 21
Cbc0038I Pass  11: suminf.    0.31573 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  12: suminf.    0.23178 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  13: suminf.    0.72782 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  14: suminf.    0.50965 (2) obj. -34.5419 iterations 1
Cbc0038I Pass  15: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  16: suminf.    1.88751 (7) obj. -34.5419 iterations 18
Cbc0038I Pass  17: suminf.    1.35150 (4) obj. -34.5419 iterations 10
Cbc0038I Pass  18: suminf.    0.59384 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  19: suminf.    0.23178 (2) obj. -34.5419 iterations 10
Cbc0038I Pass  20: suminf.    0.72782 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  21: suminf.    0.50965 (2) obj. -34.5419 iterations 1
Cbc0038I Pass  22: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  23: suminf.    4.50474 (11) obj. -34.5419 iterations 22
Cbc0038I Pass  24: suminf.    0.82561 (6) obj. -34.5419 iterations 38
Cbc0038I Pass  25: suminf.    0.78222 (2) obj. -34.5419 iterations 9
Cbc0038I Pass  26: suminf.    0.18791 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  27: suminf.    0.24023 (2) obj. -34.5419 iterations 4
Cbc0038I Pass  28: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  29: suminf.    0.72782 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  30: suminf.    0.50965 (2) obj. -34.5419 iterations 1
Cbc0038I Rounding solution of -34.3447 is better than previous of -31.5304

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 64 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -39.9624
Cbc0038I Pass  30: suminf.    1.15199 (7) obj. -39.9624 iterations 5
Cbc0038I Pass  31: suminf.    0.59932 (3) obj. -39.9624 iterations 13
Cbc0038I Pass  32: suminf.    0.30363 (2) obj. -39.9624 iterations 4
Cbc0038I Pass  33: suminf.    0.52712 (3) obj. -39.9624 iterations 5
Cbc0038I Pass  34: suminf.    0.52444 (3) obj. -39.9624 iterations 1
Cbc0038I Pass  35: suminf.    1.01308 (3) obj. -39.9624 iterations 3
Cbc0038I Pass  36: suminf.    3.59482 (14) obj. -39.9624 iterations 19
Cbc0038I Pass  37: suminf.    0.52444 (3) obj. -39.9624 iterations 23
Cbc0038I Pass  38: suminf.    1.09783 (4) obj. -39.9624 iterations 12
Cbc0038I Pass  39: suminf.    0.30363 (2) obj. -39.9624 iterations 11
Cbc0038I Pass  40: suminf.    0.52712 (3) obj. -39.9624 iterations 5
Cbc0038I Pass  41: suminf.    0.52444 (3) obj. -39.9624 iterations 1
Cbc0038I Pass  42: suminf.    1.01308 (3) obj. -39.9624 iterations 2
Cbc0038I Pass  43: suminf.    2.36077 (9) obj. -39.9624 iterations 16
Cbc0038I Pass  44: suminf.    1.22573 (5) obj. -39.9624 iterations 12
Cbc0038I Pass  45: suminf.    1.86114 (5) obj. -39.9624 iterations 7
Cbc0038I Pass  46: suminf.    1.15199 (7) obj. -39.9624 iterations 12
Cbc0038I Pass  47: suminf.    0.59932 (3) obj. -39.9624 iterations 12
Cbc0038I Pass  48: suminf.    0.30363 (2) obj. -39.9624 iterations 3
Cbc0038I Pass  49: suminf.    0.52712 (3) obj. -39.9624 iterations 5
Cbc0038I Pass  50: suminf.    0.52444 (3) obj. -39.9624 iterations 1
Cbc0038I Pass  51: suminf.    1.01308 (3) obj. -39.9624 iterations 2
Cbc0038I Pass  52: suminf.    1.09630 (3) obj. -39.9624 iterations 12
Cbc0038I Pass  53: suminf.    0.54554 (2) obj. -39.9624 iterations 14
Cbc0038I Pass  54: suminf.    2.19013 (6) obj. -39.9624 iterations 10
Cbc0038I Pass  55: suminf.    0.65611 (3) obj. -39.9624 iterations 10
Cbc0038I Pass  56: suminf.    1.86300 (6) obj. -39.9624 iterations 12
Cbc0038I Pass  57: suminf.    1.88705 (7) obj. -39.9624 iterations 14
Cbc0038I Pass  58: suminf.    0.64730 (4) obj. -39.9624 iterations 18
Cbc0038I Pass  59: suminf.    3.00551 (14) obj. -39.9624 iterations 12
Cbc0038I Rounding solution of -35.3608 is better than previous of -34.3447

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 72 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -46.467
Cbc0038I Pass  59: suminf.    1.48155 (7) obj. -46.467 iterations 0
Cbc0038I Pass  60: suminf.    0.87639 (4) obj. -46.467 iterations 11
Cbc0038I Pass  61: suminf.    0.96920 (4) obj. -46.467 iterations 3
Cbc0038I Pass  62: suminf.    1.82333 (8) obj. -46.467 iterations 15
Cbc0038I Pass  63: suminf.    1.17128 (8) obj. -46.467 iterations 17
Cbc0038I Pass  64: suminf.    2.98459 (7) obj. -46.467 iterations 7
Cbc0038I Pass  65: suminf.    2.50067 (7) obj. -46.467 iterations 5
Cbc0038I Pass  66: suminf.    2.45227 (9) obj. -46.467 iterations 6
Cbc0038I Pass  67: suminf.    0.98980 (4) obj. -46.467 iterations 10
Cbc0038I Pass  68: suminf.    0.98980 (4) obj. -46.467 iterations 0
Cbc0038I Pass  69: suminf.    1.55081 (5) obj. -46.467 iterations 2
Cbc0038I Pass  70: suminf.    0.87639 (4) obj. -46.467 iterations 5
Cbc0038I Pass  71: suminf.    0.96920 (4) obj. -46.467 iterations 2
Cbc0038I Pass  72: suminf.    1.25742 (9) obj. -46.467 iterations 12
Cbc0038I Pass  73: suminf.    1.17128 (8) obj. -46.467 iterations 6
Cbc0038I Pass  74: suminf.    2.98459 (7) obj. -46.467 iterations 7
Cbc0038I Pass  75: suminf.    2.50067 (7) obj. -46.467 iterations 4
Cbc0038I Pass  76: suminf.    2.45227 (9) obj. -46.467 iterations 5
Cbc0038I Pass  77: suminf.    0.98980 (4) obj. -46.467 iterations 10
Cbc0038I Pass  78: suminf.    0.98980 (4) obj. -46.467 iterations 0
Cbc0038I Pass  79: suminf.    1.55081 (5) obj. -46.467 iterations 2
Cbc0038I Pass  80: suminf.    0.87639 (4) obj. -46.467 iterations 5
Cbc0038I Pass  81: suminf.    0.96920 (4) obj. -46.467 iterations 2
Cbc0038I Pass  82: suminf.    2.03147 (10) obj. -46.467 iterations 13
Cbc0038I Pass  83: suminf.    1.17128 (8) obj. -46.467 iterations 12
Cbc0038I Pass  84: suminf.    2.98459 (7) obj. -46.467 iterations 7
Cbc0038I Pass  85: suminf.    2.50067 (7) obj. -46.467 iterations 4
Cbc0038I Pass  86: suminf.    2.45227 (9) obj. -46.467 iterations 5
Cbc0038I Pass  87: suminf.    0.98980 (4) obj. -46.467 iterations 10
Cbc0038I Pass  88: suminf.    0.98980 (4) obj. -46.467 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -35.3608 - took 0.06 seconds
Cbc0012I Integer solution of -35.36078 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 51 rows 28 columns
Cbc0031I 19 added rows had average density of 43.789474
Cbc0013I At root node, 19 cuts changed objective from -61.644473 to -49.425136 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2769 row cuts average 5.1 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 729 row cuts average 63.2 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 274 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 46.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.36078, took 3736 iterations and 16 nodes (0.49 seconds)
Cbc0032I Strong branching done 292 times (3911 iterations), fathomed 1 nodes and fixed 18 variables
Cbc0035I Maximum depth 4, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.49

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 115 (-37) columns and 1968 (-1335) elements
Clp1000I sum of infeasibilities 3.41268e-07 - average 3.21951e-09, 28 fixed columns
Coin0506I Presolve 80 (-26) rows, 87 (-28) columns and 1174 (-794) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.4653433 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 81.408481
Clp0000I Optimal - objective value 81.408481
Coin0511I After Postsolve, objective 81.408481, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.408481
Clp0000I Optimal - objective value 81.408481
Clp0000I Optimal - objective value 81.408481
Coin0511I After Postsolve, objective 81.408481, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.40848142 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 116 columns (116 integer (116 of which binary)) and 1994 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.974%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 2.23829
Cbc0038I Pass   1: suminf.    2.13526 (32) obj. -72.9929 iterations 5
Cbc0038I Pass   2: suminf.    0.33351 (10) obj. -21.4854 iterations 23
Cbc0038I Solution found of -7.94389
Cbc0038I Rounding solution of -11.8655 is better than previous of -7.94389

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -18.0896
Cbc0038I Pass   3: suminf.    2.13526 (32) obj. -72.9929 iterations 0
Cbc0038I Pass   4: suminf.    0.82958 (22) obj. -41.6202 iterations 12
Cbc0038I Pass   5: suminf.    0.44442 (1) obj. -18.0896 iterations 23
Cbc0038I Pass   6: suminf.    0.19103 (3) obj. -22.7623 iterations 3
Cbc0038I Pass   7: suminf.    0.48923 (2) obj. -18.0896 iterations 4
Cbc0038I Pass   8: suminf.    0.48923 (2) obj. -18.0896 iterations 0
Cbc0038I Pass   9: suminf.    0.19103 (3) obj. -22.7623 iterations 3
Cbc0038I Pass  10: suminf.    1.59059 (10) obj. -18.0896 iterations 24
Cbc0038I Pass  11: suminf.    0.66281 (7) obj. -18.0896 iterations 7
Cbc0038I Pass  12: suminf.    0.87902 (3) obj. -18.0896 iterations 9
Cbc0038I Pass  13: suminf.    0.46155 (3) obj. -18.0896 iterations 3
Cbc0038I Pass  14: suminf.    2.44668 (19) obj. -18.0896 iterations 42
Cbc0038I Pass  15: suminf.    0.85948 (13) obj. -26.5088 iterations 11
Cbc0038I Pass  16: suminf.    1.10161 (4) obj. -18.0896 iterations 18
Cbc0038I Pass  17: suminf.    0.22664 (4) obj. -18.0896 iterations 3
Cbc0038I Pass  18: suminf.    0.85296 (4) obj. -18.0896 iterations 8
Cbc0038I Pass  19: suminf.    0.41431 (4) obj. -18.0896 iterations 3
Cbc0038I Pass  20: suminf.    0.96486 (4) obj. -18.0896 iterations 7
Cbc0038I Pass  21: suminf.    0.84662 (10) obj. -18.0896 iterations 25
Cbc0038I Pass  22: suminf.    0.51319 (9) obj. -18.0896 iterations 9
Cbc0038I Pass  23: suminf.    1.12991 (6) obj. -18.0896 iterations 12
Cbc0038I Pass  24: suminf.    1.12991 (6) obj. -18.0896 iterations 0
Cbc0038I Pass  25: suminf.    0.46757 (4) obj. -18.0896 iterations 16
Cbc0038I Pass  26: suminf.    0.46757 (4) obj. -18.0896 iterations 0
Cbc0038I Pass  27: suminf.    1.29177 (4) obj. -18.0896 iterations 2
Cbc0038I Pass  28: suminf.    0.94416 (4) obj. -18.0896 iterations 1
Cbc0038I Pass  29: suminf.    0.94416 (4) obj. -18.0896 iterations 0
Cbc0038I Pass  30: suminf.    0.33573 (4) obj. -18.0896 iterations 2
Cbc0038I Pass  31: suminf.    0.33573 (4) obj. -18.0896 iterations 0
Cbc0038I Pass  32: suminf.    1.29177 (4) obj. -18.0896 iterations 5
Cbc0038I Rounding solution of -22.4061 is better than previous of -11.8655

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 47 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -22.4061 to -35.3608 (0.09 seconds)
Cbc0038I Round again with cutoff of -43.1096
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.13526 (32) obj. -72.9929 iterations 0
Cbc0038I Pass  33: suminf.    0.96465 (21) obj. -43.1096 iterations 15
Cbc0038I Pass  34: suminf.    0.90713 (7) obj. -43.1096 iterations 25
Cbc0038I Pass  35: suminf.    0.54737 (7) obj. -44.1889 iterations 2
Cbc0038I Pass  36: suminf.    0.90713 (7) obj. -43.1096 iterations 2
Cbc0038I Pass  37: suminf.    1.01529 (15) obj. -43.1096 iterations 19
Cbc0038I Pass  38: suminf.    0.82744 (14) obj. -43.1096 iterations 9
Cbc0038I Pass  39: suminf.    1.08701 (9) obj. -43.1096 iterations 14
Cbc0038I Pass  40: suminf.    0.67430 (9) obj. -43.9351 iterations 2
Cbc0038I Pass  41: suminf.    1.08701 (9) obj. -43.1096 iterations 4
Cbc0038I Pass  42: suminf.    2.65854 (18) obj. -43.1096 iterations 16
Cbc0038I Pass  43: suminf.    0.93476 (16) obj. -43.1096 iterations 10
Cbc0038I Pass  44: suminf.    0.93476 (16) obj. -43.1096 iterations 0
Cbc0038I Pass  45: suminf.    1.04569 (11) obj. -43.1096 iterations 10
Cbc0038I Pass  46: suminf.    1.04569 (11) obj. -43.1096 iterations 2
Cbc0038I Pass  47: suminf.    1.08701 (9) obj. -43.1096 iterations 6
Cbc0038I Pass  48: suminf.    0.67430 (9) obj. -43.9351 iterations 1
Cbc0038I Pass  49: suminf.    1.08701 (9) obj. -43.1096 iterations 4
Cbc0038I Pass  50: suminf.    0.85867 (12) obj. -43.1096 iterations 8
Cbc0038I Pass  51: suminf.    0.85867 (12) obj. -43.1096 iterations 1
Cbc0038I Pass  52: suminf.    1.08701 (10) obj. -43.1096 iterations 7
Cbc0038I Pass  53: suminf.    0.99323 (13) obj. -43.1096 iterations 17
Cbc0038I Pass  54: suminf.    0.86329 (12) obj. -43.8201 iterations 5
Cbc0038I Pass  55: suminf.    0.82681 (11) obj. -43.1096 iterations 7
Cbc0038I Pass  56: suminf.    0.82681 (11) obj. -43.1096 iterations 1
Cbc0038I Pass  57: suminf.    1.08701 (10) obj. -43.1096 iterations 5
Cbc0038I Pass  58: suminf.    0.72722 (10) obj. -43.8292 iterations 2
Cbc0038I Pass  59: suminf.    1.08701 (10) obj. -43.1096 iterations 4
Cbc0038I Pass  60: suminf.    1.23056 (14) obj. -43.1096 iterations 13
Cbc0038I Pass  61: suminf.    0.95574 (13) obj. -43.7296 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -35.3608 - took 0.08 seconds
Cbc0012I Integer solution of -35.36078 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 105 rows 116 columns, reduced to 35 rows 37 columns
Cbc0031I 60 added rows had average density of 21.75
Cbc0013I At root node, 60 cuts changed objective from -74.104678 to -41.161857 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 3172 row cuts average 11.3 elements, 9 column cuts (11 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 46 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 115 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 93 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 374 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 234 row cuts average 58.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 105 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.162 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.36078 best solution, best possible -41.161857 (0.69 seconds)
Cbc0001I Search completed - best objective -35.36078, took 1530 iterations and 4 nodes (1.09 seconds)
Cbc0032I Strong branching done 152 times (3416 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.80   (Wallclock seconds):       1.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 72 (-6) columns and 403 (-50) elements
Clp1000I sum of infeasibilities 0.000122032 - average 9.17533e-07, 31 fixed columns
Coin0506I Presolve 66 (-67) rows, 38 (-34) columns and 201 (-202) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 61.989484
Clp0000I Optimal - objective value 61.989484
Coin0511I After Postsolve, objective 61.989484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22431686 - largest nonzero change 0 ( 0%) - largest zero change 2.9721497e-05
Clp0000I Optimal - objective value 61.989484
Clp0000I Optimal - objective value 61.989484
Clp0000I Optimal - objective value 61.989484
Coin0511I After Postsolve, objective 61.989484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.9894838 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 72 columns (71 integer (71 of which binary)) and 436 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.801%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 3.46082
Cbc0038I Solution found of -19.7885
Cbc0038I Relaxing continuous gives -20.053
Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 49 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -20.053 to -31.5304 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.5419
Cbc0038I Pass   1: suminf.    0.82561 (6) obj. -34.5419 iterations 36
Cbc0038I Pass   2: suminf.    0.78222 (2) obj. -34.5419 iterations 10
Cbc0038I Pass   3: suminf.    0.18791 (2) obj. -34.5419 iterations 3
Cbc0038I Pass   4: suminf.    0.24023 (2) obj. -34.5419 iterations 4
Cbc0038I Pass   5: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass   6: suminf.    0.72782 (2) obj. -34.5419 iterations 4
Cbc0038I Pass   7: suminf.    0.50965 (2) obj. -34.5419 iterations 2
Cbc0038I Pass   8: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass   9: suminf.    1.72645 (6) obj. -34.5419 iterations 21
Cbc0038I Pass  10: suminf.    0.68050 (2) obj. -34.5419 iterations 21
Cbc0038I Pass  11: suminf.    0.31573 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  12: suminf.    0.23178 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  13: suminf.    0.72782 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  14: suminf.    0.50965 (2) obj. -34.5419 iterations 1
Cbc0038I Pass  15: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  16: suminf.    1.88751 (7) obj. -34.5419 iterations 18
Cbc0038I Pass  17: suminf.    1.35150 (4) obj. -34.5419 iterations 10
Cbc0038I Pass  18: suminf.    0.59384 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  19: suminf.    0.23178 (2) obj. -34.5419 iterations 10
Cbc0038I Pass  20: suminf.    0.72782 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  21: suminf.    0.50965 (2) obj. -34.5419 iterations 1
Cbc0038I Pass  22: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  23: suminf.    4.50474 (11) obj. -34.5419 iterations 22
Cbc0038I Pass  24: suminf.    0.82561 (6) obj. -34.5419 iterations 38
Cbc0038I Pass  25: suminf.    0.78222 (2) obj. -34.5419 iterations 9
Cbc0038I Pass  26: suminf.    0.18791 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  27: suminf.    0.24023 (2) obj. -34.5419 iterations 4
Cbc0038I Pass  28: suminf.    0.23178 (2) obj. -34.5419 iterations 2
Cbc0038I Pass  29: suminf.    0.72782 (2) obj. -34.5419 iterations 3
Cbc0038I Pass  30: suminf.    0.50965 (2) obj. -34.5419 iterations 1
Cbc0038I Rounding solution of -34.3447 is better than previous of -31.5304

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 64 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -39.9624
Cbc0038I Pass  30: suminf.    1.15199 (7) obj. -39.9624 iterations 5
Cbc0038I Pass  31: suminf.    0.59932 (3) obj. -39.9624 iterations 13
Cbc0038I Pass  32: suminf.    0.30363 (2) obj. -39.9624 iterations 4
Cbc0038I Pass  33: suminf.    0.52712 (3) obj. -39.9624 iterations 5
Cbc0038I Pass  34: suminf.    0.52444 (3) obj. -39.9624 iterations 1
Cbc0038I Pass  35: suminf.    1.01308 (3) obj. -39.9624 iterations 3
Cbc0038I Pass  36: suminf.    3.59482 (14) obj. -39.9624 iterations 19
Cbc0038I Pass  37: suminf.    0.52444 (3) obj. -39.9624 iterations 23
Cbc0038I Pass  38: suminf.    1.09783 (4) obj. -39.9624 iterations 12
Cbc0038I Pass  39: suminf.    0.30363 (2) obj. -39.9624 iterations 11
Cbc0038I Pass  40: suminf.    0.52712 (3) obj. -39.9624 iterations 5
Cbc0038I Pass  41: suminf.    0.52444 (3) obj. -39.9624 iterations 1
Cbc0038I Pass  42: suminf.    1.01308 (3) obj. -39.9624 iterations 2
Cbc0038I Pass  43: suminf.    2.36077 (9) obj. -39.9624 iterations 16
Cbc0038I Pass  44: suminf.    1.22573 (5) obj. -39.9624 iterations 12
Cbc0038I Pass  45: suminf.    1.86114 (5) obj. -39.9624 iterations 7
Cbc0038I Pass  46: suminf.    1.15199 (7) obj. -39.9624 iterations 12
Cbc0038I Pass  47: suminf.    0.59932 (3) obj. -39.9624 iterations 12
Cbc0038I Pass  48: suminf.    0.30363 (2) obj. -39.9624 iterations 3
Cbc0038I Pass  49: suminf.    0.52712 (3) obj. -39.9624 iterations 5
Cbc0038I Pass  50: suminf.    0.52444 (3) obj. -39.9624 iterations 1
Cbc0038I Pass  51: suminf.    1.01308 (3) obj. -39.9624 iterations 2
Cbc0038I Pass  52: suminf.    1.09630 (3) obj. -39.9624 iterations 12
Cbc0038I Pass  53: suminf.    0.54554 (2) obj. -39.9624 iterations 14
Cbc0038I Pass  54: suminf.    2.19013 (6) obj. -39.9624 iterations 10
Cbc0038I Pass  55: suminf.    0.65611 (3) obj. -39.9624 iterations 10
Cbc0038I Pass  56: suminf.    1.86300 (6) obj. -39.9624 iterations 12
Cbc0038I Pass  57: suminf.    1.88705 (7) obj. -39.9624 iterations 14
Cbc0038I Pass  58: suminf.    0.64730 (4) obj. -39.9624 iterations 18
Cbc0038I Pass  59: suminf.    3.00551 (14) obj. -39.9624 iterations 12
Cbc0038I Rounding solution of -35.3608 is better than previous of -34.3447

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 72 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -46.467
Cbc0038I Pass  59: suminf.    1.48155 (7) obj. -46.467 iterations 0
Cbc0038I Pass  60: suminf.    0.87639 (4) obj. -46.467 iterations 11
Cbc0038I Pass  61: suminf.    0.96920 (4) obj. -46.467 iterations 3
Cbc0038I Pass  62: suminf.    1.82333 (8) obj. -46.467 iterations 15
Cbc0038I Pass  63: suminf.    1.17128 (8) obj. -46.467 iterations 17
Cbc0038I Pass  64: suminf.    2.98459 (7) obj. -46.467 iterations 7
Cbc0038I Pass  65: suminf.    2.50067 (7) obj. -46.467 iterations 5
Cbc0038I Pass  66: suminf.    2.45227 (9) obj. -46.467 iterations 6
Cbc0038I Pass  67: suminf.    0.98980 (4) obj. -46.467 iterations 10
Cbc0038I Pass  68: suminf.    0.98980 (4) obj. -46.467 iterations 0
Cbc0038I Pass  69: suminf.    1.55081 (5) obj. -46.467 iterations 2
Cbc0038I Pass  70: suminf.    0.87639 (4) obj. -46.467 iterations 5
Cbc0038I Pass  71: suminf.    0.96920 (4) obj. -46.467 iterations 2
Cbc0038I Pass  72: suminf.    1.25742 (9) obj. -46.467 iterations 12
Cbc0038I Pass  73: suminf.    1.17128 (8) obj. -46.467 iterations 6
Cbc0038I Pass  74: suminf.    2.98459 (7) obj. -46.467 iterations 7
Cbc0038I Pass  75: suminf.    2.50067 (7) obj. -46.467 iterations 4
Cbc0038I Pass  76: suminf.    2.45227 (9) obj. -46.467 iterations 5
Cbc0038I Pass  77: suminf.    0.98980 (4) obj. -46.467 iterations 10
Cbc0038I Pass  78: suminf.    0.98980 (4) obj. -46.467 iterations 0
Cbc0038I Pass  79: suminf.    1.55081 (5) obj. -46.467 iterations 2
Cbc0038I Pass  80: suminf.    0.87639 (4) obj. -46.467 iterations 5
Cbc0038I Pass  81: suminf.    0.96920 (4) obj. -46.467 iterations 2
Cbc0038I Pass  82: suminf.    2.03147 (10) obj. -46.467 iterations 13
Cbc0038I Pass  83: suminf.    1.17128 (8) obj. -46.467 iterations 12
Cbc0038I Pass  84: suminf.    2.98459 (7) obj. -46.467 iterations 7
Cbc0038I Pass  85: suminf.    2.50067 (7) obj. -46.467 iterations 4
Cbc0038I Pass  86: suminf.    2.45227 (9) obj. -46.467 iterations 5
Cbc0038I Pass  87: suminf.    0.98980 (4) obj. -46.467 iterations 10
Cbc0038I Pass  88: suminf.    0.98980 (4) obj. -46.467 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 72 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -35.3608 - took 0.07 seconds
Cbc0012I Integer solution of -35.36078 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 132 rows 72 columns, reduced to 51 rows 28 columns
Cbc0031I 19 added rows had average density of 43.789474
Cbc0013I At root node, 19 cuts changed objective from -61.644473 to -49.425136 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2769 row cuts average 5.1 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 729 row cuts average 63.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 274 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 155 row cuts average 46.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -35.36078, took 3736 iterations and 16 nodes (0.56 seconds)
Cbc0032I Strong branching done 292 times (3911 iterations), fathomed 1 nodes and fixed 18 variables
Cbc0035I Maximum depth 4, 21 variables fixed on reduced cost
Total time (CPU seconds):       0.54   (Wallclock seconds):       0.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 115 (-38) columns and 1968 (-1336) elements
Clp1000I sum of infeasibilities 3.41268e-07 - average 3.21951e-09, 28 fixed columns
Coin0506I Presolve 80 (-26) rows, 87 (-28) columns and 1174 (-794) elements
Clp0029I End of values pass after 86 iterations
Clp0014I Perturbing problem by 0.001% of 2.4653433 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 81.408481
Clp0000I Optimal - objective value 81.408481
Coin0511I After Postsolve, objective 81.408481, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.408481
Clp0000I Optimal - objective value 81.408481
Clp0000I Optimal - objective value 81.408481
Coin0511I After Postsolve, objective 81.408481, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.40848142 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 38 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 116 columns (116 integer (116 of which binary)) and 1994 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.974%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 2.23829
Cbc0038I Pass   1: suminf.    2.13526 (32) obj. -72.9929 iterations 5
Cbc0038I Pass   2: suminf.    0.33351 (10) obj. -21.4854 iterations 23
Cbc0038I Solution found of -7.94389
Cbc0038I Rounding solution of -11.8655 is better than previous of -7.94389

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -18.0896
Cbc0038I Pass   3: suminf.    2.13526 (32) obj. -72.9929 iterations 0
Cbc0038I Pass   4: suminf.    0.82958 (22) obj. -41.6202 iterations 12
Cbc0038I Pass   5: suminf.    0.44442 (1) obj. -18.0896 iterations 23
Cbc0038I Pass   6: suminf.    0.19103 (3) obj. -22.7623 iterations 3
Cbc0038I Pass   7: suminf.    0.48923 (2) obj. -18.0896 iterations 4
Cbc0038I Pass   8: suminf.    0.48923 (2) obj. -18.0896 iterations 0
Cbc0038I Pass   9: suminf.    0.19103 (3) obj. -22.7623 iterations 3
Cbc0038I Pass  10: suminf.    1.59059 (10) obj. -18.0896 iterations 24
Cbc0038I Pass  11: suminf.    0.66281 (7) obj. -18.0896 iterations 7
Cbc0038I Pass  12: suminf.    0.87902 (3) obj. -18.0896 iterations 9
Cbc0038I Pass  13: suminf.    0.46155 (3) obj. -18.0896 iterations 3
Cbc0038I Pass  14: suminf.    2.44668 (19) obj. -18.0896 iterations 42
Cbc0038I Pass  15: suminf.    0.85948 (13) obj. -26.5088 iterations 11
Cbc0038I Pass  16: suminf.    1.10161 (4) obj. -18.0896 iterations 18
Cbc0038I Pass  17: suminf.    0.22664 (4) obj. -18.0896 iterations 3
Cbc0038I Pass  18: suminf.    0.85296 (4) obj. -18.0896 iterations 8
Cbc0038I Pass  19: suminf.    0.41431 (4) obj. -18.0896 iterations 3
Cbc0038I Pass  20: suminf.    0.96486 (4) obj. -18.0896 iterations 7
Cbc0038I Pass  21: suminf.    0.84662 (10) obj. -18.0896 iterations 25
Cbc0038I Pass  22: suminf.    0.51319 (9) obj. -18.0896 iterations 9
Cbc0038I Pass  23: suminf.    1.12991 (6) obj. -18.0896 iterations 12
Cbc0038I Pass  24: suminf.    1.12991 (6) obj. -18.0896 iterations 0
Cbc0038I Pass  25: suminf.    0.46757 (4) obj. -18.0896 iterations 16
Cbc0038I Pass  26: suminf.    0.46757 (4) obj. -18.0896 iterations 0
Cbc0038I Pass  27: suminf.    1.29177 (4) obj. -18.0896 iterations 2
Cbc0038I Pass  28: suminf.    0.94416 (4) obj. -18.0896 iterations 1
Cbc0038I Pass  29: suminf.    0.94416 (4) obj. -18.0896 iterations 0
Cbc0038I Pass  30: suminf.    0.33573 (4) obj. -18.0896 iterations 2
Cbc0038I Pass  31: suminf.    0.33573 (4) obj. -18.0896 iterations 0
Cbc0038I Pass  32: suminf.    1.29177 (4) obj. -18.0896 iterations 5
Cbc0038I Rounding solution of -22.4061 is better than previous of -11.8655

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 47 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -22.4061 to -35.3608 (0.10 seconds)
Cbc0038I Round again with cutoff of -43.1096
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.13526 (32) obj. -72.9929 iterations 0
Cbc0038I Pass  33: suminf.    0.96465 (21) obj. -43.1096 iterations 15
Cbc0038I Pass  34: suminf.    0.90713 (7) obj. -43.1096 iterations 25
Cbc0038I Pass  35: suminf.    0.54737 (7) obj. -44.1889 iterations 2
Cbc0038I Pass  36: suminf.    0.90713 (7) obj. -43.1096 iterations 2
Cbc0038I Pass  37: suminf.    1.01529 (15) obj. -43.1096 iterations 19
Cbc0038I Pass  38: suminf.    0.82744 (14) obj. -43.1096 iterations 9
Cbc0038I Pass  39: suminf.    1.08701 (9) obj. -43.1096 iterations 14
Cbc0038I Pass  40: suminf.    0.67430 (9) obj. -43.9351 iterations 2
Cbc0038I Pass  41: suminf.    1.08701 (9) obj. -43.1096 iterations 4
Cbc0038I Pass  42: suminf.    2.65854 (18) obj. -43.1096 iterations 16
Cbc0038I Pass  43: suminf.    0.93476 (16) obj. -43.1096 iterations 10
Cbc0038I Pass  44: suminf.    0.93476 (16) obj. -43.1096 iterations 0
Cbc0038I Pass  45: suminf.    1.04569 (11) obj. -43.1096 iterations 10
Cbc0038I Pass  46: suminf.    1.04569 (11) obj. -43.1096 iterations 2
Cbc0038I Pass  47: suminf.    1.08701 (9) obj. -43.1096 iterations 6
Cbc0038I Pass  48: suminf.    0.67430 (9) obj. -43.9351 iterations 1
Cbc0038I Pass  49: suminf.    1.08701 (9) obj. -43.1096 iterations 4
Cbc0038I Pass  50: suminf.    0.85867 (12) obj. -43.1096 iterations 8
Cbc0038I Pass  51: suminf.    0.85867 (12) obj. -43.1096 iterations 1
Cbc0038I Pass  52: suminf.    1.08701 (10) obj. -43.1096 iterations 7
Cbc0038I Pass  53: suminf.    0.99323 (13) obj. -43.1096 iterations 17
Cbc0038I Pass  54: suminf.    0.86329 (12) obj. -43.8201 iterations 5
Cbc0038I Pass  55: suminf.    0.82681 (11) obj. -43.1096 iterations 7
Cbc0038I Pass  56: suminf.    0.82681 (11) obj. -43.1096 iterations 1
Cbc0038I Pass  57: suminf.    1.08701 (10) obj. -43.1096 iterations 5
Cbc0038I Pass  58: suminf.    0.72722 (10) obj. -43.8292 iterations 2
Cbc0038I Pass  59: suminf.    1.08701 (10) obj. -43.1096 iterations 4
Cbc0038I Pass  60: suminf.    1.23056 (14) obj. -43.1096 iterations 13
Cbc0038I Pass  61: suminf.    0.95574 (13) obj. -43.7296 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -35.3608 - took 0.09 seconds
Cbc0012I Integer solution of -35.36078 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 105 rows 116 columns, reduced to 35 rows 37 columns
Cbc0031I 60 added rows had average density of 21.75
Cbc0013I At root node, 60 cuts changed objective from -74.104678 to -41.161857 in 25 passes
Cbc0014I Cut generator 0 (Probing) - 3172 row cuts average 11.3 elements, 9 column cuts (11 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 42 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 46 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 115 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 93 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 374 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 234 row cuts average 58.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 105 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.183 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.36078 best solution, best possible -41.161857 (0.74 seconds)
Cbc0001I Search completed - best objective -35.36078, took 1530 iterations and 4 nodes (1.17 seconds)
Cbc0032I Strong branching done 152 times (3416 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       1.18

