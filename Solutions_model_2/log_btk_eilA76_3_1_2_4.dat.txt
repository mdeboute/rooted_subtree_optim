Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 4.69654e-05 - average 3.42813e-07, 8 fixed columns
Coin0506I Presolve 119 (-18) rows, 67 (-9) columns and 364 (-54) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.455389 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 49.353309
Clp0000I Optimal - objective value 49.353309
Coin0511I After Postsolve, objective 49.353309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.353309
Clp0000I Optimal - objective value 49.353309
Clp0000I Optimal - objective value 49.353309
Coin0511I After Postsolve, objective 49.353309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.35330881 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.0067
Cbc0038I Solution found of 3.49816
Cbc0038I Relaxing continuous gives -8.65665
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.65665 to -9.22777 (0.05 seconds)
Cbc0038I Round again with cutoff of -13.2404
Cbc0038I Pass   1: suminf.    0.79435 (45) obj. -13.2404 iterations 31
Cbc0038I Pass   2: suminf.    0.85262 (7) obj. -13.2404 iterations 51
Cbc0038I Pass   3: suminf.    0.73636 (8) obj. -13.2404 iterations 2
Cbc0038I Pass   4: suminf.    1.88955 (4) obj. -13.2404 iterations 12
Cbc0038I Pass   5: suminf.    1.02137 (3) obj. -13.2404 iterations 4
Cbc0038I Pass   6: suminf.    0.80829 (3) obj. -13.2404 iterations 4
Cbc0038I Pass   7: suminf.    0.69018 (3) obj. -13.2404 iterations 2
Cbc0038I Pass   8: suminf.    0.96508 (4) obj. -13.2404 iterations 3
Cbc0038I Pass   9: suminf.    0.96508 (4) obj. -13.2404 iterations 0
Cbc0038I Pass  10: suminf.    1.00822 (3) obj. -13.2404 iterations 2
Cbc0038I Pass  11: suminf.    0.96992 (3) obj. -13.2404 iterations 2
Cbc0038I Pass  12: suminf.    1.31153 (4) obj. -13.2404 iterations 2
Cbc0038I Pass  13: suminf.    1.05990 (4) obj. -13.2404 iterations 21
Cbc0038I Pass  14: suminf.    0.74762 (4) obj. -13.2404 iterations 8
Cbc0038I Pass  15: suminf.    0.91188 (3) obj. -13.2404 iterations 6
Cbc0038I Pass  16: suminf.    0.84561 (3) obj. -13.2404 iterations 2
Cbc0038I Pass  17: suminf.    1.20422 (5) obj. -13.2404 iterations 13
Cbc0038I Pass  18: suminf.    1.20422 (5) obj. -13.2404 iterations 0
Cbc0038I Pass  19: suminf.    1.67761 (5) obj. -13.2404 iterations 5
Cbc0038I Pass  20: suminf.    1.50139 (8) obj. -13.2404 iterations 7
Cbc0038I Pass  21: suminf.    1.41245 (7) obj. -13.2404 iterations 1
Cbc0038I Pass  22: suminf.    1.91865 (5) obj. -13.2404 iterations 10
Cbc0038I Pass  23: suminf.    1.89497 (5) obj. -13.2404 iterations 1
Cbc0038I Pass  24: suminf.    1.49577 (4) obj. -13.2404 iterations 8
Cbc0038I Pass  25: suminf.    1.37006 (5) obj. -13.2404 iterations 1
Cbc0038I Pass  26: suminf.    1.97741 (5) obj. -13.2404 iterations 6
Cbc0038I Pass  27: suminf.    1.68604 (5) obj. -13.2404 iterations 2
Cbc0038I Pass  28: suminf.    1.79568 (5) obj. -13.2404 iterations 5
Cbc0038I Pass  29: suminf.    1.50139 (8) obj. -13.2404 iterations 6
Cbc0038I Pass  30: suminf.    1.41245 (7) obj. -13.2404 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -9.22777 - took 0.09 seconds
Cbc0012I Integer solution of -9.22777 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 63 rows 37 columns
Cbc0031I 27 added rows had average density of 57.407407
Cbc0013I At root node, 27 cuts changed objective from -49.353309 to -37.657541 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9640 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1288 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.22777 best solution, best possible -37.657541 (0.76 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 18 rows 14 columns
Cbc0012I Integer solution of -9.29581 found by rounding after 7421 iterations and 47 nodes (0.93 seconds)
Cbc0001I Search completed - best objective -9.295809999999996, took 8144 iterations and 76 nodes (0.97 seconds)
Cbc0032I Strong branching done 716 times (12538 iterations), fathomed 9 nodes and fixed 44 variables
Cbc0035I Maximum depth 12, 230 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       0.97

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 117 (-35) columns and 1898 (-1405) elements
Clp1000I sum of infeasibilities 7.50301e-08 - average 7.21443e-10, 29 fixed columns
Coin0506I Presolve 77 (-27) rows, 88 (-29) columns and 1068 (-830) elements
Clp0006I 0  Obj 50.811338 Dual inf 3.0470494 (88)
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 6.0782891 - largest nonzero change 2.0147243e-05 ( 0.0011689744%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 65.387676
Clp0000I Optimal - objective value 65.387676
Coin0511I After Postsolve, objective 65.387676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.387676
Clp0000I Optimal - objective value 65.387676
Clp0000I Optimal - objective value 65.387676
Clp0000I Optimal - objective value 65.387676
Coin0511I After Postsolve, objective 65.387676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.38767647 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 1902 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.419%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.00783
Cbc0038I Pass   1: suminf.    1.40022 (24) obj. -35.9862 iterations 14
Cbc0038I Pass   2: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass   3: suminf.    0.48032 (11) obj. 3.72347 iterations 13
Cbc0038I Pass   4: suminf.    0.02778 (1) obj. 16.1367 iterations 10
Cbc0038I Solution found of 17.109
Cbc0038I Rounding solution of 2.02251 is better than previous of 17.109

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 2.02251 to 0.26071 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.53549
Cbc0038I Pass   5: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass   6: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass   7: suminf.    0.12906 (1) obj. -5.53549 iterations 24
Cbc0038I Pass   8: suminf.    0.08000 (1) obj. -6.81103 iterations 1
Cbc0038I Pass   9: suminf.    1.02451 (9) obj. -22.7875 iterations 21
Cbc0038I Pass  10: suminf.    0.78023 (8) obj. -21.7186 iterations 3
Cbc0038I Pass  11: suminf.    0.46479 (1) obj. -5.53549 iterations 8
Cbc0038I Pass  12: suminf.    0.12000 (1) obj. -14.5001 iterations 1
Cbc0038I Pass  13: suminf.    0.77714 (9) obj. -10.5292 iterations 22
Cbc0038I Pass  14: suminf.    0.22959 (2) obj. -8.01623 iterations 2
Cbc0038I Pass  15: suminf.    0.13738 (3) obj. -5.53549 iterations 2
Cbc0038I Pass  16: suminf.    0.13738 (3) obj. -5.53549 iterations 0
Cbc0038I Pass  17: suminf.    0.55879 (3) obj. -5.53549 iterations 2
Cbc0038I Pass  18: suminf.    1.15320 (9) obj. -12.8594 iterations 17
Cbc0038I Pass  19: suminf.    1.15320 (9) obj. -12.8594 iterations 1
Cbc0038I Pass  20: suminf.    0.58256 (5) obj. -5.53549 iterations 13
Cbc0038I Pass  21: suminf.    0.58256 (5) obj. -5.53549 iterations 0
Cbc0038I Pass  22: suminf.    1.57810 (4) obj. -5.53549 iterations 9
Cbc0038I Pass  23: suminf.    0.56789 (2) obj. -5.53549 iterations 7
Cbc0038I Pass  24: suminf.    0.43158 (2) obj. -5.94395 iterations 4
Cbc0038I Pass  25: suminf.    0.46704 (2) obj. -5.53549 iterations 1
Cbc0038I Pass  26: suminf.    0.68793 (6) obj. -5.53549 iterations 17
Cbc0038I Pass  27: suminf.    0.63255 (6) obj. -5.53549 iterations 11
Cbc0038I Pass  28: suminf.    0.54492 (2) obj. -5.53549 iterations 9
Cbc0038I Pass  29: suminf.    0.54492 (2) obj. -5.53549 iterations 0
Cbc0038I Pass  30: suminf.    0.47308 (2) obj. -5.53549 iterations 5
Cbc0038I Pass  31: suminf.    0.43158 (2) obj. -6.94395 iterations 1
Cbc0038I Pass  32: suminf.    0.55387 (2) obj. -5.53549 iterations 2
Cbc0038I Pass  33: suminf.    1.58310 (9) obj. -5.53549 iterations 13
Cbc0038I Pass  34: suminf.    1.58310 (9) obj. -5.53549 iterations 0
Cbc0038I Rounding solution of -1.87622 is better than previous of 0.26071

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 43 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -1.87622 to -7.35169 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.4215
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass  35: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass  36: suminf.    0.44414 (4) obj. -17.4215 iterations 28
Cbc0038I Pass  37: suminf.    0.44414 (4) obj. -17.4215 iterations 0
Cbc0038I Pass  38: suminf.    0.98975 (3) obj. -17.4215 iterations 10
Cbc0038I Pass  39: suminf.    0.31797 (2) obj. -19.296 iterations 3
Cbc0038I Pass  40: suminf.    0.50287 (2) obj. -17.4215 iterations 1
Cbc0038I Pass  41: suminf.    0.63989 (8) obj. -17.4215 iterations 20
Cbc0038I Pass  42: suminf.    0.47395 (6) obj. -17.4215 iterations 8
Cbc0038I Pass  43: suminf.    0.27564 (2) obj. -17.4215 iterations 7
Cbc0038I Pass  44: suminf.    0.12622 (2) obj. -17.4215 iterations 2
Cbc0038I Pass  45: suminf.    0.62809 (2) obj. -17.4215 iterations 4
Cbc0038I Pass  46: suminf.    1.77704 (9) obj. -17.4215 iterations 16
Cbc0038I Pass  47: suminf.    1.18515 (8) obj. -17.4215 iterations 5
Cbc0038I Pass  48: suminf.    1.09583 (8) obj. -17.4215 iterations 3
Cbc0038I Pass  49: suminf.    0.82991 (4) obj. -17.4215 iterations 11
Cbc0038I Pass  50: suminf.    0.82991 (4) obj. -17.4215 iterations 1
Cbc0038I Pass  51: suminf.    1.11916 (3) obj. -17.4215 iterations 6
Cbc0038I Pass  52: suminf.    0.42372 (3) obj. -19.1751 iterations 3
Cbc0038I Pass  53: suminf.    0.22753 (2) obj. -17.4215 iterations 2
Cbc0038I Pass  54: suminf.    0.55260 (2) obj. -17.4215 iterations 4
Cbc0038I Pass  55: suminf.    1.64588 (7) obj. -17.4215 iterations 11
Cbc0038I Pass  56: suminf.    1.45447 (6) obj. -17.4215 iterations 1
Cbc0038I Pass  57: suminf.    1.69740 (13) obj. -17.4215 iterations 12
Cbc0038I Pass  58: suminf.    1.69740 (13) obj. -17.4215 iterations 0
Cbc0038I Pass  59: suminf.    2.97495 (10) obj. -17.4215 iterations 10
Cbc0038I Pass  60: suminf.    2.97495 (10) obj. -17.4215 iterations 0
Cbc0038I Pass  61: suminf.    2.82100 (10) obj. -17.4215 iterations 7
Cbc0038I Pass  62: suminf.    2.82100 (10) obj. -17.4215 iterations 3
Cbc0038I Pass  63: suminf.    2.97495 (10) obj. -17.4215 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -7.35169 - took 0.05 seconds
Cbc0012I Integer solution of -7.35169 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 9 rows 13 columns
Cbc0031I 40 added rows had average density of 43.05
Cbc0013I At root node, 40 cuts changed objective from -57.700351 to -16.460453 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8210 row cuts average 6.1 elements, 1 column cuts (1 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1411 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 539 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1185 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 364 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.637 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.35169 best solution, best possible -16.460453 (2.20 seconds)
Cbc0012I Integer solution of -7.92689 found by rounding after 4181 iterations and 1 nodes (2.21 seconds)
Cbc0016I Integer solution of -8.65665 found by strong branching after 4350 iterations and 1 nodes (2.23 seconds)
Cbc0016I Integer solution of -8.90313 found by strong branching after 4376 iterations and 1 nodes (2.23 seconds)
Cbc0016I Integer solution of -9.22777 found by strong branching after 5492 iterations and 32 nodes (2.56 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 19 rows 29 columns
Cbc0012I Integer solution of -9.29581 found by DiveCoefficient after 5883 iterations and 48 nodes (2.60 seconds)
Cbc0001I Search completed - best objective -9.295809999999996, took 6022 iterations and 56 nodes (2.62 seconds)
Cbc0032I Strong branching done 536 times (7437 iterations), fathomed 8 nodes and fixed 13 variables
Cbc0035I Maximum depth 18, 122 variables fixed on reduced cost
Total time (CPU seconds):       1.95   (Wallclock seconds):       2.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 4.69654e-05 - average 3.42813e-07, 8 fixed columns
Coin0506I Presolve 119 (-18) rows, 67 (-9) columns and 364 (-54) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 2.455389 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 49.353309
Clp0000I Optimal - objective value 49.353309
Coin0511I After Postsolve, objective 49.353309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 49.353309
Clp0000I Optimal - objective value 49.353309
Clp0000I Optimal - objective value 49.353309
Coin0511I After Postsolve, objective 49.353309, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.35330881 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 8.0067
Cbc0038I Solution found of 3.49816
Cbc0038I Relaxing continuous gives -8.65665
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 63 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -8.65665 to -9.22777 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.2404
Cbc0038I Pass   1: suminf.    0.79435 (45) obj. -13.2404 iterations 31
Cbc0038I Pass   2: suminf.    0.85262 (7) obj. -13.2404 iterations 51
Cbc0038I Pass   3: suminf.    0.73636 (8) obj. -13.2404 iterations 2
Cbc0038I Pass   4: suminf.    1.88955 (4) obj. -13.2404 iterations 12
Cbc0038I Pass   5: suminf.    1.02137 (3) obj. -13.2404 iterations 4
Cbc0038I Pass   6: suminf.    0.80829 (3) obj. -13.2404 iterations 4
Cbc0038I Pass   7: suminf.    0.69018 (3) obj. -13.2404 iterations 2
Cbc0038I Pass   8: suminf.    0.96508 (4) obj. -13.2404 iterations 3
Cbc0038I Pass   9: suminf.    0.96508 (4) obj. -13.2404 iterations 0
Cbc0038I Pass  10: suminf.    1.00822 (3) obj. -13.2404 iterations 2
Cbc0038I Pass  11: suminf.    0.96992 (3) obj. -13.2404 iterations 2
Cbc0038I Pass  12: suminf.    1.31153 (4) obj. -13.2404 iterations 2
Cbc0038I Pass  13: suminf.    1.05990 (4) obj. -13.2404 iterations 21
Cbc0038I Pass  14: suminf.    0.74762 (4) obj. -13.2404 iterations 8
Cbc0038I Pass  15: suminf.    0.91188 (3) obj. -13.2404 iterations 6
Cbc0038I Pass  16: suminf.    0.84561 (3) obj. -13.2404 iterations 2
Cbc0038I Pass  17: suminf.    1.20422 (5) obj. -13.2404 iterations 13
Cbc0038I Pass  18: suminf.    1.20422 (5) obj. -13.2404 iterations 0
Cbc0038I Pass  19: suminf.    1.67761 (5) obj. -13.2404 iterations 5
Cbc0038I Pass  20: suminf.    1.50139 (8) obj. -13.2404 iterations 7
Cbc0038I Pass  21: suminf.    1.41245 (7) obj. -13.2404 iterations 1
Cbc0038I Pass  22: suminf.    1.91865 (5) obj. -13.2404 iterations 10
Cbc0038I Pass  23: suminf.    1.89497 (5) obj. -13.2404 iterations 1
Cbc0038I Pass  24: suminf.    1.49577 (4) obj. -13.2404 iterations 8
Cbc0038I Pass  25: suminf.    1.37006 (5) obj. -13.2404 iterations 1
Cbc0038I Pass  26: suminf.    1.97741 (5) obj. -13.2404 iterations 6
Cbc0038I Pass  27: suminf.    1.68604 (5) obj. -13.2404 iterations 2
Cbc0038I Pass  28: suminf.    1.79568 (5) obj. -13.2404 iterations 5
Cbc0038I Pass  29: suminf.    1.50139 (8) obj. -13.2404 iterations 6
Cbc0038I Pass  30: suminf.    1.41245 (7) obj. -13.2404 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 88 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -9.22777 - took 0.09 seconds
Cbc0012I Integer solution of -9.22777 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 63 rows 37 columns
Cbc0031I 27 added rows had average density of 57.407407
Cbc0013I At root node, 27 cuts changed objective from -49.353309 to -37.657541 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9640 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1288 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -9.22777 best solution, best possible -37.657541 (0.76 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 18 rows 14 columns
Cbc0012I Integer solution of -9.29581 found by rounding after 7421 iterations and 47 nodes (0.93 seconds)
Cbc0001I Search completed - best objective -9.295809999999996, took 8144 iterations and 76 nodes (0.97 seconds)
Cbc0032I Strong branching done 716 times (12538 iterations), fathomed 9 nodes and fixed 44 variables
Cbc0035I Maximum depth 12, 230 variables fixed on reduced cost
Total time (CPU seconds):       0.94   (Wallclock seconds):       0.98

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 117 (-36) columns and 1898 (-1406) elements
Clp1000I sum of infeasibilities 7.50301e-08 - average 7.21443e-10, 29 fixed columns
Coin0506I Presolve 77 (-27) rows, 88 (-29) columns and 1068 (-830) elements
Clp0006I 0  Obj 50.811338 Dual inf 3.0470494 (88)
Clp0029I End of values pass after 88 iterations
Clp0014I Perturbing problem by 0.001% of 6.0782891 - largest nonzero change 2.0147243e-05 ( 0.0011689744%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 65.387676
Clp0000I Optimal - objective value 65.387676
Coin0511I After Postsolve, objective 65.387676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 65.387676
Clp0000I Optimal - objective value 65.387676
Clp0000I Optimal - objective value 65.387676
Clp0000I Optimal - objective value 65.387676
Coin0511I After Postsolve, objective 65.387676, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 65.38767647 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 117 columns (117 integer (117 of which binary)) and 1902 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.419%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 5.00783
Cbc0038I Pass   1: suminf.    1.40022 (24) obj. -35.9862 iterations 14
Cbc0038I Pass   2: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass   3: suminf.    0.48032 (11) obj. 3.72347 iterations 13
Cbc0038I Pass   4: suminf.    0.02778 (1) obj. 16.1367 iterations 10
Cbc0038I Solution found of 17.109
Cbc0038I Rounding solution of 2.02251 is better than previous of 17.109

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 14 rows 14 columns
Cbc0038I Mini branch and bound improved solution from 2.02251 to 0.26071 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.53549
Cbc0038I Pass   5: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass   6: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass   7: suminf.    0.12906 (1) obj. -5.53549 iterations 24
Cbc0038I Pass   8: suminf.    0.08000 (1) obj. -6.81103 iterations 1
Cbc0038I Pass   9: suminf.    1.02451 (9) obj. -22.7875 iterations 21
Cbc0038I Pass  10: suminf.    0.78023 (8) obj. -21.7186 iterations 3
Cbc0038I Pass  11: suminf.    0.46479 (1) obj. -5.53549 iterations 8
Cbc0038I Pass  12: suminf.    0.12000 (1) obj. -14.5001 iterations 1
Cbc0038I Pass  13: suminf.    0.77714 (9) obj. -10.5292 iterations 22
Cbc0038I Pass  14: suminf.    0.22959 (2) obj. -8.01623 iterations 2
Cbc0038I Pass  15: suminf.    0.13738 (3) obj. -5.53549 iterations 2
Cbc0038I Pass  16: suminf.    0.13738 (3) obj. -5.53549 iterations 0
Cbc0038I Pass  17: suminf.    0.55879 (3) obj. -5.53549 iterations 2
Cbc0038I Pass  18: suminf.    1.15320 (9) obj. -12.8594 iterations 17
Cbc0038I Pass  19: suminf.    1.15320 (9) obj. -12.8594 iterations 1
Cbc0038I Pass  20: suminf.    0.58256 (5) obj. -5.53549 iterations 13
Cbc0038I Pass  21: suminf.    0.58256 (5) obj. -5.53549 iterations 0
Cbc0038I Pass  22: suminf.    1.57810 (4) obj. -5.53549 iterations 9
Cbc0038I Pass  23: suminf.    0.56789 (2) obj. -5.53549 iterations 7
Cbc0038I Pass  24: suminf.    0.43158 (2) obj. -5.94395 iterations 4
Cbc0038I Pass  25: suminf.    0.46704 (2) obj. -5.53549 iterations 1
Cbc0038I Pass  26: suminf.    0.68793 (6) obj. -5.53549 iterations 17
Cbc0038I Pass  27: suminf.    0.63255 (6) obj. -5.53549 iterations 11
Cbc0038I Pass  28: suminf.    0.54492 (2) obj. -5.53549 iterations 9
Cbc0038I Pass  29: suminf.    0.54492 (2) obj. -5.53549 iterations 0
Cbc0038I Pass  30: suminf.    0.47308 (2) obj. -5.53549 iterations 5
Cbc0038I Pass  31: suminf.    0.43158 (2) obj. -6.94395 iterations 1
Cbc0038I Pass  32: suminf.    0.55387 (2) obj. -5.53549 iterations 2
Cbc0038I Pass  33: suminf.    1.58310 (9) obj. -5.53549 iterations 13
Cbc0038I Pass  34: suminf.    1.58310 (9) obj. -5.53549 iterations 0
Cbc0038I Rounding solution of -1.87622 is better than previous of 0.26071

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 43 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -1.87622 to -7.35169 (0.06 seconds)
Cbc0038I Round again with cutoff of -17.4215
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass  35: suminf.    1.40022 (24) obj. -35.9862 iterations 0
Cbc0038I Pass  36: suminf.    0.44414 (4) obj. -17.4215 iterations 28
Cbc0038I Pass  37: suminf.    0.44414 (4) obj. -17.4215 iterations 0
Cbc0038I Pass  38: suminf.    0.98975 (3) obj. -17.4215 iterations 10
Cbc0038I Pass  39: suminf.    0.31797 (2) obj. -19.296 iterations 3
Cbc0038I Pass  40: suminf.    0.50287 (2) obj. -17.4215 iterations 1
Cbc0038I Pass  41: suminf.    0.63989 (8) obj. -17.4215 iterations 20
Cbc0038I Pass  42: suminf.    0.47395 (6) obj. -17.4215 iterations 8
Cbc0038I Pass  43: suminf.    0.27564 (2) obj. -17.4215 iterations 7
Cbc0038I Pass  44: suminf.    0.12622 (2) obj. -17.4215 iterations 2
Cbc0038I Pass  45: suminf.    0.62809 (2) obj. -17.4215 iterations 4
Cbc0038I Pass  46: suminf.    1.77704 (9) obj. -17.4215 iterations 16
Cbc0038I Pass  47: suminf.    1.18515 (8) obj. -17.4215 iterations 5
Cbc0038I Pass  48: suminf.    1.09583 (8) obj. -17.4215 iterations 3
Cbc0038I Pass  49: suminf.    0.82991 (4) obj. -17.4215 iterations 11
Cbc0038I Pass  50: suminf.    0.82991 (4) obj. -17.4215 iterations 1
Cbc0038I Pass  51: suminf.    1.11916 (3) obj. -17.4215 iterations 6
Cbc0038I Pass  52: suminf.    0.42372 (3) obj. -19.1751 iterations 3
Cbc0038I Pass  53: suminf.    0.22753 (2) obj. -17.4215 iterations 2
Cbc0038I Pass  54: suminf.    0.55260 (2) obj. -17.4215 iterations 4
Cbc0038I Pass  55: suminf.    1.64588 (7) obj. -17.4215 iterations 11
Cbc0038I Pass  56: suminf.    1.45447 (6) obj. -17.4215 iterations 1
Cbc0038I Pass  57: suminf.    1.69740 (13) obj. -17.4215 iterations 12
Cbc0038I Pass  58: suminf.    1.69740 (13) obj. -17.4215 iterations 0
Cbc0038I Pass  59: suminf.    2.97495 (10) obj. -17.4215 iterations 10
Cbc0038I Pass  60: suminf.    2.97495 (10) obj. -17.4215 iterations 0
Cbc0038I Pass  61: suminf.    2.82100 (10) obj. -17.4215 iterations 7
Cbc0038I Pass  62: suminf.    2.82100 (10) obj. -17.4215 iterations 3
Cbc0038I Pass  63: suminf.    2.97495 (10) obj. -17.4215 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 117 columns, reduced to 5 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -7.35169 - took 0.05 seconds
Cbc0012I Integer solution of -7.35169 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 9 rows 13 columns
Cbc0031I 40 added rows had average density of 43.05
Cbc0013I At root node, 40 cuts changed objective from -57.700351 to -16.460453 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8210 row cuts average 6.1 elements, 1 column cuts (1 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1411 row cuts average 107.7 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 539 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1185 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 364 row cuts average 67.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 30.1 elements, 0 column cuts (0 active)  in 0.649 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.35169 best solution, best possible -16.460453 (2.23 seconds)
Cbc0012I Integer solution of -7.92689 found by rounding after 4181 iterations and 1 nodes (2.24 seconds)
Cbc0016I Integer solution of -8.65665 found by strong branching after 4350 iterations and 1 nodes (2.25 seconds)
Cbc0016I Integer solution of -8.90313 found by strong branching after 4376 iterations and 1 nodes (2.25 seconds)
Cbc0016I Integer solution of -9.22777 found by strong branching after 5492 iterations and 32 nodes (2.59 seconds)
Cbc0038I Full problem 104 rows 117 columns, reduced to 19 rows 29 columns
Cbc0012I Integer solution of -9.29581 found by DiveCoefficient after 5883 iterations and 48 nodes (2.62 seconds)
Cbc0001I Search completed - best objective -9.295809999999996, took 6022 iterations and 56 nodes (2.64 seconds)
Cbc0032I Strong branching done 536 times (7437 iterations), fathomed 8 nodes and fixed 13 variables
Cbc0035I Maximum depth 18, 122 variables fixed on reduced cost
Total time (CPU seconds):       1.96   (Wallclock seconds):       2.65

