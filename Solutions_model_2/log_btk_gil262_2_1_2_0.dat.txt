Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 507 (-20) rows, 262 (-2) columns and 1507 (-38) elements
Clp1000I sum of infeasibilities 0.000195145 - average 3.84902e-07, 85 fixed columns
Coin0506I Presolve 332 (-175) rows, 174 (-88) columns and 984 (-523) elements
Clp0029I End of values pass after 174 iterations
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Coin0511I After Postsolve, objective 167.81899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Coin0511I After Postsolve, objective 167.81899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.8189857 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 507 rows, 262 columns (261 integer (261 of which binary)) and 1507 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 107 integers unsatisfied sum - 12.1292
Cbc0038I Solution found of 9.71428
Cbc0038I Relaxing continuous gives -1.67061
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 201 rows 108 columns
Cbc0038I Mini branch and bound improved solution from -1.67061 to -97.9897 (0.10 seconds)
Cbc0038I Round again with cutoff of -104.973
Cbc0038I Pass   1: suminf.    4.72776 (46) obj. -104.973 iterations 220
Cbc0038I Pass   2: suminf.    4.40270 (37) obj. -104.973 iterations 25
Cbc0038I Pass   3: suminf.    2.43876 (9) obj. -104.973 iterations 73
Cbc0038I Pass   4: suminf.    2.01423 (9) obj. -104.973 iterations 28
Cbc0038I Pass   5: suminf.    3.48015 (10) obj. -104.973 iterations 30
Cbc0038I Pass   6: suminf.    1.96900 (7) obj. -104.973 iterations 19
Cbc0038I Pass   7: suminf.    1.88243 (7) obj. -104.973 iterations 7
Cbc0038I Pass   8: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass   9: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  10: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  11: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  12: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  13: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  14: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  15: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  16: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  17: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  18: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  19: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  20: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  21: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  22: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  23: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  24: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  25: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  26: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  27: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  28: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  29: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  30: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 143 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 223 rows 119 columns
Cbc0038I Mini branch and bound improved solution from -97.9897 to -103.723 (0.20 seconds)
Cbc0038I Round again with cutoff of -117.542
Cbc0038I Pass  30: suminf.    5.18133 (46) obj. -117.542 iterations 0
Cbc0038I Pass  31: suminf.    5.04897 (43) obj. -117.542 iterations 14
Cbc0038I Pass  32: suminf.    5.35656 (14) obj. -117.542 iterations 69
Cbc0038I Pass  33: suminf.    4.36507 (14) obj. -117.542 iterations 37
Cbc0038I Pass  34: suminf.    4.93535 (12) obj. -117.542 iterations 27
Cbc0038I Pass  35: suminf.    4.48023 (15) obj. -117.542 iterations 40
Cbc0038I Pass  36: suminf.    4.48023 (15) obj. -117.542 iterations 0
Cbc0038I Pass  37: suminf.    3.72951 (13) obj. -117.542 iterations 35
Cbc0038I Pass  38: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  39: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  40: suminf.    3.55394 (14) obj. -117.542 iterations 31
Cbc0038I Pass  41: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  42: suminf.    3.72951 (13) obj. -117.542 iterations 33
Cbc0038I Pass  43: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  44: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  45: suminf.    3.55394 (14) obj. -117.542 iterations 29
Cbc0038I Pass  46: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  47: suminf.    3.72951 (13) obj. -117.542 iterations 33
Cbc0038I Pass  48: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  49: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  50: suminf.    3.55394 (14) obj. -117.542 iterations 29
Cbc0038I Pass  51: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  52: suminf.    4.29834 (13) obj. -117.542 iterations 37
Cbc0038I Pass  53: suminf.    3.93282 (12) obj. -117.542 iterations 22
Cbc0038I Pass  54: suminf.    3.77513 (11) obj. -117.542 iterations 20
Cbc0038I Pass  55: suminf.    3.06287 (12) obj. -117.542 iterations 26
Cbc0038I Pass  56: suminf.    4.34133 (13) obj. -117.542 iterations 32
Cbc0038I Pass  57: suminf.    5.00601 (20) obj. -117.542 iterations 59
Cbc0038I Pass  58: suminf.    3.30203 (13) obj. -117.542 iterations 53
Cbc0038I Pass  59: suminf.    3.06024 (15) obj. -117.542 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 233 rows 124 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -103.723 - took 0.31 seconds
Cbc0012I Integer solution of -103.72331 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 201 rows 108 columns
Cbc0012I Integer solution of -104.65038 found by RINS after 0 iterations and 0 nodes (0.43 seconds)
Cbc0031I 46 added rows had average density of 110.28261
Cbc0013I At root node, 46 cuts changed objective from -167.81899 to -159.85328 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 69286 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.601 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3613 row cuts average 260.6 elements, 0 column cuts (0 active)  in 0.661 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.810 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 222 row cuts average 258.6 elements, 0 column cuts (0 active)  in 0.299 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -104.65038 best solution, best possible -159.85328 (7.31 seconds)
Cbc0010I After 9 nodes, 10 on tree, -104.65038 best solution, best possible -159.85328 (8.05 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 238 rows 125 columns
Cbc0012I Integer solution of -104.67831 found by RINS after 26519 iterations and 41 nodes (8.57 seconds)
Cbc0010I After 59 nodes, 13 on tree, -104.67831 best solution, best possible -159.85328 (8.75 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 109 rows 64 columns
Cbc0012I Integer solution of -105.35648 found by RINS after 29576 iterations and 93 nodes (9.12 seconds)
Cbc0010I After 161 nodes, 26 on tree, -105.35648 best solution, best possible -159.85328 (9.46 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 29 rows 20 columns
Cbc0012I Integer solution of -108.22298 found by rounding after 35047 iterations and 213 nodes (9.64 seconds)
Cbc0010I After 343 nodes, 18 on tree, -108.22298 best solution, best possible -159.85328 (10.16 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 19 rows 17 columns
Cbc0001I Search completed - best objective -108.22298, took 44789 iterations and 464 nodes (10.78 seconds)
Cbc0032I Strong branching done 4172 times (96449 iterations), fathomed 64 nodes and fixed 244 variables
Cbc0035I Maximum depth 95, 1822 variables fixed on reduced cost
Total time (CPU seconds):       10.59   (Wallclock seconds):       10.85

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 367 (-159) rows, 382 (-142) columns and 18055 (-17681) elements
Clp1000I sum of infeasibilities 2.14151e-06 - average 5.83518e-09, 185 fixed columns
Coin0506I Presolve 184 (-183) rows, 197 (-185) columns and 736 (-17319) elements
Clp0006I 0  Obj 12.353308 Dual inf 6259.4377 (197)
Clp0029I End of values pass after 160 iterations
Clp0014I Perturbing problem by 0.001% of 0.14614029 - largest nonzero change 2.7226084e-05 ( 0.0024750985%) - largest zero change 2.9996354e-05
Clp0000I Optimal - objective value 14.603375
Clp0000I Optimal - objective value 14.603375
Coin0511I After Postsolve, objective 14.603375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 14.603375 Dual inf 236.91382 (122)
Clp0014I Perturbing problem by 0.001% of 1.728261 - largest nonzero change 2.9019187e-05 ( 0.0029019187%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 197.71347
Clp0000I Optimal - objective value 197.71347
Clp0000I Optimal - objective value 197.71347
Coin0511I After Postsolve, objective 197.71347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 197.7134744 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.17

Starting MIP optimization
Cgl0004I processed model has 367 rows, 382 columns (382 integer (382 of which binary)) and 18055 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.014%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 119 integers unsatisfied sum - 6.18637
Cbc0038I Pass   1: suminf.    3.63649 (96) obj. -154.231 iterations 63
Cbc0038I Pass   2: suminf.    3.63649 (96) obj. -154.231 iterations 1
Cbc0038I Pass   3: suminf.    3.01151 (84) obj. -124.878 iterations 12
Cbc0038I Pass   4: suminf.    1.97199 (62) obj. -95.3441 iterations 22
Cbc0038I Pass   5: suminf.    1.36212 (47) obj. -76.1723 iterations 15
Cbc0038I Pass   6: suminf.    0.52326 (22) obj. -52.0112 iterations 25
Cbc0038I Pass   7: suminf.    0.21351 (11) obj. -40.3493 iterations 11
Cbc0038I Solution found of -27.5936
Cbc0038I Rounding solution of -57.4433 is better than previous of -27.5936

Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 382 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -71.4704
Cbc0038I Pass   8: suminf.    3.63649 (96) obj. -154.231 iterations 0
Cbc0038I Pass   9: suminf.    3.63649 (96) obj. -154.231 iterations 1
Cbc0038I Pass  10: suminf.    2.53019 (74) obj. -114.408 iterations 22
Cbc0038I Pass  11: suminf.    1.58887 (53) obj. -82.9067 iterations 21
Cbc0038I Pass  12: suminf.    1.23160 (31) obj. -71.4704 iterations 33
Cbc0038I Pass  13: suminf.    0.79086 (8) obj. -71.4704 iterations 93
Cbc0038I Pass  14: suminf.    0.64691 (3) obj. -74.129 iterations 11
Cbc0038I Pass  15: suminf.    0.49425 (5) obj. -71.4704 iterations 24
Cbc0038I Pass  16: suminf.    0.92988 (5) obj. -71.4704 iterations 7
Cbc0038I Pass  17: suminf.    1.98064 (21) obj. -71.4704 iterations 94
Cbc0038I Pass  18: suminf.    1.42296 (20) obj. -71.4704 iterations 19
Cbc0038I Pass  19: suminf.    1.05936 (7) obj. -71.4704 iterations 31
Cbc0038I Pass  20: suminf.    1.01783 (7) obj. -71.4704 iterations 9
Cbc0038I Pass  21: suminf.    1.05936 (7) obj. -71.4704 iterations 11
Cbc0038I Pass  22: suminf.    1.89252 (27) obj. -71.4704 iterations 63
Cbc0038I Pass  23: suminf.    1.78163 (32) obj. -71.4704 iterations 19
Cbc0038I Pass  24: suminf.    1.75716 (23) obj. -71.4704 iterations 25
Cbc0038I Pass  25: suminf.    1.53029 (25) obj. -71.4704 iterations 18
Cbc0038I Pass  26: suminf.    1.59345 (18) obj. -71.4704 iterations 45
Cbc0038I Pass  27: suminf.    1.39075 (17) obj. -71.4704 iterations 28
Cbc0038I Pass  28: suminf.    1.36928 (15) obj. -71.4704 iterations 25
Cbc0038I Pass  29: suminf.    1.22483 (12) obj. -71.4704 iterations 44
Cbc0038I Pass  30: suminf.    1.19961 (10) obj. -71.4704 iterations 28
Cbc0038I Pass  31: suminf.    1.21648 (12) obj. -71.4704 iterations 24
Cbc0038I Pass  32: suminf.    1.19135 (10) obj. -71.4704 iterations 25
Cbc0038I Pass  33: suminf.    1.22483 (12) obj. -71.4704 iterations 30
Cbc0038I Pass  34: suminf.    1.49646 (20) obj. -71.4704 iterations 58
Cbc0038I Pass  35: suminf.    1.02343 (19) obj. -74.7816 iterations 15
Cbc0038I Pass  36: suminf.    2.00737 (11) obj. -71.4704 iterations 27
Cbc0038I Pass  37: suminf.    1.33775 (10) obj. -71.4704 iterations 13
Cbc0038I Rounding solution of -60.455 is better than previous of -57.4433

Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 382 columns, reduced to 124 rows 136 columns - 32 fixed gives 91, 103 - ok now
Cbc0038I Full problem 367 rows 382 columns, reduced to 21 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -60.455 to -63.9106 (0.25 seconds)
Cbc0038I Round again with cutoff of -96.719
Cbc0038I Pass  37: suminf.    3.63649 (96) obj. -154.231 iterations 0
Cbc0038I Pass  38: suminf.    3.63649 (96) obj. -154.231 iterations 1
Cbc0038I Pass  39: suminf.    2.43514 (72) obj. -110.598 iterations 24
Cbc0038I Pass  40: suminf.    1.81593 (52) obj. -96.719 iterations 29
Cbc0038I Pass  41: suminf.    1.51173 (51) obj. -104.019 iterations 8
Cbc0038I Pass  42: suminf.    1.21681 (25) obj. -96.719 iterations 77
Cbc0038I Pass  43: suminf.    1.02493 (24) obj. -96.719 iterations 13
Cbc0038I Pass  44: suminf.    1.24846 (13) obj. -96.719 iterations 75
Cbc0038I Pass  45: suminf.    1.24846 (13) obj. -96.719 iterations 0
Cbc0038I Pass  46: suminf.    1.71798 (25) obj. -96.719 iterations 63
Cbc0038I Pass  47: suminf.    1.71798 (25) obj. -96.719 iterations 3
Cbc0038I Pass  48: suminf.    1.64746 (21) obj. -96.719 iterations 41
Cbc0038I Pass  49: suminf.    1.64375 (21) obj. -96.719 iterations 27
Cbc0038I Pass  50: suminf.    1.68703 (23) obj. -96.719 iterations 24
Cbc0038I Pass  51: suminf.    1.67377 (21) obj. -96.719 iterations 22
Cbc0038I Pass  52: suminf.    1.67406 (22) obj. -96.719 iterations 29
Cbc0038I Pass  53: suminf.    2.15056 (33) obj. -96.719 iterations 73
Cbc0038I Pass  54: suminf.    2.15056 (33) obj. -96.719 iterations 17
Cbc0038I Pass  55: suminf.    1.66067 (28) obj. -96.719 iterations 21
Cbc0038I Pass  56: suminf.    1.48957 (28) obj. -96.719 iterations 17
Cbc0038I Pass  57: suminf.    1.59839 (23) obj. -96.719 iterations 44
Cbc0038I Pass  58: suminf.    1.48649 (24) obj. -96.719 iterations 5
Cbc0038I Pass  59: suminf.    2.70288 (22) obj. -96.719 iterations 28
Cbc0038I Pass  60: suminf.    1.56371 (21) obj. -96.719 iterations 6
Cbc0038I Pass  61: suminf.    1.48242 (22) obj. -96.719 iterations 16
Cbc0038I Pass  62: suminf.    2.70288 (22) obj. -96.719 iterations 25
Cbc0038I Pass  63: suminf.    2.32559 (46) obj. -96.719 iterations 80
Cbc0038I Pass  64: suminf.    1.96927 (41) obj. -96.719 iterations 38
Cbc0038I Pass  65: suminf.    2.04404 (33) obj. -96.719 iterations 46
Cbc0038I Pass  66: suminf.    1.77446 (33) obj. -96.719 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 382 columns, reduced to 36 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.34 seconds)
Cbc0038I After 0.34 seconds - Feasibility pump exiting with objective of -63.9106 - took 0.24 seconds
Cbc0012I Integer solution of -63.91064 found by feasibility pump after 0 iterations and 0 nodes (0.34 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 16 rows 22 columns
Cbc0012I Integer solution of -69.91064 found by RINS after 0 iterations and 0 nodes (0.40 seconds)
Cbc0031I 143 added rows had average density of 81.538462
Cbc0013I At root node, 143 cuts changed objective from -197.71347 to -148.29347 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 43308 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.542 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3508 row cuts average 368.5 elements, 0 column cuts (0 active)  in 1.411 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 322 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6474 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.268 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2028 row cuts average 21.9 elements, 0 column cuts (0 active)  in 1.022 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 353 row cuts average 243.4 elements, 0 column cuts (0 active)  in 0.325 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 316 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.844 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -69.91064 best solution, best possible -148.29347 (10.18 seconds)
Cbc0010I After 1 nodes, 2 on tree, -69.91064 best solution, best possible -148.29347 (10.89 seconds)
Cbc0012I Integer solution of -99.9786 found by rounding after 18367 iterations and 2 nodes (10.91 seconds)
Cbc0012I Integer solution of -100.87927 found by DiveCoefficient after 18367 iterations and 2 nodes (10.92 seconds)
Cbc0012I Integer solution of -104.67831 found by DiveCoefficient after 18424 iterations and 3 nodes (10.94 seconds)
Cbc0010I After 11 nodes, 4 on tree, -104.67831 best solution, best possible -148.29347 (11.68 seconds)
Cbc0012I Integer solution of -104.92248 found by rounding after 19012 iterations and 15 nodes (12.14 seconds)
Cbc0010I After 18 nodes, 9 on tree, -104.92248 best solution, best possible -148.29347 (12.46 seconds)
Cbc0016I Integer solution of -105.35648 found by strong branching after 19970 iterations and 30 nodes (12.67 seconds)
Cbc0016I Integer solution of -106.97721 found by strong branching after 20018 iterations and 32 nodes (12.69 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 31 rows 33 columns
Cbc0010I After 58 nodes, 10 on tree, -106.97721 best solution, best possible -148.29347 (13.19 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 86 rows 101 columns
Cbc0012I Integer solution of -107.97221 found by RINS after 23211 iterations and 92 nodes (14.27 seconds)
Cbc0010I After 92 nodes, 14 on tree, -107.97221 best solution, best possible -148.29347 (14.27 seconds)
Cbc0010I After 145 nodes, 23 on tree, -107.97221 best solution, best possible -148.29347 (14.97 seconds)
Cbc0010I After 218 nodes, 22 on tree, -107.97221 best solution, best possible -148.29347 (15.68 seconds)
Cbc0010I After 290 nodes, 32 on tree, -107.97221 best solution, best possible -148.29347 (16.40 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 49 rows 62 columns
Cbc0010I After 364 nodes, 31 on tree, -107.97221 best solution, best possible -148.29347 (17.12 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 53 rows 68 columns
Cbc0010I After 422 nodes, 33 on tree, -107.97221 best solution, best possible -148.29347 (17.82 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 47 rows 64 columns
Cbc0010I After 500 nodes, 34 on tree, -107.97221 best solution, best possible -148.29347 (18.58 seconds)
Cbc0010I After 570 nodes, 34 on tree, -107.97221 best solution, best possible -148.29347 (19.28 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 50 rows 69 columns
Cbc0012I Integer solution of -108.22298 found by rounding after 50077 iterations and 620 nodes (19.93 seconds)
Cbc0010I After 630 nodes, 27 on tree, -108.22298 best solution, best possible -148.29347 (20.00 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 76 rows 90 columns
Cbc0010I After 700 nodes, 21 on tree, -108.22298 best solution, best possible -148.29347 (20.87 seconds)
Cbc0010I After 781 nodes, 15 on tree, -108.22298 best solution, best possible -148.29347 (21.58 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 89 rows 100 columns
Cbc0010I After 820 nodes, 1 on tree, -108.22298 best solution, best possible -148.29054 (22.74 seconds)
Cbc0010I After 822 nodes, 3 on tree, -108.22298 best solution, best possible -148.29054 (23.72 seconds)
Cbc0010I After 825 nodes, 4 on tree, -108.22298 best solution, best possible -148.29054 (24.60 seconds)
Cbc0010I After 829 nodes, 6 on tree, -108.22298 best solution, best possible -148.29054 (25.36 seconds)
Cbc0010I After 831 nodes, 8 on tree, -108.22298 best solution, best possible -148.29054 (26.14 seconds)
Cbc0010I After 840 nodes, 10 on tree, -108.22298 best solution, best possible -148.29054 (26.85 seconds)
Cbc0010I After 875 nodes, 12 on tree, -108.22298 best solution, best possible -148.29054 (27.59 seconds)
Cbc0010I After 896 nodes, 17 on tree, -108.22298 best solution, best possible -148.29054 (28.30 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 7 rows 13 columns
Cbc0010I After 920 nodes, 16 on tree, -108.22298 best solution, best possible -148.29054 (29.00 seconds)
Cbc0010I After 949 nodes, 18 on tree, -108.22298 best solution, best possible -148.29054 (29.80 seconds)
Cbc0010I After 982 nodes, 21 on tree, -108.22298 best solution, best possible -148.29054 (30.50 seconds)
Cbc0010I After 1011 nodes, 30 on tree, -108.22298 best solution, best possible -148.29054 (31.26 seconds)
Cbc0010I After 1041 nodes, 37 on tree, -108.22298 best solution, best possible -148.29054 (31.99 seconds)
Cbc0010I After 1066 nodes, 41 on tree, -108.22298 best solution, best possible -148.29054 (32.73 seconds)
Cbc0010I After 1101 nodes, 36 on tree, -108.22298 best solution, best possible -148.29054 (33.46 seconds)
Cbc0010I After 1156 nodes, 43 on tree, -108.22298 best solution, best possible -148.29054 (34.18 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 131 rows 152 columns
Cbc0010I After 1220 nodes, 37 on tree, -108.22298 best solution, best possible -148.29054 (34.90 seconds)
Cbc0010I After 1267 nodes, 46 on tree, -108.22298 best solution, best possible -148.29054 (35.60 seconds)
Cbc0010I After 1329 nodes, 28 on tree, -108.22298 best solution, best possible -148.29054 (36.32 seconds)
Cbc0010I After 1368 nodes, 33 on tree, -108.22298 best solution, best possible -148.29054 (37.06 seconds)
Cbc0010I After 1413 nodes, 34 on tree, -108.22298 best solution, best possible -148.29054 (37.78 seconds)
Cbc0010I After 1444 nodes, 55 on tree, -108.22298 best solution, best possible -148.29054 (38.48 seconds)
Cbc0010I After 1515 nodes, 22 on tree, -108.22298 best solution, best possible -148.29054 (39.19 seconds)
Cbc0010I After 1551 nodes, 36 on tree, -108.22298 best solution, best possible -148.29054 (39.89 seconds)
Cbc0010I After 1606 nodes, 16 on tree, -108.22298 best solution, best possible -148.29054 (40.60 seconds)
Cbc0010I After 1650 nodes, 26 on tree, -108.22298 best solution, best possible -148.29054 (41.30 seconds)
Cbc0010I After 1695 nodes, 29 on tree, -108.22298 best solution, best possible -148.29054 (42.03 seconds)
Cbc0010I After 1733 nodes, 23 on tree, -108.22298 best solution, best possible -148.29054 (42.75 seconds)
Cbc0010I After 1773 nodes, 18 on tree, -108.22298 best solution, best possible -148.29054 (43.46 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 82 rows 94 columns
Cbc0010I After 1814 nodes, 12 on tree, -108.22298 best solution, best possible -148.29054 (44.19 seconds)
Cbc0010I After 1844 nodes, 11 on tree, -108.22298 best solution, best possible -148.29054 (44.91 seconds)
Cbc0010I After 1881 nodes, 7 on tree, -108.22298 best solution, best possible -148.29054 (45.62 seconds)
Cbc0010I After 1907 nodes, 4 on tree, -108.22298 best solution, best possible -148.29054 (46.97 seconds)
Cbc0010I After 1910 nodes, 7 on tree, -108.22298 best solution, best possible -148.29054 (47.77 seconds)
Cbc0010I After 1911 nodes, 7 on tree, -108.22298 best solution, best possible -148.29054 (48.54 seconds)
Cbc0001I Search completed - best objective -108.22298, took 162299 iterations and 1918 nodes (48.64 seconds)
Cbc0032I Strong branching done 5050 times (124012 iterations), fathomed 28 nodes and fixed 96 variables
Cbc0035I Maximum depth 69, 7615 variables fixed on reduced cost
Total time (CPU seconds):       47.12   (Wallclock seconds):       48.76

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 507 (-20) rows, 262 (-2) columns and 1507 (-38) elements
Clp1000I sum of infeasibilities 0.000195145 - average 3.84902e-07, 85 fixed columns
Coin0506I Presolve 332 (-175) rows, 174 (-88) columns and 984 (-523) elements
Clp0029I End of values pass after 174 iterations
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Coin0511I After Postsolve, objective 167.81899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Clp0000I Optimal - objective value 167.81899
Coin0511I After Postsolve, objective 167.81899, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 167.8189857 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.06

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 507 rows, 262 columns (261 integer (261 of which binary)) and 1507 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.367%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 107 integers unsatisfied sum - 12.1292
Cbc0038I Solution found of 9.71428
Cbc0038I Relaxing continuous gives -1.67061
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 201 rows 108 columns
Cbc0038I Mini branch and bound improved solution from -1.67061 to -97.9897 (0.10 seconds)
Cbc0038I Round again with cutoff of -104.973
Cbc0038I Pass   1: suminf.    4.72776 (46) obj. -104.973 iterations 220
Cbc0038I Pass   2: suminf.    4.40270 (37) obj. -104.973 iterations 25
Cbc0038I Pass   3: suminf.    2.43876 (9) obj. -104.973 iterations 73
Cbc0038I Pass   4: suminf.    2.01423 (9) obj. -104.973 iterations 28
Cbc0038I Pass   5: suminf.    3.48015 (10) obj. -104.973 iterations 30
Cbc0038I Pass   6: suminf.    1.96900 (7) obj. -104.973 iterations 19
Cbc0038I Pass   7: suminf.    1.88243 (7) obj. -104.973 iterations 7
Cbc0038I Pass   8: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass   9: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  10: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  11: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  12: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  13: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  14: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  15: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  16: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  17: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  18: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  19: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  20: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  21: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  22: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  23: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  24: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  25: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I Pass  26: suminf.    1.88243 (7) obj. -104.973 iterations 14
Cbc0038I Pass  27: suminf.    1.88243 (7) obj. -104.973 iterations 0
Cbc0038I Pass  28: suminf.    2.22104 (6) obj. -104.973 iterations 24
Cbc0038I Pass  29: suminf.    2.21683 (6) obj. -104.973 iterations 18
Cbc0038I Pass  30: suminf.    3.09740 (9) obj. -104.973 iterations 37
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 143 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 223 rows 119 columns
Cbc0038I Mini branch and bound improved solution from -97.9897 to -103.723 (0.20 seconds)
Cbc0038I Round again with cutoff of -117.542
Cbc0038I Pass  30: suminf.    5.18133 (46) obj. -117.542 iterations 0
Cbc0038I Pass  31: suminf.    5.04897 (43) obj. -117.542 iterations 14
Cbc0038I Pass  32: suminf.    5.35656 (14) obj. -117.542 iterations 69
Cbc0038I Pass  33: suminf.    4.36507 (14) obj. -117.542 iterations 37
Cbc0038I Pass  34: suminf.    4.93535 (12) obj. -117.542 iterations 27
Cbc0038I Pass  35: suminf.    4.48023 (15) obj. -117.542 iterations 40
Cbc0038I Pass  36: suminf.    4.48023 (15) obj. -117.542 iterations 0
Cbc0038I Pass  37: suminf.    3.72951 (13) obj. -117.542 iterations 35
Cbc0038I Pass  38: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  39: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  40: suminf.    3.55394 (14) obj. -117.542 iterations 31
Cbc0038I Pass  41: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  42: suminf.    3.72951 (13) obj. -117.542 iterations 33
Cbc0038I Pass  43: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  44: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  45: suminf.    3.55394 (14) obj. -117.542 iterations 29
Cbc0038I Pass  46: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  47: suminf.    3.72951 (13) obj. -117.542 iterations 33
Cbc0038I Pass  48: suminf.    3.50638 (14) obj. -117.542 iterations 20
Cbc0038I Pass  49: suminf.    3.84885 (12) obj. -117.542 iterations 27
Cbc0038I Pass  50: suminf.    3.55394 (14) obj. -117.542 iterations 29
Cbc0038I Pass  51: suminf.    3.55394 (14) obj. -117.542 iterations 0
Cbc0038I Pass  52: suminf.    4.29834 (13) obj. -117.542 iterations 37
Cbc0038I Pass  53: suminf.    3.93282 (12) obj. -117.542 iterations 22
Cbc0038I Pass  54: suminf.    3.77513 (11) obj. -117.542 iterations 20
Cbc0038I Pass  55: suminf.    3.06287 (12) obj. -117.542 iterations 26
Cbc0038I Pass  56: suminf.    4.34133 (13) obj. -117.542 iterations 32
Cbc0038I Pass  57: suminf.    5.00601 (20) obj. -117.542 iterations 59
Cbc0038I Pass  58: suminf.    3.30203 (13) obj. -117.542 iterations 53
Cbc0038I Pass  59: suminf.    3.06024 (15) obj. -117.542 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 138 integers at bound fixed and 0 continuous
Cbc0038I Full problem 507 rows 262 columns, reduced to 233 rows 124 columns
Cbc0038I Mini branch and bound did not improve solution (0.36 seconds)
Cbc0038I After 0.36 seconds - Feasibility pump exiting with objective of -103.723 - took 0.33 seconds
Cbc0012I Integer solution of -103.72331 found by feasibility pump after 0 iterations and 0 nodes (0.36 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 201 rows 108 columns
Cbc0012I Integer solution of -104.65038 found by RINS after 0 iterations and 0 nodes (0.46 seconds)
Cbc0031I 46 added rows had average density of 110.28261
Cbc0013I At root node, 46 cuts changed objective from -167.81899 to -159.85328 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 69286 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.627 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3613 row cuts average 260.6 elements, 0 column cuts (0 active)  in 0.685 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.830 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 222 row cuts average 258.6 elements, 0 column cuts (0 active)  in 0.321 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -104.65038 best solution, best possible -159.85328 (7.61 seconds)
Cbc0010I After 7 nodes, 8 on tree, -104.65038 best solution, best possible -159.85328 (8.34 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 238 rows 125 columns
Cbc0012I Integer solution of -104.67831 found by RINS after 26519 iterations and 41 nodes (8.96 seconds)
Cbc0010I After 45 nodes, 17 on tree, -104.67831 best solution, best possible -159.85328 (9.05 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 109 rows 64 columns
Cbc0012I Integer solution of -105.35648 found by RINS after 29576 iterations and 93 nodes (9.52 seconds)
Cbc0010I After 134 nodes, 26 on tree, -105.35648 best solution, best possible -159.85328 (9.75 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 29 rows 20 columns
Cbc0012I Integer solution of -108.22298 found by rounding after 35047 iterations and 213 nodes (10.05 seconds)
Cbc0010I After 292 nodes, 26 on tree, -108.22298 best solution, best possible -159.85328 (10.45 seconds)
Cbc0038I Full problem 507 rows 262 columns, reduced to 19 rows 17 columns
Cbc0010I After 451 nodes, 4 on tree, -108.22298 best solution, best possible -159.85328 (11.16 seconds)
Cbc0001I Search completed - best objective -108.22298, took 44789 iterations and 464 nodes (11.32 seconds)
Cbc0032I Strong branching done 4172 times (96449 iterations), fathomed 64 nodes and fixed 244 variables
Cbc0035I Maximum depth 95, 1822 variables fixed on reduced cost
Total time (CPU seconds):       11.04   (Wallclock seconds):       11.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 367 (-160) rows, 382 (-143) columns and 18055 (-17682) elements
Clp1000I sum of infeasibilities 2.14151e-06 - average 5.83518e-09, 185 fixed columns
Coin0506I Presolve 184 (-183) rows, 197 (-185) columns and 736 (-17319) elements
Clp0006I 0  Obj 12.353308 Dual inf 6259.4377 (197)
Clp0029I End of values pass after 160 iterations
Clp0014I Perturbing problem by 0.001% of 0.14614029 - largest nonzero change 2.7226084e-05 ( 0.0024750985%) - largest zero change 2.9996354e-05
Clp0000I Optimal - objective value 14.603375
Clp0000I Optimal - objective value 14.603375
Coin0511I After Postsolve, objective 14.603375, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 14.603375 Dual inf 236.91382 (122)
Clp0014I Perturbing problem by 0.001% of 1.728261 - largest nonzero change 2.9019187e-05 ( 0.0029019187%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 197.71347
Clp0000I Optimal - objective value 197.71347
Clp0000I Optimal - objective value 197.71347
Coin0511I After Postsolve, objective 197.71347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 197.7134744 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.16

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 367 rows, 382 columns (382 integer (382 of which binary)) and 18055 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.014%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 119 integers unsatisfied sum - 6.18637
Cbc0038I Pass   1: suminf.    3.63649 (96) obj. -154.231 iterations 63
Cbc0038I Pass   2: suminf.    3.63649 (96) obj. -154.231 iterations 1
Cbc0038I Pass   3: suminf.    3.01151 (84) obj. -124.878 iterations 12
Cbc0038I Pass   4: suminf.    1.97199 (62) obj. -95.3441 iterations 22
Cbc0038I Pass   5: suminf.    1.36212 (47) obj. -76.1723 iterations 15
Cbc0038I Pass   6: suminf.    0.52326 (22) obj. -52.0112 iterations 25
Cbc0038I Pass   7: suminf.    0.21351 (11) obj. -40.3493 iterations 11
Cbc0038I Solution found of -27.5936
Cbc0038I Rounding solution of -57.4433 is better than previous of -27.5936

Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 382 columns, reduced to 23 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -71.4704
Cbc0038I Pass   8: suminf.    3.63649 (96) obj. -154.231 iterations 0
Cbc0038I Pass   9: suminf.    3.63649 (96) obj. -154.231 iterations 1
Cbc0038I Pass  10: suminf.    2.53019 (74) obj. -114.408 iterations 22
Cbc0038I Pass  11: suminf.    1.58887 (53) obj. -82.9067 iterations 21
Cbc0038I Pass  12: suminf.    1.23160 (31) obj. -71.4704 iterations 33
Cbc0038I Pass  13: suminf.    0.79086 (8) obj. -71.4704 iterations 93
Cbc0038I Pass  14: suminf.    0.64691 (3) obj. -74.129 iterations 11
Cbc0038I Pass  15: suminf.    0.49425 (5) obj. -71.4704 iterations 24
Cbc0038I Pass  16: suminf.    0.92988 (5) obj. -71.4704 iterations 7
Cbc0038I Pass  17: suminf.    1.98064 (21) obj. -71.4704 iterations 94
Cbc0038I Pass  18: suminf.    1.42296 (20) obj. -71.4704 iterations 19
Cbc0038I Pass  19: suminf.    1.05936 (7) obj. -71.4704 iterations 31
Cbc0038I Pass  20: suminf.    1.01783 (7) obj. -71.4704 iterations 9
Cbc0038I Pass  21: suminf.    1.05936 (7) obj. -71.4704 iterations 11
Cbc0038I Pass  22: suminf.    1.89252 (27) obj. -71.4704 iterations 63
Cbc0038I Pass  23: suminf.    1.78163 (32) obj. -71.4704 iterations 19
Cbc0038I Pass  24: suminf.    1.75716 (23) obj. -71.4704 iterations 25
Cbc0038I Pass  25: suminf.    1.53029 (25) obj. -71.4704 iterations 18
Cbc0038I Pass  26: suminf.    1.59345 (18) obj. -71.4704 iterations 45
Cbc0038I Pass  27: suminf.    1.39075 (17) obj. -71.4704 iterations 28
Cbc0038I Pass  28: suminf.    1.36928 (15) obj. -71.4704 iterations 25
Cbc0038I Pass  29: suminf.    1.22483 (12) obj. -71.4704 iterations 44
Cbc0038I Pass  30: suminf.    1.19961 (10) obj. -71.4704 iterations 28
Cbc0038I Pass  31: suminf.    1.21648 (12) obj. -71.4704 iterations 24
Cbc0038I Pass  32: suminf.    1.19135 (10) obj. -71.4704 iterations 25
Cbc0038I Pass  33: suminf.    1.22483 (12) obj. -71.4704 iterations 30
Cbc0038I Pass  34: suminf.    1.49646 (20) obj. -71.4704 iterations 58
Cbc0038I Pass  35: suminf.    1.02343 (19) obj. -74.7816 iterations 15
Cbc0038I Pass  36: suminf.    2.00737 (11) obj. -71.4704 iterations 27
Cbc0038I Pass  37: suminf.    1.33775 (10) obj. -71.4704 iterations 13
Cbc0038I Rounding solution of -60.455 is better than previous of -57.4433

Cbc0038I Before mini branch and bound, 242 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 382 columns, reduced to 124 rows 136 columns - 32 fixed gives 91, 103 - ok now
Cbc0038I Full problem 367 rows 382 columns, reduced to 21 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -60.455 to -63.9106 (0.25 seconds)
Cbc0038I Round again with cutoff of -96.719
Cbc0038I Pass  37: suminf.    3.63649 (96) obj. -154.231 iterations 0
Cbc0038I Pass  38: suminf.    3.63649 (96) obj. -154.231 iterations 1
Cbc0038I Pass  39: suminf.    2.43514 (72) obj. -110.598 iterations 24
Cbc0038I Pass  40: suminf.    1.81593 (52) obj. -96.719 iterations 29
Cbc0038I Pass  41: suminf.    1.51173 (51) obj. -104.019 iterations 8
Cbc0038I Pass  42: suminf.    1.21681 (25) obj. -96.719 iterations 77
Cbc0038I Pass  43: suminf.    1.02493 (24) obj. -96.719 iterations 13
Cbc0038I Pass  44: suminf.    1.24846 (13) obj. -96.719 iterations 75
Cbc0038I Pass  45: suminf.    1.24846 (13) obj. -96.719 iterations 0
Cbc0038I Pass  46: suminf.    1.71798 (25) obj. -96.719 iterations 63
Cbc0038I Pass  47: suminf.    1.71798 (25) obj. -96.719 iterations 3
Cbc0038I Pass  48: suminf.    1.64746 (21) obj. -96.719 iterations 41
Cbc0038I Pass  49: suminf.    1.64375 (21) obj. -96.719 iterations 27
Cbc0038I Pass  50: suminf.    1.68703 (23) obj. -96.719 iterations 24
Cbc0038I Pass  51: suminf.    1.67377 (21) obj. -96.719 iterations 22
Cbc0038I Pass  52: suminf.    1.67406 (22) obj. -96.719 iterations 29
Cbc0038I Pass  53: suminf.    2.15056 (33) obj. -96.719 iterations 73
Cbc0038I Pass  54: suminf.    2.15056 (33) obj. -96.719 iterations 17
Cbc0038I Pass  55: suminf.    1.66067 (28) obj. -96.719 iterations 21
Cbc0038I Pass  56: suminf.    1.48957 (28) obj. -96.719 iterations 17
Cbc0038I Pass  57: suminf.    1.59839 (23) obj. -96.719 iterations 44
Cbc0038I Pass  58: suminf.    1.48649 (24) obj. -96.719 iterations 5
Cbc0038I Pass  59: suminf.    2.70288 (22) obj. -96.719 iterations 28
Cbc0038I Pass  60: suminf.    1.56371 (21) obj. -96.719 iterations 6
Cbc0038I Pass  61: suminf.    1.48242 (22) obj. -96.719 iterations 16
Cbc0038I Pass  62: suminf.    2.70288 (22) obj. -96.719 iterations 25
Cbc0038I Pass  63: suminf.    2.32559 (46) obj. -96.719 iterations 80
Cbc0038I Pass  64: suminf.    1.96927 (41) obj. -96.719 iterations 38
Cbc0038I Pass  65: suminf.    2.04404 (33) obj. -96.719 iterations 46
Cbc0038I Pass  66: suminf.    1.77446 (33) obj. -96.719 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 367 rows 382 columns, reduced to 36 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.33 seconds)
Cbc0038I After 0.33 seconds - Feasibility pump exiting with objective of -63.9106 - took 0.23 seconds
Cbc0012I Integer solution of -63.91064 found by feasibility pump after 0 iterations and 0 nodes (0.33 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 16 rows 22 columns
Cbc0012I Integer solution of -69.91064 found by RINS after 0 iterations and 0 nodes (0.39 seconds)
Cbc0031I 143 added rows had average density of 81.538462
Cbc0013I At root node, 143 cuts changed objective from -197.71347 to -148.29347 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 43308 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.550 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3508 row cuts average 368.5 elements, 0 column cuts (0 active)  in 1.425 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 322 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6474 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.270 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2028 row cuts average 21.9 elements, 0 column cuts (0 active)  in 1.041 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 353 row cuts average 243.4 elements, 0 column cuts (0 active)  in 0.338 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 316 row cuts average 38.1 elements, 0 column cuts (0 active)  in 0.862 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -69.91064 best solution, best possible -148.29347 (10.32 seconds)
Cbc0010I After 1 nodes, 2 on tree, -69.91064 best solution, best possible -148.29347 (11.05 seconds)
Cbc0012I Integer solution of -99.9786 found by rounding after 18367 iterations and 2 nodes (11.06 seconds)
Cbc0012I Integer solution of -100.87927 found by DiveCoefficient after 18367 iterations and 2 nodes (11.07 seconds)
Cbc0012I Integer solution of -104.67831 found by DiveCoefficient after 18424 iterations and 3 nodes (11.10 seconds)
Cbc0010I After 11 nodes, 4 on tree, -104.67831 best solution, best possible -148.29347 (11.85 seconds)
Cbc0012I Integer solution of -104.92248 found by rounding after 19012 iterations and 15 nodes (12.31 seconds)
Cbc0010I After 18 nodes, 9 on tree, -104.92248 best solution, best possible -148.29347 (12.63 seconds)
Cbc0016I Integer solution of -105.35648 found by strong branching after 19970 iterations and 30 nodes (12.83 seconds)
Cbc0016I Integer solution of -106.97721 found by strong branching after 20018 iterations and 32 nodes (12.86 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 31 rows 33 columns
Cbc0010I After 58 nodes, 10 on tree, -106.97721 best solution, best possible -148.29347 (13.34 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 86 rows 101 columns
Cbc0012I Integer solution of -107.97221 found by RINS after 23211 iterations and 92 nodes (14.42 seconds)
Cbc0010I After 92 nodes, 14 on tree, -107.97221 best solution, best possible -148.29347 (14.42 seconds)
Cbc0010I After 145 nodes, 23 on tree, -107.97221 best solution, best possible -148.29347 (15.12 seconds)
Cbc0010I After 218 nodes, 22 on tree, -107.97221 best solution, best possible -148.29347 (15.83 seconds)
Cbc0010I After 288 nodes, 30 on tree, -107.97221 best solution, best possible -148.29347 (16.53 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 49 rows 62 columns
Cbc0010I After 358 nodes, 31 on tree, -107.97221 best solution, best possible -148.29347 (17.24 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 53 rows 68 columns
Cbc0010I After 410 nodes, 36 on tree, -107.97221 best solution, best possible -148.29347 (17.95 seconds)
Cbc0010I After 490 nodes, 32 on tree, -107.97221 best solution, best possible -148.29347 (18.65 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 47 rows 64 columns
Cbc0010I After 554 nodes, 33 on tree, -107.97221 best solution, best possible -148.29347 (19.36 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 50 rows 69 columns
Cbc0010I After 603 nodes, 34 on tree, -107.97221 best solution, best possible -148.29347 (20.07 seconds)
Cbc0012I Integer solution of -108.22298 found by rounding after 50077 iterations and 620 nodes (20.21 seconds)
Cbc0010I After 695 nodes, 22 on tree, -108.22298 best solution, best possible -148.29347 (20.77 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 76 rows 90 columns
Cbc0010I After 746 nodes, 18 on tree, -108.22298 best solution, best possible -148.29347 (21.50 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 89 rows 100 columns
Cbc0010I After 814 nodes, 6 on tree, -108.22298 best solution, best possible -148.29347 (22.21 seconds)
Cbc0010I After 820 nodes, 1 on tree, -108.22298 best solution, best possible -148.29054 (22.95 seconds)
Cbc0010I After 822 nodes, 3 on tree, -108.22298 best solution, best possible -148.29054 (23.94 seconds)
Cbc0010I After 825 nodes, 4 on tree, -108.22298 best solution, best possible -148.29054 (24.82 seconds)
Cbc0010I After 829 nodes, 6 on tree, -108.22298 best solution, best possible -148.29054 (25.58 seconds)
Cbc0010I After 831 nodes, 8 on tree, -108.22298 best solution, best possible -148.29054 (26.35 seconds)
Cbc0010I After 840 nodes, 10 on tree, -108.22298 best solution, best possible -148.29054 (27.06 seconds)
Cbc0010I After 875 nodes, 12 on tree, -108.22298 best solution, best possible -148.29054 (27.81 seconds)
Cbc0010I After 896 nodes, 17 on tree, -108.22298 best solution, best possible -148.29054 (28.51 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 7 rows 13 columns
Cbc0010I After 920 nodes, 16 on tree, -108.22298 best solution, best possible -148.29054 (29.21 seconds)
Cbc0010I After 948 nodes, 17 on tree, -108.22298 best solution, best possible -148.29054 (29.93 seconds)
Cbc0010I After 981 nodes, 21 on tree, -108.22298 best solution, best possible -148.29054 (30.72 seconds)
Cbc0010I After 1010 nodes, 29 on tree, -108.22298 best solution, best possible -148.29054 (31.42 seconds)
Cbc0010I After 1029 nodes, 48 on tree, -108.22298 best solution, best possible -148.29054 (32.14 seconds)
Cbc0010I After 1065 nodes, 40 on tree, -108.22298 best solution, best possible -148.29054 (32.87 seconds)
Cbc0010I After 1099 nodes, 34 on tree, -108.22298 best solution, best possible -148.29054 (33.59 seconds)
Cbc0010I After 1136 nodes, 49 on tree, -108.22298 best solution, best possible -148.29054 (34.29 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 131 rows 152 columns
Cbc0010I After 1200 nodes, 43 on tree, -108.22298 best solution, best possible -148.29054 (35.01 seconds)
Cbc0010I After 1260 nodes, 39 on tree, -108.22298 best solution, best possible -148.29054 (35.72 seconds)
Cbc0010I After 1321 nodes, 33 on tree, -108.22298 best solution, best possible -148.29054 (36.43 seconds)
Cbc0010I After 1364 nodes, 29 on tree, -108.22298 best solution, best possible -148.29054 (37.20 seconds)
Cbc0010I After 1409 nodes, 30 on tree, -108.22298 best solution, best possible -148.29054 (37.91 seconds)
Cbc0010I After 1438 nodes, 49 on tree, -108.22298 best solution, best possible -148.29054 (38.61 seconds)
Cbc0010I After 1514 nodes, 21 on tree, -108.22298 best solution, best possible -148.29054 (39.37 seconds)
Cbc0010I After 1547 nodes, 32 on tree, -108.22298 best solution, best possible -148.29054 (40.07 seconds)
Cbc0010I After 1605 nodes, 15 on tree, -108.22298 best solution, best possible -148.29054 (40.81 seconds)
Cbc0010I After 1649 nodes, 25 on tree, -108.22298 best solution, best possible -148.29054 (41.52 seconds)
Cbc0010I After 1692 nodes, 26 on tree, -108.22298 best solution, best possible -148.29054 (42.23 seconds)
Cbc0010I After 1726 nodes, 22 on tree, -108.22298 best solution, best possible -148.29054 (42.94 seconds)
Cbc0010I After 1769 nodes, 15 on tree, -108.22298 best solution, best possible -148.29054 (43.66 seconds)
Cbc0038I Full problem 367 rows 382 columns, reduced to 82 rows 94 columns
Cbc0010I After 1808 nodes, 10 on tree, -108.22298 best solution, best possible -148.29054 (44.36 seconds)
Cbc0010I After 1833 nodes, 16 on tree, -108.22298 best solution, best possible -148.29054 (45.07 seconds)
Cbc0010I After 1871 nodes, 9 on tree, -108.22298 best solution, best possible -148.29054 (45.78 seconds)
Cbc0010I After 1907 nodes, 4 on tree, -108.22298 best solution, best possible -148.29054 (47.30 seconds)
Cbc0010I After 1910 nodes, 7 on tree, -108.22298 best solution, best possible -148.29054 (48.09 seconds)
Cbc0010I After 1911 nodes, 7 on tree, -108.22298 best solution, best possible -148.29054 (48.84 seconds)
Cbc0001I Search completed - best objective -108.22298, took 162299 iterations and 1918 nodes (48.95 seconds)
Cbc0032I Strong branching done 5050 times (124012 iterations), fathomed 28 nodes and fixed 96 variables
Cbc0035I Maximum depth 69, 7615 variables fixed on reduced cost
Total time (CPU seconds):       47.42   (Wallclock seconds):       49.06

