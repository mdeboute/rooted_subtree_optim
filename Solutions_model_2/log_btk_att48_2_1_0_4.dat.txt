Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 61 (-38) rows, 35 (-15) columns and 154 (-131) elements
Clp0000I Optimal - objective value 14793.686
Coin0511I After Postsolve, objective 14793.686, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14793.68566 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 61 rows, 35 columns (34 integer (34 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.414%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.06128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13431.2 iterations 13
Cbc0038I Solution found of -13431.2
Cbc0038I Relaxing continuous gives -13431.2
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -13431.2 to -13431.2 (0.00 seconds)
Cbc0038I Round again with cutoff of -13567.4
Cbc0038I Pass   2: suminf.    0.10405 (4) obj. -13567.4 iterations 7
Cbc0038I Pass   3: suminf.    0.10405 (4) obj. -13567.4 iterations 2
Cbc0038I Pass   4: suminf.    0.35715 (3) obj. -13567.4 iterations 10
Cbc0038I Pass   5: suminf.    0.42882 (2) obj. -13567.4 iterations 6
Cbc0038I Pass   6: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass   7: suminf.    1.24059 (6) obj. -13567.4 iterations 10
Cbc0038I Pass   8: suminf.    0.10313 (4) obj. -13567.4 iterations 4
Cbc0038I Pass   9: suminf.    0.04657 (2) obj. -13567.4 iterations 7
Cbc0038I Pass  10: suminf.    2.00000 (6) obj. -13567.4 iterations 7
Cbc0038I Pass  11: suminf.    1.02662 (8) obj. -13567.4 iterations 7
Cbc0038I Pass  12: suminf.    1.00000 (9) obj. -13567.4 iterations 1
Cbc0038I Pass  13: suminf.    2.33428 (7) obj. -13567.4 iterations 10
Cbc0038I Pass  14: suminf.    0.10405 (4) obj. -13567.4 iterations 13
Cbc0038I Pass  15: suminf.    0.10405 (4) obj. -13567.4 iterations 1
Cbc0038I Pass  16: suminf.    0.35715 (3) obj. -13567.4 iterations 8
Cbc0038I Pass  17: suminf.    0.42882 (2) obj. -13567.4 iterations 5
Cbc0038I Pass  18: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass  19: suminf.    1.29027 (5) obj. -13567.4 iterations 6
Cbc0038I Pass  20: suminf.    0.10425 (2) obj. -13567.4 iterations 7
Cbc0038I Pass  21: suminf.    0.05212 (1) obj. -13567.4 iterations 1
Cbc0038I Pass  22: suminf.    0.31502 (1) obj. -13567.4 iterations 1
Cbc0038I Pass  23: suminf.    1.84658 (5) obj. -13567.4 iterations 8
Cbc0038I Pass  24: suminf.    1.33268 (5) obj. -13567.4 iterations 4
Cbc0038I Pass  25: suminf.    0.57440 (4) obj. -13567.4 iterations 1
Cbc0038I Pass  26: suminf.    0.35715 (3) obj. -13567.4 iterations 9
Cbc0038I Pass  27: suminf.    0.35715 (3) obj. -13567.4 iterations 0
Cbc0038I Pass  28: suminf.    0.42882 (2) obj. -13567.4 iterations 4
Cbc0038I Pass  29: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass  30: suminf.    0.36656 (3) obj. -13567.4 iterations 15
Cbc0038I Pass  31: suminf.    0.26518 (2) obj. -13567.4 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 18 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -13431.2 to -13482 (0.01 seconds)
Cbc0038I Round again with cutoff of -13812.7
Cbc0038I Pass  31: suminf.    0.44113 (4) obj. -13812.7 iterations 0
Cbc0038I Pass  32: suminf.    0.44113 (4) obj. -13812.7 iterations 2
Cbc0038I Pass  33: suminf.    0.59808 (3) obj. -13812.7 iterations 15
Cbc0038I Pass  34: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  35: suminf.    0.60727 (3) obj. -13812.7 iterations 8
Cbc0038I Pass  36: suminf.    2.00000 (7) obj. -13812.7 iterations 10
Cbc0038I Pass  37: suminf.    0.44113 (4) obj. -13812.7 iterations 8
Cbc0038I Pass  38: suminf.    0.44113 (4) obj. -13812.7 iterations 2
Cbc0038I Pass  39: suminf.    0.59808 (3) obj. -13812.7 iterations 13
Cbc0038I Pass  40: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  41: suminf.    0.60727 (3) obj. -13812.7 iterations 7
Cbc0038I Pass  42: suminf.    2.39774 (10) obj. -13812.7 iterations 12
Cbc0038I Pass  43: suminf.    2.00000 (7) obj. -13812.7 iterations 16
Cbc0038I Pass  44: suminf.    0.67096 (5) obj. -13812.7 iterations 9
Cbc0038I Pass  45: suminf.    0.67096 (5) obj. -13812.7 iterations 0
Cbc0038I Pass  46: suminf.    2.04624 (9) obj. -13812.7 iterations 15
Cbc0038I Pass  47: suminf.    0.91794 (5) obj. -13812.7 iterations 11
Cbc0038I Pass  48: suminf.    0.59808 (3) obj. -13812.7 iterations 2
Cbc0038I Pass  49: suminf.    0.60727 (3) obj. -13812.7 iterations 6
Cbc0038I Pass  50: suminf.    2.06658 (7) obj. -13812.7 iterations 9
Cbc0038I Pass  51: suminf.    0.44113 (4) obj. -13812.7 iterations 5
Cbc0038I Pass  52: suminf.    0.44113 (4) obj. -13812.7 iterations 1
Cbc0038I Pass  53: suminf.    0.59808 (3) obj. -13812.7 iterations 14
Cbc0038I Pass  54: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  55: suminf.    0.60727 (3) obj. -13812.7 iterations 7
Cbc0038I Pass  56: suminf.    2.26168 (13) obj. -13812.7 iterations 11
Cbc0038I Pass  57: suminf.    2.12744 (9) obj. -13812.7 iterations 1
Cbc0038I Pass  58: suminf.    0.91794 (5) obj. -13812.7 iterations 11
Cbc0038I Pass  59: suminf.    1.35151 (6) obj. -13812.7 iterations 3
Cbc0038I Pass  60: suminf.    1.27814 (4) obj. -13812.7 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -13482 - took 0.05 seconds
Cbc0012I Integer solution of -13482.033 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 61 rows 35 columns, reduced to 11 rows 9 columns
Cbc0031I 10 added rows had average density of 10.2
Cbc0013I At root node, 10 cuts changed objective from -14793.686 to -13815.115 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 96 row cuts average 5.7 elements, 6 column cuts (6 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13482.033, took 175 iterations and 6 nodes (0.48 seconds)
Cbc0032I Strong branching done 44 times (235 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.48

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-25) rows, 80 (-16) columns and 908 (-505) elements
Clp1000I sum of infeasibilities 1.35946e-07 - average 1.86227e-09, 33 fixed columns
Coin0506I Presolve 38 (-35) rows, 38 (-42) columns and 134 (-774) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 16936.193
Clp0000I Optimal - objective value 16936.193
Coin0511I After Postsolve, objective 16936.193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9656449 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 17118.843
Clp0000I Optimal - objective value 17118.843
Clp0000I Optimal - objective value 17118.843
Coin0511I After Postsolve, objective 17118.843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17118.84253 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 81 columns (81 integer (81 of which binary)) and 913 elements
Coin3009W Conflict graph built in 0.005 seconds, density: 6.703%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.4569
Cbc0038I Pass   1: suminf.    3.56883 (20) obj. -9289.01 iterations 32
Cbc0038I Pass   2: suminf.    3.56883 (20) obj. -9289.01 iterations 2
Cbc0038I Pass   3: suminf.    1.15532 (10) obj. -8071.52 iterations 10
Cbc0038I Solution found of -7649.88
Cbc0038I Rounding solution of -8264.47 is better than previous of -7649.88

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 81 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -8264.47 to -13074.6 (0.03 seconds)
Cbc0038I Round again with cutoff of -13408
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.94228 (35) obj. -13408 iterations 14
Cbc0038I Pass   5: suminf.    6.94228 (35) obj. -13408 iterations 1
Cbc0038I Pass   6: suminf.    3.16814 (21) obj. -13408 iterations 33
Cbc0038I Pass   7: suminf.    3.16814 (21) obj. -13408 iterations 1
Cbc0038I Pass   8: suminf.    1.45599 (11) obj. -13408 iterations 13
Cbc0038I Pass   9: suminf.    1.45599 (11) obj. -13408 iterations 3
Cbc0038I Pass  10: suminf.    0.37338 (3) obj. -13408 iterations 18
Cbc0038I Pass  11: suminf.    0.37338 (3) obj. -13408 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -13431.2 iterations 11
Cbc0038I Solution found of -13431.2
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 81 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -14026.7
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  13: suminf.    8.03271 (42) obj. -14026.7 iterations 7
Cbc0038I Pass  14: suminf.    8.03271 (42) obj. -14026.7 iterations 1
Cbc0038I Pass  15: suminf.    5.79561 (31) obj. -14026.7 iterations 11
Cbc0038I Pass  16: suminf.    5.79561 (31) obj. -14026.7 iterations 1
Cbc0038I Pass  17: suminf.    3.26501 (20) obj. -14026.7 iterations 12
Cbc0038I Pass  18: suminf.    3.26501 (20) obj. -14026.7 iterations 1
Cbc0038I Pass  19: suminf.    1.06621 (3) obj. -14026.7 iterations 27
Cbc0038I Pass  20: suminf.    1.06621 (3) obj. -14026.7 iterations 0
Cbc0038I Pass  21: suminf.    1.00000 (5) obj. -14026.7 iterations 11
Cbc0038I Pass  22: suminf.    1.02749 (4) obj. -14026.7 iterations 9
Cbc0038I Pass  23: suminf.    2.80637 (8) obj. -14026.7 iterations 15
Cbc0038I Pass  24: suminf.    2.69244 (8) obj. -14082.5 iterations 10
Cbc0038I Pass  25: suminf.    0.91672 (3) obj. -14026.7 iterations 26
Cbc0038I Pass  26: suminf.    0.91672 (3) obj. -14026.7 iterations 0
Cbc0038I Pass  27: suminf.    0.81721 (7) obj. -14026.7 iterations 22
Cbc0038I Pass  28: suminf.    0.81721 (7) obj. -14026.7 iterations 0
Cbc0038I Pass  29: suminf.    1.02749 (4) obj. -14026.7 iterations 5
Cbc0038I Pass  30: suminf.    1.00000 (5) obj. -14026.7 iterations 8
Cbc0038I Pass  31: suminf.    1.02749 (4) obj. -14026.7 iterations 7
Cbc0038I Pass  32: suminf.    2.72770 (10) obj. -14026.7 iterations 15
Cbc0038I Pass  33: suminf.    2.39024 (9) obj. -14026.7 iterations 5
Cbc0038I Pass  34: suminf.    1.49225 (3) obj. -14026.7 iterations 19
Cbc0038I Pass  35: suminf.    1.17374 (3) obj. -14026.7 iterations 5
Cbc0038I Pass  36: suminf.    1.37500 (6) obj. -14026.7 iterations 6
Cbc0038I Pass  37: suminf.    1.03647 (5) obj. -14026.7 iterations 7
Cbc0038I Pass  38: suminf.    1.03647 (5) obj. -14026.7 iterations 6
Cbc0038I Pass  39: suminf.    1.67367 (5) obj. -14026.7 iterations 7
Cbc0038I Pass  40: suminf.    4.59731 (13) obj. -14026.7 iterations 18
Cbc0038I Pass  41: suminf.    4.04742 (12) obj. -14026.7 iterations 4
Cbc0038I Pass  42: suminf.    1.85581 (5) obj. -14026.7 iterations 19
Cbc0038I Rounding solution of -13481.3 is better than previous of -13431.2

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 81 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -14741.3
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  42: suminf.    9.16059 (42) obj. -14741.3 iterations 0
Cbc0038I Pass  43: suminf.    9.16059 (42) obj. -14741.3 iterations 0
Cbc0038I Pass  44: suminf.    6.36637 (31) obj. -14741.3 iterations 16
Cbc0038I Pass  45: suminf.    6.36637 (31) obj. -14741.3 iterations 0
Cbc0038I Pass  46: suminf.    3.31902 (15) obj. -14741.3 iterations 23
Cbc0038I Pass  47: suminf.    3.31902 (15) obj. -14741.3 iterations 4
Cbc0038I Pass  48: suminf.    3.28846 (15) obj. -14741.3 iterations 11
Cbc0038I Pass  49: suminf.    3.28846 (15) obj. -14741.3 iterations 1
Cbc0038I Pass  50: suminf.    2.06912 (6) obj. -14741.3 iterations 22
Cbc0038I Pass  51: suminf.    2.00089 (8) obj. -14741.3 iterations 3
Cbc0038I Pass  52: suminf.    2.14595 (7) obj. -14741.3 iterations 11
Cbc0038I Pass  53: suminf.    2.03185 (7) obj. -14741.3 iterations 6
Cbc0038I Pass  54: suminf.    2.14595 (7) obj. -14741.3 iterations 6
Cbc0038I Pass  55: suminf.    3.61047 (12) obj. -14741.3 iterations 8
Cbc0038I Pass  56: suminf.    3.61047 (12) obj. -14741.3 iterations 1
Cbc0038I Pass  57: suminf.    2.14536 (7) obj. -14741.3 iterations 14
Cbc0038I Pass  58: suminf.    4.16013 (14) obj. -14741.3 iterations 13
Cbc0038I Pass  59: suminf.    3.90999 (12) obj. -14741.3 iterations 13
Cbc0038I Pass  60: suminf.    2.37426 (6) obj. -14741.3 iterations 10
Cbc0038I Pass  61: suminf.    2.22252 (8) obj. -14741.3 iterations 3
Cbc0038I Pass  62: suminf.    2.38421 (8) obj. -14741.3 iterations 5
Cbc0038I Pass  63: suminf.    2.38421 (8) obj. -14741.3 iterations 2
Cbc0038I Pass  64: suminf.    2.22252 (8) obj. -14741.3 iterations 5
Cbc0038I Pass  65: suminf.    3.57225 (13) obj. -14741.3 iterations 8
Cbc0038I Pass  66: suminf.    3.54889 (11) obj. -14741.3 iterations 1
Cbc0038I Pass  67: suminf.    3.25465 (11) obj. -14741.3 iterations 5
Cbc0038I Pass  68: suminf.    2.49335 (6) obj. -14741.3 iterations 14
Cbc0038I Pass  69: suminf.    2.24958 (6) obj. -14741.3 iterations 6
Cbc0038I Pass  70: suminf.    2.24958 (6) obj. -14741.3 iterations 0
Cbc0038I Pass  71: suminf.    2.49335 (6) obj. -14741.3 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 81 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -13481.3 - took 0.04 seconds
Cbc0012I Integer solution of -13481.257 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 74 rows 81 columns, reduced to 3 rows 4 columns
Cbc0012I Integer solution of -13482.033 found by DiveCoefficient after 70 iterations and 0 nodes (0.12 seconds)
Cbc0031I 11 added rows had average density of 7.5454545
Cbc0013I At root node, 11 cuts changed objective from -16408.709 to -13482.033 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 216 row cuts average 2.0 elements, 45 column cuts (45 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 15 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13482.033, took 70 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 61 (-38) rows, 35 (-15) columns and 154 (-131) elements
Clp0000I Optimal - objective value 14793.686
Coin0511I After Postsolve, objective 14793.686, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 14793.68566 - 30 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 61 rows, 35 columns (34 integer (34 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.414%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 1.06128
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13431.2 iterations 13
Cbc0038I Solution found of -13431.2
Cbc0038I Relaxing continuous gives -13431.2
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 10 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -13431.2 to -13431.2 (0.01 seconds)
Cbc0038I Round again with cutoff of -13567.4
Cbc0038I Pass   2: suminf.    0.10405 (4) obj. -13567.4 iterations 7
Cbc0038I Pass   3: suminf.    0.10405 (4) obj. -13567.4 iterations 2
Cbc0038I Pass   4: suminf.    0.35715 (3) obj. -13567.4 iterations 10
Cbc0038I Pass   5: suminf.    0.42882 (2) obj. -13567.4 iterations 6
Cbc0038I Pass   6: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass   7: suminf.    1.24059 (6) obj. -13567.4 iterations 10
Cbc0038I Pass   8: suminf.    0.10313 (4) obj. -13567.4 iterations 4
Cbc0038I Pass   9: suminf.    0.04657 (2) obj. -13567.4 iterations 7
Cbc0038I Pass  10: suminf.    2.00000 (6) obj. -13567.4 iterations 7
Cbc0038I Pass  11: suminf.    1.02662 (8) obj. -13567.4 iterations 7
Cbc0038I Pass  12: suminf.    1.00000 (9) obj. -13567.4 iterations 1
Cbc0038I Pass  13: suminf.    2.33428 (7) obj. -13567.4 iterations 10
Cbc0038I Pass  14: suminf.    0.10405 (4) obj. -13567.4 iterations 13
Cbc0038I Pass  15: suminf.    0.10405 (4) obj. -13567.4 iterations 1
Cbc0038I Pass  16: suminf.    0.35715 (3) obj. -13567.4 iterations 8
Cbc0038I Pass  17: suminf.    0.42882 (2) obj. -13567.4 iterations 5
Cbc0038I Pass  18: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass  19: suminf.    1.29027 (5) obj. -13567.4 iterations 6
Cbc0038I Pass  20: suminf.    0.10425 (2) obj. -13567.4 iterations 7
Cbc0038I Pass  21: suminf.    0.05212 (1) obj. -13567.4 iterations 1
Cbc0038I Pass  22: suminf.    0.31502 (1) obj. -13567.4 iterations 1
Cbc0038I Pass  23: suminf.    1.84658 (5) obj. -13567.4 iterations 8
Cbc0038I Pass  24: suminf.    1.33268 (5) obj. -13567.4 iterations 4
Cbc0038I Pass  25: suminf.    0.57440 (4) obj. -13567.4 iterations 1
Cbc0038I Pass  26: suminf.    0.35715 (3) obj. -13567.4 iterations 9
Cbc0038I Pass  27: suminf.    0.35715 (3) obj. -13567.4 iterations 0
Cbc0038I Pass  28: suminf.    0.42882 (2) obj. -13567.4 iterations 4
Cbc0038I Pass  29: suminf.    0.26829 (2) obj. -13567.4 iterations 1
Cbc0038I Pass  30: suminf.    0.36656 (3) obj. -13567.4 iterations 15
Cbc0038I Pass  31: suminf.    0.26518 (2) obj. -13567.4 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 18 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -13431.2 to -13482 (0.01 seconds)
Cbc0038I Round again with cutoff of -13812.7
Cbc0038I Pass  31: suminf.    0.44113 (4) obj. -13812.7 iterations 0
Cbc0038I Pass  32: suminf.    0.44113 (4) obj. -13812.7 iterations 2
Cbc0038I Pass  33: suminf.    0.59808 (3) obj. -13812.7 iterations 15
Cbc0038I Pass  34: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  35: suminf.    0.60727 (3) obj. -13812.7 iterations 8
Cbc0038I Pass  36: suminf.    2.00000 (7) obj. -13812.7 iterations 10
Cbc0038I Pass  37: suminf.    0.44113 (4) obj. -13812.7 iterations 8
Cbc0038I Pass  38: suminf.    0.44113 (4) obj. -13812.7 iterations 2
Cbc0038I Pass  39: suminf.    0.59808 (3) obj. -13812.7 iterations 13
Cbc0038I Pass  40: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  41: suminf.    0.60727 (3) obj. -13812.7 iterations 7
Cbc0038I Pass  42: suminf.    2.39774 (10) obj. -13812.7 iterations 12
Cbc0038I Pass  43: suminf.    2.00000 (7) obj. -13812.7 iterations 16
Cbc0038I Pass  44: suminf.    0.67096 (5) obj. -13812.7 iterations 9
Cbc0038I Pass  45: suminf.    0.67096 (5) obj. -13812.7 iterations 0
Cbc0038I Pass  46: suminf.    2.04624 (9) obj. -13812.7 iterations 15
Cbc0038I Pass  47: suminf.    0.91794 (5) obj. -13812.7 iterations 11
Cbc0038I Pass  48: suminf.    0.59808 (3) obj. -13812.7 iterations 2
Cbc0038I Pass  49: suminf.    0.60727 (3) obj. -13812.7 iterations 6
Cbc0038I Pass  50: suminf.    2.06658 (7) obj. -13812.7 iterations 9
Cbc0038I Pass  51: suminf.    0.44113 (4) obj. -13812.7 iterations 5
Cbc0038I Pass  52: suminf.    0.44113 (4) obj. -13812.7 iterations 1
Cbc0038I Pass  53: suminf.    0.59808 (3) obj. -13812.7 iterations 14
Cbc0038I Pass  54: suminf.    0.59808 (3) obj. -13812.7 iterations 0
Cbc0038I Pass  55: suminf.    0.60727 (3) obj. -13812.7 iterations 7
Cbc0038I Pass  56: suminf.    2.26168 (13) obj. -13812.7 iterations 11
Cbc0038I Pass  57: suminf.    2.12744 (9) obj. -13812.7 iterations 1
Cbc0038I Pass  58: suminf.    0.91794 (5) obj. -13812.7 iterations 11
Cbc0038I Pass  59: suminf.    1.35151 (6) obj. -13812.7 iterations 3
Cbc0038I Pass  60: suminf.    1.27814 (4) obj. -13812.7 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 61 rows 35 columns, reduced to 43 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -13482 - took 0.05 seconds
Cbc0012I Integer solution of -13482.033 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 61 rows 35 columns, reduced to 11 rows 9 columns
Cbc0031I 10 added rows had average density of 10.2
Cbc0013I At root node, 10 cuts changed objective from -14793.686 to -13815.115 in 16 passes
Cbc0014I Cut generator 0 (Probing) - 96 row cuts average 5.7 elements, 6 column cuts (6 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 40 row cuts average 16.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 6 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13482.033, took 175 iterations and 6 nodes (0.49 seconds)
Cbc0032I Strong branching done 44 times (235 iterations), fathomed 1 nodes and fixed 5 variables
Cbc0035I Maximum depth 2, 8 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 73 (-26) rows, 80 (-17) columns and 908 (-506) elements
Clp1000I sum of infeasibilities 1.35946e-07 - average 1.86227e-09, 33 fixed columns
Coin0506I Presolve 38 (-35) rows, 38 (-42) columns and 134 (-774) elements
Clp0029I End of values pass after 38 iterations
Clp0000I Optimal - objective value 16936.193
Clp0000I Optimal - objective value 16936.193
Coin0511I After Postsolve, objective 16936.193, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9656449 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 17118.843
Clp0000I Optimal - objective value 17118.843
Clp0000I Optimal - objective value 17118.843
Coin0511I After Postsolve, objective 17118.843, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 17118.84253 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 74 rows, 81 columns (81 integer (81 of which binary)) and 913 elements
Coin3009W Conflict graph built in 0.005 seconds, density: 6.703%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 13.4569
Cbc0038I Pass   1: suminf.    3.56883 (20) obj. -9289.01 iterations 32
Cbc0038I Pass   2: suminf.    3.56883 (20) obj. -9289.01 iterations 2
Cbc0038I Pass   3: suminf.    1.15532 (10) obj. -8071.52 iterations 10
Cbc0038I Solution found of -7649.88
Cbc0038I Rounding solution of -8264.47 is better than previous of -7649.88

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 81 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -8264.47 to -13074.6 (0.03 seconds)
Cbc0038I Round again with cutoff of -13408
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    6.94228 (35) obj. -13408 iterations 14
Cbc0038I Pass   5: suminf.    6.94228 (35) obj. -13408 iterations 1
Cbc0038I Pass   6: suminf.    3.16814 (21) obj. -13408 iterations 33
Cbc0038I Pass   7: suminf.    3.16814 (21) obj. -13408 iterations 1
Cbc0038I Pass   8: suminf.    1.45599 (11) obj. -13408 iterations 13
Cbc0038I Pass   9: suminf.    1.45599 (11) obj. -13408 iterations 3
Cbc0038I Pass  10: suminf.    0.37338 (3) obj. -13408 iterations 18
Cbc0038I Pass  11: suminf.    0.37338 (3) obj. -13408 iterations 0
Cbc0038I Pass  12: suminf.    0.00000 (0) obj. -13431.2 iterations 11
Cbc0038I Solution found of -13431.2
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 81 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -14026.7
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  13: suminf.    8.03271 (42) obj. -14026.7 iterations 7
Cbc0038I Pass  14: suminf.    8.03271 (42) obj. -14026.7 iterations 1
Cbc0038I Pass  15: suminf.    5.79561 (31) obj. -14026.7 iterations 11
Cbc0038I Pass  16: suminf.    5.79561 (31) obj. -14026.7 iterations 1
Cbc0038I Pass  17: suminf.    3.26501 (20) obj. -14026.7 iterations 12
Cbc0038I Pass  18: suminf.    3.26501 (20) obj. -14026.7 iterations 1
Cbc0038I Pass  19: suminf.    1.06621 (3) obj. -14026.7 iterations 27
Cbc0038I Pass  20: suminf.    1.06621 (3) obj. -14026.7 iterations 0
Cbc0038I Pass  21: suminf.    1.00000 (5) obj. -14026.7 iterations 11
Cbc0038I Pass  22: suminf.    1.02749 (4) obj. -14026.7 iterations 9
Cbc0038I Pass  23: suminf.    2.80637 (8) obj. -14026.7 iterations 15
Cbc0038I Pass  24: suminf.    2.69244 (8) obj. -14082.5 iterations 10
Cbc0038I Pass  25: suminf.    0.91672 (3) obj. -14026.7 iterations 26
Cbc0038I Pass  26: suminf.    0.91672 (3) obj. -14026.7 iterations 0
Cbc0038I Pass  27: suminf.    0.81721 (7) obj. -14026.7 iterations 22
Cbc0038I Pass  28: suminf.    0.81721 (7) obj. -14026.7 iterations 0
Cbc0038I Pass  29: suminf.    1.02749 (4) obj. -14026.7 iterations 5
Cbc0038I Pass  30: suminf.    1.00000 (5) obj. -14026.7 iterations 8
Cbc0038I Pass  31: suminf.    1.02749 (4) obj. -14026.7 iterations 7
Cbc0038I Pass  32: suminf.    2.72770 (10) obj. -14026.7 iterations 15
Cbc0038I Pass  33: suminf.    2.39024 (9) obj. -14026.7 iterations 5
Cbc0038I Pass  34: suminf.    1.49225 (3) obj. -14026.7 iterations 19
Cbc0038I Pass  35: suminf.    1.17374 (3) obj. -14026.7 iterations 5
Cbc0038I Pass  36: suminf.    1.37500 (6) obj. -14026.7 iterations 6
Cbc0038I Pass  37: suminf.    1.03647 (5) obj. -14026.7 iterations 7
Cbc0038I Pass  38: suminf.    1.03647 (5) obj. -14026.7 iterations 6
Cbc0038I Pass  39: suminf.    1.67367 (5) obj. -14026.7 iterations 7
Cbc0038I Pass  40: suminf.    4.59731 (13) obj. -14026.7 iterations 18
Cbc0038I Pass  41: suminf.    4.04742 (12) obj. -14026.7 iterations 4
Cbc0038I Pass  42: suminf.    1.85581 (5) obj. -14026.7 iterations 19
Cbc0038I Rounding solution of -13481.3 is better than previous of -13431.2

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 81 columns, reduced to 16 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -14741.3
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  42: suminf.    9.16059 (42) obj. -14741.3 iterations 0
Cbc0038I Pass  43: suminf.    9.16059 (42) obj. -14741.3 iterations 0
Cbc0038I Pass  44: suminf.    6.36637 (31) obj. -14741.3 iterations 16
Cbc0038I Pass  45: suminf.    6.36637 (31) obj. -14741.3 iterations 0
Cbc0038I Pass  46: suminf.    3.31902 (15) obj. -14741.3 iterations 23
Cbc0038I Pass  47: suminf.    3.31902 (15) obj. -14741.3 iterations 4
Cbc0038I Pass  48: suminf.    3.28846 (15) obj. -14741.3 iterations 11
Cbc0038I Pass  49: suminf.    3.28846 (15) obj. -14741.3 iterations 1
Cbc0038I Pass  50: suminf.    2.06912 (6) obj. -14741.3 iterations 22
Cbc0038I Pass  51: suminf.    2.00089 (8) obj. -14741.3 iterations 3
Cbc0038I Pass  52: suminf.    2.14595 (7) obj. -14741.3 iterations 11
Cbc0038I Pass  53: suminf.    2.03185 (7) obj. -14741.3 iterations 6
Cbc0038I Pass  54: suminf.    2.14595 (7) obj. -14741.3 iterations 6
Cbc0038I Pass  55: suminf.    3.61047 (12) obj. -14741.3 iterations 8
Cbc0038I Pass  56: suminf.    3.61047 (12) obj. -14741.3 iterations 1
Cbc0038I Pass  57: suminf.    2.14536 (7) obj. -14741.3 iterations 14
Cbc0038I Pass  58: suminf.    4.16013 (14) obj. -14741.3 iterations 13
Cbc0038I Pass  59: suminf.    3.90999 (12) obj. -14741.3 iterations 13
Cbc0038I Pass  60: suminf.    2.37426 (6) obj. -14741.3 iterations 10
Cbc0038I Pass  61: suminf.    2.22252 (8) obj. -14741.3 iterations 3
Cbc0038I Pass  62: suminf.    2.38421 (8) obj. -14741.3 iterations 5
Cbc0038I Pass  63: suminf.    2.38421 (8) obj. -14741.3 iterations 2
Cbc0038I Pass  64: suminf.    2.22252 (8) obj. -14741.3 iterations 5
Cbc0038I Pass  65: suminf.    3.57225 (13) obj. -14741.3 iterations 8
Cbc0038I Pass  66: suminf.    3.54889 (11) obj. -14741.3 iterations 1
Cbc0038I Pass  67: suminf.    3.25465 (11) obj. -14741.3 iterations 5
Cbc0038I Pass  68: suminf.    2.49335 (6) obj. -14741.3 iterations 14
Cbc0038I Pass  69: suminf.    2.24958 (6) obj. -14741.3 iterations 6
Cbc0038I Pass  70: suminf.    2.24958 (6) obj. -14741.3 iterations 0
Cbc0038I Pass  71: suminf.    2.49335 (6) obj. -14741.3 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 74 rows 81 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -13481.3 - took 0.04 seconds
Cbc0012I Integer solution of -13481.257 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 74 rows 81 columns, reduced to 3 rows 4 columns
Cbc0012I Integer solution of -13482.033 found by DiveCoefficient after 70 iterations and 0 nodes (0.12 seconds)
Cbc0031I 11 added rows had average density of 7.5454545
Cbc0013I At root node, 11 cuts changed objective from -16408.709 to -13482.033 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 216 row cuts average 2.0 elements, 45 column cuts (45 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 23.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 8 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 15 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -13482.033, took 70 iterations and 0 nodes (0.12 seconds)
Cbc0035I Maximum depth 0, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.09   (Wallclock seconds):       0.12

