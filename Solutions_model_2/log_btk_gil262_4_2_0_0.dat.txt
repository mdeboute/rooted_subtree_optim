Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 487 (-40) rows, 251 (-13) columns and 1451 (-94) elements
Clp1000I sum of infeasibilities 1.49191e-05 - average 3.06347e-08, 126 fixed columns
Coin0506I Presolve 215 (-272) rows, 118 (-133) columns and 653 (-798) elements
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 2.39498 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Coin0511I After Postsolve, objective 2993.2004, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1733708 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Coin0511I After Postsolve, objective 2993.2004, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2993.20038 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 487 rows, 251 columns (250 integer (250 of which binary)) and 1451 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.384%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.68999
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1288.5 iterations 87
Cbc0038I Solution found of -1288.5
Cbc0038I Relaxing continuous gives -1288.5
Cbc0038I Rounding solution of -2401.65 is better than previous of -1288.5

Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 487 rows 251 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2401.65 to -2824.4 (0.04 seconds)
Cbc0038I Round again with cutoff of -2841.28
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.15470 (7) obj. -2841.28 iterations 30
Cbc0038I Pass   3: suminf.    0.71616 (4) obj. -2841.28 iterations 29
Cbc0038I Pass   4: suminf.    2.31085 (11) obj. -2841.28 iterations 48
Cbc0038I Pass   5: suminf.    0.25033 (3) obj. -2841.28 iterations 59
Cbc0038I Pass   6: suminf.    0.18758 (3) obj. -2841.28 iterations 18
Cbc0038I Pass   7: suminf.    0.37012 (2) obj. -2841.28 iterations 17
Cbc0038I Pass   8: suminf.    0.34694 (1) obj. -2841.28 iterations 6
Cbc0038I Pass   9: suminf.    0.35038 (1) obj. -2841.28 iterations 5
Cbc0038I Pass  10: suminf.    1.72736 (6) obj. -2841.28 iterations 57
Cbc0038I Pass  11: suminf.    0.73834 (3) obj. -2841.28 iterations 51
Cbc0038I Pass  12: suminf.    0.20926 (2) obj. -2841.28 iterations 6
Cbc0038I Pass  13: suminf.    0.20926 (2) obj. -2841.28 iterations 1
Cbc0038I Pass  14: suminf.    0.37012 (2) obj. -2841.28 iterations 9
Cbc0038I Pass  15: suminf.    0.34694 (1) obj. -2841.28 iterations 6
Cbc0038I Pass  16: suminf.    0.35038 (1) obj. -2841.28 iterations 5
Cbc0038I Pass  17: suminf.    2.01041 (10) obj. -2841.28 iterations 38
Cbc0038I Pass  18: suminf.    1.61570 (6) obj. -2841.28 iterations 30
Cbc0038I Pass  19: suminf.    0.91511 (5) obj. -2841.28 iterations 21
Cbc0038I Pass  20: suminf.    0.59121 (5) obj. -2841.28 iterations 51
Cbc0038I Pass  21: suminf.    0.58990 (5) obj. -2841.28 iterations 18
Cbc0038I Pass  22: suminf.    0.51447 (3) obj. -2841.28 iterations 43
Cbc0038I Pass  23: suminf.    0.37775 (2) obj. -2841.28 iterations 21
Cbc0038I Pass  24: suminf.    1.37761 (5) obj. -2841.28 iterations 15
Cbc0038I Pass  25: suminf.    0.89567 (4) obj. -2841.28 iterations 10
Cbc0038I Pass  26: suminf.    3.82444 (16) obj. -2841.28 iterations 62
Cbc0038I Pass  27: suminf.    0.39304 (2) obj. -2841.28 iterations 55
Cbc0038I Pass  28: suminf.    0.76977 (7) obj. -2841.28 iterations 26
Cbc0038I Pass  29: suminf.    0.44391 (4) obj. -2841.28 iterations 38
Cbc0038I Pass  30: suminf.    0.43545 (2) obj. -2841.28 iterations 26
Cbc0038I Pass  31: suminf.    4.43894 (11) obj. -2841.28 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 487 rows 251 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -2824.4 - took 0.08 seconds
Cbc0012I Integer solution of -2824.405 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 487 rows 251 columns, reduced to 28 rows 18 columns
Cbc0031I 11 added rows had average density of 129.90909
Cbc0013I At root node, 11 cuts changed objective from -2993.2004 to -2954.4556 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 246 row cuts average 3.2 elements, 24 column cuts (24 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 202.2 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0012I Integer solution of -2865.305 found by DiveCoefficient after 519 iterations and 5 nodes (0.47 seconds)
Cbc0038I Full problem 487 rows 251 columns, reduced to 6 rows 6 columns
Cbc0038I Full problem 498 rows 251 columns, reduced to 341 rows 178 columns
Cbc0044I Reduced cost fixing - 341 rows, 178 columns - restarting search
Cbc0012I Integer solution of -2865.305 found by Previous solution after 0 iterations and 0 nodes (0.63 seconds)
Cbc0038I Full problem 341 rows 178 columns, reduced to 32 rows 20 columns
Cbc0031I 11 added rows had average density of 108.09091
Cbc0013I At root node, 11 cuts changed objective from -2993.2004 to -2953.332 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 151 row cuts average 3.2 elements, 11 column cuts (11 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 161.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 160.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 13 row cuts average 109.5 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -2865.305 best solution, best possible -2953.2964 (0.96 seconds)
Cbc0038I Full problem 341 rows 178 columns, reduced to 17 rows 16 columns
Cbc0038I Full problem 341 rows 178 columns, reduced to 5 rows 5 columns
Cbc0038I Full problem 341 rows 178 columns, reduced to 14 rows 14 columns
Cbc0001I Search completed - best objective -2865.305, took 7127 iterations and 276 nodes (1.68 seconds)
Cbc0032I Strong branching done 1352 times (12680 iterations), fathomed 62 nodes and fixed 125 variables
Cbc0035I Maximum depth 18, 2226 variables fixed on reduced cost
Cbc0038I Probing was tried 267 times and created 2309 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)
Cbc0038I Gomory was tried 12 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I Knapsack was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I OddWheel was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I MixedIntegerRounding2 was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.006 seconds)
Cbc0038I FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 227 times and created 87 cuts of which 0 were active after adding rounds of cuts (0.067 seconds)
Cbc0038I ZeroHalf was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.092 seconds)
Cbc0038I Stored from first was tried 227 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -2865.305, took 8970 iterations and 326 nodes (1.68 seconds)
Cbc0032I Strong branching done 470 times (6001 iterations), fathomed 15 nodes and fixed 38 variables
Cbc0035I Maximum depth 13, 660 variables fixed on reduced cost
Total time (CPU seconds):       1.51   (Wallclock seconds):       1.69

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 385 (-141) rows, 398 (-126) columns and 19802 (-15934) elements
Clp1000I sum of infeasibilities 3.76123e-06 - average 9.76944e-09, 299 fixed columns
Coin0506I Presolve 88 (-297) rows, 98 (-300) columns and 362 (-19440) elements
Clp0006I 0  Obj 2788.2311 Dual inf 294.19285 (97)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.6379403 - largest nonzero change 2.1489172e-05 ( 0.0012557832%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 2820.7518
Clp0000I Optimal - objective value 2820.7518
Coin0511I After Postsolve, objective 2820.7518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2820.7518 Dual inf 883.06139 (164)
Clp0014I Perturbing problem by 0.001% of 2.2004646 - largest nonzero change 0 ( 0%) - largest zero change 2.9912379e-05
Clp0000I Optimal - objective value 3074.6706
Clp0000I Optimal - objective value 3074.6706
Clp0000I Optimal - objective value 3074.6706
Coin0511I After Postsolve, objective 3074.6706, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3074.670552 - 0 iterations time 0.162, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0004I processed model has 385 rows, 398 columns (398 integer (398 of which binary)) and 19802 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.096%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 132 integers unsatisfied sum - 3.59966
Cbc0038I Pass   1: suminf.    1.77123 (120) obj. -2738.47 iterations 53
Cbc0038I Pass   2: suminf.    1.77123 (120) obj. -2738.47 iterations 1
Cbc0038I Pass   3: suminf.    1.36404 (103) obj. -2706.28 iterations 17
Cbc0038I Pass   4: suminf.    0.90888 (81) obj. -2649.48 iterations 22
Cbc0038I Pass   5: suminf.    0.62924 (63) obj. -2625.87 iterations 18
Cbc0038I Pass   6: suminf.    0.31480 (36) obj. -2592.26 iterations 27
Cbc0038I Pass   7: suminf.    0.14764 (19) obj. -2571.46 iterations 17
Cbc0038I Pass   8: suminf.    0.03513 (5) obj. -2555.59 iterations 14
Cbc0038I Solution found of -2550.63
Cbc0038I Rounding solution of -2627.45 is better than previous of -2550.63

Cbc0038I Before mini branch and bound, 266 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 398 columns, reduced to 94 rows 94 columns
Cbc0038I Mini branch and bound improved solution from -2627.45 to -2824.4 (0.16 seconds)
Cbc0038I Round again with cutoff of -2849.41
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   9: suminf.    2.63862 (125) obj. -2849.41 iterations 4
Cbc0038I Pass  10: suminf.    2.00040 (121) obj. -2849.41 iterations 3
Cbc0038I Pass  11: suminf.    1.33564 (104) obj. -2849.41 iterations 20
Cbc0038I Pass  12: suminf.    1.15350 (67) obj. -2849.41 iterations 16
Cbc0038I Pass  13: suminf.    1.10118 (33) obj. -2849.41 iterations 29
Cbc0038I Pass  14: suminf.    0.77004 (40) obj. -2849.41 iterations 8
Cbc0038I Pass  15: suminf.    0.75675 (25) obj. -2849.41 iterations 19
Cbc0038I Pass  16: suminf.    0.73839 (25) obj. -2849.41 iterations 4
Cbc0038I Pass  17: suminf.    0.76531 (8) obj. -2849.41 iterations 23
Cbc0038I Pass  18: suminf.    0.67611 (6) obj. -2849.41 iterations 7
Cbc0038I Pass  19: suminf.    1.05628 (27) obj. -2849.41 iterations 20
Cbc0038I Pass  20: suminf.    0.44552 (7) obj. -2849.41 iterations 21
Cbc0038I Pass  21: suminf.    0.35382 (7) obj. -2877.13 iterations 5
Cbc0038I Pass  22: suminf.    0.38806 (2) obj. -2849.41 iterations 6
Cbc0038I Pass  23: suminf.    0.32911 (2) obj. -2871.16 iterations 2
Cbc0038I Pass  24: suminf.    3.60444 (52) obj. -2849.41 iterations 43
Cbc0038I Pass  25: suminf.    2.53642 (56) obj. -2849.41 iterations 27
Cbc0038I Pass  26: suminf.    3.03605 (51) obj. -2849.41 iterations 40
Cbc0038I Pass  27: suminf.    2.67393 (53) obj. -2849.41 iterations 28
Cbc0038I Pass  28: suminf.    1.28539 (38) obj. -2849.41 iterations 30
Cbc0038I Pass  29: suminf.    1.04873 (38) obj. -2849.41 iterations 25
Cbc0038I Pass  30: suminf.    1.28710 (30) obj. -2849.41 iterations 32
Cbc0038I Pass  31: suminf.    0.87543 (31) obj. -2849.41 iterations 39
Cbc0038I Pass  32: suminf.    0.75178 (35) obj. -2849.41 iterations 31
Cbc0038I Pass  33: suminf.    1.03112 (10) obj. -2849.41 iterations 50
Cbc0038I Pass  34: suminf.    0.96376 (11) obj. -2849.41 iterations 2
Cbc0038I Pass  35: suminf.    1.28885 (4) obj. -2849.41 iterations 14
Cbc0038I Pass  36: suminf.    1.05489 (3) obj. -2849.41 iterations 9
Cbc0038I Pass  37: suminf.    1.11601 (3) obj. -2849.41 iterations 14
Cbc0038I Pass  38: suminf.    0.85604 (16) obj. -2849.41 iterations 51
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 398 columns, reduced to 120 rows 127 columns
Cbc0038I Mini branch and bound did not improve solution (0.32 seconds)
Cbc0038I After 0.32 seconds - Feasibility pump exiting with objective of -2824.4 - took 0.21 seconds
Cbc0012I Integer solution of -2824.405 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 385 rows 398 columns, reduced to 94 rows 94 columns
Cbc0031I 126 added rows had average density of 41.944444
Cbc0013I At root node, 126 cuts changed objective from -3074.4704 to -2947.8412 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 1297 row cuts average 27.3 elements, 21 column cuts (21 active)  in 0.185 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 233.8 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 248 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 174 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 216.0 elements, 0 column cuts (0 active)  in 0.182 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2824.405 best solution, best possible -2947.8412 (1.41 seconds)
Cbc0012I Integer solution of -2840.062 found by rounding after 1339 iterations and 17 nodes (2.03 seconds)
Cbc0010I After 22 nodes, 12 on tree, -2840.062 best solution, best possible -2947.8412 (2.11 seconds)
Cbc0012I Integer solution of -2857.007 found by rounding after 2024 iterations and 42 nodes (2.39 seconds)
Cbc0038I Full problem 385 rows 398 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 511 rows 398 columns, reduced to 310 rows 323 columns
Cbc0044I Reduced cost fixing - 310 rows, 323 columns - restarting search
Cbc0012I Integer solution of -2857.007 found by Previous solution after 0 iterations and 0 nodes (2.56 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 96 rows 97 columns
Cbc0031I 119 added rows had average density of 35.831933
Cbc0013I At root node, 119 cuts changed objective from -3071.4588 to -2946.5519 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 1514 row cuts average 5.2 elements, 10 column cuts (10 active)  in 0.071 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 166.6 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 77 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 250 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 131.9 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 49.5 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 186 row cuts average 22.3 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -2857.007 best solution, best possible -2946.5519 (3.49 seconds)
Cbc0012I Integer solution of -2862.305 found by rounding after 1140 iterations and 11 nodes (4.06 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 52 rows 57 columns
Cbc0010I After 47 nodes, 20 on tree, -2862.305 best solution, best possible -2946.5519 (4.49 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 21 rows 25 columns
Cbc0010I After 126 nodes, 30 on tree, -2862.305 best solution, best possible -2946.5519 (5.52 seconds)
Cbc0010I After 192 nodes, 36 on tree, -2862.305 best solution, best possible -2946.5519 (6.53 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 10 rows 14 columns
Cbc0010I After 268 nodes, 37 on tree, -2862.305 best solution, best possible -2946.5519 (7.54 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 16 rows 24 columns
Cbc0010I After 367 nodes, 35 on tree, -2862.305 best solution, best possible -2946.5519 (8.56 seconds)
Cbc0010I After 464 nodes, 32 on tree, -2862.305 best solution, best possible -2946.5519 (9.57 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 27 rows 29 columns
Cbc0010I After 553 nodes, 19 on tree, -2862.305 best solution, best possible -2946.5519 (10.58 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 43 rows 46 columns
Cbc0010I After 666 nodes, 11 on tree, -2862.305 best solution, best possible -2946.5519 (11.58 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 5 rows 6 columns
Cbc0010I After 741 nodes, 19 on tree, -2862.305 best solution, best possible -2946.5519 (12.59 seconds)
Cbc0010I After 830 nodes, 18 on tree, -2862.305 best solution, best possible -2946.5519 (13.59 seconds)
Cbc0010I After 903 nodes, 28 on tree, -2862.305 best solution, best possible -2946.5519 (14.60 seconds)
Cbc0010I After 991 nodes, 36 on tree, -2862.305 best solution, best possible -2946.5519 (15.60 seconds)
Cbc0010I After 1104 nodes, 23 on tree, -2862.305 best solution, best possible -2946.5519 (16.62 seconds)
Cbc0010I After 1208 nodes, 15 on tree, -2862.305 best solution, best possible -2946.5519 (17.62 seconds)
Cbc0012I Integer solution of -2865.305 found by rounding after 62897 iterations and 1295 nodes (18.34 seconds)
Cbc0010I After 1327 nodes, 9 on tree, -2865.305 best solution, best possible -2946.5519 (18.62 seconds)
Cbc0001I Search completed - best objective -2865.305, took 64652 iterations and 1358 nodes (18.74 seconds)
Cbc0032I Strong branching done 3528 times (63428 iterations), fathomed 42 nodes and fixed 231 variables
Cbc0035I Maximum depth 40, 6101 variables fixed on reduced cost
Cbc0038I Probing was tried 1001 times and created 22781 cuts of which 0 were active after adding rounds of cuts (0.806 seconds)
Cbc0038I Gomory was tried 12 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.031 seconds)
Cbc0038I Knapsack was tried 911 times and created 14962 cuts of which 0 were active after adding rounds of cuts (1.131 seconds)
Cbc0038I Clique was tried 911 times and created 4364 cuts of which 0 were active after adding rounds of cuts (0.213 seconds)
Cbc0038I OddWheel was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Cbc0038I MixedIntegerRounding2 was tried 911 times and created 8014 cuts of which 0 were active after adding rounds of cuts (0.741 seconds)
Cbc0038I FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 911 times and created 1002 cuts of which 0 were active after adding rounds of cuts (0.409 seconds)
Cbc0038I ZeroHalf was tried 911 times and created 3474 cuts of which 0 were active after adding rounds of cuts (3.650 seconds)
Cbc0038I Stored from first was tried 911 times and created 1601 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -2865.305 found by Reduced search after 66843 iterations and 1408 nodes (18.75 seconds)
Cbc0001I Search completed - best objective -2865.305, took 66843 iterations and 1408 nodes (18.75 seconds)
Cbc0032I Strong branching done 830 times (14130 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 17, 274 variables fixed on reduced cost
Total time (CPU seconds):       13.94   (Wallclock seconds):       18.78

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 487 (-40) rows, 251 (-13) columns and 1451 (-94) elements
Clp1000I sum of infeasibilities 1.49191e-05 - average 3.06347e-08, 126 fixed columns
Coin0506I Presolve 215 (-272) rows, 118 (-133) columns and 653 (-798) elements
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 2.39498 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Coin0511I After Postsolve, objective 2993.2004, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1733708 - largest nonzero change 0 ( 0%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Clp0000I Optimal - objective value 2993.2004
Coin0511I After Postsolve, objective 2993.2004, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2993.20038 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 487 rows, 251 columns (250 integer (250 of which binary)) and 1451 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.384%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 6.68999
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1288.5 iterations 87
Cbc0038I Solution found of -1288.5
Cbc0038I Relaxing continuous gives -1288.5
Cbc0038I Rounding solution of -2401.65 is better than previous of -1288.5

Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 487 rows 251 columns, reduced to 28 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -2401.65 to -2824.4 (0.04 seconds)
Cbc0038I Round again with cutoff of -2841.28
Cbc0038I Reduced cost fixing fixed 12 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.15470 (7) obj. -2841.28 iterations 30
Cbc0038I Pass   3: suminf.    0.71616 (4) obj. -2841.28 iterations 29
Cbc0038I Pass   4: suminf.    2.31085 (11) obj. -2841.28 iterations 48
Cbc0038I Pass   5: suminf.    0.25033 (3) obj. -2841.28 iterations 59
Cbc0038I Pass   6: suminf.    0.18758 (3) obj. -2841.28 iterations 18
Cbc0038I Pass   7: suminf.    0.37012 (2) obj. -2841.28 iterations 17
Cbc0038I Pass   8: suminf.    0.34694 (1) obj. -2841.28 iterations 6
Cbc0038I Pass   9: suminf.    0.35038 (1) obj. -2841.28 iterations 5
Cbc0038I Pass  10: suminf.    1.72736 (6) obj. -2841.28 iterations 57
Cbc0038I Pass  11: suminf.    0.73834 (3) obj. -2841.28 iterations 51
Cbc0038I Pass  12: suminf.    0.20926 (2) obj. -2841.28 iterations 6
Cbc0038I Pass  13: suminf.    0.20926 (2) obj. -2841.28 iterations 1
Cbc0038I Pass  14: suminf.    0.37012 (2) obj. -2841.28 iterations 9
Cbc0038I Pass  15: suminf.    0.34694 (1) obj. -2841.28 iterations 6
Cbc0038I Pass  16: suminf.    0.35038 (1) obj. -2841.28 iterations 5
Cbc0038I Pass  17: suminf.    2.01041 (10) obj. -2841.28 iterations 38
Cbc0038I Pass  18: suminf.    1.61570 (6) obj. -2841.28 iterations 30
Cbc0038I Pass  19: suminf.    0.91511 (5) obj. -2841.28 iterations 21
Cbc0038I Pass  20: suminf.    0.59121 (5) obj. -2841.28 iterations 51
Cbc0038I Pass  21: suminf.    0.58990 (5) obj. -2841.28 iterations 18
Cbc0038I Pass  22: suminf.    0.51447 (3) obj. -2841.28 iterations 43
Cbc0038I Pass  23: suminf.    0.37775 (2) obj. -2841.28 iterations 21
Cbc0038I Pass  24: suminf.    1.37761 (5) obj. -2841.28 iterations 15
Cbc0038I Pass  25: suminf.    0.89567 (4) obj. -2841.28 iterations 10
Cbc0038I Pass  26: suminf.    3.82444 (16) obj. -2841.28 iterations 62
Cbc0038I Pass  27: suminf.    0.39304 (2) obj. -2841.28 iterations 55
Cbc0038I Pass  28: suminf.    0.76977 (7) obj. -2841.28 iterations 26
Cbc0038I Pass  29: suminf.    0.44391 (4) obj. -2841.28 iterations 38
Cbc0038I Pass  30: suminf.    0.43545 (2) obj. -2841.28 iterations 26
Cbc0038I Pass  31: suminf.    4.43894 (11) obj. -2841.28 iterations 48
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 201 integers at bound fixed and 0 continuous
Cbc0038I Full problem 487 rows 251 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -2824.4 - took 0.08 seconds
Cbc0012I Integer solution of -2824.405 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 487 rows 251 columns, reduced to 28 rows 18 columns
Cbc0031I 11 added rows had average density of 129.90909
Cbc0013I At root node, 11 cuts changed objective from -2993.2004 to -2954.4556 in 13 passes
Cbc0014I Cut generator 0 (Probing) - 246 row cuts average 3.2 elements, 24 column cuts (24 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 202.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0012I Integer solution of -2865.305 found by DiveCoefficient after 519 iterations and 5 nodes (0.36 seconds)
Cbc0038I Full problem 487 rows 251 columns, reduced to 6 rows 6 columns
Cbc0038I Full problem 498 rows 251 columns, reduced to 341 rows 178 columns
Cbc0044I Reduced cost fixing - 341 rows, 178 columns - restarting search
Cbc0012I Integer solution of -2865.305 found by Previous solution after 0 iterations and 0 nodes (0.51 seconds)
Cbc0038I Full problem 341 rows 178 columns, reduced to 32 rows 20 columns
Cbc0031I 11 added rows had average density of 108.09091
Cbc0013I At root node, 11 cuts changed objective from -2993.2004 to -2953.332 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 151 row cuts average 3.2 elements, 11 column cuts (11 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 161.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 160.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 10 (Stored from first) - 13 row cuts average 109.5 elements, 0 column cuts (0 active)
Cbc0038I Full problem 341 rows 178 columns, reduced to 17 rows 16 columns
Cbc0010I After 41 nodes, 15 on tree, -2865.305 best solution, best possible -2953.2964 (0.93 seconds)
Cbc0038I Full problem 341 rows 178 columns, reduced to 5 rows 5 columns
Cbc0038I Full problem 341 rows 178 columns, reduced to 14 rows 14 columns
Cbc0001I Search completed - best objective -2865.305, took 7127 iterations and 276 nodes (1.44 seconds)
Cbc0032I Strong branching done 1352 times (12680 iterations), fathomed 62 nodes and fixed 125 variables
Cbc0035I Maximum depth 18, 2226 variables fixed on reduced cost
Cbc0038I Probing was tried 267 times and created 2309 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Cbc0038I Gomory was tried 12 times and created 2 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
Cbc0038I Knapsack was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
Cbc0038I Clique was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I OddWheel was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.003 seconds)
Cbc0038I MixedIntegerRounding2 was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.005 seconds)
Cbc0038I FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 227 times and created 87 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
Cbc0038I ZeroHalf was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.083 seconds)
Cbc0038I Stored from first was tried 227 times and created 19 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -2865.305, took 8970 iterations and 326 nodes (1.44 seconds)
Cbc0032I Strong branching done 470 times (6001 iterations), fathomed 15 nodes and fixed 38 variables
Cbc0035I Maximum depth 13, 660 variables fixed on reduced cost
Total time (CPU seconds):       1.32   (Wallclock seconds):       1.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 385 (-142) rows, 398 (-127) columns and 19802 (-15935) elements
Clp1000I sum of infeasibilities 3.76123e-06 - average 9.76944e-09, 299 fixed columns
Coin0506I Presolve 88 (-297) rows, 98 (-300) columns and 362 (-19440) elements
Clp0006I 0  Obj 2788.2311 Dual inf 294.19285 (97)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.6379403 - largest nonzero change 2.1489172e-05 ( 0.0012557832%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 2820.7518
Clp0000I Optimal - objective value 2820.7518
Coin0511I After Postsolve, objective 2820.7518, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 2820.7518 Dual inf 883.06139 (164)
Clp0014I Perturbing problem by 0.001% of 2.2004646 - largest nonzero change 0 ( 0%) - largest zero change 2.9912379e-05
Clp0000I Optimal - objective value 3074.6706
Clp0000I Optimal - objective value 3074.6706
Clp0000I Optimal - objective value 3074.6706
Coin0511I After Postsolve, objective 3074.6706, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3074.670552 - 0 iterations time 0.152, Presolve 0.00, Idiot 0.15

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 385 rows, 398 columns (398 integer (398 of which binary)) and 19802 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.096%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 132 integers unsatisfied sum - 3.59966
Cbc0038I Pass   1: suminf.    1.77123 (120) obj. -2738.47 iterations 53
Cbc0038I Pass   2: suminf.    1.77123 (120) obj. -2738.47 iterations 1
Cbc0038I Pass   3: suminf.    1.36404 (103) obj. -2706.28 iterations 17
Cbc0038I Pass   4: suminf.    0.90888 (81) obj. -2649.48 iterations 22
Cbc0038I Pass   5: suminf.    0.62924 (63) obj. -2625.87 iterations 18
Cbc0038I Pass   6: suminf.    0.31480 (36) obj. -2592.26 iterations 27
Cbc0038I Pass   7: suminf.    0.14764 (19) obj. -2571.46 iterations 17
Cbc0038I Pass   8: suminf.    0.03513 (5) obj. -2555.59 iterations 14
Cbc0038I Solution found of -2550.63
Cbc0038I Rounding solution of -2627.45 is better than previous of -2550.63

Cbc0038I Before mini branch and bound, 266 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 398 columns, reduced to 94 rows 94 columns
Cbc0038I Mini branch and bound improved solution from -2627.45 to -2824.4 (0.16 seconds)
Cbc0038I Round again with cutoff of -2849.41
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   9: suminf.    2.63862 (125) obj. -2849.41 iterations 4
Cbc0038I Pass  10: suminf.    2.00040 (121) obj. -2849.41 iterations 3
Cbc0038I Pass  11: suminf.    1.33564 (104) obj. -2849.41 iterations 20
Cbc0038I Pass  12: suminf.    1.15350 (67) obj. -2849.41 iterations 16
Cbc0038I Pass  13: suminf.    1.10118 (33) obj. -2849.41 iterations 29
Cbc0038I Pass  14: suminf.    0.77004 (40) obj. -2849.41 iterations 8
Cbc0038I Pass  15: suminf.    0.75675 (25) obj. -2849.41 iterations 19
Cbc0038I Pass  16: suminf.    0.73839 (25) obj. -2849.41 iterations 4
Cbc0038I Pass  17: suminf.    0.76531 (8) obj. -2849.41 iterations 23
Cbc0038I Pass  18: suminf.    0.67611 (6) obj. -2849.41 iterations 7
Cbc0038I Pass  19: suminf.    1.05628 (27) obj. -2849.41 iterations 20
Cbc0038I Pass  20: suminf.    0.44552 (7) obj. -2849.41 iterations 21
Cbc0038I Pass  21: suminf.    0.35382 (7) obj. -2877.13 iterations 5
Cbc0038I Pass  22: suminf.    0.38806 (2) obj. -2849.41 iterations 6
Cbc0038I Pass  23: suminf.    0.32911 (2) obj. -2871.16 iterations 2
Cbc0038I Pass  24: suminf.    3.60444 (52) obj. -2849.41 iterations 43
Cbc0038I Pass  25: suminf.    2.53642 (56) obj. -2849.41 iterations 27
Cbc0038I Pass  26: suminf.    3.03605 (51) obj. -2849.41 iterations 40
Cbc0038I Pass  27: suminf.    2.67393 (53) obj. -2849.41 iterations 28
Cbc0038I Pass  28: suminf.    1.28539 (38) obj. -2849.41 iterations 30
Cbc0038I Pass  29: suminf.    1.04873 (38) obj. -2849.41 iterations 25
Cbc0038I Pass  30: suminf.    1.28710 (30) obj. -2849.41 iterations 32
Cbc0038I Pass  31: suminf.    0.87543 (31) obj. -2849.41 iterations 39
Cbc0038I Pass  32: suminf.    0.75178 (35) obj. -2849.41 iterations 31
Cbc0038I Pass  33: suminf.    1.03112 (10) obj. -2849.41 iterations 50
Cbc0038I Pass  34: suminf.    0.96376 (11) obj. -2849.41 iterations 2
Cbc0038I Pass  35: suminf.    1.28885 (4) obj. -2849.41 iterations 14
Cbc0038I Pass  36: suminf.    1.05489 (3) obj. -2849.41 iterations 9
Cbc0038I Pass  37: suminf.    1.11601 (3) obj. -2849.41 iterations 14
Cbc0038I Pass  38: suminf.    0.85604 (16) obj. -2849.41 iterations 51
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 227 integers at bound fixed and 0 continuous
Cbc0038I Full problem 385 rows 398 columns, reduced to 120 rows 127 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -2824.4 - took 0.21 seconds
Cbc0012I Integer solution of -2824.405 found by feasibility pump after 0 iterations and 0 nodes (0.32 seconds)
Cbc0038I Full problem 385 rows 398 columns, reduced to 94 rows 94 columns
Cbc0031I 126 added rows had average density of 41.944444
Cbc0013I At root node, 126 cuts changed objective from -3074.4704 to -2947.8412 in 19 passes
Cbc0014I Cut generator 0 (Probing) - 1297 row cuts average 27.3 elements, 21 column cuts (21 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 11 row cuts average 233.8 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 248 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 174 row cuts average 19.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 365 row cuts average 216.0 elements, 0 column cuts (0 active)  in 0.165 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 31 row cuts average 73.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -2824.405 best solution, best possible -2947.8412 (1.28 seconds)
Cbc0012I Integer solution of -2840.062 found by rounding after 1339 iterations and 17 nodes (1.82 seconds)
Cbc0010I After 30 nodes, 17 on tree, -2840.062 best solution, best possible -2947.8412 (2.01 seconds)
Cbc0012I Integer solution of -2857.007 found by rounding after 2024 iterations and 42 nodes (2.14 seconds)
Cbc0038I Full problem 385 rows 398 columns, reduced to 4 rows 6 columns
Cbc0038I Full problem 511 rows 398 columns, reduced to 310 rows 323 columns
Cbc0044I Reduced cost fixing - 310 rows, 323 columns - restarting search
Cbc0012I Integer solution of -2857.007 found by Previous solution after 0 iterations and 0 nodes (2.31 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 96 rows 97 columns
Cbc0031I 119 added rows had average density of 35.831933
Cbc0013I At root node, 119 cuts changed objective from -3071.4588 to -2946.5519 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 1514 row cuts average 5.2 elements, 10 column cuts (10 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 166.6 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 77 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 250 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 131.9 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 49.5 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 186 row cuts average 22.3 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, -2857.007 best solution, best possible -2946.5519 (3.13 seconds)
Cbc0012I Integer solution of -2862.305 found by rounding after 1140 iterations and 11 nodes (3.61 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 52 rows 57 columns
Cbc0010I After 66 nodes, 24 on tree, -2862.305 best solution, best possible -2946.5519 (4.13 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 21 rows 25 columns
Cbc0010I After 137 nodes, 31 on tree, -2862.305 best solution, best possible -2946.5519 (5.18 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 10 rows 14 columns
Cbc0010I After 216 nodes, 33 on tree, -2862.305 best solution, best possible -2946.5519 (6.18 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 16 rows 24 columns
Cbc0010I After 300 nodes, 45 on tree, -2862.305 best solution, best possible -2946.5519 (7.21 seconds)
Cbc0010I After 421 nodes, 31 on tree, -2862.305 best solution, best possible -2946.5519 (8.21 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 27 rows 29 columns
Cbc0010I After 524 nodes, 18 on tree, -2862.305 best solution, best possible -2946.5519 (9.21 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 43 rows 46 columns
Cbc0010I After 635 nodes, 14 on tree, -2862.305 best solution, best possible -2946.5519 (10.24 seconds)
Cbc0038I Full problem 310 rows 323 columns, reduced to 5 rows 6 columns
Cbc0010I After 720 nodes, 26 on tree, -2862.305 best solution, best possible -2946.5519 (11.24 seconds)
Cbc0010I After 820 nodes, 20 on tree, -2862.305 best solution, best possible -2946.5519 (12.25 seconds)
Cbc0010I After 897 nodes, 26 on tree, -2862.305 best solution, best possible -2946.5519 (13.25 seconds)
Cbc0010I After 982 nodes, 39 on tree, -2862.305 best solution, best possible -2946.5519 (14.26 seconds)
Cbc0010I After 1090 nodes, 30 on tree, -2862.305 best solution, best possible -2946.5519 (15.27 seconds)
Cbc0010I After 1201 nodes, 17 on tree, -2862.305 best solution, best possible -2946.5519 (16.27 seconds)
Cbc0012I Integer solution of -2865.305 found by rounding after 62897 iterations and 1295 nodes (17.08 seconds)
Cbc0010I After 1324 nodes, 10 on tree, -2865.305 best solution, best possible -2946.5519 (17.30 seconds)
Cbc0001I Search completed - best objective -2865.305, took 64652 iterations and 1358 nodes (17.48 seconds)
Cbc0032I Strong branching done 3528 times (63428 iterations), fathomed 42 nodes and fixed 231 variables
Cbc0035I Maximum depth 40, 6101 variables fixed on reduced cost
Cbc0038I Probing was tried 1001 times and created 22781 cuts of which 0 were active after adding rounds of cuts (0.757 seconds)
Cbc0038I Gomory was tried 12 times and created 10 cuts of which 0 were active after adding rounds of cuts (0.028 seconds)
Cbc0038I Knapsack was tried 911 times and created 14962 cuts of which 0 were active after adding rounds of cuts (1.098 seconds)
Cbc0038I Clique was tried 911 times and created 4364 cuts of which 0 were active after adding rounds of cuts (0.202 seconds)
Cbc0038I OddWheel was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.033 seconds)
Cbc0038I MixedIntegerRounding2 was tried 911 times and created 8014 cuts of which 0 were active after adding rounds of cuts (0.707 seconds)
Cbc0038I FlowCover was tried 12 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 911 times and created 1002 cuts of which 0 were active after adding rounds of cuts (0.379 seconds)
Cbc0038I ZeroHalf was tried 911 times and created 3474 cuts of which 0 were active after adding rounds of cuts (3.407 seconds)
Cbc0038I Stored from first was tried 911 times and created 1601 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0012I Integer solution of -2865.305 found by Reduced search after 66843 iterations and 1408 nodes (17.49 seconds)
Cbc0001I Search completed - best objective -2865.305, took 66843 iterations and 1408 nodes (17.49 seconds)
Cbc0032I Strong branching done 830 times (14130 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 17, 274 variables fixed on reduced cost
Total time (CPU seconds):       13.04   (Wallclock seconds):       17.51

