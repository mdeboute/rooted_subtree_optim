Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 265 (-20) elements
Clp1000I sum of infeasibilities 1.02274e-06 - average 1.16221e-08, 11 fixed columns
Coin0506I Presolve 66 (-22) rows, 37 (-11) columns and 199 (-66) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Coin0511I After Postsolve, objective 2309.9277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5510224 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Coin0511I After Postsolve, objective 2309.9277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2309.927703 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 265 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 11.9252
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 440.369 iterations 37
Cbc0038I Solution found of 440.369
Cbc0038I Relaxing continuous gives 440.369
Cbc0038I Rounding solution of -30.7637 is better than previous of 440.369

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -30.7637 to -434.427 (0.03 seconds)
Cbc0038I Round again with cutoff of -621.977
Cbc0038I Pass   2: suminf.    1.51184 (9) obj. -621.977 iterations 8
Cbc0038I Pass   3: suminf.    1.50119 (8) obj. -621.977 iterations 1
Cbc0038I Pass   4: suminf.    1.34545 (4) obj. -621.977 iterations 11
Cbc0038I Pass   5: suminf.    1.83111 (6) obj. -621.977 iterations 5
Cbc0038I Pass   6: suminf.    1.79555 (5) obj. -621.977 iterations 1
Cbc0038I Pass   7: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass   8: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass   9: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  10: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  11: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  12: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  13: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  14: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  15: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  16: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  17: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  18: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  19: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  20: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  21: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  22: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  23: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  24: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  25: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  26: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  27: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  28: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  29: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  30: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  31: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -434.427 - took 0.04 seconds
Cbc0012I Integer solution of -434.4267 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0031I 23 added rows had average density of 25.26087
Cbc0013I At root node, 23 cuts changed objective from -2309.9277 to -1443.4119 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7146 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1821 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 45.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0001I Search completed - best objective -434.4267, took 7831 iterations and 20 nodes (0.67 seconds)
Cbc0032I Strong branching done 360 times (8265 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.66   (Wallclock seconds):       0.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-11) rows, 93 (-3) columns and 1331 (-82) elements
Clp1000I sum of infeasibilities 4.50233e-09 - average 5.17509e-11, 86 fixed columns
Coin0506I Presolve 4 (-83) rows, 7 (-86) columns and 13 (-1318) elements
Clp0006I 0  Obj -276.65784 Dual inf 15.650043 (7)
Clp0029I End of values pass after 7 iterations
Clp0014I Perturbing problem by 0.001% of 1.3750125 - largest nonzero change 1.7799242e-05 ( 0.00088996209%) - largest zero change 0
Clp0000I Optimal - objective value -173.6233
Clp0000I Optimal - objective value -173.6233
Coin0511I After Postsolve, objective -173.6233, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -173.6233 Dual inf 3787.8113 (55)
Clp0014I Perturbing problem by 0.001% of 3.458186 - largest nonzero change 3.7959773e-05 ( 0.001737495%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3010.3848
Clp0000I Optimal - objective value 3010.3848
Clp0000I Optimal - objective value 3010.3848
Coin0511I After Postsolve, objective 3010.3848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3010.384798 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 93 columns (93 integer (93 of which binary)) and 1333 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.165%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 14.3242
Cbc0038I Pass   1: suminf.    4.24258 (29) obj. -1361.81 iterations 28
Cbc0038I Pass   2: suminf.    4.24258 (29) obj. -1361.81 iterations 1
Cbc0038I Pass   3: suminf.    1.91052 (18) obj. -170.689 iterations 11
Cbc0038I Pass   4: suminf.    0.37166 (7) obj. 288.786 iterations 11
Cbc0038I Solution found of 650.321
Cbc0038I Rounding solution of -45.7497 is better than previous of 650.321

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 93 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -45.7497 to -130.316 (0.02 seconds)
Cbc0038I Round again with cutoff of -370.187
Cbc0038I Pass   5: suminf.    4.24258 (29) obj. -1361.81 iterations 0
Cbc0038I Pass   6: suminf.    4.24258 (29) obj. -1361.81 iterations 1
Cbc0038I Pass   7: suminf.    1.06688 (7) obj. -370.187 iterations 30
Cbc0038I Pass   8: suminf.    0.45220 (6) obj. -370.187 iterations 6
Cbc0038I Pass   9: suminf.    0.93829 (3) obj. -370.187 iterations 19
Cbc0038I Pass  10: suminf.    0.59028 (3) obj. -370.187 iterations 5
Cbc0038I Pass  11: suminf.    2.53188 (19) obj. -370.187 iterations 28
Cbc0038I Pass  12: suminf.    1.77299 (9) obj. -370.187 iterations 14
Cbc0038I Pass  13: suminf.    1.16710 (4) obj. -370.187 iterations 13
Cbc0038I Pass  14: suminf.    1.02549 (4) obj. -389.446 iterations 7
Cbc0038I Pass  15: suminf.    1.16710 (4) obj. -370.187 iterations 7
Cbc0038I Pass  16: suminf.    5.95334 (20) obj. -383.754 iterations 34
Cbc0038I Pass  17: suminf.    1.58311 (15) obj. -370.187 iterations 15
Cbc0038I Pass  18: suminf.    1.58311 (15) obj. -370.187 iterations 0
Cbc0038I Pass  19: suminf.    1.50455 (8) obj. -370.187 iterations 18
Cbc0038I Pass  20: suminf.    1.31732 (8) obj. -370.187 iterations 4
Cbc0038I Pass  21: suminf.    1.24591 (6) obj. -370.187 iterations 11
Cbc0038I Pass  22: suminf.    1.01162 (4) obj. -417.464 iterations 5
Cbc0038I Pass  23: suminf.    1.19178 (5) obj. -370.187 iterations 7
Cbc0038I Pass  24: suminf.    1.14444 (3) obj. -481.45 iterations 3
Cbc0038I Pass  25: suminf.    0.43492 (2) obj. -370.187 iterations 7
Cbc0038I Pass  26: suminf.    0.43492 (2) obj. -370.187 iterations 0
Cbc0038I Pass  27: suminf.    0.98292 (2) obj. -370.187 iterations 5
Cbc0038I Pass  28: suminf.    0.81111 (2) obj. -479.283 iterations 2
Cbc0038I Pass  29: suminf.    2.92608 (17) obj. -370.187 iterations 26
Cbc0038I Pass  30: suminf.    2.16953 (10) obj. -370.187 iterations 10
Cbc0038I Pass  31: suminf.    2.04854 (10) obj. -370.187 iterations 2
Cbc0038I Pass  32: suminf.    0.73505 (3) obj. -370.187 iterations 14
Cbc0038I Pass  33: suminf.    0.73505 (3) obj. -370.187 iterations 1
Cbc0038I Pass  34: suminf.    0.69467 (3) obj. -370.187 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 93 columns, reduced to 34 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -130.316 to -234.969 (0.04 seconds)
Cbc0038I Round again with cutoff of -801.954
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    4.24258 (29) obj. -1361.81 iterations 0
Cbc0038I Pass  35: suminf.    4.24258 (29) obj. -1361.81 iterations 1
Cbc0038I Pass  36: suminf.    1.55995 (13) obj. -801.954 iterations 25
Cbc0038I Pass  37: suminf.    1.55995 (13) obj. -801.954 iterations 3
Cbc0038I Pass  38: suminf.    0.94003 (11) obj. -801.954 iterations 26
Cbc0038I Pass  39: suminf.    0.94003 (11) obj. -801.954 iterations 1
Cbc0038I Pass  40: suminf.    0.95223 (3) obj. -801.954 iterations 23
Cbc0038I Pass  41: suminf.    0.95223 (3) obj. -801.954 iterations 1
Cbc0038I Pass  42: suminf.    0.92941 (3) obj. -801.954 iterations 9
Cbc0038I Pass  43: suminf.    0.92941 (3) obj. -801.954 iterations 0
Cbc0038I Pass  44: suminf.    0.95223 (3) obj. -801.954 iterations 9
Cbc0038I Pass  45: suminf.    3.21747 (15) obj. -801.954 iterations 20
Cbc0038I Pass  46: suminf.    2.81615 (15) obj. -801.954 iterations 9
Cbc0038I Pass  47: suminf.    1.69006 (6) obj. -801.954 iterations 21
Cbc0038I Pass  48: suminf.    1.21809 (5) obj. -866.142 iterations 4
Cbc0038I Pass  49: suminf.    1.33172 (5) obj. -801.954 iterations 5
Cbc0038I Pass  50: suminf.    1.33172 (5) obj. -801.954 iterations 0
Cbc0038I Pass  51: suminf.    1.47339 (5) obj. -801.954 iterations 5
Cbc0038I Pass  52: suminf.    1.47339 (5) obj. -801.954 iterations 0
Cbc0038I Pass  53: suminf.    1.33172 (5) obj. -801.954 iterations 7
Cbc0038I Pass  54: suminf.    3.39613 (14) obj. -801.954 iterations 26
Cbc0038I Pass  55: suminf.    2.76531 (12) obj. -801.954 iterations 4
Cbc0038I Pass  56: suminf.    2.37336 (11) obj. -930.897 iterations 1
Cbc0038I Pass  57: suminf.    1.29891 (5) obj. -801.954 iterations 15
Cbc0038I Pass  58: suminf.    1.26354 (5) obj. -807.011 iterations 4
Cbc0038I Pass  59: suminf.    2.77829 (11) obj. -844.084 iterations 12
Cbc0038I Pass  60: suminf.    2.77829 (11) obj. -844.084 iterations 2
Cbc0038I Pass  61: suminf.    1.76471 (6) obj. -801.954 iterations 10
Cbc0038I Pass  62: suminf.    1.76471 (6) obj. -801.954 iterations 0
Cbc0038I Pass  63: suminf.    1.67903 (6) obj. -801.954 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 93 columns, reduced to 41 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -234.969 - took 0.04 seconds
Cbc0012I Integer solution of -234.9687 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 93 columns, reduced to 3 rows 4 columns
Cbc0031I 53 added rows had average density of 24.320755
Cbc0013I At root node, 53 cuts changed objective from -2529.0231 to -471.65146 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7789 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1209 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 118 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1093 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 515 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.628 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -234.9687 best solution, best possible -471.65146 (1.79 seconds)
Cbc0012I Integer solution of -434.4267 found by DiveCoefficient after 2398 iterations and 1 nodes (1.81 seconds)
Cbc0001I Search completed - best objective -434.4267, took 2733 iterations and 6 nodes (1.95 seconds)
Cbc0032I Strong branching done 180 times (4415 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 30 variables fixed on reduced cost
Total time (CPU seconds):       1.48   (Wallclock seconds):       1.96

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-11) rows, 48 (-2) columns and 265 (-20) elements
Clp1000I sum of infeasibilities 1.02274e-06 - average 1.16221e-08, 11 fixed columns
Coin0506I Presolve 66 (-22) rows, 37 (-11) columns and 199 (-66) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Coin0511I After Postsolve, objective 2309.9277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.5510224 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Clp0000I Optimal - objective value 2309.9277
Coin0511I After Postsolve, objective 2309.9277, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2309.927703 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 88 rows, 48 columns (47 integer (47 of which binary)) and 265 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.847%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 11.9252
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 440.369 iterations 37
Cbc0038I Solution found of 440.369
Cbc0038I Relaxing continuous gives 440.369
Cbc0038I Rounding solution of -30.7637 is better than previous of 440.369

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -30.7637 to -434.427 (0.04 seconds)
Cbc0038I Round again with cutoff of -621.977
Cbc0038I Pass   2: suminf.    1.51184 (9) obj. -621.977 iterations 8
Cbc0038I Pass   3: suminf.    1.50119 (8) obj. -621.977 iterations 1
Cbc0038I Pass   4: suminf.    1.34545 (4) obj. -621.977 iterations 11
Cbc0038I Pass   5: suminf.    1.83111 (6) obj. -621.977 iterations 5
Cbc0038I Pass   6: suminf.    1.79555 (5) obj. -621.977 iterations 1
Cbc0038I Pass   7: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass   8: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass   9: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  10: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  11: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  12: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  13: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  14: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  15: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  16: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  17: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  18: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  19: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  20: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  21: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  22: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  23: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  24: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  25: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  26: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I Pass  27: suminf.    1.74284 (6) obj. -621.977 iterations 5
Cbc0038I Pass  28: suminf.    1.70320 (5) obj. -621.977 iterations 1
Cbc0038I Pass  29: suminf.    1.89399 (6) obj. -621.977 iterations 3
Cbc0038I Pass  30: suminf.    1.78341 (6) obj. -621.977 iterations 1
Cbc0038I Pass  31: suminf.    1.74600 (5) obj. -621.977 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -434.427 - took 0.05 seconds
Cbc0012I Integer solution of -434.4267 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 88 rows 48 columns, reduced to 57 rows 32 columns
Cbc0031I 23 added rows had average density of 25.26087
Cbc0013I At root node, 23 cuts changed objective from -2309.9277 to -1443.4119 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7146 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1821 row cuts average 47.7 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 94 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 152 row cuts average 45.1 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0010I After 6 nodes, 7 on tree, -434.4267 best solution, best possible -1443.4119 (0.70 seconds)
Cbc0001I Search completed - best objective -434.4267, took 7831 iterations and 20 nodes (0.74 seconds)
Cbc0032I Strong branching done 360 times (8265 iterations), fathomed 0 nodes and fixed 9 variables
Cbc0035I Maximum depth 9, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.72   (Wallclock seconds):       0.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 87 (-12) rows, 93 (-4) columns and 1331 (-83) elements
Clp1000I sum of infeasibilities 4.50233e-09 - average 5.17509e-11, 86 fixed columns
Coin0506I Presolve 4 (-83) rows, 7 (-86) columns and 13 (-1318) elements
Clp0006I 0  Obj -276.65784 Dual inf 15.650043 (7)
Clp0029I End of values pass after 7 iterations
Clp0014I Perturbing problem by 0.001% of 1.3750125 - largest nonzero change 1.7799242e-05 ( 0.00088996209%) - largest zero change 0
Clp0000I Optimal - objective value -173.6233
Clp0000I Optimal - objective value -173.6233
Coin0511I After Postsolve, objective -173.6233, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -173.6233 Dual inf 3787.8113 (55)
Clp0014I Perturbing problem by 0.001% of 3.458186 - largest nonzero change 3.7959773e-05 ( 0.001737495%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3010.3848
Clp0000I Optimal - objective value 3010.3848
Clp0000I Optimal - objective value 3010.3848
Coin0511I After Postsolve, objective 3010.3848, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3010.384798 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 87 rows, 93 columns (93 integer (93 of which binary)) and 1333 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.165%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 14.3242
Cbc0038I Pass   1: suminf.    4.24258 (29) obj. -1361.81 iterations 28
Cbc0038I Pass   2: suminf.    4.24258 (29) obj. -1361.81 iterations 1
Cbc0038I Pass   3: suminf.    1.91052 (18) obj. -170.689 iterations 11
Cbc0038I Pass   4: suminf.    0.37166 (7) obj. 288.786 iterations 11
Cbc0038I Solution found of 650.321
Cbc0038I Rounding solution of -45.7497 is better than previous of 650.321

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 93 columns, reduced to 18 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -45.7497 to -130.316 (0.02 seconds)
Cbc0038I Round again with cutoff of -370.187
Cbc0038I Pass   5: suminf.    4.24258 (29) obj. -1361.81 iterations 0
Cbc0038I Pass   6: suminf.    4.24258 (29) obj. -1361.81 iterations 1
Cbc0038I Pass   7: suminf.    1.06688 (7) obj. -370.187 iterations 30
Cbc0038I Pass   8: suminf.    0.45220 (6) obj. -370.187 iterations 6
Cbc0038I Pass   9: suminf.    0.93829 (3) obj. -370.187 iterations 19
Cbc0038I Pass  10: suminf.    0.59028 (3) obj. -370.187 iterations 5
Cbc0038I Pass  11: suminf.    2.53188 (19) obj. -370.187 iterations 28
Cbc0038I Pass  12: suminf.    1.77299 (9) obj. -370.187 iterations 14
Cbc0038I Pass  13: suminf.    1.16710 (4) obj. -370.187 iterations 13
Cbc0038I Pass  14: suminf.    1.02549 (4) obj. -389.446 iterations 7
Cbc0038I Pass  15: suminf.    1.16710 (4) obj. -370.187 iterations 7
Cbc0038I Pass  16: suminf.    5.95334 (20) obj. -383.754 iterations 34
Cbc0038I Pass  17: suminf.    1.58311 (15) obj. -370.187 iterations 15
Cbc0038I Pass  18: suminf.    1.58311 (15) obj. -370.187 iterations 0
Cbc0038I Pass  19: suminf.    1.50455 (8) obj. -370.187 iterations 18
Cbc0038I Pass  20: suminf.    1.31732 (8) obj. -370.187 iterations 4
Cbc0038I Pass  21: suminf.    1.24591 (6) obj. -370.187 iterations 11
Cbc0038I Pass  22: suminf.    1.01162 (4) obj. -417.464 iterations 5
Cbc0038I Pass  23: suminf.    1.19178 (5) obj. -370.187 iterations 7
Cbc0038I Pass  24: suminf.    1.14444 (3) obj. -481.45 iterations 3
Cbc0038I Pass  25: suminf.    0.43492 (2) obj. -370.187 iterations 7
Cbc0038I Pass  26: suminf.    0.43492 (2) obj. -370.187 iterations 0
Cbc0038I Pass  27: suminf.    0.98292 (2) obj. -370.187 iterations 5
Cbc0038I Pass  28: suminf.    0.81111 (2) obj. -479.283 iterations 2
Cbc0038I Pass  29: suminf.    2.92608 (17) obj. -370.187 iterations 26
Cbc0038I Pass  30: suminf.    2.16953 (10) obj. -370.187 iterations 10
Cbc0038I Pass  31: suminf.    2.04854 (10) obj. -370.187 iterations 2
Cbc0038I Pass  32: suminf.    0.73505 (3) obj. -370.187 iterations 14
Cbc0038I Pass  33: suminf.    0.73505 (3) obj. -370.187 iterations 1
Cbc0038I Pass  34: suminf.    0.69467 (3) obj. -370.187 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 93 columns, reduced to 34 rows 44 columns
Cbc0038I Mini branch and bound improved solution from -130.316 to -234.969 (0.04 seconds)
Cbc0038I Round again with cutoff of -801.954
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    4.24258 (29) obj. -1361.81 iterations 0
Cbc0038I Pass  35: suminf.    4.24258 (29) obj. -1361.81 iterations 1
Cbc0038I Pass  36: suminf.    1.55995 (13) obj. -801.954 iterations 25
Cbc0038I Pass  37: suminf.    1.55995 (13) obj. -801.954 iterations 3
Cbc0038I Pass  38: suminf.    0.94003 (11) obj. -801.954 iterations 26
Cbc0038I Pass  39: suminf.    0.94003 (11) obj. -801.954 iterations 1
Cbc0038I Pass  40: suminf.    0.95223 (3) obj. -801.954 iterations 23
Cbc0038I Pass  41: suminf.    0.95223 (3) obj. -801.954 iterations 1
Cbc0038I Pass  42: suminf.    0.92941 (3) obj. -801.954 iterations 9
Cbc0038I Pass  43: suminf.    0.92941 (3) obj. -801.954 iterations 0
Cbc0038I Pass  44: suminf.    0.95223 (3) obj. -801.954 iterations 9
Cbc0038I Pass  45: suminf.    3.21747 (15) obj. -801.954 iterations 20
Cbc0038I Pass  46: suminf.    2.81615 (15) obj. -801.954 iterations 9
Cbc0038I Pass  47: suminf.    1.69006 (6) obj. -801.954 iterations 21
Cbc0038I Pass  48: suminf.    1.21809 (5) obj. -866.142 iterations 4
Cbc0038I Pass  49: suminf.    1.33172 (5) obj. -801.954 iterations 5
Cbc0038I Pass  50: suminf.    1.33172 (5) obj. -801.954 iterations 0
Cbc0038I Pass  51: suminf.    1.47339 (5) obj. -801.954 iterations 5
Cbc0038I Pass  52: suminf.    1.47339 (5) obj. -801.954 iterations 0
Cbc0038I Pass  53: suminf.    1.33172 (5) obj. -801.954 iterations 7
Cbc0038I Pass  54: suminf.    3.39613 (14) obj. -801.954 iterations 26
Cbc0038I Pass  55: suminf.    2.76531 (12) obj. -801.954 iterations 4
Cbc0038I Pass  56: suminf.    2.37336 (11) obj. -930.897 iterations 1
Cbc0038I Pass  57: suminf.    1.29891 (5) obj. -801.954 iterations 15
Cbc0038I Pass  58: suminf.    1.26354 (5) obj. -807.011 iterations 4
Cbc0038I Pass  59: suminf.    2.77829 (11) obj. -844.084 iterations 12
Cbc0038I Pass  60: suminf.    2.77829 (11) obj. -844.084 iterations 2
Cbc0038I Pass  61: suminf.    1.76471 (6) obj. -801.954 iterations 10
Cbc0038I Pass  62: suminf.    1.76471 (6) obj. -801.954 iterations 0
Cbc0038I Pass  63: suminf.    1.67903 (6) obj. -801.954 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 87 rows 93 columns, reduced to 41 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -234.969 - took 0.04 seconds
Cbc0012I Integer solution of -234.9687 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 87 rows 93 columns, reduced to 3 rows 4 columns
Cbc0031I 53 added rows had average density of 24.320755
Cbc0013I At root node, 53 cuts changed objective from -2529.0231 to -471.65146 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7789 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1209 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 118 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1093 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 515 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 18 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.661 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -234.9687 best solution, best possible -471.65146 (1.96 seconds)
Cbc0012I Integer solution of -434.4267 found by DiveCoefficient after 2398 iterations and 1 nodes (1.97 seconds)
Cbc0001I Search completed - best objective -434.4267, took 2733 iterations and 6 nodes (2.11 seconds)
Cbc0032I Strong branching done 180 times (4415 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 30 variables fixed on reduced cost
Total time (CPU seconds):       1.58   (Wallclock seconds):       2.12

