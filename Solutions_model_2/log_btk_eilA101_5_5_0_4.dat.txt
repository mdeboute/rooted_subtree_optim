Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-67) rows, 75 (-28) columns and 420 (-183) elements
Clp1000I sum of infeasibilities 3.45404e-05 - average 2.50292e-07, 68 fixed columns
Coin0506I Presolve 9 (-129) rows, 7 (-68) columns and 26 (-394) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 30217.767
Clp0000I Optimal - objective value 30217.767
Coin0511I After Postsolve, objective 30217.767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28679103 - largest nonzero change 0 ( 0%) - largest zero change 2.7727963e-05
Clp0000I Optimal - objective value 30217.767
Clp0000I Optimal - objective value 30217.767
Clp0000I Optimal - objective value 30217.767
Coin0511I After Postsolve, objective 30217.767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30217.76732 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.423267
Cbc0038I Pass   1: suminf.    0.32143 (1) obj. -29673.9 iterations 14
Cbc0038I Solution found of -26685.5
Cbc0038I Relaxing continuous gives -26685.5
Cbc0038I Rounding solution of -26816.3 is better than previous of -26685.5

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -26816.3 to -27279.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -27573.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.32143 (1) obj. -29673.9 iterations 0
Cbc0038I Pass   3: suminf.    0.20156 (1) obj. -27573.1 iterations 3
Cbc0038I Pass   4: suminf.    0.60258 (7) obj. -27573.1 iterations 10
Cbc0038I Pass   5: suminf.    0.11111 (1) obj. -27637.1 iterations 12
Cbc0038I Pass   6: suminf.    0.33303 (2) obj. -27573.1 iterations 2
Cbc0038I Pass   7: suminf.    1.30984 (7) obj. -27573.1 iterations 22
Cbc0038I Pass   8: suminf.    1.30971 (7) obj. -27573.1 iterations 4
Cbc0038I Pass   9: suminf.    2.44304 (6) obj. -27573.1 iterations 19
Cbc0038I Pass  10: suminf.    1.65088 (6) obj. -27573.1 iterations 6
Cbc0038I Pass  11: suminf.    1.46025 (5) obj. -27573.1 iterations 7
Cbc0038I Pass  12: suminf.    1.46025 (5) obj. -27573.1 iterations 1
Cbc0038I Pass  13: suminf.    1.65088 (6) obj. -27573.1 iterations 16
Cbc0038I Pass  14: suminf.    0.89027 (5) obj. -27573.1 iterations 12
Cbc0038I Pass  15: suminf.    0.07143 (1) obj. -27762.5 iterations 14
Cbc0038I Pass  16: suminf.    0.11443 (1) obj. -27573.1 iterations 3
Cbc0038I Pass  17: suminf.    1.35329 (7) obj. -27573.1 iterations 15
Cbc0038I Pass  18: suminf.    0.18237 (3) obj. -27573.1 iterations 14
Cbc0038I Pass  19: suminf.    0.74157 (4) obj. -27573.1 iterations 12
Cbc0038I Pass  20: suminf.    0.74157 (4) obj. -27573.1 iterations 0
Cbc0038I Pass  21: suminf.    1.09854 (3) obj. -27573.1 iterations 11
Cbc0038I Pass  22: suminf.    0.16667 (1) obj. -28439.9 iterations 7
Cbc0038I Solution found of -27678.4
Cbc0038I Relaxing continuous gives -27678.4
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -27678.4 to -28567.7 (0.03 seconds)
Cbc0038I Round again with cutoff of -28897.7
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 3
Cbc0038I Pass  23: suminf.    0.33820 (2) obj. -29751 iterations 11
Cbc0038I Pass  24: suminf.    0.46665 (2) obj. -28897.7 iterations 1
Cbc0038I Pass  25: suminf.    0.46665 (2) obj. -28897.7 iterations 0
Cbc0038I Pass  26: suminf.    0.47968 (1) obj. -28897.7 iterations 1
Cbc0038I Pass  27: suminf.    0.89278 (5) obj. -28897.7 iterations 11
Cbc0038I Pass  28: suminf.    0.89278 (5) obj. -28897.7 iterations 4
Cbc0038I Pass  29: suminf.    1.81261 (6) obj. -28897.7 iterations 15
Cbc0038I Pass  30: suminf.    0.74955 (4) obj. -28897.7 iterations 15
Cbc0038I Pass  31: suminf.    0.74955 (4) obj. -28897.7 iterations 0
Cbc0038I Pass  32: suminf.    1.73736 (4) obj. -28897.7 iterations 10
Cbc0038I Pass  33: suminf.    1.73736 (4) obj. -28897.7 iterations 0
Cbc0038I Pass  34: suminf.    1.14113 (4) obj. -28897.7 iterations 6
Cbc0038I Pass  35: suminf.    1.14113 (4) obj. -28897.7 iterations 1
Cbc0038I Pass  36: suminf.    0.04022 (3) obj. -28897.7 iterations 11
Cbc0038I Pass  37: suminf.    0.02660 (1) obj. -28897.7 iterations 4
Cbc0038I Pass  38: suminf.    0.02778 (1) obj. -28903.1 iterations 1
Cbc0038I Pass  39: suminf.    0.06191 (3) obj. -28897.7 iterations 10
Cbc0038I Pass  40: suminf.    1.98083 (7) obj. -28897.7 iterations 18
Cbc0038I Pass  41: suminf.    1.02841 (5) obj. -28897.7 iterations 5
Cbc0038I Pass  42: suminf.    0.79116 (4) obj. -28897.7 iterations 1
Cbc0038I Pass  43: suminf.    1.75688 (6) obj. -28897.7 iterations 13
Cbc0038I Pass  44: suminf.    1.61344 (6) obj. -28897.7 iterations 6
Cbc0038I Pass  45: suminf.    0.89570 (4) obj. -28897.7 iterations 1
Cbc0038I Pass  46: suminf.    0.89570 (4) obj. -28897.7 iterations 3
Cbc0038I Pass  47: suminf.    0.89570 (4) obj. -28897.7 iterations 3
Cbc0038I Pass  48: suminf.    2.31541 (6) obj. -28897.7 iterations 6
Cbc0038I Pass  49: suminf.    1.73736 (4) obj. -28897.7 iterations 11
Cbc0038I Pass  50: suminf.    1.14113 (4) obj. -28897.7 iterations 5
Cbc0038I Pass  51: suminf.    1.14113 (4) obj. -28897.7 iterations 1
Cbc0038I Pass  52: suminf.    0.04022 (3) obj. -28897.7 iterations 9
Cbc0038I Rounding solution of -28776.2 is better than previous of -28567.7

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -29293.7
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 4
Cbc0038I Pass  52: suminf.    0.33820 (2) obj. -29751 iterations 0
Cbc0038I Pass  53: suminf.    0.46319 (2) obj. -29293.7 iterations 3
Cbc0038I Pass  54: suminf.    1.07563 (4) obj. -29293.7 iterations 6
Cbc0038I Pass  55: suminf.    0.83763 (5) obj. -29293.7 iterations 7
Cbc0038I Pass  56: suminf.    0.73483 (5) obj. -29293.7 iterations 5
Cbc0038I Pass  57: suminf.    1.88467 (6) obj. -29293.7 iterations 9
Cbc0038I Pass  58: suminf.    1.02543 (5) obj. -29293.7 iterations 9
Cbc0038I Pass  59: suminf.    1.02543 (5) obj. -29293.7 iterations 2
Cbc0038I Pass  60: suminf.    1.88467 (6) obj. -29293.7 iterations 7
Cbc0038I Pass  61: suminf.    0.33820 (2) obj. -29751 iterations 9
Cbc0038I Pass  62: suminf.    0.46319 (2) obj. -29293.7 iterations 3
Cbc0038I Pass  63: suminf.    2.18046 (7) obj. -29293.7 iterations 15
Cbc0038I Pass  64: suminf.    2.17498 (7) obj. -29293.7 iterations 7
Cbc0038I Pass  65: suminf.    2.70631 (8) obj. -29293.7 iterations 10
Cbc0038I Pass  66: suminf.    1.68274 (5) obj. -29293.7 iterations 4
Cbc0038I Pass  67: suminf.    1.60824 (5) obj. -29293.7 iterations 4
Cbc0038I Pass  68: suminf.    1.21058 (5) obj. -29293.7 iterations 9
Cbc0038I Pass  69: suminf.    2.32721 (10) obj. -29293.7 iterations 14
Cbc0038I Pass  70: suminf.    2.18157 (9) obj. -29293.7 iterations 2
Cbc0038I Pass  71: suminf.    0.78395 (6) obj. -29293.7 iterations 8
Cbc0038I Pass  72: suminf.    0.33820 (2) obj. -29751 iterations 8
Cbc0038I Pass  73: suminf.    0.46319 (2) obj. -29293.7 iterations 3
Cbc0038I Pass  74: suminf.    0.85131 (5) obj. -29293.7 iterations 8
Cbc0038I Pass  75: suminf.    0.72212 (4) obj. -29293.7 iterations 5
Cbc0038I Pass  76: suminf.    0.80196 (4) obj. -29293.7 iterations 3
Cbc0038I Pass  77: suminf.    0.78389 (7) obj. -29293.7 iterations 5
Cbc0038I Pass  78: suminf.    1.60229 (9) obj. -29293.7 iterations 16
Cbc0038I Pass  79: suminf.    0.40708 (8) obj. -29293.7 iterations 13
Cbc0038I Pass  80: suminf.    2.53481 (9) obj. -29293.7 iterations 14
Cbc0038I Pass  81: suminf.    0.48339 (6) obj. -29293.7 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -28776.2 - took 0.03 seconds
Cbc0012I Integer solution of -28776.174 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 11 rows 11 columns
Cbc0031I 6 added rows had average density of 34.833333
Cbc0013I At root node, 6 cuts changed objective from -30217.767 to -29809.407 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 3.5 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0010I After 9 nodes, 3 on tree, -28776.174 best solution, best possible -29809.407 (0.77 seconds)
Cbc0001I Search completed - best objective -28776.174, took 446 iterations and 20 nodes (1.00 seconds)
Cbc0032I Strong branching done 182 times (851 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 99 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       1.00

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-103) rows, 111 (-91) columns and 1751 (-3902) elements
Clp1000I sum of infeasibilities 1.62033e-09 - average 1.60428e-11, 68 fixed columns
Coin0506I Presolve 34 (-67) rows, 34 (-77) columns and 222 (-1529) elements
Clp0006I 0  Obj 30176.283 Dual inf 164.61202 (33)
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 30258.657
Clp0000I Optimal - objective value 30258.657
Coin0511I After Postsolve, objective 30258.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 30258.657 Dual inf 8793.5017 (5)
Clp0014I Perturbing problem by 0.001% of 1.6963399 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 30258.657
Clp0000I Optimal - objective value 30258.657
Clp0000I Optimal - objective value 30258.657
Coin0511I After Postsolve, objective 30258.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30258.65676 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 113 columns (113 integer (113 of which binary)) and 1758 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.316%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.90441
Cbc0038I Pass   1: suminf.    3.30112 (27) obj. -25507.3 iterations 15
Cbc0038I Pass   2: suminf.    3.30112 (27) obj. -25507.3 iterations 0
Cbc0038I Pass   3: suminf.    1.51940 (14) obj. -25487.4 iterations 13
Cbc0038I Pass   4: suminf.    0.26783 (3) obj. -25476.7 iterations 11
Cbc0038I Solution found of -25474
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 113 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -25474 to -27279.3 (0.04 seconds)
Cbc0038I Round again with cutoff of -27576.2
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   5: suminf.    4.45323 (33) obj. -27576.2 iterations 3
Cbc0038I Pass   6: suminf.    4.45323 (33) obj. -27576.2 iterations 0
Cbc0038I Pass   7: suminf.    3.13828 (27) obj. -27576.2 iterations 14
Cbc0038I Pass   8: suminf.    0.03846 (1) obj. -28903.4 iterations 31
Cbc0038I Solution found of -28776.2
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 113 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -29070.7
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass   9: suminf.    4.58161 (34) obj. -29070.7 iterations 1
Cbc0038I Pass  10: suminf.    4.58161 (34) obj. -29070.7 iterations 0
Cbc0038I Pass  11: suminf.    2.36916 (19) obj. -29175.6 iterations 15
Cbc0038I Pass  12: suminf.    0.11869 (2) obj. -29153.2 iterations 17
Cbc0038I Pass  13: suminf.    0.04564 (1) obj. -29070.7 iterations 3
Cbc0038I Pass  14: suminf.    0.02778 (1) obj. -29152.3 iterations 2
Cbc0038I Pass  15: suminf.    3.08369 (13) obj. -29070.7 iterations 20
Cbc0038I Pass  16: suminf.    2.01219 (10) obj. -29070.7 iterations 10
Cbc0038I Pass  17: suminf.    0.33820 (2) obj. -29749 iterations 14
Cbc0038I Pass  18: suminf.    0.52361 (2) obj. -29070.7 iterations 1
Cbc0038I Pass  19: suminf.    1.98783 (15) obj. -29070.7 iterations 27
Cbc0038I Pass  20: suminf.    1.65275 (12) obj. -29070.7 iterations 15
Cbc0038I Pass  21: suminf.    1.28069 (6) obj. -29070.7 iterations 18
Cbc0038I Pass  22: suminf.    1.28069 (6) obj. -29070.7 iterations 0
Cbc0038I Pass  23: suminf.    1.33396 (5) obj. -29070.7 iterations 12
Cbc0038I Pass  24: suminf.    1.01253 (6) obj. -29070.7 iterations 3
Cbc0038I Pass  25: suminf.    1.74239 (6) obj. -29070.7 iterations 8
Cbc0038I Pass  26: suminf.    1.33396 (5) obj. -29070.7 iterations 14
Cbc0038I Pass  27: suminf.    2.14834 (10) obj. -29070.7 iterations 17
Cbc0038I Pass  28: suminf.    1.60819 (11) obj. -29070.7 iterations 7
Cbc0038I Pass  29: suminf.    1.36178 (12) obj. -29070.7 iterations 4
Cbc0038I Pass  30: suminf.    2.12313 (6) obj. -29070.7 iterations 16
Cbc0038I Pass  31: suminf.    2.12313 (6) obj. -29070.7 iterations 3
Cbc0038I Pass  32: suminf.    1.07686 (4) obj. -29070.7 iterations 8
Cbc0038I Pass  33: suminf.    1.07686 (4) obj. -29070.7 iterations 0
Cbc0038I Pass  34: suminf.    1.99147 (6) obj. -29070.7 iterations 5
Cbc0038I Pass  35: suminf.    1.87507 (6) obj. -29070.7 iterations 9
Cbc0038I Pass  36: suminf.    2.33005 (11) obj. -29070.7 iterations 10
Cbc0038I Pass  37: suminf.    2.26510 (11) obj. -29070.7 iterations 1
Cbc0038I Pass  38: suminf.    2.34488 (6) obj. -29070.7 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 113 columns, reduced to 36 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -28776.2 - took 0.04 seconds
Cbc0012I Integer solution of -28776.174 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 103 rows 113 columns, reduced to 14 rows 15 columns
Cbc0031I 15 added rows had average density of 20.133333
Cbc0013I At root node, 15 cuts changed objective from -30235.907 to -29615.786 in 55 passes
Cbc0014I Cut generator 0 (Probing) - 388 row cuts average 9.6 elements, 24 column cuts (24 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 191 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 30.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 66.6 elements, 0 column cuts (0 active)  in 0.389 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28776.174 best solution, best possible -29615.786 (0.85 seconds)
Cbc0010I After 12 nodes, 2 on tree, -28776.174 best solution, best possible -29615.786 (1.59 seconds)
Cbc0001I Search completed - best objective -28776.174, took 1096 iterations and 18 nodes (1.84 seconds)
Cbc0032I Strong branching done 188 times (1184 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 4, 66 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-67) rows, 75 (-28) columns and 420 (-183) elements
Clp1000I sum of infeasibilities 3.45404e-05 - average 2.50292e-07, 68 fixed columns
Coin0506I Presolve 9 (-129) rows, 7 (-68) columns and 26 (-394) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 30217.767
Clp0000I Optimal - objective value 30217.767
Coin0511I After Postsolve, objective 30217.767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.28679103 - largest nonzero change 0 ( 0%) - largest zero change 2.7727963e-05
Clp0000I Optimal - objective value 30217.767
Clp0000I Optimal - objective value 30217.767
Clp0000I Optimal - objective value 30217.767
Coin0511I After Postsolve, objective 30217.767, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30217.76732 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 0.423267
Cbc0038I Pass   1: suminf.    0.32143 (1) obj. -29673.9 iterations 14
Cbc0038I Solution found of -26685.5
Cbc0038I Relaxing continuous gives -26685.5
Cbc0038I Rounding solution of -26816.3 is better than previous of -26685.5

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 9 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -26816.3 to -27279.3 (0.01 seconds)
Cbc0038I Round again with cutoff of -27573.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.32143 (1) obj. -29673.9 iterations 0
Cbc0038I Pass   3: suminf.    0.20156 (1) obj. -27573.1 iterations 3
Cbc0038I Pass   4: suminf.    0.60258 (7) obj. -27573.1 iterations 10
Cbc0038I Pass   5: suminf.    0.11111 (1) obj. -27637.1 iterations 12
Cbc0038I Pass   6: suminf.    0.33303 (2) obj. -27573.1 iterations 2
Cbc0038I Pass   7: suminf.    1.30984 (7) obj. -27573.1 iterations 22
Cbc0038I Pass   8: suminf.    1.30971 (7) obj. -27573.1 iterations 4
Cbc0038I Pass   9: suminf.    2.44304 (6) obj. -27573.1 iterations 19
Cbc0038I Pass  10: suminf.    1.65088 (6) obj. -27573.1 iterations 6
Cbc0038I Pass  11: suminf.    1.46025 (5) obj. -27573.1 iterations 7
Cbc0038I Pass  12: suminf.    1.46025 (5) obj. -27573.1 iterations 1
Cbc0038I Pass  13: suminf.    1.65088 (6) obj. -27573.1 iterations 16
Cbc0038I Pass  14: suminf.    0.89027 (5) obj. -27573.1 iterations 12
Cbc0038I Pass  15: suminf.    0.07143 (1) obj. -27762.5 iterations 14
Cbc0038I Pass  16: suminf.    0.11443 (1) obj. -27573.1 iterations 3
Cbc0038I Pass  17: suminf.    1.35329 (7) obj. -27573.1 iterations 15
Cbc0038I Pass  18: suminf.    0.18237 (3) obj. -27573.1 iterations 14
Cbc0038I Pass  19: suminf.    0.74157 (4) obj. -27573.1 iterations 12
Cbc0038I Pass  20: suminf.    0.74157 (4) obj. -27573.1 iterations 0
Cbc0038I Pass  21: suminf.    1.09854 (3) obj. -27573.1 iterations 11
Cbc0038I Pass  22: suminf.    0.16667 (1) obj. -28439.9 iterations 7
Cbc0038I Solution found of -27678.4
Cbc0038I Relaxing continuous gives -27678.4
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 19 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -27678.4 to -28567.7 (0.02 seconds)
Cbc0038I Round again with cutoff of -28897.7
Cbc0038I Reduced cost fixing fixed 21 variables on major pass 3
Cbc0038I Pass  23: suminf.    0.33820 (2) obj. -29751 iterations 11
Cbc0038I Pass  24: suminf.    0.46665 (2) obj. -28897.7 iterations 1
Cbc0038I Pass  25: suminf.    0.46665 (2) obj. -28897.7 iterations 0
Cbc0038I Pass  26: suminf.    0.47968 (1) obj. -28897.7 iterations 1
Cbc0038I Pass  27: suminf.    0.89278 (5) obj. -28897.7 iterations 11
Cbc0038I Pass  28: suminf.    0.89278 (5) obj. -28897.7 iterations 4
Cbc0038I Pass  29: suminf.    1.81261 (6) obj. -28897.7 iterations 15
Cbc0038I Pass  30: suminf.    0.74955 (4) obj. -28897.7 iterations 15
Cbc0038I Pass  31: suminf.    0.74955 (4) obj. -28897.7 iterations 0
Cbc0038I Pass  32: suminf.    1.73736 (4) obj. -28897.7 iterations 10
Cbc0038I Pass  33: suminf.    1.73736 (4) obj. -28897.7 iterations 0
Cbc0038I Pass  34: suminf.    1.14113 (4) obj. -28897.7 iterations 6
Cbc0038I Pass  35: suminf.    1.14113 (4) obj. -28897.7 iterations 1
Cbc0038I Pass  36: suminf.    0.04022 (3) obj. -28897.7 iterations 11
Cbc0038I Pass  37: suminf.    0.02660 (1) obj. -28897.7 iterations 4
Cbc0038I Pass  38: suminf.    0.02778 (1) obj. -28903.1 iterations 1
Cbc0038I Pass  39: suminf.    0.06191 (3) obj. -28897.7 iterations 10
Cbc0038I Pass  40: suminf.    1.98083 (7) obj. -28897.7 iterations 18
Cbc0038I Pass  41: suminf.    1.02841 (5) obj. -28897.7 iterations 5
Cbc0038I Pass  42: suminf.    0.79116 (4) obj. -28897.7 iterations 1
Cbc0038I Pass  43: suminf.    1.75688 (6) obj. -28897.7 iterations 13
Cbc0038I Pass  44: suminf.    1.61344 (6) obj. -28897.7 iterations 6
Cbc0038I Pass  45: suminf.    0.89570 (4) obj. -28897.7 iterations 1
Cbc0038I Pass  46: suminf.    0.89570 (4) obj. -28897.7 iterations 3
Cbc0038I Pass  47: suminf.    0.89570 (4) obj. -28897.7 iterations 3
Cbc0038I Pass  48: suminf.    2.31541 (6) obj. -28897.7 iterations 6
Cbc0038I Pass  49: suminf.    1.73736 (4) obj. -28897.7 iterations 11
Cbc0038I Pass  50: suminf.    1.14113 (4) obj. -28897.7 iterations 5
Cbc0038I Pass  51: suminf.    1.14113 (4) obj. -28897.7 iterations 1
Cbc0038I Pass  52: suminf.    0.04022 (3) obj. -28897.7 iterations 9
Cbc0038I Rounding solution of -28776.2 is better than previous of -28567.7

Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -29293.7
Cbc0038I Reduced cost fixing fixed 31 variables on major pass 4
Cbc0038I Pass  52: suminf.    0.33820 (2) obj. -29751 iterations 0
Cbc0038I Pass  53: suminf.    0.46319 (2) obj. -29293.7 iterations 3
Cbc0038I Pass  54: suminf.    1.07563 (4) obj. -29293.7 iterations 6
Cbc0038I Pass  55: suminf.    0.83763 (5) obj. -29293.7 iterations 7
Cbc0038I Pass  56: suminf.    0.73483 (5) obj. -29293.7 iterations 5
Cbc0038I Pass  57: suminf.    1.88467 (6) obj. -29293.7 iterations 9
Cbc0038I Pass  58: suminf.    1.02543 (5) obj. -29293.7 iterations 9
Cbc0038I Pass  59: suminf.    1.02543 (5) obj. -29293.7 iterations 2
Cbc0038I Pass  60: suminf.    1.88467 (6) obj. -29293.7 iterations 7
Cbc0038I Pass  61: suminf.    0.33820 (2) obj. -29751 iterations 9
Cbc0038I Pass  62: suminf.    0.46319 (2) obj. -29293.7 iterations 3
Cbc0038I Pass  63: suminf.    2.18046 (7) obj. -29293.7 iterations 15
Cbc0038I Pass  64: suminf.    2.17498 (7) obj. -29293.7 iterations 7
Cbc0038I Pass  65: suminf.    2.70631 (8) obj. -29293.7 iterations 10
Cbc0038I Pass  66: suminf.    1.68274 (5) obj. -29293.7 iterations 4
Cbc0038I Pass  67: suminf.    1.60824 (5) obj. -29293.7 iterations 4
Cbc0038I Pass  68: suminf.    1.21058 (5) obj. -29293.7 iterations 9
Cbc0038I Pass  69: suminf.    2.32721 (10) obj. -29293.7 iterations 14
Cbc0038I Pass  70: suminf.    2.18157 (9) obj. -29293.7 iterations 2
Cbc0038I Pass  71: suminf.    0.78395 (6) obj. -29293.7 iterations 8
Cbc0038I Pass  72: suminf.    0.33820 (2) obj. -29751 iterations 8
Cbc0038I Pass  73: suminf.    0.46319 (2) obj. -29293.7 iterations 3
Cbc0038I Pass  74: suminf.    0.85131 (5) obj. -29293.7 iterations 8
Cbc0038I Pass  75: suminf.    0.72212 (4) obj. -29293.7 iterations 5
Cbc0038I Pass  76: suminf.    0.80196 (4) obj. -29293.7 iterations 3
Cbc0038I Pass  77: suminf.    0.78389 (7) obj. -29293.7 iterations 5
Cbc0038I Pass  78: suminf.    1.60229 (9) obj. -29293.7 iterations 16
Cbc0038I Pass  79: suminf.    0.40708 (8) obj. -29293.7 iterations 13
Cbc0038I Pass  80: suminf.    2.53481 (9) obj. -29293.7 iterations 14
Cbc0038I Pass  81: suminf.    0.48339 (6) obj. -29293.7 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -28776.2 - took 0.04 seconds
Cbc0012I Integer solution of -28776.174 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 11 rows 11 columns
Cbc0031I 6 added rows had average density of 34.833333
Cbc0013I At root node, 6 cuts changed objective from -30217.767 to -29809.407 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 22 row cuts average 3.5 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 50 row cuts average 32.5 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is 1
Cbc0010I After 7 nodes, 4 on tree, -28776.174 best solution, best possible -29809.407 (0.76 seconds)
Cbc0001I Search completed - best objective -28776.174, took 446 iterations and 20 nodes (1.17 seconds)
Cbc0032I Strong branching done 182 times (851 iterations), fathomed 2 nodes and fixed 8 variables
Cbc0035I Maximum depth 4, 99 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       1.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 101 (-104) rows, 111 (-92) columns and 1751 (-3903) elements
Clp1000I sum of infeasibilities 1.62033e-09 - average 1.60428e-11, 68 fixed columns
Coin0506I Presolve 34 (-67) rows, 34 (-77) columns and 222 (-1529) elements
Clp0006I 0  Obj 30176.283 Dual inf 164.61202 (33)
Clp0029I End of values pass after 34 iterations
Clp0000I Optimal - objective value 30258.657
Clp0000I Optimal - objective value 30258.657
Coin0511I After Postsolve, objective 30258.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 30258.657 Dual inf 8793.5017 (5)
Clp0014I Perturbing problem by 0.001% of 1.6963399 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 30258.657
Clp0000I Optimal - objective value 30258.657
Clp0000I Optimal - objective value 30258.657
Coin0511I After Postsolve, objective 30258.657, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 30258.65676 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 113 columns (113 integer (113 of which binary)) and 1758 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.316%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 5.90441
Cbc0038I Pass   1: suminf.    3.30112 (27) obj. -25507.3 iterations 15
Cbc0038I Pass   2: suminf.    3.30112 (27) obj. -25507.3 iterations 0
Cbc0038I Pass   3: suminf.    1.51940 (14) obj. -25487.4 iterations 13
Cbc0038I Pass   4: suminf.    0.26783 (3) obj. -25476.7 iterations 11
Cbc0038I Solution found of -25474
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 113 columns, reduced to 12 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -25474 to -27279.3 (0.05 seconds)
Cbc0038I Round again with cutoff of -27576.2
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   5: suminf.    4.45323 (33) obj. -27576.2 iterations 3
Cbc0038I Pass   6: suminf.    4.45323 (33) obj. -27576.2 iterations 0
Cbc0038I Pass   7: suminf.    3.13828 (27) obj. -27576.2 iterations 14
Cbc0038I Pass   8: suminf.    0.03846 (1) obj. -28903.4 iterations 31
Cbc0038I Solution found of -28776.2
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 113 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -29070.7
Cbc0038I Reduced cost fixing fixed 26 variables on major pass 3
Cbc0038I Pass   9: suminf.    4.58161 (34) obj. -29070.7 iterations 1
Cbc0038I Pass  10: suminf.    4.58161 (34) obj. -29070.7 iterations 0
Cbc0038I Pass  11: suminf.    2.36916 (19) obj. -29175.6 iterations 15
Cbc0038I Pass  12: suminf.    0.11869 (2) obj. -29153.2 iterations 17
Cbc0038I Pass  13: suminf.    0.04564 (1) obj. -29070.7 iterations 3
Cbc0038I Pass  14: suminf.    0.02778 (1) obj. -29152.3 iterations 2
Cbc0038I Pass  15: suminf.    3.08369 (13) obj. -29070.7 iterations 20
Cbc0038I Pass  16: suminf.    2.01219 (10) obj. -29070.7 iterations 10
Cbc0038I Pass  17: suminf.    0.33820 (2) obj. -29749 iterations 14
Cbc0038I Pass  18: suminf.    0.52361 (2) obj. -29070.7 iterations 1
Cbc0038I Pass  19: suminf.    1.98783 (15) obj. -29070.7 iterations 27
Cbc0038I Pass  20: suminf.    1.65275 (12) obj. -29070.7 iterations 15
Cbc0038I Pass  21: suminf.    1.28069 (6) obj. -29070.7 iterations 18
Cbc0038I Pass  22: suminf.    1.28069 (6) obj. -29070.7 iterations 0
Cbc0038I Pass  23: suminf.    1.33396 (5) obj. -29070.7 iterations 12
Cbc0038I Pass  24: suminf.    1.01253 (6) obj. -29070.7 iterations 3
Cbc0038I Pass  25: suminf.    1.74239 (6) obj. -29070.7 iterations 8
Cbc0038I Pass  26: suminf.    1.33396 (5) obj. -29070.7 iterations 14
Cbc0038I Pass  27: suminf.    2.14834 (10) obj. -29070.7 iterations 17
Cbc0038I Pass  28: suminf.    1.60819 (11) obj. -29070.7 iterations 7
Cbc0038I Pass  29: suminf.    1.36178 (12) obj. -29070.7 iterations 4
Cbc0038I Pass  30: suminf.    2.12313 (6) obj. -29070.7 iterations 16
Cbc0038I Pass  31: suminf.    2.12313 (6) obj. -29070.7 iterations 3
Cbc0038I Pass  32: suminf.    1.07686 (4) obj. -29070.7 iterations 8
Cbc0038I Pass  33: suminf.    1.07686 (4) obj. -29070.7 iterations 0
Cbc0038I Pass  34: suminf.    1.99147 (6) obj. -29070.7 iterations 5
Cbc0038I Pass  35: suminf.    1.87507 (6) obj. -29070.7 iterations 9
Cbc0038I Pass  36: suminf.    2.33005 (11) obj. -29070.7 iterations 10
Cbc0038I Pass  37: suminf.    2.26510 (11) obj. -29070.7 iterations 1
Cbc0038I Pass  38: suminf.    2.34488 (6) obj. -29070.7 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 113 columns, reduced to 36 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -28776.2 - took 0.04 seconds
Cbc0012I Integer solution of -28776.174 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 103 rows 113 columns, reduced to 14 rows 15 columns
Cbc0031I 15 added rows had average density of 20.133333
Cbc0013I At root node, 15 cuts changed objective from -30235.907 to -29615.786 in 55 passes
Cbc0014I Cut generator 0 (Probing) - 388 row cuts average 9.6 elements, 24 column cuts (24 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 191 row cuts average 34.4 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 82 row cuts average 30.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 21 row cuts average 66.6 elements, 0 column cuts (0 active)  in 0.456 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28776.174 best solution, best possible -29615.786 (1.02 seconds)
Cbc0010I After 12 nodes, 2 on tree, -28776.174 best solution, best possible -29615.786 (1.77 seconds)
Cbc0001I Search completed - best objective -28776.174, took 1096 iterations and 18 nodes (2.04 seconds)
Cbc0032I Strong branching done 188 times (1184 iterations), fathomed 3 nodes and fixed 9 variables
Cbc0035I Maximum depth 4, 66 variables fixed on reduced cost
Total time (CPU seconds):       1.23   (Wallclock seconds):       2.05

