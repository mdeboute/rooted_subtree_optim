Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 0.000733857 - average 1.28747e-05, 1 fixed columns
Coin0506I Presolve 56 (-1) rows, 32 (-1) columns and 168 (-4) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Coin0511I After Postsolve, objective 95.824545, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Coin0511I After Postsolve, objective 95.824545, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.82454505 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.578%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.50657
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.5558 iterations 18
Cbc0038I Solution found of -18.5558
Cbc0038I Relaxing continuous gives -18.5558
Cbc0038I Rounding solution of -35.7507 is better than previous of -18.5558

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -35.7507 to -39.7566 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.2953
Cbc0038I Pass   2: suminf.    0.44790 (2) obj. -45.2953 iterations 2
Cbc0038I Pass   3: suminf.    0.25750 (1) obj. -45.2953 iterations 2
Cbc0038I Pass   4: suminf.    2.39557 (7) obj. -45.2953 iterations 10
Cbc0038I Pass   5: suminf.    0.84627 (3) obj. -45.2953 iterations 7
Cbc0038I Pass   6: suminf.    0.72234 (2) obj. -45.2953 iterations 1
Cbc0038I Pass   7: suminf.    0.57838 (2) obj. -45.2953 iterations 3
Cbc0038I Pass   8: suminf.    0.50657 (4) obj. -45.2953 iterations 2
Cbc0038I Pass   9: suminf.    0.84694 (3) obj. -45.2953 iterations 5
Cbc0038I Pass  10: suminf.    0.80488 (4) obj. -45.2953 iterations 1
Cbc0038I Pass  11: suminf.    0.47912 (2) obj. -45.2953 iterations 3
Cbc0038I Pass  12: suminf.    0.46509 (2) obj. -45.2953 iterations 3
Cbc0038I Pass  13: suminf.    0.49991 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  14: suminf.    0.49991 (2) obj. -45.2953 iterations 0
Cbc0038I Pass  15: suminf.    0.47417 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  16: suminf.    0.49991 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  17: suminf.    2.51824 (10) obj. -45.2953 iterations 16
Cbc0038I Pass  18: suminf.    1.45545 (4) obj. -45.2953 iterations 9
Cbc0038I Pass  19: suminf.    0.39067 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  20: suminf.    0.29587 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  21: suminf.    0.95942 (3) obj. -45.2953 iterations 3
Cbc0038I Pass  22: suminf.    0.61777 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  23: suminf.    0.29587 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  24: suminf.    1.41249 (4) obj. -45.2953 iterations 6
Cbc0038I Pass  25: suminf.    1.41249 (4) obj. -45.2953 iterations 1
Cbc0038I Pass  26: suminf.    0.27790 (2) obj. -45.2953 iterations 5
Cbc0038I Pass  27: suminf.    0.36076 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  28: suminf.    0.30800 (1) obj. -45.2953 iterations 1
Cbc0038I Pass  29: suminf.    0.85880 (3) obj. -45.2953 iterations 5
Cbc0038I Pass  30: suminf.    0.58586 (3) obj. -45.2953 iterations 3
Cbc0038I Pass  31: suminf.    0.50417 (2) obj. -45.2953 iterations 5
Cbc0038I Rounding solution of -40.0491 is better than previous of -39.7566

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -40.0491 to -41.4917 (0.04 seconds)
Cbc0038I Round again with cutoff of -55.2649
Cbc0038I Pass  31: suminf.    0.50338 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  32: suminf.    0.49778 (4) obj. -55.2649 iterations 1
Cbc0038I Pass  33: suminf.    0.88580 (5) obj. -55.2649 iterations 8
Cbc0038I Pass  34: suminf.    0.81820 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  35: suminf.    0.58607 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  36: suminf.    0.58607 (3) obj. -55.2649 iterations 0
Cbc0038I Pass  37: suminf.    1.35901 (5) obj. -55.2649 iterations 8
Cbc0038I Pass  38: suminf.    1.27314 (4) obj. -55.2649 iterations 2
Cbc0038I Pass  39: suminf.    0.84198 (5) obj. -55.2649 iterations 7
Cbc0038I Pass  40: suminf.    0.78011 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  41: suminf.    0.55641 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  42: suminf.    0.55641 (3) obj. -55.2649 iterations 0
Cbc0038I Pass  43: suminf.    0.84198 (5) obj. -55.2649 iterations 2
Cbc0038I Pass  44: suminf.    0.89934 (7) obj. -55.2649 iterations 13
Cbc0038I Pass  45: suminf.    0.89784 (7) obj. -55.2649 iterations 1
Cbc0038I Pass  46: suminf.    1.02198 (4) obj. -55.2649 iterations 9
Cbc0038I Pass  47: suminf.    1.02198 (4) obj. -55.2649 iterations 0
Cbc0038I Pass  48: suminf.    1.23813 (4) obj. -55.2649 iterations 2
Cbc0038I Pass  49: suminf.    1.23813 (4) obj. -55.2649 iterations 0
Cbc0038I Pass  50: suminf.    1.28318 (5) obj. -55.2649 iterations 5
Cbc0038I Pass  51: suminf.    0.62711 (2) obj. -55.2649 iterations 3
Cbc0038I Pass  52: suminf.    0.61142 (2) obj. -55.2649 iterations 1
Cbc0038I Pass  53: suminf.    1.00841 (3) obj. -55.2649 iterations 2
Cbc0038I Pass  54: suminf.    1.35538 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  55: suminf.    0.61142 (2) obj. -55.2649 iterations 1
Cbc0038I Pass  56: suminf.    3.48375 (12) obj. -55.2649 iterations 14
Cbc0038I Pass  57: suminf.    1.47648 (8) obj. -55.2649 iterations 6
Cbc0038I Pass  58: suminf.    1.46449 (7) obj. -55.2649 iterations 1
Cbc0038I Pass  59: suminf.    1.48281 (4) obj. -55.2649 iterations 6
Cbc0038I Pass  60: suminf.    1.28318 (5) obj. -55.2649 iterations 3
Cbc0038I Rounding solution of -42.166 is better than previous of -41.4917

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -42.166 to -42.3821 (0.06 seconds)
Cbc0038I Round again with cutoff of -67.2284
Cbc0038I Pass  60: suminf.    1.29614 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  61: suminf.    1.25233 (8) obj. -67.2284 iterations 2
Cbc0038I Pass  62: suminf.    1.12323 (4) obj. -67.2284 iterations 4
Cbc0038I Pass  63: suminf.    1.04733 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  64: suminf.    1.00766 (7) obj. -67.2284 iterations 1
Cbc0038I Pass  65: suminf.    2.09584 (6) obj. -67.2284 iterations 9
Cbc0038I Pass  66: suminf.    0.89914 (4) obj. -67.2284 iterations 3
Cbc0038I Pass  67: suminf.    0.79199 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  68: suminf.    2.05871 (6) obj. -67.2284 iterations 4
Cbc0038I Pass  69: suminf.    2.08499 (6) obj. -67.2284 iterations 5
Cbc0038I Pass  70: suminf.    1.91855 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  71: suminf.    1.51584 (4) obj. -67.2284 iterations 4
Cbc0038I Pass  72: suminf.    1.39678 (5) obj. -67.2284 iterations 2
Cbc0038I Pass  73: suminf.    1.26681 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  74: suminf.    1.24728 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  75: suminf.    1.24728 (6) obj. -67.2284 iterations 0
Cbc0038I Pass  76: suminf.    1.23329 (4) obj. -67.2284 iterations 5
Cbc0038I Pass  77: suminf.    1.16236 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  78: suminf.    1.38708 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  79: suminf.    1.34130 (5) obj. -67.2284 iterations 1
Cbc0038I Pass  80: suminf.    1.51584 (4) obj. -67.2284 iterations 8
Cbc0038I Pass  81: suminf.    1.39678 (5) obj. -67.2284 iterations 2
Cbc0038I Pass  82: suminf.    1.26681 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  83: suminf.    1.24728 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  84: suminf.    1.24728 (6) obj. -67.2284 iterations 0
Cbc0038I Pass  85: suminf.    1.23329 (4) obj. -67.2284 iterations 5
Cbc0038I Pass  86: suminf.    1.16236 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  87: suminf.    1.38708 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  88: suminf.    1.34130 (5) obj. -67.2284 iterations 1
Cbc0038I Pass  89: suminf.    1.51584 (4) obj. -67.2284 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -42.3821 - took 0.10 seconds
Cbc0012I Integer solution of -42.382147 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 40 rows 22 columns
Cbc0031I 9 added rows had average density of 26.333333
Cbc0013I At root node, 9 cuts changed objective from -95.143194 to -72.484215 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2730 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1314 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.713 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -42.382147 best solution, best possible -72.484215 (1.57 seconds)
Cbc0001I Search completed - best objective -42.3821473, took 3991 iterations and 34 nodes (1.68 seconds)
Cbc0032I Strong branching done 344 times (3548 iterations), fathomed 0 nodes and fixed 16 variables
Cbc0035I Maximum depth 8, 71 variables fixed on reduced cost
Total time (CPU seconds):       1.17   (Wallclock seconds):       1.68

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-14) rows, 61 (-5) columns and 611 (-112) elements
Clp1000I sum of infeasibilities 1.74814e-08 - average 3.23729e-10, 3 fixed columns
Coin0506I Presolve 53 (-1) rows, 58 (-3) columns and 547 (-64) elements
Clp0006I 0  Obj 84.001843 Dual inf 7.6048605 (57)
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 1.7748382 - largest nonzero change 1.1721771e-05 ( 0.00091204228%) - largest zero change 2.9469024e-05
Clp0000I Optimal - objective value 107.68276
Clp0000I Optimal - objective value 107.68276
Coin0511I After Postsolve, objective 107.68276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 107.68276
Clp0000I Optimal - objective value 107.68276
Clp0000I Optimal - objective value 107.68276
Clp0000I Optimal - objective value 107.68276
Coin0511I After Postsolve, objective 107.68276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.6827649 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 61 columns (61 integer (61 of which binary)) and 614 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.464%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.23292
Cbc0038I Pass   1: suminf.    1.71980 (16) obj. -55.9968 iterations 18
Cbc0038I Pass   2: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Solution found of -11.1653
Cbc0038I Rounding solution of -29.2489 is better than previous of -11.1653

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 61 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -36.6373
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Pass   4: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Pass   5: suminf.    0.80812 (6) obj. -36.6373 iterations 38
Cbc0038I Pass   6: suminf.    0.57095 (6) obj. -36.6373 iterations 1
Cbc0038I Pass   7: suminf.    0.82851 (3) obj. -36.6373 iterations 8
Cbc0038I Pass   8: suminf.    0.82851 (3) obj. -36.6373 iterations 0
Cbc0038I Pass   9: suminf.    0.76406 (2) obj. -36.6373 iterations 3
Cbc0038I Pass  10: suminf.    0.69457 (2) obj. -36.6373 iterations 1
Cbc0038I Pass  11: suminf.    2.20168 (10) obj. -36.6373 iterations 17
Cbc0038I Pass  12: suminf.    1.33631 (7) obj. -37.8866 iterations 3
Cbc0038I Pass  13: suminf.    1.29779 (7) obj. -36.6373 iterations 1
Cbc0038I Pass  14: suminf.    0.95591 (3) obj. -36.6373 iterations 8
Cbc0038I Pass  15: suminf.    0.73243 (3) obj. -36.6373 iterations 1
Cbc0038I Pass  16: suminf.    1.20553 (6) obj. -39.2387 iterations 10
Cbc0038I Pass  17: suminf.    0.66274 (6) obj. -36.6373 iterations 4
Cbc0038I Pass  18: suminf.    1.12409 (4) obj. -36.6373 iterations 8
Cbc0038I Pass  19: suminf.    0.77005 (3) obj. -36.6373 iterations 2
Cbc0038I Pass  20: suminf.    1.12086 (3) obj. -36.6373 iterations 2
Cbc0038I Pass  21: suminf.    2.32793 (14) obj. -36.6373 iterations 18
Cbc0038I Pass  22: suminf.    2.32707 (14) obj. -36.6373 iterations 1
Cbc0038I Pass  23: suminf.    1.96590 (5) obj. -36.6373 iterations 16
Cbc0038I Pass  24: suminf.    0.75449 (3) obj. -36.6373 iterations 9
Cbc0038I Pass  25: suminf.    0.88514 (3) obj. -41.9835 iterations 4
Cbc0038I Pass  26: suminf.    0.89153 (3) obj. -36.6373 iterations 5
Cbc0038I Pass  27: suminf.    0.87816 (4) obj. -36.6373 iterations 2
Cbc0038I Pass  28: suminf.    1.70657 (6) obj. -36.6373 iterations 4
Cbc0038I Pass  29: suminf.    1.35249 (4) obj. -36.6373 iterations 6
Cbc0038I Pass  30: suminf.    0.47994 (2) obj. -36.6373 iterations 7
Cbc0038I Pass  31: suminf.    0.38425 (3) obj. -36.6373 iterations 2
Cbc0038I Pass  32: suminf.    0.87816 (4) obj. -36.6373 iterations 5
Cbc0038I Rounding solution of -36.0988 is better than previous of -29.2489

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 61 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -49.9363
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Pass  33: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Pass  34: suminf.    1.62328 (9) obj. -49.9363 iterations 36
Cbc0038I Pass  35: suminf.    1.57664 (9) obj. -49.9363 iterations 2
Cbc0038I Pass  36: suminf.    1.05955 (3) obj. -49.9363 iterations 8
Cbc0038I Pass  37: suminf.    0.88400 (3) obj. -52.2184 iterations 1
Cbc0038I Pass  38: suminf.    1.05955 (3) obj. -49.9363 iterations 2
Cbc0038I Pass  39: suminf.    3.12583 (16) obj. -49.9363 iterations 19
Cbc0038I Pass  40: suminf.    2.34666 (9) obj. -49.9363 iterations 5
Cbc0038I Pass  41: suminf.    1.34592 (4) obj. -49.9363 iterations 9
Cbc0038I Pass  42: suminf.    1.27821 (4) obj. -49.9363 iterations 3
Cbc0038I Pass  43: suminf.    1.08334 (3) obj. -49.9363 iterations 6
Cbc0038I Pass  44: suminf.    1.03217 (3) obj. -49.9363 iterations 1
Cbc0038I Pass  45: suminf.    1.08334 (3) obj. -49.9363 iterations 2
Cbc0038I Pass  46: suminf.    1.89066 (8) obj. -49.9363 iterations 8
Cbc0038I Pass  47: suminf.    1.89066 (8) obj. -49.9363 iterations 1
Cbc0038I Pass  48: suminf.    1.08334 (3) obj. -49.9363 iterations 7
Cbc0038I Pass  49: suminf.    1.46387 (9) obj. -49.9363 iterations 17
Cbc0038I Pass  50: suminf.    1.46387 (9) obj. -49.9363 iterations 0
Cbc0038I Pass  51: suminf.    1.52242 (5) obj. -49.9363 iterations 11
Cbc0038I Pass  52: suminf.    1.52242 (5) obj. -49.9363 iterations 1
Cbc0038I Pass  53: suminf.    1.16743 (5) obj. -49.9363 iterations 5
Cbc0038I Pass  54: suminf.    1.16743 (5) obj. -49.9363 iterations 0
Cbc0038I Pass  55: suminf.    0.75859 (3) obj. -50.7887 iterations 3
Cbc0038I Pass  56: suminf.    0.71038 (3) obj. -49.9363 iterations 1
Cbc0038I Pass  57: suminf.    0.82416 (3) obj. -49.9363 iterations 2
Cbc0038I Pass  58: suminf.    2.25400 (12) obj. -49.9363 iterations 9
Cbc0038I Pass  59: suminf.    2.01780 (9) obj. -49.9363 iterations 4
Cbc0038I Pass  60: suminf.    0.82416 (3) obj. -49.9363 iterations 7
Cbc0038I Pass  61: suminf.    1.92161 (12) obj. -49.9363 iterations 19
Cbc0038I Rounding solution of -40.0491 is better than previous of -36.0988

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 61 columns, reduced to 39 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -65.8951
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.26230 (21) obj. -65.8951 iterations 9
Cbc0038I Pass  62: suminf.    2.26230 (21) obj. -65.8951 iterations 1
Cbc0038I Pass  63: suminf.    1.64736 (6) obj. -65.8951 iterations 28
Cbc0038I Pass  64: suminf.    1.13923 (6) obj. -65.8951 iterations 2
Cbc0038I Pass  65: suminf.    1.21591 (4) obj. -65.8951 iterations 5
Cbc0038I Pass  66: suminf.    1.04985 (4) obj. -67.0575 iterations 1
Cbc0038I Pass  67: suminf.    1.21591 (4) obj. -65.8951 iterations 2
Cbc0038I Pass  68: suminf.    1.86289 (8) obj. -65.8951 iterations 4
Cbc0038I Pass  69: suminf.    1.29142 (6) obj. -65.8951 iterations 4
Cbc0038I Pass  70: suminf.    1.07306 (4) obj. -65.8951 iterations 3
Cbc0038I Pass  71: suminf.    1.04985 (4) obj. -66.0575 iterations 1
Cbc0038I Pass  72: suminf.    1.07306 (4) obj. -65.8951 iterations 2
Cbc0038I Pass  73: suminf.    1.95858 (8) obj. -65.8951 iterations 18
Cbc0038I Pass  74: suminf.    1.95858 (8) obj. -65.8951 iterations 3
Cbc0038I Pass  75: suminf.    1.78289 (6) obj. -65.8951 iterations 5
Cbc0038I Pass  76: suminf.    1.50338 (6) obj. -65.8951 iterations 2
Cbc0038I Pass  77: suminf.    1.79369 (6) obj. -65.8951 iterations 3
Cbc0038I Pass  78: suminf.    1.79369 (6) obj. -65.8951 iterations 0
Cbc0038I Pass  79: suminf.    2.40876 (14) obj. -65.8951 iterations 22
Cbc0038I Pass  80: suminf.    2.33040 (14) obj. -65.8951 iterations 5
Cbc0038I Pass  81: suminf.    2.27695 (8) obj. -65.8951 iterations 15
Cbc0038I Pass  82: suminf.    1.63453 (7) obj. -65.8951 iterations 5
Cbc0038I Pass  83: suminf.    1.63453 (7) obj. -65.8951 iterations 0
Cbc0038I Pass  84: suminf.    1.90515 (7) obj. -65.8951 iterations 5
Cbc0038I Pass  85: suminf.    1.90515 (7) obj. -65.8951 iterations 1
Cbc0038I Pass  86: suminf.    1.84257 (7) obj. -65.8951 iterations 1
Cbc0038I Pass  87: suminf.    1.84257 (7) obj. -65.8951 iterations 0
Cbc0038I Pass  88: suminf.    1.90515 (7) obj. -65.8951 iterations 5
Cbc0038I Pass  89: suminf.    1.61836 (9) obj. -65.8951 iterations 17
Cbc0038I Pass  90: suminf.    1.29274 (9) obj. -65.8951 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 61 columns, reduced to 43 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -40.0491 - took 0.04 seconds
Cbc0012I Integer solution of -40.049115 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 54 rows 61 columns, reduced to 37 rows 41 columns
Cbc0031I 27 added rows had average density of 20.037037
Cbc0013I At root node, 27 cuts changed objective from -103.13216 to -56.588929 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3652 row cuts average 3.3 elements, 7 column cuts (7 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1153 row cuts average 50.2 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 101 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 191 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 362 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 121 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.697 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -40.049115 best solution, best possible -56.588929 (1.67 seconds)
Cbc0012I Integer solution of -42.337756 found by DiveCoefficient after 2701 iterations and 2 nodes (1.78 seconds)
Cbc0016I Integer solution of -42.382147 found by strong branching after 2736 iterations and 2 nodes (1.87 seconds)
Cbc0010I After 13 nodes, 4 on tree, -42.382147 best solution, best possible -54.516714 (2.46 seconds)
Cbc0010I After 23 nodes, 2 on tree, -42.382147 best solution, best possible -54.516714 (3.21 seconds)
Cbc0010I After 36 nodes, 3 on tree, -42.382147 best solution, best possible -54.516714 (3.98 seconds)
Cbc0038I Full problem 54 rows 61 columns, reduced to 12 rows 18 columns
Cbc0038I Full problem 81 rows 61 columns, reduced to 54 rows 53 columns
Cbc0044I Reduced cost fixing - 54 rows, 53 columns - restarting search
Cbc0038I Initial state - 27 integers unsatisfied sum - 5.67309
Cbc0038I Pass   1: suminf.    1.32729 (15) obj. -42.3822 iterations 13
Cbc0038I Pass   2: suminf.    1.01882 (14) obj. -42.3822 iterations 2
Cbc0038I Pass   3: suminf.    1.26978 (4) obj. -42.3822 iterations 23
Cbc0038I Pass   4: suminf.    1.26978 (4) obj. -42.3822 iterations 0
Cbc0038I Pass   5: suminf.    0.77557 (3) obj. -42.3822 iterations 3
Cbc0038I Pass   6: suminf.    0.73537 (3) obj. -42.3822 iterations 2
Cbc0038I Pass   7: suminf.    0.73537 (3) obj. -42.3822 iterations 0
Cbc0038I Pass   8: suminf.    0.51925 (3) obj. -42.3822 iterations 1
Cbc0038I Pass   9: suminf.    0.51925 (3) obj. -42.3822 iterations 0
Cbc0038I Pass  10: suminf.    0.73537 (3) obj. -42.3822 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 53 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (4.74 seconds)
Cbc0038I Full problem 55 rows 53 columns, reduced to 55 rows 53 columns
Cbc0038I After 4.93 seconds - Feasibility pump exiting with objective of -42.3533 - took 0.19 seconds
Cbc0031I 25 added rows had average density of 19.4
Cbc0013I At root node, 25 cuts changed objective from -87.576107 to -52.579128 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1442 row cuts average 2.1 elements, 5 column cuts (5 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 493 row cuts average 45.5 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 157 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 147 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 289 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 185 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 71 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.647 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 170 row cuts average 7.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -52.579128 (6.34 seconds)
Cbc0010I After 10 nodes, 3 on tree, 1e+50 best solution, best possible -52.579128 (7.38 seconds)
Cbc0010I After 25 nodes, 2 on tree, 1e+50 best solution, best possible -52.579128 (8.43 seconds)
Cbc0010I After 45 nodes, 3 on tree, 1e+50 best solution, best possible -52.579128 (9.43 seconds)
Cbc0001I Search completed - best objective 1e+50, took 4839 iterations and 52 nodes (9.61 seconds)
Cbc0032I Strong branching done 756 times (6707 iterations), fathomed 7 nodes and fixed 27 variables
Cbc0035I Maximum depth 7, 49 variables fixed on reduced cost
Cbc0038I Probing was tried 353 times and created 2758 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
Cbc0038I Gomory was tried 339 times and created 858 cuts of which 0 were active after adding rounds of cuts (0.076 seconds)
Cbc0038I Knapsack was tried 339 times and created 506 cuts of which 0 were active after adding rounds of cuts (0.109 seconds)
Cbc0038I Clique was tried 339 times and created 427 cuts of which 0 were active after adding rounds of cuts (0.019 seconds)
Cbc0038I OddWheel was tried 339 times and created 237 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
Cbc0038I MixedIntegerRounding2 was tried 339 times and created 571 cuts of which 0 were active after adding rounds of cuts (0.047 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 339 times and created 486 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Cbc0038I ZeroHalf was tried 339 times and created 314 cuts of which 0 were active after adding rounds of cuts (2.121 seconds)
Cbc0038I Stored from first was tried 339 times and created 302 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -42.3821473, took 10071 iterations and 102 nodes (9.62 seconds)
Cbc0032I Strong branching done 746 times (8834 iterations), fathomed 4 nodes and fixed 15 variables
Cbc0035I Maximum depth 11, 64 variables fixed on reduced cost
Total time (CPU seconds):       6.12   (Wallclock seconds):       9.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 0.000733857 - average 1.28747e-05, 1 fixed columns
Coin0506I Presolve 56 (-1) rows, 32 (-1) columns and 168 (-4) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Coin0511I After Postsolve, objective 95.824545, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Clp0000I Optimal - objective value 95.824545
Coin0511I After Postsolve, objective 95.824545, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.82454505 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 173 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.578%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.50657
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.5558 iterations 18
Cbc0038I Solution found of -18.5558
Cbc0038I Relaxing continuous gives -18.5558
Cbc0038I Rounding solution of -35.7507 is better than previous of -18.5558

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -35.7507 to -39.7566 (0.02 seconds)
Cbc0038I Round again with cutoff of -45.2953
Cbc0038I Pass   2: suminf.    0.44790 (2) obj. -45.2953 iterations 2
Cbc0038I Pass   3: suminf.    0.25750 (1) obj. -45.2953 iterations 2
Cbc0038I Pass   4: suminf.    2.39557 (7) obj. -45.2953 iterations 10
Cbc0038I Pass   5: suminf.    0.84627 (3) obj. -45.2953 iterations 7
Cbc0038I Pass   6: suminf.    0.72234 (2) obj. -45.2953 iterations 1
Cbc0038I Pass   7: suminf.    0.57838 (2) obj. -45.2953 iterations 3
Cbc0038I Pass   8: suminf.    0.50657 (4) obj. -45.2953 iterations 2
Cbc0038I Pass   9: suminf.    0.84694 (3) obj. -45.2953 iterations 5
Cbc0038I Pass  10: suminf.    0.80488 (4) obj. -45.2953 iterations 1
Cbc0038I Pass  11: suminf.    0.47912 (2) obj. -45.2953 iterations 3
Cbc0038I Pass  12: suminf.    0.46509 (2) obj. -45.2953 iterations 3
Cbc0038I Pass  13: suminf.    0.49991 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  14: suminf.    0.49991 (2) obj. -45.2953 iterations 0
Cbc0038I Pass  15: suminf.    0.47417 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  16: suminf.    0.49991 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  17: suminf.    2.51824 (10) obj. -45.2953 iterations 16
Cbc0038I Pass  18: suminf.    1.45545 (4) obj. -45.2953 iterations 9
Cbc0038I Pass  19: suminf.    0.39067 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  20: suminf.    0.29587 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  21: suminf.    0.95942 (3) obj. -45.2953 iterations 3
Cbc0038I Pass  22: suminf.    0.61777 (2) obj. -45.2953 iterations 2
Cbc0038I Pass  23: suminf.    0.29587 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  24: suminf.    1.41249 (4) obj. -45.2953 iterations 6
Cbc0038I Pass  25: suminf.    1.41249 (4) obj. -45.2953 iterations 1
Cbc0038I Pass  26: suminf.    0.27790 (2) obj. -45.2953 iterations 5
Cbc0038I Pass  27: suminf.    0.36076 (2) obj. -45.2953 iterations 1
Cbc0038I Pass  28: suminf.    0.30800 (1) obj. -45.2953 iterations 1
Cbc0038I Pass  29: suminf.    0.85880 (3) obj. -45.2953 iterations 5
Cbc0038I Pass  30: suminf.    0.58586 (3) obj. -45.2953 iterations 3
Cbc0038I Pass  31: suminf.    0.50417 (2) obj. -45.2953 iterations 5
Cbc0038I Rounding solution of -40.0491 is better than previous of -39.7566

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -40.0491 to -41.4917 (0.05 seconds)
Cbc0038I Round again with cutoff of -55.2649
Cbc0038I Pass  31: suminf.    0.50338 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  32: suminf.    0.49778 (4) obj. -55.2649 iterations 1
Cbc0038I Pass  33: suminf.    0.88580 (5) obj. -55.2649 iterations 8
Cbc0038I Pass  34: suminf.    0.81820 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  35: suminf.    0.58607 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  36: suminf.    0.58607 (3) obj. -55.2649 iterations 0
Cbc0038I Pass  37: suminf.    1.35901 (5) obj. -55.2649 iterations 8
Cbc0038I Pass  38: suminf.    1.27314 (4) obj. -55.2649 iterations 2
Cbc0038I Pass  39: suminf.    0.84198 (5) obj. -55.2649 iterations 7
Cbc0038I Pass  40: suminf.    0.78011 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  41: suminf.    0.55641 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  42: suminf.    0.55641 (3) obj. -55.2649 iterations 0
Cbc0038I Pass  43: suminf.    0.84198 (5) obj. -55.2649 iterations 2
Cbc0038I Pass  44: suminf.    0.89934 (7) obj. -55.2649 iterations 13
Cbc0038I Pass  45: suminf.    0.89784 (7) obj. -55.2649 iterations 1
Cbc0038I Pass  46: suminf.    1.02198 (4) obj. -55.2649 iterations 9
Cbc0038I Pass  47: suminf.    1.02198 (4) obj. -55.2649 iterations 0
Cbc0038I Pass  48: suminf.    1.23813 (4) obj. -55.2649 iterations 2
Cbc0038I Pass  49: suminf.    1.23813 (4) obj. -55.2649 iterations 0
Cbc0038I Pass  50: suminf.    1.28318 (5) obj. -55.2649 iterations 5
Cbc0038I Pass  51: suminf.    0.62711 (2) obj. -55.2649 iterations 3
Cbc0038I Pass  52: suminf.    0.61142 (2) obj. -55.2649 iterations 1
Cbc0038I Pass  53: suminf.    1.00841 (3) obj. -55.2649 iterations 2
Cbc0038I Pass  54: suminf.    1.35538 (3) obj. -55.2649 iterations 1
Cbc0038I Pass  55: suminf.    0.61142 (2) obj. -55.2649 iterations 1
Cbc0038I Pass  56: suminf.    3.48375 (12) obj. -55.2649 iterations 14
Cbc0038I Pass  57: suminf.    1.47648 (8) obj. -55.2649 iterations 6
Cbc0038I Pass  58: suminf.    1.46449 (7) obj. -55.2649 iterations 1
Cbc0038I Pass  59: suminf.    1.48281 (4) obj. -55.2649 iterations 6
Cbc0038I Pass  60: suminf.    1.28318 (5) obj. -55.2649 iterations 3
Cbc0038I Rounding solution of -42.166 is better than previous of -41.4917

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 45 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -42.166 to -42.3821 (0.07 seconds)
Cbc0038I Round again with cutoff of -67.2284
Cbc0038I Pass  60: suminf.    1.29614 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  61: suminf.    1.25233 (8) obj. -67.2284 iterations 2
Cbc0038I Pass  62: suminf.    1.12323 (4) obj. -67.2284 iterations 4
Cbc0038I Pass  63: suminf.    1.04733 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  64: suminf.    1.00766 (7) obj. -67.2284 iterations 1
Cbc0038I Pass  65: suminf.    2.09584 (6) obj. -67.2284 iterations 9
Cbc0038I Pass  66: suminf.    0.89914 (4) obj. -67.2284 iterations 3
Cbc0038I Pass  67: suminf.    0.79199 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  68: suminf.    2.05871 (6) obj. -67.2284 iterations 4
Cbc0038I Pass  69: suminf.    2.08499 (6) obj. -67.2284 iterations 5
Cbc0038I Pass  70: suminf.    1.91855 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  71: suminf.    1.51584 (4) obj. -67.2284 iterations 4
Cbc0038I Pass  72: suminf.    1.39678 (5) obj. -67.2284 iterations 2
Cbc0038I Pass  73: suminf.    1.26681 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  74: suminf.    1.24728 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  75: suminf.    1.24728 (6) obj. -67.2284 iterations 0
Cbc0038I Pass  76: suminf.    1.23329 (4) obj. -67.2284 iterations 5
Cbc0038I Pass  77: suminf.    1.16236 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  78: suminf.    1.38708 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  79: suminf.    1.34130 (5) obj. -67.2284 iterations 1
Cbc0038I Pass  80: suminf.    1.51584 (4) obj. -67.2284 iterations 8
Cbc0038I Pass  81: suminf.    1.39678 (5) obj. -67.2284 iterations 2
Cbc0038I Pass  82: suminf.    1.26681 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  83: suminf.    1.24728 (6) obj. -67.2284 iterations 2
Cbc0038I Pass  84: suminf.    1.24728 (6) obj. -67.2284 iterations 0
Cbc0038I Pass  85: suminf.    1.23329 (4) obj. -67.2284 iterations 5
Cbc0038I Pass  86: suminf.    1.16236 (4) obj. -67.2284 iterations 2
Cbc0038I Pass  87: suminf.    1.38708 (5) obj. -67.2284 iterations 3
Cbc0038I Pass  88: suminf.    1.34130 (5) obj. -67.2284 iterations 1
Cbc0038I Pass  89: suminf.    1.51584 (4) obj. -67.2284 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 35 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -42.3821 - took 0.07 seconds
Cbc0012I Integer solution of -42.382147 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 40 rows 22 columns
Cbc0031I 9 added rows had average density of 26.333333
Cbc0013I At root node, 9 cuts changed objective from -95.143194 to -72.484215 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2730 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1314 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 90 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 32.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.741 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -42.382147 best solution, best possible -72.484215 (1.64 seconds)
Cbc0001I Search completed - best objective -42.3821473, took 3991 iterations and 34 nodes (1.74 seconds)
Cbc0032I Strong branching done 344 times (3548 iterations), fathomed 0 nodes and fixed 16 variables
Cbc0035I Maximum depth 8, 71 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.75

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 61 (-6) columns and 611 (-113) elements
Clp1000I sum of infeasibilities 1.74814e-08 - average 3.23729e-10, 3 fixed columns
Coin0506I Presolve 53 (-1) rows, 58 (-3) columns and 547 (-64) elements
Clp0006I 0  Obj 84.001843 Dual inf 7.6048605 (57)
Clp0029I End of values pass after 58 iterations
Clp0014I Perturbing problem by 0.001% of 1.7748382 - largest nonzero change 1.1721771e-05 ( 0.00091204228%) - largest zero change 2.9469024e-05
Clp0000I Optimal - objective value 107.68276
Clp0000I Optimal - objective value 107.68276
Coin0511I After Postsolve, objective 107.68276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 107.68276
Clp0000I Optimal - objective value 107.68276
Clp0000I Optimal - objective value 107.68276
Clp0000I Optimal - objective value 107.68276
Coin0511I After Postsolve, objective 107.68276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.6827649 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 61 columns (61 integer (61 of which binary)) and 614 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.464%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 7.23292
Cbc0038I Pass   1: suminf.    1.71980 (16) obj. -55.9968 iterations 18
Cbc0038I Pass   2: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Solution found of -11.1653
Cbc0038I Rounding solution of -29.2489 is better than previous of -11.1653

Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 61 columns, reduced to 31 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -36.6373
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Pass   4: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Pass   5: suminf.    0.80812 (6) obj. -36.6373 iterations 38
Cbc0038I Pass   6: suminf.    0.57095 (6) obj. -36.6373 iterations 1
Cbc0038I Pass   7: suminf.    0.82851 (3) obj. -36.6373 iterations 8
Cbc0038I Pass   8: suminf.    0.82851 (3) obj. -36.6373 iterations 0
Cbc0038I Pass   9: suminf.    0.76406 (2) obj. -36.6373 iterations 3
Cbc0038I Pass  10: suminf.    0.69457 (2) obj. -36.6373 iterations 1
Cbc0038I Pass  11: suminf.    2.20168 (10) obj. -36.6373 iterations 17
Cbc0038I Pass  12: suminf.    1.33631 (7) obj. -37.8866 iterations 3
Cbc0038I Pass  13: suminf.    1.29779 (7) obj. -36.6373 iterations 1
Cbc0038I Pass  14: suminf.    0.95591 (3) obj. -36.6373 iterations 8
Cbc0038I Pass  15: suminf.    0.73243 (3) obj. -36.6373 iterations 1
Cbc0038I Pass  16: suminf.    1.20553 (6) obj. -39.2387 iterations 10
Cbc0038I Pass  17: suminf.    0.66274 (6) obj. -36.6373 iterations 4
Cbc0038I Pass  18: suminf.    1.12409 (4) obj. -36.6373 iterations 8
Cbc0038I Pass  19: suminf.    0.77005 (3) obj. -36.6373 iterations 2
Cbc0038I Pass  20: suminf.    1.12086 (3) obj. -36.6373 iterations 2
Cbc0038I Pass  21: suminf.    2.32793 (14) obj. -36.6373 iterations 18
Cbc0038I Pass  22: suminf.    2.32707 (14) obj. -36.6373 iterations 1
Cbc0038I Pass  23: suminf.    1.96590 (5) obj. -36.6373 iterations 16
Cbc0038I Pass  24: suminf.    0.75449 (3) obj. -36.6373 iterations 9
Cbc0038I Pass  25: suminf.    0.88514 (3) obj. -41.9835 iterations 4
Cbc0038I Pass  26: suminf.    0.89153 (3) obj. -36.6373 iterations 5
Cbc0038I Pass  27: suminf.    0.87816 (4) obj. -36.6373 iterations 2
Cbc0038I Pass  28: suminf.    1.70657 (6) obj. -36.6373 iterations 4
Cbc0038I Pass  29: suminf.    1.35249 (4) obj. -36.6373 iterations 6
Cbc0038I Pass  30: suminf.    0.47994 (2) obj. -36.6373 iterations 7
Cbc0038I Pass  31: suminf.    0.38425 (3) obj. -36.6373 iterations 2
Cbc0038I Pass  32: suminf.    0.87816 (4) obj. -36.6373 iterations 5
Cbc0038I Rounding solution of -36.0988 is better than previous of -29.2489

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 61 columns, reduced to 38 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -49.9363
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Pass  33: suminf.    1.71980 (16) obj. -55.9968 iterations 0
Cbc0038I Pass  34: suminf.    1.62328 (9) obj. -49.9363 iterations 36
Cbc0038I Pass  35: suminf.    1.57664 (9) obj. -49.9363 iterations 2
Cbc0038I Pass  36: suminf.    1.05955 (3) obj. -49.9363 iterations 8
Cbc0038I Pass  37: suminf.    0.88400 (3) obj. -52.2184 iterations 1
Cbc0038I Pass  38: suminf.    1.05955 (3) obj. -49.9363 iterations 2
Cbc0038I Pass  39: suminf.    3.12583 (16) obj. -49.9363 iterations 19
Cbc0038I Pass  40: suminf.    2.34666 (9) obj. -49.9363 iterations 5
Cbc0038I Pass  41: suminf.    1.34592 (4) obj. -49.9363 iterations 9
Cbc0038I Pass  42: suminf.    1.27821 (4) obj. -49.9363 iterations 3
Cbc0038I Pass  43: suminf.    1.08334 (3) obj. -49.9363 iterations 6
Cbc0038I Pass  44: suminf.    1.03217 (3) obj. -49.9363 iterations 1
Cbc0038I Pass  45: suminf.    1.08334 (3) obj. -49.9363 iterations 2
Cbc0038I Pass  46: suminf.    1.89066 (8) obj. -49.9363 iterations 8
Cbc0038I Pass  47: suminf.    1.89066 (8) obj. -49.9363 iterations 1
Cbc0038I Pass  48: suminf.    1.08334 (3) obj. -49.9363 iterations 7
Cbc0038I Pass  49: suminf.    1.46387 (9) obj. -49.9363 iterations 17
Cbc0038I Pass  50: suminf.    1.46387 (9) obj. -49.9363 iterations 0
Cbc0038I Pass  51: suminf.    1.52242 (5) obj. -49.9363 iterations 11
Cbc0038I Pass  52: suminf.    1.52242 (5) obj. -49.9363 iterations 1
Cbc0038I Pass  53: suminf.    1.16743 (5) obj. -49.9363 iterations 5
Cbc0038I Pass  54: suminf.    1.16743 (5) obj. -49.9363 iterations 0
Cbc0038I Pass  55: suminf.    0.75859 (3) obj. -50.7887 iterations 3
Cbc0038I Pass  56: suminf.    0.71038 (3) obj. -49.9363 iterations 1
Cbc0038I Pass  57: suminf.    0.82416 (3) obj. -49.9363 iterations 2
Cbc0038I Pass  58: suminf.    2.25400 (12) obj. -49.9363 iterations 9
Cbc0038I Pass  59: suminf.    2.01780 (9) obj. -49.9363 iterations 4
Cbc0038I Pass  60: suminf.    0.82416 (3) obj. -49.9363 iterations 7
Cbc0038I Pass  61: suminf.    1.92161 (12) obj. -49.9363 iterations 19
Cbc0038I Rounding solution of -40.0491 is better than previous of -36.0988

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 61 columns, reduced to 39 rows 45 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -65.8951
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.26230 (21) obj. -65.8951 iterations 9
Cbc0038I Pass  62: suminf.    2.26230 (21) obj. -65.8951 iterations 1
Cbc0038I Pass  63: suminf.    1.64736 (6) obj. -65.8951 iterations 28
Cbc0038I Pass  64: suminf.    1.13923 (6) obj. -65.8951 iterations 2
Cbc0038I Pass  65: suminf.    1.21591 (4) obj. -65.8951 iterations 5
Cbc0038I Pass  66: suminf.    1.04985 (4) obj. -67.0575 iterations 1
Cbc0038I Pass  67: suminf.    1.21591 (4) obj. -65.8951 iterations 2
Cbc0038I Pass  68: suminf.    1.86289 (8) obj. -65.8951 iterations 4
Cbc0038I Pass  69: suminf.    1.29142 (6) obj. -65.8951 iterations 4
Cbc0038I Pass  70: suminf.    1.07306 (4) obj. -65.8951 iterations 3
Cbc0038I Pass  71: suminf.    1.04985 (4) obj. -66.0575 iterations 1
Cbc0038I Pass  72: suminf.    1.07306 (4) obj. -65.8951 iterations 2
Cbc0038I Pass  73: suminf.    1.95858 (8) obj. -65.8951 iterations 18
Cbc0038I Pass  74: suminf.    1.95858 (8) obj. -65.8951 iterations 3
Cbc0038I Pass  75: suminf.    1.78289 (6) obj. -65.8951 iterations 5
Cbc0038I Pass  76: suminf.    1.50338 (6) obj. -65.8951 iterations 2
Cbc0038I Pass  77: suminf.    1.79369 (6) obj. -65.8951 iterations 3
Cbc0038I Pass  78: suminf.    1.79369 (6) obj. -65.8951 iterations 0
Cbc0038I Pass  79: suminf.    2.40876 (14) obj. -65.8951 iterations 22
Cbc0038I Pass  80: suminf.    2.33040 (14) obj. -65.8951 iterations 5
Cbc0038I Pass  81: suminf.    2.27695 (8) obj. -65.8951 iterations 15
Cbc0038I Pass  82: suminf.    1.63453 (7) obj. -65.8951 iterations 5
Cbc0038I Pass  83: suminf.    1.63453 (7) obj. -65.8951 iterations 0
Cbc0038I Pass  84: suminf.    1.90515 (7) obj. -65.8951 iterations 5
Cbc0038I Pass  85: suminf.    1.90515 (7) obj. -65.8951 iterations 1
Cbc0038I Pass  86: suminf.    1.84257 (7) obj. -65.8951 iterations 1
Cbc0038I Pass  87: suminf.    1.84257 (7) obj. -65.8951 iterations 0
Cbc0038I Pass  88: suminf.    1.90515 (7) obj. -65.8951 iterations 5
Cbc0038I Pass  89: suminf.    1.61836 (9) obj. -65.8951 iterations 17
Cbc0038I Pass  90: suminf.    1.29274 (9) obj. -65.8951 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 61 columns, reduced to 43 rows 46 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -40.0491 - took 0.05 seconds
Cbc0012I Integer solution of -40.049115 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 54 rows 61 columns, reduced to 37 rows 41 columns
Cbc0031I 27 added rows had average density of 20.037037
Cbc0013I At root node, 27 cuts changed objective from -103.13216 to -56.588929 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3652 row cuts average 3.3 elements, 7 column cuts (7 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1153 row cuts average 50.2 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 14 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 101 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 191 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 362 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 305 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 121 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.673 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -40.049115 best solution, best possible -56.588929 (1.58 seconds)
Cbc0012I Integer solution of -42.337756 found by DiveCoefficient after 2701 iterations and 2 nodes (1.71 seconds)
Cbc0016I Integer solution of -42.382147 found by strong branching after 2736 iterations and 2 nodes (1.83 seconds)
Cbc0010I After 12 nodes, 3 on tree, -42.382147 best solution, best possible -54.516714 (2.38 seconds)
Cbc0010I After 21 nodes, 2 on tree, -42.382147 best solution, best possible -54.516714 (3.22 seconds)
Cbc0010I After 29 nodes, 7 on tree, -42.382147 best solution, best possible -54.516714 (3.97 seconds)
Cbc0038I Full problem 54 rows 61 columns, reduced to 12 rows 18 columns
Cbc0010I After 42 nodes, 5 on tree, -42.382147 best solution, best possible -54.516714 (4.71 seconds)
Cbc0038I Full problem 81 rows 61 columns, reduced to 54 rows 53 columns
Cbc0044I Reduced cost fixing - 54 rows, 53 columns - restarting search
Cbc0038I Initial state - 27 integers unsatisfied sum - 5.67309
Cbc0038I Pass   1: suminf.    1.32729 (15) obj. -42.3822 iterations 13
Cbc0038I Pass   2: suminf.    1.01882 (14) obj. -42.3822 iterations 2
Cbc0038I Pass   3: suminf.    1.26978 (4) obj. -42.3822 iterations 23
Cbc0038I Pass   4: suminf.    1.26978 (4) obj. -42.3822 iterations 0
Cbc0038I Pass   5: suminf.    0.77557 (3) obj. -42.3822 iterations 3
Cbc0038I Pass   6: suminf.    0.73537 (3) obj. -42.3822 iterations 2
Cbc0038I Pass   7: suminf.    0.73537 (3) obj. -42.3822 iterations 0
Cbc0038I Pass   8: suminf.    0.51925 (3) obj. -42.3822 iterations 1
Cbc0038I Pass   9: suminf.    0.51925 (3) obj. -42.3822 iterations 0
Cbc0038I Pass  10: suminf.    0.73537 (3) obj. -42.3822 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 53 columns, reduced to 28 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (5.04 seconds)
Cbc0038I Full problem 55 rows 53 columns, reduced to 55 rows 53 columns
Cbc0038I After 5.27 seconds - Feasibility pump exiting with objective of -42.3533 - took 0.23 seconds
Cbc0031I 25 added rows had average density of 19.4
Cbc0013I At root node, 25 cuts changed objective from -87.576107 to -52.579128 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1442 row cuts average 2.1 elements, 5 column cuts (5 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 493 row cuts average 45.5 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 73 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 157 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 147 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 289 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 185 row cuts average 11.8 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 71 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.708 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 170 row cuts average 7.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -52.579128 (6.82 seconds)
Cbc0010I After 7 nodes, 4 on tree, 1e+50 best solution, best possible -52.579128 (7.88 seconds)
Cbc0010I After 23 nodes, 3 on tree, 1e+50 best solution, best possible -52.579128 (8.90 seconds)
Cbc0010I After 38 nodes, 3 on tree, 1e+50 best solution, best possible -52.579128 (9.92 seconds)
Cbc0001I Search completed - best objective 1e+50, took 4839 iterations and 52 nodes (10.42 seconds)
Cbc0032I Strong branching done 756 times (6707 iterations), fathomed 7 nodes and fixed 27 variables
Cbc0035I Maximum depth 7, 49 variables fixed on reduced cost
Cbc0038I Probing was tried 353 times and created 2758 cuts of which 0 were active after adding rounds of cuts (0.062 seconds)
Cbc0038I Gomory was tried 339 times and created 858 cuts of which 0 were active after adding rounds of cuts (0.085 seconds)
Cbc0038I Knapsack was tried 339 times and created 506 cuts of which 0 were active after adding rounds of cuts (0.123 seconds)
Cbc0038I Clique was tried 339 times and created 427 cuts of which 0 were active after adding rounds of cuts (0.020 seconds)
Cbc0038I OddWheel was tried 339 times and created 237 cuts of which 0 were active after adding rounds of cuts (0.043 seconds)
Cbc0038I MixedIntegerRounding2 was tried 339 times and created 571 cuts of which 0 were active after adding rounds of cuts (0.051 seconds)
Cbc0038I FlowCover was tried 100 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 339 times and created 486 cuts of which 0 were active after adding rounds of cuts (0.046 seconds)
Cbc0038I ZeroHalf was tried 339 times and created 314 cuts of which 0 were active after adding rounds of cuts (2.311 seconds)
Cbc0038I Stored from first was tried 339 times and created 302 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -42.3821473, took 10071 iterations and 102 nodes (10.43 seconds)
Cbc0032I Strong branching done 746 times (8834 iterations), fathomed 4 nodes and fixed 15 variables
Cbc0035I Maximum depth 11, 64 variables fixed on reduced cost
Total time (CPU seconds):       6.62   (Wallclock seconds):       10.43

