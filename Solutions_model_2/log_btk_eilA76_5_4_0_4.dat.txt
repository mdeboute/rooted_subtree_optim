Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-42) rows, 64 (-14) columns and 347 (-106) elements
Clp1000I sum of infeasibilities 2.85715e-05 - average 2.52846e-07, 20 fixed columns
Coin0506I Presolve 65 (-48) rows, 37 (-27) columns and 198 (-149) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 0.4379614 - largest nonzero change 0 ( 0%) - largest zero change 2.9046554e-05
Clp0000I Optimal - objective value 205.28567
Clp0000I Optimal - objective value 205.28567
Coin0511I After Postsolve, objective 205.28567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 205.28567
Clp0000I Optimal - objective value 205.28567
Clp0000I Optimal - objective value 205.28567
Coin0511I After Postsolve, objective 205.28567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 205.2856724 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 64 columns (63 integer (63 of which binary)) and 348 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 6.29056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -182.284 iterations 25
Cbc0038I Solution found of -182.284
Cbc0038I Relaxing continuous gives -182.284
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 64 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -182.284 to -182.284 (0.02 seconds)
Cbc0038I Round again with cutoff of -184.584
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17743 (10) obj. -184.584 iterations 12
Cbc0038I Pass   3: suminf.    0.42289 (7) obj. -184.584 iterations 17
Cbc0038I Pass   4: suminf.    0.33070 (5) obj. -184.584 iterations 8
Cbc0038I Pass   5: suminf.    1.53297 (6) obj. -184.584 iterations 14
Cbc0038I Pass   6: suminf.    1.53297 (6) obj. -184.584 iterations 0
Cbc0038I Pass   7: suminf.    0.33070 (5) obj. -184.584 iterations 16
Cbc0038I Pass   8: suminf.    1.54596 (4) obj. -184.584 iterations 8
Cbc0038I Pass   9: suminf.    0.88456 (8) obj. -184.584 iterations 8
Cbc0038I Pass  10: suminf.    0.88322 (8) obj. -184.584 iterations 1
Cbc0038I Pass  11: suminf.    2.55571 (10) obj. -184.584 iterations 10
Cbc0038I Pass  12: suminf.    1.08189 (6) obj. -184.584 iterations 3
Cbc0038I Pass  13: suminf.    1.08189 (6) obj. -184.584 iterations 0
Cbc0038I Pass  14: suminf.    0.34609 (5) obj. -184.584 iterations 16
Cbc0038I Pass  15: suminf.    0.34609 (5) obj. -184.584 iterations 0
Cbc0038I Pass  16: suminf.    0.95617 (4) obj. -184.584 iterations 10
Cbc0038I Pass  17: suminf.    0.84537 (3) obj. -184.584 iterations 5
Cbc0038I Pass  18: suminf.    0.71272 (3) obj. -184.584 iterations 7
Cbc0038I Pass  19: suminf.    0.69603 (6) obj. -184.584 iterations 13
Cbc0038I Pass  20: suminf.    0.37066 (2) obj. -184.584 iterations 10
Cbc0038I Pass  21: suminf.    0.33070 (5) obj. -184.584 iterations 5
Cbc0038I Pass  22: suminf.    1.53297 (6) obj. -184.584 iterations 15
Cbc0038I Pass  23: suminf.    1.53297 (6) obj. -184.584 iterations 0
Cbc0038I Pass  24: suminf.    0.33070 (5) obj. -184.584 iterations 16
Cbc0038I Pass  25: suminf.    1.55966 (10) obj. -184.584 iterations 11
Cbc0038I Pass  26: suminf.    0.49236 (6) obj. -184.584 iterations 8
Cbc0038I Pass  27: suminf.    0.33070 (5) obj. -184.584 iterations 10
Cbc0038I Pass  28: suminf.    1.53297 (6) obj. -184.584 iterations 13
Cbc0038I Pass  29: suminf.    1.53297 (6) obj. -184.584 iterations 0
Cbc0038I Pass  30: suminf.    0.33070 (5) obj. -184.584 iterations 17
Cbc0038I Pass  31: suminf.    2.86802 (13) obj. -184.584 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 64 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -182.284 - took 0.02 seconds
Cbc0012I Integer solution of -182.28414 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 113 rows 64 columns, reduced to 26 rows 15 columns
Cbc0031I 9 added rows had average density of 23.222222
Cbc0013I At root node, 9 cuts changed objective from -205.28567 to -188.65322 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 60 row cuts average 3.1 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 62.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -182.28414, took 190 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 30 times (228 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-72) rows, 95 (-57) columns and 1359 (-1944) elements
Clp1000I sum of infeasibilities 1.00889e-06 - average 1.23035e-08, 26 fixed columns
Coin0506I Presolve 62 (-20) rows, 69 (-26) columns and 771 (-588) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 6.4124053 - largest nonzero change 2.0000337e-05 ( 0.00089285843%) - largest zero change 2.9719635e-05
Clp0000I Optimal - objective value 239.01438
Clp0000I Optimal - objective value 239.01438
Coin0511I After Postsolve, objective 239.01438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9449103 - largest nonzero change 1.5517728e-05 ( 0.00089819337%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 239.01438
Clp0000I Optimal - objective value 239.01438
Clp0000I Optimal - objective value 239.01438
Coin0511I After Postsolve, objective 239.01438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 239.0143779 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 97 columns (97 integer (97 of which binary)) and 1367 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.640%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.92757
Cbc0038I Pass   1: suminf.    1.30352 (25) obj. -141.164 iterations 21
Cbc0038I Pass   2: suminf.    1.30352 (25) obj. -141.164 iterations 1
Cbc0038I Pass   3: suminf.    0.59041 (13) obj. -126.107 iterations 12
Cbc0038I Solution found of -104.18
Cbc0038I Rounding solution of -161.977 is better than previous of -104.18

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -161.977 to -165.923 (0.03 seconds)
Cbc0038I Round again with cutoff of -172.754
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.52131 (32) obj. -172.754 iterations 4
Cbc0038I Pass   5: suminf.    1.55273 (21) obj. -172.754 iterations 18
Cbc0038I Pass   6: suminf.    1.51380 (20) obj. -181.539 iterations 8
Cbc0038I Pass   7: suminf.    0.24830 (1) obj. -172.754 iterations 33
Cbc0038I Solution found of -180.857
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -191.532
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   8: suminf.    2.65078 (32) obj. -191.532 iterations 0
Cbc0038I Pass   9: suminf.    1.67720 (17) obj. -191.532 iterations 30
Cbc0038I Pass  10: suminf.    0.97976 (12) obj. -191.532 iterations 25
Cbc0038I Pass  11: suminf.    1.71443 (9) obj. -191.532 iterations 19
Cbc0038I Pass  12: suminf.    1.62745 (9) obj. -191.532 iterations 4
Cbc0038I Pass  13: suminf.    4.46432 (11) obj. -191.532 iterations 18
Cbc0038I Pass  14: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  15: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  16: suminf.    1.56017 (8) obj. -191.532 iterations 6
Cbc0038I Pass  17: suminf.    1.56017 (8) obj. -191.532 iterations 1
Cbc0038I Pass  18: suminf.    4.46432 (11) obj. -191.532 iterations 15
Cbc0038I Pass  19: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  20: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  21: suminf.    1.56017 (8) obj. -191.532 iterations 6
Cbc0038I Pass  22: suminf.    1.56017 (8) obj. -191.532 iterations 1
Cbc0038I Pass  23: suminf.    4.46432 (11) obj. -191.532 iterations 15
Cbc0038I Pass  24: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  25: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  26: suminf.    1.56017 (8) obj. -191.532 iterations 6
Cbc0038I Pass  27: suminf.    1.56017 (8) obj. -191.532 iterations 1
Cbc0038I Pass  28: suminf.    4.46432 (11) obj. -191.532 iterations 15
Cbc0038I Pass  29: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  30: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  31: suminf.    1.56017 (8) obj. -191.532 iterations 6
Cbc0038I Pass  32: suminf.    1.56017 (8) obj. -191.532 iterations 1
Cbc0038I Pass  33: suminf.    4.46432 (11) obj. -191.532 iterations 15
Cbc0038I Pass  34: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  35: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  36: suminf.    0.84024 (8) obj. -191.532 iterations 6
Cbc0038I Pass  37: suminf.    0.75313 (8) obj. -191.532 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -180.857 to -182.284 (0.06 seconds)
Cbc0038I Round again with cutoff of -204.342
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  37: suminf.    3.02175 (32) obj. -204.342 iterations 5
Cbc0038I Pass  38: suminf.    2.18015 (14) obj. -204.342 iterations 45
Cbc0038I Pass  39: suminf.    2.07623 (14) obj. -204.342 iterations 5
Cbc0038I Pass  40: suminf.    4.94898 (17) obj. -204.342 iterations 19
Cbc0038I Pass  41: suminf.    4.94898 (17) obj. -204.342 iterations 0
Cbc0038I Pass  42: suminf.    2.41274 (12) obj. -204.342 iterations 5
Cbc0038I Pass  43: suminf.    2.02298 (13) obj. -204.342 iterations 3
Cbc0038I Pass  44: suminf.    4.74793 (16) obj. -204.342 iterations 16
Cbc0038I Pass  45: suminf.    4.58313 (16) obj. -204.342 iterations 3
Cbc0038I Pass  46: suminf.    2.41274 (12) obj. -204.342 iterations 11
Cbc0038I Pass  47: suminf.    2.60239 (16) obj. -204.342 iterations 18
Cbc0038I Pass  48: suminf.    1.90790 (15) obj. -204.342 iterations 9
Cbc0038I Pass  49: suminf.    1.90389 (16) obj. -204.342 iterations 9
Cbc0038I Pass  50: suminf.    2.55508 (13) obj. -204.342 iterations 18
Cbc0038I Pass  51: suminf.    2.55508 (13) obj. -204.342 iterations 2
Cbc0038I Pass  52: suminf.    4.70654 (16) obj. -204.342 iterations 7
Cbc0038I Pass  53: suminf.    4.57963 (16) obj. -204.342 iterations 3
Cbc0038I Pass  54: suminf.    2.41274 (12) obj. -204.342 iterations 12
Cbc0038I Pass  55: suminf.    2.02298 (13) obj. -204.342 iterations 4
Cbc0038I Pass  56: suminf.    4.74793 (16) obj. -204.342 iterations 15
Cbc0038I Pass  57: suminf.    4.58313 (16) obj. -204.342 iterations 3
Cbc0038I Pass  58: suminf.    2.49459 (22) obj. -204.342 iterations 14
Cbc0038I Pass  59: suminf.    2.49459 (22) obj. -204.342 iterations 3
Cbc0038I Pass  60: suminf.    2.41274 (12) obj. -204.342 iterations 30
Cbc0038I Pass  61: suminf.    2.02298 (13) obj. -204.342 iterations 4
Cbc0038I Pass  62: suminf.    4.74793 (16) obj. -204.342 iterations 15
Cbc0038I Pass  63: suminf.    4.58313 (16) obj. -204.342 iterations 3
Cbc0038I Pass  64: suminf.    2.41274 (12) obj. -204.342 iterations 10
Cbc0038I Pass  65: suminf.    2.33581 (15) obj. -204.342 iterations 13
Cbc0038I Pass  66: suminf.    1.97811 (15) obj. -204.342 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -182.284 - took 0.07 seconds
Cbc0012I Integer solution of -182.28414 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 84 rows 97 columns, reduced to 17 rows 18 columns
Cbc0031I 28 added rows had average density of 8.7857143
Cbc0013I At root node, 28 cuts changed objective from -234.23151 to -187.97193 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 617 row cuts average 14.7 elements, 16 column cuts (16 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 136 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0001I Search completed - best objective -182.28414, took 277 iterations and 2 nodes (0.42 seconds)
Cbc0032I Strong branching done 42 times (342 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.43

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 113 (-42) rows, 64 (-14) columns and 347 (-106) elements
Clp1000I sum of infeasibilities 2.85715e-05 - average 2.52846e-07, 20 fixed columns
Coin0506I Presolve 65 (-48) rows, 37 (-27) columns and 198 (-149) elements
Clp0029I End of values pass after 32 iterations
Clp0014I Perturbing problem by 0.001% of 0.4379614 - largest nonzero change 0 ( 0%) - largest zero change 2.9046554e-05
Clp0000I Optimal - objective value 205.28567
Clp0000I Optimal - objective value 205.28567
Coin0511I After Postsolve, objective 205.28567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 205.28567
Clp0000I Optimal - objective value 205.28567
Clp0000I Optimal - objective value 205.28567
Coin0511I After Postsolve, objective 205.28567, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 205.2856724 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 113 rows, 64 columns (63 integer (63 of which binary)) and 348 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.369%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 6.29056
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -182.284 iterations 25
Cbc0038I Solution found of -182.284
Cbc0038I Relaxing continuous gives -182.284
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 64 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -182.284 to -182.284 (0.01 seconds)
Cbc0038I Round again with cutoff of -184.584
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17743 (10) obj. -184.584 iterations 12
Cbc0038I Pass   3: suminf.    0.42289 (7) obj. -184.584 iterations 17
Cbc0038I Pass   4: suminf.    0.33070 (5) obj. -184.584 iterations 8
Cbc0038I Pass   5: suminf.    1.53297 (6) obj. -184.584 iterations 14
Cbc0038I Pass   6: suminf.    1.53297 (6) obj. -184.584 iterations 0
Cbc0038I Pass   7: suminf.    0.33070 (5) obj. -184.584 iterations 16
Cbc0038I Pass   8: suminf.    1.54596 (4) obj. -184.584 iterations 8
Cbc0038I Pass   9: suminf.    0.88456 (8) obj. -184.584 iterations 8
Cbc0038I Pass  10: suminf.    0.88322 (8) obj. -184.584 iterations 1
Cbc0038I Pass  11: suminf.    2.55571 (10) obj. -184.584 iterations 10
Cbc0038I Pass  12: suminf.    1.08189 (6) obj. -184.584 iterations 3
Cbc0038I Pass  13: suminf.    1.08189 (6) obj. -184.584 iterations 0
Cbc0038I Pass  14: suminf.    0.34609 (5) obj. -184.584 iterations 16
Cbc0038I Pass  15: suminf.    0.34609 (5) obj. -184.584 iterations 0
Cbc0038I Pass  16: suminf.    0.95617 (4) obj. -184.584 iterations 10
Cbc0038I Pass  17: suminf.    0.84537 (3) obj. -184.584 iterations 5
Cbc0038I Pass  18: suminf.    0.71272 (3) obj. -184.584 iterations 7
Cbc0038I Pass  19: suminf.    0.69603 (6) obj. -184.584 iterations 13
Cbc0038I Pass  20: suminf.    0.37066 (2) obj. -184.584 iterations 10
Cbc0038I Pass  21: suminf.    0.33070 (5) obj. -184.584 iterations 5
Cbc0038I Pass  22: suminf.    1.53297 (6) obj. -184.584 iterations 15
Cbc0038I Pass  23: suminf.    1.53297 (6) obj. -184.584 iterations 0
Cbc0038I Pass  24: suminf.    0.33070 (5) obj. -184.584 iterations 16
Cbc0038I Pass  25: suminf.    1.55966 (10) obj. -184.584 iterations 11
Cbc0038I Pass  26: suminf.    0.49236 (6) obj. -184.584 iterations 8
Cbc0038I Pass  27: suminf.    0.33070 (5) obj. -184.584 iterations 10
Cbc0038I Pass  28: suminf.    1.53297 (6) obj. -184.584 iterations 13
Cbc0038I Pass  29: suminf.    1.53297 (6) obj. -184.584 iterations 0
Cbc0038I Pass  30: suminf.    0.33070 (5) obj. -184.584 iterations 17
Cbc0038I Pass  31: suminf.    2.86802 (13) obj. -184.584 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 113 rows 64 columns, reduced to 32 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -182.284 - took 0.02 seconds
Cbc0012I Integer solution of -182.28414 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 113 rows 64 columns, reduced to 26 rows 15 columns
Cbc0031I 9 added rows had average density of 23.222222
Cbc0013I At root node, 9 cuts changed objective from -205.28567 to -188.65322 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 60 row cuts average 3.1 elements, 7 column cuts (7 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 15.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 59 row cuts average 32.7 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 62.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -182.28414, took 190 iterations and 2 nodes (0.07 seconds)
Cbc0032I Strong branching done 30 times (228 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 82 (-73) rows, 95 (-58) columns and 1359 (-1945) elements
Clp1000I sum of infeasibilities 1.00889e-06 - average 1.23035e-08, 26 fixed columns
Coin0506I Presolve 62 (-20) rows, 69 (-26) columns and 771 (-588) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 6.4124053 - largest nonzero change 2.0000337e-05 ( 0.00089285843%) - largest zero change 2.9719635e-05
Clp0000I Optimal - objective value 239.01438
Clp0000I Optimal - objective value 239.01438
Coin0511I After Postsolve, objective 239.01438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9449103 - largest nonzero change 1.5517728e-05 ( 0.00089819337%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 239.01438
Clp0000I Optimal - objective value 239.01438
Clp0000I Optimal - objective value 239.01438
Coin0511I After Postsolve, objective 239.01438, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 239.0143779 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 97 columns (97 integer (97 of which binary)) and 1367 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.640%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.92757
Cbc0038I Pass   1: suminf.    1.30352 (25) obj. -141.164 iterations 21
Cbc0038I Pass   2: suminf.    1.30352 (25) obj. -141.164 iterations 1
Cbc0038I Pass   3: suminf.    0.59041 (13) obj. -126.107 iterations 12
Cbc0038I Solution found of -104.18
Cbc0038I Rounding solution of -161.977 is better than previous of -104.18

Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -161.977 to -165.923 (0.03 seconds)
Cbc0038I Round again with cutoff of -172.754
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.52131 (32) obj. -172.754 iterations 4
Cbc0038I Pass   5: suminf.    1.55273 (21) obj. -172.754 iterations 18
Cbc0038I Pass   6: suminf.    1.51380 (20) obj. -181.539 iterations 8
Cbc0038I Pass   7: suminf.    0.24830 (1) obj. -172.754 iterations 33
Cbc0038I Solution found of -180.857
Cbc0038I Before mini branch and bound, 58 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -191.532
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   8: suminf.    2.65078 (32) obj. -191.532 iterations 0
Cbc0038I Pass   9: suminf.    1.67720 (17) obj. -191.532 iterations 30
Cbc0038I Pass  10: suminf.    0.97976 (12) obj. -191.532 iterations 25
Cbc0038I Pass  11: suminf.    1.71443 (9) obj. -191.532 iterations 19
Cbc0038I Pass  12: suminf.    1.62745 (9) obj. -191.532 iterations 4
Cbc0038I Pass  13: suminf.    4.46432 (11) obj. -191.532 iterations 18
Cbc0038I Pass  14: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  15: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  16: suminf.    1.56017 (8) obj. -191.532 iterations 6
Cbc0038I Pass  17: suminf.    1.56017 (8) obj. -191.532 iterations 1
Cbc0038I Pass  18: suminf.    4.46432 (11) obj. -191.532 iterations 15
Cbc0038I Pass  19: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  20: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  21: suminf.    1.56017 (8) obj. -191.532 iterations 6
Cbc0038I Pass  22: suminf.    1.56017 (8) obj. -191.532 iterations 1
Cbc0038I Pass  23: suminf.    4.46432 (11) obj. -191.532 iterations 15
Cbc0038I Pass  24: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  25: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  26: suminf.    1.56017 (8) obj. -191.532 iterations 6
Cbc0038I Pass  27: suminf.    1.56017 (8) obj. -191.532 iterations 1
Cbc0038I Pass  28: suminf.    4.46432 (11) obj. -191.532 iterations 15
Cbc0038I Pass  29: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  30: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  31: suminf.    1.56017 (8) obj. -191.532 iterations 6
Cbc0038I Pass  32: suminf.    1.56017 (8) obj. -191.532 iterations 1
Cbc0038I Pass  33: suminf.    4.46432 (11) obj. -191.532 iterations 15
Cbc0038I Pass  34: suminf.    3.13930 (11) obj. -191.532 iterations 1
Cbc0038I Pass  35: suminf.    2.90278 (11) obj. -191.532 iterations 3
Cbc0038I Pass  36: suminf.    0.84024 (8) obj. -191.532 iterations 6
Cbc0038I Pass  37: suminf.    0.75313 (8) obj. -191.532 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -180.857 to -182.284 (0.07 seconds)
Cbc0038I Round again with cutoff of -204.342
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  37: suminf.    3.02175 (32) obj. -204.342 iterations 5
Cbc0038I Pass  38: suminf.    2.18015 (14) obj. -204.342 iterations 45
Cbc0038I Pass  39: suminf.    2.07623 (14) obj. -204.342 iterations 5
Cbc0038I Pass  40: suminf.    4.94898 (17) obj. -204.342 iterations 19
Cbc0038I Pass  41: suminf.    4.94898 (17) obj. -204.342 iterations 0
Cbc0038I Pass  42: suminf.    2.41274 (12) obj. -204.342 iterations 5
Cbc0038I Pass  43: suminf.    2.02298 (13) obj. -204.342 iterations 3
Cbc0038I Pass  44: suminf.    4.74793 (16) obj. -204.342 iterations 16
Cbc0038I Pass  45: suminf.    4.58313 (16) obj. -204.342 iterations 3
Cbc0038I Pass  46: suminf.    2.41274 (12) obj. -204.342 iterations 11
Cbc0038I Pass  47: suminf.    2.60239 (16) obj. -204.342 iterations 18
Cbc0038I Pass  48: suminf.    1.90790 (15) obj. -204.342 iterations 9
Cbc0038I Pass  49: suminf.    1.90389 (16) obj. -204.342 iterations 9
Cbc0038I Pass  50: suminf.    2.55508 (13) obj. -204.342 iterations 18
Cbc0038I Pass  51: suminf.    2.55508 (13) obj. -204.342 iterations 2
Cbc0038I Pass  52: suminf.    4.70654 (16) obj. -204.342 iterations 7
Cbc0038I Pass  53: suminf.    4.57963 (16) obj. -204.342 iterations 3
Cbc0038I Pass  54: suminf.    2.41274 (12) obj. -204.342 iterations 12
Cbc0038I Pass  55: suminf.    2.02298 (13) obj. -204.342 iterations 4
Cbc0038I Pass  56: suminf.    4.74793 (16) obj. -204.342 iterations 15
Cbc0038I Pass  57: suminf.    4.58313 (16) obj. -204.342 iterations 3
Cbc0038I Pass  58: suminf.    2.49459 (22) obj. -204.342 iterations 14
Cbc0038I Pass  59: suminf.    2.49459 (22) obj. -204.342 iterations 3
Cbc0038I Pass  60: suminf.    2.41274 (12) obj. -204.342 iterations 30
Cbc0038I Pass  61: suminf.    2.02298 (13) obj. -204.342 iterations 4
Cbc0038I Pass  62: suminf.    4.74793 (16) obj. -204.342 iterations 15
Cbc0038I Pass  63: suminf.    4.58313 (16) obj. -204.342 iterations 3
Cbc0038I Pass  64: suminf.    2.41274 (12) obj. -204.342 iterations 10
Cbc0038I Pass  65: suminf.    2.33581 (15) obj. -204.342 iterations 13
Cbc0038I Pass  66: suminf.    1.97811 (15) obj. -204.342 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 97 columns, reduced to 18 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -182.284 - took 0.09 seconds
Cbc0012I Integer solution of -182.28414 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 84 rows 97 columns, reduced to 17 rows 18 columns
Cbc0031I 28 added rows had average density of 8.7857143
Cbc0013I At root node, 28 cuts changed objective from -234.23151 to -187.97193 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 617 row cuts average 14.7 elements, 16 column cuts (16 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 34 row cuts average 48.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 136 row cuts average 36.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 9 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is 1
Cbc0001I Search completed - best objective -182.28414, took 277 iterations and 2 nodes (0.48 seconds)
Cbc0032I Strong branching done 42 times (342 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.49

