Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 76 (-2) columns and 424 (-29) elements
Clp1000I sum of infeasibilities 0.000248242 - average 1.77316e-06, 6 fixed columns
Coin0506I Presolve 129 (-11) rows, 70 (-6) columns and 390 (-34) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.32231226 - largest nonzero change 0 ( 0%) - largest zero change 2.7926465e-05
Clp0000I Optimal - objective value 34.714024
Clp0000I Optimal - objective value 34.714024
Coin0511I After Postsolve, objective 34.714024, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.714024
Clp0000I Optimal - objective value 34.714024
Clp0000I Optimal - objective value 34.714024
Coin0511I After Postsolve, objective 34.714024, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.71402376 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 76 columns (75 integer (75 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 12.4619
Cbc0038I Solution found of 12.8271
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 85 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 0 to -0.58432 (0.04 seconds)
Cbc0038I Round again with cutoff of -3.99738
Cbc0038I Pass   1: suminf.    1.28484 (48) obj. -3.99738 iterations 44
Cbc0038I Pass   2: suminf.    1.98116 (10) obj. -3.99738 iterations 43
Cbc0038I Pass   3: suminf.    1.98116 (10) obj. -3.99738 iterations 1
Cbc0038I Pass   4: suminf.    2.85966 (10) obj. -3.99738 iterations 29
Cbc0038I Pass   5: suminf.    1.54945 (6) obj. -3.99738 iterations 11
Cbc0038I Pass   6: suminf.    3.13973 (12) obj. -3.99738 iterations 8
Cbc0038I Pass   7: suminf.    1.44829 (13) obj. -3.99738 iterations 3
Cbc0038I Pass   8: suminf.    1.24692 (13) obj. -3.99738 iterations 13
Cbc0038I Pass   9: suminf.    1.13742 (5) obj. -3.99738 iterations 18
Cbc0038I Pass  10: suminf.    0.80264 (3) obj. -3.99738 iterations 2
Cbc0038I Pass  11: suminf.    0.75080 (4) obj. -3.99738 iterations 3
Cbc0038I Pass  12: suminf.    0.74157 (3) obj. -3.99738 iterations 1
Cbc0038I Pass  13: suminf.    0.96142 (4) obj. -3.99738 iterations 2
Cbc0038I Pass  14: suminf.    0.87047 (3) obj. -3.99738 iterations 1
Cbc0038I Pass  15: suminf.    0.66340 (4) obj. -3.99738 iterations 4
Cbc0038I Pass  16: suminf.    2.00949 (8) obj. -3.99738 iterations 6
Cbc0038I Pass  17: suminf.    1.73384 (6) obj. -3.99738 iterations 2
Cbc0038I Pass  18: suminf.    0.93549 (5) obj. -3.99738 iterations 7
Cbc0038I Pass  19: suminf.    0.93549 (5) obj. -3.99738 iterations 0
Cbc0038I Pass  20: suminf.    1.26773 (4) obj. -3.99738 iterations 5
Cbc0038I Pass  21: suminf.    1.26773 (4) obj. -3.99738 iterations 1
Cbc0038I Pass  22: suminf.    1.36437 (4) obj. -3.99738 iterations 3
Cbc0038I Pass  23: suminf.    0.89827 (4) obj. -3.99738 iterations 2
Cbc0038I Pass  24: suminf.    0.87538 (4) obj. -3.99738 iterations 1
Cbc0038I Pass  25: suminf.    1.42829 (6) obj. -3.99738 iterations 3
Cbc0038I Pass  26: suminf.    1.26773 (4) obj. -3.99738 iterations 2
Cbc0038I Pass  27: suminf.    1.36437 (4) obj. -3.99738 iterations 3
Cbc0038I Pass  28: suminf.    0.89827 (4) obj. -3.99738 iterations 2
Cbc0038I Pass  29: suminf.    0.87538 (4) obj. -3.99738 iterations 1
Cbc0038I Pass  30: suminf.    1.42829 (6) obj. -3.99738 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 107 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -0.58432 - took 0.10 seconds
Cbc0012I Integer solution of -0.58432 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 85 rows 46 columns
Cbc0031I 20 added rows had average density of 68.65
Cbc0013I At root node, 20 cuts changed objective from -34.714024 to -26.767009 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12675 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1948 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 185 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.58432 best solution, best possible -26.767009 (1.05 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 79 rows 47 columns
Cbc0038I Full problem 140 rows 76 columns, reduced to 20 rows 17 columns
Cbc0001I Search completed - best objective -0.5843199999999982, took 12246 iterations and 98 nodes (1.43 seconds)
Cbc0032I Strong branching done 1092 times (17613 iterations), fathomed 5 nodes and fixed 51 variables
Cbc0035I Maximum depth 34, 190 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 114 (-38) columns and 1800 (-1503) elements
Clp1000I sum of infeasibilities 3.17703e-07 - average 3.05484e-09, 48 fixed columns
Coin0506I Presolve 58 (-46) rows, 66 (-48) columns and 242 (-1558) elements
Clp0006I 0  Obj -8.107735 Dual inf 2.9995311 (65)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 1.6076429 - largest nonzero change 2.009547e-05 ( 0.0010393299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value -7.8058215
Clp0000I Optimal - objective value -7.8058215
Coin0511I After Postsolve, objective -7.8058215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.8058215 Dual inf 64.898793 (39)
Clp0014I Perturbing problem by 0.001% of 1.7257442 - largest nonzero change 2.927107e-05 ( 0.0024750985%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 49.86479
Clp0000I Optimal - objective value 49.86479
Clp0000I Optimal - objective value 49.86479
Coin0511I After Postsolve, objective 49.86479, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.86479017 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 114 columns (114 integer (114 of which binary)) and 1802 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.67384
Cbc0038I Pass   1: suminf.    2.26438 (29) obj. -22.7399 iterations 20
Cbc0038I Pass   2: suminf.    2.26438 (29) obj. -22.7399 iterations 3
Cbc0038I Pass   3: suminf.    1.23216 (18) obj. -1.89938 iterations 11
Cbc0038I Solution found of 19.5224
Cbc0038I Rounding solution of 13.8621 is better than previous of 19.5224

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 13.8621 to -0.58432 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.09326
Cbc0038I Pass   4: suminf.    2.26438 (29) obj. -22.7399 iterations 0
Cbc0038I Pass   5: suminf.    2.26438 (29) obj. -22.7399 iterations 2
Cbc0038I Pass   6: suminf.    1.77094 (20) obj. -5.09326 iterations 14
Cbc0038I Pass   7: suminf.    1.15078 (7) obj. -5.09326 iterations 21
Cbc0038I Pass   8: suminf.    1.14399 (6) obj. -5.22271 iterations 1
Cbc0038I Pass   9: suminf.    0.76172 (4) obj. -5.09326 iterations 9
Cbc0038I Pass  10: suminf.    0.38518 (4) obj. -5.09326 iterations 1
Cbc0038I Pass  11: suminf.    0.63514 (4) obj. -5.09326 iterations 5
Cbc0038I Pass  12: suminf.    0.49895 (3) obj. -5.09326 iterations 3
Cbc0038I Pass  13: suminf.    1.99185 (15) obj. -9.65889 iterations 30
Cbc0038I Pass  14: suminf.    1.44205 (12) obj. -9.0575 iterations 8
Cbc0038I Pass  15: suminf.    1.05935 (7) obj. -5.09326 iterations 12
Cbc0038I Pass  16: suminf.    1.05935 (7) obj. -5.09326 iterations 0
Cbc0038I Pass  17: suminf.    1.45083 (6) obj. -5.09326 iterations 11
Cbc0038I Pass  18: suminf.    1.20634 (6) obj. -5.09326 iterations 1
Cbc0038I Pass  19: suminf.    1.89195 (9) obj. -5.09326 iterations 8
Cbc0038I Pass  20: suminf.    1.89195 (9) obj. -5.09326 iterations 0
Cbc0038I Pass  21: suminf.    1.03523 (4) obj. -5.09326 iterations 17
Cbc0038I Pass  22: suminf.    0.59976 (4) obj. -5.09326 iterations 3
Cbc0038I Pass  23: suminf.    1.12760 (4) obj. -5.09326 iterations 6
Cbc0038I Pass  24: suminf.    0.53863 (4) obj. -5.09326 iterations 7
Cbc0038I Pass  25: suminf.    0.25005 (2) obj. -5.44697 iterations 6
Cbc0038I Pass  26: suminf.    0.32079 (2) obj. -5.09326 iterations 3
Cbc0038I Pass  27: suminf.    2.68105 (25) obj. -5.09326 iterations 38
Cbc0038I Pass  28: suminf.    2.02974 (16) obj. -5.09326 iterations 11
Cbc0038I Pass  29: suminf.    1.18029 (6) obj. -5.09326 iterations 24
Cbc0038I Pass  30: suminf.    1.18029 (6) obj. -5.09326 iterations 1
Cbc0038I Pass  31: suminf.    1.67432 (6) obj. -5.09326 iterations 8
Cbc0038I Pass  32: suminf.    1.06351 (5) obj. -5.20439 iterations 5
Cbc0038I Pass  33: suminf.    1.10055 (5) obj. -5.09326 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 56 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -0.58432 - took 0.02 seconds
Cbc0012I Integer solution of -0.58432 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 0 rows 0 columns
Cbc0031I 58 added rows had average density of 47.724138
Cbc0013I At root node, 58 cuts changed objective from -45.672794 to -12.313684 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16659 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1922 row cuts average 109.5 elements, 0 column cuts (0 active)  in 0.166 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 359 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1511 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 366 row cuts average 55.9 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.518 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.58432 best solution, best possible -12.313684 (2.40 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 58 rows 69 columns
Cbc0010I After 46 nodes, 1 on tree, -0.58432 best solution, best possible -9.3724571 (3.42 seconds)
Cbc0001I Search completed - best objective -0.5843199999999982, took 9458 iterations and 64 nodes (3.60 seconds)
Cbc0032I Strong branching done 890 times (17029 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 18, 113 variables fixed on reduced cost
Total time (CPU seconds):       2.95   (Wallclock seconds):       3.62

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 140 (-15) rows, 76 (-2) columns and 424 (-29) elements
Clp1000I sum of infeasibilities 0.000248242 - average 1.77316e-06, 6 fixed columns
Coin0506I Presolve 129 (-11) rows, 70 (-6) columns and 390 (-34) elements
Clp0029I End of values pass after 70 iterations
Clp0014I Perturbing problem by 0.001% of 0.32231226 - largest nonzero change 0 ( 0%) - largest zero change 2.7926465e-05
Clp0000I Optimal - objective value 34.714024
Clp0000I Optimal - objective value 34.714024
Coin0511I After Postsolve, objective 34.714024, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.714024
Clp0000I Optimal - objective value 34.714024
Clp0000I Optimal - objective value 34.714024
Coin0511I After Postsolve, objective 34.714024, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.71402376 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 140 rows, 76 columns (75 integer (75 of which binary)) and 424 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.187%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 12.4619
Cbc0038I Solution found of 12.8271
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 85 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 0 to -0.58432 (0.05 seconds)
Cbc0038I Round again with cutoff of -3.99738
Cbc0038I Pass   1: suminf.    1.28484 (48) obj. -3.99738 iterations 44
Cbc0038I Pass   2: suminf.    1.98116 (10) obj. -3.99738 iterations 43
Cbc0038I Pass   3: suminf.    1.98116 (10) obj. -3.99738 iterations 1
Cbc0038I Pass   4: suminf.    2.85966 (10) obj. -3.99738 iterations 29
Cbc0038I Pass   5: suminf.    1.54945 (6) obj. -3.99738 iterations 11
Cbc0038I Pass   6: suminf.    3.13973 (12) obj. -3.99738 iterations 8
Cbc0038I Pass   7: suminf.    1.44829 (13) obj. -3.99738 iterations 3
Cbc0038I Pass   8: suminf.    1.24692 (13) obj. -3.99738 iterations 13
Cbc0038I Pass   9: suminf.    1.13742 (5) obj. -3.99738 iterations 18
Cbc0038I Pass  10: suminf.    0.80264 (3) obj. -3.99738 iterations 2
Cbc0038I Pass  11: suminf.    0.75080 (4) obj. -3.99738 iterations 3
Cbc0038I Pass  12: suminf.    0.74157 (3) obj. -3.99738 iterations 1
Cbc0038I Pass  13: suminf.    0.96142 (4) obj. -3.99738 iterations 2
Cbc0038I Pass  14: suminf.    0.87047 (3) obj. -3.99738 iterations 1
Cbc0038I Pass  15: suminf.    0.66340 (4) obj. -3.99738 iterations 4
Cbc0038I Pass  16: suminf.    2.00949 (8) obj. -3.99738 iterations 6
Cbc0038I Pass  17: suminf.    1.73384 (6) obj. -3.99738 iterations 2
Cbc0038I Pass  18: suminf.    0.93549 (5) obj. -3.99738 iterations 7
Cbc0038I Pass  19: suminf.    0.93549 (5) obj. -3.99738 iterations 0
Cbc0038I Pass  20: suminf.    1.26773 (4) obj. -3.99738 iterations 5
Cbc0038I Pass  21: suminf.    1.26773 (4) obj. -3.99738 iterations 1
Cbc0038I Pass  22: suminf.    1.36437 (4) obj. -3.99738 iterations 3
Cbc0038I Pass  23: suminf.    0.89827 (4) obj. -3.99738 iterations 2
Cbc0038I Pass  24: suminf.    0.87538 (4) obj. -3.99738 iterations 1
Cbc0038I Pass  25: suminf.    1.42829 (6) obj. -3.99738 iterations 3
Cbc0038I Pass  26: suminf.    1.26773 (4) obj. -3.99738 iterations 2
Cbc0038I Pass  27: suminf.    1.36437 (4) obj. -3.99738 iterations 3
Cbc0038I Pass  28: suminf.    0.89827 (4) obj. -3.99738 iterations 2
Cbc0038I Pass  29: suminf.    0.87538 (4) obj. -3.99738 iterations 1
Cbc0038I Pass  30: suminf.    1.42829 (6) obj. -3.99738 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 140 rows 76 columns, reduced to 107 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -0.58432 - took 0.10 seconds
Cbc0012I Integer solution of -0.58432 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 85 rows 46 columns
Cbc0031I 20 added rows had average density of 68.65
Cbc0013I At root node, 20 cuts changed objective from -34.714024 to -26.767009 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12675 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1948 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 185 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 149 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.58432 best solution, best possible -26.767009 (0.99 seconds)
Cbc0038I Full problem 140 rows 76 columns, reduced to 79 rows 47 columns
Cbc0038I Full problem 140 rows 76 columns, reduced to 20 rows 17 columns
Cbc0001I Search completed - best objective -0.5843199999999982, took 12246 iterations and 98 nodes (1.36 seconds)
Cbc0032I Strong branching done 1092 times (17613 iterations), fathomed 5 nodes and fixed 51 variables
Cbc0035I Maximum depth 34, 190 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 114 (-39) columns and 1800 (-1504) elements
Clp1000I sum of infeasibilities 3.17703e-07 - average 3.05484e-09, 48 fixed columns
Coin0506I Presolve 58 (-46) rows, 66 (-48) columns and 242 (-1558) elements
Clp0006I 0  Obj -8.107735 Dual inf 2.9995311 (65)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 1.6076429 - largest nonzero change 2.009547e-05 ( 0.0010393299%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value -7.8058215
Clp0000I Optimal - objective value -7.8058215
Coin0511I After Postsolve, objective -7.8058215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.8058215 Dual inf 64.898793 (39)
Clp0014I Perturbing problem by 0.001% of 1.7257442 - largest nonzero change 2.927107e-05 ( 0.0024750985%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 49.86479
Clp0000I Optimal - objective value 49.86479
Clp0000I Optimal - objective value 49.86479
Coin0511I After Postsolve, objective 49.86479, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.86479017 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 114 columns (114 integer (114 of which binary)) and 1802 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.374%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 6.67384
Cbc0038I Pass   1: suminf.    2.26438 (29) obj. -22.7399 iterations 20
Cbc0038I Pass   2: suminf.    2.26438 (29) obj. -22.7399 iterations 3
Cbc0038I Pass   3: suminf.    1.23216 (18) obj. -1.89938 iterations 11
Cbc0038I Solution found of 19.5224
Cbc0038I Rounding solution of 13.8621 is better than previous of 19.5224

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 13.8621 to -0.58432 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.09326
Cbc0038I Pass   4: suminf.    2.26438 (29) obj. -22.7399 iterations 0
Cbc0038I Pass   5: suminf.    2.26438 (29) obj. -22.7399 iterations 2
Cbc0038I Pass   6: suminf.    1.77094 (20) obj. -5.09326 iterations 14
Cbc0038I Pass   7: suminf.    1.15078 (7) obj. -5.09326 iterations 21
Cbc0038I Pass   8: suminf.    1.14399 (6) obj. -5.22271 iterations 1
Cbc0038I Pass   9: suminf.    0.76172 (4) obj. -5.09326 iterations 9
Cbc0038I Pass  10: suminf.    0.38518 (4) obj. -5.09326 iterations 1
Cbc0038I Pass  11: suminf.    0.63514 (4) obj. -5.09326 iterations 5
Cbc0038I Pass  12: suminf.    0.49895 (3) obj. -5.09326 iterations 3
Cbc0038I Pass  13: suminf.    1.99185 (15) obj. -9.65889 iterations 30
Cbc0038I Pass  14: suminf.    1.44205 (12) obj. -9.0575 iterations 8
Cbc0038I Pass  15: suminf.    1.05935 (7) obj. -5.09326 iterations 12
Cbc0038I Pass  16: suminf.    1.05935 (7) obj. -5.09326 iterations 0
Cbc0038I Pass  17: suminf.    1.45083 (6) obj. -5.09326 iterations 11
Cbc0038I Pass  18: suminf.    1.20634 (6) obj. -5.09326 iterations 1
Cbc0038I Pass  19: suminf.    1.89195 (9) obj. -5.09326 iterations 8
Cbc0038I Pass  20: suminf.    1.89195 (9) obj. -5.09326 iterations 0
Cbc0038I Pass  21: suminf.    1.03523 (4) obj. -5.09326 iterations 17
Cbc0038I Pass  22: suminf.    0.59976 (4) obj. -5.09326 iterations 3
Cbc0038I Pass  23: suminf.    1.12760 (4) obj. -5.09326 iterations 6
Cbc0038I Pass  24: suminf.    0.53863 (4) obj. -5.09326 iterations 7
Cbc0038I Pass  25: suminf.    0.25005 (2) obj. -5.44697 iterations 6
Cbc0038I Pass  26: suminf.    0.32079 (2) obj. -5.09326 iterations 3
Cbc0038I Pass  27: suminf.    2.68105 (25) obj. -5.09326 iterations 38
Cbc0038I Pass  28: suminf.    2.02974 (16) obj. -5.09326 iterations 11
Cbc0038I Pass  29: suminf.    1.18029 (6) obj. -5.09326 iterations 24
Cbc0038I Pass  30: suminf.    1.18029 (6) obj. -5.09326 iterations 1
Cbc0038I Pass  31: suminf.    1.67432 (6) obj. -5.09326 iterations 8
Cbc0038I Pass  32: suminf.    1.06351 (5) obj. -5.20439 iterations 5
Cbc0038I Pass  33: suminf.    1.10055 (5) obj. -5.09326 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 56 rows 61 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -0.58432 - took 0.02 seconds
Cbc0012I Integer solution of -0.58432 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 0 rows 0 columns
Cbc0031I 58 added rows had average density of 47.724138
Cbc0013I At root node, 58 cuts changed objective from -45.672794 to -12.313684 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16659 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1922 row cuts average 109.5 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 359 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1511 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 366 row cuts average 55.9 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 59 row cuts average 16.4 elements, 0 column cuts (0 active)  in 0.503 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -0.58432 best solution, best possible -12.313684 (2.33 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 58 rows 69 columns
Cbc0010I After 46 nodes, 1 on tree, -0.58432 best solution, best possible -9.3724571 (3.31 seconds)
Cbc0001I Search completed - best objective -0.5843199999999982, took 9458 iterations and 64 nodes (3.49 seconds)
Cbc0032I Strong branching done 890 times (17029 iterations), fathomed 3 nodes and fixed 6 variables
Cbc0035I Maximum depth 18, 113 variables fixed on reduced cost
Total time (CPU seconds):       2.86   (Wallclock seconds):       3.51

