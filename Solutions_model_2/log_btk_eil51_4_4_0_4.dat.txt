Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 54 (-51) rows, 32 (-21) columns and 166 (-137) elements
Clp0000I Optimal - objective value 148.30867
Coin0511I After Postsolve, objective 148.30867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.30867 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 54 rows, 32 columns (31 integer (31 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.500%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.15766
Cbc0038I Pass   1: suminf.    0.26667 (2) obj. -126.245 iterations 7
Cbc0038I Pass   2: suminf.    0.26667 (2) obj. -126.245 iterations 0
Cbc0038I Solution found of -108.333
Cbc0038I Relaxing continuous gives -108.333
Cbc0038I Rounding solution of -116.333 is better than previous of -108.333

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 32 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -119.531
Cbc0038I Pass   3: suminf.    0.26667 (2) obj. -126.245 iterations 0
Cbc0038I Pass   4: suminf.    0.26667 (2) obj. -126.245 iterations 0
Cbc0038I Pass   5: suminf.    0.56301 (3) obj. -119.531 iterations 5
Cbc0038I Pass   6: suminf.    0.24808 (3) obj. -119.531 iterations 6
Cbc0038I Pass   7: suminf.    0.19225 (4) obj. -119.531 iterations 2
Cbc0038I Pass   8: suminf.    0.71486 (3) obj. -119.531 iterations 6
Cbc0038I Pass   9: suminf.    0.20000 (1) obj. -121.4 iterations 8
Cbc0038I Pass  10: suminf.    0.43380 (2) obj. -119.531 iterations 6
Cbc0038I Pass  11: suminf.    2.03312 (7) obj. -119.531 iterations 5
Cbc0038I Pass  12: suminf.    0.43380 (2) obj. -119.531 iterations 5
Cbc0038I Pass  13: suminf.    0.92243 (5) obj. -119.531 iterations 11
Cbc0038I Pass  14: suminf.    0.25051 (3) obj. -119.531 iterations 7
Cbc0038I Pass  15: suminf.    0.25187 (3) obj. -119.531 iterations 6
Cbc0038I Pass  16: suminf.    1.10191 (8) obj. -119.531 iterations 13
Cbc0038I Pass  17: suminf.    1.02248 (6) obj. -119.531 iterations 6
Cbc0038I Pass  18: suminf.    0.34705 (3) obj. -119.531 iterations 9
Cbc0038I Pass  19: suminf.    0.23157 (2) obj. -119.531 iterations 1
Cbc0038I Pass  20: suminf.    0.56940 (4) obj. -119.531 iterations 5
Cbc0038I Pass  21: suminf.    0.52562 (4) obj. -119.531 iterations 5
Cbc0038I Pass  22: suminf.    0.81082 (8) obj. -119.531 iterations 6
Cbc0038I Pass  23: suminf.    0.77931 (4) obj. -119.531 iterations 4
Cbc0038I Pass  24: suminf.    0.77367 (7) obj. -119.531 iterations 8
Cbc0038I Pass  25: suminf.    0.68593 (6) obj. -119.531 iterations 1
Cbc0038I Pass  26: suminf.    0.71111 (2) obj. -119.531 iterations 5
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -119.531 iterations 5
Cbc0038I Solution found of -119.531
Cbc0038I Relaxing continuous gives -122.667
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 32 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -127.795
Cbc0038I Pass  28: suminf.    0.33790 (5) obj. -127.795 iterations 2
Cbc0038I Pass  29: suminf.    0.29709 (6) obj. -127.795 iterations 1
Cbc0038I Pass  30: suminf.    1.99736 (7) obj. -127.795 iterations 7
Cbc0038I Pass  31: suminf.    1.90962 (6) obj. -127.795 iterations 1
Cbc0038I Pass  32: suminf.    0.92041 (8) obj. -127.795 iterations 7
Cbc0038I Pass  33: suminf.    0.83816 (7) obj. -127.795 iterations 3
Cbc0038I Pass  34: suminf.    1.53784 (6) obj. -127.795 iterations 8
Cbc0038I Pass  35: suminf.    1.41327 (5) obj. -127.795 iterations 1
Cbc0038I Pass  36: suminf.    1.65440 (7) obj. -127.795 iterations 6
Cbc0038I Pass  37: suminf.    1.56666 (6) obj. -127.795 iterations 1
Cbc0038I Pass  38: suminf.    0.71111 (2) obj. -127.795 iterations 5
Cbc0038I Pass  39: suminf.    0.71111 (2) obj. -127.795 iterations 0
Cbc0038I Pass  40: suminf.    0.66009 (3) obj. -127.795 iterations 3
Cbc0038I Pass  41: suminf.    2.33099 (9) obj. -127.795 iterations 15
Cbc0038I Pass  42: suminf.    2.32048 (8) obj. -127.795 iterations 2
Cbc0038I Pass  43: suminf.    1.53784 (6) obj. -127.795 iterations 7
Cbc0038I Pass  44: suminf.    1.41327 (5) obj. -127.795 iterations 1
Cbc0038I Pass  45: suminf.    1.65440 (7) obj. -127.795 iterations 6
Cbc0038I Pass  46: suminf.    1.56666 (6) obj. -127.795 iterations 1
Cbc0038I Pass  47: suminf.    0.71111 (2) obj. -127.795 iterations 5
Cbc0038I Pass  48: suminf.    0.71111 (2) obj. -127.795 iterations 0
Cbc0038I Pass  49: suminf.    0.66009 (3) obj. -127.795 iterations 3
Cbc0038I Pass  50: suminf.    1.71954 (10) obj. -127.795 iterations 11
Cbc0038I Pass  51: suminf.    1.20142 (8) obj. -127.795 iterations 4
Cbc0038I Pass  52: suminf.    2.50265 (6) obj. -127.795 iterations 7
Cbc0038I Pass  53: suminf.    1.58003 (6) obj. -127.795 iterations 4
Cbc0038I Pass  54: suminf.    0.87101 (5) obj. -127.795 iterations 3
Cbc0038I Pass  55: suminf.    2.02014 (5) obj. -127.795 iterations 8
Cbc0038I Pass  56: suminf.    0.87823 (7) obj. -127.795 iterations 5
Cbc0038I Pass  57: suminf.    0.83816 (7) obj. -127.795 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 32 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -122.667 - took 0.02 seconds
Cbc0012I Integer solution of -122.6668 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 54 rows 32 columns, reduced to 15 rows 12 columns
Cbc0031I 6 added rows had average density of 20
Cbc0013I At root node, 6 cuts changed objective from -148.30867 to -128.11523 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 93 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 312 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -122.6668, took 935 iterations and 4 nodes (0.12 seconds)
Cbc0032I Strong branching done 32 times (115 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-51) rows, 61 (-41) columns and 576 (-1002) elements
Clp1000I sum of infeasibilities 2.18318e-08 - average 4.11921e-10, 38 fixed columns
Coin0506I Presolve 16 (-37) rows, 23 (-38) columns and 74 (-502) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 2.8900889 - largest nonzero change 2.2014811e-05 ( 0.00095241485%) - largest zero change 1.9121656e-05
Clp0000I Optimal - objective value 128.78952
Clp0000I Optimal - objective value 128.78952
Coin0511I After Postsolve, objective 128.78952, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.4186046 - largest nonzero change 1.6558819e-05 ( 0.00099891329%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 184.75021
Clp0000I Optimal - objective value 184.75021
Clp0000I Optimal - objective value 184.75021
Coin0511I After Postsolve, objective 184.75021, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184.7502098 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 61 columns (61 integer (61 of which binary)) and 578 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.984%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 11.5237
Cbc0038I Pass   1: suminf.    2.88661 (17) obj. -101.064 iterations 13
Cbc0038I Pass   2: suminf.    2.88661 (17) obj. -101.064 iterations 0
Cbc0038I Solution found of -67.6668
Cbc0038I Rounding solution of -92.0001 is better than previous of -67.6668

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 61 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -92.0001 to -108.333 (0.02 seconds)
Cbc0038I Round again with cutoff of -114.463
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.94169 (20) obj. -114.463 iterations 1
Cbc0038I Pass   4: suminf.    3.94169 (20) obj. -114.463 iterations 0
Cbc0038I Pass   5: suminf.    0.43662 (6) obj. -114.463 iterations 24
Cbc0038I Pass   6: suminf.    0.37778 (3) obj. -117.134 iterations 3
Cbc0038I Pass   7: suminf.    0.98131 (2) obj. -114.463 iterations 5
Cbc0038I Pass   8: suminf.    0.26667 (1) obj. -116.8 iterations 5
Cbc0038I Pass   9: suminf.    0.13681 (1) obj. -114.463 iterations 3
Cbc0038I Pass  10: suminf.    2.33543 (9) obj. -114.463 iterations 14
Cbc0038I Pass  11: suminf.    2.02575 (16) obj. -114.463 iterations 4
Cbc0038I Pass  12: suminf.    0.84129 (3) obj. -114.463 iterations 11
Cbc0038I Pass  13: suminf.    0.70139 (2) obj. -114.463 iterations 2
Cbc0038I Pass  14: suminf.    0.49409 (2) obj. -114.463 iterations 4
Cbc0038I Pass  15: suminf.    0.11343 (2) obj. -114.463 iterations 4
Cbc0038I Pass  16: suminf.    0.11343 (2) obj. -114.463 iterations 0
Cbc0038I Pass  17: suminf.    0.49409 (2) obj. -114.463 iterations 4
Cbc0038I Pass  18: suminf.    1.24489 (6) obj. -114.463 iterations 9
Cbc0038I Pass  19: suminf.    1.07732 (5) obj. -114.463 iterations 2
Cbc0038I Pass  20: suminf.    1.48414 (7) obj. -114.463 iterations 12
Cbc0038I Pass  21: suminf.    1.31532 (7) obj. -117.248 iterations 3
Cbc0038I Pass  22: suminf.    0.62555 (4) obj. -114.463 iterations 11
Cbc0038I Pass  23: suminf.    0.46623 (2) obj. -114.463 iterations 2
Cbc0038I Pass  24: suminf.    0.30000 (1) obj. -118.967 iterations 4
Cbc0038I Pass  25: suminf.    0.11343 (2) obj. -114.463 iterations 3
Cbc0038I Pass  26: suminf.    0.35714 (1) obj. -115.024 iterations 5
Cbc0038I Pass  27: suminf.    0.35714 (1) obj. -115.024 iterations 0
Cbc0038I Pass  28: suminf.    0.37486 (1) obj. -114.463 iterations 2
Cbc0038I Pass  29: suminf.    5.70954 (21) obj. -114.463 iterations 27
Cbc0038I Pass  30: suminf.    3.45702 (17) obj. -114.463 iterations 4
Cbc0038I Pass  31: suminf.    3.45702 (17) obj. -114.463 iterations 1
Cbc0038I Pass  32: suminf.    1.16328 (5) obj. -114.463 iterations 16
Cbc0038I Rounding solution of -122.667 is better than previous of -108.333

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 61 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -132.059
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.72998 (21) obj. -132.059 iterations 1
Cbc0038I Pass  33: suminf.    4.72998 (21) obj. -132.059 iterations 0
Cbc0038I Pass  34: suminf.    1.90588 (8) obj. -132.059 iterations 27
Cbc0038I Pass  35: suminf.    1.90588 (8) obj. -132.059 iterations 0
Cbc0038I Pass  36: suminf.    2.04410 (6) obj. -132.059 iterations 10
Cbc0038I Pass  37: suminf.    2.04410 (6) obj. -132.059 iterations 0
Cbc0038I Pass  38: suminf.    3.28750 (8) obj. -132.059 iterations 4
Cbc0038I Pass  39: suminf.    1.92053 (7) obj. -132.059 iterations 3
Cbc0038I Pass  40: suminf.    1.92053 (7) obj. -132.059 iterations 0
Cbc0038I Pass  41: suminf.    3.21842 (9) obj. -132.059 iterations 3
Cbc0038I Pass  42: suminf.    2.10066 (5) obj. -132.059 iterations 3
Cbc0038I Pass  43: suminf.    1.85022 (5) obj. -132.059 iterations 1
Cbc0038I Pass  44: suminf.    1.85022 (5) obj. -132.059 iterations 0
Cbc0038I Pass  45: suminf.    2.04410 (6) obj. -132.059 iterations 7
Cbc0038I Pass  46: suminf.    2.04410 (6) obj. -132.059 iterations 0
Cbc0038I Pass  47: suminf.    3.28750 (8) obj. -132.059 iterations 4
Cbc0038I Pass  48: suminf.    1.92053 (7) obj. -132.059 iterations 3
Cbc0038I Pass  49: suminf.    1.92053 (7) obj. -132.059 iterations 0
Cbc0038I Pass  50: suminf.    3.21842 (9) obj. -132.059 iterations 3
Cbc0038I Pass  51: suminf.    2.10066 (5) obj. -132.059 iterations 3
Cbc0038I Pass  52: suminf.    1.85022 (5) obj. -132.059 iterations 1
Cbc0038I Pass  53: suminf.    1.85022 (5) obj. -132.059 iterations 0
Cbc0038I Pass  54: suminf.    2.04410 (6) obj. -132.059 iterations 7
Cbc0038I Pass  55: suminf.    2.04410 (6) obj. -132.059 iterations 0
Cbc0038I Pass  56: suminf.    3.28750 (8) obj. -132.059 iterations 4
Cbc0038I Pass  57: suminf.    1.92053 (7) obj. -132.059 iterations 3
Cbc0038I Pass  58: suminf.    1.92053 (7) obj. -132.059 iterations 0
Cbc0038I Pass  59: suminf.    3.21842 (9) obj. -132.059 iterations 3
Cbc0038I Pass  60: suminf.    2.10066 (5) obj. -132.059 iterations 3
Cbc0038I Pass  61: suminf.    1.85022 (5) obj. -132.059 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 61 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -122.667 - took 0.02 seconds
Cbc0012I Integer solution of -122.6668 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 53 rows 61 columns, reduced to 17 rows 18 columns
Cbc0031I 13 added rows had average density of 10.461538
Cbc0013I At root node, 13 cuts changed objective from -169.62606 to -128.70867 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 97 row cuts average 2.0 elements, 21 column cuts (21 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0001I Search completed - best objective -122.6668, took 300 iterations and 6 nodes (0.52 seconds)
Cbc0032I Strong branching done 54 times (184 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.52

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 54 (-51) rows, 32 (-21) columns and 166 (-137) elements
Clp0000I Optimal - objective value 148.30867
Coin0511I After Postsolve, objective 148.30867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.30867 - 24 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 54 rows, 32 columns (31 integer (31 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.500%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.15766
Cbc0038I Pass   1: suminf.    0.26667 (2) obj. -126.245 iterations 7
Cbc0038I Pass   2: suminf.    0.26667 (2) obj. -126.245 iterations 0
Cbc0038I Solution found of -108.333
Cbc0038I Relaxing continuous gives -108.333
Cbc0038I Rounding solution of -116.333 is better than previous of -108.333

Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 32 columns, reduced to 14 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -119.531
Cbc0038I Pass   3: suminf.    0.26667 (2) obj. -126.245 iterations 0
Cbc0038I Pass   4: suminf.    0.26667 (2) obj. -126.245 iterations 0
Cbc0038I Pass   5: suminf.    0.56301 (3) obj. -119.531 iterations 5
Cbc0038I Pass   6: suminf.    0.24808 (3) obj. -119.531 iterations 6
Cbc0038I Pass   7: suminf.    0.19225 (4) obj. -119.531 iterations 2
Cbc0038I Pass   8: suminf.    0.71486 (3) obj. -119.531 iterations 6
Cbc0038I Pass   9: suminf.    0.20000 (1) obj. -121.4 iterations 8
Cbc0038I Pass  10: suminf.    0.43380 (2) obj. -119.531 iterations 6
Cbc0038I Pass  11: suminf.    2.03312 (7) obj. -119.531 iterations 5
Cbc0038I Pass  12: suminf.    0.43380 (2) obj. -119.531 iterations 5
Cbc0038I Pass  13: suminf.    0.92243 (5) obj. -119.531 iterations 11
Cbc0038I Pass  14: suminf.    0.25051 (3) obj. -119.531 iterations 7
Cbc0038I Pass  15: suminf.    0.25187 (3) obj. -119.531 iterations 6
Cbc0038I Pass  16: suminf.    1.10191 (8) obj. -119.531 iterations 13
Cbc0038I Pass  17: suminf.    1.02248 (6) obj. -119.531 iterations 6
Cbc0038I Pass  18: suminf.    0.34705 (3) obj. -119.531 iterations 9
Cbc0038I Pass  19: suminf.    0.23157 (2) obj. -119.531 iterations 1
Cbc0038I Pass  20: suminf.    0.56940 (4) obj. -119.531 iterations 5
Cbc0038I Pass  21: suminf.    0.52562 (4) obj. -119.531 iterations 5
Cbc0038I Pass  22: suminf.    0.81082 (8) obj. -119.531 iterations 6
Cbc0038I Pass  23: suminf.    0.77931 (4) obj. -119.531 iterations 4
Cbc0038I Pass  24: suminf.    0.77367 (7) obj. -119.531 iterations 8
Cbc0038I Pass  25: suminf.    0.68593 (6) obj. -119.531 iterations 1
Cbc0038I Pass  26: suminf.    0.71111 (2) obj. -119.531 iterations 5
Cbc0038I Pass  27: suminf.    0.00000 (0) obj. -119.531 iterations 5
Cbc0038I Solution found of -119.531
Cbc0038I Relaxing continuous gives -122.667
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 32 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -127.795
Cbc0038I Pass  28: suminf.    0.33790 (5) obj. -127.795 iterations 2
Cbc0038I Pass  29: suminf.    0.29709 (6) obj. -127.795 iterations 1
Cbc0038I Pass  30: suminf.    1.99736 (7) obj. -127.795 iterations 7
Cbc0038I Pass  31: suminf.    1.90962 (6) obj. -127.795 iterations 1
Cbc0038I Pass  32: suminf.    0.92041 (8) obj. -127.795 iterations 7
Cbc0038I Pass  33: suminf.    0.83816 (7) obj. -127.795 iterations 3
Cbc0038I Pass  34: suminf.    1.53784 (6) obj. -127.795 iterations 8
Cbc0038I Pass  35: suminf.    1.41327 (5) obj. -127.795 iterations 1
Cbc0038I Pass  36: suminf.    1.65440 (7) obj. -127.795 iterations 6
Cbc0038I Pass  37: suminf.    1.56666 (6) obj. -127.795 iterations 1
Cbc0038I Pass  38: suminf.    0.71111 (2) obj. -127.795 iterations 5
Cbc0038I Pass  39: suminf.    0.71111 (2) obj. -127.795 iterations 0
Cbc0038I Pass  40: suminf.    0.66009 (3) obj. -127.795 iterations 3
Cbc0038I Pass  41: suminf.    2.33099 (9) obj. -127.795 iterations 15
Cbc0038I Pass  42: suminf.    2.32048 (8) obj. -127.795 iterations 2
Cbc0038I Pass  43: suminf.    1.53784 (6) obj. -127.795 iterations 7
Cbc0038I Pass  44: suminf.    1.41327 (5) obj. -127.795 iterations 1
Cbc0038I Pass  45: suminf.    1.65440 (7) obj. -127.795 iterations 6
Cbc0038I Pass  46: suminf.    1.56666 (6) obj. -127.795 iterations 1
Cbc0038I Pass  47: suminf.    0.71111 (2) obj. -127.795 iterations 5
Cbc0038I Pass  48: suminf.    0.71111 (2) obj. -127.795 iterations 0
Cbc0038I Pass  49: suminf.    0.66009 (3) obj. -127.795 iterations 3
Cbc0038I Pass  50: suminf.    1.71954 (10) obj. -127.795 iterations 11
Cbc0038I Pass  51: suminf.    1.20142 (8) obj. -127.795 iterations 4
Cbc0038I Pass  52: suminf.    2.50265 (6) obj. -127.795 iterations 7
Cbc0038I Pass  53: suminf.    1.58003 (6) obj. -127.795 iterations 4
Cbc0038I Pass  54: suminf.    0.87101 (5) obj. -127.795 iterations 3
Cbc0038I Pass  55: suminf.    2.02014 (5) obj. -127.795 iterations 8
Cbc0038I Pass  56: suminf.    0.87823 (7) obj. -127.795 iterations 5
Cbc0038I Pass  57: suminf.    0.83816 (7) obj. -127.795 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 32 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -122.667 - took 0.02 seconds
Cbc0012I Integer solution of -122.6668 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 54 rows 32 columns, reduced to 15 rows 12 columns
Cbc0031I 6 added rows had average density of 20
Cbc0013I At root node, 6 cuts changed objective from -148.30867 to -128.11523 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 93 row cuts average 3.1 elements, 5 column cuts (5 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 312 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 25.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 146 row cuts average 20.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -122.6668, took 935 iterations and 4 nodes (0.15 seconds)
Cbc0032I Strong branching done 32 times (115 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 18 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-52) rows, 61 (-42) columns and 576 (-1003) elements
Clp1000I sum of infeasibilities 2.18318e-08 - average 4.11921e-10, 38 fixed columns
Coin0506I Presolve 16 (-37) rows, 23 (-38) columns and 74 (-502) elements
Clp0029I End of values pass after 23 iterations
Clp0014I Perturbing problem by 0.001% of 2.8900889 - largest nonzero change 2.2014811e-05 ( 0.00095241485%) - largest zero change 1.9121656e-05
Clp0000I Optimal - objective value 128.78952
Clp0000I Optimal - objective value 128.78952
Coin0511I After Postsolve, objective 128.78952, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 5.4186046 - largest nonzero change 1.6558819e-05 ( 0.00099891329%) - largest zero change 2.5735924e-05
Clp0000I Optimal - objective value 184.75021
Clp0000I Optimal - objective value 184.75021
Clp0000I Optimal - objective value 184.75021
Coin0511I After Postsolve, objective 184.75021, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184.7502098 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 61 columns (61 integer (61 of which binary)) and 578 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.984%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 11.5237
Cbc0038I Pass   1: suminf.    2.88661 (17) obj. -101.064 iterations 13
Cbc0038I Pass   2: suminf.    2.88661 (17) obj. -101.064 iterations 0
Cbc0038I Solution found of -67.6668
Cbc0038I Rounding solution of -92.0001 is better than previous of -67.6668

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 61 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -92.0001 to -108.333 (0.01 seconds)
Cbc0038I Round again with cutoff of -114.463
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.94169 (20) obj. -114.463 iterations 1
Cbc0038I Pass   4: suminf.    3.94169 (20) obj. -114.463 iterations 0
Cbc0038I Pass   5: suminf.    0.43662 (6) obj. -114.463 iterations 24
Cbc0038I Pass   6: suminf.    0.37778 (3) obj. -117.134 iterations 3
Cbc0038I Pass   7: suminf.    0.98131 (2) obj. -114.463 iterations 5
Cbc0038I Pass   8: suminf.    0.26667 (1) obj. -116.8 iterations 5
Cbc0038I Pass   9: suminf.    0.13681 (1) obj. -114.463 iterations 3
Cbc0038I Pass  10: suminf.    2.33543 (9) obj. -114.463 iterations 14
Cbc0038I Pass  11: suminf.    2.02575 (16) obj. -114.463 iterations 4
Cbc0038I Pass  12: suminf.    0.84129 (3) obj. -114.463 iterations 11
Cbc0038I Pass  13: suminf.    0.70139 (2) obj. -114.463 iterations 2
Cbc0038I Pass  14: suminf.    0.49409 (2) obj. -114.463 iterations 4
Cbc0038I Pass  15: suminf.    0.11343 (2) obj. -114.463 iterations 4
Cbc0038I Pass  16: suminf.    0.11343 (2) obj. -114.463 iterations 0
Cbc0038I Pass  17: suminf.    0.49409 (2) obj. -114.463 iterations 4
Cbc0038I Pass  18: suminf.    1.24489 (6) obj. -114.463 iterations 9
Cbc0038I Pass  19: suminf.    1.07732 (5) obj. -114.463 iterations 2
Cbc0038I Pass  20: suminf.    1.48414 (7) obj. -114.463 iterations 12
Cbc0038I Pass  21: suminf.    1.31532 (7) obj. -117.248 iterations 3
Cbc0038I Pass  22: suminf.    0.62555 (4) obj. -114.463 iterations 11
Cbc0038I Pass  23: suminf.    0.46623 (2) obj. -114.463 iterations 2
Cbc0038I Pass  24: suminf.    0.30000 (1) obj. -118.967 iterations 4
Cbc0038I Pass  25: suminf.    0.11343 (2) obj. -114.463 iterations 3
Cbc0038I Pass  26: suminf.    0.35714 (1) obj. -115.024 iterations 5
Cbc0038I Pass  27: suminf.    0.35714 (1) obj. -115.024 iterations 0
Cbc0038I Pass  28: suminf.    0.37486 (1) obj. -114.463 iterations 2
Cbc0038I Pass  29: suminf.    5.70954 (21) obj. -114.463 iterations 27
Cbc0038I Pass  30: suminf.    3.45702 (17) obj. -114.463 iterations 4
Cbc0038I Pass  31: suminf.    3.45702 (17) obj. -114.463 iterations 1
Cbc0038I Pass  32: suminf.    1.16328 (5) obj. -114.463 iterations 16
Cbc0038I Rounding solution of -122.667 is better than previous of -108.333

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 61 columns, reduced to 27 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -132.059
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    4.72998 (21) obj. -132.059 iterations 1
Cbc0038I Pass  33: suminf.    4.72998 (21) obj. -132.059 iterations 0
Cbc0038I Pass  34: suminf.    1.90588 (8) obj. -132.059 iterations 27
Cbc0038I Pass  35: suminf.    1.90588 (8) obj. -132.059 iterations 0
Cbc0038I Pass  36: suminf.    2.04410 (6) obj. -132.059 iterations 10
Cbc0038I Pass  37: suminf.    2.04410 (6) obj. -132.059 iterations 0
Cbc0038I Pass  38: suminf.    3.28750 (8) obj. -132.059 iterations 4
Cbc0038I Pass  39: suminf.    1.92053 (7) obj. -132.059 iterations 3
Cbc0038I Pass  40: suminf.    1.92053 (7) obj. -132.059 iterations 0
Cbc0038I Pass  41: suminf.    3.21842 (9) obj. -132.059 iterations 3
Cbc0038I Pass  42: suminf.    2.10066 (5) obj. -132.059 iterations 3
Cbc0038I Pass  43: suminf.    1.85022 (5) obj. -132.059 iterations 1
Cbc0038I Pass  44: suminf.    1.85022 (5) obj. -132.059 iterations 0
Cbc0038I Pass  45: suminf.    2.04410 (6) obj. -132.059 iterations 7
Cbc0038I Pass  46: suminf.    2.04410 (6) obj. -132.059 iterations 0
Cbc0038I Pass  47: suminf.    3.28750 (8) obj. -132.059 iterations 4
Cbc0038I Pass  48: suminf.    1.92053 (7) obj. -132.059 iterations 3
Cbc0038I Pass  49: suminf.    1.92053 (7) obj. -132.059 iterations 0
Cbc0038I Pass  50: suminf.    3.21842 (9) obj. -132.059 iterations 3
Cbc0038I Pass  51: suminf.    2.10066 (5) obj. -132.059 iterations 3
Cbc0038I Pass  52: suminf.    1.85022 (5) obj. -132.059 iterations 1
Cbc0038I Pass  53: suminf.    1.85022 (5) obj. -132.059 iterations 0
Cbc0038I Pass  54: suminf.    2.04410 (6) obj. -132.059 iterations 7
Cbc0038I Pass  55: suminf.    2.04410 (6) obj. -132.059 iterations 0
Cbc0038I Pass  56: suminf.    3.28750 (8) obj. -132.059 iterations 4
Cbc0038I Pass  57: suminf.    1.92053 (7) obj. -132.059 iterations 3
Cbc0038I Pass  58: suminf.    1.92053 (7) obj. -132.059 iterations 0
Cbc0038I Pass  59: suminf.    3.21842 (9) obj. -132.059 iterations 3
Cbc0038I Pass  60: suminf.    2.10066 (5) obj. -132.059 iterations 3
Cbc0038I Pass  61: suminf.    1.85022 (5) obj. -132.059 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 61 columns, reduced to 17 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -122.667 - took 0.02 seconds
Cbc0012I Integer solution of -122.6668 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 53 rows 61 columns, reduced to 17 rows 18 columns
Cbc0031I 13 added rows had average density of 10.461538
Cbc0013I At root node, 13 cuts changed objective from -169.62606 to -128.70867 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 97 row cuts average 2.0 elements, 21 column cuts (21 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 27.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 10 row cuts average 21.7 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0010I After 5 nodes, 1 on tree, -122.6668 best solution, best possible -124.58453 (0.52 seconds)
Cbc0001I Search completed - best objective -122.6668, took 300 iterations and 6 nodes (0.53 seconds)
Cbc0032I Strong branching done 54 times (184 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 2, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.33   (Wallclock seconds):       0.53

