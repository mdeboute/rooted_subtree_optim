Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 1.01502e-05 - average 7.35524e-08, 8 fixed columns
Coin0506I Presolve 122 (-16) rows, 68 (-8) columns and 372 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.493712 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 41.279361
Clp0000I Optimal - objective value 41.279361
Coin0511I After Postsolve, objective 41.279361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.279361
Clp0000I Optimal - objective value 41.279361
Clp0000I Optimal - objective value 41.279361
Coin0511I After Postsolve, objective 41.279361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.27936098 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.01365
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.48254 iterations 62
Cbc0038I Solution found of 3.48254
Cbc0038I Relaxing continuous gives 3.48254
Cbc0038I Rounding solution of -4.04966 is better than previous of 3.48254

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 76 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -4.04966 to -13.0862 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.9056
Cbc0038I Pass   2: suminf.    2.71570 (16) obj. -15.9056 iterations 22
Cbc0038I Pass   3: suminf.    2.39750 (7) obj. -15.9056 iterations 27
Cbc0038I Pass   4: suminf.    1.55423 (6) obj. -15.9056 iterations 2
Cbc0038I Pass   5: suminf.    1.24941 (4) obj. -15.9056 iterations 9
Cbc0038I Pass   6: suminf.    0.86324 (5) obj. -15.9056 iterations 5
Cbc0038I Pass   7: suminf.    1.82224 (6) obj. -15.9056 iterations 9
Cbc0038I Pass   8: suminf.    1.82224 (6) obj. -15.9056 iterations 1
Cbc0038I Pass   9: suminf.    1.52026 (5) obj. -15.9056 iterations 9
Cbc0038I Pass  10: suminf.    0.93781 (4) obj. -15.9056 iterations 3
Cbc0038I Pass  11: suminf.    1.68644 (5) obj. -15.9056 iterations 2
Cbc0038I Pass  12: suminf.    1.68644 (5) obj. -15.9056 iterations 0
Cbc0038I Pass  13: suminf.    1.94761 (5) obj. -15.9056 iterations 8
Cbc0038I Pass  14: suminf.    1.94761 (5) obj. -15.9056 iterations 0
Cbc0038I Pass  15: suminf.    1.68644 (5) obj. -15.9056 iterations 4
Cbc0038I Pass  16: suminf.    4.10149 (13) obj. -15.9056 iterations 18
Cbc0038I Pass  17: suminf.    2.12369 (8) obj. -15.9056 iterations 10
Cbc0038I Pass  18: suminf.    2.18676 (7) obj. -15.9056 iterations 24
Cbc0038I Pass  19: suminf.    2.11688 (9) obj. -15.9056 iterations 5
Cbc0038I Pass  20: suminf.    0.77948 (5) obj. -15.9056 iterations 12
Cbc0038I Pass  21: suminf.    0.41551 (2) obj. -15.9056 iterations 1
Cbc0038I Pass  22: suminf.    0.98345 (4) obj. -15.9056 iterations 6
Cbc0038I Pass  23: suminf.    0.67096 (3) obj. -15.9056 iterations 1
Cbc0038I Pass  24: suminf.    1.69854 (7) obj. -15.9056 iterations 21
Cbc0038I Pass  25: suminf.    0.75019 (3) obj. -15.9056 iterations 10
Cbc0038I Pass  26: suminf.    0.49777 (3) obj. -15.9056 iterations 7
Cbc0038I Pass  27: suminf.    0.36899 (4) obj. -15.9056 iterations 2
Cbc0038I Pass  28: suminf.    1.50645 (6) obj. -15.9056 iterations 10
Cbc0038I Pass  29: suminf.    0.85288 (3) obj. -15.9056 iterations 3
Cbc0038I Pass  30: suminf.    0.87432 (4) obj. -15.9056 iterations 6
Cbc0038I Pass  31: suminf.    0.80528 (3) obj. -15.9056 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -13.0862 - took 0.08 seconds
Cbc0012I Integer solution of -13.0862 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 76 rows 43 columns
Cbc0031I 26 added rows had average density of 59.346154
Cbc0013I At root node, 26 cuts changed objective from -41.279361 to -33.230807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9514 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1298 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.0862 best solution, best possible -33.230807 (0.71 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 77 rows 45 columns
Cbc0012I Integer solution of -13.12444 found by RINS after 7143 iterations and 41 nodes (0.95 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 12 rows 15 columns
Cbc0001I Search completed - best objective -13.12444, took 9778 iterations and 180 nodes (1.10 seconds)
Cbc0032I Strong branching done 1236 times (18997 iterations), fathomed 17 nodes and fixed 43 variables
Cbc0035I Maximum depth 36, 527 variables fixed on reduced cost
Total time (CPU seconds):       1.07   (Wallclock seconds):       1.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-49) rows, 117 (-35) columns and 2008 (-1295) elements
Clp1000I sum of infeasibilities 1.49491e-07 - average 1.42373e-09, 19 fixed columns
Coin0506I Presolve 88 (-17) rows, 98 (-19) columns and 1445 (-563) elements
Clp0006I 0  Obj 49.646274 Dual inf 4.9172606 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.7571817 - largest nonzero change 1.8416284e-05 ( 0.0012247315%) - largest zero change 2.9388079e-05
Clp0000I Optimal - objective value 58.483229
Clp0000I Optimal - objective value 58.483229
Coin0511I After Postsolve, objective 58.483229, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 58.483229
Clp0000I Optimal - objective value 58.483229
Clp0000I Optimal - objective value 58.483229
Clp0000I Optimal - objective value 58.483229
Coin0511I After Postsolve, objective 58.483229, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.48322883 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 117 columns (117 integer (117 of which binary)) and 2015 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.79236
Cbc0038I Pass   1: suminf.    2.58765 (31) obj. -39.6179 iterations 18
Cbc0038I Pass   2: suminf.    2.58765 (31) obj. -39.6179 iterations 1
Cbc0038I Pass   3: suminf.    1.29831 (18) obj. -22.4789 iterations 13
Cbc0038I Pass   4: suminf.    0.43004 (8) obj. -10.6019 iterations 10
Cbc0038I Solution found of -1.13615
Cbc0038I Rounding solution of -3.75597 is better than previous of -1.13615

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 117 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -3.75597 to -9.26155 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.345
Cbc0038I Pass   5: suminf.    2.58765 (31) obj. -39.6179 iterations 0
Cbc0038I Pass   6: suminf.    2.58765 (31) obj. -39.6179 iterations 1
Cbc0038I Pass   7: suminf.    0.63416 (7) obj. -13.345 iterations 33
Cbc0038I Pass   8: suminf.    0.53734 (6) obj. -15.6333 iterations 1
Cbc0038I Pass   9: suminf.    0.61150 (11) obj. -13.345 iterations 26
Cbc0038I Pass  10: suminf.    0.31148 (2) obj. -13.345 iterations 10
Cbc0038I Pass  11: suminf.    0.59140 (2) obj. -13.345 iterations 3
Cbc0038I Pass  12: suminf.    1.70657 (15) obj. -13.345 iterations 36
Cbc0038I Pass  13: suminf.    1.18532 (12) obj. -14.6502 iterations 6
Cbc0038I Pass  14: suminf.    0.82028 (5) obj. -13.345 iterations 25
Cbc0038I Pass  15: suminf.    0.71404 (5) obj. -13.5575 iterations 6
Cbc0038I Pass  16: suminf.    1.10589 (4) obj. -13.345 iterations 9
Cbc0038I Pass  17: suminf.    0.85800 (5) obj. -13.345 iterations 4
Cbc0038I Pass  18: suminf.    1.22593 (5) obj. -13.345 iterations 4
Cbc0038I Pass  19: suminf.    0.95593 (4) obj. -13.8687 iterations 2
Cbc0038I Pass  20: suminf.    1.13047 (4) obj. -13.345 iterations 4
Cbc0038I Pass  21: suminf.    1.80345 (14) obj. -13.345 iterations 30
Cbc0038I Pass  22: suminf.    1.49636 (13) obj. -13.345 iterations 6
Cbc0038I Pass  23: suminf.    1.36750 (7) obj. -13.345 iterations 21
Cbc0038I Pass  24: suminf.    1.07806 (8) obj. -13.972 iterations 6
Cbc0038I Pass  25: suminf.    1.92589 (8) obj. -13.345 iterations 4
Cbc0038I Pass  26: suminf.    1.33830 (6) obj. -13.345 iterations 5
Cbc0038I Pass  27: suminf.    0.77263 (7) obj. -13.345 iterations 4
Cbc0038I Pass  28: suminf.    1.94783 (8) obj. -13.345 iterations 10
Cbc0038I Pass  29: suminf.    0.60431 (3) obj. -13.345 iterations 10
Cbc0038I Pass  30: suminf.    0.34257 (3) obj. -15.0957 iterations 3
Cbc0038I Pass  31: suminf.    0.51240 (3) obj. -13.345 iterations 9
Cbc0038I Pass  32: suminf.    0.51240 (3) obj. -13.345 iterations 7
Cbc0038I Pass  33: suminf.    0.53671 (3) obj. -13.345 iterations 7
Cbc0038I Pass  34: suminf.    0.53671 (3) obj. -13.345 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 117 columns, reduced to 49 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -9.26155 to -11.8465 (0.07 seconds)
Cbc0038I Round again with cutoff of -20.6951
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.58765 (31) obj. -39.6179 iterations 0
Cbc0038I Pass  35: suminf.    2.58765 (31) obj. -39.6179 iterations 1
Cbc0038I Pass  36: suminf.    1.48395 (20) obj. -27.0133 iterations 11
Cbc0038I Pass  37: suminf.    0.95098 (11) obj. -20.6951 iterations 19
Cbc0038I Pass  38: suminf.    0.94184 (10) obj. -21.0205 iterations 1
Cbc0038I Pass  39: suminf.    1.04408 (15) obj. -20.6951 iterations 28
Cbc0038I Pass  40: suminf.    1.04310 (7) obj. -20.6951 iterations 2
Cbc0038I Pass  41: suminf.    1.33906 (8) obj. -20.6951 iterations 17
Cbc0038I Pass  42: suminf.    1.33906 (8) obj. -20.6951 iterations 10
Cbc0038I Pass  43: suminf.    1.05179 (6) obj. -20.6951 iterations 19
Cbc0038I Pass  44: suminf.    2.38788 (13) obj. -20.6951 iterations 21
Cbc0038I Pass  45: suminf.    1.40729 (10) obj. -20.6951 iterations 19
Cbc0038I Pass  46: suminf.    1.29961 (8) obj. -20.6951 iterations 20
Cbc0038I Pass  47: suminf.    1.29961 (8) obj. -20.6951 iterations 9
Cbc0038I Pass  48: suminf.    1.09622 (6) obj. -20.6951 iterations 20
Cbc0038I Pass  49: suminf.    1.08702 (7) obj. -20.6951 iterations 12
Cbc0038I Pass  50: suminf.    1.29961 (8) obj. -20.6951 iterations 12
Cbc0038I Pass  51: suminf.    1.98022 (15) obj. -20.6951 iterations 18
Cbc0038I Pass  52: suminf.    1.49525 (12) obj. -20.7147 iterations 8
Cbc0038I Pass  53: suminf.    1.55180 (9) obj. -20.6951 iterations 18
Cbc0038I Pass  54: suminf.    1.54768 (9) obj. -20.6951 iterations 5
Cbc0038I Pass  55: suminf.    1.43970 (7) obj. -20.6951 iterations 17
Cbc0038I Pass  56: suminf.    0.74078 (7) obj. -20.6951 iterations 11
Cbc0038I Pass  57: suminf.    1.43970 (7) obj. -20.6951 iterations 13
Cbc0038I Pass  58: suminf.    0.80445 (7) obj. -20.6951 iterations 8
Cbc0038I Pass  59: suminf.    1.43970 (7) obj. -20.6951 iterations 16
Cbc0038I Pass  60: suminf.    1.95179 (11) obj. -20.6951 iterations 19
Cbc0038I Pass  61: suminf.    1.30446 (10) obj. -20.6951 iterations 7
Cbc0038I Pass  62: suminf.    1.13599 (10) obj. -22.1773 iterations 1
Cbc0038I Pass  63: suminf.    1.43970 (7) obj. -20.6951 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.8465 - took 0.06 seconds
Cbc0012I Integer solution of -11.84648 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 105 rows 117 columns, reduced to 14 rows 16 columns
Cbc0031I 57 added rows had average density of 32.736842
Cbc0013I At root node, 57 cuts changed objective from -50.095547 to -24.510956 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23240 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1850 row cuts average 110.8 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 613 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1400 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 50.3 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.510 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.84648 best solution, best possible -24.510956 (2.43 seconds)
Cbc0010I After 7 nodes, 6 on tree, -11.84648 best solution, best possible -23.372283 (3.15 seconds)
Cbc0012I Integer solution of -12.4758 found by DiveCoefficient after 7863 iterations and 13 nodes (3.22 seconds)
Cbc0012I Integer solution of -12.64642 found by rounding after 7872 iterations and 14 nodes (3.22 seconds)
Cbc0016I Integer solution of -13.1039 found by strong branching after 7883 iterations and 15 nodes (3.22 seconds)
Cbc0004I Integer solution of -13.12444 found after 8090 iterations and 37 nodes (3.26 seconds)
Cbc0038I Full problem 105 rows 117 columns, reduced to 4 rows 7 columns
Cbc0038I Full problem 105 rows 117 columns, reduced to 34 rows 46 columns
Cbc0001I Search completed - best objective -13.12444, took 10162 iterations and 120 nodes (3.67 seconds)
Cbc0032I Strong branching done 994 times (14169 iterations), fathomed 21 nodes and fixed 23 variables
Cbc0035I Maximum depth 23, 210 variables fixed on reduced cost
Total time (CPU seconds):       3.09   (Wallclock seconds):       3.70

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 76 (-2) columns and 420 (-33) elements
Clp1000I sum of infeasibilities 1.01502e-05 - average 7.35524e-08, 8 fixed columns
Coin0506I Presolve 122 (-16) rows, 68 (-8) columns and 372 (-48) elements
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 2.493712 - largest nonzero change 0 ( 0%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 41.279361
Clp0000I Optimal - objective value 41.279361
Coin0511I After Postsolve, objective 41.279361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 41.279361
Clp0000I Optimal - objective value 41.279361
Clp0000I Optimal - objective value 41.279361
Coin0511I After Postsolve, objective 41.279361, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 41.27936098 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 76 columns (75 integer (75 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.170%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.01365
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.48254 iterations 62
Cbc0038I Solution found of 3.48254
Cbc0038I Relaxing continuous gives 3.48254
Cbc0038I Rounding solution of -4.04966 is better than previous of 3.48254

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 76 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -4.04966 to -13.0862 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.9056
Cbc0038I Pass   2: suminf.    2.71570 (16) obj. -15.9056 iterations 22
Cbc0038I Pass   3: suminf.    2.39750 (7) obj. -15.9056 iterations 27
Cbc0038I Pass   4: suminf.    1.55423 (6) obj. -15.9056 iterations 2
Cbc0038I Pass   5: suminf.    1.24941 (4) obj. -15.9056 iterations 9
Cbc0038I Pass   6: suminf.    0.86324 (5) obj. -15.9056 iterations 5
Cbc0038I Pass   7: suminf.    1.82224 (6) obj. -15.9056 iterations 9
Cbc0038I Pass   8: suminf.    1.82224 (6) obj. -15.9056 iterations 1
Cbc0038I Pass   9: suminf.    1.52026 (5) obj. -15.9056 iterations 9
Cbc0038I Pass  10: suminf.    0.93781 (4) obj. -15.9056 iterations 3
Cbc0038I Pass  11: suminf.    1.68644 (5) obj. -15.9056 iterations 2
Cbc0038I Pass  12: suminf.    1.68644 (5) obj. -15.9056 iterations 0
Cbc0038I Pass  13: suminf.    1.94761 (5) obj. -15.9056 iterations 8
Cbc0038I Pass  14: suminf.    1.94761 (5) obj. -15.9056 iterations 0
Cbc0038I Pass  15: suminf.    1.68644 (5) obj. -15.9056 iterations 4
Cbc0038I Pass  16: suminf.    4.10149 (13) obj. -15.9056 iterations 18
Cbc0038I Pass  17: suminf.    2.12369 (8) obj. -15.9056 iterations 10
Cbc0038I Pass  18: suminf.    2.18676 (7) obj. -15.9056 iterations 24
Cbc0038I Pass  19: suminf.    2.11688 (9) obj. -15.9056 iterations 5
Cbc0038I Pass  20: suminf.    0.77948 (5) obj. -15.9056 iterations 12
Cbc0038I Pass  21: suminf.    0.41551 (2) obj. -15.9056 iterations 1
Cbc0038I Pass  22: suminf.    0.98345 (4) obj. -15.9056 iterations 6
Cbc0038I Pass  23: suminf.    0.67096 (3) obj. -15.9056 iterations 1
Cbc0038I Pass  24: suminf.    1.69854 (7) obj. -15.9056 iterations 21
Cbc0038I Pass  25: suminf.    0.75019 (3) obj. -15.9056 iterations 10
Cbc0038I Pass  26: suminf.    0.49777 (3) obj. -15.9056 iterations 7
Cbc0038I Pass  27: suminf.    0.36899 (4) obj. -15.9056 iterations 2
Cbc0038I Pass  28: suminf.    1.50645 (6) obj. -15.9056 iterations 10
Cbc0038I Pass  29: suminf.    0.85288 (3) obj. -15.9056 iterations 3
Cbc0038I Pass  30: suminf.    0.87432 (4) obj. -15.9056 iterations 6
Cbc0038I Pass  31: suminf.    0.80528 (3) obj. -15.9056 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 76 columns, reduced to 83 rows 47 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -13.0862 - took 0.08 seconds
Cbc0012I Integer solution of -13.0862 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 76 rows 43 columns
Cbc0031I 26 added rows had average density of 59.346154
Cbc0013I At root node, 26 cuts changed objective from -41.279361 to -33.230807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9514 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1298 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 51 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -13.0862 best solution, best possible -33.230807 (0.81 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 77 rows 45 columns
Cbc0012I Integer solution of -13.12444 found by RINS after 7143 iterations and 41 nodes (1.09 seconds)
Cbc0038I Full problem 138 rows 76 columns, reduced to 12 rows 15 columns
Cbc0001I Search completed - best objective -13.12444, took 9778 iterations and 180 nodes (1.26 seconds)
Cbc0032I Strong branching done 1236 times (18997 iterations), fathomed 17 nodes and fixed 43 variables
Cbc0035I Maximum depth 36, 527 variables fixed on reduced cost
Total time (CPU seconds):       1.20   (Wallclock seconds):       1.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 105 (-50) rows, 117 (-36) columns and 2008 (-1296) elements
Clp1000I sum of infeasibilities 1.49491e-07 - average 1.42373e-09, 19 fixed columns
Coin0506I Presolve 88 (-17) rows, 98 (-19) columns and 1445 (-563) elements
Clp0006I 0  Obj 49.646274 Dual inf 4.9172606 (98)
Clp0029I End of values pass after 98 iterations
Clp0014I Perturbing problem by 0.001% of 1.7571817 - largest nonzero change 1.8416284e-05 ( 0.0012247315%) - largest zero change 2.9388079e-05
Clp0000I Optimal - objective value 58.483229
Clp0000I Optimal - objective value 58.483229
Coin0511I After Postsolve, objective 58.483229, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 58.483229
Clp0000I Optimal - objective value 58.483229
Clp0000I Optimal - objective value 58.483229
Clp0000I Optimal - objective value 58.483229
Coin0511I After Postsolve, objective 58.483229, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.48322883 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 117 columns (117 integer (117 of which binary)) and 2015 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.816%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.79236
Cbc0038I Pass   1: suminf.    2.58765 (31) obj. -39.6179 iterations 18
Cbc0038I Pass   2: suminf.    2.58765 (31) obj. -39.6179 iterations 1
Cbc0038I Pass   3: suminf.    1.29831 (18) obj. -22.4789 iterations 13
Cbc0038I Pass   4: suminf.    0.43004 (8) obj. -10.6019 iterations 10
Cbc0038I Solution found of -1.13615
Cbc0038I Rounding solution of -3.75597 is better than previous of -1.13615

Cbc0038I Before mini branch and bound, 79 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 117 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -3.75597 to -9.26155 (0.04 seconds)
Cbc0038I Round again with cutoff of -13.345
Cbc0038I Pass   5: suminf.    2.58765 (31) obj. -39.6179 iterations 0
Cbc0038I Pass   6: suminf.    2.58765 (31) obj. -39.6179 iterations 1
Cbc0038I Pass   7: suminf.    0.63416 (7) obj. -13.345 iterations 33
Cbc0038I Pass   8: suminf.    0.53734 (6) obj. -15.6333 iterations 1
Cbc0038I Pass   9: suminf.    0.61150 (11) obj. -13.345 iterations 26
Cbc0038I Pass  10: suminf.    0.31148 (2) obj. -13.345 iterations 10
Cbc0038I Pass  11: suminf.    0.59140 (2) obj. -13.345 iterations 3
Cbc0038I Pass  12: suminf.    1.70657 (15) obj. -13.345 iterations 36
Cbc0038I Pass  13: suminf.    1.18532 (12) obj. -14.6502 iterations 6
Cbc0038I Pass  14: suminf.    0.82028 (5) obj. -13.345 iterations 25
Cbc0038I Pass  15: suminf.    0.71404 (5) obj. -13.5575 iterations 6
Cbc0038I Pass  16: suminf.    1.10589 (4) obj. -13.345 iterations 9
Cbc0038I Pass  17: suminf.    0.85800 (5) obj. -13.345 iterations 4
Cbc0038I Pass  18: suminf.    1.22593 (5) obj. -13.345 iterations 4
Cbc0038I Pass  19: suminf.    0.95593 (4) obj. -13.8687 iterations 2
Cbc0038I Pass  20: suminf.    1.13047 (4) obj. -13.345 iterations 4
Cbc0038I Pass  21: suminf.    1.80345 (14) obj. -13.345 iterations 30
Cbc0038I Pass  22: suminf.    1.49636 (13) obj. -13.345 iterations 6
Cbc0038I Pass  23: suminf.    1.36750 (7) obj. -13.345 iterations 21
Cbc0038I Pass  24: suminf.    1.07806 (8) obj. -13.972 iterations 6
Cbc0038I Pass  25: suminf.    1.92589 (8) obj. -13.345 iterations 4
Cbc0038I Pass  26: suminf.    1.33830 (6) obj. -13.345 iterations 5
Cbc0038I Pass  27: suminf.    0.77263 (7) obj. -13.345 iterations 4
Cbc0038I Pass  28: suminf.    1.94783 (8) obj. -13.345 iterations 10
Cbc0038I Pass  29: suminf.    0.60431 (3) obj. -13.345 iterations 10
Cbc0038I Pass  30: suminf.    0.34257 (3) obj. -15.0957 iterations 3
Cbc0038I Pass  31: suminf.    0.51240 (3) obj. -13.345 iterations 9
Cbc0038I Pass  32: suminf.    0.51240 (3) obj. -13.345 iterations 7
Cbc0038I Pass  33: suminf.    0.53671 (3) obj. -13.345 iterations 7
Cbc0038I Pass  34: suminf.    0.53671 (3) obj. -13.345 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 117 columns, reduced to 49 rows 57 columns
Cbc0038I Mini branch and bound improved solution from -9.26155 to -11.8465 (0.08 seconds)
Cbc0038I Round again with cutoff of -20.6951
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.58765 (31) obj. -39.6179 iterations 0
Cbc0038I Pass  35: suminf.    2.58765 (31) obj. -39.6179 iterations 1
Cbc0038I Pass  36: suminf.    1.48395 (20) obj. -27.0133 iterations 11
Cbc0038I Pass  37: suminf.    0.95098 (11) obj. -20.6951 iterations 19
Cbc0038I Pass  38: suminf.    0.94184 (10) obj. -21.0205 iterations 1
Cbc0038I Pass  39: suminf.    1.04408 (15) obj. -20.6951 iterations 28
Cbc0038I Pass  40: suminf.    1.04310 (7) obj. -20.6951 iterations 2
Cbc0038I Pass  41: suminf.    1.33906 (8) obj. -20.6951 iterations 17
Cbc0038I Pass  42: suminf.    1.33906 (8) obj. -20.6951 iterations 10
Cbc0038I Pass  43: suminf.    1.05179 (6) obj. -20.6951 iterations 19
Cbc0038I Pass  44: suminf.    2.38788 (13) obj. -20.6951 iterations 21
Cbc0038I Pass  45: suminf.    1.40729 (10) obj. -20.6951 iterations 19
Cbc0038I Pass  46: suminf.    1.29961 (8) obj. -20.6951 iterations 20
Cbc0038I Pass  47: suminf.    1.29961 (8) obj. -20.6951 iterations 9
Cbc0038I Pass  48: suminf.    1.09622 (6) obj. -20.6951 iterations 20
Cbc0038I Pass  49: suminf.    1.08702 (7) obj. -20.6951 iterations 12
Cbc0038I Pass  50: suminf.    1.29961 (8) obj. -20.6951 iterations 12
Cbc0038I Pass  51: suminf.    1.98022 (15) obj. -20.6951 iterations 18
Cbc0038I Pass  52: suminf.    1.49525 (12) obj. -20.7147 iterations 8
Cbc0038I Pass  53: suminf.    1.55180 (9) obj. -20.6951 iterations 18
Cbc0038I Pass  54: suminf.    1.54768 (9) obj. -20.6951 iterations 5
Cbc0038I Pass  55: suminf.    1.43970 (7) obj. -20.6951 iterations 17
Cbc0038I Pass  56: suminf.    0.74078 (7) obj. -20.6951 iterations 11
Cbc0038I Pass  57: suminf.    1.43970 (7) obj. -20.6951 iterations 13
Cbc0038I Pass  58: suminf.    0.80445 (7) obj. -20.6951 iterations 8
Cbc0038I Pass  59: suminf.    1.43970 (7) obj. -20.6951 iterations 16
Cbc0038I Pass  60: suminf.    1.95179 (11) obj. -20.6951 iterations 19
Cbc0038I Pass  61: suminf.    1.30446 (10) obj. -20.6951 iterations 7
Cbc0038I Pass  62: suminf.    1.13599 (10) obj. -22.1773 iterations 1
Cbc0038I Pass  63: suminf.    1.43970 (7) obj. -20.6951 iterations 22
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -11.8465 - took 0.07 seconds
Cbc0012I Integer solution of -11.84648 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 105 rows 117 columns, reduced to 14 rows 16 columns
Cbc0031I 57 added rows had average density of 32.736842
Cbc0013I At root node, 57 cuts changed objective from -50.095547 to -24.510956 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 23240 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1850 row cuts average 110.8 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 25 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 613 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.109 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1400 row cuts average 10.1 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 50.3 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.575 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.84648 best solution, best possible -24.510956 (2.95 seconds)
Cbc0010I After 6 nodes, 5 on tree, -11.84648 best solution, best possible -23.372283 (3.73 seconds)
Cbc0012I Integer solution of -12.4758 found by DiveCoefficient after 7863 iterations and 13 nodes (3.86 seconds)
Cbc0012I Integer solution of -12.64642 found by rounding after 7872 iterations and 14 nodes (3.86 seconds)
Cbc0016I Integer solution of -13.1039 found by strong branching after 7883 iterations and 15 nodes (3.86 seconds)
Cbc0004I Integer solution of -13.12444 found after 8090 iterations and 37 nodes (3.90 seconds)
Cbc0038I Full problem 105 rows 117 columns, reduced to 4 rows 7 columns
Cbc0038I Full problem 105 rows 117 columns, reduced to 34 rows 46 columns
Cbc0001I Search completed - best objective -13.12444, took 10162 iterations and 120 nodes (4.37 seconds)
Cbc0032I Strong branching done 994 times (14169 iterations), fathomed 21 nodes and fixed 23 variables
Cbc0035I Maximum depth 23, 210 variables fixed on reduced cost
Total time (CPU seconds):       3.57   (Wallclock seconds):       4.40

