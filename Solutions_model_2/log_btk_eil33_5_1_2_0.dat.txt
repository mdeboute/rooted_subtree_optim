Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 33 (-2) columns and 166 (-29) elements
Clp1000I sum of infeasibilities 2.50419e-05 - average 4.63738e-07, 3 fixed columns
Coin0506I Presolve 48 (-6) rows, 30 (-3) columns and 148 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Coin0511I After Postsolve, objective 70.769833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Coin0511I After Postsolve, objective 70.769833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.76983316 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 54 rows, 33 columns (32 integer (32 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.352%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.12074
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.2203 iterations 28
Cbc0038I Solution found of -11.2203
Cbc0038I Relaxing continuous gives -11.2203
Cbc0038I Rounding solution of -12.4646 is better than previous of -11.2203

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 33 columns, reduced to 47 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -12.4646 to -23.4771 (0.03 seconds)
Cbc0038I Round again with cutoff of -28.2065
Cbc0038I Pass   2: suminf.    1.00150 (5) obj. -28.2065 iterations 6
Cbc0038I Pass   3: suminf.    0.87965 (5) obj. -28.2065 iterations 8
Cbc0038I Pass   4: suminf.    0.86561 (4) obj. -28.2065 iterations 1
Cbc0038I Pass   5: suminf.    1.00466 (5) obj. -28.2065 iterations 8
Cbc0038I Pass   6: suminf.    1.75442 (7) obj. -28.2065 iterations 13
Cbc0038I Pass   7: suminf.    1.14352 (4) obj. -28.2065 iterations 7
Cbc0038I Pass   8: suminf.    1.02079 (5) obj. -28.2065 iterations 5
Cbc0038I Pass   9: suminf.    0.99195 (5) obj. -28.2065 iterations 2
Cbc0038I Pass  10: suminf.    1.12104 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  11: suminf.    1.11753 (5) obj. -28.2065 iterations 2
Cbc0038I Pass  12: suminf.    1.62518 (5) obj. -28.2065 iterations 5
Cbc0038I Pass  13: suminf.    1.87262 (6) obj. -28.2065 iterations 5
Cbc0038I Pass  14: suminf.    1.45918 (4) obj. -28.2065 iterations 3
Cbc0038I Pass  15: suminf.    0.71542 (7) obj. -28.2065 iterations 9
Cbc0038I Pass  16: suminf.    1.72265 (6) obj. -28.2065 iterations 9
Cbc0038I Pass  17: suminf.    1.27315 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  18: suminf.    1.10528 (5) obj. -28.2065 iterations 5
Cbc0038I Pass  19: suminf.    0.89167 (4) obj. -28.2065 iterations 1
Cbc0038I Pass  20: suminf.    1.31458 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  21: suminf.    1.08129 (3) obj. -28.2065 iterations 15
Cbc0038I Pass  22: suminf.    0.74192 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  23: suminf.    1.06470 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  24: suminf.    1.04739 (3) obj. -28.2065 iterations 1
Cbc0038I Pass  25: suminf.    1.00713 (3) obj. -28.2065 iterations 3
Cbc0038I Pass  26: suminf.    0.61496 (2) obj. -28.2065 iterations 1
Cbc0038I Pass  27: suminf.    1.10532 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  28: suminf.    1.03604 (6) obj. -28.2065 iterations 3
Cbc0038I Pass  29: suminf.    0.87434 (4) obj. -28.2065 iterations 11
Cbc0038I Pass  30: suminf.    1.09984 (4) obj. -28.2065 iterations 3
Cbc0038I Pass  31: suminf.    1.63271 (8) obj. -28.2065 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 33 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.4771 - took 0.06 seconds
Cbc0012I Integer solution of -23.47712 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 16 added rows had average density of 24.0625
Cbc0013I At root node, 16 cuts changed objective from -70.769833 to -51.744807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3213 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 789 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23.47711999999999, took 3926 iterations and 34 nodes (0.35 seconds)
Cbc0032I Strong branching done 398 times (5020 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 10, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.34   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-22) rows, 56 (-10) columns and 517 (-206) elements
Clp1000I sum of infeasibilities 4.46894e-08 - average 9.71508e-10, 26 fixed columns
Coin0506I Presolve 21 (-25) rows, 30 (-26) columns and 96 (-421) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value -24.386082
Clp0000I Optimal - objective value -24.386082
Coin0511I After Postsolve, objective -24.386082, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7210452 - largest nonzero change 1.4576121e-05 ( 0.0012247315%) - largest zero change 2.1377983e-05
Clp0000I Optimal - objective value 78.122939
Clp0000I Optimal - objective value 78.122939
Clp0000I Optimal - objective value 78.122939
Coin0511I After Postsolve, objective 78.122939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.12293852 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 56 columns (56 integer (56 of which binary)) and 521 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.380%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 5.97605
Cbc0038I Pass   1: suminf.    2.20172 (15) obj. -31.947 iterations 7
Cbc0038I Pass   2: suminf.    2.20172 (15) obj. -31.947 iterations 1
Cbc0038I Solution found of 6.22729
Cbc0038I Rounding solution of -7.85957 is better than previous of 6.22729

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -13.6764
Cbc0038I Pass   3: suminf.    2.20172 (15) obj. -31.947 iterations 0
Cbc0038I Pass   4: suminf.    2.20172 (15) obj. -31.947 iterations 1
Cbc0038I Pass   5: suminf.    0.67131 (2) obj. -13.6764 iterations 17
Cbc0038I Pass   6: suminf.    0.67131 (2) obj. -13.6764 iterations 0
Cbc0038I Pass   7: suminf.    0.48650 (2) obj. -13.6764 iterations 1
Cbc0038I Pass   8: suminf.    1.13495 (7) obj. -13.6764 iterations 11
Cbc0038I Pass   9: suminf.    0.87922 (5) obj. -13.6764 iterations 7
Cbc0038I Pass  10: suminf.    0.95161 (3) obj. -13.6764 iterations 9
Cbc0038I Pass  11: suminf.    0.95161 (3) obj. -13.6764 iterations 0
Cbc0038I Pass  12: suminf.    0.96127 (3) obj. -18.3185 iterations 1
Cbc0038I Pass  13: suminf.    0.71252 (3) obj. -13.6764 iterations 2
Cbc0038I Pass  14: suminf.    0.95161 (3) obj. -13.6764 iterations 2
Cbc0038I Pass  15: suminf.    1.57398 (7) obj. -13.6764 iterations 12
Cbc0038I Pass  16: suminf.    1.24517 (5) obj. -13.6764 iterations 6
Cbc0038I Pass  17: suminf.    1.27708 (3) obj. -13.6764 iterations 3
Cbc0038I Pass  18: suminf.    1.27708 (3) obj. -13.6764 iterations 0
Cbc0038I Pass  19: suminf.    1.02055 (3) obj. -16.5044 iterations 1
Cbc0038I Pass  20: suminf.    0.86901 (3) obj. -13.6764 iterations 2
Cbc0038I Pass  21: suminf.    1.20385 (8) obj. -13.6764 iterations 12
Cbc0038I Pass  22: suminf.    1.16580 (7) obj. -13.6764 iterations 1
Cbc0038I Pass  23: suminf.    1.27205 (3) obj. -13.6764 iterations 8
Cbc0038I Pass  24: suminf.    0.95698 (3) obj. -13.6764 iterations 1
Cbc0038I Pass  25: suminf.    1.27205 (3) obj. -13.6764 iterations 2
Cbc0038I Pass  26: suminf.    2.39057 (11) obj. -13.6764 iterations 17
Cbc0038I Pass  27: suminf.    2.09684 (10) obj. -13.6764 iterations 3
Cbc0038I Pass  28: suminf.    0.87731 (5) obj. -13.6764 iterations 15
Cbc0038I Pass  29: suminf.    0.86826 (5) obj. -13.6764 iterations 3
Cbc0038I Pass  30: suminf.    0.49832 (3) obj. -13.6764 iterations 5
Cbc0038I Pass  31: suminf.    0.41286 (3) obj. -13.6764 iterations 1
Cbc0038I Pass  32: suminf.    1.87952 (7) obj. -13.6764 iterations 20
Cbc0038I Rounding solution of -11.0167 is better than previous of -7.85957

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 56 columns, reduced to 21 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -11.0167 to -21.1594 (0.06 seconds)
Cbc0038I Round again with cutoff of -30.133
Cbc0038I Pass  32: suminf.    2.20172 (15) obj. -31.947 iterations 0
Cbc0038I Pass  33: suminf.    2.20172 (15) obj. -31.947 iterations 1
Cbc0038I Pass  34: suminf.    1.13600 (4) obj. -30.133 iterations 18
Cbc0038I Pass  35: suminf.    1.13600 (4) obj. -30.133 iterations 0
Cbc0038I Pass  36: suminf.    1.15527 (4) obj. -30.133 iterations 2
Cbc0038I Pass  37: suminf.    1.15527 (4) obj. -30.133 iterations 0
Cbc0038I Pass  38: suminf.    1.13600 (4) obj. -30.133 iterations 2
Cbc0038I Pass  39: suminf.    1.82244 (6) obj. -30.133 iterations 11
Cbc0038I Pass  40: suminf.    1.22933 (5) obj. -30.133 iterations 2
Cbc0038I Pass  41: suminf.    1.38160 (4) obj. -30.133 iterations 3
Cbc0038I Pass  42: suminf.    1.38160 (4) obj. -30.133 iterations 0
Cbc0038I Pass  43: suminf.    1.38536 (4) obj. -30.133 iterations 1
Cbc0038I Pass  44: suminf.    1.38536 (4) obj. -30.133 iterations 0
Cbc0038I Pass  45: suminf.    1.38160 (4) obj. -30.133 iterations 1
Cbc0038I Pass  46: suminf.    1.78121 (7) obj. -30.133 iterations 13
Cbc0038I Pass  47: suminf.    1.78121 (7) obj. -30.133 iterations 0
Cbc0038I Pass  48: suminf.    1.66280 (5) obj. -30.133 iterations 4
Cbc0038I Pass  49: suminf.    1.66280 (5) obj. -30.133 iterations 1
Cbc0038I Pass  50: suminf.    1.66066 (5) obj. -30.133 iterations 2
Cbc0038I Pass  51: suminf.    1.66066 (5) obj. -30.133 iterations 0
Cbc0038I Pass  52: suminf.    1.66280 (5) obj. -30.133 iterations 1
Cbc0038I Pass  53: suminf.    1.50347 (8) obj. -30.133 iterations 6
Cbc0038I Pass  54: suminf.    1.41084 (7) obj. -30.133 iterations 1
Cbc0038I Pass  55: suminf.    1.58775 (5) obj. -30.133 iterations 5
Cbc0038I Pass  56: suminf.    1.29455 (4) obj. -30.133 iterations 1
Cbc0038I Pass  57: suminf.    1.50393 (4) obj. -30.133 iterations 2
Cbc0038I Pass  58: suminf.    1.23511 (4) obj. -30.133 iterations 1
Cbc0038I Pass  59: suminf.    1.50393 (4) obj. -30.133 iterations 3
Cbc0038I Pass  60: suminf.    1.99864 (9) obj. -30.133 iterations 9
Cbc0038I Pass  61: suminf.    1.99864 (9) obj. -30.133 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 56 columns, reduced to 20 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -21.1594 - took 0.05 seconds
Cbc0012I Integer solution of -21.15943 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 28 added rows had average density of 26.964286
Cbc0013I At root node, 28 cuts changed objective from -66.026987 to -36.512008 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8228 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1206 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1078 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.671 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.15943 best solution, best possible -36.512008 (1.67 seconds)
Cbc0012I Integer solution of -22.4391 found by rounding after 3396 iterations and 1 nodes (1.68 seconds)
Cbc0016I Integer solution of -23.47712 found by strong branching after 4798 iterations and 26 nodes (1.97 seconds)
Cbc0001I Search completed - best objective -23.47711999999999, took 4994 iterations and 40 nodes (1.98 seconds)
Cbc0032I Strong branching done 492 times (5178 iterations), fathomed 6 nodes and fixed 9 variables
Cbc0035I Maximum depth 13, 54 variables fixed on reduced cost
Total time (CPU seconds):       1.50   (Wallclock seconds):       1.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 54 (-15) rows, 33 (-2) columns and 166 (-29) elements
Clp1000I sum of infeasibilities 2.50419e-05 - average 4.63738e-07, 3 fixed columns
Coin0506I Presolve 48 (-6) rows, 30 (-3) columns and 148 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Coin0511I After Postsolve, objective 70.769833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Clp0000I Optimal - objective value 70.769833
Coin0511I After Postsolve, objective 70.769833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.76983316 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 54 rows, 33 columns (32 integer (32 of which binary)) and 166 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.352%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 8.12074
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -11.2203 iterations 28
Cbc0038I Solution found of -11.2203
Cbc0038I Relaxing continuous gives -11.2203
Cbc0038I Rounding solution of -12.4646 is better than previous of -11.2203

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 33 columns, reduced to 47 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -12.4646 to -23.4771 (0.03 seconds)
Cbc0038I Round again with cutoff of -28.2065
Cbc0038I Pass   2: suminf.    1.00150 (5) obj. -28.2065 iterations 6
Cbc0038I Pass   3: suminf.    0.87965 (5) obj. -28.2065 iterations 8
Cbc0038I Pass   4: suminf.    0.86561 (4) obj. -28.2065 iterations 1
Cbc0038I Pass   5: suminf.    1.00466 (5) obj. -28.2065 iterations 8
Cbc0038I Pass   6: suminf.    1.75442 (7) obj. -28.2065 iterations 13
Cbc0038I Pass   7: suminf.    1.14352 (4) obj. -28.2065 iterations 7
Cbc0038I Pass   8: suminf.    1.02079 (5) obj. -28.2065 iterations 5
Cbc0038I Pass   9: suminf.    0.99195 (5) obj. -28.2065 iterations 2
Cbc0038I Pass  10: suminf.    1.12104 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  11: suminf.    1.11753 (5) obj. -28.2065 iterations 2
Cbc0038I Pass  12: suminf.    1.62518 (5) obj. -28.2065 iterations 5
Cbc0038I Pass  13: suminf.    1.87262 (6) obj. -28.2065 iterations 5
Cbc0038I Pass  14: suminf.    1.45918 (4) obj. -28.2065 iterations 3
Cbc0038I Pass  15: suminf.    0.71542 (7) obj. -28.2065 iterations 9
Cbc0038I Pass  16: suminf.    1.72265 (6) obj. -28.2065 iterations 9
Cbc0038I Pass  17: suminf.    1.27315 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  18: suminf.    1.10528 (5) obj. -28.2065 iterations 5
Cbc0038I Pass  19: suminf.    0.89167 (4) obj. -28.2065 iterations 1
Cbc0038I Pass  20: suminf.    1.31458 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  21: suminf.    1.08129 (3) obj. -28.2065 iterations 15
Cbc0038I Pass  22: suminf.    0.74192 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  23: suminf.    1.06470 (4) obj. -28.2065 iterations 6
Cbc0038I Pass  24: suminf.    1.04739 (3) obj. -28.2065 iterations 1
Cbc0038I Pass  25: suminf.    1.00713 (3) obj. -28.2065 iterations 3
Cbc0038I Pass  26: suminf.    0.61496 (2) obj. -28.2065 iterations 1
Cbc0038I Pass  27: suminf.    1.10532 (5) obj. -28.2065 iterations 7
Cbc0038I Pass  28: suminf.    1.03604 (6) obj. -28.2065 iterations 3
Cbc0038I Pass  29: suminf.    0.87434 (4) obj. -28.2065 iterations 11
Cbc0038I Pass  30: suminf.    1.09984 (4) obj. -28.2065 iterations 3
Cbc0038I Pass  31: suminf.    1.63271 (8) obj. -28.2065 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 33 columns, reduced to 50 rows 31 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -23.4771 - took 0.06 seconds
Cbc0012I Integer solution of -23.47712 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 16 added rows had average density of 24.0625
Cbc0013I At root node, 16 cuts changed objective from -70.769833 to -51.744807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3213 row cuts average 4.7 elements, 1 column cuts (1 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 789 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0001I Search completed - best objective -23.47711999999999, took 3926 iterations and 34 nodes (0.38 seconds)
Cbc0032I Strong branching done 398 times (5020 iterations), fathomed 2 nodes and fixed 11 variables
Cbc0035I Maximum depth 10, 65 variables fixed on reduced cost
Total time (CPU seconds):       0.36   (Wallclock seconds):       0.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-23) rows, 56 (-11) columns and 517 (-207) elements
Clp1000I sum of infeasibilities 4.46894e-08 - average 9.71508e-10, 26 fixed columns
Coin0506I Presolve 21 (-25) rows, 30 (-26) columns and 96 (-421) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value -24.386082
Clp0000I Optimal - objective value -24.386082
Coin0511I After Postsolve, objective -24.386082, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7210452 - largest nonzero change 1.4576121e-05 ( 0.0012247315%) - largest zero change 2.1377983e-05
Clp0000I Optimal - objective value 78.122939
Clp0000I Optimal - objective value 78.122939
Clp0000I Optimal - objective value 78.122939
Coin0511I After Postsolve, objective 78.122939, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.12293852 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 56 columns (56 integer (56 of which binary)) and 521 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.380%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 5.97605
Cbc0038I Pass   1: suminf.    2.20172 (15) obj. -31.947 iterations 7
Cbc0038I Pass   2: suminf.    2.20172 (15) obj. -31.947 iterations 1
Cbc0038I Solution found of 6.22729
Cbc0038I Rounding solution of -7.85957 is better than previous of 6.22729

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -13.6764
Cbc0038I Pass   3: suminf.    2.20172 (15) obj. -31.947 iterations 0
Cbc0038I Pass   4: suminf.    2.20172 (15) obj. -31.947 iterations 1
Cbc0038I Pass   5: suminf.    0.67131 (2) obj. -13.6764 iterations 17
Cbc0038I Pass   6: suminf.    0.67131 (2) obj. -13.6764 iterations 0
Cbc0038I Pass   7: suminf.    0.48650 (2) obj. -13.6764 iterations 1
Cbc0038I Pass   8: suminf.    1.13495 (7) obj. -13.6764 iterations 11
Cbc0038I Pass   9: suminf.    0.87922 (5) obj. -13.6764 iterations 7
Cbc0038I Pass  10: suminf.    0.95161 (3) obj. -13.6764 iterations 9
Cbc0038I Pass  11: suminf.    0.95161 (3) obj. -13.6764 iterations 0
Cbc0038I Pass  12: suminf.    0.96127 (3) obj. -18.3185 iterations 1
Cbc0038I Pass  13: suminf.    0.71252 (3) obj. -13.6764 iterations 2
Cbc0038I Pass  14: suminf.    0.95161 (3) obj. -13.6764 iterations 2
Cbc0038I Pass  15: suminf.    1.57398 (7) obj. -13.6764 iterations 12
Cbc0038I Pass  16: suminf.    1.24517 (5) obj. -13.6764 iterations 6
Cbc0038I Pass  17: suminf.    1.27708 (3) obj. -13.6764 iterations 3
Cbc0038I Pass  18: suminf.    1.27708 (3) obj. -13.6764 iterations 0
Cbc0038I Pass  19: suminf.    1.02055 (3) obj. -16.5044 iterations 1
Cbc0038I Pass  20: suminf.    0.86901 (3) obj. -13.6764 iterations 2
Cbc0038I Pass  21: suminf.    1.20385 (8) obj. -13.6764 iterations 12
Cbc0038I Pass  22: suminf.    1.16580 (7) obj. -13.6764 iterations 1
Cbc0038I Pass  23: suminf.    1.27205 (3) obj. -13.6764 iterations 8
Cbc0038I Pass  24: suminf.    0.95698 (3) obj. -13.6764 iterations 1
Cbc0038I Pass  25: suminf.    1.27205 (3) obj. -13.6764 iterations 2
Cbc0038I Pass  26: suminf.    2.39057 (11) obj. -13.6764 iterations 17
Cbc0038I Pass  27: suminf.    2.09684 (10) obj. -13.6764 iterations 3
Cbc0038I Pass  28: suminf.    0.87731 (5) obj. -13.6764 iterations 15
Cbc0038I Pass  29: suminf.    0.86826 (5) obj. -13.6764 iterations 3
Cbc0038I Pass  30: suminf.    0.49832 (3) obj. -13.6764 iterations 5
Cbc0038I Pass  31: suminf.    0.41286 (3) obj. -13.6764 iterations 1
Cbc0038I Pass  32: suminf.    1.87952 (7) obj. -13.6764 iterations 20
Cbc0038I Rounding solution of -11.0167 is better than previous of -7.85957

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 56 columns, reduced to 21 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -11.0167 to -21.1594 (0.08 seconds)
Cbc0038I Round again with cutoff of -30.133
Cbc0038I Pass  32: suminf.    2.20172 (15) obj. -31.947 iterations 0
Cbc0038I Pass  33: suminf.    2.20172 (15) obj. -31.947 iterations 1
Cbc0038I Pass  34: suminf.    1.13600 (4) obj. -30.133 iterations 18
Cbc0038I Pass  35: suminf.    1.13600 (4) obj. -30.133 iterations 0
Cbc0038I Pass  36: suminf.    1.15527 (4) obj. -30.133 iterations 2
Cbc0038I Pass  37: suminf.    1.15527 (4) obj. -30.133 iterations 0
Cbc0038I Pass  38: suminf.    1.13600 (4) obj. -30.133 iterations 2
Cbc0038I Pass  39: suminf.    1.82244 (6) obj. -30.133 iterations 11
Cbc0038I Pass  40: suminf.    1.22933 (5) obj. -30.133 iterations 2
Cbc0038I Pass  41: suminf.    1.38160 (4) obj. -30.133 iterations 3
Cbc0038I Pass  42: suminf.    1.38160 (4) obj. -30.133 iterations 0
Cbc0038I Pass  43: suminf.    1.38536 (4) obj. -30.133 iterations 1
Cbc0038I Pass  44: suminf.    1.38536 (4) obj. -30.133 iterations 0
Cbc0038I Pass  45: suminf.    1.38160 (4) obj. -30.133 iterations 1
Cbc0038I Pass  46: suminf.    1.78121 (7) obj. -30.133 iterations 13
Cbc0038I Pass  47: suminf.    1.78121 (7) obj. -30.133 iterations 0
Cbc0038I Pass  48: suminf.    1.66280 (5) obj. -30.133 iterations 4
Cbc0038I Pass  49: suminf.    1.66280 (5) obj. -30.133 iterations 1
Cbc0038I Pass  50: suminf.    1.66066 (5) obj. -30.133 iterations 2
Cbc0038I Pass  51: suminf.    1.66066 (5) obj. -30.133 iterations 0
Cbc0038I Pass  52: suminf.    1.66280 (5) obj. -30.133 iterations 1
Cbc0038I Pass  53: suminf.    1.50347 (8) obj. -30.133 iterations 6
Cbc0038I Pass  54: suminf.    1.41084 (7) obj. -30.133 iterations 1
Cbc0038I Pass  55: suminf.    1.58775 (5) obj. -30.133 iterations 5
Cbc0038I Pass  56: suminf.    1.29455 (4) obj. -30.133 iterations 1
Cbc0038I Pass  57: suminf.    1.50393 (4) obj. -30.133 iterations 2
Cbc0038I Pass  58: suminf.    1.23511 (4) obj. -30.133 iterations 1
Cbc0038I Pass  59: suminf.    1.50393 (4) obj. -30.133 iterations 3
Cbc0038I Pass  60: suminf.    1.99864 (9) obj. -30.133 iterations 9
Cbc0038I Pass  61: suminf.    1.99864 (9) obj. -30.133 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 56 columns, reduced to 20 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -21.1594 - took 0.07 seconds
Cbc0012I Integer solution of -21.15943 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 28 added rows had average density of 26.964286
Cbc0013I At root node, 28 cuts changed objective from -66.026987 to -36.512008 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8228 row cuts average 4.0 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1206 row cuts average 51.2 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1078 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 380 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.726 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -21.15943 best solution, best possible -36.512008 (1.91 seconds)
Cbc0012I Integer solution of -22.4391 found by rounding after 3396 iterations and 1 nodes (1.92 seconds)
Cbc0016I Integer solution of -23.47712 found by strong branching after 4798 iterations and 26 nodes (2.25 seconds)
Cbc0001I Search completed - best objective -23.47711999999999, took 4994 iterations and 40 nodes (2.26 seconds)
Cbc0032I Strong branching done 492 times (5178 iterations), fathomed 6 nodes and fixed 9 variables
Cbc0035I Maximum depth 13, 54 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       2.27

