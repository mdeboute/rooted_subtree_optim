Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 1.72971e-06 - average 3.32637e-08, 5 fixed columns
Coin0506I Presolve 41 (-11) rows, 23 (-5) columns and 121 (-32) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 98.329264
Clp0000I Optimal - objective value 98.329264
Coin0511I After Postsolve, objective 98.329264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.329264
Clp0000I Optimal - objective value 98.329264
Clp0000I Optimal - objective value 98.329264
Coin0511I After Postsolve, objective 98.329264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.32926402 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.49717
Cbc0038I Pass   1: suminf.    0.16250 (1) obj. -72.1488 iterations 18
Cbc0038I Solution found of -25.275
Cbc0038I Relaxing continuous gives -26.4875
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -26.4875 to -52.0687 (0.01 seconds)
Cbc0038I Round again with cutoff of -55.3307
Cbc0038I Pass   2: suminf.    0.16250 (1) obj. -72.1488 iterations 0
Cbc0038I Pass   3: suminf.    0.48465 (1) obj. -55.3307 iterations 2
Cbc0038I Pass   4: suminf.    1.71622 (5) obj. -55.3307 iterations 6
Cbc0038I Pass   5: suminf.    1.24857 (4) obj. -55.3307 iterations 6
Cbc0038I Pass   6: suminf.    0.83198 (3) obj. -55.3307 iterations 11
Cbc0038I Pass   7: suminf.    1.47558 (5) obj. -55.3307 iterations 15
Cbc0038I Pass   8: suminf.    1.47558 (5) obj. -55.3307 iterations 1
Cbc0038I Pass   9: suminf.    0.58125 (2) obj. -55.3307 iterations 8
Cbc0038I Pass  10: suminf.    0.16250 (1) obj. -55.3307 iterations 1
Cbc0038I Pass  11: suminf.    0.48465 (1) obj. -55.3307 iterations 1
Cbc0038I Pass  12: suminf.    0.42407 (3) obj. -55.3307 iterations 4
Cbc0038I Pass  13: suminf.    0.42407 (3) obj. -55.3307 iterations 1
Cbc0038I Pass  14: suminf.    1.25000 (4) obj. -57.8799 iterations 12
Cbc0038I Pass  15: suminf.    0.13868 (1) obj. -55.3307 iterations 6
Cbc0038I Pass  16: suminf.    0.18750 (1) obj. -58.0629 iterations 1
Cbc0038I Pass  17: suminf.    0.50160 (2) obj. -55.3307 iterations 5
Cbc0038I Pass  18: suminf.    0.50160 (2) obj. -55.3307 iterations 1
Cbc0038I Pass  19: suminf.    0.27537 (1) obj. -55.3307 iterations 5
Cbc0038I Pass  20: suminf.    0.28750 (1) obj. -56.0097 iterations 1
Cbc0038I Pass  21: suminf.    0.89066 (4) obj. -55.3307 iterations 6
Cbc0038I Pass  22: suminf.    0.35466 (3) obj. -55.3307 iterations 7
Cbc0038I Pass  23: suminf.    0.82471 (5) obj. -55.3307 iterations 6
Cbc0038I Pass  24: suminf.    0.81932 (4) obj. -55.3307 iterations 3
Cbc0038I Pass  25: suminf.    0.89644 (2) obj. -55.3307 iterations 6
Cbc0038I Pass  26: suminf.    0.84333 (4) obj. -55.3307 iterations 1
Cbc0038I Pass  27: suminf.    0.21250 (1) obj. -66.4879 iterations 4
Cbc0038I Pass  28: suminf.    0.21250 (1) obj. -66.4879 iterations 0
Cbc0038I Pass  29: suminf.    0.54913 (2) obj. -55.3307 iterations 2
Cbc0038I Pass  30: suminf.    1.03722 (4) obj. -55.3307 iterations 8
Cbc0038I Pass  31: suminf.    0.87846 (4) obj. -55.3307 iterations 3
Cbc0038I Rounding solution of -53.9937 is better than previous of -52.0687

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 42 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -53.9937 to -56.2063 (0.03 seconds)
Cbc0038I Round again with cutoff of -61.9027
Cbc0038I Pass  31: suminf.    0.16250 (1) obj. -72.1488 iterations 0
Cbc0038I Pass  32: suminf.    0.36723 (1) obj. -61.9027 iterations 2
Cbc0038I Pass  33: suminf.    2.11273 (7) obj. -61.9027 iterations 7
Cbc0038I Pass  34: suminf.    0.68060 (2) obj. -61.9027 iterations 7
Cbc0038I Pass  35: suminf.    0.17500 (1) obj. -61.9027 iterations 1
Cbc0038I Pass  36: suminf.    0.17500 (1) obj. -61.9027 iterations 0
Cbc0038I Pass  37: suminf.    0.45553 (2) obj. -61.9027 iterations 9
Cbc0038I Pass  38: suminf.    0.32355 (1) obj. -61.9027 iterations 8
Cbc0038I Pass  39: suminf.    0.35556 (1) obj. -63.6937 iterations 2
Cbc0038I Pass  40: suminf.    2.58198 (7) obj. -61.9027 iterations 14
Cbc0038I Pass  41: suminf.    0.74037 (3) obj. -61.9027 iterations 5
Cbc0038I Pass  42: suminf.    0.58636 (2) obj. -61.9027 iterations 4
Cbc0038I Pass  43: suminf.    0.58636 (2) obj. -61.9027 iterations 0
Cbc0038I Pass  44: suminf.    0.68060 (2) obj. -61.9027 iterations 3
Cbc0038I Pass  45: suminf.    0.17500 (1) obj. -61.9027 iterations 1
Cbc0038I Pass  46: suminf.    0.17500 (1) obj. -61.9027 iterations 0
Cbc0038I Pass  47: suminf.    1.91097 (7) obj. -61.9027 iterations 10
Cbc0038I Pass  48: suminf.    0.89977 (4) obj. -61.9027 iterations 6
Cbc0038I Pass  49: suminf.    0.73346 (3) obj. -61.9027 iterations 7
Cbc0038I Pass  50: suminf.    0.83209 (2) obj. -61.9027 iterations 7
Cbc0038I Pass  51: suminf.    0.68060 (2) obj. -61.9027 iterations 2
Cbc0038I Pass  52: suminf.    0.17500 (1) obj. -61.9027 iterations 1
Cbc0038I Pass  53: suminf.    0.17500 (1) obj. -61.9027 iterations 0
Cbc0038I Pass  54: suminf.    0.68025 (5) obj. -61.9027 iterations 7
Cbc0038I Pass  55: suminf.    0.47623 (2) obj. -61.9027 iterations 6
Cbc0038I Pass  56: suminf.    1.37417 (5) obj. -61.9027 iterations 7
Cbc0038I Pass  57: suminf.    1.37417 (5) obj. -61.9027 iterations 0
Cbc0038I Pass  58: suminf.    1.20663 (4) obj. -61.9027 iterations 5
Cbc0038I Pass  59: suminf.    0.33745 (3) obj. -61.9027 iterations 3
Cbc0038I Pass  60: suminf.    0.17500 (1) obj. -68.6617 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -56.2063 - took 0.07 seconds
Cbc0012I Integer solution of -56.20625 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 50 rows 28 columns, reduced to 26 rows 16 columns
Cbc0031I 7 added rows had average density of 19.571429
Cbc0013I At root node, 7 cuts changed objective from -84.687922 to -68.95073 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 974 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 332 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -56.20625000000001, took 2055 iterations and 12 nodes (0.21 seconds)
Cbc0032I Strong branching done 160 times (1331 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-15) rows, 51 (-11) columns and 471 (-177) elements
Clp1000I sum of infeasibilities 1.16936e-07 - average 2.38646e-09, 8 fixed columns
Coin0506I Presolve 42 (-7) rows, 43 (-8) columns and 354 (-117) elements
Clp0029I End of values pass after 43 iterations
Clp0000I Optimal - objective value 105.19454
Clp0000I Optimal - objective value 105.19454
Coin0511I After Postsolve, objective 105.19454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 105.19454
Clp0000I Optimal - objective value 105.19454
Clp0000I Optimal - objective value 105.19454
Coin0511I After Postsolve, objective 105.19454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.1945416 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.613%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 3.80868
Cbc0038I Pass   1: suminf.    1.22782 (10) obj. -49.3846 iterations 17
Cbc0038I Solution found of -36.1437
Cbc0038I Rounding solution of -40.9499 is better than previous of -36.1437

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -40.9499 to -50.9125 (0.01 seconds)
Cbc0038I Round again with cutoff of -53.9937
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.41144 (12) obj. -53.9937 iterations 4
Cbc0038I Pass   3: suminf.    0.35772 (1) obj. -57.9268 iterations 14
Cbc0038I Pass   4: suminf.    0.29313 (1) obj. -53.9937 iterations 1
Cbc0038I Pass   5: suminf.    1.13839 (13) obj. -53.9937 iterations 10
Cbc0038I Pass   6: suminf.    0.97326 (7) obj. -53.9937 iterations 4
Cbc0038I Pass   7: suminf.    0.46818 (2) obj. -53.9937 iterations 7
Cbc0038I Pass   8: suminf.    0.32598 (1) obj. -53.9937 iterations 1
Cbc0038I Pass   9: suminf.    0.35772 (1) obj. -55.9268 iterations 1
Cbc0038I Pass  10: suminf.    1.61841 (5) obj. -54.7222 iterations 11
Cbc0038I Pass  11: suminf.    0.67403 (4) obj. -53.9937 iterations 4
Cbc0038I Pass  12: suminf.    0.86220 (3) obj. -53.9937 iterations 2
Cbc0038I Pass  13: suminf.    0.55121 (3) obj. -53.9937 iterations 1
Cbc0038I Pass  14: suminf.    1.53125 (6) obj. -53.9937 iterations 4
Cbc0038I Pass  15: suminf.    0.74420 (4) obj. -53.9937 iterations 2
Cbc0038I Pass  16: suminf.    0.76324 (3) obj. -53.9937 iterations 2
Cbc0038I Pass  17: suminf.    0.58495 (2) obj. -53.9937 iterations 2
Cbc0038I Pass  18: suminf.    0.67723 (2) obj. -55.2796 iterations 1
Cbc0038I Pass  19: suminf.    1.84783 (10) obj. -53.9937 iterations 13
Cbc0038I Pass  20: suminf.    1.05903 (6) obj. -53.9937 iterations 9
Cbc0038I Pass  21: suminf.    0.90909 (4) obj. -53.9937 iterations 5
Cbc0038I Pass  22: suminf.    0.88944 (5) obj. -53.9937 iterations 2
Cbc0038I Pass  23: suminf.    0.63944 (4) obj. -53.9937 iterations 3
Cbc0038I Pass  24: suminf.    0.57413 (2) obj. -53.9937 iterations 2
Cbc0038I Pass  25: suminf.    0.59002 (2) obj. -54.2151 iterations 1
Cbc0038I Pass  26: suminf.    3.48094 (12) obj. -53.9937 iterations 20
Cbc0038I Pass  27: suminf.    1.71462 (9) obj. -53.9937 iterations 9
Cbc0038I Pass  28: suminf.    1.68546 (10) obj. -53.9937 iterations 2
Cbc0038I Pass  29: suminf.    0.21968 (3) obj. -53.9937 iterations 9
Cbc0038I Pass  30: suminf.    0.21968 (3) obj. -53.9937 iterations 0
Cbc0038I Pass  31: suminf.    0.75514 (6) obj. -53.9937 iterations 5
Cbc0038I Rounding solution of -54.4625 is better than previous of -50.9125

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 32 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -59.9149
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.64733 (12) obj. -59.9149 iterations 0
Cbc0038I Pass  32: suminf.    0.68874 (2) obj. -59.9149 iterations 18
Cbc0038I Pass  33: suminf.    0.51990 (4) obj. -59.9149 iterations 2
Cbc0038I Pass  34: suminf.    0.46260 (3) obj. -59.9149 iterations 5
Cbc0038I Pass  35: suminf.    0.37306 (2) obj. -59.9149 iterations 4
Cbc0038I Pass  36: suminf.    0.50351 (2) obj. -59.9149 iterations 2
Cbc0038I Pass  37: suminf.    0.46704 (1) obj. -59.9149 iterations 1
Cbc0038I Pass  38: suminf.    0.47500 (1) obj. -60.3602 iterations 1
Cbc0038I Pass  39: suminf.    2.08723 (9) obj. -59.9149 iterations 14
Cbc0038I Pass  40: suminf.    0.82800 (4) obj. -59.9149 iterations 6
Cbc0038I Pass  41: suminf.    0.32222 (1) obj. -62.2469 iterations 4
Cbc0038I Pass  42: suminf.    0.28056 (1) obj. -59.9149 iterations 1
Cbc0038I Pass  43: suminf.    0.39055 (2) obj. -59.9149 iterations 5
Cbc0038I Pass  44: suminf.    0.12500 (1) obj. -61.9914 iterations 2
Cbc0038I Pass  45: suminf.    0.16210 (1) obj. -59.9149 iterations 1
Cbc0038I Pass  46: suminf.    0.46537 (7) obj. -59.9149 iterations 13
Cbc0038I Pass  47: suminf.    0.36397 (4) obj. -60.5392 iterations 4
Cbc0038I Pass  48: suminf.    0.44701 (3) obj. -59.9149 iterations 8
Cbc0038I Pass  49: suminf.    0.16250 (1) obj. -60.8176 iterations 2
Cbc0038I Pass  50: suminf.    0.17863 (1) obj. -59.9149 iterations 1
Cbc0038I Pass  51: suminf.    1.94530 (6) obj. -59.9149 iterations 5
Cbc0038I Pass  52: suminf.    1.49747 (5) obj. -59.9149 iterations 1
Cbc0038I Pass  53: suminf.    1.32637 (5) obj. -59.9149 iterations 2
Cbc0038I Pass  54: suminf.    0.74670 (4) obj. -64.7261 iterations 2
Cbc0038I Pass  55: suminf.    1.17648 (7) obj. -59.9149 iterations 7
Cbc0038I Pass  56: suminf.    0.77636 (7) obj. -59.9149 iterations 1
Cbc0038I Pass  57: suminf.    0.50163 (3) obj. -59.9149 iterations 10
Cbc0038I Pass  58: suminf.    0.37941 (2) obj. -59.9149 iterations 2
Cbc0038I Pass  59: suminf.    0.21777 (2) obj. -59.9149 iterations 3
Cbc0038I Pass  60: suminf.    0.21777 (2) obj. -59.9149 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 27 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -54.4625 - took 0.03 seconds
Cbc0012I Integer solution of -54.4625 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 7 rows 7 columns
Cbc0031I 17 added rows had average density of 14.352941
Cbc0013I At root node, 17 cuts changed objective from -81.723963 to -62.989973 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 951 row cuts average 2.4 elements, 10 column cuts (10 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 378 row cuts average 33.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 103 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 65 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.731 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -54.4625 best solution, best possible -62.989973 (1.52 seconds)
Cbc0010I After 7 nodes, 8 on tree, -54.4625 best solution, best possible -62.989973 (2.25 seconds)
Cbc0012I Integer solution of -56.20625 found by rounding after 1832 iterations and 8 nodes (2.27 seconds)
Cbc0001I Search completed - best objective -56.20625000000001, took 2079 iterations and 16 nodes (2.50 seconds)
Cbc0032I Strong branching done 224 times (1815 iterations), fathomed 3 nodes and fixed 3 variables
Cbc0035I Maximum depth 7, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       2.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 1.72971e-06 - average 3.32637e-08, 5 fixed columns
Coin0506I Presolve 41 (-11) rows, 23 (-5) columns and 121 (-32) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 98.329264
Clp0000I Optimal - objective value 98.329264
Coin0511I After Postsolve, objective 98.329264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 98.329264
Clp0000I Optimal - objective value 98.329264
Clp0000I Optimal - objective value 98.329264
Coin0511I After Postsolve, objective 98.329264, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 98.32926402 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.49717
Cbc0038I Pass   1: suminf.    0.16250 (1) obj. -72.1488 iterations 18
Cbc0038I Solution found of -25.275
Cbc0038I Relaxing continuous gives -26.4875
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -26.4875 to -52.0687 (0.01 seconds)
Cbc0038I Round again with cutoff of -55.3307
Cbc0038I Pass   2: suminf.    0.16250 (1) obj. -72.1488 iterations 0
Cbc0038I Pass   3: suminf.    0.48465 (1) obj. -55.3307 iterations 2
Cbc0038I Pass   4: suminf.    1.71622 (5) obj. -55.3307 iterations 6
Cbc0038I Pass   5: suminf.    1.24857 (4) obj. -55.3307 iterations 6
Cbc0038I Pass   6: suminf.    0.83198 (3) obj. -55.3307 iterations 11
Cbc0038I Pass   7: suminf.    1.47558 (5) obj. -55.3307 iterations 15
Cbc0038I Pass   8: suminf.    1.47558 (5) obj. -55.3307 iterations 1
Cbc0038I Pass   9: suminf.    0.58125 (2) obj. -55.3307 iterations 8
Cbc0038I Pass  10: suminf.    0.16250 (1) obj. -55.3307 iterations 1
Cbc0038I Pass  11: suminf.    0.48465 (1) obj. -55.3307 iterations 1
Cbc0038I Pass  12: suminf.    0.42407 (3) obj. -55.3307 iterations 4
Cbc0038I Pass  13: suminf.    0.42407 (3) obj. -55.3307 iterations 1
Cbc0038I Pass  14: suminf.    1.25000 (4) obj. -57.8799 iterations 12
Cbc0038I Pass  15: suminf.    0.13868 (1) obj. -55.3307 iterations 6
Cbc0038I Pass  16: suminf.    0.18750 (1) obj. -58.0629 iterations 1
Cbc0038I Pass  17: suminf.    0.50160 (2) obj. -55.3307 iterations 5
Cbc0038I Pass  18: suminf.    0.50160 (2) obj. -55.3307 iterations 1
Cbc0038I Pass  19: suminf.    0.27537 (1) obj. -55.3307 iterations 5
Cbc0038I Pass  20: suminf.    0.28750 (1) obj. -56.0097 iterations 1
Cbc0038I Pass  21: suminf.    0.89066 (4) obj. -55.3307 iterations 6
Cbc0038I Pass  22: suminf.    0.35466 (3) obj. -55.3307 iterations 7
Cbc0038I Pass  23: suminf.    0.82471 (5) obj. -55.3307 iterations 6
Cbc0038I Pass  24: suminf.    0.81932 (4) obj. -55.3307 iterations 3
Cbc0038I Pass  25: suminf.    0.89644 (2) obj. -55.3307 iterations 6
Cbc0038I Pass  26: suminf.    0.84333 (4) obj. -55.3307 iterations 1
Cbc0038I Pass  27: suminf.    0.21250 (1) obj. -66.4879 iterations 4
Cbc0038I Pass  28: suminf.    0.21250 (1) obj. -66.4879 iterations 0
Cbc0038I Pass  29: suminf.    0.54913 (2) obj. -55.3307 iterations 2
Cbc0038I Pass  30: suminf.    1.03722 (4) obj. -55.3307 iterations 8
Cbc0038I Pass  31: suminf.    0.87846 (4) obj. -55.3307 iterations 3
Cbc0038I Rounding solution of -53.9937 is better than previous of -52.0687

Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 42 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -53.9937 to -56.2063 (0.04 seconds)
Cbc0038I Round again with cutoff of -61.9027
Cbc0038I Pass  31: suminf.    0.16250 (1) obj. -72.1488 iterations 0
Cbc0038I Pass  32: suminf.    0.36723 (1) obj. -61.9027 iterations 2
Cbc0038I Pass  33: suminf.    2.11273 (7) obj. -61.9027 iterations 7
Cbc0038I Pass  34: suminf.    0.68060 (2) obj. -61.9027 iterations 7
Cbc0038I Pass  35: suminf.    0.17500 (1) obj. -61.9027 iterations 1
Cbc0038I Pass  36: suminf.    0.17500 (1) obj. -61.9027 iterations 0
Cbc0038I Pass  37: suminf.    0.45553 (2) obj. -61.9027 iterations 9
Cbc0038I Pass  38: suminf.    0.32355 (1) obj. -61.9027 iterations 8
Cbc0038I Pass  39: suminf.    0.35556 (1) obj. -63.6937 iterations 2
Cbc0038I Pass  40: suminf.    2.58198 (7) obj. -61.9027 iterations 14
Cbc0038I Pass  41: suminf.    0.74037 (3) obj. -61.9027 iterations 5
Cbc0038I Pass  42: suminf.    0.58636 (2) obj. -61.9027 iterations 4
Cbc0038I Pass  43: suminf.    0.58636 (2) obj. -61.9027 iterations 0
Cbc0038I Pass  44: suminf.    0.68060 (2) obj. -61.9027 iterations 3
Cbc0038I Pass  45: suminf.    0.17500 (1) obj. -61.9027 iterations 1
Cbc0038I Pass  46: suminf.    0.17500 (1) obj. -61.9027 iterations 0
Cbc0038I Pass  47: suminf.    1.91097 (7) obj. -61.9027 iterations 10
Cbc0038I Pass  48: suminf.    0.89977 (4) obj. -61.9027 iterations 6
Cbc0038I Pass  49: suminf.    0.73346 (3) obj. -61.9027 iterations 7
Cbc0038I Pass  50: suminf.    0.83209 (2) obj. -61.9027 iterations 7
Cbc0038I Pass  51: suminf.    0.68060 (2) obj. -61.9027 iterations 2
Cbc0038I Pass  52: suminf.    0.17500 (1) obj. -61.9027 iterations 1
Cbc0038I Pass  53: suminf.    0.17500 (1) obj. -61.9027 iterations 0
Cbc0038I Pass  54: suminf.    0.68025 (5) obj. -61.9027 iterations 7
Cbc0038I Pass  55: suminf.    0.47623 (2) obj. -61.9027 iterations 6
Cbc0038I Pass  56: suminf.    1.37417 (5) obj. -61.9027 iterations 7
Cbc0038I Pass  57: suminf.    1.37417 (5) obj. -61.9027 iterations 0
Cbc0038I Pass  58: suminf.    1.20663 (4) obj. -61.9027 iterations 5
Cbc0038I Pass  59: suminf.    0.33745 (3) obj. -61.9027 iterations 3
Cbc0038I Pass  60: suminf.    0.17500 (1) obj. -68.6617 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -56.2063 - took 0.04 seconds
Cbc0012I Integer solution of -56.20625 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 50 rows 28 columns, reduced to 26 rows 16 columns
Cbc0031I 7 added rows had average density of 19.571429
Cbc0013I At root node, 7 cuts changed objective from -84.687922 to -68.95073 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 974 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 332 row cuts average 25.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 79 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -56.20625000000001, took 2055 iterations and 12 nodes (0.25 seconds)
Cbc0032I Strong branching done 160 times (1331 iterations), fathomed 1 nodes and fixed 4 variables
Cbc0035I Maximum depth 5, 16 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 48 (-15) columns and 408 (-241) elements
Clp1000I sum of infeasibilities 1.55789e-08 - average 3.38671e-10, 27 fixed columns
Coin0506I Presolve 19 (-27) rows, 21 (-27) columns and 75 (-333) elements
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 1.6800728 - largest nonzero change 2.3245811e-05 ( 0.0016580886%) - largest zero change 2.9074698e-05
Clp0000I Optimal - objective value 74.795446
Clp0000I Optimal - objective value 74.795446
Coin0511I After Postsolve, objective 74.795446, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3674302 - largest nonzero change 2.398299e-05 ( 0.002398299%) - largest zero change 2.6114179e-05
Clp0000I Optimal - objective value 105.19454
Clp0000I Optimal - objective value 105.19454
Clp0000I Optimal - objective value 105.19454
Coin0511I After Postsolve, objective 105.19454, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.1945416 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.613%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 4.25478
Cbc0038I Pass   1: suminf.    0.34461 (7) obj. -31.9966 iterations 14
Cbc0038I Pass   2: suminf.    0.34461 (7) obj. -31.9966 iterations 1
Cbc0038I Solution found of -23.4437
Cbc0038I Rounding solution of -28.2499 is better than previous of -23.4437

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 3 rows 5 columns
Cbc0038I Mini branch and bound improved solution from -28.2499 to -50.9125 (0.01 seconds)
Cbc0038I Round again with cutoff of -53.9159
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.67467 (11) obj. -53.9159 iterations 3
Cbc0038I Pass   4: suminf.    0.47500 (1) obj. -62.7289 iterations 13
Cbc0038I Pass   5: suminf.    0.31754 (1) obj. -53.9159 iterations 1
Cbc0038I Pass   6: suminf.    1.29805 (7) obj. -53.9159 iterations 10
Cbc0038I Pass   7: suminf.    0.55064 (3) obj. -53.9159 iterations 3
Cbc0038I Pass   8: suminf.    0.40000 (1) obj. -56.95 iterations 3
Cbc0038I Pass   9: suminf.    0.32867 (2) obj. -53.9159 iterations 3
Cbc0038I Pass  10: suminf.    0.40000 (1) obj. -56.95 iterations 2
Cbc0038I Pass  11: suminf.    2.08197 (8) obj. -53.9159 iterations 10
Cbc0038I Pass  12: suminf.    0.85985 (4) obj. -53.9159 iterations 8
Cbc0038I Pass  13: suminf.    0.70447 (3) obj. -53.9159 iterations 5
Cbc0038I Pass  14: suminf.    0.59495 (5) obj. -53.9159 iterations 4
Cbc0038I Pass  15: suminf.    0.60099 (2) obj. -53.9159 iterations 7
Cbc0038I Pass  16: suminf.    0.60099 (2) obj. -53.9159 iterations 1
Cbc0038I Pass  17: suminf.    0.60989 (2) obj. -53.9159 iterations 3
Cbc0038I Pass  18: suminf.    0.38743 (2) obj. -53.9159 iterations 2
Cbc0038I Pass  19: suminf.    0.32411 (2) obj. -53.9159 iterations 2
Cbc0038I Pass  20: suminf.    0.31059 (3) obj. -53.9159 iterations 1
Cbc0038I Pass  21: suminf.    0.78166 (3) obj. -53.9159 iterations 7
Cbc0038I Pass  22: suminf.    1.86666 (6) obj. -53.9159 iterations 10
Cbc0038I Pass  23: suminf.    1.46857 (5) obj. -53.9159 iterations 2
Cbc0038I Pass  24: suminf.    0.53165 (2) obj. -53.9159 iterations 7
Cbc0038I Pass  25: suminf.    0.52196 (2) obj. -53.9159 iterations 1
Cbc0038I Pass  26: suminf.    0.52926 (2) obj. -53.9159 iterations 1
Cbc0038I Pass  27: suminf.    1.99577 (9) obj. -53.9159 iterations 15
Cbc0038I Pass  28: suminf.    1.99577 (9) obj. -53.9159 iterations 0
Cbc0038I Pass  29: suminf.    0.38158 (3) obj. -53.9159 iterations 10
Cbc0038I Pass  30: suminf.    0.38158 (3) obj. -53.9159 iterations 1
Cbc0038I Pass  31: suminf.    0.56382 (2) obj. -53.9159 iterations 4
Cbc0038I Pass  32: suminf.    0.11765 (1) obj. -53.9159 iterations 3
Cbc0038I Rounding solution of -53.9937 is better than previous of -50.9125

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -53.9937 to -54.4625 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.7593
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.93811 (11) obj. -59.7593 iterations 0
Cbc0038I Pass  33: suminf.    0.47500 (1) obj. -62.7289 iterations 11
Cbc0038I Pass  34: suminf.    0.42194 (1) obj. -59.7593 iterations 1
Cbc0038I Pass  35: suminf.    2.95556 (15) obj. -59.7593 iterations 18
Cbc0038I Pass  36: suminf.    1.41831 (5) obj. -59.7593 iterations 9
Cbc0038I Pass  37: suminf.    1.25534 (6) obj. -59.7593 iterations 2
Cbc0038I Pass  38: suminf.    1.34757 (4) obj. -59.7593 iterations 8
Cbc0038I Pass  39: suminf.    1.34757 (4) obj. -59.7593 iterations 2
Cbc0038I Pass  40: suminf.    1.10693 (3) obj. -59.7593 iterations 2
Cbc0038I Pass  41: suminf.    0.48964 (2) obj. -59.7593 iterations 3
Cbc0038I Pass  42: suminf.    0.50905 (2) obj. -59.7593 iterations 1
Cbc0038I Pass  43: suminf.    1.34365 (4) obj. -59.7593 iterations 6
Cbc0038I Pass  44: suminf.    0.89482 (4) obj. -59.7593 iterations 2
Cbc0038I Pass  45: suminf.    0.99254 (3) obj. -59.7593 iterations 3
Cbc0038I Pass  46: suminf.    0.45369 (2) obj. -59.7593 iterations 3
Cbc0038I Pass  47: suminf.    0.50929 (2) obj. -59.7593 iterations 1
Cbc0038I Pass  48: suminf.    0.49231 (3) obj. -59.7593 iterations 1
Cbc0038I Pass  49: suminf.    0.50103 (3) obj. -59.7593 iterations 6
Cbc0038I Pass  50: suminf.    0.30619 (4) obj. -59.7593 iterations 4
Cbc0038I Pass  51: suminf.    0.87814 (3) obj. -59.7593 iterations 4
Cbc0038I Pass  52: suminf.    0.41774 (2) obj. -59.7593 iterations 3
Cbc0038I Pass  53: suminf.    0.40884 (2) obj. -59.7593 iterations 1
Cbc0038I Pass  54: suminf.    0.39373 (3) obj. -59.7593 iterations 1
Cbc0038I Pass  55: suminf.    1.02435 (3) obj. -59.7593 iterations 8
Cbc0038I Pass  56: suminf.    0.19658 (3) obj. -59.7593 iterations 4
Cbc0038I Pass  57: suminf.    0.65927 (4) obj. -59.7593 iterations 6
Cbc0038I Pass  58: suminf.    0.34585 (2) obj. -59.7593 iterations 2
Cbc0038I Pass  59: suminf.    0.20793 (2) obj. -59.7593 iterations 1
Cbc0038I Pass  60: suminf.    1.55463 (5) obj. -59.7593 iterations 7
Cbc0038I Pass  61: suminf.    0.96984 (5) obj. -59.7593 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 27 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -54.4625 to -55.1437 (0.05 seconds)
Cbc0038I Round again with cutoff of -66.1153
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.22467 (11) obj. -66.1153 iterations 0
Cbc0038I Pass  62: suminf.    0.74180 (2) obj. -66.1153 iterations 12
Cbc0038I Pass  63: suminf.    0.81013 (2) obj. -66.1153 iterations 3
Cbc0038I Pass  64: suminf.    2.06130 (7) obj. -66.1153 iterations 8
Cbc0038I Pass  65: suminf.    1.86750 (7) obj. -66.1153 iterations 3
Cbc0038I Pass  66: suminf.    1.24873 (6) obj. -66.1153 iterations 2
Cbc0038I Pass  67: suminf.    0.52741 (3) obj. -66.1153 iterations 4
Cbc0038I Pass  68: suminf.    0.52741 (3) obj. -66.1153 iterations 0
Cbc0038I Pass  69: suminf.    1.03326 (3) obj. -66.1153 iterations 5
Cbc0038I Pass  70: suminf.    0.46649 (2) obj. -66.1153 iterations 3
Cbc0038I Pass  71: suminf.    0.54506 (2) obj. -66.1153 iterations 1
Cbc0038I Pass  72: suminf.    1.21337 (8) obj. -66.1153 iterations 9
Cbc0038I Pass  73: suminf.    1.20020 (5) obj. -66.1153 iterations 3
Cbc0038I Pass  74: suminf.    0.57490 (6) obj. -66.1153 iterations 5
Cbc0038I Pass  75: suminf.    0.57490 (6) obj. -66.1153 iterations 0
Cbc0038I Pass  76: suminf.    1.10292 (3) obj. -66.1153 iterations 6
Cbc0038I Pass  77: suminf.    0.80767 (3) obj. -66.1153 iterations 2
Cbc0038I Pass  78: suminf.    1.16438 (4) obj. -66.1153 iterations 3
Cbc0038I Pass  79: suminf.    0.87503 (3) obj. -66.1153 iterations 4
Cbc0038I Pass  80: suminf.    1.02497 (3) obj. -66.1153 iterations 2
Cbc0038I Pass  81: suminf.    1.80361 (9) obj. -66.1153 iterations 8
Cbc0038I Pass  82: suminf.    1.35502 (7) obj. -66.1153 iterations 3
Cbc0038I Pass  83: suminf.    1.20249 (4) obj. -66.1153 iterations 8
Cbc0038I Pass  84: suminf.    2.06975 (9) obj. -66.1153 iterations 10
Cbc0038I Pass  85: suminf.    1.97388 (8) obj. -66.1153 iterations 3
Cbc0038I Pass  86: suminf.    0.79679 (4) obj. -66.1153 iterations 6
Cbc0038I Pass  87: suminf.    0.52741 (3) obj. -66.1153 iterations 1
Cbc0038I Pass  88: suminf.    1.07416 (4) obj. -66.1153 iterations 5
Cbc0038I Pass  89: suminf.    0.46649 (2) obj. -66.1153 iterations 4
Cbc0038I Pass  90: suminf.    0.54506 (2) obj. -66.1153 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -55.1437 - took 0.04 seconds
Cbc0012I Integer solution of -55.14365 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 4 rows 4 columns
Cbc0031I 20 added rows had average density of 15.7
Cbc0013I At root node, 20 cuts changed objective from -80.946065 to -62.428918 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 952 row cuts average 2.4 elements, 10 column cuts (10 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 413 row cuts average 34.7 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 25 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 113 row cuts average 8.6 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 167 row cuts average 24.1 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 65 row cuts average 11.7 elements, 0 column cuts (0 active)  in 0.736 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -55.14365 best solution, best possible -62.428918 (1.53 seconds)
Cbc0010I After 6 nodes, 7 on tree, -55.14365 best solution, best possible -62.428918 (2.25 seconds)
Cbc0012I Integer solution of -56.20625 found by rounding after 1778 iterations and 8 nodes (2.41 seconds)
Cbc0001I Search completed - best objective -56.20625000000001, took 2025 iterations and 22 nodes (2.57 seconds)
Cbc0032I Strong branching done 294 times (2477 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 9, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       2.58

