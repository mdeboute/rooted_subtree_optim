Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 75 (-3) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.07933e-05 - average 8.23917e-08, 13 fixed columns
Coin0506I Presolve 107 (-24) rows, 62 (-13) columns and 330 (-74) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Coin0511I After Postsolve, objective 47.886519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Coin0511I After Postsolve, objective 47.886519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.88651938 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 75 columns (74 integer (74 of which binary)) and 405 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.01685
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.16554 iterations 52
Cbc0038I Solution found of -0.16554
Cbc0038I Relaxing continuous gives -0.16554
Cbc0038I Rounding solution of -13.7698 is better than previous of -0.16554

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -13.7698 to -22.78 (0.04 seconds)
Cbc0038I Round again with cutoff of -25.2908
Cbc0038I Pass   2: suminf.    2.08543 (7) obj. -25.2908 iterations 13
Cbc0038I Pass   3: suminf.    2.08543 (7) obj. -25.2908 iterations 0
Cbc0038I Pass   4: suminf.    1.39662 (4) obj. -25.2908 iterations 10
Cbc0038I Pass   5: suminf.    0.92678 (2) obj. -25.2908 iterations 5
Cbc0038I Pass   6: suminf.    0.43560 (1) obj. -25.2908 iterations 7
Cbc0038I Pass   7: suminf.    0.43243 (1) obj. -25.2908 iterations 2
Cbc0038I Pass   8: suminf.    1.82875 (6) obj. -25.2908 iterations 11
Cbc0038I Pass   9: suminf.    1.04404 (4) obj. -25.2908 iterations 9
Cbc0038I Pass  10: suminf.    1.15598 (3) obj. -25.2908 iterations 11
Cbc0038I Pass  11: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  12: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  13: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  14: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  15: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  16: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  17: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  18: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  19: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  20: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  21: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  22: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  23: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  24: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  25: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  26: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  27: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  28: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  29: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  30: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  31: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 82 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -22.78 to -24.5499 (0.06 seconds)
Cbc0038I Round again with cutoff of -29.8099
Cbc0038I Pass  31: suminf.    2.60487 (11) obj. -29.8099 iterations 1
Cbc0038I Pass  32: suminf.    2.60487 (11) obj. -29.8099 iterations 0
Cbc0038I Pass  33: suminf.    1.64266 (6) obj. -29.8099 iterations 15
Cbc0038I Pass  34: suminf.    0.90552 (3) obj. -29.8099 iterations 7
Cbc0038I Pass  35: suminf.    0.72100 (3) obj. -29.8099 iterations 3
Cbc0038I Pass  36: suminf.    0.95946 (3) obj. -29.8099 iterations 6
Cbc0038I Pass  37: suminf.    0.95946 (3) obj. -29.8099 iterations 0
Cbc0038I Pass  38: suminf.    1.29487 (3) obj. -29.8099 iterations 4
Cbc0038I Pass  39: suminf.    3.27526 (11) obj. -29.8099 iterations 18
Cbc0038I Pass  40: suminf.    2.30141 (10) obj. -29.8099 iterations 11
Cbc0038I Pass  41: suminf.    2.30141 (10) obj. -29.8099 iterations 1
Cbc0038I Pass  42: suminf.    2.40222 (8) obj. -29.8099 iterations 13
Cbc0038I Pass  43: suminf.    1.64004 (7) obj. -29.8099 iterations 12
Cbc0038I Pass  44: suminf.    2.42949 (6) obj. -29.8099 iterations 8
Cbc0038I Pass  45: suminf.    2.20141 (7) obj. -29.8099 iterations 7
Cbc0038I Pass  46: suminf.    1.98135 (6) obj. -29.8099 iterations 8
Cbc0038I Pass  47: suminf.    1.60851 (6) obj. -29.8099 iterations 10
Cbc0038I Pass  48: suminf.    2.83558 (10) obj. -29.8099 iterations 28
Cbc0038I Pass  49: suminf.    2.27508 (12) obj. -29.8099 iterations 12
Cbc0038I Pass  50: suminf.    3.01584 (11) obj. -29.8099 iterations 18
Cbc0038I Pass  51: suminf.    1.45761 (5) obj. -29.8099 iterations 12
Cbc0038I Pass  52: suminf.    1.45761 (5) obj. -29.8099 iterations 1
Cbc0038I Pass  53: suminf.    2.23718 (8) obj. -29.8099 iterations 7
Cbc0038I Pass  54: suminf.    2.82906 (10) obj. -29.8099 iterations 11
Cbc0038I Pass  55: suminf.    2.15147 (11) obj. -29.8099 iterations 11
Cbc0038I Pass  56: suminf.    2.46585 (8) obj. -29.8099 iterations 13
Cbc0038I Pass  57: suminf.    1.45761 (5) obj. -29.8099 iterations 8
Cbc0038I Pass  58: suminf.    1.45761 (5) obj. -29.8099 iterations 1
Cbc0038I Pass  59: suminf.    2.23718 (8) obj. -29.8099 iterations 6
Cbc0038I Pass  60: suminf.    2.02232 (8) obj. -29.8099 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -24.5499 - took 0.08 seconds
Cbc0012I Integer solution of -24.54988 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 71 rows 42 columns
Cbc0031I 28 added rows had average density of 44.392857
Cbc0013I At root node, 28 cuts changed objective from -47.886519 to -39.274825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10604 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1403 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 49.6 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.54988 best solution, best possible -39.274825 (0.81 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 22 rows 17 columns
Cbc0001I Search completed - best objective -24.54987999999999, took 8722 iterations and 50 nodes (1.07 seconds)
Cbc0032I Strong branching done 688 times (13823 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 20, 69 variables fixed on reduced cost
Total time (CPU seconds):       1.05   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 114 (-38) columns and 1957 (-1346) elements
Clp1000I sum of infeasibilities 1.18249e-07 - average 1.21906e-09, 24 fixed columns
Coin0506I Presolve 77 (-20) rows, 89 (-25) columns and 1277 (-680) elements
Clp0006I 0  Obj 51.37158 Dual inf 5.8158744 (88)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.8331338 - largest nonzero change 0 ( 0%) - largest zero change 2.9243002e-05
Clp0000I Optimal - objective value 59.45225
Clp0000I Optimal - objective value 59.45225
Coin0511I After Postsolve, objective 59.45225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.45225
Clp0000I Optimal - objective value 59.45225
Clp0000I Optimal - objective value 59.45225
Clp0000I Optimal - objective value 59.45225
Coin0511I After Postsolve, objective 59.45225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.45225044 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 117 columns (117 integer (117 of which binary)) and 1975 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.710%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 3.69918
Cbc0038I Pass   1: suminf.    0.68527 (21) obj. -36.9405 iterations 26
Cbc0038I Solution found of -0.37161
Cbc0038I Rounding solution of -7.8507 is better than previous of -0.37161

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 117 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -7.8507 to -15.7679 (0.03 seconds)
Cbc0038I Round again with cutoff of -19.0074
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.68527 (21) obj. -36.9405 iterations 0
Cbc0038I Pass   3: suminf.    0.59682 (12) obj. -19.0074 iterations 11
Cbc0038I Pass   4: suminf.    0.85323 (6) obj. -19.0074 iterations 17
Cbc0038I Pass   5: suminf.    0.47607 (3) obj. -19.0074 iterations 16
Cbc0038I Pass   6: suminf.    0.58368 (3) obj. -19.0074 iterations 3
Cbc0038I Pass   7: suminf.    0.36044 (3) obj. -21.3384 iterations 2
Cbc0038I Pass   8: suminf.    0.85323 (6) obj. -19.0074 iterations 5
Cbc0038I Pass   9: suminf.    0.89639 (8) obj. -19.0074 iterations 42
Cbc0038I Pass  10: suminf.    0.76723 (8) obj. -20.7437 iterations 3
Cbc0038I Pass  11: suminf.    0.69357 (8) obj. -19.0074 iterations 18
Cbc0038I Pass  12: suminf.    0.69274 (8) obj. -19.0099 iterations 5
Cbc0038I Pass  13: suminf.    1.14324 (7) obj. -19.0074 iterations 15
Cbc0038I Pass  14: suminf.    0.67313 (7) obj. -19.0074 iterations 6
Cbc0038I Pass  15: suminf.    0.46196 (8) obj. -19.0074 iterations 5
Cbc0038I Pass  16: suminf.    0.70749 (6) obj. -19.0074 iterations 8
Cbc0038I Pass  17: suminf.    3.21398 (17) obj. -19.0074 iterations 29
Cbc0038I Pass  18: suminf.    2.56480 (16) obj. -19.0074 iterations 5
Cbc0038I Pass  19: suminf.    1.88305 (14) obj. -19.0074 iterations 22
Cbc0038I Pass  20: suminf.    1.87754 (15) obj. -19.0074 iterations 1
Cbc0038I Pass  21: suminf.    1.51390 (13) obj. -19.0074 iterations 13
Cbc0038I Pass  22: suminf.    1.43302 (14) obj. -19.0074 iterations 7
Cbc0038I Pass  23: suminf.    1.49583 (12) obj. -19.0074 iterations 9
Cbc0038I Pass  24: suminf.    2.13659 (15) obj. -19.0074 iterations 19
Cbc0038I Pass  25: suminf.    1.71300 (15) obj. -19.0074 iterations 4
Cbc0038I Pass  26: suminf.    0.83642 (9) obj. -19.0074 iterations 14
Cbc0038I Pass  27: suminf.    0.79333 (9) obj. -19.0936 iterations 4
Cbc0038I Pass  28: suminf.    1.55341 (14) obj. -19.0074 iterations 9
Cbc0038I Pass  29: suminf.    1.54941 (15) obj. -19.0074 iterations 1
Cbc0038I Pass  30: suminf.    1.54941 (15) obj. -19.0074 iterations 4
Cbc0038I Pass  31: suminf.    0.96654 (10) obj. -19.0074 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 117 columns, reduced to 47 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -15.7679 to -24.5499 (0.09 seconds)
Cbc0038I Round again with cutoff of -29.2723
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.68527 (21) obj. -36.9405 iterations 0
Cbc0038I Pass  32: suminf.    0.98551 (6) obj. -29.2723 iterations 32
Cbc0038I Pass  33: suminf.    0.62919 (7) obj. -29.2723 iterations 6
Cbc0038I Pass  34: suminf.    0.98551 (6) obj. -29.2723 iterations 10
Cbc0038I Pass  35: suminf.    0.68922 (10) obj. -29.2723 iterations 14
Cbc0038I Pass  36: suminf.    0.68922 (10) obj. -29.2723 iterations 1
Cbc0038I Pass  37: suminf.    0.92982 (8) obj. -29.2723 iterations 11
Cbc0038I Pass  38: suminf.    0.92982 (8) obj. -29.2723 iterations 3
Cbc0038I Pass  39: suminf.    0.93472 (8) obj. -29.2723 iterations 12
Cbc0038I Pass  40: suminf.    0.93472 (8) obj. -29.2723 iterations 3
Cbc0038I Pass  41: suminf.    0.92982 (8) obj. -29.2723 iterations 7
Cbc0038I Pass  42: suminf.    1.11437 (18) obj. -29.2723 iterations 9
Cbc0038I Pass  43: suminf.    0.99739 (18) obj. -29.2723 iterations 7
Cbc0038I Pass  44: suminf.    1.36904 (16) obj. -29.2723 iterations 25
Cbc0038I Pass  45: suminf.    1.13293 (18) obj. -29.2723 iterations 7
Cbc0038I Pass  46: suminf.    1.36904 (16) obj. -29.2723 iterations 11
Cbc0038I Pass  47: suminf.    1.71066 (19) obj. -29.2723 iterations 24
Cbc0038I Pass  48: suminf.    1.13558 (19) obj. -29.2723 iterations 7
Cbc0038I Pass  49: suminf.    1.66287 (17) obj. -29.2723 iterations 25
Cbc0038I Pass  50: suminf.    1.13293 (18) obj. -29.2723 iterations 6
Cbc0038I Pass  51: suminf.    1.36904 (16) obj. -29.2723 iterations 12
Cbc0038I Pass  52: suminf.    1.32518 (17) obj. -29.2723 iterations 15
Cbc0038I Pass  53: suminf.    1.14008 (19) obj. -29.2723 iterations 10
Cbc0038I Pass  54: suminf.    2.28107 (24) obj. -29.2723 iterations 27
Cbc0038I Pass  55: suminf.    2.28107 (24) obj. -29.2723 iterations 1
Cbc0038I Pass  56: suminf.    2.42953 (23) obj. -29.2723 iterations 35
Cbc0038I Pass  57: suminf.    1.66287 (17) obj. -29.2723 iterations 4
Cbc0038I Pass  58: suminf.    1.13293 (18) obj. -29.2723 iterations 6
Cbc0038I Pass  59: suminf.    1.36904 (16) obj. -29.2723 iterations 12
Cbc0038I Pass  60: suminf.    2.72271 (22) obj. -29.2723 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 117 columns, reduced to 55 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -24.5499 - took 0.09 seconds
Cbc0012I Integer solution of -24.54988 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 100 rows 117 columns, reduced to 24 rows 27 columns
Cbc0031I 69 added rows had average density of 14.101449
Cbc0013I At root node, 69 cuts changed objective from -48.1617 to -26.970674 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 4001 row cuts average 11.0 elements, 5 column cuts (12 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 87.9 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 68 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 183 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 309 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.54988 best solution, best possible -26.970674 (0.71 seconds)
Cbc0001I Search completed - best objective -24.54987999999999, took 1080 iterations and 2 nodes (0.78 seconds)
Cbc0032I Strong branching done 152 times (3784 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.80

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 75 (-3) columns and 404 (-49) elements
Clp1000I sum of infeasibilities 1.07933e-05 - average 8.23917e-08, 13 fixed columns
Coin0506I Presolve 107 (-24) rows, 62 (-13) columns and 330 (-74) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Coin0511I After Postsolve, objective 47.886519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Clp0000I Optimal - objective value 47.886519
Coin0511I After Postsolve, objective 47.886519, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.88651938 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 75 columns (74 integer (74 of which binary)) and 405 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 7.01685
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.16554 iterations 52
Cbc0038I Solution found of -0.16554
Cbc0038I Relaxing continuous gives -0.16554
Cbc0038I Rounding solution of -13.7698 is better than previous of -0.16554

Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 70 rows 41 columns
Cbc0038I Mini branch and bound improved solution from -13.7698 to -22.78 (0.03 seconds)
Cbc0038I Round again with cutoff of -25.2908
Cbc0038I Pass   2: suminf.    2.08543 (7) obj. -25.2908 iterations 13
Cbc0038I Pass   3: suminf.    2.08543 (7) obj. -25.2908 iterations 0
Cbc0038I Pass   4: suminf.    1.39662 (4) obj. -25.2908 iterations 10
Cbc0038I Pass   5: suminf.    0.92678 (2) obj. -25.2908 iterations 5
Cbc0038I Pass   6: suminf.    0.43560 (1) obj. -25.2908 iterations 7
Cbc0038I Pass   7: suminf.    0.43243 (1) obj. -25.2908 iterations 2
Cbc0038I Pass   8: suminf.    1.82875 (6) obj. -25.2908 iterations 11
Cbc0038I Pass   9: suminf.    1.04404 (4) obj. -25.2908 iterations 9
Cbc0038I Pass  10: suminf.    1.15598 (3) obj. -25.2908 iterations 11
Cbc0038I Pass  11: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  12: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  13: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  14: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  15: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  16: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  17: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  18: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  19: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  20: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  21: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  22: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  23: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  24: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  25: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  26: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  27: suminf.    1.17244 (3) obj. -25.2908 iterations 4
Cbc0038I Pass  28: suminf.    1.17244 (3) obj. -25.2908 iterations 0
Cbc0038I Pass  29: suminf.    0.98436 (3) obj. -25.2908 iterations 5
Cbc0038I Pass  30: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I Pass  31: suminf.    0.94940 (3) obj. -25.2908 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 82 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -22.78 to -24.5499 (0.06 seconds)
Cbc0038I Round again with cutoff of -29.8099
Cbc0038I Pass  31: suminf.    2.60487 (11) obj. -29.8099 iterations 1
Cbc0038I Pass  32: suminf.    2.60487 (11) obj. -29.8099 iterations 0
Cbc0038I Pass  33: suminf.    1.64266 (6) obj. -29.8099 iterations 15
Cbc0038I Pass  34: suminf.    0.90552 (3) obj. -29.8099 iterations 7
Cbc0038I Pass  35: suminf.    0.72100 (3) obj. -29.8099 iterations 3
Cbc0038I Pass  36: suminf.    0.95946 (3) obj. -29.8099 iterations 6
Cbc0038I Pass  37: suminf.    0.95946 (3) obj. -29.8099 iterations 0
Cbc0038I Pass  38: suminf.    1.29487 (3) obj. -29.8099 iterations 4
Cbc0038I Pass  39: suminf.    3.27526 (11) obj. -29.8099 iterations 18
Cbc0038I Pass  40: suminf.    2.30141 (10) obj. -29.8099 iterations 11
Cbc0038I Pass  41: suminf.    2.30141 (10) obj. -29.8099 iterations 1
Cbc0038I Pass  42: suminf.    2.40222 (8) obj. -29.8099 iterations 13
Cbc0038I Pass  43: suminf.    1.64004 (7) obj. -29.8099 iterations 12
Cbc0038I Pass  44: suminf.    2.42949 (6) obj. -29.8099 iterations 8
Cbc0038I Pass  45: suminf.    2.20141 (7) obj. -29.8099 iterations 7
Cbc0038I Pass  46: suminf.    1.98135 (6) obj. -29.8099 iterations 8
Cbc0038I Pass  47: suminf.    1.60851 (6) obj. -29.8099 iterations 10
Cbc0038I Pass  48: suminf.    2.83558 (10) obj. -29.8099 iterations 28
Cbc0038I Pass  49: suminf.    2.27508 (12) obj. -29.8099 iterations 12
Cbc0038I Pass  50: suminf.    3.01584 (11) obj. -29.8099 iterations 18
Cbc0038I Pass  51: suminf.    1.45761 (5) obj. -29.8099 iterations 12
Cbc0038I Pass  52: suminf.    1.45761 (5) obj. -29.8099 iterations 1
Cbc0038I Pass  53: suminf.    2.23718 (8) obj. -29.8099 iterations 7
Cbc0038I Pass  54: suminf.    2.82906 (10) obj. -29.8099 iterations 11
Cbc0038I Pass  55: suminf.    2.15147 (11) obj. -29.8099 iterations 11
Cbc0038I Pass  56: suminf.    2.46585 (8) obj. -29.8099 iterations 13
Cbc0038I Pass  57: suminf.    1.45761 (5) obj. -29.8099 iterations 8
Cbc0038I Pass  58: suminf.    1.45761 (5) obj. -29.8099 iterations 1
Cbc0038I Pass  59: suminf.    2.23718 (8) obj. -29.8099 iterations 6
Cbc0038I Pass  60: suminf.    2.02232 (8) obj. -29.8099 iterations 24
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 75 columns, reduced to 83 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -24.5499 - took 0.08 seconds
Cbc0012I Integer solution of -24.54988 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 71 rows 42 columns
Cbc0031I 28 added rows had average density of 44.392857
Cbc0013I At root node, 28 cuts changed objective from -47.886519 to -39.274825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10604 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1403 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 14 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 194 row cuts average 49.6 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.54988 best solution, best possible -39.274825 (0.79 seconds)
Cbc0038I Full problem 131 rows 75 columns, reduced to 22 rows 17 columns
Cbc0001I Search completed - best objective -24.54987999999999, took 8722 iterations and 50 nodes (1.06 seconds)
Cbc0032I Strong branching done 688 times (13823 iterations), fathomed 3 nodes and fixed 10 variables
Cbc0035I Maximum depth 20, 69 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 114 (-39) columns and 1957 (-1347) elements
Clp1000I sum of infeasibilities 1.18249e-07 - average 1.21906e-09, 24 fixed columns
Coin0506I Presolve 77 (-20) rows, 89 (-25) columns and 1277 (-680) elements
Clp0006I 0  Obj 51.37158 Dual inf 5.8158744 (88)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.8331338 - largest nonzero change 0 ( 0%) - largest zero change 2.9243002e-05
Clp0000I Optimal - objective value 59.45225
Clp0000I Optimal - objective value 59.45225
Coin0511I After Postsolve, objective 59.45225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 59.45225
Clp0000I Optimal - objective value 59.45225
Clp0000I Optimal - objective value 59.45225
Clp0000I Optimal - objective value 59.45225
Coin0511I After Postsolve, objective 59.45225, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 59.45225044 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 100 rows, 117 columns (117 integer (117 of which binary)) and 1975 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.710%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 3.69918
Cbc0038I Pass   1: suminf.    0.68527 (21) obj. -36.9405 iterations 26
Cbc0038I Solution found of -0.37161
Cbc0038I Rounding solution of -7.8507 is better than previous of -0.37161

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 117 columns, reduced to 25 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -7.8507 to -15.7679 (0.03 seconds)
Cbc0038I Round again with cutoff of -19.0074
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.68527 (21) obj. -36.9405 iterations 0
Cbc0038I Pass   3: suminf.    0.59682 (12) obj. -19.0074 iterations 11
Cbc0038I Pass   4: suminf.    0.85323 (6) obj. -19.0074 iterations 17
Cbc0038I Pass   5: suminf.    0.47607 (3) obj. -19.0074 iterations 16
Cbc0038I Pass   6: suminf.    0.58368 (3) obj. -19.0074 iterations 3
Cbc0038I Pass   7: suminf.    0.36044 (3) obj. -21.3384 iterations 2
Cbc0038I Pass   8: suminf.    0.85323 (6) obj. -19.0074 iterations 5
Cbc0038I Pass   9: suminf.    0.89639 (8) obj. -19.0074 iterations 42
Cbc0038I Pass  10: suminf.    0.76723 (8) obj. -20.7437 iterations 3
Cbc0038I Pass  11: suminf.    0.69357 (8) obj. -19.0074 iterations 18
Cbc0038I Pass  12: suminf.    0.69274 (8) obj. -19.0099 iterations 5
Cbc0038I Pass  13: suminf.    1.14324 (7) obj. -19.0074 iterations 15
Cbc0038I Pass  14: suminf.    0.67313 (7) obj. -19.0074 iterations 6
Cbc0038I Pass  15: suminf.    0.46196 (8) obj. -19.0074 iterations 5
Cbc0038I Pass  16: suminf.    0.70749 (6) obj. -19.0074 iterations 8
Cbc0038I Pass  17: suminf.    3.21398 (17) obj. -19.0074 iterations 29
Cbc0038I Pass  18: suminf.    2.56480 (16) obj. -19.0074 iterations 5
Cbc0038I Pass  19: suminf.    1.88305 (14) obj. -19.0074 iterations 22
Cbc0038I Pass  20: suminf.    1.87754 (15) obj. -19.0074 iterations 1
Cbc0038I Pass  21: suminf.    1.51390 (13) obj. -19.0074 iterations 13
Cbc0038I Pass  22: suminf.    1.43302 (14) obj. -19.0074 iterations 7
Cbc0038I Pass  23: suminf.    1.49583 (12) obj. -19.0074 iterations 9
Cbc0038I Pass  24: suminf.    2.13659 (15) obj. -19.0074 iterations 19
Cbc0038I Pass  25: suminf.    1.71300 (15) obj. -19.0074 iterations 4
Cbc0038I Pass  26: suminf.    0.83642 (9) obj. -19.0074 iterations 14
Cbc0038I Pass  27: suminf.    0.79333 (9) obj. -19.0936 iterations 4
Cbc0038I Pass  28: suminf.    1.55341 (14) obj. -19.0074 iterations 9
Cbc0038I Pass  29: suminf.    1.54941 (15) obj. -19.0074 iterations 1
Cbc0038I Pass  30: suminf.    1.54941 (15) obj. -19.0074 iterations 4
Cbc0038I Pass  31: suminf.    0.96654 (10) obj. -19.0074 iterations 29
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 117 columns, reduced to 47 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -15.7679 to -24.5499 (0.08 seconds)
Cbc0038I Round again with cutoff of -29.2723
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.68527 (21) obj. -36.9405 iterations 0
Cbc0038I Pass  32: suminf.    0.98551 (6) obj. -29.2723 iterations 32
Cbc0038I Pass  33: suminf.    0.62919 (7) obj. -29.2723 iterations 6
Cbc0038I Pass  34: suminf.    0.98551 (6) obj. -29.2723 iterations 10
Cbc0038I Pass  35: suminf.    0.68922 (10) obj. -29.2723 iterations 14
Cbc0038I Pass  36: suminf.    0.68922 (10) obj. -29.2723 iterations 1
Cbc0038I Pass  37: suminf.    0.92982 (8) obj. -29.2723 iterations 11
Cbc0038I Pass  38: suminf.    0.92982 (8) obj. -29.2723 iterations 3
Cbc0038I Pass  39: suminf.    0.93472 (8) obj. -29.2723 iterations 12
Cbc0038I Pass  40: suminf.    0.93472 (8) obj. -29.2723 iterations 3
Cbc0038I Pass  41: suminf.    0.92982 (8) obj. -29.2723 iterations 7
Cbc0038I Pass  42: suminf.    1.11437 (18) obj. -29.2723 iterations 9
Cbc0038I Pass  43: suminf.    0.99739 (18) obj. -29.2723 iterations 7
Cbc0038I Pass  44: suminf.    1.36904 (16) obj. -29.2723 iterations 25
Cbc0038I Pass  45: suminf.    1.13293 (18) obj. -29.2723 iterations 7
Cbc0038I Pass  46: suminf.    1.36904 (16) obj. -29.2723 iterations 11
Cbc0038I Pass  47: suminf.    1.71066 (19) obj. -29.2723 iterations 24
Cbc0038I Pass  48: suminf.    1.13558 (19) obj. -29.2723 iterations 7
Cbc0038I Pass  49: suminf.    1.66287 (17) obj. -29.2723 iterations 25
Cbc0038I Pass  50: suminf.    1.13293 (18) obj. -29.2723 iterations 6
Cbc0038I Pass  51: suminf.    1.36904 (16) obj. -29.2723 iterations 12
Cbc0038I Pass  52: suminf.    1.32518 (17) obj. -29.2723 iterations 15
Cbc0038I Pass  53: suminf.    1.14008 (19) obj. -29.2723 iterations 10
Cbc0038I Pass  54: suminf.    2.28107 (24) obj. -29.2723 iterations 27
Cbc0038I Pass  55: suminf.    2.28107 (24) obj. -29.2723 iterations 1
Cbc0038I Pass  56: suminf.    2.42953 (23) obj. -29.2723 iterations 35
Cbc0038I Pass  57: suminf.    1.66287 (17) obj. -29.2723 iterations 4
Cbc0038I Pass  58: suminf.    1.13293 (18) obj. -29.2723 iterations 6
Cbc0038I Pass  59: suminf.    1.36904 (16) obj. -29.2723 iterations 12
Cbc0038I Pass  60: suminf.    2.72271 (22) obj. -29.2723 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 100 rows 117 columns, reduced to 55 rows 66 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -24.5499 - took 0.09 seconds
Cbc0012I Integer solution of -24.54988 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 100 rows 117 columns, reduced to 24 rows 27 columns
Cbc0031I 69 added rows had average density of 14.101449
Cbc0013I At root node, 69 cuts changed objective from -48.1617 to -26.970674 in 27 passes
Cbc0014I Cut generator 0 (Probing) - 4001 row cuts average 11.0 elements, 5 column cuts (12 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 310 row cuts average 87.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 68 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 183 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 309 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 103 row cuts average 24.0 elements, 0 column cuts (0 active)  in 0.141 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.54988 best solution, best possible -26.970674 (0.70 seconds)
Cbc0001I Search completed - best objective -24.54987999999999, took 1080 iterations and 2 nodes (0.77 seconds)
Cbc0032I Strong branching done 152 times (3784 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 22 variables fixed on reduced cost
Total time (CPU seconds):       0.62   (Wallclock seconds):       0.78

