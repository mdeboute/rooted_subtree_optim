Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 27 (-6) columns and 138 (-45) elements
Clp1000I sum of infeasibilities 1.54929e-05 - average 3.36803e-07, 3 fixed columns
Coin0506I Presolve 39 (-7) rows, 24 (-3) columns and 118 (-20) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 69.634983
Clp0000I Optimal - objective value 69.634983
Coin0511I After Postsolve, objective 69.634983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.634983
Clp0000I Optimal - objective value 69.634983
Clp0000I Optimal - objective value 69.634983
Coin0511I After Postsolve, objective 69.634983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.63498317 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 27 columns (26 integer (26 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.724%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.08653
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.2321 iterations 13
Cbc0038I Solution found of -20.2321
Cbc0038I Relaxing continuous gives -20.2321
Cbc0038I Rounding solution of -22.7786 is better than previous of -20.2321

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 27 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -22.7786 to -43.3886 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.8791
Cbc0038I Pass   2: suminf.    1.08313 (3) obj. -45.8791 iterations 2
Cbc0038I Pass   3: suminf.    0.62040 (2) obj. -45.8791 iterations 1
Cbc0038I Pass   4: suminf.    0.46999 (1) obj. -45.8791 iterations 1
Cbc0038I Pass   5: suminf.    0.39000 (1) obj. -45.8791 iterations 1
Cbc0038I Pass   6: suminf.    0.17237 (3) obj. -45.8791 iterations 9
Cbc0038I Pass   7: suminf.    0.17237 (3) obj. -45.8791 iterations 1
Cbc0038I Pass   8: suminf.    1.30871 (3) obj. -45.8791 iterations 6
Cbc0038I Pass   9: suminf.    1.11603 (3) obj. -45.8791 iterations 1
Cbc0038I Pass  10: suminf.    0.52289 (3) obj. -45.8791 iterations 5
Cbc0038I Pass  11: suminf.    0.78711 (2) obj. -45.8791 iterations 4
Cbc0038I Pass  12: suminf.    0.37503 (2) obj. -45.8791 iterations 3
Cbc0038I Pass  13: suminf.    0.42105 (1) obj. -45.8791 iterations 2
Cbc0038I Pass  14: suminf.    0.42105 (1) obj. -45.8791 iterations 0
Cbc0038I Pass  15: suminf.    1.33909 (5) obj. -45.8791 iterations 7
Cbc0038I Pass  16: suminf.    0.59033 (3) obj. -45.8791 iterations 6
Cbc0038I Pass  17: suminf.    0.52289 (3) obj. -45.8791 iterations 2
Cbc0038I Pass  18: suminf.    0.78711 (2) obj. -45.8791 iterations 4
Cbc0038I Pass  19: suminf.    0.37503 (2) obj. -45.8791 iterations 3
Cbc0038I Pass  20: suminf.    0.42105 (1) obj. -45.8791 iterations 2
Cbc0038I Pass  21: suminf.    0.42105 (1) obj. -45.8791 iterations 0
Cbc0038I Pass  22: suminf.    0.36290 (2) obj. -45.8791 iterations 5
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. -45.8791 iterations 1
Cbc0038I Pass  24: suminf.    0.61396 (2) obj. -45.8791 iterations 3
Cbc0038I Pass  25: suminf.    0.54455 (2) obj. -45.8791 iterations 8
Cbc0038I Pass  26: suminf.    0.39170 (2) obj. -45.8791 iterations 4
Cbc0038I Pass  27: suminf.    0.54455 (2) obj. -45.8791 iterations 2
Cbc0038I Pass  28: suminf.    0.59558 (2) obj. -45.8791 iterations 5
Cbc0038I Pass  29: suminf.    0.45815 (3) obj. -45.8791 iterations 4
Cbc0038I Pass  30: suminf.    0.17821 (3) obj. -45.8791 iterations 2
Cbc0038I Pass  31: suminf.    0.50000 (1) obj. -45.8791 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 27 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -43.3886 - took 0.05 seconds
Cbc0012I Integer solution of -43.38856 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 44 rows 27 columns, reduced to 20 rows 13 columns
Cbc0031I 11 added rows had average density of 23.818182
Cbc0013I At root node, 11 cuts changed objective from -68.293262 to -56.919672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 677 row cuts average 3.9 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 597 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0012I Integer solution of -43.53276 found by DiveCoefficient after 1776 iterations and 6 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -43.53276, took 2380 iterations and 22 nodes (0.21 seconds)
Cbc0032I Strong branching done 230 times (1870 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 8, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.25   (Wallclock seconds):       0.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 43 (-21) rows, 49 (-13) columns and 429 (-219) elements
Clp1000I sum of infeasibilities 1.6316e-08 - average 3.79442e-10, 19 fixed columns
Coin0506I Presolve 28 (-15) rows, 29 (-20) columns and 184 (-245) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 96.195989
Clp0000I Optimal - objective value 96.195989
Coin0511I After Postsolve, objective 96.195989, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.195989
Clp0000I Optimal - objective value 96.195989
Clp0000I Optimal - objective value 96.195989
Coin0511I After Postsolve, objective 96.195989, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.19598927 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 390 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.210%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 0.958084
Cbc0038I Pass   1: suminf.    0.68818 (5) obj. -69.9713 iterations 9
Cbc0038I Solution found of -33.1804
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -36.969
Cbc0038I Pass   2: suminf.    0.68818 (5) obj. -69.9713 iterations 0
Cbc0038I Pass   3: suminf.    0.08693 (1) obj. -36.969 iterations 9
Cbc0038I Pass   4: suminf.    0.36585 (1) obj. -60.8199 iterations 1
Cbc0038I Pass   5: suminf.    0.93486 (13) obj. -53.6699 iterations 11
Cbc0038I Pass   6: suminf.    0.85904 (9) obj. -53.4155 iterations 6
Cbc0038I Pass   7: suminf.    0.09780 (2) obj. -36.969 iterations 13
Cbc0038I Pass   8: suminf.    0.41170 (2) obj. -44.4015 iterations 2
Cbc0038I Pass   9: suminf.    1.85296 (6) obj. -36.969 iterations 10
Cbc0038I Pass  10: suminf.    1.59904 (5) obj. -37.8987 iterations 1
Cbc0038I Pass  11: suminf.    0.75500 (2) obj. -36.969 iterations 7
Cbc0038I Pass  12: suminf.    0.75500 (2) obj. -36.969 iterations 0
Cbc0038I Pass  13: suminf.    0.87579 (2) obj. -36.969 iterations 2
Cbc0038I Pass  14: suminf.    1.26023 (3) obj. -36.969 iterations 4
Cbc0038I Pass  15: suminf.    1.13180 (3) obj. -36.969 iterations 1
Cbc0038I Pass  16: suminf.    0.89224 (2) obj. -36.969 iterations 2
Cbc0038I Pass  17: suminf.    0.84318 (2) obj. -36.969 iterations 1
Cbc0038I Pass  18: suminf.    2.33822 (8) obj. -36.969 iterations 7
Cbc0038I Pass  19: suminf.    0.71993 (3) obj. -36.969 iterations 4
Cbc0038I Pass  20: suminf.    0.24390 (1) obj. -45.832 iterations 3
Cbc0038I Pass  21: suminf.    0.44725 (1) obj. -36.969 iterations 1
Cbc0038I Pass  22: suminf.    0.44316 (4) obj. -36.969 iterations 14
Cbc0038I Pass  23: suminf.    0.27087 (3) obj. -40.176 iterations 5
Cbc0038I Pass  24: suminf.    0.12707 (3) obj. -36.969 iterations 3
Cbc0038I Pass  25: suminf.    0.12707 (3) obj. -36.969 iterations 0
Cbc0038I Pass  26: suminf.    0.32759 (2) obj. -36.969 iterations 2
Cbc0038I Pass  27: suminf.    0.16528 (2) obj. -36.969 iterations 1
Cbc0038I Pass  28: suminf.    1.22071 (7) obj. -38.3506 iterations 18
Cbc0038I Pass  29: suminf.    0.91144 (4) obj. -36.969 iterations 6
Cbc0038I Pass  30: suminf.    0.92211 (4) obj. -36.969 iterations 4
Cbc0038I Pass  31: suminf.    0.92211 (4) obj. -36.969 iterations 0
Cbc0038I Rounding solution of -43.3886 is better than previous of -33.1804

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -48.9242
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.68818 (5) obj. -69.9713 iterations 0
Cbc0038I Pass  32: suminf.    0.36122 (1) obj. -48.9242 iterations 9
Cbc0038I Pass  33: suminf.    0.36585 (1) obj. -60.8199 iterations 1
Cbc0038I Pass  34: suminf.    1.28706 (7) obj. -54.3791 iterations 10
Cbc0038I Pass  35: suminf.    1.03141 (7) obj. -48.9242 iterations 1
Cbc0038I Pass  36: suminf.    0.83593 (2) obj. -48.9242 iterations 8
Cbc0038I Pass  37: suminf.    0.83593 (2) obj. -48.9242 iterations 0
Cbc0038I Pass  38: suminf.    0.92188 (2) obj. -51.0052 iterations 1
Cbc0038I Pass  39: suminf.    1.30900 (6) obj. -48.9242 iterations 9
Cbc0038I Pass  40: suminf.    1.30900 (6) obj. -48.9242 iterations 0
Cbc0038I Pass  41: suminf.    0.79463 (2) obj. -48.9242 iterations 6
Cbc0038I Pass  42: suminf.    0.79463 (2) obj. -48.9242 iterations 0
Cbc0038I Pass  43: suminf.    0.92188 (2) obj. -52.0052 iterations 1
Cbc0038I Pass  44: suminf.    4.25669 (12) obj. -48.9242 iterations 11
Cbc0038I Pass  45: suminf.    1.16732 (4) obj. -48.9242 iterations 9
Cbc0038I Pass  46: suminf.    0.62776 (2) obj. -51.1084 iterations 4
Cbc0038I Pass  47: suminf.    0.71797 (2) obj. -48.9242 iterations 3
Cbc0038I Pass  48: suminf.    1.19696 (6) obj. -48.9242 iterations 9
Cbc0038I Pass  49: suminf.    1.13127 (5) obj. -48.9242 iterations 2
Cbc0038I Pass  50: suminf.    1.17796 (4) obj. -48.9242 iterations 7
Cbc0038I Pass  51: suminf.    0.57846 (3) obj. -48.9242 iterations 3
Cbc0038I Pass  52: suminf.    0.57846 (3) obj. -48.9242 iterations 0
Cbc0038I Pass  53: suminf.    0.80798 (3) obj. -48.9242 iterations 4
Cbc0038I Pass  54: suminf.    0.80798 (3) obj. -48.9242 iterations 0
Cbc0038I Pass  55: suminf.    0.70089 (3) obj. -51.0846 iterations 2
Cbc0038I Pass  56: suminf.    0.56571 (2) obj. -48.9242 iterations 2
Cbc0038I Pass  57: suminf.    0.80798 (3) obj. -48.9242 iterations 3
Cbc0038I Pass  58: suminf.    0.91214 (4) obj. -48.9242 iterations 3
Cbc0038I Pass  59: suminf.    0.91214 (4) obj. -48.9242 iterations 1
Cbc0038I Pass  60: suminf.    0.70089 (3) obj. -50.0846 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 16 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -43.3886 - took 0.03 seconds
Cbc0012I Integer solution of -43.38856 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 0 rows 0 columns
Cbc0031I 19 added rows had average density of 16.368421
Cbc0013I At root node, 19 cuts changed objective from -71.066266 to -52.61058 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1297 row cuts average 3.0 elements, 6 column cuts (6 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 852 row cuts average 37.6 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 117 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 66 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 221 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 259 row cuts average 17.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 95 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.721 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -43.38856 best solution, best possible -52.61058 (1.56 seconds)
Cbc0016I Integer solution of -47.42496 found by strong branching after 2303 iterations and 3 nodes (1.94 seconds)
Cbc0010I After 8 nodes, 5 on tree, -47.42496 best solution, best possible -52.61058 (2.28 seconds)
Cbc0001I Search completed - best objective -47.42496, took 2635 iterations and 14 nodes (2.33 seconds)
Cbc0032I Strong branching done 244 times (2229 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 49 variables fixed on reduced cost
Total time (CPU seconds):       1.48   (Wallclock seconds):       2.33

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 27 (-6) columns and 138 (-45) elements
Clp1000I sum of infeasibilities 1.54929e-05 - average 3.36803e-07, 3 fixed columns
Coin0506I Presolve 39 (-7) rows, 24 (-3) columns and 118 (-20) elements
Clp0029I End of values pass after 24 iterations
Clp0000I Optimal - objective value 69.634983
Clp0000I Optimal - objective value 69.634983
Coin0511I After Postsolve, objective 69.634983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.634983
Clp0000I Optimal - objective value 69.634983
Clp0000I Optimal - objective value 69.634983
Coin0511I After Postsolve, objective 69.634983, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.63498317 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 27 columns (26 integer (26 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.724%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 12 integers unsatisfied sum - 4.08653
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.2321 iterations 13
Cbc0038I Solution found of -20.2321
Cbc0038I Relaxing continuous gives -20.2321
Cbc0038I Rounding solution of -22.7786 is better than previous of -20.2321

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 27 columns, reduced to 20 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -22.7786 to -43.3886 (0.01 seconds)
Cbc0038I Round again with cutoff of -45.8791
Cbc0038I Pass   2: suminf.    1.08313 (3) obj. -45.8791 iterations 2
Cbc0038I Pass   3: suminf.    0.62040 (2) obj. -45.8791 iterations 1
Cbc0038I Pass   4: suminf.    0.46999 (1) obj. -45.8791 iterations 1
Cbc0038I Pass   5: suminf.    0.39000 (1) obj. -45.8791 iterations 1
Cbc0038I Pass   6: suminf.    0.17237 (3) obj. -45.8791 iterations 9
Cbc0038I Pass   7: suminf.    0.17237 (3) obj. -45.8791 iterations 1
Cbc0038I Pass   8: suminf.    1.30871 (3) obj. -45.8791 iterations 6
Cbc0038I Pass   9: suminf.    1.11603 (3) obj. -45.8791 iterations 1
Cbc0038I Pass  10: suminf.    0.52289 (3) obj. -45.8791 iterations 5
Cbc0038I Pass  11: suminf.    0.78711 (2) obj. -45.8791 iterations 4
Cbc0038I Pass  12: suminf.    0.37503 (2) obj. -45.8791 iterations 3
Cbc0038I Pass  13: suminf.    0.42105 (1) obj. -45.8791 iterations 2
Cbc0038I Pass  14: suminf.    0.42105 (1) obj. -45.8791 iterations 0
Cbc0038I Pass  15: suminf.    1.33909 (5) obj. -45.8791 iterations 7
Cbc0038I Pass  16: suminf.    0.59033 (3) obj. -45.8791 iterations 6
Cbc0038I Pass  17: suminf.    0.52289 (3) obj. -45.8791 iterations 2
Cbc0038I Pass  18: suminf.    0.78711 (2) obj. -45.8791 iterations 4
Cbc0038I Pass  19: suminf.    0.37503 (2) obj. -45.8791 iterations 3
Cbc0038I Pass  20: suminf.    0.42105 (1) obj. -45.8791 iterations 2
Cbc0038I Pass  21: suminf.    0.42105 (1) obj. -45.8791 iterations 0
Cbc0038I Pass  22: suminf.    0.36290 (2) obj. -45.8791 iterations 5
Cbc0038I Pass  23: suminf.    0.20000 (1) obj. -45.8791 iterations 1
Cbc0038I Pass  24: suminf.    0.61396 (2) obj. -45.8791 iterations 3
Cbc0038I Pass  25: suminf.    0.54455 (2) obj. -45.8791 iterations 8
Cbc0038I Pass  26: suminf.    0.39170 (2) obj. -45.8791 iterations 4
Cbc0038I Pass  27: suminf.    0.54455 (2) obj. -45.8791 iterations 2
Cbc0038I Pass  28: suminf.    0.59558 (2) obj. -45.8791 iterations 5
Cbc0038I Pass  29: suminf.    0.45815 (3) obj. -45.8791 iterations 4
Cbc0038I Pass  30: suminf.    0.17821 (3) obj. -45.8791 iterations 2
Cbc0038I Pass  31: suminf.    0.50000 (1) obj. -45.8791 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 27 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -43.3886 - took 0.02 seconds
Cbc0012I Integer solution of -43.38856 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 27 columns, reduced to 20 rows 13 columns
Cbc0031I 11 added rows had average density of 23.818182
Cbc0013I At root node, 11 cuts changed objective from -68.293262 to -56.919672 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 677 row cuts average 3.9 elements, 2 column cuts (2 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 597 row cuts average 25.6 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 12.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 92 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -43.53276 found by DiveCoefficient after 1776 iterations and 6 nodes (0.19 seconds)
Cbc0001I Search completed - best objective -43.53276, took 2380 iterations and 22 nodes (0.24 seconds)
Cbc0032I Strong branching done 230 times (1870 iterations), fathomed 0 nodes and fixed 7 variables
Cbc0035I Maximum depth 8, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 45 (-18) columns and 362 (-287) elements
Clp1000I sum of infeasibilities 3.31154e-08 - average 8.49114e-10, 26 fixed columns
Coin0506I Presolve 15 (-24) rows, 19 (-26) columns and 63 (-299) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 1.6758518 - largest nonzero change 0 ( 0%) - largest zero change 2.7956833e-05
Clp0000I Optimal - objective value 45.168607
Clp0000I Optimal - objective value 45.168607
Coin0511I After Postsolve, objective 45.168607, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3604234 - largest nonzero change 0 ( 0%) - largest zero change 2.4972409e-05
Clp0000I Optimal - objective value 81.581284
Clp0000I Optimal - objective value 81.581284
Clp0000I Optimal - objective value 81.581284
Coin0511I After Postsolve, objective 81.581284, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.58128373 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 45 columns (45 integer (45 of which binary)) and 373 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.864%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 1.9995
Cbc0038I Pass   1: suminf.    1.56003 (10) obj. -64.7181 iterations 5
Cbc0038I Solution found of -18.3286
Cbc0038I Rounding solution of -32.5736 is better than previous of -18.3286

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 45 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -32.5736 to -33.1804 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.8487
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.56003 (10) obj. -64.7181 iterations 0
Cbc0038I Pass   3: suminf.    0.37025 (1) obj. -36.8487 iterations 15
Cbc0038I Pass   4: suminf.    0.18889 (1) obj. -42.1824 iterations 2
Cbc0038I Pass   5: suminf.    0.71150 (4) obj. -36.8487 iterations 8
Cbc0038I Pass   6: suminf.    0.32617 (1) obj. -36.8487 iterations 5
Cbc0038I Pass   7: suminf.    0.10256 (1) obj. -42.6119 iterations 4
Cbc0038I Pass   8: suminf.    0.08195 (1) obj. -36.8487 iterations 7
Cbc0038I Pass   9: suminf.    0.08943 (1) obj. -37.1748 iterations 1
Cbc0038I Pass  10: suminf.    2.76311 (9) obj. -36.8487 iterations 19
Cbc0038I Pass  11: suminf.    1.78152 (7) obj. -36.8487 iterations 3
Cbc0038I Pass  12: suminf.    1.55003 (6) obj. -36.8487 iterations 2
Cbc0038I Pass  13: suminf.    0.58276 (3) obj. -36.8487 iterations 11
Cbc0038I Pass  14: suminf.    0.52608 (3) obj. -36.8487 iterations 2
Cbc0038I Pass  15: suminf.    0.33424 (3) obj. -40.3673 iterations 3
Cbc0038I Pass  16: suminf.    0.20455 (2) obj. -37.8054 iterations 1
Cbc0038I Pass  17: suminf.    0.74671 (3) obj. -36.8487 iterations 3
Cbc0038I Pass  18: suminf.    0.57874 (2) obj. -44.3397 iterations 1
Cbc0038I Pass  19: suminf.    0.22655 (2) obj. -36.8487 iterations 1
Cbc0038I Pass  20: suminf.    0.89350 (2) obj. -36.8487 iterations 1
Cbc0038I Pass  21: suminf.    1.19786 (4) obj. -36.8487 iterations 5
Cbc0038I Pass  22: suminf.    1.02861 (4) obj. -41.899 iterations 1
Cbc0038I Pass  23: suminf.    0.50939 (2) obj. -36.8487 iterations 4
Cbc0038I Pass  24: suminf.    0.42574 (2) obj. -38.8819 iterations 1
Cbc0038I Pass  25: suminf.    1.27742 (5) obj. -36.8487 iterations 11
Cbc0038I Pass  26: suminf.    0.75899 (4) obj. -36.8487 iterations 4
Cbc0038I Pass  27: suminf.    0.32500 (2) obj. -38.5142 iterations 3
Cbc0038I Pass  28: suminf.    0.00039 (1) obj. -36.8487 iterations 4
Cbc0038I Pass  29: suminf.    0.00039 (1) obj. -36.8487 iterations 0
Cbc0038I Pass  30: suminf.    1.66268 (8) obj. -36.8487 iterations 19
Cbc0038I Pass  31: suminf.    1.66268 (8) obj. -36.8487 iterations 1
Cbc0038I Rounding solution of -41.8392 is better than previous of -33.1804

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 45 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -41.8392 to -43.5328 (0.04 seconds)
Cbc0038I Round again with cutoff of -48.7989
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.56003 (10) obj. -64.7181 iterations 0
Cbc0038I Pass  32: suminf.    0.61696 (2) obj. -48.7989 iterations 12
Cbc0038I Pass  33: suminf.    0.61220 (4) obj. -48.7989 iterations 1
Cbc0038I Pass  34: suminf.    0.81838 (2) obj. -48.7989 iterations 3
Cbc0038I Pass  35: suminf.    0.81838 (2) obj. -48.7989 iterations 0
Cbc0038I Pass  36: suminf.    0.24444 (1) obj. -50.0869 iterations 3
Cbc0038I Pass  37: suminf.    0.28824 (1) obj. -48.7989 iterations 1
Cbc0038I Pass  38: suminf.    1.43480 (6) obj. -53.6497 iterations 16
Cbc0038I Pass  39: suminf.    1.01402 (5) obj. -49.0275 iterations 2
Cbc0038I Pass  40: suminf.    0.73630 (2) obj. -48.7989 iterations 6
Cbc0038I Pass  41: suminf.    0.70492 (2) obj. -49.4025 iterations 1
Cbc0038I Pass  42: suminf.    1.66436 (5) obj. -48.7989 iterations 7
Cbc0038I Pass  43: suminf.    1.61064 (6) obj. -48.7989 iterations 2
Cbc0038I Pass  44: suminf.    1.09480 (3) obj. -48.7989 iterations 4
Cbc0038I Pass  45: suminf.    1.09480 (3) obj. -48.7989 iterations 0
Cbc0038I Pass  46: suminf.    1.23503 (3) obj. -50.2914 iterations 1
Cbc0038I Pass  47: suminf.    1.13943 (3) obj. -48.7989 iterations 1
Cbc0038I Pass  48: suminf.    1.09480 (3) obj. -48.7989 iterations 2
Cbc0038I Pass  49: suminf.    1.19505 (4) obj. -48.9706 iterations 4
Cbc0038I Pass  50: suminf.    1.19505 (4) obj. -48.9706 iterations 0
Cbc0038I Pass  51: suminf.    1.09480 (3) obj. -48.7989 iterations 5
Cbc0038I Pass  52: suminf.    1.23503 (3) obj. -50.2914 iterations 1
Cbc0038I Pass  53: suminf.    1.13943 (3) obj. -48.7989 iterations 1
Cbc0038I Pass  54: suminf.    1.09480 (3) obj. -48.7989 iterations 2
Cbc0038I Pass  55: suminf.    1.79082 (4) obj. -48.7989 iterations 10
Cbc0038I Pass  56: suminf.    1.24318 (4) obj. -48.7989 iterations 4
Cbc0038I Pass  57: suminf.    0.73054 (3) obj. -48.7989 iterations 3
Cbc0038I Pass  58: suminf.    0.73054 (3) obj. -48.7989 iterations 0
Cbc0038I Pass  59: suminf.    1.02478 (3) obj. -50.8469 iterations 1
Cbc0038I Pass  60: suminf.    0.89360 (3) obj. -48.7989 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 45 columns, reduced to 23 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -43.5328 - took 0.04 seconds
Cbc0012I Integer solution of -43.53276 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 38 rows 45 columns, reduced to 10 rows 10 columns
Cbc0031I 18 added rows had average density of 15.388889
Cbc0013I At root node, 18 cuts changed objective from -69.863072 to -53.524534 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 986 row cuts average 2.5 elements, 7 column cuts (7 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 506 row cuts average 34.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 55 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 17 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 42 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 200 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 264 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 88 row cuts average 19.6 elements, 0 column cuts (0 active)  in 0.920 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -43.53276 best solution, best possible -53.524534 (1.94 seconds)
Cbc0010I After 6 nodes, 7 on tree, -43.53276 best solution, best possible -53.524534 (2.68 seconds)
Cbc0001I Search completed - best objective -43.53276, took 2966 iterations and 28 nodes (3.33 seconds)
Cbc0032I Strong branching done 356 times (3041 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 11, 44 variables fixed on reduced cost
Total time (CPU seconds):       2.14   (Wallclock seconds):       3.33

