Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 280 (-23) elements
Clp1000I sum of infeasibilities 9.29793e-06 - average 9.99777e-08, 6 fixed columns
Coin0506I Presolve 80 (-13) rows, 44 (-7) columns and 240 (-40) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Coin0511I After Postsolve, objective 83.106958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Coin0511I After Postsolve, objective 83.106958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.10695845 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 280 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.44608
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.9964 iterations 28
Cbc0038I Solution found of 5.9964
Cbc0038I Relaxing continuous gives 5.9964
Cbc0038I Rounding solution of -3.00121 is better than previous of 5.9964

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -3.00121 to -43.9561 (0.05 seconds)
Cbc0038I Round again with cutoff of -47.8713
Cbc0038I Pass   2: suminf.    1.57799 (6) obj. -47.8713 iterations 12
Cbc0038I Pass   3: suminf.    1.14722 (4) obj. -47.8713 iterations 2
Cbc0038I Pass   4: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass   5: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass   6: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass   7: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass   8: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass   9: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  10: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  11: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  12: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  13: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  14: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  15: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  16: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  17: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  18: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  19: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  20: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  21: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  22: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  23: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  24: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  25: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  26: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  27: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  28: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  29: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  30: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  31: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Rounding solution of -47.3581 is better than previous of -43.9561

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -47.3581 to -48.6318 (0.09 seconds)
Cbc0038I Round again with cutoff of -55.5269
Cbc0038I Pass  31: suminf.    2.03922 (9) obj. -55.5269 iterations 1
Cbc0038I Pass  32: suminf.    1.08947 (6) obj. -55.5269 iterations 3
Cbc0038I Pass  33: suminf.    1.08947 (6) obj. -55.5269 iterations 0
Cbc0038I Pass  34: suminf.    1.20856 (4) obj. -55.5269 iterations 8
Cbc0038I Pass  35: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  36: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  37: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  38: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  39: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  40: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  41: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  42: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  43: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  44: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  45: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  46: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  47: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  48: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  49: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  50: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  51: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  52: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  53: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  54: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  55: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  56: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  57: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  58: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  59: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  60: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -48.6318 - took 0.11 seconds
Cbc0012I Integer solution of -48.631827 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 58 rows 33 columns
Cbc0031I 17 added rows had average density of 32.529412
Cbc0013I At root node, 17 cuts changed objective from -83.106958 to -67.556932 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5971 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1158 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 140 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0012I Integer solution of -49.385807 found by DiveCoefficient after 5259 iterations and 20 nodes (0.62 seconds)
Cbc0001I Search completed - best objective -49.38580710000001, took 5433 iterations and 32 nodes (0.63 seconds)
Cbc0032I Strong branching done 320 times (4618 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 7, 82 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 79 (-25) rows, 86 (-16) columns and 1147 (-431) elements
Clp1000I sum of infeasibilities 6.60665e-09 - average 8.36284e-11, 14 fixed columns
Coin0506I Presolve 66 (-13) rows, 72 (-14) columns and 785 (-362) elements
Clp0006I 0  Obj 78.057904 Dual inf 3.7711383 (72)
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 4.3534357 - largest nonzero change 2.2947302e-05 ( 0.0015708815%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 101.60013
Clp0000I Optimal - objective value 101.60013
Coin0511I After Postsolve, objective 101.60013, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 101.60013
Clp0000I Optimal - objective value 101.60013
Clp0000I Optimal - objective value 101.60013
Clp0000I Optimal - objective value 101.60013
Coin0511I After Postsolve, objective 101.60013, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.6001345 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 86 columns (86 integer (86 of which binary)) and 1151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.111%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.12203
Cbc0038I Pass   1: suminf.    1.38386 (14) obj. -72.9973 iterations 10
Cbc0038I Pass   2: suminf.    1.38386 (14) obj. -72.9973 iterations 1
Cbc0038I Solution found of -38.8947
Cbc0038I Rounding solution of -43.9117 is better than previous of -38.8947

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 86 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -47.4397
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.38386 (14) obj. -72.9973 iterations 0
Cbc0038I Pass   4: suminf.    1.38386 (14) obj. -72.9973 iterations 1
Cbc0038I Pass   5: suminf.    0.26900 (3) obj. -47.4397 iterations 13
Cbc0038I Pass   6: suminf.    0.46341 (1) obj. -49.8091 iterations 3
Cbc0038I Pass   7: suminf.    0.42010 (1) obj. -47.4397 iterations 1
Cbc0038I Pass   8: suminf.    1.34849 (11) obj. -47.4397 iterations 19
Cbc0038I Pass   9: suminf.    0.71276 (11) obj. -47.4397 iterations 7
Cbc0038I Pass  10: suminf.    0.92382 (6) obj. -47.4397 iterations 16
Cbc0038I Pass  11: suminf.    0.87289 (7) obj. -47.4397 iterations 4
Cbc0038I Pass  12: suminf.    1.53254 (8) obj. -47.4397 iterations 5
Cbc0038I Pass  13: suminf.    1.10363 (8) obj. -48.7265 iterations 3
Cbc0038I Pass  14: suminf.    1.89351 (14) obj. -47.4397 iterations 11
Cbc0038I Pass  15: suminf.    1.88711 (13) obj. -48.6308 iterations 2
Cbc0038I Pass  16: suminf.    2.66006 (12) obj. -47.4397 iterations 11
Cbc0038I Pass  17: suminf.    2.32155 (12) obj. -47.4397 iterations 2
Cbc0038I Pass  18: suminf.    2.32155 (12) obj. -47.4397 iterations 1
Cbc0038I Pass  19: suminf.    1.92565 (8) obj. -47.4397 iterations 10
Cbc0038I Pass  20: suminf.    1.75599 (9) obj. -47.4397 iterations 4
Cbc0038I Pass  21: suminf.    1.92565 (8) obj. -47.4397 iterations 7
Cbc0038I Pass  22: suminf.    1.65232 (8) obj. -47.4397 iterations 4
Cbc0038I Pass  23: suminf.    1.92565 (8) obj. -47.4397 iterations 4
Cbc0038I Pass  24: suminf.    2.74217 (14) obj. -47.4397 iterations 31
Cbc0038I Pass  25: suminf.    2.74217 (14) obj. -47.4397 iterations 2
Cbc0038I Pass  26: suminf.    2.61404 (12) obj. -47.4397 iterations 18
Cbc0038I Pass  27: suminf.    1.97279 (10) obj. -47.4397 iterations 5
Cbc0038I Pass  28: suminf.    2.02130 (10) obj. -47.4397 iterations 6
Cbc0038I Pass  29: suminf.    3.10479 (17) obj. -47.4397 iterations 36
Cbc0038I Pass  30: suminf.    2.14532 (12) obj. -47.4397 iterations 11
Cbc0038I Pass  31: suminf.    2.02932 (14) obj. -47.4397 iterations 5
Cbc0038I Pass  32: suminf.    2.89698 (11) obj. -47.4397 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 86 columns, reduced to 46 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -38.8947 to -49.3858 (0.08 seconds)
Cbc0038I Round again with cutoff of -55.3469
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.38386 (14) obj. -72.9973 iterations 0
Cbc0038I Pass  33: suminf.    1.38386 (14) obj. -72.9973 iterations 1
Cbc0038I Pass  34: suminf.    0.65846 (3) obj. -55.3469 iterations 16
Cbc0038I Pass  35: suminf.    0.65846 (3) obj. -55.3469 iterations 0
Cbc0038I Pass  36: suminf.    0.90284 (3) obj. -55.3469 iterations 3
Cbc0038I Pass  37: suminf.    0.69951 (3) obj. -55.3469 iterations 2
Cbc0038I Pass  38: suminf.    0.29931 (3) obj. -55.3469 iterations 1
Cbc0038I Pass  39: suminf.    0.90284 (3) obj. -55.3469 iterations 4
Cbc0038I Pass  40: suminf.    3.11297 (18) obj. -55.3469 iterations 20
Cbc0038I Pass  41: suminf.    1.50863 (16) obj. -55.3469 iterations 7
Cbc0038I Pass  42: suminf.    2.67330 (18) obj. -55.3469 iterations 16
Cbc0038I Pass  43: suminf.    1.79652 (12) obj. -55.3469 iterations 3
Cbc0038I Pass  44: suminf.    1.79652 (12) obj. -55.3469 iterations 0
Cbc0038I Pass  45: suminf.    1.55146 (12) obj. -55.3469 iterations 4
Cbc0038I Pass  46: suminf.    1.55146 (12) obj. -55.3469 iterations 1
Cbc0038I Pass  47: suminf.    1.76182 (12) obj. -55.3469 iterations 7
Cbc0038I Pass  48: suminf.    1.76182 (12) obj. -55.3469 iterations 1
Cbc0038I Pass  49: suminf.    1.55146 (12) obj. -55.3469 iterations 8
Cbc0038I Pass  50: suminf.    2.13171 (16) obj. -55.3469 iterations 13
Cbc0038I Pass  51: suminf.    2.01210 (15) obj. -56.6627 iterations 2
Cbc0038I Pass  52: suminf.    2.07099 (11) obj. -55.3469 iterations 15
Cbc0038I Pass  53: suminf.    2.07099 (11) obj. -55.3469 iterations 1
Cbc0038I Pass  54: suminf.    1.77239 (11) obj. -55.3469 iterations 7
Cbc0038I Pass  55: suminf.    1.77239 (11) obj. -55.3469 iterations 1
Cbc0038I Pass  56: suminf.    2.09487 (11) obj. -55.3469 iterations 6
Cbc0038I Pass  57: suminf.    1.52849 (12) obj. -55.3469 iterations 1
Cbc0038I Pass  58: suminf.    1.77239 (11) obj. -55.3469 iterations 7
Cbc0038I Pass  59: suminf.    1.71696 (11) obj. -55.3469 iterations 18
Cbc0038I Pass  60: suminf.    1.71696 (11) obj. -55.3469 iterations 2
Cbc0038I Pass  61: suminf.    1.66320 (12) obj. -55.3469 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 86 columns, reduced to 32 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -49.3858 - took 0.09 seconds
Cbc0012I Integer solution of -49.385807 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 79 rows 86 columns, reduced to 28 rows 29 columns
Cbc0031I 44 added rows had average density of 6.7727273
Cbc0013I At root node, 44 cuts changed objective from -79.190974 to -51.652293 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7936 row cuts average 8.9 elements, 10 column cuts (10 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 794 row cuts average 62.4 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 114 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 327 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 279 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 138 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.706 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -49.385807 best solution, best possible -51.652293 (1.82 seconds)
Cbc0001I Search completed - best objective -49.38580710000001, took 2358 iterations and 10 nodes (2.17 seconds)
Cbc0032I Strong branching done 236 times (3198 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       2.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 93 (-12) rows, 51 (-2) columns and 280 (-23) elements
Clp1000I sum of infeasibilities 9.29793e-06 - average 9.99777e-08, 6 fixed columns
Coin0506I Presolve 80 (-13) rows, 44 (-7) columns and 240 (-40) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Coin0511I After Postsolve, objective 83.106958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Clp0000I Optimal - objective value 83.106958
Coin0511I After Postsolve, objective 83.106958, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.10695845 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 93 rows, 51 columns (50 integer (50 of which binary)) and 280 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 9.44608
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.9964 iterations 28
Cbc0038I Solution found of 5.9964
Cbc0038I Relaxing continuous gives 5.9964
Cbc0038I Rounding solution of -3.00121 is better than previous of 5.9964

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 56 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -3.00121 to -43.9561 (0.05 seconds)
Cbc0038I Round again with cutoff of -47.8713
Cbc0038I Pass   2: suminf.    1.57799 (6) obj. -47.8713 iterations 12
Cbc0038I Pass   3: suminf.    1.14722 (4) obj. -47.8713 iterations 2
Cbc0038I Pass   4: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass   5: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass   6: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass   7: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass   8: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass   9: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  10: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  11: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  12: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  13: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  14: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  15: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  16: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  17: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  18: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  19: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  20: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  21: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  22: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  23: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  24: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  25: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  26: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Pass  27: suminf.    0.55307 (2) obj. -47.8713 iterations 1
Cbc0038I Pass  28: suminf.    1.14722 (4) obj. -47.8713 iterations 6
Cbc0038I Pass  29: suminf.    0.91156 (4) obj. -47.8713 iterations 5
Cbc0038I Pass  30: suminf.    0.70848 (3) obj. -47.8713 iterations 2
Cbc0038I Pass  31: suminf.    0.64280 (2) obj. -47.8713 iterations 4
Cbc0038I Rounding solution of -47.3581 is better than previous of -43.9561

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 58 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -47.3581 to -48.6318 (0.09 seconds)
Cbc0038I Round again with cutoff of -55.5269
Cbc0038I Pass  31: suminf.    2.03922 (9) obj. -55.5269 iterations 1
Cbc0038I Pass  32: suminf.    1.08947 (6) obj. -55.5269 iterations 3
Cbc0038I Pass  33: suminf.    1.08947 (6) obj. -55.5269 iterations 0
Cbc0038I Pass  34: suminf.    1.20856 (4) obj. -55.5269 iterations 8
Cbc0038I Pass  35: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  36: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  37: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  38: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  39: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  40: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  41: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  42: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  43: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  44: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  45: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  46: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  47: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  48: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  49: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  50: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  51: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  52: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  53: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  54: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  55: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I Pass  56: suminf.    1.17117 (3) obj. -55.5269 iterations 6
Cbc0038I Pass  57: suminf.    0.88928 (3) obj. -55.5269 iterations 4
Cbc0038I Pass  58: suminf.    1.33084 (5) obj. -55.5269 iterations 3
Cbc0038I Pass  59: suminf.    0.53823 (3) obj. -55.5269 iterations 3
Cbc0038I Pass  60: suminf.    0.52643 (4) obj. -55.5269 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 51 columns, reduced to 60 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -48.6318 - took 0.12 seconds
Cbc0012I Integer solution of -48.631827 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 93 rows 51 columns, reduced to 58 rows 33 columns
Cbc0031I 17 added rows had average density of 32.529412
Cbc0013I At root node, 17 cuts changed objective from -83.106958 to -67.556932 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5971 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1158 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 140 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 38.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0012I Integer solution of -49.385807 found by DiveCoefficient after 5259 iterations and 20 nodes (0.68 seconds)
Cbc0010I After 25 nodes, 3 on tree, -49.385807 best solution, best possible -67.356181 (0.69 seconds)
Cbc0001I Search completed - best objective -49.38580710000001, took 5433 iterations and 32 nodes (0.70 seconds)
Cbc0032I Strong branching done 320 times (4618 iterations), fathomed 3 nodes and fixed 17 variables
Cbc0035I Maximum depth 7, 82 variables fixed on reduced cost
Total time (CPU seconds):       0.66   (Wallclock seconds):       0.70

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 79 (-26) rows, 86 (-17) columns and 1147 (-432) elements
Clp1000I sum of infeasibilities 6.60665e-09 - average 8.36284e-11, 14 fixed columns
Coin0506I Presolve 66 (-13) rows, 72 (-14) columns and 785 (-362) elements
Clp0006I 0  Obj 78.057904 Dual inf 3.7711383 (72)
Clp0029I End of values pass after 72 iterations
Clp0014I Perturbing problem by 0.001% of 4.3534357 - largest nonzero change 2.2947302e-05 ( 0.0015708815%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 101.60013
Clp0000I Optimal - objective value 101.60013
Coin0511I After Postsolve, objective 101.60013, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 101.60013
Clp0000I Optimal - objective value 101.60013
Clp0000I Optimal - objective value 101.60013
Clp0000I Optimal - objective value 101.60013
Coin0511I After Postsolve, objective 101.60013, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 101.6001345 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 79 rows, 86 columns (86 integer (86 of which binary)) and 1151 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.111%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.12203
Cbc0038I Pass   1: suminf.    1.38386 (14) obj. -72.9973 iterations 10
Cbc0038I Pass   2: suminf.    1.38386 (14) obj. -72.9973 iterations 1
Cbc0038I Solution found of -38.8947
Cbc0038I Rounding solution of -43.9117 is better than previous of -38.8947

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 86 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -47.4397
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.38386 (14) obj. -72.9973 iterations 0
Cbc0038I Pass   4: suminf.    1.38386 (14) obj. -72.9973 iterations 1
Cbc0038I Pass   5: suminf.    0.26900 (3) obj. -47.4397 iterations 13
Cbc0038I Pass   6: suminf.    0.46341 (1) obj. -49.8091 iterations 3
Cbc0038I Pass   7: suminf.    0.42010 (1) obj. -47.4397 iterations 1
Cbc0038I Pass   8: suminf.    1.34849 (11) obj. -47.4397 iterations 19
Cbc0038I Pass   9: suminf.    0.71276 (11) obj. -47.4397 iterations 7
Cbc0038I Pass  10: suminf.    0.92382 (6) obj. -47.4397 iterations 16
Cbc0038I Pass  11: suminf.    0.87289 (7) obj. -47.4397 iterations 4
Cbc0038I Pass  12: suminf.    1.53254 (8) obj. -47.4397 iterations 5
Cbc0038I Pass  13: suminf.    1.10363 (8) obj. -48.7265 iterations 3
Cbc0038I Pass  14: suminf.    1.89351 (14) obj. -47.4397 iterations 11
Cbc0038I Pass  15: suminf.    1.88711 (13) obj. -48.6308 iterations 2
Cbc0038I Pass  16: suminf.    2.66006 (12) obj. -47.4397 iterations 11
Cbc0038I Pass  17: suminf.    2.32155 (12) obj. -47.4397 iterations 2
Cbc0038I Pass  18: suminf.    2.32155 (12) obj. -47.4397 iterations 1
Cbc0038I Pass  19: suminf.    1.92565 (8) obj. -47.4397 iterations 10
Cbc0038I Pass  20: suminf.    1.75599 (9) obj. -47.4397 iterations 4
Cbc0038I Pass  21: suminf.    1.92565 (8) obj. -47.4397 iterations 7
Cbc0038I Pass  22: suminf.    1.65232 (8) obj. -47.4397 iterations 4
Cbc0038I Pass  23: suminf.    1.92565 (8) obj. -47.4397 iterations 4
Cbc0038I Pass  24: suminf.    2.74217 (14) obj. -47.4397 iterations 31
Cbc0038I Pass  25: suminf.    2.74217 (14) obj. -47.4397 iterations 2
Cbc0038I Pass  26: suminf.    2.61404 (12) obj. -47.4397 iterations 18
Cbc0038I Pass  27: suminf.    1.97279 (10) obj. -47.4397 iterations 5
Cbc0038I Pass  28: suminf.    2.02130 (10) obj. -47.4397 iterations 6
Cbc0038I Pass  29: suminf.    3.10479 (17) obj. -47.4397 iterations 36
Cbc0038I Pass  30: suminf.    2.14532 (12) obj. -47.4397 iterations 11
Cbc0038I Pass  31: suminf.    2.02932 (14) obj. -47.4397 iterations 5
Cbc0038I Pass  32: suminf.    2.89698 (11) obj. -47.4397 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 86 columns, reduced to 46 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -38.8947 to -49.3858 (0.09 seconds)
Cbc0038I Round again with cutoff of -55.3469
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.38386 (14) obj. -72.9973 iterations 0
Cbc0038I Pass  33: suminf.    1.38386 (14) obj. -72.9973 iterations 1
Cbc0038I Pass  34: suminf.    0.65846 (3) obj. -55.3469 iterations 16
Cbc0038I Pass  35: suminf.    0.65846 (3) obj. -55.3469 iterations 0
Cbc0038I Pass  36: suminf.    0.90284 (3) obj. -55.3469 iterations 3
Cbc0038I Pass  37: suminf.    0.69951 (3) obj. -55.3469 iterations 2
Cbc0038I Pass  38: suminf.    0.29931 (3) obj. -55.3469 iterations 1
Cbc0038I Pass  39: suminf.    0.90284 (3) obj. -55.3469 iterations 4
Cbc0038I Pass  40: suminf.    3.11297 (18) obj. -55.3469 iterations 20
Cbc0038I Pass  41: suminf.    1.50863 (16) obj. -55.3469 iterations 7
Cbc0038I Pass  42: suminf.    2.67330 (18) obj. -55.3469 iterations 16
Cbc0038I Pass  43: suminf.    1.79652 (12) obj. -55.3469 iterations 3
Cbc0038I Pass  44: suminf.    1.79652 (12) obj. -55.3469 iterations 0
Cbc0038I Pass  45: suminf.    1.55146 (12) obj. -55.3469 iterations 4
Cbc0038I Pass  46: suminf.    1.55146 (12) obj. -55.3469 iterations 1
Cbc0038I Pass  47: suminf.    1.76182 (12) obj. -55.3469 iterations 7
Cbc0038I Pass  48: suminf.    1.76182 (12) obj. -55.3469 iterations 1
Cbc0038I Pass  49: suminf.    1.55146 (12) obj. -55.3469 iterations 8
Cbc0038I Pass  50: suminf.    2.13171 (16) obj. -55.3469 iterations 13
Cbc0038I Pass  51: suminf.    2.01210 (15) obj. -56.6627 iterations 2
Cbc0038I Pass  52: suminf.    2.07099 (11) obj. -55.3469 iterations 15
Cbc0038I Pass  53: suminf.    2.07099 (11) obj. -55.3469 iterations 1
Cbc0038I Pass  54: suminf.    1.77239 (11) obj. -55.3469 iterations 7
Cbc0038I Pass  55: suminf.    1.77239 (11) obj. -55.3469 iterations 1
Cbc0038I Pass  56: suminf.    2.09487 (11) obj. -55.3469 iterations 6
Cbc0038I Pass  57: suminf.    1.52849 (12) obj. -55.3469 iterations 1
Cbc0038I Pass  58: suminf.    1.77239 (11) obj. -55.3469 iterations 7
Cbc0038I Pass  59: suminf.    1.71696 (11) obj. -55.3469 iterations 18
Cbc0038I Pass  60: suminf.    1.71696 (11) obj. -55.3469 iterations 2
Cbc0038I Pass  61: suminf.    1.66320 (12) obj. -55.3469 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 34 integers at bound fixed and 0 continuous
Cbc0038I Full problem 79 rows 86 columns, reduced to 32 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -49.3858 - took 0.10 seconds
Cbc0012I Integer solution of -49.385807 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 79 rows 86 columns, reduced to 28 rows 29 columns
Cbc0031I 44 added rows had average density of 6.7727273
Cbc0013I At root node, 44 cuts changed objective from -79.190974 to -51.652293 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7936 row cuts average 8.9 elements, 10 column cuts (10 active)  in 0.108 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 794 row cuts average 62.4 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 114 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 327 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 279 row cuts average 38.5 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 138 row cuts average 33.7 elements, 0 column cuts (0 active)  in 0.843 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -49.385807 best solution, best possible -51.652293 (2.24 seconds)
Cbc0001I Search completed - best objective -49.38580710000001, took 2358 iterations and 10 nodes (2.67 seconds)
Cbc0032I Strong branching done 236 times (3198 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 17 variables fixed on reduced cost
Total time (CPU seconds):       1.81   (Wallclock seconds):       2.68

