Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 0.00131137 - average 9.43431e-06, 10 fixed columns
Coin0506I Presolve 121 (-18) rows, 66 (-10) columns and 366 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Coin0511I After Postsolve, objective 35.5688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Coin0511I After Postsolve, objective 35.5688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.56879966 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 8.93939
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.82169 iterations 62
Cbc0038I Solution found of 3.82169
Cbc0038I Relaxing continuous gives 3.82169
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from 3.82169 to -4.52566 (0.05 seconds)
Cbc0038I Round again with cutoff of -7.63006
Cbc0038I Pass   2: suminf.    1.11204 (23) obj. -7.63006 iterations 33
Cbc0038I Pass   3: suminf.    0.89211 (52) obj. -7.63006 iterations 27
Cbc0038I Pass   4: suminf.    1.56772 (10) obj. -7.63006 iterations 54
Cbc0038I Pass   5: suminf.    0.95089 (6) obj. -7.63006 iterations 4
Cbc0038I Pass   6: suminf.    1.23807 (8) obj. -7.63006 iterations 13
Cbc0038I Pass   7: suminf.    1.23807 (8) obj. -7.63006 iterations 0
Cbc0038I Pass   8: suminf.    1.60663 (5) obj. -7.63006 iterations 12
Cbc0038I Pass   9: suminf.    1.68469 (6) obj. -7.63006 iterations 11
Cbc0038I Pass  10: suminf.    0.73082 (4) obj. -7.63006 iterations 4
Cbc0038I Pass  11: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  12: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  13: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  14: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  15: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  16: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  17: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  18: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  19: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  20: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  21: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  22: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  23: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  24: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  25: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  26: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  27: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  28: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  29: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  30: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  31: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 107 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -4.52566 to -4.53346 (0.12 seconds)
Cbc0038I Round again with cutoff of -13.2178
Cbc0038I Pass  31: suminf.    3.01204 (23) obj. -13.2178 iterations 0
Cbc0038I Pass  32: suminf.    2.62262 (9) obj. -13.2178 iterations 28
Cbc0038I Pass  33: suminf.    2.25840 (8) obj. -13.2178 iterations 2
Cbc0038I Pass  34: suminf.    3.13266 (10) obj. -13.2178 iterations 29
Cbc0038I Pass  35: suminf.    2.90633 (18) obj. -13.2178 iterations 8
Cbc0038I Pass  36: suminf.    1.26445 (7) obj. -13.2178 iterations 28
Cbc0038I Pass  37: suminf.    1.14122 (6) obj. -13.2178 iterations 4
Cbc0038I Pass  38: suminf.    2.87027 (9) obj. -13.2178 iterations 11
Cbc0038I Pass  39: suminf.    2.44748 (13) obj. -13.2178 iterations 7
Cbc0038I Pass  40: suminf.    2.40353 (12) obj. -13.2178 iterations 1
Cbc0038I Pass  41: suminf.    1.68125 (9) obj. -13.2178 iterations 12
Cbc0038I Pass  42: suminf.    1.64340 (8) obj. -13.2178 iterations 9
Cbc0038I Pass  43: suminf.    2.21040 (8) obj. -13.2178 iterations 14
Cbc0038I Pass  44: suminf.    1.82752 (7) obj. -13.2178 iterations 2
Cbc0038I Pass  45: suminf.    1.82075 (7) obj. -13.2178 iterations 2
Cbc0038I Pass  46: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  47: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  48: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  49: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  50: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I Pass  51: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  52: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  53: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  54: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  55: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I Pass  56: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  57: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  58: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  59: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  60: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -4.53346 - took 0.15 seconds
Cbc0012I Integer solution of -4.53346 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0031I 20 added rows had average density of 65.2
Cbc0013I At root node, 20 cuts changed objective from -35.5688 to -29.493615 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12993 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1782 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.53346 best solution, best possible -29.493615 (1.02 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 30 rows 18 columns
Cbc0004I Integer solution of -4.6571 found after 10082 iterations and 60 nodes (1.28 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 78 rows 44 columns
Cbc0001I Search completed - best objective -4.6571, took 12869 iterations and 132 nodes (1.63 seconds)
Cbc0032I Strong branching done 1514 times (25570 iterations), fathomed 4 nodes and fixed 55 variables
Cbc0035I Maximum depth 29, 196 variables fixed on reduced cost
Total time (CPU seconds):       1.59   (Wallclock seconds):       1.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-45) rows, 120 (-32) columns and 2033 (-1270) elements
Clp1000I sum of infeasibilities 8.88332e-08 - average 8.14984e-10, 7 fixed columns
Coin0506I Presolve 102 (-7) rows, 113 (-7) columns and 1801 (-232) elements
Clp0006I 0  Obj 33.879294 Dual inf 5.9854707 (113)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.833694 - largest nonzero change 2.5725627e-05 ( 0.0021869008%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 50.542052
Clp0000I Optimal - objective value 50.542052
Coin0511I After Postsolve, objective 50.542052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.542052 Dual inf 1.4283232 (1)
Clp0014I Perturbing problem by 0.001% of 1.7717662 - largest nonzero change 2.1606558e-05 ( 0.0012247315%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 51.142052
Clp0000I Optimal - objective value 51.142052
Clp0000I Optimal - objective value 51.142052
Coin0511I After Postsolve, objective 51.142052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.1420518 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 120 columns (120 integer (120 of which binary)) and 2035 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.563%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 7.98031
Cbc0038I Pass   1: suminf.    2.82012 (29) obj. -26.2362 iterations 25
Cbc0038I Pass   2: suminf.    2.82012 (29) obj. -26.2362 iterations 1
Cbc0038I Pass   3: suminf.    0.32457 (4) obj. 2.605 iterations 25
Cbc0038I Solution found of 7.19592
Cbc0038I Rounding solution of 1.23476 is better than previous of 7.19592

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 1.23476 to -0.59335 (0.02 seconds)
Cbc0038I Round again with cutoff of -4.79001
Cbc0038I Pass   4: suminf.    2.82012 (29) obj. -26.2362 iterations 0
Cbc0038I Pass   5: suminf.    2.82012 (29) obj. -26.2362 iterations 1
Cbc0038I Pass   6: suminf.    1.02799 (12) obj. -6.51639 iterations 17
Cbc0038I Pass   7: suminf.    1.34460 (17) obj. -4.79001 iterations 42
Cbc0038I Pass   8: suminf.    0.61990 (5) obj. -4.79001 iterations 11
Cbc0038I Pass   9: suminf.    0.40190 (4) obj. -4.79001 iterations 4
Cbc0038I Pass  10: suminf.    0.55727 (4) obj. -4.79001 iterations 14
Cbc0038I Pass  11: suminf.    4.42384 (24) obj. -4.79001 iterations 34
Cbc0038I Pass  12: suminf.    2.51230 (22) obj. -4.79001 iterations 13
Cbc0038I Pass  13: suminf.    1.53122 (10) obj. -4.79001 iterations 16
Cbc0038I Pass  14: suminf.    1.38366 (11) obj. -4.79001 iterations 11
Cbc0038I Pass  15: suminf.    1.29698 (7) obj. -4.79001 iterations 23
Cbc0038I Pass  16: suminf.    0.79439 (6) obj. -4.79001 iterations 11
Cbc0038I Pass  17: suminf.    1.68401 (8) obj. -4.79001 iterations 15
Cbc0038I Pass  18: suminf.    2.14558 (14) obj. -4.79001 iterations 35
Cbc0038I Pass  19: suminf.    1.95041 (16) obj. -4.79001 iterations 11
Cbc0038I Pass  20: suminf.    1.38087 (6) obj. -4.79001 iterations 26
Cbc0038I Pass  21: suminf.    1.12068 (11) obj. -4.79001 iterations 17
Cbc0038I Pass  22: suminf.    2.50417 (10) obj. -4.79001 iterations 11
Cbc0038I Pass  23: suminf.    1.86920 (11) obj. -4.79001 iterations 6
Cbc0038I Pass  24: suminf.    2.50417 (10) obj. -4.79001 iterations 9
Cbc0038I Pass  25: suminf.    1.88089 (12) obj. -4.79001 iterations 23
Cbc0038I Pass  26: suminf.    1.68975 (10) obj. -5.12506 iterations 5
Cbc0038I Pass  27: suminf.    1.47559 (7) obj. -4.79001 iterations 20
Cbc0038I Pass  28: suminf.    0.84825 (9) obj. -4.79001 iterations 10
Cbc0038I Pass  29: suminf.    1.68401 (8) obj. -4.79001 iterations 14
Cbc0038I Pass  30: suminf.    0.79439 (6) obj. -4.79001 iterations 7
Cbc0038I Pass  31: suminf.    1.68401 (8) obj. -4.79001 iterations 12
Cbc0038I Pass  32: suminf.    2.32802 (14) obj. -4.79001 iterations 22
Cbc0038I Pass  33: suminf.    2.32802 (14) obj. -4.79001 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 39 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -0.59335 to -1.28406 (0.08 seconds)
Cbc0038I Round again with cutoff of -12.3438
Cbc0038I Pass  33: suminf.    2.82012 (29) obj. -26.2362 iterations 0
Cbc0038I Pass  34: suminf.    2.82012 (29) obj. -26.2362 iterations 1
Cbc0038I Pass  35: suminf.    1.69207 (19) obj. -15.5668 iterations 10
Cbc0038I Pass  36: suminf.    3.21794 (21) obj. -12.3438 iterations 58
Cbc0038I Pass  37: suminf.    3.21794 (21) obj. -12.3438 iterations 0
Cbc0038I Pass  38: suminf.    2.16152 (10) obj. -12.3438 iterations 37
Cbc0038I Pass  39: suminf.    2.11659 (15) obj. -12.3438 iterations 9
Cbc0038I Pass  40: suminf.    2.30040 (14) obj. -12.3438 iterations 18
Cbc0038I Pass  41: suminf.    2.03435 (14) obj. -12.3438 iterations 12
Cbc0038I Pass  42: suminf.    2.30040 (14) obj. -12.3438 iterations 18
Cbc0038I Pass  43: suminf.    2.86619 (17) obj. -12.3438 iterations 20
Cbc0038I Pass  44: suminf.    2.70454 (18) obj. -12.3438 iterations 16
Cbc0038I Pass  45: suminf.    2.30658 (11) obj. -12.3438 iterations 22
Cbc0038I Pass  46: suminf.    1.79121 (11) obj. -12.3438 iterations 9
Cbc0038I Pass  47: suminf.    3.24977 (13) obj. -12.3438 iterations 9
Cbc0038I Pass  48: suminf.    2.52667 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  49: suminf.    2.46649 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  50: suminf.    3.18415 (13) obj. -12.3438 iterations 8
Cbc0038I Pass  51: suminf.    2.45612 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  52: suminf.    2.39264 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  53: suminf.    3.24977 (13) obj. -12.3438 iterations 8
Cbc0038I Pass  54: suminf.    2.52667 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  55: suminf.    2.46649 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  56: suminf.    3.18415 (13) obj. -12.3438 iterations 8
Cbc0038I Pass  57: suminf.    2.45612 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  58: suminf.    2.39264 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  59: suminf.    3.24977 (13) obj. -12.3438 iterations 8
Cbc0038I Pass  60: suminf.    2.52667 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  61: suminf.    2.46649 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  62: suminf.    3.18415 (13) obj. -12.3438 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -1.28406 - took 0.10 seconds
Cbc0012I Integer solution of -1.28406 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 109 rows 120 columns, reduced to 20 rows 24 columns
Cbc0031I 57 added rows had average density of 56.087719
Cbc0013I At root node, 57 cuts changed objective from -42.559006 to -12.714798 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12289 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1716 row cuts average 112.7 elements, 0 column cuts (0 active)  in 0.185 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 442 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1398 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 412 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 184 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.523 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1.28406 best solution, best possible -12.714798 (2.53 seconds)
Cbc0012I Integer solution of -3.57235 found by rounding after 5994 iterations and 1 nodes (2.54 seconds)
Cbc0004I Integer solution of -4.6571 found after 6133 iterations and 1 nodes (2.62 seconds)
Cbc0010I After 5 nodes, 4 on tree, -4.6571 best solution, best possible -11.947853 (3.30 seconds)
Cbc0010I After 18 nodes, 9 on tree, -4.6571 best solution, best possible -11.947853 (4.01 seconds)
Cbc0038I Full problem 109 rows 120 columns, reduced to 62 rows 75 columns
Cbc0010I After 41 nodes, 10 on tree, -4.6571 best solution, best possible -11.947853 (5.19 seconds)
Cbc0010I After 71 nodes, 10 on tree, -4.6571 best solution, best possible -11.947853 (5.95 seconds)
Cbc0038I Full problem 109 rows 120 columns, reduced to 35 rows 46 columns
Cbc0010I After 98 nodes, 3 on tree, -4.6571 best solution, best possible -11.947853 (6.90 seconds)
Cbc0010I After 113 nodes, 7 on tree, -4.6571 best solution, best possible -11.947853 (7.64 seconds)
Cbc0010I After 137 nodes, 7 on tree, -4.6571 best solution, best possible -11.947853 (8.36 seconds)
Cbc0010I After 157 nodes, 3 on tree, -4.6571 best solution, best possible -11.947853 (9.11 seconds)
Cbc0010I After 170 nodes, 6 on tree, -4.6571 best solution, best possible -11.947853 (9.86 seconds)
Cbc0001I Search completed - best objective -4.6571, took 14852 iterations and 194 nodes (10.44 seconds)
Cbc0032I Strong branching done 2204 times (40762 iterations), fathomed 16 nodes and fixed 19 variables
Cbc0035I Maximum depth 20, 457 variables fixed on reduced cost
Total time (CPU seconds):       7.83   (Wallclock seconds):       10.46

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 0.00131137 - average 9.43431e-06, 10 fixed columns
Coin0506I Presolve 121 (-18) rows, 66 (-10) columns and 366 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Coin0511I After Postsolve, objective 35.5688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Clp0000I Optimal - objective value 35.5688
Coin0511I After Postsolve, objective 35.5688, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.56879966 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 8.93939
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 3.82169 iterations 62
Cbc0038I Solution found of 3.82169
Cbc0038I Relaxing continuous gives 3.82169
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound improved solution from 3.82169 to -4.52566 (0.07 seconds)
Cbc0038I Round again with cutoff of -7.63006
Cbc0038I Pass   2: suminf.    1.11204 (23) obj. -7.63006 iterations 33
Cbc0038I Pass   3: suminf.    0.89211 (52) obj. -7.63006 iterations 27
Cbc0038I Pass   4: suminf.    1.56772 (10) obj. -7.63006 iterations 54
Cbc0038I Pass   5: suminf.    0.95089 (6) obj. -7.63006 iterations 4
Cbc0038I Pass   6: suminf.    1.23807 (8) obj. -7.63006 iterations 13
Cbc0038I Pass   7: suminf.    1.23807 (8) obj. -7.63006 iterations 0
Cbc0038I Pass   8: suminf.    1.60663 (5) obj. -7.63006 iterations 12
Cbc0038I Pass   9: suminf.    1.68469 (6) obj. -7.63006 iterations 11
Cbc0038I Pass  10: suminf.    0.73082 (4) obj. -7.63006 iterations 4
Cbc0038I Pass  11: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  12: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  13: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  14: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  15: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  16: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  17: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  18: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  19: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  20: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  21: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  22: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  23: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  24: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  25: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I Pass  26: suminf.    2.16346 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  27: suminf.    0.90746 (4) obj. -7.63006 iterations 2
Cbc0038I Pass  28: suminf.    0.73082 (4) obj. -7.63006 iterations 3
Cbc0038I Pass  29: suminf.    1.29277 (6) obj. -7.63006 iterations 8
Cbc0038I Pass  30: suminf.    2.07447 (7) obj. -7.63006 iterations 7
Cbc0038I Pass  31: suminf.    1.75977 (10) obj. -7.63006 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 107 rows 59 columns
Cbc0038I Mini branch and bound improved solution from -4.52566 to -4.53346 (0.13 seconds)
Cbc0038I Round again with cutoff of -13.2178
Cbc0038I Pass  31: suminf.    3.01204 (23) obj. -13.2178 iterations 0
Cbc0038I Pass  32: suminf.    2.62262 (9) obj. -13.2178 iterations 28
Cbc0038I Pass  33: suminf.    2.25840 (8) obj. -13.2178 iterations 2
Cbc0038I Pass  34: suminf.    3.13266 (10) obj. -13.2178 iterations 29
Cbc0038I Pass  35: suminf.    2.90633 (18) obj. -13.2178 iterations 8
Cbc0038I Pass  36: suminf.    1.26445 (7) obj. -13.2178 iterations 28
Cbc0038I Pass  37: suminf.    1.14122 (6) obj. -13.2178 iterations 4
Cbc0038I Pass  38: suminf.    2.87027 (9) obj. -13.2178 iterations 11
Cbc0038I Pass  39: suminf.    2.44748 (13) obj. -13.2178 iterations 7
Cbc0038I Pass  40: suminf.    2.40353 (12) obj. -13.2178 iterations 1
Cbc0038I Pass  41: suminf.    1.68125 (9) obj. -13.2178 iterations 12
Cbc0038I Pass  42: suminf.    1.64340 (8) obj. -13.2178 iterations 9
Cbc0038I Pass  43: suminf.    2.21040 (8) obj. -13.2178 iterations 14
Cbc0038I Pass  44: suminf.    1.82752 (7) obj. -13.2178 iterations 2
Cbc0038I Pass  45: suminf.    1.82075 (7) obj. -13.2178 iterations 2
Cbc0038I Pass  46: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  47: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  48: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  49: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  50: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I Pass  51: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  52: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  53: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  54: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  55: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I Pass  56: suminf.    2.33138 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  57: suminf.    2.32139 (7) obj. -13.2178 iterations 1
Cbc0038I Pass  58: suminf.    2.88243 (8) obj. -13.2178 iterations 6
Cbc0038I Pass  59: suminf.    1.82075 (7) obj. -13.2178 iterations 6
Cbc0038I Pass  60: suminf.    1.82075 (7) obj. -13.2178 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -4.53346 - took 0.16 seconds
Cbc0012I Integer solution of -4.53346 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 91 rows 51 columns
Cbc0031I 20 added rows had average density of 65.2
Cbc0013I At root node, 20 cuts changed objective from -35.5688 to -29.493615 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12993 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1782 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 131 row cuts average 75.8 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.53346 best solution, best possible -29.493615 (1.13 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 30 rows 18 columns
Cbc0004I Integer solution of -4.6571 found after 10082 iterations and 60 nodes (1.40 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 78 rows 44 columns
Cbc0001I Search completed - best objective -4.6571, took 12869 iterations and 132 nodes (1.77 seconds)
Cbc0032I Strong branching done 1514 times (25570 iterations), fathomed 4 nodes and fixed 55 variables
Cbc0035I Maximum depth 29, 196 variables fixed on reduced cost
Total time (CPU seconds):       1.68   (Wallclock seconds):       1.78

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 120 (-33) columns and 2033 (-1271) elements
Clp1000I sum of infeasibilities 8.88332e-08 - average 8.14984e-10, 7 fixed columns
Coin0506I Presolve 102 (-7) rows, 113 (-7) columns and 1801 (-232) elements
Clp0006I 0  Obj 33.879294 Dual inf 5.9854707 (113)
Clp0029I End of values pass after 113 iterations
Clp0014I Perturbing problem by 0.001% of 1.833694 - largest nonzero change 2.5725627e-05 ( 0.0021869008%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 50.542052
Clp0000I Optimal - objective value 50.542052
Coin0511I After Postsolve, objective 50.542052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 50.542052 Dual inf 1.4283232 (1)
Clp0014I Perturbing problem by 0.001% of 1.7717662 - largest nonzero change 2.1606558e-05 ( 0.0012247315%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 51.142052
Clp0000I Optimal - objective value 51.142052
Clp0000I Optimal - objective value 51.142052
Coin0511I After Postsolve, objective 51.142052, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 51.1420518 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 120 columns (120 integer (120 of which binary)) and 2035 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.563%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 7.98031
Cbc0038I Pass   1: suminf.    2.82012 (29) obj. -26.2362 iterations 25
Cbc0038I Pass   2: suminf.    2.82012 (29) obj. -26.2362 iterations 1
Cbc0038I Pass   3: suminf.    0.32457 (4) obj. 2.605 iterations 25
Cbc0038I Solution found of 7.19592
Cbc0038I Rounding solution of 1.23476 is better than previous of 7.19592

Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound improved solution from 1.23476 to -0.59335 (0.03 seconds)
Cbc0038I Round again with cutoff of -4.79001
Cbc0038I Pass   4: suminf.    2.82012 (29) obj. -26.2362 iterations 0
Cbc0038I Pass   5: suminf.    2.82012 (29) obj. -26.2362 iterations 1
Cbc0038I Pass   6: suminf.    1.02799 (12) obj. -6.51639 iterations 17
Cbc0038I Pass   7: suminf.    1.34460 (17) obj. -4.79001 iterations 42
Cbc0038I Pass   8: suminf.    0.61990 (5) obj. -4.79001 iterations 11
Cbc0038I Pass   9: suminf.    0.40190 (4) obj. -4.79001 iterations 4
Cbc0038I Pass  10: suminf.    0.55727 (4) obj. -4.79001 iterations 14
Cbc0038I Pass  11: suminf.    4.42384 (24) obj. -4.79001 iterations 34
Cbc0038I Pass  12: suminf.    2.51230 (22) obj. -4.79001 iterations 13
Cbc0038I Pass  13: suminf.    1.53122 (10) obj. -4.79001 iterations 16
Cbc0038I Pass  14: suminf.    1.38366 (11) obj. -4.79001 iterations 11
Cbc0038I Pass  15: suminf.    1.29698 (7) obj. -4.79001 iterations 23
Cbc0038I Pass  16: suminf.    0.79439 (6) obj. -4.79001 iterations 11
Cbc0038I Pass  17: suminf.    1.68401 (8) obj. -4.79001 iterations 15
Cbc0038I Pass  18: suminf.    2.14558 (14) obj. -4.79001 iterations 35
Cbc0038I Pass  19: suminf.    1.95041 (16) obj. -4.79001 iterations 11
Cbc0038I Pass  20: suminf.    1.38087 (6) obj. -4.79001 iterations 26
Cbc0038I Pass  21: suminf.    1.12068 (11) obj. -4.79001 iterations 17
Cbc0038I Pass  22: suminf.    2.50417 (10) obj. -4.79001 iterations 11
Cbc0038I Pass  23: suminf.    1.86920 (11) obj. -4.79001 iterations 6
Cbc0038I Pass  24: suminf.    2.50417 (10) obj. -4.79001 iterations 9
Cbc0038I Pass  25: suminf.    1.88089 (12) obj. -4.79001 iterations 23
Cbc0038I Pass  26: suminf.    1.68975 (10) obj. -5.12506 iterations 5
Cbc0038I Pass  27: suminf.    1.47559 (7) obj. -4.79001 iterations 20
Cbc0038I Pass  28: suminf.    0.84825 (9) obj. -4.79001 iterations 10
Cbc0038I Pass  29: suminf.    1.68401 (8) obj. -4.79001 iterations 14
Cbc0038I Pass  30: suminf.    0.79439 (6) obj. -4.79001 iterations 7
Cbc0038I Pass  31: suminf.    1.68401 (8) obj. -4.79001 iterations 12
Cbc0038I Pass  32: suminf.    2.32802 (14) obj. -4.79001 iterations 22
Cbc0038I Pass  33: suminf.    2.32802 (14) obj. -4.79001 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 120 columns, reduced to 39 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -0.59335 to -1.28406 (0.08 seconds)
Cbc0038I Round again with cutoff of -12.3438
Cbc0038I Pass  33: suminf.    2.82012 (29) obj. -26.2362 iterations 0
Cbc0038I Pass  34: suminf.    2.82012 (29) obj. -26.2362 iterations 1
Cbc0038I Pass  35: suminf.    1.69207 (19) obj. -15.5668 iterations 10
Cbc0038I Pass  36: suminf.    3.21794 (21) obj. -12.3438 iterations 58
Cbc0038I Pass  37: suminf.    3.21794 (21) obj. -12.3438 iterations 0
Cbc0038I Pass  38: suminf.    2.16152 (10) obj. -12.3438 iterations 37
Cbc0038I Pass  39: suminf.    2.11659 (15) obj. -12.3438 iterations 9
Cbc0038I Pass  40: suminf.    2.30040 (14) obj. -12.3438 iterations 18
Cbc0038I Pass  41: suminf.    2.03435 (14) obj. -12.3438 iterations 12
Cbc0038I Pass  42: suminf.    2.30040 (14) obj. -12.3438 iterations 18
Cbc0038I Pass  43: suminf.    2.86619 (17) obj. -12.3438 iterations 20
Cbc0038I Pass  44: suminf.    2.70454 (18) obj. -12.3438 iterations 16
Cbc0038I Pass  45: suminf.    2.30658 (11) obj. -12.3438 iterations 22
Cbc0038I Pass  46: suminf.    1.79121 (11) obj. -12.3438 iterations 9
Cbc0038I Pass  47: suminf.    3.24977 (13) obj. -12.3438 iterations 9
Cbc0038I Pass  48: suminf.    2.52667 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  49: suminf.    2.46649 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  50: suminf.    3.18415 (13) obj. -12.3438 iterations 8
Cbc0038I Pass  51: suminf.    2.45612 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  52: suminf.    2.39264 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  53: suminf.    3.24977 (13) obj. -12.3438 iterations 8
Cbc0038I Pass  54: suminf.    2.52667 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  55: suminf.    2.46649 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  56: suminf.    3.18415 (13) obj. -12.3438 iterations 8
Cbc0038I Pass  57: suminf.    2.45612 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  58: suminf.    2.39264 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  59: suminf.    3.24977 (13) obj. -12.3438 iterations 8
Cbc0038I Pass  60: suminf.    2.52667 (11) obj. -12.3438 iterations 1
Cbc0038I Pass  61: suminf.    2.46649 (11) obj. -12.3438 iterations 5
Cbc0038I Pass  62: suminf.    3.18415 (13) obj. -12.3438 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 63 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -1.28406 - took 0.11 seconds
Cbc0012I Integer solution of -1.28406 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 109 rows 120 columns, reduced to 20 rows 24 columns
Cbc0031I 57 added rows had average density of 56.087719
Cbc0013I At root node, 57 cuts changed objective from -42.559006 to -12.714798 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12289 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1716 row cuts average 112.7 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 59 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 442 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1398 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 412 row cuts average 61.8 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 184 row cuts average 13.3 elements, 0 column cuts (0 active)  in 0.558 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -1.28406 best solution, best possible -12.714798 (2.81 seconds)
Cbc0012I Integer solution of -3.57235 found by rounding after 5994 iterations and 1 nodes (2.82 seconds)
Cbc0004I Integer solution of -4.6571 found after 6133 iterations and 1 nodes (2.92 seconds)
Cbc0010I After 4 nodes, 3 on tree, -4.6571 best solution, best possible -11.947853 (3.57 seconds)
Cbc0010I After 14 nodes, 8 on tree, -4.6571 best solution, best possible -11.947853 (4.29 seconds)
Cbc0010I After 33 nodes, 11 on tree, -4.6571 best solution, best possible -11.947853 (5.02 seconds)
Cbc0038I Full problem 109 rows 120 columns, reduced to 62 rows 75 columns
Cbc0010I After 41 nodes, 10 on tree, -4.6571 best solution, best possible -11.947853 (5.77 seconds)
Cbc0010I After 70 nodes, 10 on tree, -4.6571 best solution, best possible -11.947853 (6.51 seconds)
Cbc0038I Full problem 109 rows 120 columns, reduced to 35 rows 46 columns
Cbc0010I After 98 nodes, 3 on tree, -4.6571 best solution, best possible -11.947853 (7.66 seconds)
Cbc0010I After 110 nodes, 6 on tree, -4.6571 best solution, best possible -11.947853 (8.37 seconds)
Cbc0010I After 130 nodes, 6 on tree, -4.6571 best solution, best possible -11.947853 (9.13 seconds)
Cbc0010I After 151 nodes, 4 on tree, -4.6571 best solution, best possible -11.947853 (9.84 seconds)
Cbc0010I After 160 nodes, 5 on tree, -4.6571 best solution, best possible -11.947853 (10.57 seconds)
Cbc0010I After 175 nodes, 7 on tree, -4.6571 best solution, best possible -11.947853 (11.31 seconds)
Cbc0001I Search completed - best objective -4.6571, took 14852 iterations and 194 nodes (11.76 seconds)
Cbc0032I Strong branching done 2204 times (40762 iterations), fathomed 16 nodes and fixed 19 variables
Cbc0035I Maximum depth 20, 457 variables fixed on reduced cost
Total time (CPU seconds):       8.59   (Wallclock seconds):       11.78

