Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 4.57781e-06 - average 5.14361e-08, 6 fixed columns
Coin0506I Presolve 78 (-11) rows, 45 (-6) columns and 238 (-34) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 4.8188796 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Coin0511I After Postsolve, objective 36.594246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Coin0511I After Postsolve, objective 36.594246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.59424587 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.4202
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.18389 iterations 28
Cbc0038I Solution found of 9.18389
Cbc0038I Relaxing continuous gives 9.18389
Cbc0038I Rounding solution of 1.08483 is better than previous of 9.18389

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 1.08483 to -4.84352 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.01868
Cbc0038I Pass   2: suminf.    1.90919 (12) obj. -8.01868 iterations 9
Cbc0038I Pass   3: suminf.    2.09648 (9) obj. -8.01868 iterations 18
Cbc0038I Pass   4: suminf.    2.04412 (8) obj. -8.01868 iterations 2
Cbc0038I Pass   5: suminf.    1.56479 (5) obj. -8.01868 iterations 8
Cbc0038I Pass   6: suminf.    1.39674 (5) obj. -8.01868 iterations 1
Cbc0038I Pass   7: suminf.    1.39674 (5) obj. -8.01868 iterations 0
Cbc0038I Pass   8: suminf.    1.70790 (6) obj. -8.01868 iterations 5
Cbc0038I Pass   9: suminf.    1.69625 (7) obj. -8.01868 iterations 1
Cbc0038I Pass  10: suminf.    2.18033 (8) obj. -8.01868 iterations 6
Cbc0038I Pass  11: suminf.    1.89527 (7) obj. -8.01868 iterations 1
Cbc0038I Pass  12: suminf.    1.94485 (5) obj. -8.01868 iterations 8
Cbc0038I Pass  13: suminf.    1.64425 (7) obj. -8.01868 iterations 5
Cbc0038I Pass  14: suminf.    2.21956 (9) obj. -8.01868 iterations 6
Cbc0038I Pass  15: suminf.    3.12496 (9) obj. -8.01868 iterations 9
Cbc0038I Pass  16: suminf.    2.07591 (7) obj. -8.01868 iterations 7
Cbc0038I Pass  17: suminf.    2.07591 (7) obj. -8.01868 iterations 0
Cbc0038I Pass  18: suminf.    1.78510 (6) obj. -8.01868 iterations 7
Cbc0038I Pass  19: suminf.    1.50058 (4) obj. -8.01868 iterations 3
Cbc0038I Pass  20: suminf.    1.48669 (5) obj. -8.01868 iterations 2
Cbc0038I Pass  21: suminf.    1.72085 (5) obj. -8.01868 iterations 7
Cbc0038I Pass  22: suminf.    1.46010 (4) obj. -8.01868 iterations 2
Cbc0038I Pass  23: suminf.    1.46010 (4) obj. -8.01868 iterations 0
Cbc0038I Pass  24: suminf.    1.75234 (5) obj. -8.01868 iterations 2
Cbc0038I Pass  25: suminf.    1.64425 (7) obj. -8.01868 iterations 2
Cbc0038I Pass  26: suminf.    2.21956 (9) obj. -8.01868 iterations 6
Cbc0038I Pass  27: suminf.    1.89527 (7) obj. -8.01868 iterations 2
Cbc0038I Pass  28: suminf.    1.94485 (5) obj. -8.01868 iterations 8
Cbc0038I Pass  29: suminf.    1.46499 (4) obj. -8.01868 iterations 10
Cbc0038I Pass  30: suminf.    1.20429 (4) obj. -8.01868 iterations 7
Cbc0038I Pass  31: suminf.    1.20429 (4) obj. -8.01868 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -4.84352 - took 0.04 seconds
Cbc0012I Integer solution of -4.84352 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 53 rows 31 columns
Cbc0031I 18 added rows had average density of 43.055556
Cbc0013I At root node, 18 cuts changed objective from -36.594246 to -25.839127 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7733 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1836 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 49.9 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0004I Integer solution of -4.967959 found after 6277 iterations and 34 nodes (0.64 seconds)
Cbc0012I Integer solution of -5.756939 found by rounding after 6283 iterations and 35 nodes (0.64 seconds)
Cbc0012I Integer solution of -6.49195 found by rounding after 6335 iterations and 37 nodes (0.64 seconds)
Cbc0001I Search completed - best objective -6.491950000000003, took 6675 iterations and 44 nodes (0.65 seconds)
Cbc0032I Strong branching done 500 times (8160 iterations), fathomed 3 nodes and fixed 24 variables
Cbc0035I Maximum depth 12, 150 variables fixed on reduced cost
Total time (CPU seconds):       0.64   (Wallclock seconds):       0.66

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-35) rows, 80 (-22) columns and 971 (-607) elements
Clp1000I sum of infeasibilities 6.272e-08 - average 9.08986e-10, 41 fixed columns
Coin0506I Presolve 28 (-41) rows, 39 (-41) columns and 128 (-843) elements
Clp0006I 0  Obj -17.915344 Dual inf 1.1218993 (39)
Clp0029I End of values pass after 39 iterations
Clp0014I Perturbing problem by 0.001% of 2.0404016 - largest nonzero change 1.4093667e-05 ( 0.00068614409%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value -8.9765475
Clp0000I Optimal - objective value -8.9765475
Coin0511I After Postsolve, objective -8.9765475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -8.9765475 Dual inf 23.466584 (30)
Clp0014I Perturbing problem by 0.001% of 4.093567 - largest nonzero change 1.0113992e-05 ( 0.00068614409%) - largest zero change 2.8254223e-05
Clp0000I Optimal - objective value 46.354578
Clp0000I Optimal - objective value 46.354578
Clp0000I Optimal - objective value 46.354578
Coin0511I After Postsolve, objective 46.354578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.35457752 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 80 columns (80 integer (80 of which binary)) and 975 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 5.13262
Cbc0038I Pass   1: suminf.    3.32175 (21) obj. -39.4002 iterations 13
Cbc0038I Pass   2: suminf.    3.32175 (21) obj. -39.4002 iterations 3
Cbc0038I Solution found of -0.588819
Cbc0038I Rounding solution of -1.20237 is better than previous of -0.588819

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -5.24488
Cbc0038I Pass   3: suminf.    3.32175 (21) obj. -39.4002 iterations 0
Cbc0038I Pass   4: suminf.    3.32175 (21) obj. -39.4002 iterations 1
Cbc0038I Pass   5: suminf.    0.42328 (1) obj. -5.24488 iterations 24
Cbc0038I Pass   6: suminf.    0.22000 (1) obj. -9.16882 iterations 1
Cbc0038I Pass   7: suminf.    1.09218 (9) obj. -6.29938 iterations 17
Cbc0038I Pass   8: suminf.    1.01542 (7) obj. -6.29514 iterations 3
Cbc0038I Pass   9: suminf.    0.61218 (4) obj. -5.24488 iterations 15
Cbc0038I Pass  10: suminf.    0.61218 (4) obj. -5.24488 iterations 0
Cbc0038I Pass  11: suminf.    1.19188 (5) obj. -5.24488 iterations 6
Cbc0038I Pass  12: suminf.    1.19188 (5) obj. -5.24488 iterations 0
Cbc0038I Pass  13: suminf.    0.99225 (4) obj. -5.24488 iterations 7
Cbc0038I Pass  14: suminf.    0.99225 (4) obj. -5.24488 iterations 4
Cbc0038I Pass  15: suminf.    1.05038 (4) obj. -5.24488 iterations 5
Cbc0038I Pass  16: suminf.    1.05038 (4) obj. -5.24488 iterations 3
Cbc0038I Pass  17: suminf.    0.99225 (4) obj. -5.24488 iterations 5
Cbc0038I Pass  18: suminf.    2.05331 (10) obj. -5.24488 iterations 18
Cbc0038I Pass  19: suminf.    1.13085 (6) obj. -5.24488 iterations 12
Cbc0038I Pass  20: suminf.    0.96072 (6) obj. -5.24488 iterations 6
Cbc0038I Pass  21: suminf.    1.28461 (5) obj. -5.24488 iterations 7
Cbc0038I Pass  22: suminf.    1.28461 (5) obj. -5.24488 iterations 3
Cbc0038I Pass  23: suminf.    1.14667 (6) obj. -5.24488 iterations 11
Cbc0038I Pass  24: suminf.    1.00392 (5) obj. -5.24488 iterations 7
Cbc0038I Pass  25: suminf.    1.45408 (11) obj. -8.20762 iterations 32
Cbc0038I Pass  26: suminf.    0.72675 (6) obj. -7.81547 iterations 6
Cbc0038I Pass  27: suminf.    0.73751 (4) obj. -5.24488 iterations 9
Cbc0038I Pass  28: suminf.    0.70799 (4) obj. -5.24488 iterations 5
Cbc0038I Pass  29: suminf.    0.83840 (3) obj. -5.24488 iterations 7
Cbc0038I Pass  30: suminf.    0.63203 (3) obj. -6.46299 iterations 2
Cbc0038I Pass  31: suminf.    0.87565 (3) obj. -5.24488 iterations 3
Cbc0038I Pass  32: suminf.    0.84024 (6) obj. -5.24488 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 19 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -0.588819 to -3.88595 (0.03 seconds)
Cbc0038I Round again with cutoff of -12.5212
Cbc0038I Pass  32: suminf.    3.32175 (21) obj. -39.4002 iterations 0
Cbc0038I Pass  33: suminf.    3.32175 (21) obj. -39.4002 iterations 1
Cbc0038I Pass  34: suminf.    0.85532 (3) obj. -12.5212 iterations 25
Cbc0038I Pass  35: suminf.    0.39391 (2) obj. -13.2993 iterations 4
Cbc0038I Pass  36: suminf.    0.97454 (5) obj. -12.5212 iterations 15
Cbc0038I Pass  37: suminf.    0.85035 (5) obj. -13.018 iterations 7
Cbc0038I Pass  38: suminf.    1.34429 (5) obj. -12.5212 iterations 10
Cbc0038I Pass  39: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  40: suminf.    1.12752 (5) obj. -12.5212 iterations 5
Cbc0038I Pass  41: suminf.    1.50540 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  42: suminf.    1.17220 (5) obj. -13.854 iterations 3
Cbc0038I Pass  43: suminf.    1.34429 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  44: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  45: suminf.    1.12752 (5) obj. -12.5212 iterations 5
Cbc0038I Pass  46: suminf.    1.50540 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  47: suminf.    1.17220 (5) obj. -13.854 iterations 3
Cbc0038I Pass  48: suminf.    1.34429 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  49: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  50: suminf.    1.12752 (5) obj. -12.5212 iterations 5
Cbc0038I Pass  51: suminf.    1.50540 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  52: suminf.    1.17220 (5) obj. -13.854 iterations 3
Cbc0038I Pass  53: suminf.    1.34429 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  54: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  55: suminf.    1.12752 (5) obj. -12.5212 iterations 6
Cbc0038I Pass  56: suminf.    1.50540 (5) obj. -12.5212 iterations 8
Cbc0038I Pass  57: suminf.    1.17220 (5) obj. -13.854 iterations 4
Cbc0038I Pass  58: suminf.    1.34429 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  59: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  60: suminf.    1.12752 (5) obj. -12.5212 iterations 5
Cbc0038I Pass  61: suminf.    1.50540 (5) obj. -12.5212 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3.88595 - took 0.02 seconds
Cbc0012I Integer solution of -3.885949 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 69 rows 80 columns, reduced to 5 rows 5 columns
Cbc0031I 46 added rows had average density of 36.130435
Cbc0013I At root node, 46 cuts changed objective from -41.626541 to -12.021074 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8045 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1427 row cuts average 77.7 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 60 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1130 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 378 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 114 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.632 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3.885949 best solution, best possible -12.021074 (1.82 seconds)
Cbc0012I Integer solution of -4.11626 found by DiveCoefficient after 4679 iterations and 7 nodes (2.33 seconds)
Cbc0012I Integer solution of -5.756939 found by rounding after 4707 iterations and 9 nodes (2.38 seconds)
Cbc0012I Integer solution of -6.49195 found by rounding after 4709 iterations and 10 nodes (2.39 seconds)
Cbc0010I After 16 nodes, 4 on tree, -6.49195 best solution, best possible -12.021074 (2.58 seconds)
Cbc0001I Search completed - best objective -6.491950000000003, took 5154 iterations and 20 nodes (2.58 seconds)
Cbc0032I Strong branching done 400 times (7437 iterations), fathomed 4 nodes and fixed 0 variables
Cbc0035I Maximum depth 8, 32 variables fixed on reduced cost
Total time (CPU seconds):       1.84   (Wallclock seconds):       2.60

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 89 (-16) rows, 51 (-2) columns and 272 (-31) elements
Clp1000I sum of infeasibilities 4.57781e-06 - average 5.14361e-08, 6 fixed columns
Coin0506I Presolve 78 (-11) rows, 45 (-6) columns and 238 (-34) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 4.8188796 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Coin0511I After Postsolve, objective 36.594246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Clp0000I Optimal - objective value 36.594246
Coin0511I After Postsolve, objective 36.594246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 36.59424587 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 89 rows, 51 columns (50 integer (50 of which binary)) and 272 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.656%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 8.4202
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.18389 iterations 28
Cbc0038I Solution found of 9.18389
Cbc0038I Relaxing continuous gives 9.18389
Cbc0038I Rounding solution of 1.08483 is better than previous of 9.18389

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 53 rows 31 columns
Cbc0038I Mini branch and bound improved solution from 1.08483 to -4.84352 (0.02 seconds)
Cbc0038I Round again with cutoff of -8.01868
Cbc0038I Pass   2: suminf.    1.90919 (12) obj. -8.01868 iterations 9
Cbc0038I Pass   3: suminf.    2.09648 (9) obj. -8.01868 iterations 18
Cbc0038I Pass   4: suminf.    2.04412 (8) obj. -8.01868 iterations 2
Cbc0038I Pass   5: suminf.    1.56479 (5) obj. -8.01868 iterations 8
Cbc0038I Pass   6: suminf.    1.39674 (5) obj. -8.01868 iterations 1
Cbc0038I Pass   7: suminf.    1.39674 (5) obj. -8.01868 iterations 0
Cbc0038I Pass   8: suminf.    1.70790 (6) obj. -8.01868 iterations 5
Cbc0038I Pass   9: suminf.    1.69625 (7) obj. -8.01868 iterations 1
Cbc0038I Pass  10: suminf.    2.18033 (8) obj. -8.01868 iterations 6
Cbc0038I Pass  11: suminf.    1.89527 (7) obj. -8.01868 iterations 1
Cbc0038I Pass  12: suminf.    1.94485 (5) obj. -8.01868 iterations 8
Cbc0038I Pass  13: suminf.    1.64425 (7) obj. -8.01868 iterations 5
Cbc0038I Pass  14: suminf.    2.21956 (9) obj. -8.01868 iterations 6
Cbc0038I Pass  15: suminf.    3.12496 (9) obj. -8.01868 iterations 9
Cbc0038I Pass  16: suminf.    2.07591 (7) obj. -8.01868 iterations 7
Cbc0038I Pass  17: suminf.    2.07591 (7) obj. -8.01868 iterations 0
Cbc0038I Pass  18: suminf.    1.78510 (6) obj. -8.01868 iterations 7
Cbc0038I Pass  19: suminf.    1.50058 (4) obj. -8.01868 iterations 3
Cbc0038I Pass  20: suminf.    1.48669 (5) obj. -8.01868 iterations 2
Cbc0038I Pass  21: suminf.    1.72085 (5) obj. -8.01868 iterations 7
Cbc0038I Pass  22: suminf.    1.46010 (4) obj. -8.01868 iterations 2
Cbc0038I Pass  23: suminf.    1.46010 (4) obj. -8.01868 iterations 0
Cbc0038I Pass  24: suminf.    1.75234 (5) obj. -8.01868 iterations 2
Cbc0038I Pass  25: suminf.    1.64425 (7) obj. -8.01868 iterations 2
Cbc0038I Pass  26: suminf.    2.21956 (9) obj. -8.01868 iterations 6
Cbc0038I Pass  27: suminf.    1.89527 (7) obj. -8.01868 iterations 2
Cbc0038I Pass  28: suminf.    1.94485 (5) obj. -8.01868 iterations 8
Cbc0038I Pass  29: suminf.    1.46499 (4) obj. -8.01868 iterations 10
Cbc0038I Pass  30: suminf.    1.20429 (4) obj. -8.01868 iterations 7
Cbc0038I Pass  31: suminf.    1.20429 (4) obj. -8.01868 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 89 rows 51 columns, reduced to 55 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -4.84352 - took 0.07 seconds
Cbc0012I Integer solution of -4.84352 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 89 rows 51 columns, reduced to 53 rows 31 columns
Cbc0031I 18 added rows had average density of 43.055556
Cbc0013I At root node, 18 cuts changed objective from -36.594246 to -25.839127 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7733 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1836 row cuts average 50.9 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 141 row cuts average 49.9 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0004I Integer solution of -4.967959 found after 6277 iterations and 34 nodes (0.62 seconds)
Cbc0012I Integer solution of -5.756939 found by rounding after 6283 iterations and 35 nodes (0.62 seconds)
Cbc0012I Integer solution of -6.49195 found by rounding after 6335 iterations and 37 nodes (0.62 seconds)
Cbc0001I Search completed - best objective -6.491950000000003, took 6675 iterations and 44 nodes (0.63 seconds)
Cbc0032I Strong branching done 500 times (8160 iterations), fathomed 3 nodes and fixed 24 variables
Cbc0035I Maximum depth 12, 150 variables fixed on reduced cost
Total time (CPU seconds):       0.65   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 69 (-36) rows, 80 (-23) columns and 971 (-608) elements
Clp1000I sum of infeasibilities 6.272e-08 - average 9.08986e-10, 41 fixed columns
Coin0506I Presolve 28 (-41) rows, 39 (-41) columns and 128 (-843) elements
Clp0029I End of values pass after 39 iterations
Clp0014I Perturbing problem by 0.001% of 2.0404016 - largest nonzero change 1.4093667e-05 ( 0.00068614409%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value -8.9765475
Clp0000I Optimal - objective value -8.9765475
Coin0511I After Postsolve, objective -8.9765475, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.093567 - largest nonzero change 1.0113992e-05 ( 0.00068614409%) - largest zero change 2.8254223e-05
Clp0000I Optimal - objective value 46.354578
Clp0000I Optimal - objective value 46.354578
Clp0000I Optimal - objective value 46.354578
Coin0511I After Postsolve, objective 46.354578, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.35457752 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 69 rows, 80 columns (80 integer (80 of which binary)) and 975 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 5.13262
Cbc0038I Pass   1: suminf.    3.32175 (21) obj. -39.4002 iterations 13
Cbc0038I Pass   2: suminf.    3.32175 (21) obj. -39.4002 iterations 3
Cbc0038I Solution found of -0.588819
Cbc0038I Rounding solution of -1.20237 is better than previous of -0.588819

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 8 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -5.24488
Cbc0038I Pass   3: suminf.    3.32175 (21) obj. -39.4002 iterations 0
Cbc0038I Pass   4: suminf.    3.32175 (21) obj. -39.4002 iterations 1
Cbc0038I Pass   5: suminf.    0.42328 (1) obj. -5.24488 iterations 24
Cbc0038I Pass   6: suminf.    0.22000 (1) obj. -9.16882 iterations 1
Cbc0038I Pass   7: suminf.    1.09218 (9) obj. -6.29938 iterations 17
Cbc0038I Pass   8: suminf.    1.01542 (7) obj. -6.29514 iterations 3
Cbc0038I Pass   9: suminf.    0.61218 (4) obj. -5.24488 iterations 15
Cbc0038I Pass  10: suminf.    0.61218 (4) obj. -5.24488 iterations 0
Cbc0038I Pass  11: suminf.    1.19188 (5) obj. -5.24488 iterations 6
Cbc0038I Pass  12: suminf.    1.19188 (5) obj. -5.24488 iterations 0
Cbc0038I Pass  13: suminf.    0.99225 (4) obj. -5.24488 iterations 7
Cbc0038I Pass  14: suminf.    0.99225 (4) obj. -5.24488 iterations 4
Cbc0038I Pass  15: suminf.    1.05038 (4) obj. -5.24488 iterations 5
Cbc0038I Pass  16: suminf.    1.05038 (4) obj. -5.24488 iterations 3
Cbc0038I Pass  17: suminf.    0.99225 (4) obj. -5.24488 iterations 5
Cbc0038I Pass  18: suminf.    2.05331 (10) obj. -5.24488 iterations 18
Cbc0038I Pass  19: suminf.    1.13085 (6) obj. -5.24488 iterations 12
Cbc0038I Pass  20: suminf.    0.96072 (6) obj. -5.24488 iterations 6
Cbc0038I Pass  21: suminf.    1.28461 (5) obj. -5.24488 iterations 7
Cbc0038I Pass  22: suminf.    1.28461 (5) obj. -5.24488 iterations 3
Cbc0038I Pass  23: suminf.    1.14667 (6) obj. -5.24488 iterations 11
Cbc0038I Pass  24: suminf.    1.00392 (5) obj. -5.24488 iterations 7
Cbc0038I Pass  25: suminf.    1.45408 (11) obj. -8.20762 iterations 32
Cbc0038I Pass  26: suminf.    0.72675 (6) obj. -7.81547 iterations 6
Cbc0038I Pass  27: suminf.    0.73751 (4) obj. -5.24488 iterations 9
Cbc0038I Pass  28: suminf.    0.70799 (4) obj. -5.24488 iterations 5
Cbc0038I Pass  29: suminf.    0.83840 (3) obj. -5.24488 iterations 7
Cbc0038I Pass  30: suminf.    0.63203 (3) obj. -6.46299 iterations 2
Cbc0038I Pass  31: suminf.    0.87565 (3) obj. -5.24488 iterations 3
Cbc0038I Pass  32: suminf.    0.84024 (6) obj. -5.24488 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 19 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -0.588819 to -3.88595 (0.03 seconds)
Cbc0038I Round again with cutoff of -12.5212
Cbc0038I Pass  32: suminf.    3.32175 (21) obj. -39.4002 iterations 0
Cbc0038I Pass  33: suminf.    3.32175 (21) obj. -39.4002 iterations 1
Cbc0038I Pass  34: suminf.    0.85532 (3) obj. -12.5212 iterations 25
Cbc0038I Pass  35: suminf.    0.39391 (2) obj. -13.2993 iterations 4
Cbc0038I Pass  36: suminf.    0.97454 (5) obj. -12.5212 iterations 15
Cbc0038I Pass  37: suminf.    0.85035 (5) obj. -13.018 iterations 7
Cbc0038I Pass  38: suminf.    1.34429 (5) obj. -12.5212 iterations 10
Cbc0038I Pass  39: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  40: suminf.    1.12752 (5) obj. -12.5212 iterations 5
Cbc0038I Pass  41: suminf.    1.50540 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  42: suminf.    1.17220 (5) obj. -13.854 iterations 3
Cbc0038I Pass  43: suminf.    1.34429 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  44: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  45: suminf.    1.12752 (5) obj. -12.5212 iterations 5
Cbc0038I Pass  46: suminf.    1.50540 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  47: suminf.    1.17220 (5) obj. -13.854 iterations 3
Cbc0038I Pass  48: suminf.    1.34429 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  49: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  50: suminf.    1.12752 (5) obj. -12.5212 iterations 5
Cbc0038I Pass  51: suminf.    1.50540 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  52: suminf.    1.17220 (5) obj. -13.854 iterations 3
Cbc0038I Pass  53: suminf.    1.34429 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  54: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  55: suminf.    1.12752 (5) obj. -12.5212 iterations 6
Cbc0038I Pass  56: suminf.    1.50540 (5) obj. -12.5212 iterations 8
Cbc0038I Pass  57: suminf.    1.17220 (5) obj. -13.854 iterations 4
Cbc0038I Pass  58: suminf.    1.34429 (5) obj. -12.5212 iterations 7
Cbc0038I Pass  59: suminf.    1.19369 (5) obj. -12.5212 iterations 2
Cbc0038I Pass  60: suminf.    1.12752 (5) obj. -12.5212 iterations 5
Cbc0038I Pass  61: suminf.    1.50540 (5) obj. -12.5212 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 69 rows 80 columns, reduced to 5 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -3.88595 - took 0.02 seconds
Cbc0012I Integer solution of -3.885949 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 69 rows 80 columns, reduced to 5 rows 5 columns
Cbc0031I 46 added rows had average density of 36.130435
Cbc0013I At root node, 46 cuts changed objective from -41.626541 to -12.021074 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8045 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1427 row cuts average 77.7 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 2.6 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 60 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1130 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 378 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 114 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.699 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -3.885949 best solution, best possible -12.021074 (2.04 seconds)
Cbc0012I Integer solution of -4.11626 found by DiveCoefficient after 4679 iterations and 7 nodes (2.58 seconds)
Cbc0012I Integer solution of -5.756939 found by rounding after 4707 iterations and 9 nodes (2.63 seconds)
Cbc0012I Integer solution of -6.49195 found by rounding after 4709 iterations and 10 nodes (2.64 seconds)
Cbc0010I After 11 nodes, 8 on tree, -6.49195 best solution, best possible -12.021074 (2.74 seconds)
Cbc0001I Search completed - best objective -6.491950000000003, took 5154 iterations and 20 nodes (2.85 seconds)
Cbc0032I Strong branching done 400 times (7437 iterations), fathomed 4 nodes and fixed 0 variables
Cbc0035I Maximum depth 8, 32 variables fixed on reduced cost
Total time (CPU seconds):       2.00   (Wallclock seconds):       2.87

