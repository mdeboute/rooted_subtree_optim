Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.33091e-05 - average 1.03171e-07, 21 fixed columns
Coin0506I Presolve 89 (-40) rows, 54 (-22) columns and 279 (-123) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 2.7488041 - largest nonzero change 0 ( 0%) - largest zero change 1.919719e-05
Clp0000I Optimal - objective value 42.104076
Clp0000I Optimal - objective value 42.104076
Coin0511I After Postsolve, objective 42.104076, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.104076
Clp0000I Optimal - objective value 42.104076
Clp0000I Optimal - objective value 42.104076
Coin0511I After Postsolve, objective 42.104076, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.10407628 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.12281
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.24499 iterations 48
Cbc0038I Solution found of 9.24499
Cbc0038I Relaxing continuous gives 9.24499
Cbc0038I Rounding solution of -7.832 is better than previous of 9.24499

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 48 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.832 to -20.0707 (0.04 seconds)
Cbc0038I Round again with cutoff of -22.2741
Cbc0038I Pass   2: suminf.    3.52841 (13) obj. -22.2741 iterations 20
Cbc0038I Pass   3: suminf.    3.53194 (14) obj. -22.2741 iterations 2
Cbc0038I Pass   4: suminf.    0.82754 (3) obj. -22.2741 iterations 21
Cbc0038I Pass   5: suminf.    0.43871 (2) obj. -22.2741 iterations 4
Cbc0038I Pass   6: suminf.    0.50946 (4) obj. -22.2741 iterations 3
Cbc0038I Pass   7: suminf.    2.33402 (6) obj. -22.2741 iterations 7
Cbc0038I Pass   8: suminf.    1.01161 (4) obj. -22.2741 iterations 2
Cbc0038I Pass   9: suminf.    0.56510 (3) obj. -22.2741 iterations 4
Cbc0038I Pass  10: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  11: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I Pass  12: suminf.    0.86458 (4) obj. -22.2741 iterations 4
Cbc0038I Pass  13: suminf.    0.69004 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  14: suminf.    0.56510 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  15: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  16: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I Pass  17: suminf.    0.86458 (4) obj. -22.2741 iterations 4
Cbc0038I Pass  18: suminf.    0.69004 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  19: suminf.    0.56510 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  20: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  21: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I Pass  22: suminf.    0.86458 (4) obj. -22.2741 iterations 4
Cbc0038I Pass  23: suminf.    0.69004 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  24: suminf.    0.56510 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  25: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  26: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I Pass  27: suminf.    0.86458 (4) obj. -22.2741 iterations 4
Cbc0038I Pass  28: suminf.    0.69004 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  29: suminf.    0.56510 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  30: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  31: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 50 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -20.0707 - took 0.05 seconds
Cbc0012I Integer solution of -20.07072 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 48 rows 31 columns
Cbc0031I 20 added rows had average density of 65.1
Cbc0013I At root node, 20 cuts changed objective from -42.104076 to -34.091272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8372 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1754 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0010I After 5 nodes, 6 on tree, -20.07072 best solution, best possible -34.091272 (0.68 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 5 rows 7 columns
Cbc0001I Search completed - best objective -20.07071999999999, took 7073 iterations and 48 nodes (0.83 seconds)
Cbc0032I Strong branching done 742 times (12371 iterations), fathomed 6 nodes and fixed 33 variables
Cbc0035I Maximum depth 10, 152 variables fixed on reduced cost
Total time (CPU seconds):       0.81   (Wallclock seconds):       0.84

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 113 (-39) columns and 1728 (-1575) elements
Clp1000I sum of infeasibilities 4.3222e-08 - average 4.69804e-10, 68 fixed columns
Coin0506I Presolve 27 (-65) rows, 45 (-68) columns and 138 (-1590) elements
Clp0006I 0  Obj 5.9459915 Dual inf 0.70819139 (45)
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 3.4809154 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 6.6322469
Clp0000I Optimal - objective value 6.6322469
Coin0511I After Postsolve, objective 6.6322469, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 6.6322469 Dual inf 44.485772 (38)
Clp0014I Perturbing problem by 0.001% of 1.981461 - largest nonzero change 2.9402427e-05 ( 0.0015420975%) - largest zero change 2.9674539e-05
Clp0000I Optimal - objective value 64.125132
Clp0000I Optimal - objective value 64.125132
Clp0000I Optimal - objective value 64.125132
Coin0511I After Postsolve, objective 64.125132, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.12513167 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 113 columns (113 integer (113 of which binary)) and 1738 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.249%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 3.76423
Cbc0038I Pass   1: suminf.    3.43829 (28) obj. -47.199 iterations 9
Cbc0038I Pass   2: suminf.    2.59150 (24) obj. -44.9029 iterations 3
Cbc0038I Pass   3: suminf.    1.05148 (11) obj. -30.7955 iterations 13
Cbc0038I Solution found of -11.8541
Cbc0038I Rounding solution of -15.0982 is better than previous of -11.8541

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -18.5208
Cbc0038I Pass   4: suminf.    3.43829 (28) obj. -47.199 iterations 0
Cbc0038I Pass   5: suminf.    2.59150 (24) obj. -44.9029 iterations 12
Cbc0038I Pass   6: suminf.    1.05148 (11) obj. -30.7955 iterations 13
Cbc0038I Pass   7: suminf.    0.42592 (2) obj. -18.5208 iterations 10
Cbc0038I Pass   8: suminf.    0.16917 (2) obj. -20.8316 iterations 1
Cbc0038I Pass   9: suminf.    0.25925 (1) obj. -18.5208 iterations 2
Cbc0038I Pass  10: suminf.    0.10667 (1) obj. -19.8941 iterations 1
Cbc0038I Pass  11: suminf.    1.81983 (12) obj. -18.5208 iterations 23
Cbc0038I Pass  12: suminf.    1.68090 (12) obj. -18.5208 iterations 12
Cbc0038I Pass  13: suminf.    0.96209 (4) obj. -18.5208 iterations 13
Cbc0038I Pass  14: suminf.    0.50307 (4) obj. -19.3748 iterations 5
Cbc0038I Pass  15: suminf.    1.26721 (7) obj. -18.5208 iterations 9
Cbc0038I Pass  16: suminf.    1.24826 (7) obj. -18.5208 iterations 4
Cbc0038I Pass  17: suminf.    1.53049 (6) obj. -18.5208 iterations 10
Cbc0038I Pass  18: suminf.    1.22307 (6) obj. -18.5208 iterations 3
Cbc0038I Pass  19: suminf.    0.40665 (4) obj. -18.5208 iterations 8
Cbc0038I Pass  20: suminf.    0.22307 (2) obj. -19.3179 iterations 3
Cbc0038I Pass  21: suminf.    0.33658 (1) obj. -18.5208 iterations 2
Cbc0038I Pass  22: suminf.    1.85646 (11) obj. -18.5208 iterations 26
Cbc0038I Pass  23: suminf.    1.27614 (8) obj. -18.5208 iterations 17
Cbc0038I Pass  24: suminf.    0.95281 (5) obj. -18.5208 iterations 14
Cbc0038I Pass  25: suminf.    0.78207 (6) obj. -18.5208 iterations 5
Cbc0038I Pass  26: suminf.    0.69981 (4) obj. -18.5208 iterations 8
Cbc0038I Pass  27: suminf.    0.69981 (4) obj. -18.5208 iterations 3
Cbc0038I Pass  28: suminf.    0.69655 (4) obj. -18.5208 iterations 3
Cbc0038I Pass  29: suminf.    0.69655 (4) obj. -18.5208 iterations 2
Cbc0038I Pass  30: suminf.    1.02065 (5) obj. -18.5208 iterations 7
Cbc0038I Pass  31: suminf.    1.02065 (5) obj. -18.5208 iterations 3
Cbc0038I Pass  32: suminf.    1.27621 (10) obj. -18.5208 iterations 19
Cbc0038I Pass  33: suminf.    1.22856 (9) obj. -18.5208 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 9 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11.8541 to -16.2868 (0.06 seconds)
Cbc0038I Round again with cutoff of -24.6815
Cbc0038I Pass  33: suminf.    3.43829 (28) obj. -47.199 iterations 0
Cbc0038I Pass  34: suminf.    2.59150 (24) obj. -44.9029 iterations 12
Cbc0038I Pass  35: suminf.    0.35226 (5) obj. -24.6815 iterations 21
Cbc0038I Pass  36: suminf.    0.35226 (5) obj. -24.6815 iterations 0
Cbc0038I Pass  37: suminf.    1.25510 (6) obj. -24.6815 iterations 7
Cbc0038I Pass  38: suminf.    0.88247 (5) obj. -24.6815 iterations 3
Cbc0038I Pass  39: suminf.    0.63590 (4) obj. -24.6815 iterations 9
Cbc0038I Pass  40: suminf.    0.63590 (4) obj. -24.6815 iterations 1
Cbc0038I Pass  41: suminf.    0.60315 (4) obj. -24.6815 iterations 4
Cbc0038I Pass  42: suminf.    0.60315 (4) obj. -24.6815 iterations 2
Cbc0038I Pass  43: suminf.    0.66437 (5) obj. -24.6815 iterations 7
Cbc0038I Pass  44: suminf.    2.98293 (12) obj. -24.6815 iterations 20
Cbc0038I Pass  45: suminf.    0.80964 (7) obj. -26.008 iterations 15
Cbc0038I Pass  46: suminf.    0.63851 (4) obj. -24.6815 iterations 12
Cbc0038I Pass  47: suminf.    0.55372 (4) obj. -24.6815 iterations 3
Cbc0038I Pass  48: suminf.    0.89577 (4) obj. -24.6815 iterations 6
Cbc0038I Pass  49: suminf.    0.73095 (3) obj. -24.6815 iterations 7
Cbc0038I Pass  50: suminf.    0.49831 (4) obj. -26.4921 iterations 2
Cbc0038I Pass  51: suminf.    0.63590 (4) obj. -24.6815 iterations 5
Cbc0038I Pass  52: suminf.    0.63590 (4) obj. -24.6815 iterations 2
Cbc0038I Pass  53: suminf.    0.60315 (4) obj. -24.6815 iterations 3
Cbc0038I Pass  54: suminf.    0.60315 (4) obj. -24.6815 iterations 1
Cbc0038I Pass  55: suminf.    0.66437 (5) obj. -24.6815 iterations 6
Cbc0038I Pass  56: suminf.    1.28471 (9) obj. -24.6815 iterations 14
Cbc0038I Pass  57: suminf.    0.78622 (8) obj. -24.6815 iterations 9
Cbc0038I Pass  58: suminf.    1.02044 (5) obj. -24.6815 iterations 14
Cbc0038I Pass  59: suminf.    0.73095 (3) obj. -24.6815 iterations 4
Cbc0038I Pass  60: suminf.    0.49831 (4) obj. -26.4921 iterations 2
Cbc0038I Pass  61: suminf.    0.63590 (4) obj. -24.6815 iterations 5
Cbc0038I Pass  62: suminf.    0.63590 (4) obj. -24.6815 iterations 2
Cbc0038I Rounding solution of -19.6107 is better than previous of -16.2868

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 6 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -32.0742
Cbc0038I Pass  62: suminf.    3.43829 (28) obj. -47.199 iterations 0
Cbc0038I Pass  63: suminf.    2.59150 (24) obj. -44.9029 iterations 12
Cbc0038I Pass  64: suminf.    1.38358 (14) obj. -33.4634 iterations 10
Cbc0038I Pass  65: suminf.    1.07898 (10) obj. -32.0742 iterations 32
Cbc0038I Pass  66: suminf.    1.07898 (10) obj. -32.0742 iterations 0
Cbc0038I Pass  67: suminf.    1.22868 (10) obj. -32.0742 iterations 4
Cbc0038I Pass  68: suminf.    1.19459 (10) obj. -32.0742 iterations 1
Cbc0038I Pass  69: suminf.    1.35613 (10) obj. -32.0742 iterations 2
Cbc0038I Pass  70: suminf.    1.31901 (10) obj. -32.0742 iterations 1
Cbc0038I Pass  71: suminf.    1.22868 (10) obj. -32.0742 iterations 5
Cbc0038I Pass  72: suminf.    2.43107 (15) obj. -32.0742 iterations 13
Cbc0038I Pass  73: suminf.    2.13233 (15) obj. -32.0742 iterations 4
Cbc0038I Pass  74: suminf.    1.67750 (11) obj. -32.0742 iterations 12
Cbc0038I Pass  75: suminf.    1.52303 (10) obj. -32.1482 iterations 4
Cbc0038I Pass  76: suminf.    1.67750 (11) obj. -32.0742 iterations 6
Cbc0038I Pass  77: suminf.    2.04294 (14) obj. -32.0742 iterations 8
Cbc0038I Pass  78: suminf.    1.78915 (14) obj. -32.0742 iterations 3
Cbc0038I Pass  79: suminf.    1.83236 (10) obj. -32.0742 iterations 24
Cbc0038I Pass  80: suminf.    1.75224 (10) obj. -32.1544 iterations 5
Cbc0038I Pass  81: suminf.    1.83236 (10) obj. -32.0742 iterations 7
Cbc0038I Pass  82: suminf.    1.86628 (13) obj. -32.0742 iterations 6
Cbc0038I Pass  83: suminf.    1.86628 (13) obj. -32.0742 iterations 1
Cbc0038I Pass  84: suminf.    2.14293 (10) obj. -32.0742 iterations 15
Cbc0038I Pass  85: suminf.    2.14293 (10) obj. -32.0742 iterations 0
Cbc0038I Pass  86: suminf.    1.95692 (10) obj. -32.0742 iterations 7
Cbc0038I Pass  87: suminf.    1.58147 (11) obj. -32.0742 iterations 3
Cbc0038I Pass  88: suminf.    1.95692 (10) obj. -32.0742 iterations 9
Cbc0038I Pass  89: suminf.    1.96127 (13) obj. -32.0742 iterations 9
Cbc0038I Pass  90: suminf.    1.81918 (13) obj. -32.0742 iterations 3
Cbc0038I Pass  91: suminf.    1.60209 (12) obj. -32.0742 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -19.6107 - took 0.07 seconds
Cbc0012I Integer solution of -19.61072 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 92 rows 113 columns, reduced to 4 rows 6 columns
Cbc0031I 47 added rows had average density of 16.553191
Cbc0013I At root node, 47 cuts changed objective from -49.324029 to -22.674528 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1302 row cuts average 5.1 elements, 10 column cuts (10 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 92 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 190 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 62.7 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.61072 best solution, best possible -22.674528 (0.46 seconds)
Cbc0012I Integer solution of -20.0313 found by rounding after 588 iterations and 7 nodes (0.88 seconds)
Cbc0010I After 19 nodes, 6 on tree, -20.0313 best solution, best possible -22.674528 (1.17 seconds)
Cbc0016I Integer solution of -20.07072 found by strong branching after 761 iterations and 21 nodes (1.22 seconds)
Cbc0001I Search completed - best objective -20.07071999999999, took 953 iterations and 26 nodes (1.23 seconds)
Cbc0032I Strong branching done 386 times (4971 iterations), fathomed 7 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.84   (Wallclock seconds):       1.24

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 1.33091e-05 - average 1.03171e-07, 21 fixed columns
Coin0506I Presolve 89 (-40) rows, 54 (-22) columns and 279 (-123) elements
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 2.7488041 - largest nonzero change 0 ( 0%) - largest zero change 1.919719e-05
Clp0000I Optimal - objective value 42.104076
Clp0000I Optimal - objective value 42.104076
Coin0511I After Postsolve, objective 42.104076, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.104076
Clp0000I Optimal - objective value 42.104076
Clp0000I Optimal - objective value 42.104076
Coin0511I After Postsolve, objective 42.104076, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.10407628 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 9.12281
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.24499 iterations 48
Cbc0038I Solution found of 9.24499
Cbc0038I Relaxing continuous gives 9.24499
Cbc0038I Rounding solution of -7.832 is better than previous of 9.24499

Cbc0038I Before mini branch and bound, 45 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 48 rows 31 columns
Cbc0038I Mini branch and bound improved solution from -7.832 to -20.0707 (0.04 seconds)
Cbc0038I Round again with cutoff of -22.2741
Cbc0038I Pass   2: suminf.    3.52841 (13) obj. -22.2741 iterations 20
Cbc0038I Pass   3: suminf.    3.53194 (14) obj. -22.2741 iterations 2
Cbc0038I Pass   4: suminf.    0.82754 (3) obj. -22.2741 iterations 21
Cbc0038I Pass   5: suminf.    0.43871 (2) obj. -22.2741 iterations 4
Cbc0038I Pass   6: suminf.    0.50946 (4) obj. -22.2741 iterations 3
Cbc0038I Pass   7: suminf.    2.33402 (6) obj. -22.2741 iterations 7
Cbc0038I Pass   8: suminf.    1.01161 (4) obj. -22.2741 iterations 2
Cbc0038I Pass   9: suminf.    0.56510 (3) obj. -22.2741 iterations 4
Cbc0038I Pass  10: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  11: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I Pass  12: suminf.    0.86458 (4) obj. -22.2741 iterations 4
Cbc0038I Pass  13: suminf.    0.69004 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  14: suminf.    0.56510 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  15: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  16: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I Pass  17: suminf.    0.86458 (4) obj. -22.2741 iterations 4
Cbc0038I Pass  18: suminf.    0.69004 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  19: suminf.    0.56510 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  20: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  21: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I Pass  22: suminf.    0.86458 (4) obj. -22.2741 iterations 4
Cbc0038I Pass  23: suminf.    0.69004 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  24: suminf.    0.56510 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  25: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  26: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I Pass  27: suminf.    0.86458 (4) obj. -22.2741 iterations 4
Cbc0038I Pass  28: suminf.    0.69004 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  29: suminf.    0.56510 (3) obj. -22.2741 iterations 1
Cbc0038I Pass  30: suminf.    0.84594 (5) obj. -22.2741 iterations 4
Cbc0038I Pass  31: suminf.    0.55749 (3) obj. -22.2741 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 50 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -20.0707 - took 0.06 seconds
Cbc0012I Integer solution of -20.07072 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 48 rows 31 columns
Cbc0031I 20 added rows had average density of 65.1
Cbc0013I At root node, 20 cuts changed objective from -42.104076 to -34.091272 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8372 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1754 row cuts average 75.9 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 123 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -20.07072 best solution, best possible -34.091272 (0.72 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 5 rows 7 columns
Cbc0001I Search completed - best objective -20.07071999999999, took 7073 iterations and 48 nodes (0.99 seconds)
Cbc0032I Strong branching done 742 times (12371 iterations), fathomed 6 nodes and fixed 33 variables
Cbc0035I Maximum depth 10, 152 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       1.00

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 113 (-40) columns and 1728 (-1576) elements
Clp1000I sum of infeasibilities 4.3222e-08 - average 4.69804e-10, 68 fixed columns
Coin0506I Presolve 27 (-65) rows, 45 (-68) columns and 138 (-1590) elements
Clp0006I 0  Obj 5.9459915 Dual inf 0.70819139 (45)
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 3.4809154 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 6.6322469
Clp0000I Optimal - objective value 6.6322469
Coin0511I After Postsolve, objective 6.6322469, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 6.6322469 Dual inf 44.485772 (38)
Clp0014I Perturbing problem by 0.001% of 1.981461 - largest nonzero change 2.9402427e-05 ( 0.0015420975%) - largest zero change 2.9674539e-05
Clp0000I Optimal - objective value 64.125132
Clp0000I Optimal - objective value 64.125132
Clp0000I Optimal - objective value 64.125132
Coin0511I After Postsolve, objective 64.125132, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 64.12513167 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 113 columns (113 integer (113 of which binary)) and 1738 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.249%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 29 integers unsatisfied sum - 3.76423
Cbc0038I Pass   1: suminf.    3.43829 (28) obj. -47.199 iterations 9
Cbc0038I Pass   2: suminf.    2.59150 (24) obj. -44.9029 iterations 3
Cbc0038I Pass   3: suminf.    1.05148 (11) obj. -30.7955 iterations 13
Cbc0038I Solution found of -11.8541
Cbc0038I Rounding solution of -15.0982 is better than previous of -11.8541

Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -18.5208
Cbc0038I Pass   4: suminf.    3.43829 (28) obj. -47.199 iterations 0
Cbc0038I Pass   5: suminf.    2.59150 (24) obj. -44.9029 iterations 12
Cbc0038I Pass   6: suminf.    1.05148 (11) obj. -30.7955 iterations 13
Cbc0038I Pass   7: suminf.    0.42592 (2) obj. -18.5208 iterations 10
Cbc0038I Pass   8: suminf.    0.16917 (2) obj. -20.8316 iterations 1
Cbc0038I Pass   9: suminf.    0.25925 (1) obj. -18.5208 iterations 2
Cbc0038I Pass  10: suminf.    0.10667 (1) obj. -19.8941 iterations 1
Cbc0038I Pass  11: suminf.    1.81983 (12) obj. -18.5208 iterations 23
Cbc0038I Pass  12: suminf.    1.68090 (12) obj. -18.5208 iterations 12
Cbc0038I Pass  13: suminf.    0.96209 (4) obj. -18.5208 iterations 13
Cbc0038I Pass  14: suminf.    0.50307 (4) obj. -19.3748 iterations 5
Cbc0038I Pass  15: suminf.    1.26721 (7) obj. -18.5208 iterations 9
Cbc0038I Pass  16: suminf.    1.24826 (7) obj. -18.5208 iterations 4
Cbc0038I Pass  17: suminf.    1.53049 (6) obj. -18.5208 iterations 10
Cbc0038I Pass  18: suminf.    1.22307 (6) obj. -18.5208 iterations 3
Cbc0038I Pass  19: suminf.    0.40665 (4) obj. -18.5208 iterations 8
Cbc0038I Pass  20: suminf.    0.22307 (2) obj. -19.3179 iterations 3
Cbc0038I Pass  21: suminf.    0.33658 (1) obj. -18.5208 iterations 2
Cbc0038I Pass  22: suminf.    1.85646 (11) obj. -18.5208 iterations 26
Cbc0038I Pass  23: suminf.    1.27614 (8) obj. -18.5208 iterations 17
Cbc0038I Pass  24: suminf.    0.95281 (5) obj. -18.5208 iterations 14
Cbc0038I Pass  25: suminf.    0.78207 (6) obj. -18.5208 iterations 5
Cbc0038I Pass  26: suminf.    0.69981 (4) obj. -18.5208 iterations 8
Cbc0038I Pass  27: suminf.    0.69981 (4) obj. -18.5208 iterations 3
Cbc0038I Pass  28: suminf.    0.69655 (4) obj. -18.5208 iterations 3
Cbc0038I Pass  29: suminf.    0.69655 (4) obj. -18.5208 iterations 2
Cbc0038I Pass  30: suminf.    1.02065 (5) obj. -18.5208 iterations 7
Cbc0038I Pass  31: suminf.    1.02065 (5) obj. -18.5208 iterations 3
Cbc0038I Pass  32: suminf.    1.27621 (10) obj. -18.5208 iterations 19
Cbc0038I Pass  33: suminf.    1.22856 (9) obj. -18.5208 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 9 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -11.8541 to -16.2868 (0.06 seconds)
Cbc0038I Round again with cutoff of -24.6815
Cbc0038I Pass  33: suminf.    3.43829 (28) obj. -47.199 iterations 0
Cbc0038I Pass  34: suminf.    2.59150 (24) obj. -44.9029 iterations 12
Cbc0038I Pass  35: suminf.    0.35226 (5) obj. -24.6815 iterations 21
Cbc0038I Pass  36: suminf.    0.35226 (5) obj. -24.6815 iterations 0
Cbc0038I Pass  37: suminf.    1.25510 (6) obj. -24.6815 iterations 7
Cbc0038I Pass  38: suminf.    0.88247 (5) obj. -24.6815 iterations 3
Cbc0038I Pass  39: suminf.    0.63590 (4) obj. -24.6815 iterations 9
Cbc0038I Pass  40: suminf.    0.63590 (4) obj. -24.6815 iterations 1
Cbc0038I Pass  41: suminf.    0.60315 (4) obj. -24.6815 iterations 4
Cbc0038I Pass  42: suminf.    0.60315 (4) obj. -24.6815 iterations 2
Cbc0038I Pass  43: suminf.    0.66437 (5) obj. -24.6815 iterations 7
Cbc0038I Pass  44: suminf.    2.98293 (12) obj. -24.6815 iterations 20
Cbc0038I Pass  45: suminf.    0.80964 (7) obj. -26.008 iterations 15
Cbc0038I Pass  46: suminf.    0.63851 (4) obj. -24.6815 iterations 12
Cbc0038I Pass  47: suminf.    0.55372 (4) obj. -24.6815 iterations 3
Cbc0038I Pass  48: suminf.    0.89577 (4) obj. -24.6815 iterations 6
Cbc0038I Pass  49: suminf.    0.73095 (3) obj. -24.6815 iterations 7
Cbc0038I Pass  50: suminf.    0.49831 (4) obj. -26.4921 iterations 2
Cbc0038I Pass  51: suminf.    0.63590 (4) obj. -24.6815 iterations 5
Cbc0038I Pass  52: suminf.    0.63590 (4) obj. -24.6815 iterations 2
Cbc0038I Pass  53: suminf.    0.60315 (4) obj. -24.6815 iterations 3
Cbc0038I Pass  54: suminf.    0.60315 (4) obj. -24.6815 iterations 1
Cbc0038I Pass  55: suminf.    0.66437 (5) obj. -24.6815 iterations 6
Cbc0038I Pass  56: suminf.    1.28471 (9) obj. -24.6815 iterations 14
Cbc0038I Pass  57: suminf.    0.78622 (8) obj. -24.6815 iterations 9
Cbc0038I Pass  58: suminf.    1.02044 (5) obj. -24.6815 iterations 14
Cbc0038I Pass  59: suminf.    0.73095 (3) obj. -24.6815 iterations 4
Cbc0038I Pass  60: suminf.    0.49831 (4) obj. -26.4921 iterations 2
Cbc0038I Pass  61: suminf.    0.63590 (4) obj. -24.6815 iterations 5
Cbc0038I Pass  62: suminf.    0.63590 (4) obj. -24.6815 iterations 2
Cbc0038I Rounding solution of -19.6107 is better than previous of -16.2868

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 6 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I Round again with cutoff of -32.0742
Cbc0038I Pass  62: suminf.    3.43829 (28) obj. -47.199 iterations 0
Cbc0038I Pass  63: suminf.    2.59150 (24) obj. -44.9029 iterations 12
Cbc0038I Pass  64: suminf.    1.38358 (14) obj. -33.4634 iterations 10
Cbc0038I Pass  65: suminf.    1.07898 (10) obj. -32.0742 iterations 32
Cbc0038I Pass  66: suminf.    1.07898 (10) obj. -32.0742 iterations 0
Cbc0038I Pass  67: suminf.    1.22868 (10) obj. -32.0742 iterations 4
Cbc0038I Pass  68: suminf.    1.19459 (10) obj. -32.0742 iterations 1
Cbc0038I Pass  69: suminf.    1.35613 (10) obj. -32.0742 iterations 2
Cbc0038I Pass  70: suminf.    1.31901 (10) obj. -32.0742 iterations 1
Cbc0038I Pass  71: suminf.    1.22868 (10) obj. -32.0742 iterations 5
Cbc0038I Pass  72: suminf.    2.43107 (15) obj. -32.0742 iterations 13
Cbc0038I Pass  73: suminf.    2.13233 (15) obj. -32.0742 iterations 4
Cbc0038I Pass  74: suminf.    1.67750 (11) obj. -32.0742 iterations 12
Cbc0038I Pass  75: suminf.    1.52303 (10) obj. -32.1482 iterations 4
Cbc0038I Pass  76: suminf.    1.67750 (11) obj. -32.0742 iterations 6
Cbc0038I Pass  77: suminf.    2.04294 (14) obj. -32.0742 iterations 8
Cbc0038I Pass  78: suminf.    1.78915 (14) obj. -32.0742 iterations 3
Cbc0038I Pass  79: suminf.    1.83236 (10) obj. -32.0742 iterations 24
Cbc0038I Pass  80: suminf.    1.75224 (10) obj. -32.1544 iterations 5
Cbc0038I Pass  81: suminf.    1.83236 (10) obj. -32.0742 iterations 7
Cbc0038I Pass  82: suminf.    1.86628 (13) obj. -32.0742 iterations 6
Cbc0038I Pass  83: suminf.    1.86628 (13) obj. -32.0742 iterations 1
Cbc0038I Pass  84: suminf.    2.14293 (10) obj. -32.0742 iterations 15
Cbc0038I Pass  85: suminf.    2.14293 (10) obj. -32.0742 iterations 0
Cbc0038I Pass  86: suminf.    1.95692 (10) obj. -32.0742 iterations 7
Cbc0038I Pass  87: suminf.    1.58147 (11) obj. -32.0742 iterations 3
Cbc0038I Pass  88: suminf.    1.95692 (10) obj. -32.0742 iterations 9
Cbc0038I Pass  89: suminf.    1.96127 (13) obj. -32.0742 iterations 9
Cbc0038I Pass  90: suminf.    1.81918 (13) obj. -32.0742 iterations 3
Cbc0038I Pass  91: suminf.    1.60209 (12) obj. -32.0742 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -19.6107 - took 0.08 seconds
Cbc0012I Integer solution of -19.61072 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 92 rows 113 columns, reduced to 4 rows 6 columns
Cbc0031I 47 added rows had average density of 16.553191
Cbc0013I At root node, 47 cuts changed objective from -49.324029 to -22.674528 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1302 row cuts average 5.1 elements, 10 column cuts (10 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 92 row cuts average 60.5 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 190 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 193 row cuts average 62.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.112 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -19.61072 best solution, best possible -22.674528 (0.50 seconds)
Cbc0012I Integer solution of -20.0313 found by rounding after 588 iterations and 7 nodes (0.95 seconds)
Cbc0010I After 16 nodes, 7 on tree, -20.0313 best solution, best possible -22.674528 (1.22 seconds)
Cbc0016I Integer solution of -20.07072 found by strong branching after 761 iterations and 21 nodes (1.35 seconds)
Cbc0001I Search completed - best objective -20.07071999999999, took 953 iterations and 26 nodes (1.36 seconds)
Cbc0032I Strong branching done 386 times (4971 iterations), fathomed 7 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 66 variables fixed on reduced cost
Total time (CPU seconds):       0.87   (Wallclock seconds):       1.37

