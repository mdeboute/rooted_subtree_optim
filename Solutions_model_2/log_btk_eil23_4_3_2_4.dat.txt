Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 5.11669e-05 - average 1.50491e-06, 0 fixed columns
Coin0506I Presolve 34 (0) rows, 21 (0) columns and 102 (0) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 121.79467
Clp0000I Optimal - objective value 121.79467
Coin0511I After Postsolve, objective 121.79467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 121.79467
Clp0000I Optimal - objective value 121.79467
Clp0000I Optimal - objective value 121.79467
Coin0511I After Postsolve, objective 121.79467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.7946701 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.544%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.7639
Cbc0038I Pass   1: suminf.    0.67140 (2) obj. -24.9258 iterations 20
Cbc0038I Solution found of 9.04979
Cbc0038I Relaxing continuous gives 9.04979
Cbc0038I Rounding solution of 5.79285 is better than previous of 9.04979

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6.96599
Cbc0038I Pass   2: suminf.    0.67140 (2) obj. -24.9258 iterations 0
Cbc0038I Pass   3: suminf.    0.19252 (2) obj. -6.96599 iterations 4
Cbc0038I Pass   4: suminf.    0.16563 (2) obj. -6.96599 iterations 7
Cbc0038I Pass   5: suminf.    0.31925 (1) obj. -6.96599 iterations 5
Cbc0038I Pass   6: suminf.    0.20609 (3) obj. -6.96599 iterations 4
Cbc0038I Pass   7: suminf.    0.82155 (3) obj. -6.96599 iterations 4
Cbc0038I Pass   8: suminf.    0.07342 (1) obj. -6.96599 iterations 4
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -6.96599 iterations 1
Cbc0038I Solution found of -6.96599
Cbc0038I Relaxing continuous gives -15.9752
Cbc0038I Rounding solution of -35.2299 is better than previous of -15.9752

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -52.543
Cbc0038I Pass  10: suminf.    1.12017 (8) obj. -52.543 iterations 6
Cbc0038I Pass  11: suminf.    1.17154 (5) obj. -52.543 iterations 15
Cbc0038I Pass  12: suminf.    1.17154 (5) obj. -52.543 iterations 0
Cbc0038I Pass  13: suminf.    1.27420 (4) obj. -52.543 iterations 5
Cbc0038I Pass  14: suminf.    1.27420 (4) obj. -52.543 iterations 0
Cbc0038I Pass  15: suminf.    1.16026 (4) obj. -52.543 iterations 2
Cbc0038I Pass  16: suminf.    1.14192 (5) obj. -52.543 iterations 1
Cbc0038I Pass  17: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  18: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  19: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I Pass  20: suminf.    0.51301 (3) obj. -52.543 iterations 1
Cbc0038I Pass  21: suminf.    1.14192 (5) obj. -52.543 iterations 4
Cbc0038I Pass  22: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  23: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  24: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I Pass  25: suminf.    0.51301 (3) obj. -52.543 iterations 1
Cbc0038I Pass  26: suminf.    1.14192 (5) obj. -52.543 iterations 4
Cbc0038I Pass  27: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  28: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  29: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I Pass  30: suminf.    0.51301 (3) obj. -52.543 iterations 1
Cbc0038I Pass  31: suminf.    1.14192 (5) obj. -52.543 iterations 4
Cbc0038I Pass  32: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  33: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  34: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I Pass  35: suminf.    0.51301 (3) obj. -52.543 iterations 1
Cbc0038I Pass  36: suminf.    1.14192 (5) obj. -52.543 iterations 4
Cbc0038I Pass  37: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  38: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  39: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -35.2299 - took 0.04 seconds
Cbc0012I Integer solution of -35.22994 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 12 added rows had average density of 15.583333
Cbc0013I At root node, 12 cuts changed objective from -121.79467 to -60.521858 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1291 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1066 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0016I Integer solution of -40.57357 found by strong branching after 2163 iterations and 2 nodes (0.18 seconds)
Cbc0001I Search completed - best objective -40.57357000000002, took 2499 iterations and 10 nodes (0.20 seconds)
Cbc0032I Strong branching done 92 times (810 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-13) rows, 41 (-5) columns and 314 (-72) elements
Clp1000I sum of infeasibilities 0 - average 0, 39 fixed columns
Coin0506I Presolve 2 (-32) rows, 2 (-39) columns and 4 (-310) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 113.43032
Clp0000I Optimal - objective value 113.43032
Coin0511I After Postsolve, objective 113.43032, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.15238076 - largest nonzero change 0 ( 0%) - largest zero change 2.9896029e-05
Clp0000I Optimal - objective value 255.43768
Clp0000I Optimal - objective value 255.43768
Clp0000I Optimal - objective value 255.43768
Coin0511I After Postsolve, objective 255.43768, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 255.4376781 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 39 columns (39 integer (39 of which binary)) and 287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.212%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.25621
Cbc0038I Pass   1: suminf.    2.60541 (12) obj. -103.633 iterations 6
Cbc0038I Pass   2: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Solution found of -17.0983
Cbc0038I Rounding solution of -21.8132 is better than previous of -17.0983

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 39 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -21.8132 to -32.6884 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.2781
Cbc0038I Pass   3: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Pass   4: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Pass   5: suminf.    0.47411 (1) obj. -41.2781 iterations 13
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -50.2483 iterations 1
Cbc0038I Pass   7: suminf.    1.40795 (6) obj. -41.2781 iterations 10
Cbc0038I Pass   8: suminf.    0.91316 (4) obj. -47.561 iterations 4
Cbc0038I Pass   9: suminf.    0.66645 (2) obj. -41.2781 iterations 4
Cbc0038I Pass  10: suminf.    0.40000 (2) obj. -46.0742 iterations 2
Cbc0038I Pass  11: suminf.    1.04135 (5) obj. -45.3332 iterations 7
Cbc0038I Pass  12: suminf.    0.86458 (5) obj. -41.2781 iterations 6
Cbc0038I Pass  13: suminf.    0.86458 (5) obj. -41.2781 iterations 0
Cbc0038I Pass  14: suminf.    0.35403 (1) obj. -41.2781 iterations 6
Cbc0038I Pass  15: suminf.    0.54554 (2) obj. -48.1619 iterations 2
Cbc0038I Pass  16: suminf.    0.75699 (2) obj. -41.2781 iterations 1
Cbc0038I Pass  17: suminf.    1.17047 (4) obj. -41.2781 iterations 12
Cbc0038I Pass  18: suminf.    0.70607 (3) obj. -41.2781 iterations 2
Cbc0038I Pass  19: suminf.    0.71300 (2) obj. -45.8052 iterations 4
Cbc0038I Pass  20: suminf.    0.29422 (2) obj. -41.2781 iterations 2
Cbc0038I Pass  21: suminf.    1.11300 (3) obj. -56.6052 iterations 2
Cbc0038I Pass  22: suminf.    0.40000 (1) obj. -41.4017 iterations 2
Cbc0038I Pass  23: suminf.    1.04501 (4) obj. -41.2781 iterations 9
Cbc0038I Pass  24: suminf.    1.04501 (4) obj. -41.2781 iterations 1
Cbc0038I Pass  25: suminf.    0.96799 (3) obj. -41.2781 iterations 4
Cbc0038I Pass  26: suminf.    0.82528 (3) obj. -41.2781 iterations 4
Cbc0038I Pass  27: suminf.    0.61338 (2) obj. -42.6611 iterations 3
Cbc0038I Pass  28: suminf.    0.43263 (2) obj. -41.2781 iterations 2
Cbc0038I Pass  29: suminf.    0.91338 (3) obj. -55.2611 iterations 2
Cbc0038I Pass  30: suminf.    0.38147 (2) obj. -41.2781 iterations 2
Cbc0038I Pass  31: suminf.    2.10733 (6) obj. -41.2781 iterations 10
Cbc0038I Pass  32: suminf.    1.45506 (4) obj. -41.2781 iterations 2
Cbc0038I Rounding solution of -33.8005 is better than previous of -32.6884

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 39 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -33.8005 to -37.4034 (0.02 seconds)
Cbc0038I Round again with cutoff of -56.7393
Cbc0038I Pass  32: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Pass  33: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Pass  34: suminf.    0.71061 (2) obj. -56.7393 iterations 13
Cbc0038I Pass  35: suminf.    0.71061 (2) obj. -56.7393 iterations 0
Cbc0038I Pass  36: suminf.    0.55963 (2) obj. -56.7393 iterations 1
Cbc0038I Pass  37: suminf.    2.51389 (7) obj. -56.7393 iterations 17
Cbc0038I Pass  38: suminf.    2.28334 (7) obj. -56.7393 iterations 5
Cbc0038I Pass  39: suminf.    2.25733 (7) obj. -56.7393 iterations 3
Cbc0038I Pass  40: suminf.    1.35644 (5) obj. -56.7393 iterations 6
Cbc0038I Pass  41: suminf.    1.35644 (5) obj. -56.7393 iterations 0
Cbc0038I Pass  42: suminf.    1.60127 (4) obj. -56.7393 iterations 3
Cbc0038I Pass  43: suminf.    1.34203 (5) obj. -56.7393 iterations 1
Cbc0038I Pass  44: suminf.    1.42415 (4) obj. -56.7393 iterations 2
Cbc0038I Pass  45: suminf.    1.42415 (4) obj. -56.7393 iterations 0
Cbc0038I Pass  46: suminf.    1.32622 (4) obj. -56.7393 iterations 7
Cbc0038I Pass  47: suminf.    1.32622 (4) obj. -56.7393 iterations 0
Cbc0038I Pass  48: suminf.    1.35644 (5) obj. -56.7393 iterations 3
Cbc0038I Pass  49: suminf.    1.35644 (5) obj. -56.7393 iterations 0
Cbc0038I Pass  50: suminf.    1.60127 (4) obj. -56.7393 iterations 3
Cbc0038I Pass  51: suminf.    1.34203 (5) obj. -56.7393 iterations 1
Cbc0038I Pass  52: suminf.    1.42415 (4) obj. -56.7393 iterations 2
Cbc0038I Pass  53: suminf.    1.42415 (4) obj. -56.7393 iterations 0
Cbc0038I Pass  54: suminf.    1.32622 (4) obj. -56.7393 iterations 7
Cbc0038I Pass  55: suminf.    1.32622 (4) obj. -56.7393 iterations 0
Cbc0038I Pass  56: suminf.    1.35644 (5) obj. -56.7393 iterations 3
Cbc0038I Pass  57: suminf.    1.35644 (5) obj. -56.7393 iterations 0
Cbc0038I Pass  58: suminf.    1.60127 (4) obj. -56.7393 iterations 3
Cbc0038I Pass  59: suminf.    1.34203 (5) obj. -56.7393 iterations 1
Cbc0038I Pass  60: suminf.    1.42415 (4) obj. -56.7393 iterations 2
Cbc0038I Pass  61: suminf.    1.42415 (4) obj. -56.7393 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 39 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -37.4034 - took 0.02 seconds
Cbc0012I Integer solution of -37.40335 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -38.42873 found by DiveCoefficient after 960 iterations and 0 nodes (1.58 seconds)
Cbc0031I 15 added rows had average density of 9.2
Cbc0013I At root node, 15 cuts changed objective from -118.58414 to -42.671413 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 270 row cuts average 3.8 elements, 11 column cuts (11 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 289 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 34 row cuts average 9.4 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 81 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 148 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 20 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.826 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -38.42873 best solution, best possible -42.671413 (1.58 seconds)
Cbc0012I Integer solution of -38.7746 found by rounding after 986 iterations and 1 nodes (1.64 seconds)
Cbc0012I Integer solution of -40.57354 found by rounding after 993 iterations and 2 nodes (1.66 seconds)
Cbc0012I Integer solution of -40.57357 found by rounding after 1015 iterations and 3 nodes (1.74 seconds)
Cbc0001I Search completed - best objective -40.57357000000002, took 1128 iterations and 8 nodes (1.93 seconds)
Cbc0032I Strong branching done 68 times (351 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.21   (Wallclock seconds):       1.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 21 (-4) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 5.11669e-05 - average 1.50491e-06, 0 fixed columns
Coin0506I Presolve 34 (0) rows, 21 (0) columns and 102 (0) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 121.79467
Clp0000I Optimal - objective value 121.79467
Coin0511I After Postsolve, objective 121.79467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 121.79467
Clp0000I Optimal - objective value 121.79467
Clp0000I Optimal - objective value 121.79467
Coin0511I After Postsolve, objective 121.79467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 121.7946701 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 34 rows, 21 columns (20 integer (20 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.544%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.7639
Cbc0038I Pass   1: suminf.    0.67140 (2) obj. -24.9258 iterations 20
Cbc0038I Solution found of 9.04979
Cbc0038I Relaxing continuous gives 9.04979
Cbc0038I Rounding solution of 5.79285 is better than previous of 9.04979

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -6.96599
Cbc0038I Pass   2: suminf.    0.67140 (2) obj. -24.9258 iterations 0
Cbc0038I Pass   3: suminf.    0.19252 (2) obj. -6.96599 iterations 4
Cbc0038I Pass   4: suminf.    0.16563 (2) obj. -6.96599 iterations 7
Cbc0038I Pass   5: suminf.    0.31925 (1) obj. -6.96599 iterations 5
Cbc0038I Pass   6: suminf.    0.20609 (3) obj. -6.96599 iterations 4
Cbc0038I Pass   7: suminf.    0.82155 (3) obj. -6.96599 iterations 4
Cbc0038I Pass   8: suminf.    0.07342 (1) obj. -6.96599 iterations 4
Cbc0038I Pass   9: suminf.    0.00000 (0) obj. -6.96599 iterations 1
Cbc0038I Solution found of -6.96599
Cbc0038I Relaxing continuous gives -15.9752
Cbc0038I Rounding solution of -35.2299 is better than previous of -15.9752

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -52.543
Cbc0038I Pass  10: suminf.    1.12017 (8) obj. -52.543 iterations 6
Cbc0038I Pass  11: suminf.    1.17154 (5) obj. -52.543 iterations 15
Cbc0038I Pass  12: suminf.    1.17154 (5) obj. -52.543 iterations 0
Cbc0038I Pass  13: suminf.    1.27420 (4) obj. -52.543 iterations 5
Cbc0038I Pass  14: suminf.    1.27420 (4) obj. -52.543 iterations 0
Cbc0038I Pass  15: suminf.    1.16026 (4) obj. -52.543 iterations 2
Cbc0038I Pass  16: suminf.    1.14192 (5) obj. -52.543 iterations 1
Cbc0038I Pass  17: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  18: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  19: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I Pass  20: suminf.    0.51301 (3) obj. -52.543 iterations 1
Cbc0038I Pass  21: suminf.    1.14192 (5) obj. -52.543 iterations 4
Cbc0038I Pass  22: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  23: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  24: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I Pass  25: suminf.    0.51301 (3) obj. -52.543 iterations 1
Cbc0038I Pass  26: suminf.    1.14192 (5) obj. -52.543 iterations 4
Cbc0038I Pass  27: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  28: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  29: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I Pass  30: suminf.    0.51301 (3) obj. -52.543 iterations 1
Cbc0038I Pass  31: suminf.    1.14192 (5) obj. -52.543 iterations 4
Cbc0038I Pass  32: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  33: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  34: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I Pass  35: suminf.    0.51301 (3) obj. -52.543 iterations 1
Cbc0038I Pass  36: suminf.    1.14192 (5) obj. -52.543 iterations 4
Cbc0038I Pass  37: suminf.    1.85123 (5) obj. -52.543 iterations 3
Cbc0038I Pass  38: suminf.    1.85123 (5) obj. -52.543 iterations 0
Cbc0038I Pass  39: suminf.    0.68195 (3) obj. -52.543 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 21 columns, reduced to 30 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -35.2299 - took 0.04 seconds
Cbc0012I Integer solution of -35.22994 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 12 added rows had average density of 15.583333
Cbc0013I At root node, 12 cuts changed objective from -121.79467 to -60.521858 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1291 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1066 row cuts average 20.9 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 64 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 97 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0016I Integer solution of -40.57357 found by strong branching after 2163 iterations and 2 nodes (0.19 seconds)
Cbc0001I Search completed - best objective -40.57357000000002, took 2499 iterations and 10 nodes (0.21 seconds)
Cbc0032I Strong branching done 92 times (810 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 12 variables fixed on reduced cost
Total time (CPU seconds):       0.20   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-16) rows, 39 (-8) columns and 283 (-106) elements
Clp1000I sum of infeasibilities 7.57542e-07 - average 2.29558e-08, 12 fixed columns
Coin0506I Presolve 22 (-11) rows, 25 (-14) columns and 147 (-136) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 3.1236234 - largest nonzero change 2.3354463e-05 ( 0.00077556904%) - largest zero change 2.9036373e-05
Clp0000I Optimal - objective value 126.09153
Clp0000I Optimal - objective value 126.09153
Coin0511I After Postsolve, objective 126.09153, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.6475191 - largest nonzero change 1.9786622e-05 ( 0.00077556904%) - largest zero change 2.9137198e-05
Clp0000I Optimal - objective value 134.75875
Clp0000I Optimal - objective value 134.75875
Clp0000I Optimal - objective value 134.75875
Coin0511I After Postsolve, objective 134.75875, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 134.7587492 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 39 columns (39 integer (39 of which binary)) and 287 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.212%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.25621
Cbc0038I Pass   1: suminf.    2.60541 (12) obj. -103.633 iterations 5
Cbc0038I Pass   2: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Solution found of -17.0983
Cbc0038I Rounding solution of -21.8132 is better than previous of -17.0983

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 39 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -21.8132 to -32.6884 (0.01 seconds)
Cbc0038I Round again with cutoff of -41.2781
Cbc0038I Pass   3: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Pass   4: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Pass   5: suminf.    0.47411 (1) obj. -41.2781 iterations 13
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -50.2483 iterations 1
Cbc0038I Pass   7: suminf.    1.40795 (6) obj. -41.2781 iterations 9
Cbc0038I Pass   8: suminf.    0.91316 (4) obj. -47.561 iterations 3
Cbc0038I Pass   9: suminf.    0.66645 (2) obj. -41.2781 iterations 3
Cbc0038I Pass  10: suminf.    0.40000 (2) obj. -46.0742 iterations 1
Cbc0038I Pass  11: suminf.    1.04135 (5) obj. -45.3332 iterations 7
Cbc0038I Pass  12: suminf.    0.86458 (5) obj. -41.2781 iterations 5
Cbc0038I Pass  13: suminf.    0.86458 (5) obj. -41.2781 iterations 0
Cbc0038I Pass  14: suminf.    0.35403 (1) obj. -41.2781 iterations 5
Cbc0038I Pass  15: suminf.    0.54554 (2) obj. -48.1619 iterations 2
Cbc0038I Pass  16: suminf.    0.75699 (2) obj. -41.2781 iterations 1
Cbc0038I Pass  17: suminf.    1.17047 (4) obj. -41.2781 iterations 10
Cbc0038I Pass  18: suminf.    0.70607 (3) obj. -41.2781 iterations 2
Cbc0038I Pass  19: suminf.    0.71300 (2) obj. -45.8052 iterations 4
Cbc0038I Pass  20: suminf.    0.29422 (2) obj. -41.2781 iterations 2
Cbc0038I Pass  21: suminf.    1.11300 (3) obj. -56.6052 iterations 2
Cbc0038I Pass  22: suminf.    0.40000 (1) obj. -41.4017 iterations 2
Cbc0038I Pass  23: suminf.    1.04501 (4) obj. -41.2781 iterations 8
Cbc0038I Pass  24: suminf.    1.04501 (4) obj. -41.2781 iterations 0
Cbc0038I Pass  25: suminf.    0.96799 (3) obj. -41.2781 iterations 4
Cbc0038I Pass  26: suminf.    0.82528 (3) obj. -41.2781 iterations 2
Cbc0038I Pass  27: suminf.    0.61338 (2) obj. -42.6611 iterations 3
Cbc0038I Pass  28: suminf.    0.43263 (2) obj. -41.2781 iterations 2
Cbc0038I Pass  29: suminf.    0.91338 (3) obj. -55.2611 iterations 2
Cbc0038I Pass  30: suminf.    0.38147 (2) obj. -41.2781 iterations 2
Cbc0038I Pass  31: suminf.    2.10733 (6) obj. -41.2781 iterations 9
Cbc0038I Pass  32: suminf.    1.45506 (4) obj. -41.2781 iterations 2
Cbc0038I Rounding solution of -33.8005 is better than previous of -32.6884

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 39 columns, reduced to 14 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -33.8005 to -37.4034 (0.02 seconds)
Cbc0038I Round again with cutoff of -56.7393
Cbc0038I Pass  32: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Pass  33: suminf.    2.60541 (12) obj. -103.633 iterations 0
Cbc0038I Pass  34: suminf.    0.71061 (2) obj. -56.7393 iterations 13
Cbc0038I Pass  35: suminf.    0.71061 (2) obj. -56.7393 iterations 0
Cbc0038I Pass  36: suminf.    0.55963 (2) obj. -56.7393 iterations 1
Cbc0038I Pass  37: suminf.    2.51389 (7) obj. -56.7393 iterations 16
Cbc0038I Pass  38: suminf.    2.28334 (7) obj. -56.7393 iterations 5
Cbc0038I Pass  39: suminf.    2.25733 (7) obj. -56.7393 iterations 1
Cbc0038I Pass  40: suminf.    1.35644 (5) obj. -56.7393 iterations 6
Cbc0038I Pass  41: suminf.    1.35644 (5) obj. -56.7393 iterations 0
Cbc0038I Pass  42: suminf.    1.60127 (4) obj. -56.7393 iterations 3
Cbc0038I Pass  43: suminf.    1.34203 (5) obj. -56.7393 iterations 1
Cbc0038I Pass  44: suminf.    1.42415 (4) obj. -56.7393 iterations 2
Cbc0038I Pass  45: suminf.    1.42415 (4) obj. -56.7393 iterations 0
Cbc0038I Pass  46: suminf.    1.32622 (4) obj. -56.7393 iterations 7
Cbc0038I Pass  47: suminf.    1.32622 (4) obj. -56.7393 iterations 0
Cbc0038I Pass  48: suminf.    1.35644 (5) obj. -56.7393 iterations 3
Cbc0038I Pass  49: suminf.    1.35644 (5) obj. -56.7393 iterations 0
Cbc0038I Pass  50: suminf.    1.60127 (4) obj. -56.7393 iterations 3
Cbc0038I Pass  51: suminf.    1.34203 (5) obj. -56.7393 iterations 1
Cbc0038I Pass  52: suminf.    1.42415 (4) obj. -56.7393 iterations 2
Cbc0038I Pass  53: suminf.    1.42415 (4) obj. -56.7393 iterations 0
Cbc0038I Pass  54: suminf.    1.32622 (4) obj. -56.7393 iterations 7
Cbc0038I Pass  55: suminf.    1.32622 (4) obj. -56.7393 iterations 0
Cbc0038I Pass  56: suminf.    1.35644 (5) obj. -56.7393 iterations 3
Cbc0038I Pass  57: suminf.    1.35644 (5) obj. -56.7393 iterations 0
Cbc0038I Pass  58: suminf.    1.60127 (4) obj. -56.7393 iterations 3
Cbc0038I Pass  59: suminf.    1.34203 (5) obj. -56.7393 iterations 1
Cbc0038I Pass  60: suminf.    1.42415 (4) obj. -56.7393 iterations 2
Cbc0038I Pass  61: suminf.    1.42415 (4) obj. -56.7393 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 39 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -37.4034 - took 0.02 seconds
Cbc0012I Integer solution of -37.40335 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 14 added rows had average density of 8.2857143
Cbc0013I At root node, 14 cuts changed objective from -118.58414 to -42.598265 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 344 row cuts average 3.4 elements, 12 column cuts (12 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 432 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 84 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 3 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 86 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 179 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 19 row cuts average 12.8 elements, 0 column cuts (0 active)  in 0.717 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -37.40335 best solution, best possible -42.598265 (1.38 seconds)
Cbc0012I Integer solution of -40.57354 found by rounding after 1089 iterations and 2 nodes (1.39 seconds)
Cbc0001I Search completed - best objective -40.57354000000001, took 1287 iterations and 8 nodes (1.42 seconds)
Cbc0032I Strong branching done 116 times (465 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       1.43

