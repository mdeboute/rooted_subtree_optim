Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 2.16212e-05 - average 1.67606e-07, 14 fixed columns
Coin0506I Presolve 105 (-24) rows, 62 (-14) columns and 326 (-76) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 3.0730803 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 40.53484
Clp0000I Optimal - objective value 40.53484
Coin0511I After Postsolve, objective 40.53484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.53484
Clp0000I Optimal - objective value 40.53484
Clp0000I Optimal - objective value 40.53484
Coin0511I After Postsolve, objective 40.53484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.53484038 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 9.38273
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.2487 iterations 45
Cbc0038I Solution found of 10.2487
Cbc0038I Relaxing continuous gives 10.2488
Cbc0038I Rounding solution of -10.5289 is better than previous of 10.2488

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 55 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -10.5289 to -13.1628 (0.05 seconds)
Cbc0038I Round again with cutoff of -15.9001
Cbc0038I Pass   2: suminf.    2.93642 (9) obj. -15.9001 iterations 9
Cbc0038I Pass   3: suminf.    0.48807 (4) obj. -15.9001 iterations 9
Cbc0038I Pass   4: suminf.    0.47256 (4) obj. -15.9001 iterations 1
Cbc0038I Pass   5: suminf.    1.16481 (5) obj. -15.9001 iterations 6
Cbc0038I Pass   6: suminf.    0.89968 (3) obj. -15.9001 iterations 1
Cbc0038I Pass   7: suminf.    0.46647 (3) obj. -15.9001 iterations 4
Cbc0038I Pass   8: suminf.    0.71436 (5) obj. -15.9001 iterations 6
Cbc0038I Pass   9: suminf.    0.49943 (5) obj. -15.9001 iterations 1
Cbc0038I Pass  10: suminf.    1.14248 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  11: suminf.    0.47256 (4) obj. -15.9001 iterations 3
Cbc0038I Pass  12: suminf.    1.16481 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  13: suminf.    0.89968 (3) obj. -15.9001 iterations 1
Cbc0038I Pass  14: suminf.    0.46647 (3) obj. -15.9001 iterations 4
Cbc0038I Pass  15: suminf.    0.71436 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  16: suminf.    0.49943 (5) obj. -15.9001 iterations 1
Cbc0038I Pass  17: suminf.    1.14248 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  18: suminf.    0.47256 (4) obj. -15.9001 iterations 3
Cbc0038I Pass  19: suminf.    1.16481 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  20: suminf.    0.89968 (3) obj. -15.9001 iterations 1
Cbc0038I Pass  21: suminf.    0.46647 (3) obj. -15.9001 iterations 4
Cbc0038I Pass  22: suminf.    0.71436 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  23: suminf.    0.49943 (5) obj. -15.9001 iterations 1
Cbc0038I Pass  24: suminf.    1.14248 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  25: suminf.    0.47256 (4) obj. -15.9001 iterations 3
Cbc0038I Pass  26: suminf.    1.16481 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  27: suminf.    0.89968 (3) obj. -15.9001 iterations 1
Cbc0038I Pass  28: suminf.    0.46647 (3) obj. -15.9001 iterations 4
Cbc0038I Pass  29: suminf.    0.71436 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  30: suminf.    0.49943 (5) obj. -15.9001 iterations 1
Cbc0038I Pass  31: suminf.    1.14248 (5) obj. -15.9001 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 57 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -13.1628 to -13.6024 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.8271
Cbc0038I Pass  31: suminf.    3.74698 (13) obj. -20.8271 iterations 5
Cbc0038I Pass  32: suminf.    1.86927 (7) obj. -20.8271 iterations 10
Cbc0038I Pass  33: suminf.    0.96155 (8) obj. -20.8271 iterations 3
Cbc0038I Pass  34: suminf.    1.94233 (7) obj. -20.8271 iterations 9
Cbc0038I Pass  35: suminf.    0.72513 (9) obj. -20.8271 iterations 7
Cbc0038I Pass  36: suminf.    1.77517 (6) obj. -20.8271 iterations 13
Cbc0038I Pass  37: suminf.    1.68866 (7) obj. -20.8271 iterations 1
Cbc0038I Pass  38: suminf.    2.35807 (8) obj. -20.8271 iterations 7
Cbc0038I Pass  39: suminf.    1.10571 (5) obj. -20.8271 iterations 8
Cbc0038I Pass  40: suminf.    2.15062 (7) obj. -20.8271 iterations 5
Cbc0038I Pass  41: suminf.    2.92914 (11) obj. -20.8271 iterations 19
Cbc0038I Pass  42: suminf.    2.43319 (9) obj. -20.8271 iterations 9
Cbc0038I Pass  43: suminf.    3.14842 (9) obj. -20.8271 iterations 15
Cbc0038I Pass  44: suminf.    3.03397 (8) obj. -20.8271 iterations 2
Cbc0038I Pass  45: suminf.    2.04324 (8) obj. -20.8271 iterations 1
Cbc0038I Pass  46: suminf.    1.75871 (8) obj. -20.8271 iterations 1
Cbc0038I Pass  47: suminf.    2.95666 (7) obj. -20.8271 iterations 8
Cbc0038I Pass  48: suminf.    1.93488 (6) obj. -20.8271 iterations 1
Cbc0038I Pass  49: suminf.    1.70787 (6) obj. -20.8271 iterations 2
Cbc0038I Pass  50: suminf.    1.45091 (7) obj. -20.8271 iterations 4
Cbc0038I Pass  51: suminf.    3.64082 (10) obj. -20.8271 iterations 12
Cbc0038I Pass  52: suminf.    2.24497 (10) obj. -20.8271 iterations 5
Cbc0038I Pass  53: suminf.    2.07818 (9) obj. -20.8271 iterations 2
Cbc0038I Pass  54: suminf.    2.79566 (9) obj. -20.8271 iterations 16
Cbc0038I Pass  55: suminf.    2.43181 (10) obj. -20.8271 iterations 11
Cbc0038I Pass  56: suminf.    1.34312 (6) obj. -20.8271 iterations 17
Cbc0038I Pass  57: suminf.    1.21350 (5) obj. -20.8271 iterations 2
Cbc0038I Pass  58: suminf.    2.54231 (6) obj. -20.8271 iterations 7
Cbc0038I Pass  59: suminf.    2.54231 (6) obj. -20.8271 iterations 0
Cbc0038I Pass  60: suminf.    2.37662 (6) obj. -20.8271 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -13.6024 - took 0.12 seconds
Cbc0012I Integer solution of -13.60238 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 55 rows 35 columns
Cbc0031I 24 added rows had average density of 48.75
Cbc0013I At root node, 24 cuts changed objective from -40.53484 to -32.389396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13008 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1211 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 108 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 68.2 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.60238 best solution, best possible -32.389396 (0.90 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 59 rows 37 columns
Cbc0038I Full problem 129 rows 76 columns, reduced to 26 rows 19 columns
Cbc0001I Search completed - best objective -13.60238, took 11929 iterations and 112 nodes (1.53 seconds)
Cbc0032I Strong branching done 1154 times (17867 iterations), fathomed 10 nodes and fixed 41 variables
Cbc0035I Maximum depth 31, 446 variables fixed on reduced cost
Total time (CPU seconds):       1.48   (Wallclock seconds):       1.54

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 113 (-39) columns and 1728 (-1575) elements
Clp1000I sum of infeasibilities 3.43888e-06 - average 3.73791e-08, 39 fixed columns
Coin0506I Presolve 60 (-32) rows, 73 (-40) columns and 821 (-907) elements
Clp0006I 0  Obj 43.212748 Dual inf 2.8691129 (73)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 2.1044606 - largest nonzero change 1.7045029e-05 ( 0.00095241485%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 61.795867
Clp0000I Optimal - objective value 61.795867
Coin0511I After Postsolve, objective 61.795867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.795867
Clp0000I Optimal - objective value 61.795867
Clp0000I Optimal - objective value 61.795867
Clp0000I Optimal - objective value 61.795867
Coin0511I After Postsolve, objective 61.795867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.79586731 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 113 columns (113 integer (113 of which binary)) and 1738 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.249%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 5.87696
Cbc0038I Pass   1: suminf.    2.12505 (22) obj. -28.2696 iterations 12
Cbc0038I Pass   2: suminf.    2.12505 (22) obj. -28.2696 iterations 4
Cbc0038I Pass   3: suminf.    0.75937 (9) obj. -14.832 iterations 13
Cbc0038I Solution found of 1.67637
Cbc0038I Rounding solution of -9.50749 is better than previous of 1.67637

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -9.50749 to -11.0933 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.6852
Cbc0038I Pass   4: suminf.    2.12505 (22) obj. -28.2696 iterations 0
Cbc0038I Pass   5: suminf.    2.12505 (22) obj. -28.2696 iterations 1
Cbc0038I Pass   6: suminf.    0.75937 (9) obj. -14.832 iterations 13
Cbc0038I Pass   7: suminf.    0.20159 (4) obj. -14.6852 iterations 11
Cbc0038I Pass   8: suminf.    0.20159 (4) obj. -14.6852 iterations 0
Cbc0038I Pass   9: suminf.    0.43598 (3) obj. -14.6852 iterations 5
Cbc0038I Pass  10: suminf.    0.24220 (3) obj. -14.6852 iterations 2
Cbc0038I Pass  11: suminf.    1.44461 (10) obj. -18.877 iterations 21
Cbc0038I Pass  12: suminf.    1.31298 (10) obj. -18.8955 iterations 6
Cbc0038I Pass  13: suminf.    1.48583 (9) obj. -14.6852 iterations 18
Cbc0038I Pass  14: suminf.    1.44274 (8) obj. -14.6852 iterations 3
Cbc0038I Pass  15: suminf.    0.73820 (4) obj. -14.6852 iterations 12
Cbc0038I Pass  16: suminf.    0.73820 (4) obj. -14.6852 iterations 1
Cbc0038I Pass  17: suminf.    0.65924 (4) obj. -14.6852 iterations 4
Cbc0038I Pass  18: suminf.    0.65924 (4) obj. -14.6852 iterations 0
Cbc0038I Pass  19: suminf.    0.54562 (2) obj. -14.6852 iterations 8
Cbc0038I Pass  20: suminf.    0.15601 (2) obj. -14.6852 iterations 8
Cbc0038I Pass  21: suminf.    0.83748 (3) obj. -14.6852 iterations 4
Cbc0038I Pass  22: suminf.    0.83748 (3) obj. -14.6852 iterations 0
Cbc0038I Pass  23: suminf.    2.42682 (16) obj. -14.6852 iterations 29
Cbc0038I Pass  24: suminf.    2.39887 (15) obj. -14.6852 iterations 7
Cbc0038I Pass  25: suminf.    0.43638 (4) obj. -14.6852 iterations 23
Cbc0038I Pass  26: suminf.    0.43638 (4) obj. -14.6852 iterations 0
Cbc0038I Pass  27: suminf.    1.66544 (4) obj. -14.6852 iterations 6
Cbc0038I Pass  28: suminf.    0.43638 (4) obj. -14.6852 iterations 2
Cbc0038I Pass  29: suminf.    1.70415 (11) obj. -14.6852 iterations 17
Cbc0038I Pass  30: suminf.    1.26353 (9) obj. -14.6852 iterations 5
Cbc0038I Pass  31: suminf.    1.01931 (4) obj. -14.6852 iterations 14
Cbc0038I Pass  32: suminf.    0.58896 (2) obj. -14.6852 iterations 2
Cbc0038I Pass  33: suminf.    0.40652 (3) obj. -16.0276 iterations 2
Cbc0038I Rounding solution of -11.9015 is better than previous of -11.0933

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 14 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -21.1503
Cbc0038I Pass  33: suminf.    2.12505 (22) obj. -28.2696 iterations 0
Cbc0038I Pass  34: suminf.    2.12505 (22) obj. -28.2696 iterations 1
Cbc0038I Pass  35: suminf.    1.40914 (11) obj. -21.1503 iterations 28
Cbc0038I Pass  36: suminf.    1.40914 (11) obj. -21.1503 iterations 0
Cbc0038I Pass  37: suminf.    1.41142 (7) obj. -21.1503 iterations 12
Cbc0038I Pass  38: suminf.    0.41961 (3) obj. -21.1503 iterations 4
Cbc0038I Pass  39: suminf.    0.39166 (3) obj. -21.4019 iterations 1
Cbc0038I Pass  40: suminf.    0.67667 (7) obj. -21.1503 iterations 7
Cbc0038I Pass  41: suminf.    0.67667 (7) obj. -21.1503 iterations 0
Cbc0038I Pass  42: suminf.    1.70664 (6) obj. -21.1503 iterations 9
Cbc0038I Pass  43: suminf.    0.62564 (6) obj. -21.1503 iterations 1
Cbc0038I Pass  44: suminf.    0.62564 (6) obj. -21.1503 iterations 0
Cbc0038I Pass  45: suminf.    1.70664 (6) obj. -21.1503 iterations 6
Cbc0038I Pass  46: suminf.    1.28250 (9) obj. -21.1503 iterations 9
Cbc0038I Pass  47: suminf.    1.17792 (9) obj. -21.1503 iterations 4
Cbc0038I Pass  48: suminf.    1.58934 (6) obj. -21.1503 iterations 12
Cbc0038I Pass  49: suminf.    1.20861 (7) obj. -21.1503 iterations 2
Cbc0038I Pass  50: suminf.    1.66411 (7) obj. -21.1503 iterations 2
Cbc0038I Pass  51: suminf.    1.81626 (11) obj. -21.1503 iterations 11
Cbc0038I Pass  52: suminf.    1.40012 (10) obj. -21.1503 iterations 4
Cbc0038I Pass  53: suminf.    1.74160 (7) obj. -21.1503 iterations 11
Cbc0038I Pass  54: suminf.    2.85003 (13) obj. -21.1503 iterations 14
Cbc0038I Pass  55: suminf.    2.11249 (13) obj. -21.1503 iterations 6
Cbc0038I Pass  56: suminf.    1.88829 (11) obj. -21.5779 iterations 2
Cbc0038I Pass  57: suminf.    2.19030 (9) obj. -21.1503 iterations 12
Cbc0038I Pass  58: suminf.    2.19030 (9) obj. -21.1503 iterations 2
Cbc0038I Pass  59: suminf.    0.71330 (6) obj. -21.1503 iterations 9
Cbc0038I Pass  60: suminf.    0.67949 (6) obj. -21.1503 iterations 3
Cbc0038I Pass  61: suminf.    1.13128 (6) obj. -21.1503 iterations 7
Cbc0038I Pass  62: suminf.    1.88081 (10) obj. -21.1503 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 13 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -11.9015 - took 0.04 seconds
Cbc0012I Integer solution of -11.90146 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 92 rows 113 columns, reduced to 10 rows 14 columns
Cbc0031I 42 added rows had average density of 40.214286
Cbc0013I At root node, 42 cuts changed objective from -47.010985 to -19.811303 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9457 row cuts average 2.1 elements, 1 column cuts (1 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1405 row cuts average 108.3 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 214 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1659 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 448 row cuts average 47.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.642 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.90146 best solution, best possible -19.811303 (2.06 seconds)
Cbc0016I Integer solution of -12.2736 found by strong branching after 3166 iterations and 10 nodes (2.30 seconds)
Cbc0012I Integer solution of -13.07288 found by rounding after 3463 iterations and 36 nodes (2.36 seconds)
Cbc0016I Integer solution of -13.60238 found by strong branching after 3511 iterations and 39 nodes (2.36 seconds)
Cbc0038I Full problem 92 rows 113 columns, reduced to 13 rows 19 columns
Cbc0001I Search completed - best objective -13.60238, took 4361 iterations and 72 nodes (2.45 seconds)
Cbc0032I Strong branching done 698 times (8659 iterations), fathomed 18 nodes and fixed 18 variables
Cbc0035I Maximum depth 14, 352 variables fixed on reduced cost
Total time (CPU seconds):       1.85   (Wallclock seconds):       2.47

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 76 (-2) columns and 402 (-51) elements
Clp1000I sum of infeasibilities 2.16212e-05 - average 1.67606e-07, 14 fixed columns
Coin0506I Presolve 105 (-24) rows, 62 (-14) columns and 326 (-76) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 3.0730803 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 40.53484
Clp0000I Optimal - objective value 40.53484
Coin0511I After Postsolve, objective 40.53484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 40.53484
Clp0000I Optimal - objective value 40.53484
Clp0000I Optimal - objective value 40.53484
Coin0511I After Postsolve, objective 40.53484, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 40.53484038 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 129 rows, 76 columns (75 integer (75 of which binary)) and 402 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.092%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 34 integers unsatisfied sum - 9.38273
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.2487 iterations 45
Cbc0038I Solution found of 10.2487
Cbc0038I Relaxing continuous gives 10.2488
Cbc0038I Rounding solution of -10.5289 is better than previous of 10.2488

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 55 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -10.5289 to -13.1628 (0.04 seconds)
Cbc0038I Round again with cutoff of -15.9001
Cbc0038I Pass   2: suminf.    2.93642 (9) obj. -15.9001 iterations 9
Cbc0038I Pass   3: suminf.    0.48807 (4) obj. -15.9001 iterations 9
Cbc0038I Pass   4: suminf.    0.47256 (4) obj. -15.9001 iterations 1
Cbc0038I Pass   5: suminf.    1.16481 (5) obj. -15.9001 iterations 6
Cbc0038I Pass   6: suminf.    0.89968 (3) obj. -15.9001 iterations 1
Cbc0038I Pass   7: suminf.    0.46647 (3) obj. -15.9001 iterations 4
Cbc0038I Pass   8: suminf.    0.71436 (5) obj. -15.9001 iterations 6
Cbc0038I Pass   9: suminf.    0.49943 (5) obj. -15.9001 iterations 1
Cbc0038I Pass  10: suminf.    1.14248 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  11: suminf.    0.47256 (4) obj. -15.9001 iterations 3
Cbc0038I Pass  12: suminf.    1.16481 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  13: suminf.    0.89968 (3) obj. -15.9001 iterations 1
Cbc0038I Pass  14: suminf.    0.46647 (3) obj. -15.9001 iterations 4
Cbc0038I Pass  15: suminf.    0.71436 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  16: suminf.    0.49943 (5) obj. -15.9001 iterations 1
Cbc0038I Pass  17: suminf.    1.14248 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  18: suminf.    0.47256 (4) obj. -15.9001 iterations 3
Cbc0038I Pass  19: suminf.    1.16481 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  20: suminf.    0.89968 (3) obj. -15.9001 iterations 1
Cbc0038I Pass  21: suminf.    0.46647 (3) obj. -15.9001 iterations 4
Cbc0038I Pass  22: suminf.    0.71436 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  23: suminf.    0.49943 (5) obj. -15.9001 iterations 1
Cbc0038I Pass  24: suminf.    1.14248 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  25: suminf.    0.47256 (4) obj. -15.9001 iterations 3
Cbc0038I Pass  26: suminf.    1.16481 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  27: suminf.    0.89968 (3) obj. -15.9001 iterations 1
Cbc0038I Pass  28: suminf.    0.46647 (3) obj. -15.9001 iterations 4
Cbc0038I Pass  29: suminf.    0.71436 (5) obj. -15.9001 iterations 6
Cbc0038I Pass  30: suminf.    0.49943 (5) obj. -15.9001 iterations 1
Cbc0038I Pass  31: suminf.    1.14248 (5) obj. -15.9001 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 57 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -13.1628 to -13.6024 (0.09 seconds)
Cbc0038I Round again with cutoff of -20.8271
Cbc0038I Pass  31: suminf.    3.74698 (13) obj. -20.8271 iterations 5
Cbc0038I Pass  32: suminf.    1.86927 (7) obj. -20.8271 iterations 10
Cbc0038I Pass  33: suminf.    0.96155 (8) obj. -20.8271 iterations 3
Cbc0038I Pass  34: suminf.    1.94233 (7) obj. -20.8271 iterations 9
Cbc0038I Pass  35: suminf.    0.72513 (9) obj. -20.8271 iterations 7
Cbc0038I Pass  36: suminf.    1.77517 (6) obj. -20.8271 iterations 13
Cbc0038I Pass  37: suminf.    1.68866 (7) obj. -20.8271 iterations 1
Cbc0038I Pass  38: suminf.    2.35807 (8) obj. -20.8271 iterations 7
Cbc0038I Pass  39: suminf.    1.10571 (5) obj. -20.8271 iterations 8
Cbc0038I Pass  40: suminf.    2.15062 (7) obj. -20.8271 iterations 5
Cbc0038I Pass  41: suminf.    2.92914 (11) obj. -20.8271 iterations 19
Cbc0038I Pass  42: suminf.    2.43319 (9) obj. -20.8271 iterations 9
Cbc0038I Pass  43: suminf.    3.14842 (9) obj. -20.8271 iterations 15
Cbc0038I Pass  44: suminf.    3.03397 (8) obj. -20.8271 iterations 2
Cbc0038I Pass  45: suminf.    2.04324 (8) obj. -20.8271 iterations 1
Cbc0038I Pass  46: suminf.    1.75871 (8) obj. -20.8271 iterations 1
Cbc0038I Pass  47: suminf.    2.95666 (7) obj. -20.8271 iterations 8
Cbc0038I Pass  48: suminf.    1.93488 (6) obj. -20.8271 iterations 1
Cbc0038I Pass  49: suminf.    1.70787 (6) obj. -20.8271 iterations 2
Cbc0038I Pass  50: suminf.    1.45091 (7) obj. -20.8271 iterations 4
Cbc0038I Pass  51: suminf.    3.64082 (10) obj. -20.8271 iterations 12
Cbc0038I Pass  52: suminf.    2.24497 (10) obj. -20.8271 iterations 5
Cbc0038I Pass  53: suminf.    2.07818 (9) obj. -20.8271 iterations 2
Cbc0038I Pass  54: suminf.    2.79566 (9) obj. -20.8271 iterations 16
Cbc0038I Pass  55: suminf.    2.43181 (10) obj. -20.8271 iterations 11
Cbc0038I Pass  56: suminf.    1.34312 (6) obj. -20.8271 iterations 17
Cbc0038I Pass  57: suminf.    1.21350 (5) obj. -20.8271 iterations 2
Cbc0038I Pass  58: suminf.    2.54231 (6) obj. -20.8271 iterations 7
Cbc0038I Pass  59: suminf.    2.54231 (6) obj. -20.8271 iterations 0
Cbc0038I Pass  60: suminf.    2.37662 (6) obj. -20.8271 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 129 rows 76 columns, reduced to 68 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -13.6024 - took 0.13 seconds
Cbc0012I Integer solution of -13.60238 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 55 rows 35 columns
Cbc0031I 24 added rows had average density of 48.75
Cbc0013I At root node, 24 cuts changed objective from -40.53484 to -32.389396 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13008 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1211 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 108 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 68.2 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.60238 best solution, best possible -32.389396 (1.07 seconds)
Cbc0038I Full problem 129 rows 76 columns, reduced to 59 rows 37 columns
Cbc0038I Full problem 129 rows 76 columns, reduced to 26 rows 19 columns
Cbc0010I After 100 nodes, 1 on tree, -13.60238 best solution, best possible -15.983982 (1.78 seconds)
Cbc0001I Search completed - best objective -13.60238, took 11929 iterations and 112 nodes (1.82 seconds)
Cbc0032I Strong branching done 1154 times (17867 iterations), fathomed 10 nodes and fixed 41 variables
Cbc0035I Maximum depth 31, 446 variables fixed on reduced cost
Total time (CPU seconds):       1.74   (Wallclock seconds):       1.83

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 113 (-40) columns and 1728 (-1576) elements
Clp1000I sum of infeasibilities 3.43888e-06 - average 3.73791e-08, 39 fixed columns
Coin0506I Presolve 60 (-32) rows, 73 (-40) columns and 821 (-907) elements
Clp0006I 0  Obj 43.212748 Dual inf 2.8691129 (73)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 2.1044606 - largest nonzero change 1.7045029e-05 ( 0.00095241485%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 61.795867
Clp0000I Optimal - objective value 61.795867
Coin0511I After Postsolve, objective 61.795867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.795867
Clp0000I Optimal - objective value 61.795867
Clp0000I Optimal - objective value 61.795867
Clp0000I Optimal - objective value 61.795867
Coin0511I After Postsolve, objective 61.795867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.79586731 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 92 rows, 113 columns (113 integer (113 of which binary)) and 1738 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.249%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 32 integers unsatisfied sum - 5.87696
Cbc0038I Pass   1: suminf.    2.12505 (22) obj. -28.2696 iterations 12
Cbc0038I Pass   2: suminf.    2.12505 (22) obj. -28.2696 iterations 4
Cbc0038I Pass   3: suminf.    0.75937 (9) obj. -14.832 iterations 13
Cbc0038I Solution found of 1.67637
Cbc0038I Rounding solution of -9.50749 is better than previous of 1.67637

Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -9.50749 to -11.0933 (0.04 seconds)
Cbc0038I Round again with cutoff of -14.6852
Cbc0038I Pass   4: suminf.    2.12505 (22) obj. -28.2696 iterations 0
Cbc0038I Pass   5: suminf.    2.12505 (22) obj. -28.2696 iterations 1
Cbc0038I Pass   6: suminf.    0.75937 (9) obj. -14.832 iterations 13
Cbc0038I Pass   7: suminf.    0.20159 (4) obj. -14.6852 iterations 11
Cbc0038I Pass   8: suminf.    0.20159 (4) obj. -14.6852 iterations 0
Cbc0038I Pass   9: suminf.    0.43598 (3) obj. -14.6852 iterations 5
Cbc0038I Pass  10: suminf.    0.24220 (3) obj. -14.6852 iterations 2
Cbc0038I Pass  11: suminf.    1.44461 (10) obj. -18.877 iterations 21
Cbc0038I Pass  12: suminf.    1.31298 (10) obj. -18.8955 iterations 6
Cbc0038I Pass  13: suminf.    1.48583 (9) obj. -14.6852 iterations 18
Cbc0038I Pass  14: suminf.    1.44274 (8) obj. -14.6852 iterations 3
Cbc0038I Pass  15: suminf.    0.73820 (4) obj. -14.6852 iterations 12
Cbc0038I Pass  16: suminf.    0.73820 (4) obj. -14.6852 iterations 1
Cbc0038I Pass  17: suminf.    0.65924 (4) obj. -14.6852 iterations 4
Cbc0038I Pass  18: suminf.    0.65924 (4) obj. -14.6852 iterations 0
Cbc0038I Pass  19: suminf.    0.54562 (2) obj. -14.6852 iterations 8
Cbc0038I Pass  20: suminf.    0.15601 (2) obj. -14.6852 iterations 8
Cbc0038I Pass  21: suminf.    0.83748 (3) obj. -14.6852 iterations 4
Cbc0038I Pass  22: suminf.    0.83748 (3) obj. -14.6852 iterations 0
Cbc0038I Pass  23: suminf.    2.42682 (16) obj. -14.6852 iterations 29
Cbc0038I Pass  24: suminf.    2.39887 (15) obj. -14.6852 iterations 7
Cbc0038I Pass  25: suminf.    0.43638 (4) obj. -14.6852 iterations 23
Cbc0038I Pass  26: suminf.    0.43638 (4) obj. -14.6852 iterations 0
Cbc0038I Pass  27: suminf.    1.66544 (4) obj. -14.6852 iterations 6
Cbc0038I Pass  28: suminf.    0.43638 (4) obj. -14.6852 iterations 2
Cbc0038I Pass  29: suminf.    1.70415 (11) obj. -14.6852 iterations 17
Cbc0038I Pass  30: suminf.    1.26353 (9) obj. -14.6852 iterations 5
Cbc0038I Pass  31: suminf.    1.01931 (4) obj. -14.6852 iterations 14
Cbc0038I Pass  32: suminf.    0.58896 (2) obj. -14.6852 iterations 2
Cbc0038I Pass  33: suminf.    0.40652 (3) obj. -16.0276 iterations 2
Cbc0038I Rounding solution of -11.9015 is better than previous of -11.0933

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 14 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -21.1503
Cbc0038I Pass  33: suminf.    2.12505 (22) obj. -28.2696 iterations 0
Cbc0038I Pass  34: suminf.    2.12505 (22) obj. -28.2696 iterations 1
Cbc0038I Pass  35: suminf.    1.40914 (11) obj. -21.1503 iterations 28
Cbc0038I Pass  36: suminf.    1.40914 (11) obj. -21.1503 iterations 0
Cbc0038I Pass  37: suminf.    1.41142 (7) obj. -21.1503 iterations 12
Cbc0038I Pass  38: suminf.    0.41961 (3) obj. -21.1503 iterations 4
Cbc0038I Pass  39: suminf.    0.39166 (3) obj. -21.4019 iterations 1
Cbc0038I Pass  40: suminf.    0.67667 (7) obj. -21.1503 iterations 7
Cbc0038I Pass  41: suminf.    0.67667 (7) obj. -21.1503 iterations 0
Cbc0038I Pass  42: suminf.    1.70664 (6) obj. -21.1503 iterations 9
Cbc0038I Pass  43: suminf.    0.62564 (6) obj. -21.1503 iterations 1
Cbc0038I Pass  44: suminf.    0.62564 (6) obj. -21.1503 iterations 0
Cbc0038I Pass  45: suminf.    1.70664 (6) obj. -21.1503 iterations 6
Cbc0038I Pass  46: suminf.    1.28250 (9) obj. -21.1503 iterations 9
Cbc0038I Pass  47: suminf.    1.17792 (9) obj. -21.1503 iterations 4
Cbc0038I Pass  48: suminf.    1.58934 (6) obj. -21.1503 iterations 12
Cbc0038I Pass  49: suminf.    1.20861 (7) obj. -21.1503 iterations 2
Cbc0038I Pass  50: suminf.    1.66411 (7) obj. -21.1503 iterations 2
Cbc0038I Pass  51: suminf.    1.81626 (11) obj. -21.1503 iterations 11
Cbc0038I Pass  52: suminf.    1.40012 (10) obj. -21.1503 iterations 4
Cbc0038I Pass  53: suminf.    1.74160 (7) obj. -21.1503 iterations 11
Cbc0038I Pass  54: suminf.    2.85003 (13) obj. -21.1503 iterations 14
Cbc0038I Pass  55: suminf.    2.11249 (13) obj. -21.1503 iterations 6
Cbc0038I Pass  56: suminf.    1.88829 (11) obj. -21.5779 iterations 2
Cbc0038I Pass  57: suminf.    2.19030 (9) obj. -21.1503 iterations 12
Cbc0038I Pass  58: suminf.    2.19030 (9) obj. -21.1503 iterations 2
Cbc0038I Pass  59: suminf.    0.71330 (6) obj. -21.1503 iterations 9
Cbc0038I Pass  60: suminf.    0.67949 (6) obj. -21.1503 iterations 3
Cbc0038I Pass  61: suminf.    1.13128 (6) obj. -21.1503 iterations 7
Cbc0038I Pass  62: suminf.    1.88081 (10) obj. -21.1503 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 92 rows 113 columns, reduced to 13 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -11.9015 - took 0.05 seconds
Cbc0012I Integer solution of -11.90146 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 92 rows 113 columns, reduced to 10 rows 14 columns
Cbc0031I 42 added rows had average density of 40.214286
Cbc0013I At root node, 42 cuts changed objective from -47.010985 to -19.811303 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9457 row cuts average 2.1 elements, 1 column cuts (1 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1405 row cuts average 108.3 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 214 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1659 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 448 row cuts average 47.4 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 20.2 elements, 0 column cuts (0 active)  in 0.702 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.90146 best solution, best possible -19.811303 (2.29 seconds)
Cbc0016I Integer solution of -12.2736 found by strong branching after 3166 iterations and 10 nodes (2.57 seconds)
Cbc0012I Integer solution of -13.07288 found by rounding after 3463 iterations and 36 nodes (2.63 seconds)
Cbc0016I Integer solution of -13.60238 found by strong branching after 3511 iterations and 39 nodes (2.64 seconds)
Cbc0038I Full problem 92 rows 113 columns, reduced to 13 rows 19 columns
Cbc0001I Search completed - best objective -13.60238, took 4361 iterations and 72 nodes (2.74 seconds)
Cbc0032I Strong branching done 698 times (8659 iterations), fathomed 18 nodes and fixed 18 variables
Cbc0035I Maximum depth 14, 352 variables fixed on reduced cost
Total time (CPU seconds):       2.02   (Wallclock seconds):       2.76

