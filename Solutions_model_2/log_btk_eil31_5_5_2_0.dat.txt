Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 5.15721e-07 - average 9.91772e-09, 6 fixed columns
Coin0506I Presolve 39 (-13) rows, 22 (-6) columns and 115 (-38) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Coin0511I After Postsolve, objective 83.254455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Coin0511I After Postsolve, objective 83.254455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.25445476 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.75937
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.4201 iterations 16
Cbc0038I Solution found of -20.4201
Cbc0038I Relaxing continuous gives -20.4201
Cbc0038I Rounding solution of -20.5213 is better than previous of -20.4201

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -20.5213 to -51.3896 (0.01 seconds)
Cbc0038I Round again with cutoff of -53.7383
Cbc0038I Pass   2: suminf.    1.32259 (4) obj. -53.7383 iterations 5
Cbc0038I Pass   3: suminf.    0.41124 (2) obj. -53.7383 iterations 4
Cbc0038I Pass   4: suminf.    0.41124 (2) obj. -53.7383 iterations 0
Cbc0038I Pass   5: suminf.    0.19494 (2) obj. -53.7383 iterations 3
Cbc0038I Pass   6: suminf.    0.03750 (1) obj. -53.7383 iterations 1
Cbc0038I Pass   7: suminf.    1.74250 (6) obj. -53.7383 iterations 4
Cbc0038I Pass   8: suminf.    1.40727 (5) obj. -53.7383 iterations 4
Cbc0038I Pass   9: suminf.    1.12334 (4) obj. -53.7383 iterations 3
Cbc0038I Pass  10: suminf.    1.47586 (6) obj. -53.7383 iterations 5
Cbc0038I Pass  11: suminf.    1.40605 (8) obj. -53.7383 iterations 2
Cbc0038I Pass  12: suminf.    1.42793 (4) obj. -53.7383 iterations 13
Cbc0038I Pass  13: suminf.    0.86026 (3) obj. -53.7383 iterations 4
Cbc0038I Pass  14: suminf.    0.78165 (3) obj. -53.7383 iterations 3
Cbc0038I Pass  15: suminf.    0.11373 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  16: suminf.    0.02500 (1) obj. -53.7383 iterations 1
Cbc0038I Pass  17: suminf.    2.20487 (6) obj. -53.7383 iterations 5
Cbc0038I Pass  18: suminf.    1.10173 (3) obj. -53.7383 iterations 3
Cbc0038I Pass  19: suminf.    0.03750 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  20: suminf.    0.19494 (2) obj. -53.7383 iterations 1
Cbc0038I Pass  21: suminf.    0.98261 (4) obj. -53.7383 iterations 7
Cbc0038I Pass  22: suminf.    0.98261 (4) obj. -53.7383 iterations 1
Cbc0038I Pass  23: suminf.    0.80293 (5) obj. -53.7383 iterations 5
Cbc0038I Pass  24: suminf.    0.60617 (5) obj. -53.7383 iterations 2
Cbc0038I Pass  25: suminf.    1.05147 (4) obj. -53.7383 iterations 6
Cbc0038I Pass  26: suminf.    0.91900 (2) obj. -53.7383 iterations 4
Cbc0038I Pass  27: suminf.    0.02500 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  28: suminf.    0.11373 (1) obj. -53.7383 iterations 1
Cbc0038I Pass  29: suminf.    1.13953 (4) obj. -53.7383 iterations 3
Cbc0038I Pass  30: suminf.    0.92609 (3) obj. -53.7383 iterations 5
Cbc0038I Pass  31: suminf.    0.61602 (2) obj. -53.7383 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -51.3896 - took 0.04 seconds
Cbc0012I Integer solution of -51.3896 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 50 rows 28 columns, reduced to 23 rows 14 columns
Cbc0031I 8 added rows had average density of 20.5
Cbc0013I At root node, 8 cuts changed objective from -74.876173 to -63.685182 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 504 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -51.38959999999999, took 2292 iterations and 22 nodes (0.17 seconds)
Cbc0032I Strong branching done 176 times (1247 iterations), fathomed 3 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-15) rows, 51 (-11) columns and 471 (-177) elements
Clp1000I sum of infeasibilities 1.01168e-08 - average 2.06464e-10, 29 fixed columns
Coin0506I Presolve 20 (-29) rows, 22 (-29) columns and 79 (-392) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 1.4346865 - largest nonzero change 1.0053974e-05 ( 0.00086069148%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 55.964158
Clp0000I Optimal - objective value 55.964158
Coin0511I After Postsolve, objective 55.964158, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.386017 - largest nonzero change 2.9501341e-05 ( 0.0025820745%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 85.582351
Clp0000I Optimal - objective value 85.582351
Clp0000I Optimal - objective value 85.582351
Coin0511I After Postsolve, objective 85.582351, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.58235134 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 3 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.634%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.61235
Cbc0038I Pass   1: suminf.    1.26385 (14) obj. -47.0473 iterations 10
Cbc0038I Pass   2: suminf.    1.26385 (14) obj. -47.0473 iterations 0
Cbc0038I Solution found of -27.145
Cbc0038I Rounding solution of -44.2401 is better than previous of -27.145

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -47.1809
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.26967 (15) obj. -47.1809 iterations 1
Cbc0038I Pass   4: suminf.    1.26967 (15) obj. -47.1809 iterations 1
Cbc0038I Pass   5: suminf.    0.47778 (1) obj. -52.6861 iterations 18
Cbc0038I Pass   6: suminf.    0.40966 (1) obj. -47.1809 iterations 1
Cbc0038I Pass   7: suminf.    1.18545 (5) obj. -47.1809 iterations 7
Cbc0038I Pass   8: suminf.    0.40108 (3) obj. -47.1809 iterations 3
Cbc0038I Pass   9: suminf.    0.12500 (1) obj. -48.6694 iterations 3
Cbc0038I Pass  10: suminf.    0.09139 (2) obj. -47.1809 iterations 2
Cbc0038I Pass  11: suminf.    0.12500 (1) obj. -48.6694 iterations 1
Cbc0038I Pass  12: suminf.    1.62646 (8) obj. -47.1809 iterations 18
Cbc0038I Pass  13: suminf.    0.99921 (5) obj. -47.1809 iterations 5
Cbc0038I Pass  14: suminf.    0.72091 (3) obj. -47.1809 iterations 6
Cbc0038I Pass  15: suminf.    0.43585 (2) obj. -47.1809 iterations 3
Cbc0038I Pass  16: suminf.    0.48887 (2) obj. -48.3411 iterations 2
Cbc0038I Pass  17: suminf.    0.70283 (5) obj. -47.1809 iterations 4
Cbc0038I Pass  18: suminf.    0.64358 (3) obj. -47.1809 iterations 3
Cbc0038I Pass  19: suminf.    1.96405 (12) obj. -47.1809 iterations 11
Cbc0038I Pass  20: suminf.    1.30671 (6) obj. -47.1809 iterations 9
Cbc0038I Pass  21: suminf.    1.08069 (4) obj. -47.1809 iterations 7
Cbc0038I Pass  22: suminf.    1.08069 (4) obj. -47.1809 iterations 2
Cbc0038I Pass  23: suminf.    0.99427 (3) obj. -47.1809 iterations 4
Cbc0038I Pass  24: suminf.    0.99427 (3) obj. -47.1809 iterations 2
Cbc0038I Pass  25: suminf.    0.61930 (3) obj. -49.3353 iterations 3
Cbc0038I Pass  26: suminf.    0.50953 (3) obj. -47.1809 iterations 3
Cbc0038I Pass  27: suminf.    0.80084 (3) obj. -47.1809 iterations 1
Cbc0038I Pass  28: suminf.    1.98529 (9) obj. -47.1809 iterations 21
Cbc0038I Pass  29: suminf.    0.84300 (5) obj. -48.0771 iterations 5
Cbc0038I Pass  30: suminf.    0.85714 (4) obj. -47.1809 iterations 10
Cbc0038I Pass  31: suminf.    0.59383 (3) obj. -47.1809 iterations 3
Cbc0038I Pass  32: suminf.    0.59383 (3) obj. -47.1809 iterations 1
Cbc0038I Rounding solution of -50.4346 is better than previous of -44.2401

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 37 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -55.0772
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.61353 (15) obj. -55.0772 iterations 0
Cbc0038I Pass  33: suminf.    1.61353 (15) obj. -55.0772 iterations 1
Cbc0038I Pass  34: suminf.    0.89416 (3) obj. -55.0772 iterations 24
Cbc0038I Pass  35: suminf.    0.89416 (3) obj. -55.0772 iterations 1
Cbc0038I Pass  36: suminf.    0.93913 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  37: suminf.    0.71966 (3) obj. -55.0772 iterations 4
Cbc0038I Pass  38: suminf.    0.94986 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  39: suminf.    0.51672 (3) obj. -55.0772 iterations 4
Cbc0038I Pass  40: suminf.    0.89416 (3) obj. -55.0772 iterations 6
Cbc0038I Pass  41: suminf.    0.89416 (3) obj. -55.0772 iterations 2
Cbc0038I Pass  42: suminf.    0.93913 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  43: suminf.    0.71966 (3) obj. -55.0772 iterations 4
Cbc0038I Pass  44: suminf.    0.94986 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  45: suminf.    0.51672 (3) obj. -55.0772 iterations 4
Cbc0038I Pass  46: suminf.    0.89416 (3) obj. -55.0772 iterations 6
Cbc0038I Pass  47: suminf.    0.89416 (3) obj. -55.0772 iterations 2
Cbc0038I Pass  48: suminf.    0.93913 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  49: suminf.    0.71966 (3) obj. -55.0772 iterations 4
Cbc0038I Pass  50: suminf.    0.94986 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  51: suminf.    0.51672 (3) obj. -55.0772 iterations 4
Cbc0038I Pass  52: suminf.    0.89416 (3) obj. -55.0772 iterations 6
Cbc0038I Pass  53: suminf.    0.89416 (3) obj. -55.0772 iterations 2
Cbc0038I Pass  54: suminf.    0.93913 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  55: suminf.    0.71966 (3) obj. -55.0772 iterations 4
Cbc0038I Pass  56: suminf.    0.94986 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  57: suminf.    0.51672 (3) obj. -55.0772 iterations 4
Cbc0038I Pass  58: suminf.    0.89416 (3) obj. -55.0772 iterations 6
Cbc0038I Pass  59: suminf.    0.89416 (3) obj. -55.0772 iterations 2
Cbc0038I Pass  60: suminf.    0.93913 (3) obj. -55.0772 iterations 3
Cbc0038I Pass  61: suminf.    0.71966 (3) obj. -55.0772 iterations 4
Cbc0038I Rounding solution of -51.1951 is better than previous of -50.4346

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -60.648
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.85612 (15) obj. -60.648 iterations 0
Cbc0038I Pass  62: suminf.    1.85612 (15) obj. -60.648 iterations 1
Cbc0038I Pass  63: suminf.    1.66532 (5) obj. -60.648 iterations 22
Cbc0038I Pass  64: suminf.    1.66532 (5) obj. -60.648 iterations 1
Cbc0038I Pass  65: suminf.    1.25538 (5) obj. -60.648 iterations 5
Cbc0038I Pass  66: suminf.    1.25538 (5) obj. -60.648 iterations 2
Cbc0038I Pass  67: suminf.    1.66532 (5) obj. -60.648 iterations 4
Cbc0038I Pass  68: suminf.    1.38161 (7) obj. -60.648 iterations 7
Cbc0038I Pass  69: suminf.    1.01012 (6) obj. -60.648 iterations 1
Cbc0038I Pass  70: suminf.    1.01012 (6) obj. -60.648 iterations 1
Cbc0038I Pass  71: suminf.    1.82456 (7) obj. -60.648 iterations 11
Cbc0038I Pass  72: suminf.    1.66532 (5) obj. -60.648 iterations 3
Cbc0038I Pass  73: suminf.    1.25538 (5) obj. -60.648 iterations 5
Cbc0038I Pass  74: suminf.    1.25538 (5) obj. -60.648 iterations 2
Cbc0038I Pass  75: suminf.    1.66532 (5) obj. -60.648 iterations 4
Cbc0038I Pass  76: suminf.    2.11466 (9) obj. -60.648 iterations 7
Cbc0038I Pass  77: suminf.    2.00569 (9) obj. -60.648 iterations 1
Cbc0038I Pass  78: suminf.    1.66532 (5) obj. -60.648 iterations 7
Cbc0038I Pass  79: suminf.    1.66532 (5) obj. -60.648 iterations 2
Cbc0038I Pass  80: suminf.    1.25538 (5) obj. -60.648 iterations 5
Cbc0038I Pass  81: suminf.    1.25538 (5) obj. -60.648 iterations 2
Cbc0038I Pass  82: suminf.    1.66532 (5) obj. -60.648 iterations 4
Cbc0038I Pass  83: suminf.    2.02745 (11) obj. -60.648 iterations 7
Cbc0038I Pass  84: suminf.    1.28252 (6) obj. -60.648 iterations 6
Cbc0038I Pass  85: suminf.    1.73321 (5) obj. -60.648 iterations 5
Cbc0038I Pass  86: suminf.    1.32231 (5) obj. -60.648 iterations 2
Cbc0038I Pass  87: suminf.    1.77660 (10) obj. -60.648 iterations 4
Cbc0038I Pass  88: suminf.    1.30502 (7) obj. -60.648 iterations 3
Cbc0038I Pass  89: suminf.    1.73321 (5) obj. -60.648 iterations 5
Cbc0038I Pass  90: suminf.    1.25530 (6) obj. -60.648 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -51.1951 - took 0.04 seconds
Cbc0012I Integer solution of -51.19514 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 10 rows 11 columns
Cbc0012I Integer solution of -51.3896 found by RINS after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 24 added rows had average density of 7.6666667
Cbc0013I At root node, 24 cuts changed objective from -73.646795 to -57.69145 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1431 row cuts average 3.0 elements, 9 column cuts (9 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 345 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 49 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 49 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 144 row cuts average 7.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 221 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 43 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.660 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -51.3896 best solution, best possible -57.69145 (1.39 seconds)
Cbc0010I After 6 nodes, 6 on tree, -51.3896 best solution, best possible -57.69145 (2.10 seconds)
Cbc0001I Search completed - best objective -51.38959999999999, took 2336 iterations and 16 nodes (2.34 seconds)
Cbc0032I Strong branching done 210 times (1776 iterations), fathomed 2 nodes and fixed 9 variables
Cbc0035I Maximum depth 6, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.50   (Wallclock seconds):       2.34

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-13) rows, 28 (-5) columns and 153 (-30) elements
Clp1000I sum of infeasibilities 5.15721e-07 - average 9.91772e-09, 6 fixed columns
Coin0506I Presolve 39 (-13) rows, 22 (-6) columns and 115 (-38) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Coin0511I After Postsolve, objective 83.254455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Clp0000I Optimal - objective value 83.254455
Coin0511I After Postsolve, objective 83.254455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.25445476 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 50 rows, 28 columns (27 integer (27 of which binary)) and 162 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.890%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.75937
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -20.4201 iterations 16
Cbc0038I Solution found of -20.4201
Cbc0038I Relaxing continuous gives -20.4201
Cbc0038I Rounding solution of -20.5213 is better than previous of -20.4201

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -20.5213 to -51.3896 (0.01 seconds)
Cbc0038I Round again with cutoff of -53.7383
Cbc0038I Pass   2: suminf.    1.32259 (4) obj. -53.7383 iterations 5
Cbc0038I Pass   3: suminf.    0.41124 (2) obj. -53.7383 iterations 4
Cbc0038I Pass   4: suminf.    0.41124 (2) obj. -53.7383 iterations 0
Cbc0038I Pass   5: suminf.    0.19494 (2) obj. -53.7383 iterations 3
Cbc0038I Pass   6: suminf.    0.03750 (1) obj. -53.7383 iterations 1
Cbc0038I Pass   7: suminf.    1.74250 (6) obj. -53.7383 iterations 4
Cbc0038I Pass   8: suminf.    1.40727 (5) obj. -53.7383 iterations 4
Cbc0038I Pass   9: suminf.    1.12334 (4) obj. -53.7383 iterations 3
Cbc0038I Pass  10: suminf.    1.47586 (6) obj. -53.7383 iterations 5
Cbc0038I Pass  11: suminf.    1.40605 (8) obj. -53.7383 iterations 2
Cbc0038I Pass  12: suminf.    1.42793 (4) obj. -53.7383 iterations 13
Cbc0038I Pass  13: suminf.    0.86026 (3) obj. -53.7383 iterations 4
Cbc0038I Pass  14: suminf.    0.78165 (3) obj. -53.7383 iterations 3
Cbc0038I Pass  15: suminf.    0.11373 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  16: suminf.    0.02500 (1) obj. -53.7383 iterations 1
Cbc0038I Pass  17: suminf.    2.20487 (6) obj. -53.7383 iterations 5
Cbc0038I Pass  18: suminf.    1.10173 (3) obj. -53.7383 iterations 3
Cbc0038I Pass  19: suminf.    0.03750 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  20: suminf.    0.19494 (2) obj. -53.7383 iterations 1
Cbc0038I Pass  21: suminf.    0.98261 (4) obj. -53.7383 iterations 7
Cbc0038I Pass  22: suminf.    0.98261 (4) obj. -53.7383 iterations 1
Cbc0038I Pass  23: suminf.    0.80293 (5) obj. -53.7383 iterations 5
Cbc0038I Pass  24: suminf.    0.60617 (5) obj. -53.7383 iterations 2
Cbc0038I Pass  25: suminf.    1.05147 (4) obj. -53.7383 iterations 6
Cbc0038I Pass  26: suminf.    0.91900 (2) obj. -53.7383 iterations 4
Cbc0038I Pass  27: suminf.    0.02500 (1) obj. -53.7383 iterations 3
Cbc0038I Pass  28: suminf.    0.11373 (1) obj. -53.7383 iterations 1
Cbc0038I Pass  29: suminf.    1.13953 (4) obj. -53.7383 iterations 3
Cbc0038I Pass  30: suminf.    0.92609 (3) obj. -53.7383 iterations 5
Cbc0038I Pass  31: suminf.    0.61602 (2) obj. -53.7383 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 50 rows 28 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -51.3896 - took 0.02 seconds
Cbc0012I Integer solution of -51.3896 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 50 rows 28 columns, reduced to 23 rows 14 columns
Cbc0031I 8 added rows had average density of 20.5
Cbc0013I At root node, 8 cuts changed objective from -74.876173 to -63.685182 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 822 row cuts average 3.2 elements, 3 column cuts (3 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 504 row cuts average 26.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0001I Search completed - best objective -51.38959999999999, took 2292 iterations and 22 nodes (0.20 seconds)
Cbc0032I Strong branching done 176 times (1247 iterations), fathomed 3 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 33 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-19) rows, 48 (-15) columns and 408 (-241) elements
Clp1000I sum of infeasibilities 1.05446e-09 - average 2.29231e-11, 5 fixed columns
Coin0506I Presolve 41 (-5) rows, 43 (-5) columns and 335 (-73) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.4204472 - largest nonzero change 1.8517931e-05 ( 0.0016580886%) - largest zero change 0
Clp0000I Optimal - objective value 85.582351
Clp0000I Optimal - objective value 85.582351
Coin0511I After Postsolve, objective 85.582351, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 85.582351
Clp0000I Optimal - objective value 85.582351
Clp0000I Optimal - objective value 85.582351
Coin0511I After Postsolve, objective 85.582351, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 85.58235134 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0004I processed model has 44 rows, 48 columns (48 integer (48 of which binary)) and 420 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.827%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 5.51009
Cbc0038I Pass   1: suminf.    0.82232 (10) obj. -40.6225 iterations 11
Cbc0038I Pass   2: suminf.    0.82232 (10) obj. -40.6225 iterations 3
Cbc0038I Solution found of -26.8309
Cbc0038I Rounding solution of -38.8261 is better than previous of -26.8309

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 10 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -38.8261 to -51.3896 (0.01 seconds)
Cbc0038I Round again with cutoff of -53.5909
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.44880 (12) obj. -53.5909 iterations 1
Cbc0038I Pass   4: suminf.    1.44880 (12) obj. -53.5909 iterations 1
Cbc0038I Pass   5: suminf.    1.23474 (4) obj. -53.5909 iterations 16
Cbc0038I Pass   6: suminf.    1.03964 (4) obj. -53.5909 iterations 3
Cbc0038I Pass   7: suminf.    0.89518 (3) obj. -53.5909 iterations 1
Cbc0038I Pass   8: suminf.    0.89112 (3) obj. -53.5909 iterations 1
Cbc0038I Pass   9: suminf.    1.09060 (5) obj. -53.5909 iterations 4
Cbc0038I Pass  10: suminf.    0.93494 (2) obj. -53.5909 iterations 3
Cbc0038I Pass  11: suminf.    0.71690 (3) obj. -53.5909 iterations 2
Cbc0038I Pass  12: suminf.    0.71690 (3) obj. -53.5909 iterations 0
Cbc0038I Pass  13: suminf.    0.94100 (3) obj. -53.5909 iterations 1
Cbc0038I Pass  14: suminf.    2.08972 (10) obj. -53.5909 iterations 13
Cbc0038I Pass  15: suminf.    1.76419 (9) obj. -53.5909 iterations 1
Cbc0038I Pass  16: suminf.    0.89572 (5) obj. -53.5909 iterations 12
Cbc0038I Pass  17: suminf.    0.78811 (4) obj. -53.5909 iterations 2
Cbc0038I Pass  18: suminf.    0.17432 (2) obj. -53.5909 iterations 3
Cbc0038I Pass  19: suminf.    0.07646 (2) obj. -53.5909 iterations 1
Cbc0038I Pass  20: suminf.    2.94312 (9) obj. -53.5909 iterations 12
Cbc0038I Pass  21: suminf.    1.70073 (6) obj. -53.5909 iterations 4
Cbc0038I Pass  22: suminf.    1.63976 (6) obj. -53.5909 iterations 2
Cbc0038I Pass  23: suminf.    1.19277 (4) obj. -53.5909 iterations 7
Cbc0038I Pass  24: suminf.    0.86934 (3) obj. -53.5909 iterations 2
Cbc0038I Pass  25: suminf.    0.70384 (3) obj. -53.5909 iterations 3
Cbc0038I Pass  26: suminf.    0.70384 (3) obj. -53.5909 iterations 1
Cbc0038I Pass  27: suminf.    1.63917 (5) obj. -53.5909 iterations 3
Cbc0038I Pass  28: suminf.    1.01774 (4) obj. -53.5909 iterations 2
Cbc0038I Pass  29: suminf.    1.01774 (4) obj. -53.5909 iterations 1
Cbc0038I Pass  30: suminf.    1.09042 (4) obj. -53.5909 iterations 2
Cbc0038I Pass  31: suminf.    1.09042 (4) obj. -53.5909 iterations 0
Cbc0038I Pass  32: suminf.    1.01774 (4) obj. -53.5909 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 44 rows 48 columns, reduced to 25 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -51.3896 - took 0.01 seconds
Cbc0012I Integer solution of -51.3896 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 44 rows 48 columns, reduced to 9 rows 10 columns
Cbc0031I 23 added rows had average density of 16.391304
Cbc0013I At root node, 23 cuts changed objective from -73.401513 to -57.800512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1342 row cuts average 2.2 elements, 9 column cuts (9 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 690 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 40 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 44 row cuts average 3.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 126 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 205 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 70 row cuts average 13.6 elements, 0 column cuts (0 active)  in 0.712 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -51.3896 best solution, best possible -57.800512 (1.45 seconds)
Cbc0010I After 8 nodes, 3 on tree, -51.3896 best solution, best possible -57.365792 (2.16 seconds)
Cbc0001I Search completed - best objective -51.38959999999999, took 2414 iterations and 12 nodes (2.37 seconds)
Cbc0032I Strong branching done 216 times (2164 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 22 variables fixed on reduced cost
Total time (CPU seconds):       1.53   (Wallclock seconds):       2.38

