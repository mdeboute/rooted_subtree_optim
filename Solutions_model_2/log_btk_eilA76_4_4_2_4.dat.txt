Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000154737 - average 1.1462e-06, 17 fixed columns
Coin0506I Presolve 99 (-36) rows, 57 (-18) columns and 304 (-108) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 0.26916981 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Coin0511I After Postsolve, objective 39.461775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Coin0511I After Postsolve, objective 39.461775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.46177456 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.10599
Cbc0038I Solution found of 4.76277
Cbc0038I Relaxing continuous gives -5.59728
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 63 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -8.98382
Cbc0038I Pass   1: suminf.    0.61871 (38) obj. -8.98382 iterations 44
Cbc0038I Pass   2: suminf.    2.14761 (7) obj. -8.98382 iterations 43
Cbc0038I Pass   3: suminf.    1.40390 (6) obj. -8.98382 iterations 7
Cbc0038I Pass   4: suminf.    1.34894 (5) obj. -8.98382 iterations 14
Cbc0038I Pass   5: suminf.    1.34894 (5) obj. -8.98382 iterations 0
Cbc0038I Pass   6: suminf.    1.77044 (4) obj. -8.98382 iterations 8
Cbc0038I Pass   7: suminf.    0.91693 (3) obj. -8.98382 iterations 4
Cbc0038I Pass   8: suminf.    0.81374 (4) obj. -8.98382 iterations 3
Cbc0038I Pass   9: suminf.    1.75624 (4) obj. -8.98382 iterations 16
Cbc0038I Pass  10: suminf.    0.98461 (4) obj. -8.98382 iterations 7
Cbc0038I Pass  11: suminf.    0.60197 (2) obj. -8.98382 iterations 7
Cbc0038I Pass  12: suminf.    0.57483 (3) obj. -8.98382 iterations 1
Cbc0038I Pass  13: suminf.    1.36940 (3) obj. -8.98382 iterations 3
Cbc0038I Pass  14: suminf.    0.63898 (3) obj. -8.98382 iterations 4
Cbc0038I Pass  15: suminf.    1.15901 (4) obj. -8.98382 iterations 3
Cbc0038I Pass  16: suminf.    1.12453 (5) obj. -8.98382 iterations 1
Cbc0038I Pass  17: suminf.    1.90042 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  18: suminf.    2.02743 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  19: suminf.    2.02743 (6) obj. -8.98382 iterations 0
Cbc0038I Pass  20: suminf.    1.41875 (5) obj. -8.98382 iterations 12
Cbc0038I Pass  21: suminf.    0.96052 (6) obj. -8.98382 iterations 1
Cbc0038I Pass  22: suminf.    0.80238 (7) obj. -8.98382 iterations 4
Cbc0038I Pass  23: suminf.    1.95517 (5) obj. -8.98382 iterations 13
Cbc0038I Pass  24: suminf.    1.60956 (4) obj. -8.98382 iterations 4
Cbc0038I Pass  25: suminf.    1.20224 (5) obj. -8.98382 iterations 1
Cbc0038I Pass  26: suminf.    1.20224 (5) obj. -8.98382 iterations 0
Cbc0038I Pass  27: suminf.    1.90042 (6) obj. -8.98382 iterations 7
Cbc0038I Pass  28: suminf.    2.02743 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  29: suminf.    2.02743 (6) obj. -8.98382 iterations 0
Cbc0038I Pass  30: suminf.    1.41875 (5) obj. -8.98382 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 83 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -5.59728 - took 0.07 seconds
Cbc0012I Integer solution of -5.59728 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 63 rows 38 columns
Cbc0031I 22 added rows had average density of 55.545455
Cbc0013I At root node, 22 cuts changed objective from -39.461775 to -32.008188 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9887 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.073 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1535 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.066 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.59728 best solution, best possible -32.008188 (0.70 seconds)
Cbc0012I Integer solution of -5.63534 found by rounding after 7348 iterations and 31 nodes (0.86 seconds)
Cbc0016I Integer solution of -6.02272 found by strong branching after 7355 iterations and 32 nodes (0.87 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 57 rows 35 columns
Cbc0038I Full problem 134 rows 75 columns, reduced to 13 rows 14 columns
Cbc0001I Search completed - best objective -6.022720000000007, took 9146 iterations and 96 nodes (1.01 seconds)
Cbc0032I Strong branching done 1040 times (18422 iterations), fathomed 5 nodes and fixed 17 variables
Cbc0035I Maximum depth 41, 360 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-57) rows, 110 (-42) columns and 1660 (-1643) elements
Clp1000I sum of infeasibilities 1.41768e-07 - average 1.46153e-09, 44 fixed columns
Coin0506I Presolve 56 (-41) rows, 66 (-44) columns and 614 (-1046) elements
Clp0006I 0  Obj 50.542471 Dual inf 3.9571239 (66)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.2355167 - largest nonzero change 2.5641897e-05 ( 0.0018056464%) - largest zero change 2.8873273e-05
Clp0000I Optimal - objective value 61.036709
Clp0000I Optimal - objective value 61.036709
Coin0511I After Postsolve, objective 61.036709, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.036709
Clp0000I Optimal - objective value 61.036709
Clp0000I Optimal - objective value 61.036709
Clp0000I Optimal - objective value 61.036709
Coin0511I After Postsolve, objective 61.036709, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.03670854 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 110 columns (110 integer (110 of which binary)) and 1669 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.339%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.18479
Cbc0038I Pass   1: suminf.    1.66951 (27) obj. -39.0732 iterations 11
Cbc0038I Pass   2: suminf.    1.66951 (27) obj. -39.0732 iterations 1
Cbc0038I Solution found of 8.56888
Cbc0038I Rounding solution of 5.73099 is better than previous of 8.56888

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 110 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 5.73099 to 0.29128 (0.02 seconds)
Cbc0038I Round again with cutoff of -5.10251
Cbc0038I Pass   3: suminf.    1.66951 (27) obj. -39.0732 iterations 0
Cbc0038I Pass   4: suminf.    1.66951 (27) obj. -39.0732 iterations 1
Cbc0038I Pass   5: suminf.    0.75385 (14) obj. -12.2209 iterations 13
Cbc0038I Pass   6: suminf.    0.23904 (4) obj. -5.10251 iterations 22
Cbc0038I Pass   7: suminf.    0.21663 (4) obj. -5.3491 iterations 1
Cbc0038I Pass   8: suminf.    0.51630 (9) obj. -5.10251 iterations 9
Cbc0038I Pass   9: suminf.    0.51630 (9) obj. -5.10251 iterations 0
Cbc0038I Pass  10: suminf.    0.50848 (3) obj. -5.10251 iterations 8
Cbc0038I Pass  11: suminf.    0.49034 (1) obj. -5.10251 iterations 3
Cbc0038I Pass  12: suminf.    0.09589 (1) obj. -9.65393 iterations 1
Cbc0038I Pass  13: suminf.    1.23158 (11) obj. -10.9211 iterations 23
Cbc0038I Pass  14: suminf.    1.23158 (11) obj. -10.9211 iterations 4
Cbc0038I Pass  15: suminf.    1.03752 (4) obj. -5.10251 iterations 13
Cbc0038I Pass  16: suminf.    0.81309 (3) obj. -5.10251 iterations 3
Cbc0038I Pass  17: suminf.    0.35992 (2) obj. -5.10251 iterations 4
Cbc0038I Pass  18: suminf.    0.18555 (2) obj. -7.02054 iterations 2
Cbc0038I Pass  19: suminf.    0.36126 (2) obj. -5.10251 iterations 1
Cbc0038I Pass  20: suminf.    1.85061 (14) obj. -5.10251 iterations 34
Cbc0038I Pass  21: suminf.    1.29146 (13) obj. -6.29289 iterations 4
Cbc0038I Pass  22: suminf.    0.77103 (7) obj. -5.10251 iterations 24
Cbc0038I Pass  23: suminf.    0.50417 (6) obj. -5.10251 iterations 6
Cbc0038I Pass  24: suminf.    1.22884 (5) obj. -5.10251 iterations 11
Cbc0038I Pass  25: suminf.    1.22884 (5) obj. -5.10251 iterations 0
Cbc0038I Pass  26: suminf.    0.41584 (2) obj. -5.10251 iterations 7
Cbc0038I Pass  27: suminf.    0.34869 (2) obj. -5.84118 iterations 2
Cbc0038I Pass  28: suminf.    0.41636 (2) obj. -5.10251 iterations 1
Cbc0038I Pass  29: suminf.    1.49246 (11) obj. -5.10251 iterations 18
Cbc0038I Pass  30: suminf.    1.36387 (11) obj. -5.33956 iterations 4
Cbc0038I Pass  31: suminf.    0.70978 (11) obj. -5.10251 iterations 3
Cbc0038I Pass  32: suminf.    1.20920 (6) obj. -5.10251 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 110 columns, reduced to 31 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 0.29128 to -2.68187 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.8112
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.66951 (27) obj. -39.0732 iterations 0
Cbc0038I Pass  33: suminf.    1.66951 (27) obj. -39.0732 iterations 1
Cbc0038I Pass  34: suminf.    0.99544 (12) obj. -14.8112 iterations 16
Cbc0038I Pass  35: suminf.    0.65483 (12) obj. -18.558 iterations 1
Cbc0038I Pass  36: suminf.    0.84122 (9) obj. -14.8112 iterations 21
Cbc0038I Pass  37: suminf.    0.72132 (6) obj. -14.9376 iterations 4
Cbc0038I Pass  38: suminf.    0.60014 (4) obj. -14.8112 iterations 22
Cbc0038I Pass  39: suminf.    0.23433 (4) obj. -14.8112 iterations 6
Cbc0038I Pass  40: suminf.    0.28267 (4) obj. -14.8112 iterations 3
Cbc0038I Pass  41: suminf.    1.97857 (11) obj. -14.8112 iterations 21
Cbc0038I Pass  42: suminf.    1.81783 (11) obj. -14.8112 iterations 8
Cbc0038I Pass  43: suminf.    0.91316 (5) obj. -14.8112 iterations 21
Cbc0038I Pass  44: suminf.    0.67315 (7) obj. -14.8112 iterations 1
Cbc0038I Pass  45: suminf.    1.10661 (4) obj. -14.8112 iterations 9
Cbc0038I Pass  46: suminf.    0.51923 (4) obj. -14.8112 iterations 10
Cbc0038I Pass  47: suminf.    1.09371 (4) obj. -14.8112 iterations 7
Cbc0038I Pass  48: suminf.    1.89674 (10) obj. -14.8112 iterations 16
Cbc0038I Pass  49: suminf.    0.90172 (8) obj. -16.8951 iterations 13
Cbc0038I Pass  50: suminf.    1.22739 (7) obj. -14.8112 iterations 19
Cbc0038I Pass  51: suminf.    1.22739 (7) obj. -14.8112 iterations 0
Cbc0038I Pass  52: suminf.    0.85737 (5) obj. -14.8112 iterations 10
Cbc0038I Pass  53: suminf.    0.68245 (4) obj. -14.8112 iterations 5
Cbc0038I Pass  54: suminf.    1.09371 (4) obj. -14.8112 iterations 11
Cbc0038I Pass  55: suminf.    0.51923 (4) obj. -14.8112 iterations 6
Cbc0038I Pass  56: suminf.    0.94225 (10) obj. -14.8112 iterations 23
Cbc0038I Pass  57: suminf.    0.85698 (10) obj. -14.8112 iterations 5
Cbc0038I Pass  58: suminf.    0.51896 (5) obj. -14.8112 iterations 21
Cbc0038I Pass  59: suminf.    0.51896 (5) obj. -14.8112 iterations 0
Cbc0038I Pass  60: suminf.    1.05260 (5) obj. -14.8112 iterations 14
Cbc0038I Pass  61: suminf.    1.05260 (5) obj. -14.8112 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 110 columns, reduced to 30 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -2.68187 - took 0.09 seconds
Cbc0012I Integer solution of -2.68187 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 96 rows 110 columns, reduced to 25 rows 32 columns
Cbc0031I 44 added rows had average density of 51.977273
Cbc0013I At root node, 44 cuts changed objective from -53.645763 to -22.047587 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15156 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.107 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2403 row cuts average 105.6 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 172 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 517 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1249 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 325 row cuts average 54.3 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.561 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.68187 best solution, best possible -22.047587 (2.26 seconds)
Cbc0012I Integer solution of -5.59728 found by rounding after 5613 iterations and 1 nodes (2.26 seconds)
Cbc0016I Integer solution of -6.02272 found by strong branching after 7230 iterations and 35 nodes (2.69 seconds)
Cbc0001I Search completed - best objective -6.022720000000007, took 7284 iterations and 38 nodes (2.70 seconds)
Cbc0032I Strong branching done 540 times (8066 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 11, 100 variables fixed on reduced cost
Total time (CPU seconds):       2.05   (Wallclock seconds):       2.72

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 75 (-3) columns and 412 (-41) elements
Clp1000I sum of infeasibilities 0.000154737 - average 1.1462e-06, 17 fixed columns
Coin0506I Presolve 99 (-36) rows, 57 (-18) columns and 304 (-108) elements
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 0.26916981 - largest nonzero change 0 ( 0%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Coin0511I After Postsolve, objective 39.461775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Clp0000I Optimal - objective value 39.461775
Coin0511I After Postsolve, objective 39.461775, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 39.46177456 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 419 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.280%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 7.10599
Cbc0038I Solution found of 4.76277
Cbc0038I Relaxing continuous gives -5.59728
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 63 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -8.98382
Cbc0038I Pass   1: suminf.    0.61871 (38) obj. -8.98382 iterations 44
Cbc0038I Pass   2: suminf.    2.14761 (7) obj. -8.98382 iterations 43
Cbc0038I Pass   3: suminf.    1.40390 (6) obj. -8.98382 iterations 7
Cbc0038I Pass   4: suminf.    1.34894 (5) obj. -8.98382 iterations 14
Cbc0038I Pass   5: suminf.    1.34894 (5) obj. -8.98382 iterations 0
Cbc0038I Pass   6: suminf.    1.77044 (4) obj. -8.98382 iterations 8
Cbc0038I Pass   7: suminf.    0.91693 (3) obj. -8.98382 iterations 4
Cbc0038I Pass   8: suminf.    0.81374 (4) obj. -8.98382 iterations 3
Cbc0038I Pass   9: suminf.    1.75624 (4) obj. -8.98382 iterations 16
Cbc0038I Pass  10: suminf.    0.98461 (4) obj. -8.98382 iterations 7
Cbc0038I Pass  11: suminf.    0.60197 (2) obj. -8.98382 iterations 7
Cbc0038I Pass  12: suminf.    0.57483 (3) obj. -8.98382 iterations 1
Cbc0038I Pass  13: suminf.    1.36940 (3) obj. -8.98382 iterations 3
Cbc0038I Pass  14: suminf.    0.63898 (3) obj. -8.98382 iterations 4
Cbc0038I Pass  15: suminf.    1.15901 (4) obj. -8.98382 iterations 3
Cbc0038I Pass  16: suminf.    1.12453 (5) obj. -8.98382 iterations 1
Cbc0038I Pass  17: suminf.    1.90042 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  18: suminf.    2.02743 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  19: suminf.    2.02743 (6) obj. -8.98382 iterations 0
Cbc0038I Pass  20: suminf.    1.41875 (5) obj. -8.98382 iterations 12
Cbc0038I Pass  21: suminf.    0.96052 (6) obj. -8.98382 iterations 1
Cbc0038I Pass  22: suminf.    0.80238 (7) obj. -8.98382 iterations 4
Cbc0038I Pass  23: suminf.    1.95517 (5) obj. -8.98382 iterations 13
Cbc0038I Pass  24: suminf.    1.60956 (4) obj. -8.98382 iterations 4
Cbc0038I Pass  25: suminf.    1.20224 (5) obj. -8.98382 iterations 1
Cbc0038I Pass  26: suminf.    1.20224 (5) obj. -8.98382 iterations 0
Cbc0038I Pass  27: suminf.    1.90042 (6) obj. -8.98382 iterations 7
Cbc0038I Pass  28: suminf.    2.02743 (6) obj. -8.98382 iterations 8
Cbc0038I Pass  29: suminf.    2.02743 (6) obj. -8.98382 iterations 0
Cbc0038I Pass  30: suminf.    1.41875 (5) obj. -8.98382 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 83 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -5.59728 - took 0.08 seconds
Cbc0012I Integer solution of -5.59728 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 63 rows 38 columns
Cbc0031I 22 added rows had average density of 55.545455
Cbc0013I At root node, 22 cuts changed objective from -39.461775 to -32.008188 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9887 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1535 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -5.59728 best solution, best possible -32.008188 (0.81 seconds)
Cbc0012I Integer solution of -5.63534 found by rounding after 7348 iterations and 31 nodes (1.04 seconds)
Cbc0016I Integer solution of -6.02272 found by strong branching after 7355 iterations and 32 nodes (1.04 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 57 rows 35 columns
Cbc0038I Full problem 134 rows 75 columns, reduced to 13 rows 14 columns
Cbc0001I Search completed - best objective -6.022720000000007, took 9146 iterations and 96 nodes (1.21 seconds)
Cbc0032I Strong branching done 1040 times (18422 iterations), fathomed 5 nodes and fixed 17 variables
Cbc0035I Maximum depth 41, 360 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.22

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 97 (-58) rows, 110 (-43) columns and 1660 (-1644) elements
Clp1000I sum of infeasibilities 1.41768e-07 - average 1.46153e-09, 44 fixed columns
Coin0506I Presolve 56 (-41) rows, 66 (-44) columns and 614 (-1046) elements
Clp0006I 0  Obj 50.542471 Dual inf 3.9571239 (66)
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.2355167 - largest nonzero change 2.5641897e-05 ( 0.0018056464%) - largest zero change 2.8873273e-05
Clp0000I Optimal - objective value 61.036709
Clp0000I Optimal - objective value 61.036709
Coin0511I After Postsolve, objective 61.036709, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 61.036709
Clp0000I Optimal - objective value 61.036709
Clp0000I Optimal - objective value 61.036709
Clp0000I Optimal - objective value 61.036709
Coin0511I After Postsolve, objective 61.036709, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.03670854 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 96 rows, 110 columns (110 integer (110 of which binary)) and 1669 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.339%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 4.18479
Cbc0038I Pass   1: suminf.    1.66951 (27) obj. -39.0732 iterations 11
Cbc0038I Pass   2: suminf.    1.66951 (27) obj. -39.0732 iterations 1
Cbc0038I Solution found of 8.56888
Cbc0038I Rounding solution of 5.73099 is better than previous of 8.56888

Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 110 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from 5.73099 to 0.29128 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.10251
Cbc0038I Pass   3: suminf.    1.66951 (27) obj. -39.0732 iterations 0
Cbc0038I Pass   4: suminf.    1.66951 (27) obj. -39.0732 iterations 1
Cbc0038I Pass   5: suminf.    0.75385 (14) obj. -12.2209 iterations 13
Cbc0038I Pass   6: suminf.    0.23904 (4) obj. -5.10251 iterations 22
Cbc0038I Pass   7: suminf.    0.21663 (4) obj. -5.3491 iterations 1
Cbc0038I Pass   8: suminf.    0.51630 (9) obj. -5.10251 iterations 9
Cbc0038I Pass   9: suminf.    0.51630 (9) obj. -5.10251 iterations 0
Cbc0038I Pass  10: suminf.    0.50848 (3) obj. -5.10251 iterations 8
Cbc0038I Pass  11: suminf.    0.49034 (1) obj. -5.10251 iterations 3
Cbc0038I Pass  12: suminf.    0.09589 (1) obj. -9.65393 iterations 1
Cbc0038I Pass  13: suminf.    1.23158 (11) obj. -10.9211 iterations 23
Cbc0038I Pass  14: suminf.    1.23158 (11) obj. -10.9211 iterations 4
Cbc0038I Pass  15: suminf.    1.03752 (4) obj. -5.10251 iterations 13
Cbc0038I Pass  16: suminf.    0.81309 (3) obj. -5.10251 iterations 3
Cbc0038I Pass  17: suminf.    0.35992 (2) obj. -5.10251 iterations 4
Cbc0038I Pass  18: suminf.    0.18555 (2) obj. -7.02054 iterations 2
Cbc0038I Pass  19: suminf.    0.36126 (2) obj. -5.10251 iterations 1
Cbc0038I Pass  20: suminf.    1.85061 (14) obj. -5.10251 iterations 34
Cbc0038I Pass  21: suminf.    1.29146 (13) obj. -6.29289 iterations 4
Cbc0038I Pass  22: suminf.    0.77103 (7) obj. -5.10251 iterations 24
Cbc0038I Pass  23: suminf.    0.50417 (6) obj. -5.10251 iterations 6
Cbc0038I Pass  24: suminf.    1.22884 (5) obj. -5.10251 iterations 11
Cbc0038I Pass  25: suminf.    1.22884 (5) obj. -5.10251 iterations 0
Cbc0038I Pass  26: suminf.    0.41584 (2) obj. -5.10251 iterations 7
Cbc0038I Pass  27: suminf.    0.34869 (2) obj. -5.84118 iterations 2
Cbc0038I Pass  28: suminf.    0.41636 (2) obj. -5.10251 iterations 1
Cbc0038I Pass  29: suminf.    1.49246 (11) obj. -5.10251 iterations 18
Cbc0038I Pass  30: suminf.    1.36387 (11) obj. -5.33956 iterations 4
Cbc0038I Pass  31: suminf.    0.70978 (11) obj. -5.10251 iterations 3
Cbc0038I Pass  32: suminf.    1.20920 (6) obj. -5.10251 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 110 columns, reduced to 31 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 0.29128 to -2.68187 (0.09 seconds)
Cbc0038I Round again with cutoff of -14.8112
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.66951 (27) obj. -39.0732 iterations 0
Cbc0038I Pass  33: suminf.    1.66951 (27) obj. -39.0732 iterations 1
Cbc0038I Pass  34: suminf.    0.99544 (12) obj. -14.8112 iterations 16
Cbc0038I Pass  35: suminf.    0.65483 (12) obj. -18.558 iterations 1
Cbc0038I Pass  36: suminf.    0.84122 (9) obj. -14.8112 iterations 21
Cbc0038I Pass  37: suminf.    0.72132 (6) obj. -14.9376 iterations 4
Cbc0038I Pass  38: suminf.    0.60014 (4) obj. -14.8112 iterations 22
Cbc0038I Pass  39: suminf.    0.23433 (4) obj. -14.8112 iterations 6
Cbc0038I Pass  40: suminf.    0.28267 (4) obj. -14.8112 iterations 3
Cbc0038I Pass  41: suminf.    1.97857 (11) obj. -14.8112 iterations 21
Cbc0038I Pass  42: suminf.    1.81783 (11) obj. -14.8112 iterations 8
Cbc0038I Pass  43: suminf.    0.91316 (5) obj. -14.8112 iterations 21
Cbc0038I Pass  44: suminf.    0.67315 (7) obj. -14.8112 iterations 1
Cbc0038I Pass  45: suminf.    1.10661 (4) obj. -14.8112 iterations 9
Cbc0038I Pass  46: suminf.    0.51923 (4) obj. -14.8112 iterations 10
Cbc0038I Pass  47: suminf.    1.09371 (4) obj. -14.8112 iterations 7
Cbc0038I Pass  48: suminf.    1.89674 (10) obj. -14.8112 iterations 16
Cbc0038I Pass  49: suminf.    0.90172 (8) obj. -16.8951 iterations 13
Cbc0038I Pass  50: suminf.    1.22739 (7) obj. -14.8112 iterations 19
Cbc0038I Pass  51: suminf.    1.22739 (7) obj. -14.8112 iterations 0
Cbc0038I Pass  52: suminf.    0.85737 (5) obj. -14.8112 iterations 10
Cbc0038I Pass  53: suminf.    0.68245 (4) obj. -14.8112 iterations 5
Cbc0038I Pass  54: suminf.    1.09371 (4) obj. -14.8112 iterations 11
Cbc0038I Pass  55: suminf.    0.51923 (4) obj. -14.8112 iterations 6
Cbc0038I Pass  56: suminf.    0.94225 (10) obj. -14.8112 iterations 23
Cbc0038I Pass  57: suminf.    0.85698 (10) obj. -14.8112 iterations 5
Cbc0038I Pass  58: suminf.    0.51896 (5) obj. -14.8112 iterations 21
Cbc0038I Pass  59: suminf.    0.51896 (5) obj. -14.8112 iterations 0
Cbc0038I Pass  60: suminf.    1.05260 (5) obj. -14.8112 iterations 14
Cbc0038I Pass  61: suminf.    1.05260 (5) obj. -14.8112 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 96 rows 110 columns, reduced to 30 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -2.68187 - took 0.11 seconds
Cbc0012I Integer solution of -2.68187 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 96 rows 110 columns, reduced to 25 rows 32 columns
Cbc0031I 44 added rows had average density of 51.977273
Cbc0013I At root node, 44 cuts changed objective from -53.645763 to -22.047587 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15156 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.129 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2403 row cuts average 105.6 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 172 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 517 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1249 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 325 row cuts average 54.3 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 30.4 elements, 0 column cuts (0 active)  in 0.639 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -2.68187 best solution, best possible -22.047587 (2.71 seconds)
Cbc0012I Integer solution of -5.59728 found by rounding after 5613 iterations and 1 nodes (2.71 seconds)
Cbc0016I Integer solution of -6.02272 found by strong branching after 7230 iterations and 35 nodes (3.21 seconds)
Cbc0001I Search completed - best objective -6.022720000000007, took 7284 iterations and 38 nodes (3.22 seconds)
Cbc0032I Strong branching done 540 times (8066 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 11, 100 variables fixed on reduced cost
Total time (CPU seconds):       2.40   (Wallclock seconds):       3.24

