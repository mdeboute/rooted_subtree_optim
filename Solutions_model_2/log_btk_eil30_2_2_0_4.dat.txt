Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 46 (-17) rows, 26 (-6) columns and 137 (-40) elements
Clp0000I Optimal - objective value 353.70058
Coin0511I After Postsolve, objective 353.70058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 353.7005756 - 15 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 46 rows, 26 columns (25 integer (25 of which binary)) and 137 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.29597
Cbc0038I Pass   1: suminf.    0.59121 (3) obj. -325.062 iterations 6
Cbc0038I Solution found of -111.5
Cbc0038I Relaxing continuous gives -111.5
Cbc0038I Rounding solution of -195 is better than previous of -111.5

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -195 to -280.5 (0.00 seconds)
Cbc0038I Round again with cutoff of -288.27
Cbc0038I Pass   2: suminf.    0.59121 (3) obj. -325.062 iterations 0
Cbc0038I Pass   3: suminf.    0.67661 (2) obj. -288.27 iterations 3
Cbc0038I Pass   4: suminf.    0.38940 (2) obj. -323.622 iterations 1
Cbc0038I Pass   5: suminf.    1.58185 (6) obj. -288.27 iterations 7
Cbc0038I Pass   6: suminf.    1.57266 (7) obj. -288.27 iterations 3
Cbc0038I Pass   7: suminf.    0.14601 (2) obj. -288.27 iterations 9
Cbc0038I Pass   8: suminf.    0.14601 (2) obj. -288.27 iterations 0
Cbc0038I Pass   9: suminf.    0.72683 (3) obj. -288.27 iterations 3
Cbc0038I Pass  10: suminf.    0.50586 (2) obj. -301.414 iterations 2
Cbc0038I Pass  11: suminf.    0.61265 (2) obj. -288.27 iterations 2
Cbc0038I Pass  12: suminf.    2.70688 (8) obj. -288.27 iterations 7
Cbc0038I Pass  13: suminf.    1.44465 (5) obj. -288.27 iterations 2
Cbc0038I Pass  14: suminf.    1.44465 (5) obj. -288.27 iterations 0
Cbc0038I Pass  15: suminf.    0.49881 (4) obj. -288.27 iterations 6
Cbc0038I Pass  16: suminf.    0.49881 (4) obj. -288.27 iterations 1
Cbc0038I Pass  17: suminf.    0.79360 (4) obj. -288.27 iterations 3
Cbc0038I Pass  18: suminf.    1.10765 (5) obj. -288.27 iterations 5
Cbc0038I Pass  19: suminf.    0.84272 (3) obj. -288.27 iterations 5
Cbc0038I Pass  20: suminf.    0.14601 (2) obj. -288.27 iterations 3
Cbc0038I Pass  21: suminf.    0.72683 (3) obj. -288.27 iterations 4
Cbc0038I Pass  22: suminf.    0.50586 (2) obj. -301.414 iterations 2
Cbc0038I Pass  23: suminf.    0.61265 (2) obj. -288.27 iterations 3
Cbc0038I Pass  24: suminf.    1.84604 (6) obj. -288.27 iterations 13
Cbc0038I Pass  25: suminf.    0.17659 (3) obj. -288.27 iterations 3
Cbc0038I Pass  26: suminf.    0.59121 (3) obj. -288.27 iterations 6
Cbc0038I Pass  27: suminf.    0.67661 (2) obj. -288.27 iterations 3
Cbc0038I Pass  28: suminf.    0.38940 (2) obj. -323.622 iterations 1
Cbc0038I Pass  29: suminf.    0.72837 (2) obj. -302.984 iterations 1
Cbc0038I Pass  30: suminf.    0.72837 (2) obj. -302.984 iterations 0
Cbc0038I Pass  31: suminf.    0.82857 (2) obj. -288.27 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -280.5 - took 0.02 seconds
Cbc0012I Integer solution of -280.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 46 rows 26 columns, reduced to 10 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 3.25
Cbc0013I At root node, 4 cuts changed objective from -353.70058 to -286.44821 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -280.5, took 16 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-16) rows, 50 (-10) columns and 437 (-175) elements
Clp1000I sum of infeasibilities 6.14013e-10 - average 1.33481e-11, 42 fixed columns
Coin0506I Presolve 7 (-39) rows, 8 (-42) columns and 25 (-412) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 290.95963
Clp0000I Optimal - objective value 290.95963
Coin0511I After Postsolve, objective 290.95963, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22463547 - largest nonzero change 2.9759326e-05 ( 0.0025228206%) - largest zero change 2.8901427e-05
Clp0000I Optimal - objective value 412.96645
Clp0000I Optimal - objective value 412.96645
Clp0000I Optimal - objective value 412.96645
Coin0511I After Postsolve, objective 412.96645, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 412.9664495 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 51 columns (51 integer (51 of which binary)) and 441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.577%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.88132
Cbc0038I Pass   1: suminf.    1.28765 (10) obj. -176.022 iterations 12
Cbc0038I Pass   2: suminf.    1.28765 (10) obj. -176.022 iterations 1
Cbc0038I Solution found of -19.5
Cbc0038I Rounding solution of -47.5 is better than previous of -19.5

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 51 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -47.5 to -208.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -227.02
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.22051 (18) obj. -227.02 iterations 5
Cbc0038I Pass   4: suminf.    2.22051 (18) obj. -227.02 iterations 0
Cbc0038I Pass   5: suminf.    0.31838 (1) obj. -227.02 iterations 22
Cbc0038I Pass   6: suminf.    0.08871 (1) obj. -255.5 iterations 1
Cbc0038I Pass   7: suminf.    0.77456 (8) obj. -227.02 iterations 6
Cbc0038I Pass   8: suminf.    0.77456 (8) obj. -227.02 iterations 2
Cbc0038I Pass   9: suminf.    0.36937 (2) obj. -227.02 iterations 10
Cbc0038I Pass  10: suminf.    0.63631 (2) obj. -227.02 iterations 1
Cbc0038I Pass  11: suminf.    0.44044 (4) obj. -227.02 iterations 12
Cbc0038I Pass  12: suminf.    0.37849 (3) obj. -239.87 iterations 4
Cbc0038I Solution found of -233
Cbc0038I Rounding solution of -254 is better than previous of -233

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 51 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -254 to -266.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -291.441
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  13: suminf.    2.65259 (18) obj. -291.441 iterations 0
Cbc0038I Pass  14: suminf.    2.65259 (18) obj. -291.441 iterations 0
Cbc0038I Pass  15: suminf.    0.93790 (8) obj. -291.441 iterations 21
Cbc0038I Pass  16: suminf.    0.93790 (8) obj. -291.441 iterations 1
Cbc0038I Pass  17: suminf.    0.65085 (2) obj. -291.441 iterations 7
Cbc0038I Pass  18: suminf.    0.38940 (2) obj. -323.622 iterations 1
Cbc0038I Pass  19: suminf.    2.36193 (8) obj. -313.736 iterations 9
Cbc0038I Pass  20: suminf.    1.84081 (6) obj. -312.807 iterations 2
Cbc0038I Pass  21: suminf.    0.80590 (2) obj. -291.441 iterations 6
Cbc0038I Pass  22: suminf.    0.72837 (2) obj. -300.984 iterations 1
Cbc0038I Pass  23: suminf.    1.64067 (12) obj. -291.441 iterations 10
Cbc0038I Pass  24: suminf.    0.87865 (8) obj. -291.441 iterations 6
Cbc0038I Pass  25: suminf.    0.78718 (8) obj. -291.441 iterations 13
Cbc0038I Pass  26: suminf.    0.78718 (8) obj. -291.441 iterations 0
Cbc0038I Pass  27: suminf.    1.24201 (3) obj. -291.441 iterations 10
Cbc0038I Pass  28: suminf.    1.00052 (3) obj. -291.441 iterations 2
Cbc0038I Pass  29: suminf.    0.92905 (3) obj. -291.441 iterations 2
Cbc0038I Pass  30: suminf.    0.92905 (3) obj. -291.441 iterations 0
Cbc0038I Pass  31: suminf.    1.90580 (10) obj. -291.441 iterations 16
Cbc0038I Pass  32: suminf.    1.90580 (10) obj. -291.441 iterations 2
Cbc0038I Pass  33: suminf.    0.52268 (3) obj. -291.441 iterations 8
Cbc0038I Pass  34: suminf.    0.41202 (3) obj. -307.685 iterations 1
Cbc0038I Pass  35: suminf.    0.36918 (2) obj. -291.441 iterations 3
Cbc0038I Pass  36: suminf.    0.24948 (2) obj. -306.174 iterations 1
Cbc0038I Pass  37: suminf.    1.24469 (6) obj. -291.441 iterations 6
Cbc0038I Pass  38: suminf.    1.24469 (6) obj. -291.441 iterations 2
Cbc0038I Pass  39: suminf.    1.88260 (9) obj. -297.831 iterations 7
Cbc0038I Pass  40: suminf.    1.88260 (9) obj. -297.831 iterations 1
Cbc0038I Pass  41: suminf.    0.64435 (3) obj. -291.441 iterations 8
Cbc0038I Pass  42: suminf.    0.64435 (3) obj. -291.441 iterations 0
Cbc0038I Rounding solution of -280.5 is better than previous of -266.5

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 51 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -320.77
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  42: suminf.    3.22190 (24) obj. -320.77 iterations 2
Cbc0038I Pass  43: suminf.    3.10107 (25) obj. -320.77 iterations 2
Cbc0038I Pass  44: suminf.    1.50265 (7) obj. -320.77 iterations 35
Cbc0038I Pass  45: suminf.    0.82392 (5) obj. -334.771 iterations 4
Cbc0038I Pass  46: suminf.    0.41256 (2) obj. -320.77 iterations 4
Cbc0038I Pass  47: suminf.    0.38940 (2) obj. -323.622 iterations 1
Cbc0038I Pass  48: suminf.    1.37527 (7) obj. -320.77 iterations 8
Cbc0038I Pass  49: suminf.    1.37527 (7) obj. -320.77 iterations 0
Cbc0038I Pass  50: suminf.    1.03858 (4) obj. -320.77 iterations 8
Cbc0038I Pass  51: suminf.    2.39880 (9) obj. -320.77 iterations 9
Cbc0038I Pass  52: suminf.    2.38928 (9) obj. -320.77 iterations 1
Cbc0038I Pass  53: suminf.    1.08645 (5) obj. -320.77 iterations 8
Cbc0038I Pass  54: suminf.    0.64681 (3) obj. -320.77 iterations 1
Cbc0038I Pass  55: suminf.    0.75856 (3) obj. -320.77 iterations 2
Cbc0038I Pass  56: suminf.    0.68939 (3) obj. -329.622 iterations 1
Cbc0038I Pass  57: suminf.    0.64681 (3) obj. -320.77 iterations 2
Cbc0038I Pass  58: suminf.    1.26833 (6) obj. -320.77 iterations 7
Cbc0038I Pass  59: suminf.    1.26833 (6) obj. -320.77 iterations 0
Cbc0038I Pass  60: suminf.    0.56205 (3) obj. -320.77 iterations 5
Cbc0038I Pass  61: suminf.    0.56064 (3) obj. -320.951 iterations 1
Cbc0038I Pass  62: suminf.    0.56967 (3) obj. -320.77 iterations 2
Cbc0038I Pass  63: suminf.    0.92653 (5) obj. -320.77 iterations 2
Cbc0038I Pass  64: suminf.    1.88191 (7) obj. -320.77 iterations 5
Cbc0038I Pass  65: suminf.    1.88191 (7) obj. -320.77 iterations 0
Cbc0038I Pass  66: suminf.    2.99320 (14) obj. -320.77 iterations 15
Cbc0038I Pass  67: suminf.    2.80997 (12) obj. -320.77 iterations 1
Cbc0038I Pass  68: suminf.    1.05182 (4) obj. -320.77 iterations 15
Cbc0038I Pass  69: suminf.    1.05182 (4) obj. -320.77 iterations 0
Cbc0038I Pass  70: suminf.    0.64681 (3) obj. -320.77 iterations 9
Cbc0038I Pass  71: suminf.    0.64681 (3) obj. -320.77 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 51 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -280.5 - took 0.03 seconds
Cbc0012I Integer solution of -280.5 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 51 columns, reduced to 26 rows 27 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 10.5
Cbc0013I At root node, 10 cuts changed objective from -389.20569 to -303.32053 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 61 row cuts average 2.5 elements, 19 column cuts (19 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -280.5, took 37 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 46 (-17) rows, 26 (-6) columns and 137 (-40) elements
Clp0000I Optimal - objective value 353.70058
Coin0511I After Postsolve, objective 353.70058, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 353.7005756 - 15 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 46 rows, 26 columns (25 integer (25 of which binary)) and 137 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 6 integers unsatisfied sum - 1.29597
Cbc0038I Pass   1: suminf.    0.59121 (3) obj. -325.062 iterations 6
Cbc0038I Solution found of -111.5
Cbc0038I Relaxing continuous gives -111.5
Cbc0038I Rounding solution of -195 is better than previous of -111.5

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 10 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -195 to -280.5 (0.01 seconds)
Cbc0038I Round again with cutoff of -288.27
Cbc0038I Pass   2: suminf.    0.59121 (3) obj. -325.062 iterations 0
Cbc0038I Pass   3: suminf.    0.67661 (2) obj. -288.27 iterations 3
Cbc0038I Pass   4: suminf.    0.38940 (2) obj. -323.622 iterations 1
Cbc0038I Pass   5: suminf.    1.58185 (6) obj. -288.27 iterations 7
Cbc0038I Pass   6: suminf.    1.57266 (7) obj. -288.27 iterations 3
Cbc0038I Pass   7: suminf.    0.14601 (2) obj. -288.27 iterations 9
Cbc0038I Pass   8: suminf.    0.14601 (2) obj. -288.27 iterations 0
Cbc0038I Pass   9: suminf.    0.72683 (3) obj. -288.27 iterations 3
Cbc0038I Pass  10: suminf.    0.50586 (2) obj. -301.414 iterations 2
Cbc0038I Pass  11: suminf.    0.61265 (2) obj. -288.27 iterations 2
Cbc0038I Pass  12: suminf.    2.70688 (8) obj. -288.27 iterations 7
Cbc0038I Pass  13: suminf.    1.44465 (5) obj. -288.27 iterations 2
Cbc0038I Pass  14: suminf.    1.44465 (5) obj. -288.27 iterations 0
Cbc0038I Pass  15: suminf.    0.49881 (4) obj. -288.27 iterations 6
Cbc0038I Pass  16: suminf.    0.49881 (4) obj. -288.27 iterations 1
Cbc0038I Pass  17: suminf.    0.79360 (4) obj. -288.27 iterations 3
Cbc0038I Pass  18: suminf.    1.10765 (5) obj. -288.27 iterations 5
Cbc0038I Pass  19: suminf.    0.84272 (3) obj. -288.27 iterations 5
Cbc0038I Pass  20: suminf.    0.14601 (2) obj. -288.27 iterations 3
Cbc0038I Pass  21: suminf.    0.72683 (3) obj. -288.27 iterations 4
Cbc0038I Pass  22: suminf.    0.50586 (2) obj. -301.414 iterations 2
Cbc0038I Pass  23: suminf.    0.61265 (2) obj. -288.27 iterations 3
Cbc0038I Pass  24: suminf.    1.84604 (6) obj. -288.27 iterations 13
Cbc0038I Pass  25: suminf.    0.17659 (3) obj. -288.27 iterations 3
Cbc0038I Pass  26: suminf.    0.59121 (3) obj. -288.27 iterations 6
Cbc0038I Pass  27: suminf.    0.67661 (2) obj. -288.27 iterations 3
Cbc0038I Pass  28: suminf.    0.38940 (2) obj. -323.622 iterations 1
Cbc0038I Pass  29: suminf.    0.72837 (2) obj. -302.984 iterations 1
Cbc0038I Pass  30: suminf.    0.72837 (2) obj. -302.984 iterations 0
Cbc0038I Pass  31: suminf.    0.82857 (2) obj. -288.27 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 26 columns, reduced to 19 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -280.5 - took 0.01 seconds
Cbc0012I Integer solution of -280.5 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 46 rows 26 columns, reduced to 10 rows 7 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 3.25
Cbc0013I At root node, 4 cuts changed objective from -353.70058 to -286.44821 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 10 row cuts average 2.7 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -280.5, took 16 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-17) rows, 50 (-11) columns and 437 (-176) elements
Clp1000I sum of infeasibilities 6.14013e-10 - average 1.33481e-11, 42 fixed columns
Coin0506I Presolve 7 (-39) rows, 8 (-42) columns and 25 (-412) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 290.95963
Clp0000I Optimal - objective value 290.95963
Coin0511I After Postsolve, objective 290.95963, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22463547 - largest nonzero change 2.9759326e-05 ( 0.0025228206%) - largest zero change 2.8901427e-05
Clp0000I Optimal - objective value 412.96645
Clp0000I Optimal - objective value 412.96645
Clp0000I Optimal - objective value 412.96645
Coin0511I After Postsolve, objective 412.96645, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 412.9664495 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 51 columns (51 integer (51 of which binary)) and 441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.577%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 25 integers unsatisfied sum - 5.88132
Cbc0038I Pass   1: suminf.    1.28765 (10) obj. -176.022 iterations 12
Cbc0038I Pass   2: suminf.    1.28765 (10) obj. -176.022 iterations 1
Cbc0038I Solution found of -19.5
Cbc0038I Rounding solution of -47.5 is better than previous of -19.5

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 51 columns, reduced to 19 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -47.5 to -208.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -227.02
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.22051 (18) obj. -227.02 iterations 5
Cbc0038I Pass   4: suminf.    2.22051 (18) obj. -227.02 iterations 0
Cbc0038I Pass   5: suminf.    0.31838 (1) obj. -227.02 iterations 22
Cbc0038I Pass   6: suminf.    0.08871 (1) obj. -255.5 iterations 1
Cbc0038I Pass   7: suminf.    0.77456 (8) obj. -227.02 iterations 6
Cbc0038I Pass   8: suminf.    0.77456 (8) obj. -227.02 iterations 2
Cbc0038I Pass   9: suminf.    0.36937 (2) obj. -227.02 iterations 10
Cbc0038I Pass  10: suminf.    0.63631 (2) obj. -227.02 iterations 1
Cbc0038I Pass  11: suminf.    0.44044 (4) obj. -227.02 iterations 12
Cbc0038I Pass  12: suminf.    0.37849 (3) obj. -239.87 iterations 4
Cbc0038I Solution found of -233
Cbc0038I Rounding solution of -254 is better than previous of -233

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 51 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -254 to -266.5 (0.02 seconds)
Cbc0038I Round again with cutoff of -291.441
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  13: suminf.    2.65259 (18) obj. -291.441 iterations 0
Cbc0038I Pass  14: suminf.    2.65259 (18) obj. -291.441 iterations 0
Cbc0038I Pass  15: suminf.    0.93790 (8) obj. -291.441 iterations 21
Cbc0038I Pass  16: suminf.    0.93790 (8) obj. -291.441 iterations 1
Cbc0038I Pass  17: suminf.    0.65085 (2) obj. -291.441 iterations 7
Cbc0038I Pass  18: suminf.    0.38940 (2) obj. -323.622 iterations 1
Cbc0038I Pass  19: suminf.    2.36193 (8) obj. -313.736 iterations 9
Cbc0038I Pass  20: suminf.    1.84081 (6) obj. -312.807 iterations 2
Cbc0038I Pass  21: suminf.    0.80590 (2) obj. -291.441 iterations 6
Cbc0038I Pass  22: suminf.    0.72837 (2) obj. -300.984 iterations 1
Cbc0038I Pass  23: suminf.    1.64067 (12) obj. -291.441 iterations 10
Cbc0038I Pass  24: suminf.    0.87865 (8) obj. -291.441 iterations 6
Cbc0038I Pass  25: suminf.    0.78718 (8) obj. -291.441 iterations 13
Cbc0038I Pass  26: suminf.    0.78718 (8) obj. -291.441 iterations 0
Cbc0038I Pass  27: suminf.    1.24201 (3) obj. -291.441 iterations 10
Cbc0038I Pass  28: suminf.    1.00052 (3) obj. -291.441 iterations 2
Cbc0038I Pass  29: suminf.    0.92905 (3) obj. -291.441 iterations 2
Cbc0038I Pass  30: suminf.    0.92905 (3) obj. -291.441 iterations 0
Cbc0038I Pass  31: suminf.    1.90580 (10) obj. -291.441 iterations 16
Cbc0038I Pass  32: suminf.    1.90580 (10) obj. -291.441 iterations 2
Cbc0038I Pass  33: suminf.    0.52268 (3) obj. -291.441 iterations 8
Cbc0038I Pass  34: suminf.    0.41202 (3) obj. -307.685 iterations 1
Cbc0038I Pass  35: suminf.    0.36918 (2) obj. -291.441 iterations 3
Cbc0038I Pass  36: suminf.    0.24948 (2) obj. -306.174 iterations 1
Cbc0038I Pass  37: suminf.    1.24469 (6) obj. -291.441 iterations 6
Cbc0038I Pass  38: suminf.    1.24469 (6) obj. -291.441 iterations 2
Cbc0038I Pass  39: suminf.    1.88260 (9) obj. -297.831 iterations 7
Cbc0038I Pass  40: suminf.    1.88260 (9) obj. -297.831 iterations 1
Cbc0038I Pass  41: suminf.    0.64435 (3) obj. -291.441 iterations 8
Cbc0038I Pass  42: suminf.    0.64435 (3) obj. -291.441 iterations 0
Cbc0038I Rounding solution of -280.5 is better than previous of -266.5

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 51 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -320.77
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  42: suminf.    3.22190 (24) obj. -320.77 iterations 2
Cbc0038I Pass  43: suminf.    3.10107 (25) obj. -320.77 iterations 2
Cbc0038I Pass  44: suminf.    1.50265 (7) obj. -320.77 iterations 35
Cbc0038I Pass  45: suminf.    0.82392 (5) obj. -334.771 iterations 4
Cbc0038I Pass  46: suminf.    0.41256 (2) obj. -320.77 iterations 4
Cbc0038I Pass  47: suminf.    0.38940 (2) obj. -323.622 iterations 1
Cbc0038I Pass  48: suminf.    1.37527 (7) obj. -320.77 iterations 8
Cbc0038I Pass  49: suminf.    1.37527 (7) obj. -320.77 iterations 0
Cbc0038I Pass  50: suminf.    1.03858 (4) obj. -320.77 iterations 8
Cbc0038I Pass  51: suminf.    2.39880 (9) obj. -320.77 iterations 9
Cbc0038I Pass  52: suminf.    2.38928 (9) obj. -320.77 iterations 1
Cbc0038I Pass  53: suminf.    1.08645 (5) obj. -320.77 iterations 8
Cbc0038I Pass  54: suminf.    0.64681 (3) obj. -320.77 iterations 1
Cbc0038I Pass  55: suminf.    0.75856 (3) obj. -320.77 iterations 2
Cbc0038I Pass  56: suminf.    0.68939 (3) obj. -329.622 iterations 1
Cbc0038I Pass  57: suminf.    0.64681 (3) obj. -320.77 iterations 2
Cbc0038I Pass  58: suminf.    1.26833 (6) obj. -320.77 iterations 7
Cbc0038I Pass  59: suminf.    1.26833 (6) obj. -320.77 iterations 0
Cbc0038I Pass  60: suminf.    0.56205 (3) obj. -320.77 iterations 5
Cbc0038I Pass  61: suminf.    0.56064 (3) obj. -320.951 iterations 1
Cbc0038I Pass  62: suminf.    0.56967 (3) obj. -320.77 iterations 2
Cbc0038I Pass  63: suminf.    0.92653 (5) obj. -320.77 iterations 2
Cbc0038I Pass  64: suminf.    1.88191 (7) obj. -320.77 iterations 5
Cbc0038I Pass  65: suminf.    1.88191 (7) obj. -320.77 iterations 0
Cbc0038I Pass  66: suminf.    2.99320 (14) obj. -320.77 iterations 15
Cbc0038I Pass  67: suminf.    2.80997 (12) obj. -320.77 iterations 1
Cbc0038I Pass  68: suminf.    1.05182 (4) obj. -320.77 iterations 15
Cbc0038I Pass  69: suminf.    1.05182 (4) obj. -320.77 iterations 0
Cbc0038I Pass  70: suminf.    0.64681 (3) obj. -320.77 iterations 9
Cbc0038I Pass  71: suminf.    0.64681 (3) obj. -320.77 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 51 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -280.5 - took 0.03 seconds
Cbc0012I Integer solution of -280.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 47 rows 51 columns, reduced to 26 rows 27 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 10 added rows had average density of 10.5
Cbc0013I At root node, 10 cuts changed objective from -389.20569 to -303.32053 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 61 row cuts average 2.5 elements, 19 column cuts (19 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 23.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 12.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -280.5, took 37 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

