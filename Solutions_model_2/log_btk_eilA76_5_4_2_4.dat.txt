Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 74 (-4) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 1.4471e-05 - average 1.13945e-07, 12 fixed columns
Coin0506I Presolve 104 (-23) rows, 62 (-12) columns and 324 (-70) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Coin0511I After Postsolve, objective 47.523215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Coin0511I After Postsolve, objective 47.523215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.52321489 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 74 columns (73 integer (73 of which binary)) and 411 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.351%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.79905
Cbc0038I Solution found of 2.77311
Cbc0038I Relaxing continuous gives -6.53204
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 52 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -6.53204 to -15.3853 (0.05 seconds)
Cbc0038I Round again with cutoff of -18.5992
Cbc0038I Pass   1: suminf.    1.72992 (20) obj. -18.5992 iterations 37
Cbc0038I Pass   2: suminf.    1.26650 (5) obj. -18.5992 iterations 19
Cbc0038I Pass   3: suminf.    0.76054 (5) obj. -18.5992 iterations 3
Cbc0038I Pass   4: suminf.    1.02794 (4) obj. -18.5992 iterations 6
Cbc0038I Pass   5: suminf.    1.89786 (5) obj. -18.5992 iterations 4
Cbc0038I Pass   6: suminf.    1.10968 (4) obj. -18.5992 iterations 3
Cbc0038I Pass   7: suminf.    1.30618 (4) obj. -18.5992 iterations 4
Cbc0038I Pass   8: suminf.    2.38793 (8) obj. -18.5992 iterations 10
Cbc0038I Pass   9: suminf.    1.81187 (7) obj. -18.5992 iterations 2
Cbc0038I Pass  10: suminf.    1.69339 (6) obj. -18.5992 iterations 12
Cbc0038I Pass  11: suminf.    1.69339 (6) obj. -18.5992 iterations 0
Cbc0038I Pass  12: suminf.    0.78972 (4) obj. -18.5992 iterations 10
Cbc0038I Pass  13: suminf.    0.78972 (4) obj. -18.5992 iterations 0
Cbc0038I Pass  14: suminf.    1.69339 (6) obj. -18.5992 iterations 5
Cbc0038I Pass  15: suminf.    1.37423 (7) obj. -18.5992 iterations 19
Cbc0038I Pass  16: suminf.    1.32315 (5) obj. -18.5992 iterations 4
Cbc0038I Pass  17: suminf.    1.06688 (4) obj. -18.5992 iterations 15
Cbc0038I Pass  18: suminf.    1.05539 (5) obj. -18.5992 iterations 1
Cbc0038I Pass  19: suminf.    1.22146 (4) obj. -18.5992 iterations 7
Cbc0038I Pass  20: suminf.    0.97010 (3) obj. -18.5992 iterations 4
Cbc0038I Pass  21: suminf.    0.88437 (3) obj. -18.5992 iterations 2
Cbc0038I Pass  22: suminf.    1.75973 (6) obj. -18.5992 iterations 24
Cbc0038I Pass  23: suminf.    1.75973 (6) obj. -18.5992 iterations 4
Cbc0038I Pass  24: suminf.    1.40417 (5) obj. -18.5992 iterations 21
Cbc0038I Pass  25: suminf.    1.22146 (4) obj. -18.5992 iterations 8
Cbc0038I Pass  26: suminf.    0.97010 (3) obj. -18.5992 iterations 4
Cbc0038I Pass  27: suminf.    0.88437 (3) obj. -18.5992 iterations 2
Cbc0038I Pass  28: suminf.    3.53474 (10) obj. -18.5992 iterations 18
Cbc0038I Pass  29: suminf.    2.90243 (10) obj. -18.5992 iterations 4
Cbc0038I Pass  30: suminf.    1.22146 (4) obj. -18.5992 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 77 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -15.3853 to -15.6087 (0.10 seconds)
Cbc0038I Round again with cutoff of -24.384
Cbc0038I Pass  30: suminf.    2.55921 (20) obj. -24.384 iterations 0
Cbc0038I Pass  31: suminf.    1.40836 (5) obj. -24.384 iterations 22
Cbc0038I Pass  32: suminf.    1.40836 (5) obj. -24.384 iterations 1
Cbc0038I Pass  33: suminf.    2.35422 (6) obj. -24.384 iterations 8
Cbc0038I Pass  34: suminf.    1.21688 (4) obj. -24.384 iterations 3
Cbc0038I Pass  35: suminf.    0.97869 (4) obj. -24.384 iterations 2
Cbc0038I Pass  36: suminf.    1.83637 (7) obj. -24.384 iterations 10
Cbc0038I Pass  37: suminf.    1.16068 (5) obj. -24.384 iterations 8
Cbc0038I Pass  38: suminf.    2.35946 (10) obj. -24.384 iterations 8
Cbc0038I Pass  39: suminf.    2.35946 (10) obj. -24.384 iterations 0
Cbc0038I Pass  40: suminf.    1.23704 (6) obj. -24.384 iterations 13
Cbc0038I Pass  41: suminf.    0.84562 (4) obj. -24.384 iterations 2
Cbc0038I Pass  42: suminf.    1.43659 (5) obj. -24.384 iterations 6
Cbc0038I Pass  43: suminf.    1.02319 (4) obj. -24.384 iterations 3
Cbc0038I Pass  44: suminf.    0.95390 (4) obj. -24.384 iterations 4
Cbc0038I Pass  45: suminf.    2.16993 (7) obj. -24.384 iterations 14
Cbc0038I Pass  46: suminf.    2.07276 (9) obj. -24.384 iterations 5
Cbc0038I Pass  47: suminf.    2.06629 (5) obj. -24.384 iterations 12
Cbc0038I Pass  48: suminf.    2.06629 (5) obj. -24.384 iterations 0
Cbc0038I Pass  49: suminf.    1.78309 (6) obj. -24.384 iterations 4
Cbc0038I Pass  50: suminf.    2.58116 (6) obj. -24.384 iterations 4
Cbc0038I Pass  51: suminf.    1.15396 (5) obj. -24.384 iterations 4
Cbc0038I Pass  52: suminf.    0.97650 (5) obj. -24.384 iterations 2
Cbc0038I Pass  53: suminf.    1.85677 (6) obj. -24.384 iterations 7
Cbc0038I Pass  54: suminf.    1.63371 (5) obj. -24.384 iterations 2
Cbc0038I Pass  55: suminf.    2.45727 (8) obj. -24.384 iterations 12
Cbc0038I Pass  56: suminf.    2.03436 (7) obj. -24.384 iterations 9
Cbc0038I Pass  57: suminf.    1.92538 (7) obj. -24.384 iterations 3
Cbc0038I Pass  58: suminf.    1.73476 (5) obj. -24.384 iterations 7
Cbc0038I Pass  59: suminf.    1.73476 (5) obj. -24.384 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -15.6087 - took 0.12 seconds
Cbc0012I Integer solution of -15.60873 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 55 rows 36 columns
Cbc0031I 21 added rows had average density of 57.380952
Cbc0013I At root node, 21 cuts changed objective from -47.523215 to -39.041537 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8571 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.066 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1315 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0010I After 18 nodes, 5 on tree, -15.60873 best solution, best possible -39.041537 (0.67 seconds)
Cbc0016I Integer solution of -15.71598 found by strong branching after 5846 iterations and 27 nodes (0.68 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 5 rows 8 columns
Cbc0038I Full problem 127 rows 74 columns, reduced to 54 rows 33 columns
Cbc0012I Integer solution of -16.00027 found by RINS after 7388 iterations and 91 nodes (0.91 seconds)
Cbc0001I Search completed - best objective -16.00027, took 9939 iterations and 186 nodes (1.04 seconds)
Cbc0032I Strong branching done 1438 times (17515 iterations), fathomed 18 nodes and fixed 89 variables
Cbc0035I Maximum depth 31, 748 variables fixed on reduced cost
Total time (CPU seconds):       1.00   (Wallclock seconds):       1.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-63) rows, 110 (-42) columns and 1610 (-1693) elements
Clp1000I sum of infeasibilities 2.37766e-07 - average 2.61281e-09, 36 fixed columns
Coin0506I Presolve 60 (-31) rows, 74 (-36) columns and 833 (-777) elements
Clp0006I 0  Obj 53.244535 Dual inf 2.6473631 (73)
Clp0029I End of values pass after 74 iterations
Clp0014I Perturbing problem by 0.001% of 6.1447227 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 68.144747
Clp0000I Optimal - objective value 68.144747
Coin0511I After Postsolve, objective 68.144747, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 68.144747 Dual inf 2.6745574 (1)
Clp0014I Perturbing problem by 0.001% of 1.7826567 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 68.684149
Clp0000I Optimal - objective value 68.684149
Clp0000I Optimal - objective value 68.684149
Coin0511I After Postsolve, objective 68.684149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.68414947 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 110 columns (110 integer (110 of which binary)) and 1629 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.216%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.18406
Cbc0038I Pass   1: suminf.    1.82627 (28) obj. -28.8681 iterations 9
Cbc0038I Pass   2: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass   3: suminf.    0.04478 (1) obj. 7.61623 iterations 27
Cbc0038I Solution found of 9.52668
Cbc0038I Rounding solution of -0.60362 is better than previous of 9.52668

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -0.60362 to -7.12136 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.7917
Cbc0038I Pass   4: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass   5: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass   6: suminf.    0.94004 (17) obj. -15.9897 iterations 11
Cbc0038I Pass   7: suminf.    0.52721 (6) obj. -11.7917 iterations 19
Cbc0038I Pass   8: suminf.    0.50397 (4) obj. -12.093 iterations 2
Cbc0038I Pass   9: suminf.    0.27516 (3) obj. -11.7917 iterations 19
Cbc0038I Pass  10: suminf.    0.27516 (3) obj. -11.7917 iterations 1
Cbc0038I Pass  11: suminf.    0.54898 (5) obj. -11.7917 iterations 14
Cbc0038I Pass  12: suminf.    0.54213 (2) obj. -11.7917 iterations 3
Cbc0038I Pass  13: suminf.    0.35599 (3) obj. -11.7917 iterations 5
Cbc0038I Pass  14: suminf.    0.54213 (2) obj. -11.7917 iterations 6
Cbc0038I Pass  15: suminf.    1.80289 (13) obj. -11.7917 iterations 28
Cbc0038I Pass  16: suminf.    1.59023 (13) obj. -11.7917 iterations 6
Cbc0038I Pass  17: suminf.    0.72932 (6) obj. -11.7917 iterations 21
Cbc0038I Pass  18: suminf.    0.72932 (6) obj. -11.7917 iterations 0
Cbc0038I Pass  19: suminf.    0.44435 (4) obj. -11.7917 iterations 7
Cbc0038I Pass  20: suminf.    0.42163 (4) obj. -11.7917 iterations 4
Cbc0038I Pass  21: suminf.    0.64702 (4) obj. -11.7917 iterations 7
Cbc0038I Pass  22: suminf.    0.22069 (3) obj. -11.7917 iterations 2
Cbc0038I Pass  23: suminf.    0.90818 (3) obj. -11.7917 iterations 4
Cbc0038I Pass  24: suminf.    0.90818 (3) obj. -11.7917 iterations 1
Cbc0038I Pass  25: suminf.    0.95941 (3) obj. -11.7917 iterations 2
Cbc0038I Pass  26: suminf.    0.74126 (4) obj. -11.7917 iterations 3
Cbc0038I Pass  27: suminf.    0.90818 (3) obj. -11.7917 iterations 2
Cbc0038I Pass  28: suminf.    2.92563 (19) obj. -11.7917 iterations 32
Cbc0038I Pass  29: suminf.    1.26712 (16) obj. -11.7917 iterations 8
Cbc0038I Pass  30: suminf.    1.26712 (16) obj. -11.7917 iterations 0
Cbc0038I Pass  31: suminf.    0.50202 (4) obj. -11.7917 iterations 21
Cbc0038I Pass  32: suminf.    0.49811 (5) obj. -11.7917 iterations 1
Cbc0038I Pass  33: suminf.    0.96200 (6) obj. -11.7917 iterations 6
Cbc0038I Rounding solution of -9.46097 is better than previous of -7.12136

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 47 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -9.46097 to -11.5788 (0.08 seconds)
Cbc0038I Round again with cutoff of -20.1982
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass  34: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass  35: suminf.    0.85687 (10) obj. -20.1982 iterations 24
Cbc0038I Pass  36: suminf.    0.85139 (9) obj. -20.5041 iterations 1
Cbc0038I Pass  37: suminf.    0.88692 (7) obj. -20.1982 iterations 20
Cbc0038I Pass  38: suminf.    0.57616 (6) obj. -20.1982 iterations 3
Cbc0038I Pass  39: suminf.    0.88019 (7) obj. -20.1982 iterations 8
Cbc0038I Pass  40: suminf.    0.78078 (4) obj. -20.2147 iterations 2
Cbc0038I Pass  41: suminf.    0.88019 (7) obj. -20.1982 iterations 7
Cbc0038I Pass  42: suminf.    1.85355 (16) obj. -20.1982 iterations 12
Cbc0038I Pass  43: suminf.    1.58326 (11) obj. -20.1982 iterations 4
Cbc0038I Pass  44: suminf.    0.89402 (9) obj. -20.7049 iterations 3
Cbc0038I Pass  45: suminf.    0.75784 (9) obj. -20.1982 iterations 11
Cbc0038I Pass  46: suminf.    0.57616 (6) obj. -20.1982 iterations 4
Cbc0038I Pass  47: suminf.    0.88019 (7) obj. -20.1982 iterations 8
Cbc0038I Pass  48: suminf.    0.78078 (4) obj. -20.2147 iterations 2
Cbc0038I Pass  49: suminf.    0.88019 (7) obj. -20.1982 iterations 7
Cbc0038I Pass  50: suminf.    1.36707 (11) obj. -20.1982 iterations 13
Cbc0038I Pass  51: suminf.    1.36751 (11) obj. -20.1982 iterations 2
Cbc0038I Pass  52: suminf.    1.20404 (8) obj. -20.1982 iterations 14
Cbc0038I Pass  53: suminf.    1.20404 (8) obj. -20.1982 iterations 1
Cbc0038I Pass  54: suminf.    0.83412 (8) obj. -20.1982 iterations 7
Cbc0038I Pass  55: suminf.    0.60861 (6) obj. -20.796 iterations 3
Cbc0038I Pass  56: suminf.    0.94142 (7) obj. -20.1982 iterations 6
Cbc0038I Pass  57: suminf.    1.46686 (10) obj. -20.1982 iterations 13
Cbc0038I Pass  58: suminf.    1.18852 (9) obj. -20.1982 iterations 6
Cbc0038I Pass  59: suminf.    1.48452 (6) obj. -20.1982 iterations 12
Cbc0038I Pass  60: suminf.    1.27565 (6) obj. -20.1982 iterations 1
Cbc0038I Pass  61: suminf.    1.27565 (6) obj. -20.1982 iterations 0
Cbc0038I Pass  62: suminf.    1.51711 (6) obj. -20.1982 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -11.5788 - took 0.06 seconds
Cbc0012I Integer solution of -11.57883 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 91 rows 110 columns, reduced to 17 rows 24 columns
Cbc0031I 47 added rows had average density of 41.042553
Cbc0013I At root node, 47 cuts changed objective from -53.823948 to -26.866572 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11230 row cuts average 2.4 elements, 2 column cuts (2 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1716 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 615 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1200 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 357 row cuts average 52.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.638 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.57883 best solution, best possible -26.866572 (2.10 seconds)
Cbc0012I Integer solution of -14.40147 found by rounding after 3945 iterations and 1 nodes (2.10 seconds)
Cbc0004I Integer solution of -14.88603 found after 3952 iterations and 1 nodes (2.11 seconds)
Cbc0012I Integer solution of -15.38531 found by DiveCoefficient after 4005 iterations and 2 nodes (2.13 seconds)
Cbc0038I Full problem 91 rows 110 columns, reduced to 19 rows 28 columns
Cbc0010I After 62 nodes, 11 on tree, -15.38531 best solution, best possible -26.219533 (2.81 seconds)
Cbc0038I Full problem 91 rows 110 columns, reduced to 43 rows 58 columns
Cbc0012I Integer solution of -15.99589 found by rounding after 10724 iterations and 204 nodes (3.49 seconds)
Cbc0010I After 220 nodes, 3 on tree, -15.99589 best solution, best possible -26.219533 (3.51 seconds)
Cbc0012I Integer solution of -16.00027 found by rounding after 10902 iterations and 223 nodes (3.52 seconds)
Cbc0001I Search completed - best objective -16.00027, took 11382 iterations and 256 nodes (3.60 seconds)
Cbc0032I Strong branching done 2416 times (32650 iterations), fathomed 42 nodes and fixed 44 variables
Cbc0035I Maximum depth 23, 613 variables fixed on reduced cost
Total time (CPU seconds):       2.98   (Wallclock seconds):       3.61

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 74 (-4) columns and 394 (-59) elements
Clp1000I sum of infeasibilities 1.4471e-05 - average 1.13945e-07, 12 fixed columns
Coin0506I Presolve 104 (-23) rows, 62 (-12) columns and 324 (-70) elements
Clp0029I End of values pass after 62 iterations
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Coin0511I After Postsolve, objective 47.523215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Clp0000I Optimal - objective value 47.523215
Coin0511I After Postsolve, objective 47.523215, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.52321489 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 74 columns (73 integer (73 of which binary)) and 411 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.351%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.79905
Cbc0038I Solution found of 2.77311
Cbc0038I Relaxing continuous gives -6.53204
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 52 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -6.53204 to -15.3853 (0.05 seconds)
Cbc0038I Round again with cutoff of -18.5992
Cbc0038I Pass   1: suminf.    1.72992 (20) obj. -18.5992 iterations 37
Cbc0038I Pass   2: suminf.    1.26650 (5) obj. -18.5992 iterations 19
Cbc0038I Pass   3: suminf.    0.76054 (5) obj. -18.5992 iterations 3
Cbc0038I Pass   4: suminf.    1.02794 (4) obj. -18.5992 iterations 6
Cbc0038I Pass   5: suminf.    1.89786 (5) obj. -18.5992 iterations 4
Cbc0038I Pass   6: suminf.    1.10968 (4) obj. -18.5992 iterations 3
Cbc0038I Pass   7: suminf.    1.30618 (4) obj. -18.5992 iterations 4
Cbc0038I Pass   8: suminf.    2.38793 (8) obj. -18.5992 iterations 10
Cbc0038I Pass   9: suminf.    1.81187 (7) obj. -18.5992 iterations 2
Cbc0038I Pass  10: suminf.    1.69339 (6) obj. -18.5992 iterations 12
Cbc0038I Pass  11: suminf.    1.69339 (6) obj. -18.5992 iterations 0
Cbc0038I Pass  12: suminf.    0.78972 (4) obj. -18.5992 iterations 10
Cbc0038I Pass  13: suminf.    0.78972 (4) obj. -18.5992 iterations 0
Cbc0038I Pass  14: suminf.    1.69339 (6) obj. -18.5992 iterations 5
Cbc0038I Pass  15: suminf.    1.37423 (7) obj. -18.5992 iterations 19
Cbc0038I Pass  16: suminf.    1.32315 (5) obj. -18.5992 iterations 4
Cbc0038I Pass  17: suminf.    1.06688 (4) obj. -18.5992 iterations 15
Cbc0038I Pass  18: suminf.    1.05539 (5) obj. -18.5992 iterations 1
Cbc0038I Pass  19: suminf.    1.22146 (4) obj. -18.5992 iterations 7
Cbc0038I Pass  20: suminf.    0.97010 (3) obj. -18.5992 iterations 4
Cbc0038I Pass  21: suminf.    0.88437 (3) obj. -18.5992 iterations 2
Cbc0038I Pass  22: suminf.    1.75973 (6) obj. -18.5992 iterations 24
Cbc0038I Pass  23: suminf.    1.75973 (6) obj. -18.5992 iterations 4
Cbc0038I Pass  24: suminf.    1.40417 (5) obj. -18.5992 iterations 21
Cbc0038I Pass  25: suminf.    1.22146 (4) obj. -18.5992 iterations 8
Cbc0038I Pass  26: suminf.    0.97010 (3) obj. -18.5992 iterations 4
Cbc0038I Pass  27: suminf.    0.88437 (3) obj. -18.5992 iterations 2
Cbc0038I Pass  28: suminf.    3.53474 (10) obj. -18.5992 iterations 18
Cbc0038I Pass  29: suminf.    2.90243 (10) obj. -18.5992 iterations 4
Cbc0038I Pass  30: suminf.    1.22146 (4) obj. -18.5992 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 77 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -15.3853 to -15.6087 (0.09 seconds)
Cbc0038I Round again with cutoff of -24.384
Cbc0038I Pass  30: suminf.    2.55921 (20) obj. -24.384 iterations 0
Cbc0038I Pass  31: suminf.    1.40836 (5) obj. -24.384 iterations 22
Cbc0038I Pass  32: suminf.    1.40836 (5) obj. -24.384 iterations 1
Cbc0038I Pass  33: suminf.    2.35422 (6) obj. -24.384 iterations 8
Cbc0038I Pass  34: suminf.    1.21688 (4) obj. -24.384 iterations 3
Cbc0038I Pass  35: suminf.    0.97869 (4) obj. -24.384 iterations 2
Cbc0038I Pass  36: suminf.    1.83637 (7) obj. -24.384 iterations 10
Cbc0038I Pass  37: suminf.    1.16068 (5) obj. -24.384 iterations 8
Cbc0038I Pass  38: suminf.    2.35946 (10) obj. -24.384 iterations 8
Cbc0038I Pass  39: suminf.    2.35946 (10) obj. -24.384 iterations 0
Cbc0038I Pass  40: suminf.    1.23704 (6) obj. -24.384 iterations 13
Cbc0038I Pass  41: suminf.    0.84562 (4) obj. -24.384 iterations 2
Cbc0038I Pass  42: suminf.    1.43659 (5) obj. -24.384 iterations 6
Cbc0038I Pass  43: suminf.    1.02319 (4) obj. -24.384 iterations 3
Cbc0038I Pass  44: suminf.    0.95390 (4) obj. -24.384 iterations 4
Cbc0038I Pass  45: suminf.    2.16993 (7) obj. -24.384 iterations 14
Cbc0038I Pass  46: suminf.    2.07276 (9) obj. -24.384 iterations 5
Cbc0038I Pass  47: suminf.    2.06629 (5) obj. -24.384 iterations 12
Cbc0038I Pass  48: suminf.    2.06629 (5) obj. -24.384 iterations 0
Cbc0038I Pass  49: suminf.    1.78309 (6) obj. -24.384 iterations 4
Cbc0038I Pass  50: suminf.    2.58116 (6) obj. -24.384 iterations 4
Cbc0038I Pass  51: suminf.    1.15396 (5) obj. -24.384 iterations 4
Cbc0038I Pass  52: suminf.    0.97650 (5) obj. -24.384 iterations 2
Cbc0038I Pass  53: suminf.    1.85677 (6) obj. -24.384 iterations 7
Cbc0038I Pass  54: suminf.    1.63371 (5) obj. -24.384 iterations 2
Cbc0038I Pass  55: suminf.    2.45727 (8) obj. -24.384 iterations 12
Cbc0038I Pass  56: suminf.    2.03436 (7) obj. -24.384 iterations 9
Cbc0038I Pass  57: suminf.    1.92538 (7) obj. -24.384 iterations 3
Cbc0038I Pass  58: suminf.    1.73476 (5) obj. -24.384 iterations 7
Cbc0038I Pass  59: suminf.    1.73476 (5) obj. -24.384 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 74 columns, reduced to 68 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -15.6087 - took 0.12 seconds
Cbc0012I Integer solution of -15.60873 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 55 rows 36 columns
Cbc0031I 21 added rows had average density of 57.380952
Cbc0013I At root node, 21 cuts changed objective from -47.523215 to -39.041537 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8571 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.069 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1315 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 23 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 13 nodes, 2 on tree, -15.60873 best solution, best possible -39.041537 (0.69 seconds)
Cbc0016I Integer solution of -15.71598 found by strong branching after 5846 iterations and 27 nodes (0.71 seconds)
Cbc0038I Full problem 127 rows 74 columns, reduced to 5 rows 8 columns
Cbc0038I Full problem 127 rows 74 columns, reduced to 54 rows 33 columns
Cbc0012I Integer solution of -16.00027 found by RINS after 7388 iterations and 91 nodes (0.96 seconds)
Cbc0001I Search completed - best objective -16.00027, took 9939 iterations and 186 nodes (1.10 seconds)
Cbc0032I Strong branching done 1438 times (17515 iterations), fathomed 18 nodes and fixed 89 variables
Cbc0035I Maximum depth 31, 748 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.11

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-64) rows, 110 (-43) columns and 1610 (-1694) elements
Clp1000I sum of infeasibilities 2.37766e-07 - average 2.61281e-09, 36 fixed columns
Coin0506I Presolve 60 (-31) rows, 74 (-36) columns and 833 (-777) elements
Clp0006I 0  Obj 53.244535 Dual inf 2.6473631 (73)
Clp0029I End of values pass after 74 iterations
Clp0014I Perturbing problem by 0.001% of 6.1447227 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 68.144747
Clp0000I Optimal - objective value 68.144747
Coin0511I After Postsolve, objective 68.144747, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 68.144747 Dual inf 2.6745574 (1)
Clp0014I Perturbing problem by 0.001% of 1.7826567 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 68.684149
Clp0000I Optimal - objective value 68.684149
Clp0000I Optimal - objective value 68.684149
Coin0511I After Postsolve, objective 68.684149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.68414947 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 41 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 110 columns (110 integer (110 of which binary)) and 1629 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.216%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 5.18406
Cbc0038I Pass   1: suminf.    1.82627 (28) obj. -28.8681 iterations 9
Cbc0038I Pass   2: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass   3: suminf.    0.04478 (1) obj. 7.61623 iterations 27
Cbc0038I Solution found of 9.52668
Cbc0038I Rounding solution of -0.60362 is better than previous of 9.52668

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 8 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -0.60362 to -7.12136 (0.03 seconds)
Cbc0038I Round again with cutoff of -11.7917
Cbc0038I Pass   4: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass   5: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass   6: suminf.    0.94004 (17) obj. -15.9897 iterations 11
Cbc0038I Pass   7: suminf.    0.52721 (6) obj. -11.7917 iterations 19
Cbc0038I Pass   8: suminf.    0.50397 (4) obj. -12.093 iterations 2
Cbc0038I Pass   9: suminf.    0.27516 (3) obj. -11.7917 iterations 19
Cbc0038I Pass  10: suminf.    0.27516 (3) obj. -11.7917 iterations 1
Cbc0038I Pass  11: suminf.    0.54898 (5) obj. -11.7917 iterations 14
Cbc0038I Pass  12: suminf.    0.54213 (2) obj. -11.7917 iterations 3
Cbc0038I Pass  13: suminf.    0.35599 (3) obj. -11.7917 iterations 5
Cbc0038I Pass  14: suminf.    0.54213 (2) obj. -11.7917 iterations 6
Cbc0038I Pass  15: suminf.    1.80289 (13) obj. -11.7917 iterations 28
Cbc0038I Pass  16: suminf.    1.59023 (13) obj. -11.7917 iterations 6
Cbc0038I Pass  17: suminf.    0.72932 (6) obj. -11.7917 iterations 21
Cbc0038I Pass  18: suminf.    0.72932 (6) obj. -11.7917 iterations 0
Cbc0038I Pass  19: suminf.    0.44435 (4) obj. -11.7917 iterations 7
Cbc0038I Pass  20: suminf.    0.42163 (4) obj. -11.7917 iterations 4
Cbc0038I Pass  21: suminf.    0.64702 (4) obj. -11.7917 iterations 7
Cbc0038I Pass  22: suminf.    0.22069 (3) obj. -11.7917 iterations 2
Cbc0038I Pass  23: suminf.    0.90818 (3) obj. -11.7917 iterations 4
Cbc0038I Pass  24: suminf.    0.90818 (3) obj. -11.7917 iterations 1
Cbc0038I Pass  25: suminf.    0.95941 (3) obj. -11.7917 iterations 2
Cbc0038I Pass  26: suminf.    0.74126 (4) obj. -11.7917 iterations 3
Cbc0038I Pass  27: suminf.    0.90818 (3) obj. -11.7917 iterations 2
Cbc0038I Pass  28: suminf.    2.92563 (19) obj. -11.7917 iterations 32
Cbc0038I Pass  29: suminf.    1.26712 (16) obj. -11.7917 iterations 8
Cbc0038I Pass  30: suminf.    1.26712 (16) obj. -11.7917 iterations 0
Cbc0038I Pass  31: suminf.    0.50202 (4) obj. -11.7917 iterations 21
Cbc0038I Pass  32: suminf.    0.49811 (5) obj. -11.7917 iterations 1
Cbc0038I Pass  33: suminf.    0.96200 (6) obj. -11.7917 iterations 6
Cbc0038I Rounding solution of -9.46097 is better than previous of -7.12136

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 47 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -9.46097 to -11.5788 (0.08 seconds)
Cbc0038I Round again with cutoff of -20.1982
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass  34: suminf.    1.82627 (28) obj. -28.8681 iterations 0
Cbc0038I Pass  35: suminf.    0.85687 (10) obj. -20.1982 iterations 24
Cbc0038I Pass  36: suminf.    0.85139 (9) obj. -20.5041 iterations 1
Cbc0038I Pass  37: suminf.    0.88692 (7) obj. -20.1982 iterations 20
Cbc0038I Pass  38: suminf.    0.57616 (6) obj. -20.1982 iterations 3
Cbc0038I Pass  39: suminf.    0.88019 (7) obj. -20.1982 iterations 8
Cbc0038I Pass  40: suminf.    0.78078 (4) obj. -20.2147 iterations 2
Cbc0038I Pass  41: suminf.    0.88019 (7) obj. -20.1982 iterations 7
Cbc0038I Pass  42: suminf.    1.85355 (16) obj. -20.1982 iterations 12
Cbc0038I Pass  43: suminf.    1.58326 (11) obj. -20.1982 iterations 4
Cbc0038I Pass  44: suminf.    0.89402 (9) obj. -20.7049 iterations 3
Cbc0038I Pass  45: suminf.    0.75784 (9) obj. -20.1982 iterations 11
Cbc0038I Pass  46: suminf.    0.57616 (6) obj. -20.1982 iterations 4
Cbc0038I Pass  47: suminf.    0.88019 (7) obj. -20.1982 iterations 8
Cbc0038I Pass  48: suminf.    0.78078 (4) obj. -20.2147 iterations 2
Cbc0038I Pass  49: suminf.    0.88019 (7) obj. -20.1982 iterations 7
Cbc0038I Pass  50: suminf.    1.36707 (11) obj. -20.1982 iterations 13
Cbc0038I Pass  51: suminf.    1.36751 (11) obj. -20.1982 iterations 2
Cbc0038I Pass  52: suminf.    1.20404 (8) obj. -20.1982 iterations 14
Cbc0038I Pass  53: suminf.    1.20404 (8) obj. -20.1982 iterations 1
Cbc0038I Pass  54: suminf.    0.83412 (8) obj. -20.1982 iterations 7
Cbc0038I Pass  55: suminf.    0.60861 (6) obj. -20.796 iterations 3
Cbc0038I Pass  56: suminf.    0.94142 (7) obj. -20.1982 iterations 6
Cbc0038I Pass  57: suminf.    1.46686 (10) obj. -20.1982 iterations 13
Cbc0038I Pass  58: suminf.    1.18852 (9) obj. -20.1982 iterations 6
Cbc0038I Pass  59: suminf.    1.48452 (6) obj. -20.1982 iterations 12
Cbc0038I Pass  60: suminf.    1.27565 (6) obj. -20.1982 iterations 1
Cbc0038I Pass  61: suminf.    1.27565 (6) obj. -20.1982 iterations 0
Cbc0038I Pass  62: suminf.    1.51711 (6) obj. -20.1982 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 110 columns, reduced to 15 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -11.5788 - took 0.07 seconds
Cbc0012I Integer solution of -11.57883 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 91 rows 110 columns, reduced to 17 rows 24 columns
Cbc0031I 47 added rows had average density of 41.042553
Cbc0013I At root node, 47 cuts changed objective from -53.823948 to -26.866572 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11230 row cuts average 2.4 elements, 2 column cuts (2 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1716 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 22 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 615 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1200 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 357 row cuts average 52.1 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 46 row cuts average 22.7 elements, 0 column cuts (0 active)  in 0.683 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.57883 best solution, best possible -26.866572 (2.28 seconds)
Cbc0012I Integer solution of -14.40147 found by rounding after 3945 iterations and 1 nodes (2.29 seconds)
Cbc0004I Integer solution of -14.88603 found after 3952 iterations and 1 nodes (2.29 seconds)
Cbc0012I Integer solution of -15.38531 found by DiveCoefficient after 4005 iterations and 2 nodes (2.31 seconds)
Cbc0038I Full problem 91 rows 110 columns, reduced to 19 rows 28 columns
Cbc0010I After 44 nodes, 12 on tree, -15.38531 best solution, best possible -26.219533 (2.99 seconds)
Cbc0038I Full problem 91 rows 110 columns, reduced to 43 rows 58 columns
Cbc0010I After 162 nodes, 5 on tree, -15.38531 best solution, best possible -26.219533 (3.70 seconds)
Cbc0012I Integer solution of -15.99589 found by rounding after 10724 iterations and 204 nodes (3.80 seconds)
Cbc0012I Integer solution of -16.00027 found by rounding after 10902 iterations and 223 nodes (3.83 seconds)
Cbc0001I Search completed - best objective -16.00027, took 11382 iterations and 256 nodes (3.91 seconds)
Cbc0032I Strong branching done 2416 times (32650 iterations), fathomed 42 nodes and fixed 44 variables
Cbc0035I Maximum depth 23, 613 variables fixed on reduced cost
Total time (CPU seconds):       3.20   (Wallclock seconds):       3.93

