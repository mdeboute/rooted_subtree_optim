Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 28 (-21) rows, 15 (-10) columns and 79 (-56) elements
Clp0000I Optimal - objective value 96.313253
Coin0511I After Postsolve, objective 96.313253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.31325342 - 16 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 28 rows, 15 columns (14 integer (14 of which binary)) and 79 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.591%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.37055
Cbc0038I Pass   1: suminf.    0.37886 (2) obj. -60.0415 iterations 12
Cbc0038I Solution found of 16
Cbc0038I Relaxing continuous gives 16
Cbc0038I Rounding solution of -5.66667 is better than previous of 16

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 15 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -14.7314
Cbc0038I Pass   2: suminf.    0.37886 (2) obj. -60.0415 iterations 0
Cbc0038I Pass   3: suminf.    0.40851 (2) obj. -14.7314 iterations 3
Cbc0038I Solution found of -30.6667
Cbc0038I Relaxing continuous gives -30.6667
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 15 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.7961
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.59047 (2) obj. -64.2188 iterations 8
Cbc0038I Pass   5: suminf.    0.38792 (2) obj. -43.7961 iterations 4
Cbc0038I Pass   6: suminf.    1.00757 (4) obj. -43.7961 iterations 5
Cbc0038I Pass   7: suminf.    0.66950 (3) obj. -43.7961 iterations 1
Cbc0038I Pass   8: suminf.    0.75048 (2) obj. -43.7961 iterations 3
Cbc0038I Pass   9: suminf.    0.20524 (1) obj. -43.7961 iterations 3
Cbc0038I Pass  10: suminf.    0.54559 (2) obj. -43.7961 iterations 2
Cbc0038I Pass  11: suminf.    0.00505 (1) obj. -43.7961 iterations 7
Cbc0038I Pass  12: suminf.    0.00505 (1) obj. -43.7961 iterations 1
Cbc0038I Pass  13: suminf.    0.30713 (1) obj. -43.7961 iterations 3
Cbc0038I Pass  14: suminf.    0.56580 (2) obj. -43.7961 iterations 2
Cbc0038I Pass  15: suminf.    0.02411 (1) obj. -43.7961 iterations 6
Cbc0038I Pass  16: suminf.    0.02411 (1) obj. -43.7961 iterations 2
Cbc0038I Pass  17: suminf.    0.66506 (2) obj. -43.7961 iterations 2
Cbc0038I Pass  18: suminf.    0.26939 (1) obj. -43.7961 iterations 3
Cbc0038I Pass  19: suminf.    0.59290 (2) obj. -43.7961 iterations 2
Cbc0038I Pass  20: suminf.    0.26939 (1) obj. -43.7961 iterations 3
Cbc0038I Pass  21: suminf.    0.49613 (1) obj. -43.7961 iterations 1
Cbc0038I Pass  22: suminf.    0.69037 (2) obj. -43.7961 iterations 1
Cbc0038I Pass  23: suminf.    0.69037 (2) obj. -43.7961 iterations 0
Cbc0038I Pass  24: suminf.    0.63740 (2) obj. -43.7961 iterations 6
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -68 iterations 2
Cbc0038I Solution found of -68
Cbc0038I Relaxing continuous gives -68
Cbc0038I Rounding solution of -73 is better than previous of -68

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 15 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -79.994
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  26: suminf.    0.64171 (4) obj. -79.994 iterations 2
Cbc0038I Pass  27: suminf.    2.02793 (6) obj. -79.994 iterations 7
Cbc0038I Pass  28: suminf.    0.84905 (4) obj. -79.994 iterations 4
Cbc0038I Pass  29: suminf.    0.95856 (4) obj. -79.994 iterations 7
Cbc0038I Pass  30: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  31: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  32: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  33: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  34: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  35: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  36: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  37: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  38: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  39: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  40: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  41: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  42: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  43: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  44: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  45: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  46: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  47: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  48: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  49: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  50: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  51: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  52: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  53: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  54: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  55: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 15 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -73 - took 0.03 seconds
Cbc0012I Integer solution of -73 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 28 rows 15 columns, reduced to 11 rows 9 columns
Cbc0012I Integer solution of -73.66667 found by DiveCoefficient after 7 iterations and 0 nodes (0.02 seconds)
Cbc0031I 2 added rows had average density of 4
Cbc0013I At root node, 2 cuts changed objective from -96.313253 to -73.66667 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -73.66667000000001, took 7 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-11) rows, 37 (-9) columns and 264 (-122) elements
Clp1000I sum of infeasibilities 1.26211e-08 - average 3.50585e-10, 35 fixed columns
Coin0506I Presolve 3 (-33) rows, 2 (-35) columns and 6 (-258) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 167.70107
Clp0000I Optimal - objective value 167.70107
Coin0511I After Postsolve, objective 167.70107, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.18272609 - largest nonzero change 0 ( 0%) - largest zero change 2.8271852e-05
Clp0000I Optimal - objective value 296.78893
Clp0000I Optimal - objective value 296.78893
Clp0000I Optimal - objective value 296.78893
Coin0511I After Postsolve, objective 296.78893, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 296.7889297 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 38 columns (38 integer (38 of which binary)) and 283 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.535%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.02948
Cbc0038I Pass   1: suminf.    1.56106 (9) obj. 3.08501 iterations 13
Cbc0038I Pass   2: suminf.    1.56106 (9) obj. 3.08501 iterations 0
Cbc0038I Solution found of 72
Cbc0038I Rounding solution of 9.33333 is better than previous of 72

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -13.9301
Cbc0038I Pass   3: suminf.    1.88024 (18) obj. -13.9301 iterations 4
Cbc0038I Pass   4: suminf.    1.88024 (18) obj. -13.9301 iterations 0
Cbc0038I Pass   5: suminf.    0.15732 (1) obj. -43.2671 iterations 31
Cbc0038I Pass   6: suminf.    0.31254 (1) obj. -13.9301 iterations 1
Cbc0038I Pass   7: suminf.    1.56917 (7) obj. -13.9301 iterations 8
Cbc0038I Pass   8: suminf.    1.25658 (6) obj. -13.9301 iterations 3
Cbc0038I Pass   9: suminf.    1.25658 (6) obj. -13.9301 iterations 0
Cbc0038I Pass  10: suminf.    2.07751 (11) obj. -13.9301 iterations 6
Cbc0038I Pass  11: suminf.    2.07751 (11) obj. -13.9301 iterations 1
Cbc0038I Pass  12: suminf.    0.15732 (1) obj. -43.2671 iterations 13
Cbc0038I Pass  13: suminf.    0.31254 (1) obj. -13.9301 iterations 1
Cbc0038I Pass  14: suminf.    0.83333 (2) obj. -41 iterations 12
Cbc0038I Pass  15: suminf.    0.50000 (1) obj. -39.6667 iterations 2
Cbc0038I Solution found of -38.6667
Cbc0038I Rounding solution of -73 is better than previous of -38.6667

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -103.06
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  16: suminf.    3.33989 (18) obj. -103.06 iterations 0
Cbc0038I Pass  17: suminf.    3.33989 (18) obj. -103.06 iterations 0
Cbc0038I Pass  18: suminf.    0.69871 (3) obj. -103.06 iterations 21
Cbc0038I Pass  19: suminf.    0.43567 (2) obj. -130.115 iterations 1
Cbc0038I Pass  20: suminf.    0.34712 (1) obj. -103.06 iterations 2
Cbc0038I Pass  21: suminf.    0.21220 (1) obj. -128.562 iterations 1
Cbc0038I Pass  22: suminf.    0.71655 (4) obj. -103.06 iterations 5
Cbc0038I Pass  23: suminf.    0.44329 (3) obj. -103.06 iterations 3
Cbc0038I Pass  24: suminf.    0.69757 (2) obj. -103.06 iterations 2
Cbc0038I Pass  25: suminf.    0.48645 (1) obj. -103.06 iterations 1
Cbc0038I Pass  26: suminf.    0.29756 (1) obj. -138.761 iterations 1
Cbc0038I Pass  27: suminf.    2.64170 (8) obj. -103.06 iterations 8
Cbc0038I Pass  28: suminf.    1.01575 (5) obj. -103.06 iterations 6
Cbc0038I Pass  29: suminf.    0.75225 (3) obj. -103.06 iterations 2
Cbc0038I Pass  30: suminf.    0.48356 (1) obj. -103.06 iterations 2
Cbc0038I Pass  31: suminf.    0.41951 (1) obj. -121.379 iterations 1
Cbc0038I Pass  32: suminf.    4.32865 (11) obj. -103.06 iterations 12
Cbc0038I Pass  33: suminf.    2.09984 (5) obj. -103.06 iterations 6
Cbc0038I Pass  34: suminf.    0.48645 (1) obj. -103.06 iterations 4
Cbc0038I Pass  35: suminf.    0.38293 (1) obj. -122.627 iterations 1
Cbc0038I Pass  36: suminf.    3.33747 (9) obj. -103.06 iterations 12
Cbc0038I Pass  37: suminf.    1.68847 (4) obj. -103.06 iterations 5
Cbc0038I Pass  38: suminf.    0.88951 (2) obj. -103.06 iterations 2
Cbc0038I Pass  39: suminf.    0.46463 (1) obj. -108.483 iterations 2
Cbc0038I Pass  40: suminf.    0.43594 (1) obj. -103.06 iterations 1
Cbc0038I Pass  41: suminf.    2.11946 (6) obj. -103.06 iterations 6
Cbc0038I Pass  42: suminf.    0.49512 (1) obj. -105.245 iterations 4
Cbc0038I Pass  43: suminf.    0.48356 (1) obj. -103.06 iterations 1
Cbc0038I Pass  44: suminf.    0.52214 (2) obj. -103.06 iterations 1
Cbc0038I Pass  45: suminf.    0.48356 (1) obj. -103.06 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -73 - took 0.01 seconds
Cbc0012I Integer solution of -73 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 38 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -74 found by DiveCoefficient after 42 iterations and 0 nodes (0.07 seconds)
Cbc0031I 6 added rows had average density of 4.8333333
Cbc0013I At root node, 6 cuts changed objective from -223.30008 to -74 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 140 row cuts average 4.0 elements, 22 column cuts (22 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 4 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 12 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -74, took 42 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Dual Simplex

Coin0506I Presolve 28 (-21) rows, 15 (-10) columns and 79 (-56) elements
Clp0000I Optimal - objective value 96.313253
Coin0511I After Postsolve, objective 96.313253, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.31325342 - 16 iterations time 0.002, Presolve 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 28 rows, 15 columns (14 integer (14 of which binary)) and 79 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.591%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.37055
Cbc0038I Pass   1: suminf.    0.37886 (2) obj. -60.0415 iterations 12
Cbc0038I Solution found of 16
Cbc0038I Relaxing continuous gives 16
Cbc0038I Rounding solution of -5.66667 is better than previous of 16

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 15 columns, reduced to 11 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -14.7314
Cbc0038I Pass   2: suminf.    0.37886 (2) obj. -60.0415 iterations 0
Cbc0038I Pass   3: suminf.    0.40851 (2) obj. -14.7314 iterations 3
Cbc0038I Solution found of -30.6667
Cbc0038I Relaxing continuous gives -30.6667
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 15 columns, reduced to 11 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -43.7961
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass   4: suminf.    0.59047 (2) obj. -64.2188 iterations 8
Cbc0038I Pass   5: suminf.    0.38792 (2) obj. -43.7961 iterations 4
Cbc0038I Pass   6: suminf.    1.00757 (4) obj. -43.7961 iterations 5
Cbc0038I Pass   7: suminf.    0.66950 (3) obj. -43.7961 iterations 1
Cbc0038I Pass   8: suminf.    0.75048 (2) obj. -43.7961 iterations 3
Cbc0038I Pass   9: suminf.    0.20524 (1) obj. -43.7961 iterations 3
Cbc0038I Pass  10: suminf.    0.54559 (2) obj. -43.7961 iterations 2
Cbc0038I Pass  11: suminf.    0.00505 (1) obj. -43.7961 iterations 7
Cbc0038I Pass  12: suminf.    0.00505 (1) obj. -43.7961 iterations 1
Cbc0038I Pass  13: suminf.    0.30713 (1) obj. -43.7961 iterations 3
Cbc0038I Pass  14: suminf.    0.56580 (2) obj. -43.7961 iterations 2
Cbc0038I Pass  15: suminf.    0.02411 (1) obj. -43.7961 iterations 6
Cbc0038I Pass  16: suminf.    0.02411 (1) obj. -43.7961 iterations 2
Cbc0038I Pass  17: suminf.    0.66506 (2) obj. -43.7961 iterations 2
Cbc0038I Pass  18: suminf.    0.26939 (1) obj. -43.7961 iterations 3
Cbc0038I Pass  19: suminf.    0.59290 (2) obj. -43.7961 iterations 2
Cbc0038I Pass  20: suminf.    0.26939 (1) obj. -43.7961 iterations 3
Cbc0038I Pass  21: suminf.    0.49613 (1) obj. -43.7961 iterations 1
Cbc0038I Pass  22: suminf.    0.69037 (2) obj. -43.7961 iterations 1
Cbc0038I Pass  23: suminf.    0.69037 (2) obj. -43.7961 iterations 0
Cbc0038I Pass  24: suminf.    0.63740 (2) obj. -43.7961 iterations 6
Cbc0038I Pass  25: suminf.    0.00000 (0) obj. -68 iterations 2
Cbc0038I Solution found of -68
Cbc0038I Relaxing continuous gives -68
Cbc0038I Rounding solution of -73 is better than previous of -68

Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 15 columns, reduced to 15 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -79.994
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  26: suminf.    0.64171 (4) obj. -79.994 iterations 2
Cbc0038I Pass  27: suminf.    2.02793 (6) obj. -79.994 iterations 7
Cbc0038I Pass  28: suminf.    0.84905 (4) obj. -79.994 iterations 4
Cbc0038I Pass  29: suminf.    0.95856 (4) obj. -79.994 iterations 7
Cbc0038I Pass  30: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  31: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  32: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  33: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  34: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  35: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  36: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  37: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  38: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  39: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  40: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  41: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  42: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  43: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  44: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  45: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  46: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  47: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  48: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  49: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  50: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I Pass  51: suminf.    1.07353 (4) obj. -79.994 iterations 2
Cbc0038I Pass  52: suminf.    0.96416 (3) obj. -79.994 iterations 1
Cbc0038I Pass  53: suminf.    0.16355 (2) obj. -79.994 iterations 1
Cbc0038I Pass  54: suminf.    0.95856 (4) obj. -79.994 iterations 4
Cbc0038I Pass  55: suminf.    0.85680 (3) obj. -79.994 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 15 columns, reduced to 13 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -73 - took 0.01 seconds
Cbc0012I Integer solution of -73 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 28 rows 15 columns, reduced to 11 rows 9 columns
Cbc0012I Integer solution of -73.66667 found by DiveCoefficient after 7 iterations and 0 nodes (0.02 seconds)
Cbc0031I 2 added rows had average density of 4
Cbc0013I At root node, 2 cuts changed objective from -96.313253 to -73.66667 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 5 row cuts average 2.0 elements, 8 column cuts (8 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -73.66667000000001, took 7 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 34 (-13) columns and 229 (-160) elements
Clp1000I sum of infeasibilities 3.71209e-10 - average 1.09179e-11, 28 fixed columns
Coin0506I Presolve 0 (-34) rows, 0 (-34) columns and 0 (-229) elements
Clp0000I Optimal - objective value 74.66667
Clp0000I Optimal - objective value 74.66667
Coin0511I After Postsolve, objective 74.66667, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.2832477 - largest nonzero change 2.407023e-05 ( 0.002407023%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 165.08878
Clp0000I Optimal - objective value 165.08878
Clp0000I Optimal - objective value 165.08878
Coin0511I After Postsolve, objective 165.08878, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 165.0887772 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 35 columns (35 integer (35 of which binary)) and 243 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.290%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.68926
Cbc0038I Pass   1: suminf.    0.67857 (4) obj. -18.3571 iterations 15
Cbc0038I Pass   2: suminf.    0.67857 (4) obj. -18.3571 iterations 0
Cbc0038I Solution found of 8.00003
Cbc0038I Rounding solution of -1.99997 is better than previous of 8.00003

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 35 columns, reduced to 7 rows 9 columns
Cbc0038I Mini branch and bound improved solution from -1.99997 to -47.3334 (0.02 seconds)
Cbc0038I Round again with cutoff of -55.3866
Cbc0038I Pass   3: suminf.    2.23460 (11) obj. -55.3866 iterations 1
Cbc0038I Pass   4: suminf.    2.23460 (11) obj. -55.3866 iterations 0
Cbc0038I Pass   5: suminf.    1.13819 (3) obj. -55.3866 iterations 26
Cbc0038I Pass   6: suminf.    1.13819 (3) obj. -55.3866 iterations 1
Cbc0038I Pass   7: suminf.    0.30769 (1) obj. -56.8718 iterations 3
Cbc0038I Pass   8: suminf.    0.25978 (1) obj. -55.3866 iterations 1
Cbc0038I Pass   9: suminf.    2.00357 (5) obj. -61.0596 iterations 8
Cbc0038I Pass  10: suminf.    0.78129 (2) obj. -55.3866 iterations 5
Cbc0038I Pass  11: suminf.    0.47495 (2) obj. -55.3866 iterations 5
Cbc0038I Pass  12: suminf.    0.47495 (2) obj. -55.3866 iterations 0
Cbc0038I Pass  13: suminf.    0.80769 (2) obj. -63.7052 iterations 2
Cbc0038I Pass  14: suminf.    0.53935 (2) obj. -55.3866 iterations 1
Cbc0038I Pass  15: suminf.    1.84599 (5) obj. -65.1221 iterations 7
Cbc0038I Pass  16: suminf.    1.00000 (2) obj. -60.1667 iterations 3
Cbc0038I Pass  17: suminf.    2.01550 (8) obj. -55.3866 iterations 9
Cbc0038I Pass  18: suminf.    2.01550 (8) obj. -55.3866 iterations 1
Cbc0038I Pass  19: suminf.    1.37223 (3) obj. -55.3866 iterations 11
Cbc0038I Pass  20: suminf.    1.37223 (3) obj. -55.3866 iterations 1
Cbc0038I Pass  21: suminf.    0.45649 (2) obj. -55.3866 iterations 2
Cbc0038I Pass  22: suminf.    0.45649 (2) obj. -55.3866 iterations 0
Cbc0038I Pass  23: suminf.    0.88462 (2) obj. -66.0898 iterations 2
Cbc0038I Pass  24: suminf.    0.53935 (2) obj. -55.3866 iterations 1
Cbc0038I Pass  25: suminf.    2.29041 (6) obj. -55.3866 iterations 5
Cbc0038I Pass  26: suminf.    0.83333 (2) obj. -62.1667 iterations 4
Cbc0038I Pass  27: suminf.    2.96373 (9) obj. -55.3866 iterations 13
Cbc0038I Pass  28: suminf.    2.25548 (6) obj. -55.3866 iterations 4
Cbc0038I Pass  29: suminf.    1.43814 (3) obj. -55.3866 iterations 11
Cbc0038I Pass  30: suminf.    1.37223 (3) obj. -55.3866 iterations 2
Cbc0038I Pass  31: suminf.    0.45649 (2) obj. -55.3866 iterations 2
Cbc0038I Pass  32: suminf.    0.45649 (2) obj. -55.3866 iterations 0
Cbc0038I Rounding solution of -52.3334 is better than previous of -47.3334

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 35 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -69.8822
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.45226 (11) obj. -69.8822 iterations 0
Cbc0038I Pass  33: suminf.    2.45226 (11) obj. -69.8822 iterations 0
Cbc0038I Pass  34: suminf.    0.83605 (3) obj. -69.8822 iterations 26
Cbc0038I Pass  35: suminf.    0.83605 (3) obj. -69.8822 iterations 1
Cbc0038I Pass  36: suminf.    0.96811 (3) obj. -69.8822 iterations 1
Cbc0038I Pass  37: suminf.    0.96811 (3) obj. -69.8822 iterations 0
Cbc0038I Pass  38: suminf.    0.83605 (3) obj. -69.8822 iterations 1
Cbc0038I Pass  39: suminf.    2.41268 (7) obj. -69.8822 iterations 7
Cbc0038I Pass  40: suminf.    2.21268 (6) obj. -69.8822 iterations 2
Cbc0038I Pass  41: suminf.    0.94716 (3) obj. -69.8822 iterations 4
Cbc0038I Pass  42: suminf.    0.94716 (3) obj. -69.8822 iterations 0
Cbc0038I Pass  43: suminf.    1.04811 (3) obj. -69.8822 iterations 1
Cbc0038I Pass  44: suminf.    1.04811 (3) obj. -69.8822 iterations 0
Cbc0038I Pass  45: suminf.    2.53946 (9) obj. -69.8822 iterations 13
Cbc0038I Pass  46: suminf.    1.36012 (4) obj. -69.8822 iterations 6
Cbc0038I Pass  47: suminf.    0.79219 (3) obj. -69.8822 iterations 5
Cbc0038I Pass  48: suminf.    0.63158 (2) obj. -69.8822 iterations 1
Cbc0038I Solution found of -73.6667
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 35 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -89.9261
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 4
Cbc0038I Pass  49: suminf.    2.75833 (11) obj. -89.9261 iterations 1
Cbc0038I Pass  50: suminf.    2.66831 (11) obj. -89.9261 iterations 1
Cbc0038I Pass  51: suminf.    2.16232 (6) obj. -89.9261 iterations 18
Cbc0038I Pass  52: suminf.    2.16232 (6) obj. -89.9261 iterations 0
Cbc0038I Pass  53: suminf.    1.98279 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  54: suminf.    1.89490 (5) obj. -89.9261 iterations 2
Cbc0038I Pass  55: suminf.    1.89490 (5) obj. -89.9261 iterations 0
Cbc0038I Pass  56: suminf.    2.16232 (6) obj. -89.9261 iterations 5
Cbc0038I Pass  57: suminf.    2.16232 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  58: suminf.    1.98279 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  59: suminf.    1.89490 (5) obj. -89.9261 iterations 2
Cbc0038I Pass  60: suminf.    1.89490 (5) obj. -89.9261 iterations 0
Cbc0038I Pass  61: suminf.    2.16232 (6) obj. -89.9261 iterations 5
Cbc0038I Pass  62: suminf.    2.16232 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  63: suminf.    1.98279 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  64: suminf.    1.89490 (5) obj. -89.9261 iterations 2
Cbc0038I Pass  65: suminf.    1.89490 (5) obj. -89.9261 iterations 0
Cbc0038I Pass  66: suminf.    2.16232 (6) obj. -89.9261 iterations 5
Cbc0038I Pass  67: suminf.    2.16232 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  68: suminf.    1.98279 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  69: suminf.    1.89490 (5) obj. -89.9261 iterations 2
Cbc0038I Pass  70: suminf.    1.89490 (5) obj. -89.9261 iterations 0
Cbc0038I Pass  71: suminf.    2.16232 (6) obj. -89.9261 iterations 5
Cbc0038I Pass  72: suminf.    2.16232 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  73: suminf.    1.98279 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  74: suminf.    1.89490 (5) obj. -89.9261 iterations 2
Cbc0038I Pass  75: suminf.    1.89490 (5) obj. -89.9261 iterations 0
Cbc0038I Pass  76: suminf.    2.16232 (6) obj. -89.9261 iterations 5
Cbc0038I Pass  77: suminf.    2.16232 (6) obj. -89.9261 iterations 1
Cbc0038I Pass  78: suminf.    1.98279 (6) obj. -89.9261 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -73.6667 - took 0.02 seconds
Cbc0012I Integer solution of -73.66667 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 35 columns, reduced to 0 rows 0 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -102.73813 to -102.73813 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -73.66667000000001, took 11 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

