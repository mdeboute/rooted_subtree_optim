Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 2.09657e-05 - average 3.67819e-07, 0 fixed columns
Coin0506I Presolve 57 (0) rows, 33 (0) columns and 172 (0) elements
Clp0014I Perturbing problem by 0.001% of 3.0170835 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Coin0511I After Postsolve, objective 105.31511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Coin0511I After Postsolve, objective 105.31511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.3151052 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.20036
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.3818 iterations 25
Cbc0038I Solution found of -15.3818
Cbc0038I Relaxing continuous gives -15.3818
Cbc0038I Rounding solution of -32.9598 is better than previous of -15.3818

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -32.9598 to -45.1758 (0.05 seconds)
Cbc0038I Round again with cutoff of -51.1899
Cbc0038I Pass   2: suminf.    1.44998 (7) obj. -51.1899 iterations 5
Cbc0038I Pass   3: suminf.    0.77108 (3) obj. -51.1899 iterations 7
Cbc0038I Pass   4: suminf.    0.77108 (3) obj. -51.1899 iterations 0
Cbc0038I Pass   5: suminf.    1.34771 (4) obj. -51.1899 iterations 6
Cbc0038I Pass   6: suminf.    1.30751 (4) obj. -51.1899 iterations 3
Cbc0038I Pass   7: suminf.    1.19525 (5) obj. -51.1899 iterations 2
Cbc0038I Pass   8: suminf.    1.26981 (4) obj. -51.1899 iterations 6
Cbc0038I Pass   9: suminf.    0.74499 (4) obj. -51.1899 iterations 1
Cbc0038I Pass  10: suminf.    0.67894 (3) obj. -51.1899 iterations 1
Cbc0038I Pass  11: suminf.    1.04610 (4) obj. -51.1899 iterations 4
Cbc0038I Pass  12: suminf.    0.99778 (3) obj. -51.1899 iterations 1
Cbc0038I Pass  13: suminf.    0.67894 (3) obj. -51.1899 iterations 4
Cbc0038I Pass  14: suminf.    1.35892 (5) obj. -51.1899 iterations 11
Cbc0038I Pass  15: suminf.    0.88566 (5) obj. -51.1899 iterations 7
Cbc0038I Pass  16: suminf.    0.57221 (3) obj. -51.1899 iterations 5
Cbc0038I Pass  17: suminf.    0.47923 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  18: suminf.    0.76198 (3) obj. -51.1899 iterations 6
Cbc0038I Pass  19: suminf.    0.57328 (2) obj. -51.1899 iterations 3
Cbc0038I Pass  20: suminf.    0.57328 (2) obj. -51.1899 iterations 0
Cbc0038I Pass  21: suminf.    0.89538 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  22: suminf.    0.77058 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  23: suminf.    1.04086 (5) obj. -51.1899 iterations 4
Cbc0038I Pass  24: suminf.    1.04086 (5) obj. -51.1899 iterations 1
Cbc0038I Pass  25: suminf.    0.57328 (2) obj. -51.1899 iterations 6
Cbc0038I Pass  26: suminf.    0.57328 (2) obj. -51.1899 iterations 0
Cbc0038I Pass  27: suminf.    0.89538 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  28: suminf.    0.77058 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  29: suminf.    2.05685 (10) obj. -51.1899 iterations 10
Cbc0038I Pass  30: suminf.    1.65881 (5) obj. -51.1899 iterations 6
Cbc0038I Pass  31: suminf.    0.56636 (3) obj. -51.1899 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -45.1758 - took 0.09 seconds
Cbc0012I Integer solution of -45.17585 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 24 columns
Cbc0031I 13 added rows had average density of 28.846154
Cbc0013I At root node, 13 cuts changed objective from -105.31511 to -74.585706 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2785 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1248 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0038I Full problem 57 rows 33 columns, reduced to 10 rows 13 columns
Cbc0038I Full problem 57 rows 33 columns, reduced to 4 rows 5 columns
Cbc0001I Search completed - best objective -45.17585, took 4938 iterations and 100 nodes (0.47 seconds)
Cbc0032I Strong branching done 740 times (6387 iterations), fathomed 12 nodes and fixed 19 variables
Cbc0035I Maximum depth 10, 134 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.47

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-15) rows, 60 (-6) columns and 594 (-129) elements
Clp1000I sum of infeasibilities 4.54029e-08 - average 8.56659e-10, 35 fixed columns
Coin0506I Presolve 20 (-33) rows, 25 (-35) columns and 84 (-510) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.0503792 - largest nonzero change 0 ( 0%) - largest zero change 2.9482379e-05
Clp0000I Optimal - objective value 31.30099
Clp0000I Optimal - objective value 31.30099
Coin0511I After Postsolve, objective 31.30099, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7250832 - largest nonzero change 1.4654255e-05 ( 0.0011547075%) - largest zero change 2.8232193e-05
Clp0000I Optimal - objective value 116.28134
Clp0000I Optimal - objective value 116.28134
Clp0000I Optimal - objective value 116.28134
Coin0511I After Postsolve, objective 116.28134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.2813378 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 60 columns (60 integer (60 of which binary)) and 598 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.479%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.5139
Cbc0038I Pass   1: suminf.    1.94465 (15) obj. -79.1354 iterations 24
Cbc0038I Pass   2: suminf.    1.94465 (15) obj. -79.1354 iterations 1
Cbc0038I Pass   3: suminf.    0.33218 (5) obj. -50.5832 iterations 10
Cbc0038I Solution found of -21.665
Cbc0038I Rounding solution of -29.2079 is better than previous of -21.665

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -29.2079 to -29.828 (0.02 seconds)
Cbc0038I Round again with cutoff of -36.441
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.94465 (15) obj. -79.1354 iterations 0
Cbc0038I Pass   5: suminf.    1.94465 (15) obj. -79.1354 iterations 1
Cbc0038I Pass   6: suminf.    0.35494 (1) obj. -36.441 iterations 19
Cbc0038I Pass   7: suminf.    0.02000 (1) obj. -44.1132 iterations 1
Cbc0038I Pass   8: suminf.    1.53671 (11) obj. -36.441 iterations 17
Cbc0038I Pass   9: suminf.    0.47641 (2) obj. -36.441 iterations 7
Cbc0038I Pass  10: suminf.    0.36480 (2) obj. -37.5414 iterations 2
Cbc0038I Pass  11: suminf.    0.17413 (6) obj. -36.441 iterations 3
Cbc0038I Pass  12: suminf.    0.17413 (6) obj. -36.441 iterations 0
Cbc0038I Pass  13: suminf.    0.38965 (2) obj. -36.441 iterations 6
Cbc0038I Pass  14: suminf.    0.35984 (2) obj. -37.1239 iterations 1
Cbc0038I Pass  15: suminf.    0.39079 (2) obj. -36.441 iterations 1
Cbc0038I Pass  16: suminf.    0.73946 (5) obj. -36.441 iterations 14
Cbc0038I Pass  17: suminf.    0.30569 (4) obj. -36.441 iterations 3
Cbc0038I Pass  18: suminf.    0.32600 (3) obj. -36.441 iterations 5
Cbc0038I Pass  19: suminf.    0.29845 (3) obj. -36.441 iterations 2
Cbc0038I Pass  20: suminf.    0.42667 (2) obj. -39.255 iterations 2
Cbc0038I Pass  21: suminf.    0.30382 (2) obj. -36.441 iterations 1
Cbc0038I Pass  22: suminf.    0.59184 (2) obj. -36.441 iterations 3
Cbc0038I Pass  23: suminf.    0.59184 (2) obj. -36.441 iterations 1
Cbc0038I Pass  24: suminf.    0.44138 (2) obj. -41.2133 iterations 1
Cbc0038I Pass  25: suminf.    0.25000 (1) obj. -37.0493 iterations 1
Cbc0038I Pass  26: suminf.    2.55144 (8) obj. -37.1293 iterations 15
Cbc0038I Pass  27: suminf.    1.54580 (6) obj. -36.441 iterations 6
Cbc0038I Pass  28: suminf.    1.18283 (5) obj. -46.184 iterations 1
Cbc0038I Pass  29: suminf.    0.61918 (3) obj. -36.441 iterations 6
Cbc0038I Pass  30: suminf.    0.40940 (2) obj. -38.2238 iterations 3
Cbc0038I Pass  31: suminf.    0.40940 (2) obj. -38.2238 iterations 0
Cbc0038I Pass  32: suminf.    0.83411 (2) obj. -36.441 iterations 3
Cbc0038I Pass  33: suminf.    0.72524 (2) obj. -37.9227 iterations 1
Cbc0038I Rounding solution of -41.4157 is better than previous of -29.828

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 31 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -41.4157 to -45.0884 (0.05 seconds)
Cbc0038I Round again with cutoff of -55.2622
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.94465 (15) obj. -79.1354 iterations 0
Cbc0038I Pass  34: suminf.    1.94465 (15) obj. -79.1354 iterations 1
Cbc0038I Pass  35: suminf.    0.73940 (7) obj. -55.2622 iterations 20
Cbc0038I Pass  36: suminf.    0.59234 (6) obj. -61.1054 iterations 1
Cbc0038I Pass  37: suminf.    0.60691 (3) obj. -55.2622 iterations 9
Cbc0038I Pass  38: suminf.    0.60691 (3) obj. -55.2622 iterations 3
Cbc0038I Pass  39: suminf.    0.46807 (3) obj. -55.2622 iterations 5
Cbc0038I Pass  40: suminf.    0.46807 (3) obj. -55.2622 iterations 1
Cbc0038I Pass  41: suminf.    0.60691 (3) obj. -55.2622 iterations 3
Cbc0038I Pass  42: suminf.    3.93015 (15) obj. -55.2622 iterations 23
Cbc0038I Pass  43: suminf.    2.16246 (11) obj. -55.2622 iterations 8
Cbc0038I Pass  44: suminf.    1.81938 (11) obj. -55.2622 iterations 2
Cbc0038I Pass  45: suminf.    2.61212 (7) obj. -55.2622 iterations 13
Cbc0038I Pass  46: suminf.    2.18481 (7) obj. -55.2622 iterations 2
Cbc0038I Pass  47: suminf.    2.09662 (6) obj. -55.2622 iterations 2
Cbc0038I Pass  48: suminf.    2.01932 (6) obj. -55.2622 iterations 6
Cbc0038I Pass  49: suminf.    2.01932 (6) obj. -55.2622 iterations 0
Cbc0038I Pass  50: suminf.    1.20941 (5) obj. -55.2622 iterations 11
Cbc0038I Pass  51: suminf.    1.20941 (5) obj. -55.2622 iterations 0
Cbc0038I Pass  52: suminf.    1.99340 (6) obj. -55.2622 iterations 3
Cbc0038I Pass  53: suminf.    1.96663 (7) obj. -55.2622 iterations 1
Cbc0038I Pass  54: suminf.    1.39964 (4) obj. -55.2622 iterations 9
Cbc0038I Pass  55: suminf.    1.20941 (5) obj. -55.2622 iterations 3
Cbc0038I Pass  56: suminf.    1.20941 (5) obj. -55.2622 iterations 0
Cbc0038I Pass  57: suminf.    1.99340 (6) obj. -55.2622 iterations 3
Cbc0038I Pass  58: suminf.    1.96663 (7) obj. -55.2622 iterations 1
Cbc0038I Pass  59: suminf.    1.39964 (4) obj. -55.2622 iterations 9
Cbc0038I Pass  60: suminf.    1.20941 (5) obj. -55.2622 iterations 3
Cbc0038I Pass  61: suminf.    1.20941 (5) obj. -55.2622 iterations 0
Cbc0038I Pass  62: suminf.    1.99340 (6) obj. -55.2622 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 34 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -45.0884 - took 0.05 seconds
Cbc0012I Integer solution of -45.08841 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 53 rows 60 columns, reduced to 4 rows 7 columns
Cbc0031I 24 added rows had average density of 27.5
Cbc0013I At root node, 24 cuts changed objective from -95.95711 to -54.583836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4056 row cuts average 2.9 elements, 7 column cuts (7 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1305 row cuts average 48.7 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.069 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 94 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 560 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 413 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.704 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45.08841 best solution, best possible -54.583836 (1.73 seconds)
Cbc0010I After 13 nodes, 6 on tree, -45.08841 best solution, best possible -54.583836 (2.51 seconds)
Cbc0010I After 33 nodes, 8 on tree, -45.08841 best solution, best possible -54.583836 (3.24 seconds)
Cbc0038I Full problem 53 rows 60 columns, reduced to 15 rows 23 columns
Cbc0012I Integer solution of -45.17585 found by RINS after 3789 iterations and 42 nodes (3.52 seconds)
Cbc0038I Full problem 77 rows 60 columns, reduced to 53 rows 52 columns
Cbc0044I Reduced cost fixing - 53 rows, 52 columns - restarting search
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.38779
Cbc0038I Pass   1: suminf.    2.50224 (13) obj. -51.0655 iterations 11
Cbc0038I Pass   2: suminf.    2.50224 (13) obj. -51.0655 iterations 0
Cbc0038I Pass   3: suminf.    0.55895 (2) obj. -45.1759 iterations 14
Cbc0038I Pass   4: suminf.    0.55895 (2) obj. -45.1759 iterations 0
Cbc0038I Pass   5: suminf.    0.55674 (2) obj. -45.1759 iterations 1
Cbc0038I Pass   6: suminf.    1.30429 (5) obj. -45.1759 iterations 9
Cbc0038I Pass   7: suminf.    0.51056 (3) obj. -45.1759 iterations 7
Cbc0038I Pass   8: suminf.    0.62893 (2) obj. -45.1759 iterations 2
Cbc0038I Pass   9: suminf.    0.62893 (2) obj. -45.1759 iterations 0
Cbc0038I Pass  10: suminf.    0.51875 (2) obj. -49.6967 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 52 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (3.74 seconds)
Cbc0038I Full problem 54 rows 52 columns, reduced to 54 rows 52 columns
Cbc0038I After 3.91 seconds - Feasibility pump exiting with objective of -45.0884 - took 0.17 seconds
Cbc0031I 26 added rows had average density of 25.230769
Cbc0013I At root node, 26 cuts changed objective from -75.479497 to -54.554954 in 48 passes
Cbc0014I Cut generator 0 (Probing) - 1171 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 207 row cuts average 49.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 92 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 223 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.334 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 137 row cuts average 21.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -54.554954 (4.69 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible -54.554954 (5.71 seconds)
Cbc0010I After 50 nodes, 5 on tree, 1e+50 best solution, best possible -54.554954 (6.72 seconds)
Cbc0010I After 80 nodes, 9 on tree, 1e+50 best solution, best possible -54.554954 (7.73 seconds)
Cbc0001I Search completed - best objective 1e+50, took 4099 iterations and 108 nodes (8.57 seconds)
Cbc0032I Strong branching done 1144 times (9873 iterations), fathomed 10 nodes and fixed 35 variables
Cbc0035I Maximum depth 10, 122 variables fixed on reduced cost
Cbc0038I Probing was tried 345 times and created 2269 cuts of which 0 were active after adding rounds of cuts (0.050 seconds)
Cbc0038I Gomory was tried 320 times and created 346 cuts of which 0 were active after adding rounds of cuts (0.048 seconds)
Cbc0038I Knapsack was tried 48 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I Clique was tried 320 times and created 543 cuts of which 0 were active after adding rounds of cuts (0.015 seconds)
Cbc0038I OddWheel was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I MixedIntegerRounding2 was tried 320 times and created 672 cuts of which 0 were active after adding rounds of cuts (0.040 seconds)
Cbc0038I FlowCover was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 320 times and created 566 cuts of which 0 were active after adding rounds of cuts (0.037 seconds)
Cbc0038I ZeroHalf was tried 320 times and created 193 cuts of which 0 were active after adding rounds of cuts (2.018 seconds)
Cbc0038I Stored from first was tried 320 times and created 260 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -45.17585, took 7996 iterations and 158 nodes (8.57 seconds)
Cbc0032I Strong branching done 596 times (4271 iterations), fathomed 9 nodes and fixed 16 variables
Cbc0035I Maximum depth 12, 64 variables fixed on reduced cost
Total time (CPU seconds):       5.17   (Wallclock seconds):       8.58

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 172 (-23) elements
Clp1000I sum of infeasibilities 2.09657e-05 - average 3.67819e-07, 0 fixed columns
Coin0506I Presolve 57 (0) rows, 33 (0) columns and 172 (0) elements
Clp0014I Perturbing problem by 0.001% of 3.0170835 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Coin0511I After Postsolve, objective 105.31511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Clp0000I Optimal - objective value 105.31511
Coin0511I After Postsolve, objective 105.31511, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 105.3151052 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 172 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.488%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 8.20036
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -15.3818 iterations 25
Cbc0038I Solution found of -15.3818
Cbc0038I Relaxing continuous gives -15.3818
Cbc0038I Rounding solution of -32.9598 is better than previous of -15.3818

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -32.9598 to -45.1758 (0.05 seconds)
Cbc0038I Round again with cutoff of -51.1899
Cbc0038I Pass   2: suminf.    1.44998 (7) obj. -51.1899 iterations 5
Cbc0038I Pass   3: suminf.    0.77108 (3) obj. -51.1899 iterations 7
Cbc0038I Pass   4: suminf.    0.77108 (3) obj. -51.1899 iterations 0
Cbc0038I Pass   5: suminf.    1.34771 (4) obj. -51.1899 iterations 6
Cbc0038I Pass   6: suminf.    1.30751 (4) obj. -51.1899 iterations 3
Cbc0038I Pass   7: suminf.    1.19525 (5) obj. -51.1899 iterations 2
Cbc0038I Pass   8: suminf.    1.26981 (4) obj. -51.1899 iterations 6
Cbc0038I Pass   9: suminf.    0.74499 (4) obj. -51.1899 iterations 1
Cbc0038I Pass  10: suminf.    0.67894 (3) obj. -51.1899 iterations 1
Cbc0038I Pass  11: suminf.    1.04610 (4) obj. -51.1899 iterations 4
Cbc0038I Pass  12: suminf.    0.99778 (3) obj. -51.1899 iterations 1
Cbc0038I Pass  13: suminf.    0.67894 (3) obj. -51.1899 iterations 4
Cbc0038I Pass  14: suminf.    1.35892 (5) obj. -51.1899 iterations 11
Cbc0038I Pass  15: suminf.    0.88566 (5) obj. -51.1899 iterations 7
Cbc0038I Pass  16: suminf.    0.57221 (3) obj. -51.1899 iterations 5
Cbc0038I Pass  17: suminf.    0.47923 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  18: suminf.    0.76198 (3) obj. -51.1899 iterations 6
Cbc0038I Pass  19: suminf.    0.57328 (2) obj. -51.1899 iterations 3
Cbc0038I Pass  20: suminf.    0.57328 (2) obj. -51.1899 iterations 0
Cbc0038I Pass  21: suminf.    0.89538 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  22: suminf.    0.77058 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  23: suminf.    1.04086 (5) obj. -51.1899 iterations 4
Cbc0038I Pass  24: suminf.    1.04086 (5) obj. -51.1899 iterations 1
Cbc0038I Pass  25: suminf.    0.57328 (2) obj. -51.1899 iterations 6
Cbc0038I Pass  26: suminf.    0.57328 (2) obj. -51.1899 iterations 0
Cbc0038I Pass  27: suminf.    0.89538 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  28: suminf.    0.77058 (2) obj. -51.1899 iterations 1
Cbc0038I Pass  29: suminf.    2.05685 (10) obj. -51.1899 iterations 10
Cbc0038I Pass  30: suminf.    1.65881 (5) obj. -51.1899 iterations 6
Cbc0038I Pass  31: suminf.    0.56636 (3) obj. -51.1899 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 45 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -45.1758 - took 0.07 seconds
Cbc0012I Integer solution of -45.17585 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 37 rows 24 columns
Cbc0031I 13 added rows had average density of 28.846154
Cbc0013I At root node, 13 cuts changed objective from -105.31511 to -74.585706 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2785 row cuts average 3.5 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1248 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 25 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0038I Full problem 57 rows 33 columns, reduced to 10 rows 13 columns
Cbc0038I Full problem 57 rows 33 columns, reduced to 4 rows 5 columns
Cbc0001I Search completed - best objective -45.17585, took 4938 iterations and 100 nodes (0.51 seconds)
Cbc0032I Strong branching done 740 times (6387 iterations), fathomed 12 nodes and fixed 19 variables
Cbc0035I Maximum depth 10, 134 variables fixed on reduced cost
Total time (CPU seconds):       0.48   (Wallclock seconds):       0.51

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 53 (-16) rows, 60 (-7) columns and 594 (-130) elements
Clp1000I sum of infeasibilities 4.54029e-08 - average 8.56659e-10, 35 fixed columns
Coin0506I Presolve 20 (-33) rows, 25 (-35) columns and 84 (-510) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.0503792 - largest nonzero change 0 ( 0%) - largest zero change 2.9482379e-05
Clp0000I Optimal - objective value 31.30099
Clp0000I Optimal - objective value 31.30099
Coin0511I After Postsolve, objective 31.30099, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7250832 - largest nonzero change 1.4654255e-05 ( 0.0011547075%) - largest zero change 2.8232193e-05
Clp0000I Optimal - objective value 116.28134
Clp0000I Optimal - objective value 116.28134
Clp0000I Optimal - objective value 116.28134
Coin0511I After Postsolve, objective 116.28134, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 116.2813378 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 27 strengthened rows, 0 substitutions
Cgl0004I processed model has 53 rows, 60 columns (60 integer (60 of which binary)) and 598 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.479%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 4.5139
Cbc0038I Pass   1: suminf.    1.94465 (15) obj. -79.1354 iterations 24
Cbc0038I Pass   2: suminf.    1.94465 (15) obj. -79.1354 iterations 1
Cbc0038I Pass   3: suminf.    0.33218 (5) obj. -50.5832 iterations 10
Cbc0038I Solution found of -21.665
Cbc0038I Rounding solution of -29.2079 is better than previous of -21.665

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -29.2079 to -29.828 (0.01 seconds)
Cbc0038I Round again with cutoff of -36.441
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    1.94465 (15) obj. -79.1354 iterations 0
Cbc0038I Pass   5: suminf.    1.94465 (15) obj. -79.1354 iterations 1
Cbc0038I Pass   6: suminf.    0.35494 (1) obj. -36.441 iterations 19
Cbc0038I Pass   7: suminf.    0.02000 (1) obj. -44.1132 iterations 1
Cbc0038I Pass   8: suminf.    1.53671 (11) obj. -36.441 iterations 17
Cbc0038I Pass   9: suminf.    0.47641 (2) obj. -36.441 iterations 7
Cbc0038I Pass  10: suminf.    0.36480 (2) obj. -37.5414 iterations 2
Cbc0038I Pass  11: suminf.    0.17413 (6) obj. -36.441 iterations 3
Cbc0038I Pass  12: suminf.    0.17413 (6) obj. -36.441 iterations 0
Cbc0038I Pass  13: suminf.    0.38965 (2) obj. -36.441 iterations 6
Cbc0038I Pass  14: suminf.    0.35984 (2) obj. -37.1239 iterations 1
Cbc0038I Pass  15: suminf.    0.39079 (2) obj. -36.441 iterations 1
Cbc0038I Pass  16: suminf.    0.73946 (5) obj. -36.441 iterations 14
Cbc0038I Pass  17: suminf.    0.30569 (4) obj. -36.441 iterations 3
Cbc0038I Pass  18: suminf.    0.32600 (3) obj. -36.441 iterations 5
Cbc0038I Pass  19: suminf.    0.29845 (3) obj. -36.441 iterations 2
Cbc0038I Pass  20: suminf.    0.42667 (2) obj. -39.255 iterations 2
Cbc0038I Pass  21: suminf.    0.30382 (2) obj. -36.441 iterations 1
Cbc0038I Pass  22: suminf.    0.59184 (2) obj. -36.441 iterations 3
Cbc0038I Pass  23: suminf.    0.59184 (2) obj. -36.441 iterations 1
Cbc0038I Pass  24: suminf.    0.44138 (2) obj. -41.2133 iterations 1
Cbc0038I Pass  25: suminf.    0.25000 (1) obj. -37.0493 iterations 1
Cbc0038I Pass  26: suminf.    2.55144 (8) obj. -37.1293 iterations 15
Cbc0038I Pass  27: suminf.    1.54580 (6) obj. -36.441 iterations 6
Cbc0038I Pass  28: suminf.    1.18283 (5) obj. -46.184 iterations 1
Cbc0038I Pass  29: suminf.    0.61918 (3) obj. -36.441 iterations 6
Cbc0038I Pass  30: suminf.    0.40940 (2) obj. -38.2238 iterations 3
Cbc0038I Pass  31: suminf.    0.40940 (2) obj. -38.2238 iterations 0
Cbc0038I Pass  32: suminf.    0.83411 (2) obj. -36.441 iterations 3
Cbc0038I Pass  33: suminf.    0.72524 (2) obj. -37.9227 iterations 1
Cbc0038I Rounding solution of -41.4157 is better than previous of -29.828

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 31 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -41.4157 to -45.0884 (0.04 seconds)
Cbc0038I Round again with cutoff of -55.2622
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.94465 (15) obj. -79.1354 iterations 0
Cbc0038I Pass  34: suminf.    1.94465 (15) obj. -79.1354 iterations 1
Cbc0038I Pass  35: suminf.    0.73940 (7) obj. -55.2622 iterations 20
Cbc0038I Pass  36: suminf.    0.59234 (6) obj. -61.1054 iterations 1
Cbc0038I Pass  37: suminf.    0.60691 (3) obj. -55.2622 iterations 9
Cbc0038I Pass  38: suminf.    0.60691 (3) obj. -55.2622 iterations 3
Cbc0038I Pass  39: suminf.    0.46807 (3) obj. -55.2622 iterations 5
Cbc0038I Pass  40: suminf.    0.46807 (3) obj. -55.2622 iterations 1
Cbc0038I Pass  41: suminf.    0.60691 (3) obj. -55.2622 iterations 3
Cbc0038I Pass  42: suminf.    3.93015 (15) obj. -55.2622 iterations 23
Cbc0038I Pass  43: suminf.    2.16246 (11) obj. -55.2622 iterations 8
Cbc0038I Pass  44: suminf.    1.81938 (11) obj. -55.2622 iterations 2
Cbc0038I Pass  45: suminf.    2.61212 (7) obj. -55.2622 iterations 13
Cbc0038I Pass  46: suminf.    2.18481 (7) obj. -55.2622 iterations 2
Cbc0038I Pass  47: suminf.    2.09662 (6) obj. -55.2622 iterations 2
Cbc0038I Pass  48: suminf.    2.01932 (6) obj. -55.2622 iterations 6
Cbc0038I Pass  49: suminf.    2.01932 (6) obj. -55.2622 iterations 0
Cbc0038I Pass  50: suminf.    1.20941 (5) obj. -55.2622 iterations 11
Cbc0038I Pass  51: suminf.    1.20941 (5) obj. -55.2622 iterations 0
Cbc0038I Pass  52: suminf.    1.99340 (6) obj. -55.2622 iterations 3
Cbc0038I Pass  53: suminf.    1.96663 (7) obj. -55.2622 iterations 1
Cbc0038I Pass  54: suminf.    1.39964 (4) obj. -55.2622 iterations 9
Cbc0038I Pass  55: suminf.    1.20941 (5) obj. -55.2622 iterations 3
Cbc0038I Pass  56: suminf.    1.20941 (5) obj. -55.2622 iterations 0
Cbc0038I Pass  57: suminf.    1.99340 (6) obj. -55.2622 iterations 3
Cbc0038I Pass  58: suminf.    1.96663 (7) obj. -55.2622 iterations 1
Cbc0038I Pass  59: suminf.    1.39964 (4) obj. -55.2622 iterations 9
Cbc0038I Pass  60: suminf.    1.20941 (5) obj. -55.2622 iterations 3
Cbc0038I Pass  61: suminf.    1.20941 (5) obj. -55.2622 iterations 0
Cbc0038I Pass  62: suminf.    1.99340 (6) obj. -55.2622 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 60 columns, reduced to 34 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -45.0884 - took 0.05 seconds
Cbc0012I Integer solution of -45.08841 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 53 rows 60 columns, reduced to 4 rows 7 columns
Cbc0031I 24 added rows had average density of 27.5
Cbc0013I At root node, 24 cuts changed objective from -95.95711 to -54.583836 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4056 row cuts average 2.9 elements, 7 column cuts (7 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1305 row cuts average 48.7 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 94 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 560 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 413 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 25.2 elements, 0 column cuts (0 active)  in 0.709 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -45.08841 best solution, best possible -54.583836 (1.69 seconds)
Cbc0010I After 11 nodes, 7 on tree, -45.08841 best solution, best possible -54.583836 (2.40 seconds)
Cbc0010I After 26 nodes, 9 on tree, -45.08841 best solution, best possible -54.583836 (3.13 seconds)
Cbc0038I Full problem 53 rows 60 columns, reduced to 15 rows 23 columns
Cbc0012I Integer solution of -45.17585 found by RINS after 3789 iterations and 42 nodes (3.66 seconds)
Cbc0038I Full problem 77 rows 60 columns, reduced to 53 rows 52 columns
Cbc0044I Reduced cost fixing - 53 rows, 52 columns - restarting search
Cbc0038I Initial state - 22 integers unsatisfied sum - 5.38779
Cbc0038I Pass   1: suminf.    2.50224 (13) obj. -51.0655 iterations 11
Cbc0038I Pass   2: suminf.    2.50224 (13) obj. -51.0655 iterations 0
Cbc0038I Pass   3: suminf.    0.55895 (2) obj. -45.1759 iterations 14
Cbc0038I Pass   4: suminf.    0.55895 (2) obj. -45.1759 iterations 0
Cbc0038I Pass   5: suminf.    0.55674 (2) obj. -45.1759 iterations 1
Cbc0038I Pass   6: suminf.    1.30429 (5) obj. -45.1759 iterations 9
Cbc0038I Pass   7: suminf.    0.51056 (3) obj. -45.1759 iterations 7
Cbc0038I Pass   8: suminf.    0.62893 (2) obj. -45.1759 iterations 2
Cbc0038I Pass   9: suminf.    0.62893 (2) obj. -45.1759 iterations 0
Cbc0038I Pass  10: suminf.    0.51875 (2) obj. -49.6967 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 53 rows 52 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (3.89 seconds)
Cbc0038I Full problem 54 rows 52 columns, reduced to 54 rows 52 columns
Cbc0038I After 4.10 seconds - Feasibility pump exiting with objective of -45.0884 - took 0.20 seconds
Cbc0031I 26 added rows had average density of 25.230769
Cbc0013I At root node, 26 cuts changed objective from -75.479497 to -54.554954 in 48 passes
Cbc0014I Cut generator 0 (Probing) - 1171 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 207 row cuts average 49.8 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 92 row cuts average 2.4 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 223 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 164 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 41 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.334 seconds - new frequency is 1
Cbc0014I Cut generator 10 (Stored from first) - 137 row cuts average 21.2 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -54.554954 (4.86 seconds)
Cbc0010I After 18 nodes, 5 on tree, 1e+50 best solution, best possible -54.554954 (5.91 seconds)
Cbc0010I After 47 nodes, 6 on tree, 1e+50 best solution, best possible -54.554954 (6.97 seconds)
Cbc0010I After 74 nodes, 6 on tree, 1e+50 best solution, best possible -54.554954 (7.98 seconds)
Cbc0010I After 105 nodes, 2 on tree, 1e+50 best solution, best possible -54.554954 (9.05 seconds)
Cbc0001I Search completed - best objective 1e+50, took 4099 iterations and 108 nodes (9.10 seconds)
Cbc0032I Strong branching done 1144 times (9873 iterations), fathomed 10 nodes and fixed 35 variables
Cbc0035I Maximum depth 10, 122 variables fixed on reduced cost
Cbc0038I Probing was tried 345 times and created 2269 cuts of which 0 were active after adding rounds of cuts (0.052 seconds)
Cbc0038I Gomory was tried 320 times and created 346 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
Cbc0038I Knapsack was tried 48 times and created 24 cuts of which 0 were active after adding rounds of cuts (0.023 seconds)
Cbc0038I Clique was tried 320 times and created 543 cuts of which 0 were active after adding rounds of cuts (0.016 seconds)
Cbc0038I OddWheel was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.008 seconds)
Cbc0038I MixedIntegerRounding2 was tried 320 times and created 672 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Cbc0038I FlowCover was tried 48 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.001 seconds)
Cbc0038I TwoMirCuts was tried 320 times and created 566 cuts of which 0 were active after adding rounds of cuts (0.038 seconds)
Cbc0038I ZeroHalf was tried 320 times and created 193 cuts of which 0 were active after adding rounds of cuts (2.201 seconds)
Cbc0038I Stored from first was tried 320 times and created 260 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
Cbc0001I Search completed - best objective -45.17585, took 7996 iterations and 158 nodes (9.10 seconds)
Cbc0032I Strong branching done 596 times (4271 iterations), fathomed 9 nodes and fixed 16 variables
Cbc0035I Maximum depth 12, 64 variables fixed on reduced cost
Total time (CPU seconds):       5.52   (Wallclock seconds):       9.11

