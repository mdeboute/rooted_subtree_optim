Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.24574e-05 - average 3.21647e-07, 11 fixed columns
Coin0506I Presolve 110 (-22) rows, 65 (-11) columns and 342 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 2.792273 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 46.828572
Clp0000I Optimal - objective value 46.828572
Coin0511I After Postsolve, objective 46.828572, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.828572
Clp0000I Optimal - objective value 46.828572
Clp0000I Optimal - objective value 46.828572
Coin0511I After Postsolve, objective 46.828572, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.82857194 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 10.8171
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.6545 iterations 58
Cbc0038I Solution found of 10.6545
Cbc0038I Relaxing continuous gives 10.6545
Cbc0038I Rounding solution of -3.53361 is better than previous of 10.6545

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 60 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -3.53361 to -17 (0.04 seconds)
Cbc0038I Round again with cutoff of -19.9829
Cbc0038I Pass   2: suminf.    2.94877 (9) obj. -19.9829 iterations 16
Cbc0038I Pass   3: suminf.    2.31130 (7) obj. -19.9829 iterations 2
Cbc0038I Pass   4: suminf.    2.31130 (7) obj. -19.9829 iterations 0
Cbc0038I Pass   5: suminf.    0.28251 (3) obj. -19.9829 iterations 13
Cbc0038I Pass   6: suminf.    0.27867 (2) obj. -19.9829 iterations 1
Cbc0038I Pass   7: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass   8: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass   9: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  10: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  11: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I Pass  12: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass  13: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  14: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  15: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  16: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I Pass  17: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass  18: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  19: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  20: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  21: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I Pass  22: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass  23: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  24: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  25: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  26: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I Pass  27: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass  28: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  29: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  30: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  31: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 60 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -17 to -18.2486 (0.08 seconds)
Cbc0038I Round again with cutoff of -25.3521
Cbc0038I Pass  31: suminf.    3.93606 (13) obj. -25.3521 iterations 5
Cbc0038I Pass  32: suminf.    3.32074 (12) obj. -25.3521 iterations 1
Cbc0038I Pass  33: suminf.    1.59467 (6) obj. -25.3521 iterations 12
Cbc0038I Pass  34: suminf.    0.81782 (3) obj. -25.3521 iterations 3
Cbc0038I Pass  35: suminf.    0.79591 (4) obj. -25.3521 iterations 6
Cbc0038I Pass  36: suminf.    0.69126 (3) obj. -25.3521 iterations 1
Cbc0038I Pass  37: suminf.    0.91023 (4) obj. -25.3521 iterations 6
Cbc0038I Pass  38: suminf.    3.62355 (12) obj. -25.3521 iterations 28
Cbc0038I Pass  39: suminf.    2.47620 (10) obj. -25.3521 iterations 11
Cbc0038I Pass  40: suminf.    1.43521 (8) obj. -25.3521 iterations 2
Cbc0038I Pass  41: suminf.    1.43521 (8) obj. -25.3521 iterations 0
Cbc0038I Pass  42: suminf.    3.49744 (9) obj. -25.3521 iterations 16
Cbc0038I Pass  43: suminf.    2.38740 (7) obj. -25.3521 iterations 3
Cbc0038I Pass  44: suminf.    0.98168 (4) obj. -25.3521 iterations 4
Cbc0038I Pass  45: suminf.    0.67607 (5) obj. -25.3521 iterations 5
Cbc0038I Pass  46: suminf.    0.67607 (5) obj. -25.3521 iterations 2
Cbc0038I Pass  47: suminf.    1.72661 (6) obj. -25.3521 iterations 6
Cbc0038I Pass  48: suminf.    3.52186 (14) obj. -25.3521 iterations 24
Cbc0038I Pass  49: suminf.    2.61434 (13) obj. -25.3521 iterations 8
Cbc0038I Pass  50: suminf.    2.35918 (8) obj. -25.3521 iterations 21
Cbc0038I Pass  51: suminf.    1.19166 (7) obj. -25.3521 iterations 3
Cbc0038I Pass  52: suminf.    1.19166 (7) obj. -25.3521 iterations 2
Cbc0038I Pass  53: suminf.    2.15567 (6) obj. -25.3521 iterations 10
Cbc0038I Pass  54: suminf.    0.95164 (4) obj. -25.3521 iterations 2
Cbc0038I Pass  55: suminf.    0.95164 (4) obj. -25.3521 iterations 0
Cbc0038I Pass  56: suminf.    1.08750 (5) obj. -25.3521 iterations 9
Cbc0038I Pass  57: suminf.    1.04640 (5) obj. -25.3521 iterations 3
Cbc0038I Pass  58: suminf.    2.15567 (6) obj. -25.3521 iterations 6
Cbc0038I Pass  59: suminf.    0.95164 (4) obj. -25.3521 iterations 2
Cbc0038I Pass  60: suminf.    0.95164 (4) obj. -25.3521 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 72 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -18.2486 - took 0.11 seconds
Cbc0012I Integer solution of -18.24856 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 60 rows 37 columns
Cbc0031I 21 added rows had average density of 51.952381
Cbc0013I At root node, 21 cuts changed objective from -46.828572 to -36.718362 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9221 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1242 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.071 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 205 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.24856 best solution, best possible -36.718362 (0.74 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 26 rows 19 columns
Cbc0001I Search completed - best objective -18.24855999999999, took 8693 iterations and 76 nodes (1.07 seconds)
Cbc0032I Strong branching done 926 times (12185 iterations), fathomed 9 nodes and fixed 34 variables
Cbc0035I Maximum depth 23, 288 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-60) rows, 112 (-40) columns and 1711 (-1592) elements
Clp1000I sum of infeasibilities 9.49636e-08 - average 1.01025e-09, 27 fixed columns
Coin0506I Presolve 70 (-24) rows, 85 (-27) columns and 985 (-726) elements
Clp0006I 0  Obj 58.4579 Dual inf 8.9873262 (84)
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.5776133 - largest nonzero change 2.4445689e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 70.11951
Clp0000I Optimal - objective value 70.11951
Coin0511I After Postsolve, objective 70.11951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.11951
Clp0000I Optimal - objective value 70.11951
Clp0000I Optimal - objective value 70.11951
Clp0000I Optimal - objective value 70.11951
Coin0511I After Postsolve, objective 70.11951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.11950992 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 94 rows, 112 columns (112 integer (112 of which binary)) and 1723 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.282%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.4495
Cbc0038I Pass   1: suminf.    2.81815 (26) obj. -32.2732 iterations 14
Cbc0038I Pass   2: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass   3: suminf.    0.42851 (5) obj. -2.84786 iterations 21
Cbc0038I Solution found of 3.55969
Cbc0038I Rounding solution of -7.92399 is better than previous of 3.55969

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 112 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -7.92399 to -13.9531 (0.04 seconds)
Cbc0038I Round again with cutoff of -18.0169
Cbc0038I Pass   4: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass   5: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass   6: suminf.    1.03864 (6) obj. -18.0169 iterations 26
Cbc0038I Pass   7: suminf.    0.99952 (5) obj. -26.3162 iterations 1
Cbc0038I Pass   8: suminf.    0.22262 (1) obj. -18.0169 iterations 5
Cbc0038I Pass   9: suminf.    0.10667 (1) obj. -19.2924 iterations 1
Cbc0038I Pass  10: suminf.    2.40833 (14) obj. -18.0169 iterations 26
Cbc0038I Pass  11: suminf.    2.10890 (12) obj. -18.0169 iterations 7
Cbc0038I Pass  12: suminf.    1.06220 (4) obj. -18.0169 iterations 18
Cbc0038I Pass  13: suminf.    0.27333 (2) obj. -22.6257 iterations 8
Cbc0038I Pass  14: suminf.    0.22262 (1) obj. -18.0169 iterations 2
Cbc0038I Pass  15: suminf.    0.10667 (1) obj. -19.2924 iterations 1
Cbc0038I Pass  16: suminf.    2.83664 (13) obj. -18.0169 iterations 30
Cbc0038I Pass  17: suminf.    2.24650 (11) obj. -18.0169 iterations 6
Cbc0038I Pass  18: suminf.    0.71698 (5) obj. -18.0169 iterations 15
Cbc0038I Pass  19: suminf.    0.60920 (5) obj. -18.0169 iterations 4
Cbc0038I Pass  20: suminf.    0.87331 (4) obj. -18.0169 iterations 7
Cbc0038I Pass  21: suminf.    0.87331 (4) obj. -18.0169 iterations 0
Cbc0038I Pass  22: suminf.    1.14889 (4) obj. -18.0169 iterations 6
Cbc0038I Pass  23: suminf.    1.14889 (4) obj. -18.0169 iterations 0
Cbc0038I Pass  24: suminf.    0.45538 (3) obj. -18.0169 iterations 4
Cbc0038I Pass  25: suminf.    0.30305 (3) obj. -18.0169 iterations 3
Cbc0038I Pass  26: suminf.    0.31117 (4) obj. -18.0169 iterations 6
Cbc0038I Pass  27: suminf.    0.31117 (4) obj. -18.0169 iterations 0
Cbc0038I Pass  28: suminf.    0.62354 (3) obj. -18.0169 iterations 9
Cbc0038I Pass  29: suminf.    0.50095 (3) obj. -18.897 iterations 3
Cbc0038I Pass  30: suminf.    0.50989 (3) obj. -18.0169 iterations 4
Cbc0038I Pass  31: suminf.    0.50989 (3) obj. -18.0169 iterations 0
Cbc0038I Pass  32: suminf.    0.62354 (3) obj. -18.0169 iterations 8
Cbc0038I Pass  33: suminf.    1.86158 (12) obj. -18.0169 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 112 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -13.9531 to -16.4439 (0.07 seconds)
Cbc0038I Round again with cutoff of -25.3315
Cbc0038I Pass  33: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass  34: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass  35: suminf.    1.00417 (6) obj. -25.3315 iterations 26
Cbc0038I Pass  36: suminf.    0.99952 (5) obj. -26.3162 iterations 1
Cbc0038I Pass  37: suminf.    0.79147 (4) obj. -25.3315 iterations 11
Cbc0038I Pass  38: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  39: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  40: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  41: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  42: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I Pass  43: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  44: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  45: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  46: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  47: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I Pass  48: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  49: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  50: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  51: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  52: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I Pass  53: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  54: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  55: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  56: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  57: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I Pass  58: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  59: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  60: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  61: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  62: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -16.4439 - took 0.04 seconds
Cbc0012I Integer solution of -16.44392 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 94 rows 112 columns, reduced to 4 rows 6 columns
Cbc0031I 44 added rows had average density of 34.590909
Cbc0013I At root node, 44 cuts changed objective from -54.589998 to -22.231984 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9597 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1028 row cuts average 101.7 elements, 0 column cuts (0 active)  in 0.121 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 539 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1047 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 334 row cuts average 56.9 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 31.6 elements, 0 column cuts (0 active)  in 0.669 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.44392 best solution, best possible -22.231984 (2.26 seconds)
Cbc0012I Integer solution of -16.6522 found by rounding after 4247 iterations and 12 nodes (2.62 seconds)
Cbc0012I Integer solution of -17.30676 found by rounding after 4253 iterations and 13 nodes (2.62 seconds)
Cbc0012I Integer solution of -18.24856 found by rounding after 4318 iterations and 21 nodes (2.64 seconds)
Cbc0001I Search completed - best objective -18.24855999999999, took 5084 iterations and 52 nodes (2.69 seconds)
Cbc0032I Strong branching done 534 times (8418 iterations), fathomed 6 nodes and fixed 7 variables
Cbc0035I Maximum depth 17, 173 variables fixed on reduced cost
Total time (CPU seconds):       1.97   (Wallclock seconds):       2.71

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 132 (-23) rows, 76 (-2) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.24574e-05 - average 3.21647e-07, 11 fixed columns
Coin0506I Presolve 110 (-22) rows, 65 (-11) columns and 342 (-66) elements
Clp0029I End of values pass after 65 iterations
Clp0014I Perturbing problem by 0.001% of 2.792273 - largest nonzero change 0 ( 0%) - largest zero change 2.6625829e-05
Clp0000I Optimal - objective value 46.828572
Clp0000I Optimal - objective value 46.828572
Coin0511I After Postsolve, objective 46.828572, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 46.828572
Clp0000I Optimal - objective value 46.828572
Clp0000I Optimal - objective value 46.828572
Coin0511I After Postsolve, objective 46.828572, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.82857194 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 132 rows, 76 columns (75 integer (75 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.118%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 10.8171
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 10.6545 iterations 58
Cbc0038I Solution found of 10.6545
Cbc0038I Relaxing continuous gives 10.6545
Cbc0038I Rounding solution of -3.53361 is better than previous of 10.6545

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 60 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -3.53361 to -17 (0.05 seconds)
Cbc0038I Round again with cutoff of -19.9829
Cbc0038I Pass   2: suminf.    2.94877 (9) obj. -19.9829 iterations 16
Cbc0038I Pass   3: suminf.    2.31130 (7) obj. -19.9829 iterations 2
Cbc0038I Pass   4: suminf.    2.31130 (7) obj. -19.9829 iterations 0
Cbc0038I Pass   5: suminf.    0.28251 (3) obj. -19.9829 iterations 13
Cbc0038I Pass   6: suminf.    0.27867 (2) obj. -19.9829 iterations 1
Cbc0038I Pass   7: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass   8: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass   9: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  10: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  11: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I Pass  12: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass  13: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  14: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  15: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  16: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I Pass  17: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass  18: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  19: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  20: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  21: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I Pass  22: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass  23: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  24: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  25: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  26: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I Pass  27: suminf.    0.99972 (4) obj. -19.9829 iterations 5
Cbc0038I Pass  28: suminf.    0.89506 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  29: suminf.    1.11546 (4) obj. -19.9829 iterations 4
Cbc0038I Pass  30: suminf.    0.95050 (3) obj. -19.9829 iterations 1
Cbc0038I Pass  31: suminf.    0.27867 (2) obj. -19.9829 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 60 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -17 to -18.2486 (0.08 seconds)
Cbc0038I Round again with cutoff of -25.3521
Cbc0038I Pass  31: suminf.    3.93606 (13) obj. -25.3521 iterations 5
Cbc0038I Pass  32: suminf.    3.32074 (12) obj. -25.3521 iterations 1
Cbc0038I Pass  33: suminf.    1.59467 (6) obj. -25.3521 iterations 12
Cbc0038I Pass  34: suminf.    0.81782 (3) obj. -25.3521 iterations 3
Cbc0038I Pass  35: suminf.    0.79591 (4) obj. -25.3521 iterations 6
Cbc0038I Pass  36: suminf.    0.69126 (3) obj. -25.3521 iterations 1
Cbc0038I Pass  37: suminf.    0.91023 (4) obj. -25.3521 iterations 6
Cbc0038I Pass  38: suminf.    3.62355 (12) obj. -25.3521 iterations 28
Cbc0038I Pass  39: suminf.    2.47620 (10) obj. -25.3521 iterations 11
Cbc0038I Pass  40: suminf.    1.43521 (8) obj. -25.3521 iterations 2
Cbc0038I Pass  41: suminf.    1.43521 (8) obj. -25.3521 iterations 0
Cbc0038I Pass  42: suminf.    3.49744 (9) obj. -25.3521 iterations 16
Cbc0038I Pass  43: suminf.    2.38740 (7) obj. -25.3521 iterations 3
Cbc0038I Pass  44: suminf.    0.98168 (4) obj. -25.3521 iterations 4
Cbc0038I Pass  45: suminf.    0.67607 (5) obj. -25.3521 iterations 5
Cbc0038I Pass  46: suminf.    0.67607 (5) obj. -25.3521 iterations 2
Cbc0038I Pass  47: suminf.    1.72661 (6) obj. -25.3521 iterations 6
Cbc0038I Pass  48: suminf.    3.52186 (14) obj. -25.3521 iterations 24
Cbc0038I Pass  49: suminf.    2.61434 (13) obj. -25.3521 iterations 8
Cbc0038I Pass  50: suminf.    2.35918 (8) obj. -25.3521 iterations 21
Cbc0038I Pass  51: suminf.    1.19166 (7) obj. -25.3521 iterations 3
Cbc0038I Pass  52: suminf.    1.19166 (7) obj. -25.3521 iterations 2
Cbc0038I Pass  53: suminf.    2.15567 (6) obj. -25.3521 iterations 10
Cbc0038I Pass  54: suminf.    0.95164 (4) obj. -25.3521 iterations 2
Cbc0038I Pass  55: suminf.    0.95164 (4) obj. -25.3521 iterations 0
Cbc0038I Pass  56: suminf.    1.08750 (5) obj. -25.3521 iterations 9
Cbc0038I Pass  57: suminf.    1.04640 (5) obj. -25.3521 iterations 3
Cbc0038I Pass  58: suminf.    2.15567 (6) obj. -25.3521 iterations 6
Cbc0038I Pass  59: suminf.    0.95164 (4) obj. -25.3521 iterations 2
Cbc0038I Pass  60: suminf.    0.95164 (4) obj. -25.3521 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 76 columns, reduced to 72 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -18.2486 - took 0.10 seconds
Cbc0012I Integer solution of -18.24856 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 60 rows 37 columns
Cbc0031I 21 added rows had average density of 51.952381
Cbc0013I At root node, 21 cuts changed objective from -46.828572 to -36.718362 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9221 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.068 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1242 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 48 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 205 row cuts average 75.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.24856 best solution, best possible -36.718362 (0.73 seconds)
Cbc0038I Full problem 132 rows 76 columns, reduced to 26 rows 19 columns
Cbc0001I Search completed - best objective -18.24855999999999, took 8693 iterations and 76 nodes (1.07 seconds)
Cbc0032I Strong branching done 926 times (12185 iterations), fathomed 9 nodes and fixed 34 variables
Cbc0035I Maximum depth 23, 288 variables fixed on reduced cost
Total time (CPU seconds):       1.04   (Wallclock seconds):       1.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-61) rows, 112 (-41) columns and 1711 (-1593) elements
Clp1000I sum of infeasibilities 9.49636e-08 - average 1.01025e-09, 27 fixed columns
Coin0506I Presolve 70 (-24) rows, 85 (-27) columns and 985 (-726) elements
Clp0006I 0  Obj 58.4579 Dual inf 8.9873262 (84)
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 1.5776133 - largest nonzero change 2.4445689e-05 ( 0.0016580886%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 70.11951
Clp0000I Optimal - objective value 70.11951
Coin0511I After Postsolve, objective 70.11951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.11951
Clp0000I Optimal - objective value 70.11951
Clp0000I Optimal - objective value 70.11951
Clp0000I Optimal - objective value 70.11951
Coin0511I After Postsolve, objective 70.11951, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.11950992 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 94 rows, 112 columns (112 integer (112 of which binary)) and 1723 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.282%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.4495
Cbc0038I Pass   1: suminf.    2.81815 (26) obj. -32.2732 iterations 14
Cbc0038I Pass   2: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass   3: suminf.    0.42851 (5) obj. -2.84786 iterations 21
Cbc0038I Solution found of 3.55969
Cbc0038I Rounding solution of -7.92399 is better than previous of 3.55969

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 112 columns, reduced to 9 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -7.92399 to -13.9531 (0.03 seconds)
Cbc0038I Round again with cutoff of -18.0169
Cbc0038I Pass   4: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass   5: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass   6: suminf.    1.03864 (6) obj. -18.0169 iterations 26
Cbc0038I Pass   7: suminf.    0.99952 (5) obj. -26.3162 iterations 1
Cbc0038I Pass   8: suminf.    0.22262 (1) obj. -18.0169 iterations 5
Cbc0038I Pass   9: suminf.    0.10667 (1) obj. -19.2924 iterations 1
Cbc0038I Pass  10: suminf.    2.40833 (14) obj. -18.0169 iterations 26
Cbc0038I Pass  11: suminf.    2.10890 (12) obj. -18.0169 iterations 7
Cbc0038I Pass  12: suminf.    1.06220 (4) obj. -18.0169 iterations 18
Cbc0038I Pass  13: suminf.    0.27333 (2) obj. -22.6257 iterations 8
Cbc0038I Pass  14: suminf.    0.22262 (1) obj. -18.0169 iterations 2
Cbc0038I Pass  15: suminf.    0.10667 (1) obj. -19.2924 iterations 1
Cbc0038I Pass  16: suminf.    2.83664 (13) obj. -18.0169 iterations 30
Cbc0038I Pass  17: suminf.    2.24650 (11) obj. -18.0169 iterations 6
Cbc0038I Pass  18: suminf.    0.71698 (5) obj. -18.0169 iterations 15
Cbc0038I Pass  19: suminf.    0.60920 (5) obj. -18.0169 iterations 4
Cbc0038I Pass  20: suminf.    0.87331 (4) obj. -18.0169 iterations 7
Cbc0038I Pass  21: suminf.    0.87331 (4) obj. -18.0169 iterations 0
Cbc0038I Pass  22: suminf.    1.14889 (4) obj. -18.0169 iterations 6
Cbc0038I Pass  23: suminf.    1.14889 (4) obj. -18.0169 iterations 0
Cbc0038I Pass  24: suminf.    0.45538 (3) obj. -18.0169 iterations 4
Cbc0038I Pass  25: suminf.    0.30305 (3) obj. -18.0169 iterations 3
Cbc0038I Pass  26: suminf.    0.31117 (4) obj. -18.0169 iterations 6
Cbc0038I Pass  27: suminf.    0.31117 (4) obj. -18.0169 iterations 0
Cbc0038I Pass  28: suminf.    0.62354 (3) obj. -18.0169 iterations 9
Cbc0038I Pass  29: suminf.    0.50095 (3) obj. -18.897 iterations 3
Cbc0038I Pass  30: suminf.    0.50989 (3) obj. -18.0169 iterations 4
Cbc0038I Pass  31: suminf.    0.50989 (3) obj. -18.0169 iterations 0
Cbc0038I Pass  32: suminf.    0.62354 (3) obj. -18.0169 iterations 8
Cbc0038I Pass  33: suminf.    1.86158 (12) obj. -18.0169 iterations 26
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 112 columns, reduced to 15 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -13.9531 to -16.4439 (0.06 seconds)
Cbc0038I Round again with cutoff of -25.3315
Cbc0038I Pass  33: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass  34: suminf.    2.81815 (26) obj. -32.2732 iterations 0
Cbc0038I Pass  35: suminf.    1.00417 (6) obj. -25.3315 iterations 26
Cbc0038I Pass  36: suminf.    0.99952 (5) obj. -26.3162 iterations 1
Cbc0038I Pass  37: suminf.    0.79147 (4) obj. -25.3315 iterations 11
Cbc0038I Pass  38: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  39: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  40: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  41: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  42: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I Pass  43: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  44: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  45: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  46: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  47: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I Pass  48: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  49: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  50: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  51: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  52: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I Pass  53: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  54: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  55: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  56: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  57: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I Pass  58: suminf.    0.79147 (4) obj. -25.3315 iterations 1
Cbc0038I Pass  59: suminf.    1.17615 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  60: suminf.    0.70257 (4) obj. -27.4431 iterations 2
Cbc0038I Pass  61: suminf.    0.37180 (4) obj. -25.3315 iterations 4
Cbc0038I Pass  62: suminf.    0.79147 (4) obj. -25.3315 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 74 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -16.4439 - took 0.04 seconds
Cbc0012I Integer solution of -16.44392 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 94 rows 112 columns, reduced to 4 rows 6 columns
Cbc0031I 44 added rows had average density of 34.590909
Cbc0013I At root node, 44 cuts changed objective from -54.589998 to -22.231984 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9597 row cuts average 5.7 elements, 1 column cuts (1 active)  in 0.123 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1028 row cuts average 101.7 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 539 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1047 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 334 row cuts average 56.9 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 31.6 elements, 0 column cuts (0 active)  in 0.667 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -16.44392 best solution, best possible -22.231984 (2.23 seconds)
Cbc0012I Integer solution of -16.6522 found by rounding after 4247 iterations and 12 nodes (2.59 seconds)
Cbc0012I Integer solution of -17.30676 found by rounding after 4253 iterations and 13 nodes (2.59 seconds)
Cbc0012I Integer solution of -18.24856 found by rounding after 4318 iterations and 21 nodes (2.61 seconds)
Cbc0001I Search completed - best objective -18.24855999999999, took 5084 iterations and 52 nodes (2.66 seconds)
Cbc0032I Strong branching done 534 times (8418 iterations), fathomed 6 nodes and fixed 7 variables
Cbc0035I Maximum depth 17, 173 variables fixed on reduced cost
Total time (CPU seconds):       1.96   (Wallclock seconds):       2.67

