Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 20 (-5) columns and 100 (-35) elements
Clp1000I sum of infeasibilities 1.18215e-05 - average 3.47691e-07, 1 fixed columns
Coin0506I Presolve 31 (-3) rows, 19 (-1) columns and 92 (-8) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 113.20551
Clp0000I Optimal - objective value 113.20551
Coin0511I After Postsolve, objective 113.20551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 113.20551
Clp0000I Optimal - objective value 113.20551
Clp0000I Optimal - objective value 113.20551
Coin0511I After Postsolve, objective 113.20551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.2055129 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 20 columns (19 integer (19 of which binary)) and 100 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.48789
Cbc0038I Pass   1: suminf.    0.77549 (2) obj. -22.9081 iterations 15
Cbc0038I Pass   2: suminf.    0.77549 (2) obj. -22.9081 iterations 0
Cbc0038I Solution found of -1.25398
Cbc0038I Relaxing continuous gives -1.25398
Cbc0038I Rounding solution of -3.73969 is better than previous of -1.25398

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -3.73969 to -54.6868 (0.01 seconds)
Cbc0038I Round again with cutoff of -60.3309
Cbc0038I Pass   3: suminf.    0.90660 (4) obj. -60.3309 iterations 3
Cbc0038I Pass   4: suminf.    0.90660 (4) obj. -60.3309 iterations 0
Cbc0038I Pass   5: suminf.    0.85939 (3) obj. -60.3309 iterations 6
Cbc0038I Pass   6: suminf.    0.48074 (2) obj. -60.3309 iterations 3
Cbc0038I Pass   7: suminf.    0.59555 (3) obj. -60.3309 iterations 3
Cbc0038I Pass   8: suminf.    0.28307 (2) obj. -60.3309 iterations 2
Cbc0038I Pass   9: suminf.    1.02485 (4) obj. -60.3309 iterations 4
Cbc0038I Pass  10: suminf.    0.97112 (3) obj. -60.3309 iterations 4
Cbc0038I Pass  11: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  12: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I Pass  13: suminf.    0.60622 (3) obj. -60.3309 iterations 1
Cbc0038I Pass  14: suminf.    1.14457 (4) obj. -60.3309 iterations 5
Cbc0038I Pass  15: suminf.    0.97112 (3) obj. -60.3309 iterations 2
Cbc0038I Pass  16: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  17: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I Pass  18: suminf.    0.60622 (3) obj. -60.3309 iterations 1
Cbc0038I Pass  19: suminf.    1.14457 (4) obj. -60.3309 iterations 5
Cbc0038I Pass  20: suminf.    0.97112 (3) obj. -60.3309 iterations 2
Cbc0038I Pass  21: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  22: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I Pass  23: suminf.    0.60622 (3) obj. -60.3309 iterations 1
Cbc0038I Pass  24: suminf.    1.14457 (4) obj. -60.3309 iterations 5
Cbc0038I Pass  25: suminf.    0.97112 (3) obj. -60.3309 iterations 2
Cbc0038I Pass  26: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  27: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I Pass  28: suminf.    0.60622 (3) obj. -60.3309 iterations 1
Cbc0038I Pass  29: suminf.    1.14457 (4) obj. -60.3309 iterations 5
Cbc0038I Pass  30: suminf.    0.97112 (3) obj. -60.3309 iterations 2
Cbc0038I Pass  31: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  32: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -54.6868 - took 0.02 seconds
Cbc0012I Integer solution of -54.68681 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 20 columns, reduced to 18 rows 14 columns
Cbc0031I 11 added rows had average density of 10.727273
Cbc0013I At root node, 11 cuts changed objective from -111.12679 to -58.831798 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 173 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 470 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 58 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 213 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -54.68681000000001, took 1966 iterations and 24 nodes (0.18 seconds)
Cbc0032I Strong branching done 174 times (802 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-9) rows, 43 (-3) columns and 338 (-50) elements
Clp1000I sum of infeasibilities 0 - average 0, 24 fixed columns
Coin0506I Presolve 2 (-37) rows, 2 (-41) columns and 4 (-334) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 363.56703
Clp0000I Optimal - objective value 363.56703
Coin0511I After Postsolve, objective 363.56703, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0152792 - largest nonzero change 1.2016471e-05 ( 0.0012016471%) - largest zero change 1.9498817e-05
Clp0000I Optimal - objective value 370.01398
Clp0000I Optimal - objective value 370.01398
Clp0000I Optimal - objective value 370.01398
Coin0511I After Postsolve, objective 370.01398, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 370.013981 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 41 columns (41 integer (41 of which binary)) and 307 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.905%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.89221
Cbc0038I Pass   1: suminf.    1.25195 (7) obj. 3.38741 iterations 14
Cbc0038I Pass   2: suminf.    1.25195 (7) obj. 3.38741 iterations 1
Cbc0038I Solution found of 46.4465
Cbc0038I Rounding solution of 39.8835 is better than previous of 46.4465

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 14 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 39.8835 to -160.89 (0.01 seconds)
Cbc0038I Round again with cutoff of -169.444
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    4.87013 (17) obj. -169.444 iterations 4
Cbc0038I Pass   4: suminf.    4.49929 (18) obj. -169.444 iterations 1
Cbc0038I Pass   5: suminf.    4.49929 (18) obj. -169.444 iterations 0
Cbc0038I Pass   6: suminf.    0.50810 (2) obj. -169.444 iterations 23
Cbc0038I Pass   7: suminf.    0.50810 (2) obj. -169.444 iterations 0
Cbc0038I Pass   8: suminf.    0.56215 (2) obj. -177.746 iterations 4
Cbc0038I Pass   9: suminf.    0.92554 (2) obj. -169.444 iterations 1
Cbc0038I Pass  10: suminf.    1.61214 (5) obj. -169.444 iterations 8
Cbc0038I Pass  11: suminf.    1.61214 (5) obj. -169.444 iterations 1
Cbc0038I Pass  12: suminf.    0.90241 (2) obj. -169.444 iterations 5
Cbc0038I Pass  13: suminf.    0.31478 (2) obj. -169.444 iterations 1
Cbc0038I Pass  14: suminf.    1.53882 (6) obj. -169.444 iterations 9
Cbc0038I Pass  15: suminf.    1.53882 (6) obj. -169.444 iterations 0
Cbc0038I Pass  16: suminf.    0.54429 (3) obj. -169.444 iterations 8
Cbc0038I Pass  17: suminf.    0.54429 (3) obj. -169.444 iterations 0
Cbc0038I Pass  18: suminf.    1.36476 (3) obj. -169.444 iterations 1
Cbc0038I Pass  19: suminf.    0.71893 (2) obj. -169.444 iterations 1
Cbc0038I Pass  20: suminf.    1.36124 (4) obj. -169.444 iterations 5
Cbc0038I Pass  21: suminf.    1.15833 (3) obj. -170.463 iterations 3
Cbc0038I Pass  22: suminf.    1.26325 (3) obj. -169.444 iterations 2
Cbc0038I Pass  23: suminf.    1.24009 (3) obj. -169.444 iterations 1
Cbc0038I Pass  24: suminf.    0.68506 (2) obj. -169.444 iterations 2
Cbc0038I Pass  25: suminf.    0.68506 (2) obj. -169.444 iterations 0
Cbc0038I Pass  26: suminf.    0.80604 (2) obj. -169.444 iterations 1
Cbc0038I Pass  27: suminf.    2.29821 (8) obj. -169.444 iterations 8
Cbc0038I Pass  28: suminf.    2.21718 (7) obj. -169.444 iterations 1
Cbc0038I Pass  29: suminf.    0.63675 (2) obj. -169.444 iterations 7
Cbc0038I Pass  30: suminf.    0.80761 (2) obj. -169.444 iterations 1
Cbc0038I Pass  31: suminf.    2.04333 (5) obj. -169.444 iterations 8
Cbc0038I Pass  32: suminf.    2.04333 (5) obj. -169.444 iterations 1
Cbc0038I Rounding solution of -163.716 is better than previous of -160.89

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 41 columns, reduced to 2 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -184.841
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    5.06671 (16) obj. -216.201 iterations 1
Cbc0038I Pass  33: suminf.    5.06671 (16) obj. -216.201 iterations 0
Cbc0038I Pass  34: suminf.    0.95632 (3) obj. -184.841 iterations 25
Cbc0038I Pass  35: suminf.    0.95632 (3) obj. -184.841 iterations 0
Cbc0038I Pass  36: suminf.    1.11542 (3) obj. -184.841 iterations 1
Cbc0038I Pass  37: suminf.    0.93306 (3) obj. -189.07 iterations 1
Cbc0038I Pass  38: suminf.    0.95632 (3) obj. -184.841 iterations 2
Cbc0038I Pass  39: suminf.    2.98331 (8) obj. -184.841 iterations 17
Cbc0038I Pass  40: suminf.    2.44516 (7) obj. -184.841 iterations 3
Cbc0038I Pass  41: suminf.    0.90221 (3) obj. -184.841 iterations 8
Cbc0038I Pass  42: suminf.    0.90186 (3) obj. -184.841 iterations 1
Cbc0038I Pass  43: suminf.    1.61378 (4) obj. -188.977 iterations 3
Cbc0038I Pass  44: suminf.    1.09111 (3) obj. -184.841 iterations 3
Cbc0038I Pass  45: suminf.    1.20838 (3) obj. -184.841 iterations 1
Cbc0038I Pass  46: suminf.    1.09327 (3) obj. -184.841 iterations 1
Cbc0038I Pass  47: suminf.    1.09111 (3) obj. -184.841 iterations 2
Cbc0038I Pass  48: suminf.    2.23900 (6) obj. -184.841 iterations 12
Cbc0038I Pass  49: suminf.    2.23900 (6) obj. -184.841 iterations 1
Cbc0038I Pass  50: suminf.    0.52942 (2) obj. -184.841 iterations 4
Cbc0038I Pass  51: suminf.    0.47778 (2) obj. -184.841 iterations 1
Cbc0038I Pass  52: suminf.    1.70895 (5) obj. -184.841 iterations 14
Cbc0038I Pass  53: suminf.    1.13758 (3) obj. -184.841 iterations 3
Cbc0038I Pass  54: suminf.    0.90221 (3) obj. -184.841 iterations 3
Cbc0038I Pass  55: suminf.    0.90186 (3) obj. -184.841 iterations 1
Cbc0038I Pass  56: suminf.    1.51324 (4) obj. -190.371 iterations 3
Cbc0038I Pass  57: suminf.    1.20604 (4) obj. -184.841 iterations 2
Cbc0038I Pass  58: suminf.    1.20838 (3) obj. -184.841 iterations 2
Cbc0038I Pass  59: suminf.    1.01565 (3) obj. -184.841 iterations 1
Cbc0038I Pass  60: suminf.    0.98570 (3) obj. -184.841 iterations 2
Cbc0038I Pass  61: suminf.    0.98570 (3) obj. -184.841 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -163.716 - took 0.02 seconds
Cbc0012I Integer solution of -163.71644 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 37 rows 41 columns, reduced to 5 rows 8 columns
Cbc0031I 9 added rows had average density of 16.777778
Cbc0013I At root node, 9 cuts changed objective from -175.59848 to -171.42736 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6 row cuts average 8.7 elements, 1 column cuts (1 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 225 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 57 row cuts average 9.2 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 37 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 14.7 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -165.42859 found by DiveCoefficient after 606 iterations and 2 nodes (0.13 seconds)
Cbc0004I Integer solution of -168.42439 found after 714 iterations and 6 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -168.42439, took 1056 iterations and 20 nodes (0.19 seconds)
Cbc0032I Strong branching done 178 times (742 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 37 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 20 (-5) columns and 100 (-35) elements
Clp1000I sum of infeasibilities 1.18215e-05 - average 3.47691e-07, 1 fixed columns
Coin0506I Presolve 31 (-3) rows, 19 (-1) columns and 92 (-8) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 113.20551
Clp0000I Optimal - objective value 113.20551
Coin0511I After Postsolve, objective 113.20551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 113.20551
Clp0000I Optimal - objective value 113.20551
Clp0000I Optimal - objective value 113.20551
Coin0511I After Postsolve, objective 113.20551, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 113.2055129 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 20 columns (19 integer (19 of which binary)) and 100 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.902%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 3.48789
Cbc0038I Pass   1: suminf.    0.77549 (2) obj. -22.9081 iterations 15
Cbc0038I Pass   2: suminf.    0.77549 (2) obj. -22.9081 iterations 0
Cbc0038I Solution found of -1.25398
Cbc0038I Relaxing continuous gives -1.25398
Cbc0038I Rounding solution of -3.73969 is better than previous of -1.25398

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -3.73969 to -54.6868 (0.01 seconds)
Cbc0038I Round again with cutoff of -60.3309
Cbc0038I Pass   3: suminf.    0.90660 (4) obj. -60.3309 iterations 3
Cbc0038I Pass   4: suminf.    0.90660 (4) obj. -60.3309 iterations 0
Cbc0038I Pass   5: suminf.    0.85939 (3) obj. -60.3309 iterations 6
Cbc0038I Pass   6: suminf.    0.48074 (2) obj. -60.3309 iterations 3
Cbc0038I Pass   7: suminf.    0.59555 (3) obj. -60.3309 iterations 3
Cbc0038I Pass   8: suminf.    0.28307 (2) obj. -60.3309 iterations 2
Cbc0038I Pass   9: suminf.    1.02485 (4) obj. -60.3309 iterations 4
Cbc0038I Pass  10: suminf.    0.97112 (3) obj. -60.3309 iterations 4
Cbc0038I Pass  11: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  12: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I Pass  13: suminf.    0.60622 (3) obj. -60.3309 iterations 1
Cbc0038I Pass  14: suminf.    1.14457 (4) obj. -60.3309 iterations 5
Cbc0038I Pass  15: suminf.    0.97112 (3) obj. -60.3309 iterations 2
Cbc0038I Pass  16: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  17: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I Pass  18: suminf.    0.60622 (3) obj. -60.3309 iterations 1
Cbc0038I Pass  19: suminf.    1.14457 (4) obj. -60.3309 iterations 5
Cbc0038I Pass  20: suminf.    0.97112 (3) obj. -60.3309 iterations 2
Cbc0038I Pass  21: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  22: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I Pass  23: suminf.    0.60622 (3) obj. -60.3309 iterations 1
Cbc0038I Pass  24: suminf.    1.14457 (4) obj. -60.3309 iterations 5
Cbc0038I Pass  25: suminf.    0.97112 (3) obj. -60.3309 iterations 2
Cbc0038I Pass  26: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  27: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I Pass  28: suminf.    0.60622 (3) obj. -60.3309 iterations 1
Cbc0038I Pass  29: suminf.    1.14457 (4) obj. -60.3309 iterations 5
Cbc0038I Pass  30: suminf.    0.97112 (3) obj. -60.3309 iterations 2
Cbc0038I Pass  31: suminf.    0.86894 (3) obj. -60.3309 iterations 3
Cbc0038I Pass  32: suminf.    0.92469 (4) obj. -60.3309 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 20 columns, reduced to 18 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -54.6868 - took 0.02 seconds
Cbc0012I Integer solution of -54.68681 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 34 rows 20 columns, reduced to 18 rows 14 columns
Cbc0031I 11 added rows had average density of 10.727273
Cbc0013I At root node, 11 cuts changed objective from -111.12679 to -58.831798 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 173 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 470 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 58 row cuts average 9.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 213 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -54.68681000000001, took 1966 iterations and 24 nodes (0.18 seconds)
Cbc0032I Strong branching done 174 times (802 iterations), fathomed 0 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.17   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 40 (-7) columns and 286 (-103) elements
Clp1000I sum of infeasibilities 8.21115e-10 - average 2.28087e-11, 14 fixed columns
Coin0506I Presolve 19 (-17) rows, 26 (-14) columns and 122 (-164) elements
Clp0029I End of values pass after 26 iterations
Clp0014I Perturbing problem by 0.001% of 2.7890379 - largest nonzero change 1.3553927e-05 ( 0.00063440183%) - largest zero change 1.6773289e-05
Clp0000I Optimal - objective value 121.95065
Clp0000I Optimal - objective value 121.95065
Coin0511I After Postsolve, objective 121.95065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.9333347 - largest nonzero change 1.574217e-05 ( 0.001574217%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 143.46335
Clp0000I Optimal - objective value 143.46335
Clp0000I Optimal - objective value 143.46335
Coin0511I After Postsolve, objective 143.46335, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 143.4633453 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 296 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.901%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.0079
Cbc0038I Pass   1: suminf.    2.06732 (9) obj. 10.0416 iterations 13
Cbc0038I Pass   2: suminf.    2.06732 (9) obj. 10.0416 iterations 0
Cbc0038I Solution found of 40.956
Cbc0038I Rounding solution of 20.1592 is better than previous of 40.956

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound improved solution from 20.1592 to -49.2054 (0.01 seconds)
Cbc0038I Round again with cutoff of -56.4314
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.10778 (10) obj. -77.0253 iterations 0
Cbc0038I Pass   4: suminf.    3.10778 (10) obj. -77.0253 iterations 0
Cbc0038I Pass   5: suminf.    0.24074 (1) obj. -56.4314 iterations 11
Cbc0038I Pass   6: suminf.    0.47368 (1) obj. -70.1754 iterations 1
Cbc0038I Pass   7: suminf.    2.92863 (11) obj. -82.832 iterations 11
Cbc0038I Pass   8: suminf.    1.26667 (4) obj. -64.272 iterations 7
Cbc0038I Pass   9: suminf.    0.12248 (1) obj. -56.4314 iterations 5
Cbc0038I Pass  10: suminf.    0.45435 (2) obj. -70.2795 iterations 2
Cbc0038I Pass  11: suminf.    2.39054 (7) obj. -56.4314 iterations 7
Cbc0038I Pass  12: suminf.    2.34469 (6) obj. -56.4314 iterations 1
Cbc0038I Pass  13: suminf.    0.73047 (2) obj. -56.4314 iterations 6
Cbc0038I Pass  14: suminf.    0.73047 (2) obj. -56.4314 iterations 0
Cbc0038I Pass  15: suminf.    1.59841 (5) obj. -56.4314 iterations 6
Cbc0038I Pass  16: suminf.    1.59841 (5) obj. -56.4314 iterations 0
Cbc0038I Pass  17: suminf.    0.36842 (1) obj. -66.465 iterations 4
Cbc0038I Pass  18: suminf.    0.19836 (1) obj. -56.4314 iterations 1
Cbc0038I Pass  19: suminf.    2.51942 (6) obj. -56.4314 iterations 7
Cbc0038I Pass  20: suminf.    2.17479 (5) obj. -56.4314 iterations 1
Cbc0038I Pass  21: suminf.    0.36842 (1) obj. -62.2041 iterations 4
Cbc0038I Pass  22: suminf.    0.27058 (1) obj. -56.4314 iterations 1
Cbc0038I Pass  23: suminf.    2.11820 (6) obj. -56.4314 iterations 11
Cbc0038I Pass  24: suminf.    1.31466 (4) obj. -56.4314 iterations 3
Cbc0038I Pass  25: suminf.    0.42105 (1) obj. -62.0829 iterations 3
Cbc0038I Pass  26: suminf.    0.32526 (1) obj. -56.4314 iterations 1
Cbc0038I Pass  27: suminf.    3.06343 (8) obj. -56.4314 iterations 16
Cbc0038I Pass  28: suminf.    2.90134 (8) obj. -56.4314 iterations 3
Cbc0038I Pass  29: suminf.    1.09155 (3) obj. -56.4314 iterations 7
Cbc0038I Pass  30: suminf.    1.09155 (3) obj. -56.4314 iterations 1
Cbc0038I Pass  31: suminf.    1.33216 (3) obj. -59.3188 iterations 2
Cbc0038I Pass  32: suminf.    2.83672 (8) obj. -56.4314 iterations 12
Cbc0038I Rounding solution of -53.2054 is better than previous of -49.2054

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 10 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -53.2054 to -54.6868 (0.02 seconds)
Cbc0038I Round again with cutoff of -69.4382
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.10778 (10) obj. -77.0253 iterations 0
Cbc0038I Pass  33: suminf.    3.10778 (10) obj. -77.0253 iterations 0
Cbc0038I Pass  34: suminf.    0.46119 (1) obj. -69.4382 iterations 11
Cbc0038I Pass  35: suminf.    0.47368 (1) obj. -70.1754 iterations 1
Cbc0038I Pass  36: suminf.    1.49189 (5) obj. -69.4382 iterations 5
Cbc0038I Pass  37: suminf.    1.40680 (4) obj. -69.4382 iterations 1
Cbc0038I Pass  38: suminf.    0.74354 (3) obj. -69.4382 iterations 1
Cbc0038I Pass  39: suminf.    0.74154 (2) obj. -69.4382 iterations 4
Cbc0038I Pass  40: suminf.    0.74154 (2) obj. -69.4382 iterations 0
Cbc0038I Pass  41: suminf.    0.87368 (2) obj. -75.4167 iterations 1
Cbc0038I Pass  42: suminf.    0.77235 (2) obj. -69.4382 iterations 1
Cbc0038I Pass  43: suminf.    1.67000 (5) obj. -69.4382 iterations 5
Cbc0038I Pass  44: suminf.    1.58252 (4) obj. -69.4382 iterations 1
Cbc0038I Pass  45: suminf.    0.87547 (3) obj. -69.4382 iterations 4
Cbc0038I Pass  46: suminf.    0.87547 (3) obj. -69.4382 iterations 0
Cbc0038I Pass  47: suminf.    1.24154 (3) obj. -69.4382 iterations 2
Cbc0038I Pass  48: suminf.    1.24154 (3) obj. -69.4382 iterations 0
Cbc0038I Pass  49: suminf.    0.87547 (3) obj. -69.4382 iterations 1
Cbc0038I Pass  50: suminf.    2.87738 (9) obj. -69.4382 iterations 15
Cbc0038I Pass  51: suminf.    1.63802 (5) obj. -69.4382 iterations 7
Cbc0038I Pass  52: suminf.    1.32295 (4) obj. -69.4382 iterations 1
Cbc0038I Pass  53: suminf.    0.94634 (4) obj. -69.4382 iterations 5
Cbc0038I Pass  54: suminf.    0.94634 (4) obj. -69.4382 iterations 0
Cbc0038I Pass  55: suminf.    1.64149 (4) obj. -69.4382 iterations 1
Cbc0038I Pass  56: suminf.    0.73591 (4) obj. -69.4382 iterations 3
Cbc0038I Pass  57: suminf.    0.94634 (4) obj. -69.4382 iterations 1
Cbc0038I Pass  58: suminf.    2.25188 (6) obj. -69.4382 iterations 7
Cbc0038I Pass  59: suminf.    1.50077 (5) obj. -69.4382 iterations 5
Cbc0038I Pass  60: suminf.    1.36867 (4) obj. -69.4382 iterations 2
Cbc0038I Pass  61: suminf.    1.02103 (4) obj. -69.4382 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -54.6868 - took 0.02 seconds
Cbc0012I Integer solution of -54.68681 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 0 rows 0 columns
Cbc0031I 11 added rows had average density of 12.272727
Cbc0013I At root node, 11 cuts changed objective from -71.820402 to -58.344201 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 173 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 484 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 109 row cuts average 11.2 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 160 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 219 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 13 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.760 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -54.68681 best solution, best possible -58.344201 (1.49 seconds)
Cbc0001I Search completed - best objective -54.68681000000001, took 1628 iterations and 14 nodes (1.56 seconds)
Cbc0032I Strong branching done 166 times (925 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 4, 16 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.56

