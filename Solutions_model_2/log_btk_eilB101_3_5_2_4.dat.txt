Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 99 (-4) columns and 540 (-63) elements
Clp1000I sum of infeasibilities 8.19148e-05 - average 4.68085e-07, 21 fixed columns
Coin0506I Presolve 130 (-45) rows, 76 (-23) columns and 404 (-136) elements
Clp0029I End of values pass after 76 iterations
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Coin0511I After Postsolve, objective 33.955232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Coin0511I After Postsolve, objective 33.955232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.95523161 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 175 rows, 99 columns (98 integer (98 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.19941
Cbc0038I Solution found of 7.3593
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 0 to -7.38457 (0.03 seconds)
Cbc0038I Round again with cutoff of -10.005
Cbc0038I Pass   1: suminf.    1.79055 (29) obj. -10.005 iterations 60
Cbc0038I Pass   2: suminf.    2.48993 (8) obj. -10.005 iterations 41
Cbc0038I Pass   3: suminf.    1.77625 (6) obj. -10.005 iterations 5
Cbc0038I Pass   4: suminf.    1.32349 (5) obj. -10.005 iterations 2
Cbc0038I Pass   5: suminf.    1.30008 (4) obj. -10.005 iterations 5
Cbc0038I Pass   6: suminf.    1.09023 (4) obj. -10.005 iterations 3
Cbc0038I Pass   7: suminf.    0.84016 (6) obj. -10.005 iterations 2
Cbc0038I Pass   8: suminf.    1.52343 (6) obj. -10.005 iterations 13
Cbc0038I Pass   9: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  10: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  11: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  12: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  13: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  14: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  15: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  16: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  17: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  18: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  19: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  20: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  21: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  22: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  23: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  24: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  25: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  26: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  27: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  28: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  29: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  30: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 81 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -7.38457 to -7.97597 (0.07 seconds)
Cbc0038I Round again with cutoff of -14.7216
Cbc0038I Pass  30: suminf.    2.63465 (29) obj. -14.7216 iterations 0
Cbc0038I Pass  31: suminf.    2.64848 (10) obj. -14.7216 iterations 28
Cbc0038I Pass  32: suminf.    1.49148 (7) obj. -14.7216 iterations 13
Cbc0038I Pass  33: suminf.    2.04073 (8) obj. -14.7216 iterations 9
Cbc0038I Pass  34: suminf.    1.54602 (5) obj. -14.7216 iterations 7
Cbc0038I Pass  35: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  36: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  37: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  38: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  39: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  40: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  41: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  42: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  43: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  44: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  45: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  46: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  47: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  48: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  49: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  50: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  51: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  52: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  53: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  54: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  55: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  56: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  57: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  58: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  59: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 81 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -7.97597 - took 0.10 seconds
Cbc0012I Integer solution of -7.97597 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 72 rows 43 columns
Cbc0031I 28 added rows had average density of 68.5
Cbc0013I At root node, 28 cuts changed objective from -33.587955 to -27.956925 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17879 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.133 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2366 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.97597 best solution, best possible -27.956925 (1.39 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 70 rows 42 columns
Cbc0012I Integer solution of -8.28271 found by RINS after 11667 iterations and 41 nodes (1.76 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 8 rows 11 columns
Cbc0001I Search completed - best objective -8.282710000000002, took 15134 iterations and 176 nodes (2.05 seconds)
Cbc0032I Strong branching done 1390 times (24946 iterations), fathomed 18 nodes and fixed 62 variables
Cbc0035I Maximum depth 42, 587 variables fixed on reduced cost
Total time (CPU seconds):       1.97   (Wallclock seconds):       2.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-77) rows, 148 (-54) columns and 2669 (-2984) elements
Clp1000I sum of infeasibilities 1.08963e-07 - average 8.57976e-10, 23 fixed columns
Coin0506I Presolve 105 (-22) rows, 125 (-23) columns and 1952 (-717) elements
Clp0006I 0  Obj 35.432847 Dual inf 9.3622611 (123)
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 1.8622127 - largest nonzero change 1.6900683e-05 ( 0.0011371494%) - largest zero change 2.9317129e-05
Clp0000I Optimal - objective value 46.360126
Clp0000I Optimal - objective value 46.360126
Coin0511I After Postsolve, objective 46.360126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 46.360126
Clp0000I Optimal - objective value 46.360126
Clp0000I Optimal - objective value 46.360126
Clp0000I Optimal - objective value 46.360126
Coin0511I After Postsolve, objective 46.360126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.36012592 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 149 columns (149 integer (149 of which binary)) and 2675 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 6.98518
Cbc0038I Pass   1: suminf.    1.13546 (33) obj. -2.90186 iterations 34
Cbc0038I Pass   2: suminf.    1.13546 (33) obj. -2.90186 iterations 1
Cbc0038I Pass   3: suminf.    0.52958 (19) obj. 13.3631 iterations 14
Cbc0038I Pass   4: suminf.    0.10095 (5) obj. 27.9 iterations 14
Cbc0038I Solution found of 32.7991
Cbc0038I Rounding solution of 15.1456 is better than previous of 32.7991

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 149 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of 10.1974
Cbc0038I Pass   5: suminf.    1.13546 (33) obj. -2.90186 iterations 0
Cbc0038I Pass   6: suminf.    1.13546 (33) obj. -2.90186 iterations 1
Cbc0038I Pass   7: suminf.    1.28912 (18) obj. 10.1974 iterations 28
Cbc0038I Pass   8: suminf.    1.18986 (20) obj. 10.1974 iterations 44
Cbc0038I Pass   9: suminf.    0.73983 (18) obj. 10.1974 iterations 5
Cbc0038I Pass  10: suminf.    2.10806 (9) obj. 10.1974 iterations 23
Cbc0038I Pass  11: suminf.    1.31476 (8) obj. 10.1974 iterations 5
Cbc0038I Pass  12: suminf.    0.98356 (8) obj. 10.1974 iterations 3
Cbc0038I Pass  13: suminf.    1.72501 (7) obj. 10.1974 iterations 19
Cbc0038I Pass  14: suminf.    1.72501 (7) obj. 10.1974 iterations 7
Cbc0038I Pass  15: suminf.    1.75261 (9) obj. 10.1974 iterations 6
Cbc0038I Pass  16: suminf.    1.75261 (9) obj. 10.1974 iterations 5
Cbc0038I Pass  17: suminf.    1.80514 (7) obj. 10.1974 iterations 15
Cbc0038I Pass  18: suminf.    1.80514 (7) obj. 10.1974 iterations 4
Cbc0038I Pass  19: suminf.    1.68690 (7) obj. 10.1974 iterations 8
Cbc0038I Pass  20: suminf.    1.15629 (7) obj. 10.1974 iterations 4
Cbc0038I Pass  21: suminf.    1.80514 (7) obj. 10.1974 iterations 6
Cbc0038I Pass  22: suminf.    3.28432 (25) obj. 10.1974 iterations 35
Cbc0038I Pass  23: suminf.    2.77725 (24) obj. 10.1974 iterations 7
Cbc0038I Pass  24: suminf.    1.96211 (11) obj. 10.1974 iterations 38
Cbc0038I Pass  25: suminf.    1.95214 (12) obj. 10.1974 iterations 5
Cbc0038I Pass  26: suminf.    1.55418 (10) obj. 10.1974 iterations 10
Cbc0038I Pass  27: suminf.    1.32447 (7) obj. 10.1974 iterations 7
Cbc0038I Pass  28: suminf.    1.61393 (7) obj. 10.1974 iterations 9
Cbc0038I Pass  29: suminf.    1.61393 (7) obj. 10.1974 iterations 4
Cbc0038I Pass  30: suminf.    1.23263 (6) obj. 10.1974 iterations 8
Cbc0038I Pass  31: suminf.    1.14943 (6) obj. 10.1974 iterations 4
Cbc0038I Pass  32: suminf.    1.61393 (7) obj. 10.1974 iterations 7
Cbc0038I Pass  33: suminf.    2.01480 (14) obj. 10.1974 iterations 36
Cbc0038I Pass  34: suminf.    1.63240 (14) obj. 10.1974 iterations 10
Cbc0038I Rounding solution of 14.5958 is better than previous of 15.1456

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 149 columns, reduced to 29 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 14.5958 to 12.9786 (0.09 seconds)
Cbc0038I Round again with cutoff of 1.29083
Cbc0038I Pass  34: suminf.    1.13546 (33) obj. -2.90186 iterations 0
Cbc0038I Pass  35: suminf.    1.13546 (33) obj. -2.90186 iterations 1
Cbc0038I Pass  36: suminf.    2.39006 (26) obj. 1.29083 iterations 50
Cbc0038I Pass  37: suminf.    1.49127 (24) obj. 1.29083 iterations 9
Cbc0038I Pass  38: suminf.    2.34546 (17) obj. 1.29083 iterations 33
Cbc0038I Pass  39: suminf.    1.56174 (14) obj. 1.29083 iterations 17
Cbc0038I Pass  40: suminf.    2.45451 (13) obj. 1.29083 iterations 26
Cbc0038I Pass  41: suminf.    2.45451 (13) obj. 1.29083 iterations 1
Cbc0038I Pass  42: suminf.    2.55715 (13) obj. 1.29083 iterations 10
Cbc0038I Pass  43: suminf.    2.55715 (13) obj. 1.29083 iterations 3
Cbc0038I Pass  44: suminf.    2.45451 (13) obj. 1.29083 iterations 9
Cbc0038I Pass  45: suminf.    2.38409 (17) obj. 1.29083 iterations 21
Cbc0038I Pass  46: suminf.    2.05297 (18) obj. 1.29083 iterations 12
Cbc0038I Pass  47: suminf.    2.44224 (12) obj. 1.29083 iterations 27
Cbc0038I Pass  48: suminf.    1.93459 (14) obj. 1.29083 iterations 13
Cbc0038I Pass  49: suminf.    3.56516 (16) obj. 1.29083 iterations 16
Cbc0038I Pass  50: suminf.    3.40975 (13) obj. 1.29083 iterations 8
Cbc0038I Pass  51: suminf.    3.27603 (13) obj. 1.29083 iterations 20
Cbc0038I Pass  52: suminf.    3.27603 (13) obj. 1.29083 iterations 2
Cbc0038I Pass  53: suminf.    3.28445 (13) obj. 1.29083 iterations 11
Cbc0038I Pass  54: suminf.    3.28445 (13) obj. 1.29083 iterations 3
Cbc0038I Pass  55: suminf.    3.27603 (13) obj. 1.29083 iterations 11
Cbc0038I Pass  56: suminf.    2.96302 (21) obj. 1.29083 iterations 26
Cbc0038I Pass  57: suminf.    2.78880 (22) obj. 1.29083 iterations 6
Cbc0038I Pass  58: suminf.    2.83027 (14) obj. 1.29083 iterations 19
Cbc0038I Pass  59: suminf.    2.50756 (14) obj. 1.29083 iterations 4
Cbc0038I Pass  60: suminf.    2.83027 (14) obj. 1.29083 iterations 8
Cbc0038I Pass  61: suminf.    3.29972 (16) obj. 1.29083 iterations 18
Cbc0038I Pass  62: suminf.    2.42738 (15) obj. 1.29083 iterations 10
Cbc0038I Pass  63: suminf.    2.13777 (15) obj. 1.29083 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 149 columns, reduced to 27 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 12.9786 to 9.82556 (0.17 seconds)
Cbc0038I Round again with cutoff of -9.39709
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.46262 (47) obj. -9.39709 iterations 9
Cbc0038I Pass  64: suminf.    2.13513 (36) obj. -9.39709 iterations 6
Cbc0038I Pass  65: suminf.    2.11935 (31) obj. -9.39709 iterations 41
Cbc0038I Pass  66: suminf.    2.11935 (31) obj. -9.39709 iterations 2
Cbc0038I Pass  67: suminf.    3.06964 (25) obj. -9.39709 iterations 40
Cbc0038I Pass  68: suminf.    3.04258 (25) obj. -9.39709 iterations 13
Cbc0038I Pass  69: suminf.    3.10549 (26) obj. -9.39709 iterations 19
Cbc0038I Pass  70: suminf.    3.10549 (26) obj. -9.39709 iterations 3
Cbc0038I Pass  71: suminf.    3.10187 (26) obj. -9.39709 iterations 13
Cbc0038I Pass  72: suminf.    3.10187 (26) obj. -9.39709 iterations 6
Cbc0038I Pass  73: suminf.    3.11387 (26) obj. -9.39709 iterations 10
Cbc0038I Pass  74: suminf.    3.11387 (26) obj. -9.39709 iterations 5
Cbc0038I Pass  75: suminf.    3.10187 (26) obj. -9.39709 iterations 6
Cbc0038I Pass  76: suminf.    5.55634 (30) obj. -9.39709 iterations 16
Cbc0038I Pass  77: suminf.    5.55634 (30) obj. -9.39709 iterations 2
Cbc0038I Pass  78: suminf.    5.14407 (25) obj. -9.39709 iterations 17
Cbc0038I Pass  79: suminf.    5.14407 (25) obj. -9.39709 iterations 4
Cbc0038I Pass  80: suminf.    5.19401 (25) obj. -9.39709 iterations 11
Cbc0038I Pass  81: suminf.    5.03791 (26) obj. -9.39709 iterations 13
Cbc0038I Pass  82: suminf.    5.03188 (27) obj. -9.39709 iterations 4
Cbc0038I Pass  83: suminf.    4.47154 (26) obj. -9.39709 iterations 4
Cbc0038I Pass  84: suminf.    4.47154 (26) obj. -9.39709 iterations 0
Cbc0038I Pass  85: suminf.    4.91020 (26) obj. -9.39709 iterations 12
Cbc0038I Pass  86: suminf.    4.37238 (26) obj. -9.39709 iterations 9
Cbc0038I Pass  87: suminf.    4.47154 (26) obj. -9.39709 iterations 10
Cbc0038I Pass  88: suminf.    5.38993 (29) obj. -9.39709 iterations 38
Cbc0038I Pass  89: suminf.    4.57063 (27) obj. -9.39709 iterations 10
Cbc0038I Pass  90: suminf.    4.57063 (27) obj. -9.39709 iterations 5
Cbc0038I Pass  91: suminf.    4.10856 (26) obj. -9.39709 iterations 10
Cbc0038I Pass  92: suminf.    4.10856 (26) obj. -9.39709 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of 9.82556 - took 0.15 seconds
Cbc0012I Integer solution of 9.82556 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 128 rows 149 columns, reduced to 19 rows 23 columns
Cbc0012I Integer solution of 9.66587 found by DiveCoefficient after 6577 iterations and 0 nodes (3.11 seconds)
Cbc0031I 56 added rows had average density of 26.125
Cbc0013I At root node, 56 cuts changed objective from -34.335575 to -15.37241 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24169 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1748 row cuts average 139.5 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 135 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 915 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.142 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 786 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 336 row cuts average 87.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 209 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.715 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 9.66587 best solution, best possible -15.37241 (3.22 seconds)
Cbc0012I Integer solution of 0.15763 found by rounding after 6675 iterations and 1 nodes (3.22 seconds)
Cbc0004I Integer solution of 0 found after 6707 iterations and 1 nodes (3.23 seconds)
Cbc0012I Integer solution of -4.2388 found by rounding after 7404 iterations and 3 nodes (3.85 seconds)
Cbc0010I After 3 nodes, 2 on tree, -4.2388 best solution, best possible -13.683876 (3.96 seconds)
Cbc0012I Integer solution of -8.28271 found by rounding after 7491 iterations and 5 nodes (4.08 seconds)
Cbc0010I After 12 nodes, 7 on tree, -8.28271 best solution, best possible -13.683876 (4.78 seconds)
Cbc0010I After 21 nodes, 11 on tree, -8.28271 best solution, best possible -13.683876 (5.55 seconds)
Cbc0010I After 36 nodes, 15 on tree, -8.28271 best solution, best possible -13.683876 (6.29 seconds)
Cbc0038I Full problem 128 rows 149 columns, reduced to 36 rows 52 columns
Cbc0010I After 50 nodes, 17 on tree, -8.28271 best solution, best possible -13.683876 (7.03 seconds)
Cbc0010I After 70 nodes, 16 on tree, -8.28271 best solution, best possible -13.683876 (7.78 seconds)
Cbc0010I After 83 nodes, 18 on tree, -8.28271 best solution, best possible -13.683876 (8.51 seconds)
Cbc0038I Full problem 128 rows 149 columns, reduced to 69 rows 86 columns
Cbc0010I After 98 nodes, 11 on tree, -8.28271 best solution, best possible -13.683876 (9.24 seconds)
Cbc0010I After 112 nodes, 13 on tree, -8.28271 best solution, best possible -13.683876 (9.99 seconds)
Cbc0010I After 130 nodes, 15 on tree, -8.28271 best solution, best possible -13.683876 (10.73 seconds)
Cbc0010I After 148 nodes, 16 on tree, -8.28271 best solution, best possible -13.683876 (11.46 seconds)
Cbc0010I After 168 nodes, 13 on tree, -8.28271 best solution, best possible -13.683876 (12.22 seconds)
Cbc0010I After 185 nodes, 12 on tree, -8.28271 best solution, best possible -13.683876 (13.01 seconds)
Cbc0010I After 197 nodes, 9 on tree, -8.28271 best solution, best possible -13.683876 (13.72 seconds)
Cbc0001I Search completed - best objective -8.282710000000002, took 18763 iterations and 212 nodes (14.11 seconds)
Cbc0032I Strong branching done 2256 times (46994 iterations), fathomed 25 nodes and fixed 38 variables
Cbc0035I Maximum depth 21, 520 variables fixed on reduced cost
Total time (CPU seconds):       10.42   (Wallclock seconds):       14.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 99 (-4) columns and 540 (-63) elements
Clp1000I sum of infeasibilities 8.19148e-05 - average 4.68085e-07, 21 fixed columns
Coin0506I Presolve 130 (-45) rows, 76 (-23) columns and 404 (-136) elements
Clp0029I End of values pass after 76 iterations
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Coin0511I After Postsolve, objective 33.955232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Clp0000I Optimal - objective value 33.955232
Coin0511I After Postsolve, objective 33.955232, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 33.95523161 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 175 rows, 99 columns (98 integer (98 of which binary)) and 550 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.954%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 41 integers unsatisfied sum - 7.19941
Cbc0038I Solution found of 7.3593
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 71 rows 42 columns
Cbc0038I Mini branch and bound improved solution from 0 to -7.38457 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.005
Cbc0038I Pass   1: suminf.    1.79055 (29) obj. -10.005 iterations 60
Cbc0038I Pass   2: suminf.    2.48993 (8) obj. -10.005 iterations 41
Cbc0038I Pass   3: suminf.    1.77625 (6) obj. -10.005 iterations 5
Cbc0038I Pass   4: suminf.    1.32349 (5) obj. -10.005 iterations 2
Cbc0038I Pass   5: suminf.    1.30008 (4) obj. -10.005 iterations 5
Cbc0038I Pass   6: suminf.    1.09023 (4) obj. -10.005 iterations 3
Cbc0038I Pass   7: suminf.    0.84016 (6) obj. -10.005 iterations 2
Cbc0038I Pass   8: suminf.    1.52343 (6) obj. -10.005 iterations 13
Cbc0038I Pass   9: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  10: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  11: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  12: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  13: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  14: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  15: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  16: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  17: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  18: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  19: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  20: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  21: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  22: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  23: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  24: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  25: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I Pass  26: suminf.    1.77635 (6) obj. -10.005 iterations 7
Cbc0038I Pass  27: suminf.    1.76493 (6) obj. -10.005 iterations 1
Cbc0038I Pass  28: suminf.    1.46130 (6) obj. -10.005 iterations 8
Cbc0038I Pass  29: suminf.    1.46103 (6) obj. -10.005 iterations 1
Cbc0038I Pass  30: suminf.    2.31075 (6) obj. -10.005 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 81 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -7.38457 to -7.97597 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.7216
Cbc0038I Pass  30: suminf.    2.63465 (29) obj. -14.7216 iterations 0
Cbc0038I Pass  31: suminf.    2.64848 (10) obj. -14.7216 iterations 28
Cbc0038I Pass  32: suminf.    1.49148 (7) obj. -14.7216 iterations 13
Cbc0038I Pass  33: suminf.    2.04073 (8) obj. -14.7216 iterations 9
Cbc0038I Pass  34: suminf.    1.54602 (5) obj. -14.7216 iterations 7
Cbc0038I Pass  35: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  36: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  37: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  38: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  39: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  40: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  41: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  42: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  43: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  44: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  45: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  46: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  47: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  48: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  49: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  50: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  51: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  52: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  53: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  54: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I Pass  55: suminf.    1.92095 (6) obj. -14.7216 iterations 10
Cbc0038I Pass  56: suminf.    1.81669 (7) obj. -14.7216 iterations 10
Cbc0038I Pass  57: suminf.    2.80610 (9) obj. -14.7216 iterations 10
Cbc0038I Pass  58: suminf.    1.71885 (6) obj. -14.7216 iterations 11
Cbc0038I Pass  59: suminf.    1.54602 (5) obj. -14.7216 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 99 columns, reduced to 81 rows 49 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.97597 - took 0.10 seconds
Cbc0012I Integer solution of -7.97597 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 72 rows 43 columns
Cbc0031I 28 added rows had average density of 68.5
Cbc0013I At root node, 28 cuts changed objective from -33.587955 to -27.956925 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17879 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2366 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.97597 best solution, best possible -27.956925 (1.43 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 70 rows 42 columns
Cbc0012I Integer solution of -8.28271 found by RINS after 11667 iterations and 41 nodes (1.82 seconds)
Cbc0038I Full problem 175 rows 99 columns, reduced to 8 rows 11 columns
Cbc0001I Search completed - best objective -8.282710000000002, took 15134 iterations and 176 nodes (2.12 seconds)
Cbc0032I Strong branching done 1390 times (24946 iterations), fathomed 18 nodes and fixed 62 variables
Cbc0035I Maximum depth 42, 587 variables fixed on reduced cost
Total time (CPU seconds):       2.03   (Wallclock seconds):       2.14

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 148 (-55) columns and 2669 (-2985) elements
Clp1000I sum of infeasibilities 1.08963e-07 - average 8.57976e-10, 23 fixed columns
Coin0506I Presolve 105 (-22) rows, 125 (-23) columns and 1952 (-717) elements
Clp0006I 0  Obj 35.432847 Dual inf 9.3622611 (123)
Clp0029I End of values pass after 125 iterations
Clp0014I Perturbing problem by 0.001% of 1.8622127 - largest nonzero change 1.6900683e-05 ( 0.0011371494%) - largest zero change 2.9317129e-05
Clp0000I Optimal - objective value 46.360126
Clp0000I Optimal - objective value 46.360126
Coin0511I After Postsolve, objective 46.360126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 46.360126
Clp0000I Optimal - objective value 46.360126
Clp0000I Optimal - objective value 46.360126
Clp0000I Optimal - objective value 46.360126
Coin0511I After Postsolve, objective 46.360126, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 46.36012592 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0004I processed model has 128 rows, 149 columns (149 integer (149 of which binary)) and 2675 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.618%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 6.98518
Cbc0038I Pass   1: suminf.    1.13546 (33) obj. -2.90186 iterations 34
Cbc0038I Pass   2: suminf.    1.13546 (33) obj. -2.90186 iterations 1
Cbc0038I Pass   3: suminf.    0.52958 (19) obj. 13.3631 iterations 14
Cbc0038I Pass   4: suminf.    0.10095 (5) obj. 27.9 iterations 14
Cbc0038I Solution found of 32.7991
Cbc0038I Rounding solution of 15.1456 is better than previous of 32.7991

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 149 columns, reduced to 19 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of 10.1974
Cbc0038I Pass   5: suminf.    1.13546 (33) obj. -2.90186 iterations 0
Cbc0038I Pass   6: suminf.    1.13546 (33) obj. -2.90186 iterations 1
Cbc0038I Pass   7: suminf.    1.28912 (18) obj. 10.1974 iterations 28
Cbc0038I Pass   8: suminf.    1.18986 (20) obj. 10.1974 iterations 44
Cbc0038I Pass   9: suminf.    0.73983 (18) obj. 10.1974 iterations 5
Cbc0038I Pass  10: suminf.    2.10806 (9) obj. 10.1974 iterations 23
Cbc0038I Pass  11: suminf.    1.31476 (8) obj. 10.1974 iterations 5
Cbc0038I Pass  12: suminf.    0.98356 (8) obj. 10.1974 iterations 3
Cbc0038I Pass  13: suminf.    1.72501 (7) obj. 10.1974 iterations 19
Cbc0038I Pass  14: suminf.    1.72501 (7) obj. 10.1974 iterations 7
Cbc0038I Pass  15: suminf.    1.75261 (9) obj. 10.1974 iterations 6
Cbc0038I Pass  16: suminf.    1.75261 (9) obj. 10.1974 iterations 5
Cbc0038I Pass  17: suminf.    1.80514 (7) obj. 10.1974 iterations 15
Cbc0038I Pass  18: suminf.    1.80514 (7) obj. 10.1974 iterations 4
Cbc0038I Pass  19: suminf.    1.68690 (7) obj. 10.1974 iterations 8
Cbc0038I Pass  20: suminf.    1.15629 (7) obj. 10.1974 iterations 4
Cbc0038I Pass  21: suminf.    1.80514 (7) obj. 10.1974 iterations 6
Cbc0038I Pass  22: suminf.    3.28432 (25) obj. 10.1974 iterations 35
Cbc0038I Pass  23: suminf.    2.77725 (24) obj. 10.1974 iterations 7
Cbc0038I Pass  24: suminf.    1.96211 (11) obj. 10.1974 iterations 38
Cbc0038I Pass  25: suminf.    1.95214 (12) obj. 10.1974 iterations 5
Cbc0038I Pass  26: suminf.    1.55418 (10) obj. 10.1974 iterations 10
Cbc0038I Pass  27: suminf.    1.32447 (7) obj. 10.1974 iterations 7
Cbc0038I Pass  28: suminf.    1.61393 (7) obj. 10.1974 iterations 9
Cbc0038I Pass  29: suminf.    1.61393 (7) obj. 10.1974 iterations 4
Cbc0038I Pass  30: suminf.    1.23263 (6) obj. 10.1974 iterations 8
Cbc0038I Pass  31: suminf.    1.14943 (6) obj. 10.1974 iterations 4
Cbc0038I Pass  32: suminf.    1.61393 (7) obj. 10.1974 iterations 7
Cbc0038I Pass  33: suminf.    2.01480 (14) obj. 10.1974 iterations 36
Cbc0038I Pass  34: suminf.    1.63240 (14) obj. 10.1974 iterations 10
Cbc0038I Rounding solution of 14.5958 is better than previous of 15.1456

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 149 columns, reduced to 29 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 14.5958 to 12.9786 (0.10 seconds)
Cbc0038I Round again with cutoff of 1.29083
Cbc0038I Pass  34: suminf.    1.13546 (33) obj. -2.90186 iterations 0
Cbc0038I Pass  35: suminf.    1.13546 (33) obj. -2.90186 iterations 1
Cbc0038I Pass  36: suminf.    2.39006 (26) obj. 1.29083 iterations 50
Cbc0038I Pass  37: suminf.    1.49127 (24) obj. 1.29083 iterations 9
Cbc0038I Pass  38: suminf.    2.34546 (17) obj. 1.29083 iterations 33
Cbc0038I Pass  39: suminf.    1.56174 (14) obj. 1.29083 iterations 17
Cbc0038I Pass  40: suminf.    2.45451 (13) obj. 1.29083 iterations 26
Cbc0038I Pass  41: suminf.    2.45451 (13) obj. 1.29083 iterations 1
Cbc0038I Pass  42: suminf.    2.55715 (13) obj. 1.29083 iterations 10
Cbc0038I Pass  43: suminf.    2.55715 (13) obj. 1.29083 iterations 3
Cbc0038I Pass  44: suminf.    2.45451 (13) obj. 1.29083 iterations 9
Cbc0038I Pass  45: suminf.    2.38409 (17) obj. 1.29083 iterations 21
Cbc0038I Pass  46: suminf.    2.05297 (18) obj. 1.29083 iterations 12
Cbc0038I Pass  47: suminf.    2.44224 (12) obj. 1.29083 iterations 27
Cbc0038I Pass  48: suminf.    1.93459 (14) obj. 1.29083 iterations 13
Cbc0038I Pass  49: suminf.    3.56516 (16) obj. 1.29083 iterations 16
Cbc0038I Pass  50: suminf.    3.40975 (13) obj. 1.29083 iterations 8
Cbc0038I Pass  51: suminf.    3.27603 (13) obj. 1.29083 iterations 20
Cbc0038I Pass  52: suminf.    3.27603 (13) obj. 1.29083 iterations 2
Cbc0038I Pass  53: suminf.    3.28445 (13) obj. 1.29083 iterations 11
Cbc0038I Pass  54: suminf.    3.28445 (13) obj. 1.29083 iterations 3
Cbc0038I Pass  55: suminf.    3.27603 (13) obj. 1.29083 iterations 11
Cbc0038I Pass  56: suminf.    2.96302 (21) obj. 1.29083 iterations 26
Cbc0038I Pass  57: suminf.    2.78880 (22) obj. 1.29083 iterations 6
Cbc0038I Pass  58: suminf.    2.83027 (14) obj. 1.29083 iterations 19
Cbc0038I Pass  59: suminf.    2.50756 (14) obj. 1.29083 iterations 4
Cbc0038I Pass  60: suminf.    2.83027 (14) obj. 1.29083 iterations 8
Cbc0038I Pass  61: suminf.    3.29972 (16) obj. 1.29083 iterations 18
Cbc0038I Pass  62: suminf.    2.42738 (15) obj. 1.29083 iterations 10
Cbc0038I Pass  63: suminf.    2.13777 (15) obj. 1.29083 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Full problem 128 rows 149 columns, reduced to 27 rows 38 columns
Cbc0038I Mini branch and bound improved solution from 12.9786 to 9.82556 (0.18 seconds)
Cbc0038I Round again with cutoff of -9.39709
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  63: suminf.    2.46262 (47) obj. -9.39709 iterations 9
Cbc0038I Pass  64: suminf.    2.13513 (36) obj. -9.39709 iterations 6
Cbc0038I Pass  65: suminf.    2.11935 (31) obj. -9.39709 iterations 41
Cbc0038I Pass  66: suminf.    2.11935 (31) obj. -9.39709 iterations 2
Cbc0038I Pass  67: suminf.    3.06964 (25) obj. -9.39709 iterations 40
Cbc0038I Pass  68: suminf.    3.04258 (25) obj. -9.39709 iterations 13
Cbc0038I Pass  69: suminf.    3.10549 (26) obj. -9.39709 iterations 19
Cbc0038I Pass  70: suminf.    3.10549 (26) obj. -9.39709 iterations 3
Cbc0038I Pass  71: suminf.    3.10187 (26) obj. -9.39709 iterations 13
Cbc0038I Pass  72: suminf.    3.10187 (26) obj. -9.39709 iterations 6
Cbc0038I Pass  73: suminf.    3.11387 (26) obj. -9.39709 iterations 10
Cbc0038I Pass  74: suminf.    3.11387 (26) obj. -9.39709 iterations 5
Cbc0038I Pass  75: suminf.    3.10187 (26) obj. -9.39709 iterations 6
Cbc0038I Pass  76: suminf.    5.55634 (30) obj. -9.39709 iterations 16
Cbc0038I Pass  77: suminf.    5.55634 (30) obj. -9.39709 iterations 2
Cbc0038I Pass  78: suminf.    5.14407 (25) obj. -9.39709 iterations 17
Cbc0038I Pass  79: suminf.    5.14407 (25) obj. -9.39709 iterations 4
Cbc0038I Pass  80: suminf.    5.19401 (25) obj. -9.39709 iterations 11
Cbc0038I Pass  81: suminf.    5.03791 (26) obj. -9.39709 iterations 13
Cbc0038I Pass  82: suminf.    5.03188 (27) obj. -9.39709 iterations 4
Cbc0038I Pass  83: suminf.    4.47154 (26) obj. -9.39709 iterations 4
Cbc0038I Pass  84: suminf.    4.47154 (26) obj. -9.39709 iterations 0
Cbc0038I Pass  85: suminf.    4.91020 (26) obj. -9.39709 iterations 12
Cbc0038I Pass  86: suminf.    4.37238 (26) obj. -9.39709 iterations 9
Cbc0038I Pass  87: suminf.    4.47154 (26) obj. -9.39709 iterations 10
Cbc0038I Pass  88: suminf.    5.38993 (29) obj. -9.39709 iterations 38
Cbc0038I Pass  89: suminf.    4.57063 (27) obj. -9.39709 iterations 10
Cbc0038I Pass  90: suminf.    4.57063 (27) obj. -9.39709 iterations 5
Cbc0038I Pass  91: suminf.    4.10856 (26) obj. -9.39709 iterations 10
Cbc0038I Pass  92: suminf.    4.10856 (26) obj. -9.39709 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 82 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of 9.82556 - took 0.16 seconds
Cbc0012I Integer solution of 9.82556 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 128 rows 149 columns, reduced to 19 rows 23 columns
Cbc0012I Integer solution of 9.66587 found by DiveCoefficient after 6577 iterations and 0 nodes (3.47 seconds)
Cbc0031I 56 added rows had average density of 26.125
Cbc0013I At root node, 56 cuts changed objective from -34.335575 to -15.37241 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 24169 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.200 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1748 row cuts average 139.5 elements, 0 column cuts (0 active)  in 0.267 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 135 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 915 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.158 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 786 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 336 row cuts average 87.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 209 row cuts average 14.1 elements, 0 column cuts (0 active)  in 0.768 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 9.66587 best solution, best possible -15.37241 (3.57 seconds)
Cbc0012I Integer solution of 0.15763 found by rounding after 6675 iterations and 1 nodes (3.58 seconds)
Cbc0004I Integer solution of 0 found after 6707 iterations and 1 nodes (3.58 seconds)
Cbc0010I After 2 nodes, 1 on tree, 0 best solution, best possible -13.683876 (4.34 seconds)
Cbc0012I Integer solution of -4.2388 found by rounding after 7404 iterations and 3 nodes (4.37 seconds)
Cbc0012I Integer solution of -8.28271 found by rounding after 7491 iterations and 5 nodes (4.63 seconds)
Cbc0010I After 8 nodes, 7 on tree, -8.28271 best solution, best possible -13.683876 (5.20 seconds)
Cbc0010I After 15 nodes, 9 on tree, -8.28271 best solution, best possible -13.683876 (5.94 seconds)
Cbc0010I After 25 nodes, 15 on tree, -8.28271 best solution, best possible -13.683876 (6.65 seconds)
Cbc0010I After 36 nodes, 15 on tree, -8.28271 best solution, best possible -13.683876 (7.41 seconds)
Cbc0038I Full problem 128 rows 149 columns, reduced to 36 rows 52 columns
Cbc0010I After 45 nodes, 17 on tree, -8.28271 best solution, best possible -13.683876 (8.16 seconds)
Cbc0010I After 57 nodes, 18 on tree, -8.28271 best solution, best possible -13.683876 (8.96 seconds)
Cbc0010I After 72 nodes, 16 on tree, -8.28271 best solution, best possible -13.683876 (9.67 seconds)
Cbc0010I After 81 nodes, 19 on tree, -8.28271 best solution, best possible -13.683876 (10.42 seconds)
Cbc0038I Full problem 128 rows 149 columns, reduced to 69 rows 86 columns
Cbc0010I After 92 nodes, 13 on tree, -8.28271 best solution, best possible -13.683876 (11.32 seconds)
Cbc0010I After 107 nodes, 10 on tree, -8.28271 best solution, best possible -13.683876 (12.09 seconds)
Cbc0010I After 115 nodes, 14 on tree, -8.28271 best solution, best possible -13.683876 (12.82 seconds)
Cbc0010I After 128 nodes, 14 on tree, -8.28271 best solution, best possible -13.683876 (13.55 seconds)
Cbc0010I After 140 nodes, 15 on tree, -8.28271 best solution, best possible -13.683876 (14.26 seconds)
Cbc0010I After 154 nodes, 16 on tree, -8.28271 best solution, best possible -13.683876 (15.09 seconds)
Cbc0010I After 168 nodes, 13 on tree, -8.28271 best solution, best possible -13.683876 (15.85 seconds)
Cbc0010I After 179 nodes, 10 on tree, -8.28271 best solution, best possible -13.683876 (16.59 seconds)
Cbc0010I After 190 nodes, 9 on tree, -8.28271 best solution, best possible -13.683876 (17.36 seconds)
Cbc0010I After 198 nodes, 9 on tree, -8.28271 best solution, best possible -13.683876 (18.15 seconds)
Cbc0001I Search completed - best objective -8.282710000000002, took 18763 iterations and 212 nodes (18.58 seconds)
Cbc0032I Strong branching done 2256 times (46994 iterations), fathomed 25 nodes and fixed 38 variables
Cbc0035I Maximum depth 21, 520 variables fixed on reduced cost
Total time (CPU seconds):       13.27   (Wallclock seconds):       18.61

