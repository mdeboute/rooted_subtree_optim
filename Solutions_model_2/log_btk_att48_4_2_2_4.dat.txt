Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-8) rows, 48 (-2) columns and 271 (-14) elements
Clp1000I sum of infeasibilities 0.023092 - average 0.000253759, 12 fixed columns
Coin0506I Presolve 62 (-29) rows, 36 (-12) columns and 189 (-82) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 1.5483678 - largest nonzero change 0 ( 0%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Coin0511I After Postsolve, objective 2140.2531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.89401492 - largest nonzero change 0 ( 0%) - largest zero change 2.9487244e-05
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Coin0511I After Postsolve, objective 2140.2531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2140.253124 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 48 columns (47 integer (47 of which binary)) and 271 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.912%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 9.00942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 226.712 iterations 31
Cbc0038I Solution found of 226.712
Cbc0038I Relaxing continuous gives 226.712
Cbc0038I Rounding solution of -145.521 is better than previous of 226.712

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -344.994
Cbc0038I Pass   2: suminf.    0.78892 (6) obj. -344.994 iterations 5
Cbc0038I Pass   3: suminf.    0.98736 (4) obj. -344.994 iterations 6
Cbc0038I Pass   4: suminf.    0.97609 (4) obj. -344.994 iterations 2
Cbc0038I Pass   5: suminf.    1.48693 (6) obj. -344.994 iterations 5
Cbc0038I Pass   6: suminf.    1.48882 (7) obj. -344.994 iterations 1
Cbc0038I Pass   7: suminf.    2.40439 (8) obj. -344.994 iterations 8
Cbc0038I Pass   8: suminf.    2.07300 (9) obj. -344.994 iterations 3
Cbc0038I Pass   9: suminf.    2.04183 (10) obj. -344.994 iterations 1
Cbc0038I Pass  10: suminf.    2.36445 (6) obj. -344.994 iterations 10
Cbc0038I Pass  11: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  12: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  13: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  14: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  15: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  16: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  17: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I Pass  18: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  19: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  20: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  21: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  22: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  23: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  24: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I Pass  25: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  26: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  27: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  28: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  29: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  30: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  31: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 50 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -145.521 - took 0.04 seconds
Cbc0012I Integer solution of -145.5212 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 91 rows 48 columns, reduced to 52 rows 31 columns
Cbc0012I Integer solution of -165.6362 found by RINS after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 23 added rows had average density of 27.391304
Cbc0013I At root node, 23 cuts changed objective from -2140.2531 to -1176.0526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8177 row cuts average 4.8 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2071 row cuts average 47.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 242 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 13 nodes, 8 on tree, -165.6362 best solution, best possible -1176.0526 (0.67 seconds)
Cbc0001I Search completed - best objective -165.6361999999999, took 7854 iterations and 28 nodes (0.71 seconds)
Cbc0032I Strong branching done 480 times (9194 iterations), fathomed 2 nodes and fixed 16 variables
Cbc0035I Maximum depth 10, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.70   (Wallclock seconds):       0.72

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-7) rows, 94 (-2) columns and 1352 (-61) elements
Clp1000I sum of infeasibilities 3.44547e-09 - average 3.78623e-11, 87 fixed columns
Coin0506I Presolve 5 (-86) rows, 7 (-87) columns and 15 (-1337) elements
Clp0006I 0  Obj -1889.3055 Dual inf 14.238453 (7)
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -1889.3018
Clp0000I Optimal - objective value -1889.3018
Coin0511I After Postsolve, objective -1889.3018, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1889.3018 Dual inf 5013.9186 (56)
Clp0014I Perturbing problem by 0.001% of 3.4687554 - largest nonzero change 2.3570742e-05 ( 0.0008514623%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 2798.7129
Clp0000I Optimal - objective value 2798.7129
Clp0000I Optimal - objective value 2798.7129
Coin0511I After Postsolve, objective 2798.7129, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2798.712936 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 94 columns (94 integer (94 of which binary)) and 1354 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 11.4189
Cbc0038I Pass   1: suminf.    4.05055 (28) obj. -1538.85 iterations 22
Cbc0038I Pass   2: suminf.    4.05055 (28) obj. -1538.85 iterations 1
Cbc0038I Pass   3: suminf.    1.92234 (17) obj. -386.769 iterations 11
Cbc0038I Pass   4: suminf.    0.45907 (6) obj. 87.1566 iterations 11
Cbc0038I Solution found of 441.436
Cbc0038I Rounding solution of 11.4838 is better than previous of 441.436

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -229.161
Cbc0038I Pass   5: suminf.    4.05055 (28) obj. -1538.85 iterations 0
Cbc0038I Pass   6: suminf.    4.05055 (28) obj. -1538.85 iterations 1
Cbc0038I Pass   7: suminf.    0.96743 (4) obj. -229.161 iterations 32
Cbc0038I Pass   8: suminf.    0.57336 (4) obj. -229.161 iterations 2
Cbc0038I Pass   9: suminf.    0.65398 (3) obj. -229.161 iterations 3
Cbc0038I Pass  10: suminf.    0.62909 (3) obj. -229.161 iterations 1
Cbc0038I Pass  11: suminf.    1.60302 (8) obj. -372.531 iterations 29
Cbc0038I Pass  12: suminf.    1.60302 (8) obj. -372.531 iterations 5
Cbc0038I Pass  13: suminf.    1.11360 (4) obj. -229.161 iterations 11
Cbc0038I Pass  14: suminf.    0.98282 (4) obj. -254.01 iterations 4
Cbc0038I Pass  15: suminf.    3.81090 (23) obj. -229.161 iterations 35
Cbc0038I Pass  16: suminf.    3.33801 (22) obj. -229.161 iterations 3
Cbc0038I Pass  17: suminf.    1.88132 (8) obj. -229.161 iterations 21
Cbc0038I Pass  18: suminf.    1.80524 (8) obj. -242.78 iterations 4
Cbc0038I Pass  19: suminf.    1.88132 (8) obj. -229.161 iterations 7
Cbc0038I Pass  20: suminf.    3.55936 (17) obj. -229.161 iterations 23
Cbc0038I Pass  21: suminf.    3.06541 (15) obj. -229.161 iterations 7
Cbc0038I Pass  22: suminf.    3.01654 (13) obj. -423.507 iterations 2
Cbc0038I Pass  23: suminf.    2.14852 (9) obj. -229.161 iterations 13
Cbc0038I Pass  24: suminf.    2.10251 (9) obj. -237.398 iterations 5
Cbc0038I Pass  25: suminf.    2.36223 (9) obj. -229.161 iterations 9
Cbc0038I Pass  26: suminf.    2.36223 (9) obj. -229.161 iterations 1
Cbc0038I Pass  27: suminf.    2.22637 (9) obj. -229.161 iterations 5
Cbc0038I Pass  28: suminf.    2.22637 (9) obj. -229.161 iterations 0
Cbc0038I Pass  29: suminf.    2.36223 (9) obj. -229.161 iterations 3
Cbc0038I Pass  30: suminf.    3.15624 (12) obj. -229.161 iterations 26
Cbc0038I Pass  31: suminf.    3.15624 (12) obj. -229.161 iterations 5
Cbc0038I Pass  32: suminf.    1.87894 (7) obj. -229.161 iterations 13
Cbc0038I Pass  33: suminf.    1.71104 (7) obj. -261.062 iterations 4
Cbc0038I Pass  34: suminf.    1.87894 (7) obj. -229.161 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 94 columns, reduced to 36 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 441.436 to -144.352 (0.05 seconds)
Cbc0038I Round again with cutoff of -662.323
Cbc0038I Pass  34: suminf.    4.05055 (28) obj. -1538.85 iterations 0
Cbc0038I Pass  35: suminf.    4.05055 (28) obj. -1538.85 iterations 1
Cbc0038I Pass  36: suminf.    2.44956 (20) obj. -662.323 iterations 11
Cbc0038I Pass  37: suminf.    1.61500 (13) obj. -662.323 iterations 12
Cbc0038I Pass  38: suminf.    1.61500 (13) obj. -662.323 iterations 0
Cbc0038I Pass  39: suminf.    1.23863 (6) obj. -662.323 iterations 24
Cbc0038I Pass  40: suminf.    1.08035 (6) obj. -662.323 iterations 2
Cbc0038I Pass  41: suminf.    1.23863 (6) obj. -662.323 iterations 4
Cbc0038I Pass  42: suminf.    3.66641 (23) obj. -662.323 iterations 29
Cbc0038I Pass  43: suminf.    2.32593 (13) obj. -662.323 iterations 8
Cbc0038I Pass  44: suminf.    2.09591 (13) obj. -662.323 iterations 1
Cbc0038I Pass  45: suminf.    2.18384 (15) obj. -662.323 iterations 12
Cbc0038I Pass  46: suminf.    2.18384 (15) obj. -662.323 iterations 0
Cbc0038I Pass  47: suminf.    2.26038 (9) obj. -662.323 iterations 14
Cbc0038I Pass  48: suminf.    1.95598 (8) obj. -720.424 iterations 5
Cbc0038I Pass  49: suminf.    2.00917 (8) obj. -662.323 iterations 7
Cbc0038I Pass  50: suminf.    2.00917 (8) obj. -662.323 iterations 0
Cbc0038I Pass  51: suminf.    2.26177 (8) obj. -662.323 iterations 1
Cbc0038I Pass  52: suminf.    2.36541 (11) obj. -662.323 iterations 13
Cbc0038I Pass  53: suminf.    2.36541 (11) obj. -662.323 iterations 4
Cbc0038I Pass  54: suminf.    1.84752 (7) obj. -662.323 iterations 8
Cbc0038I Pass  55: suminf.    1.70737 (7) obj. -690.775 iterations 4
Cbc0038I Pass  56: suminf.    1.85711 (7) obj. -662.323 iterations 6
Cbc0038I Pass  57: suminf.    4.26613 (17) obj. -662.323 iterations 23
Cbc0038I Pass  58: suminf.    3.44508 (15) obj. -662.323 iterations 7
Cbc0038I Pass  59: suminf.    1.83343 (7) obj. -662.323 iterations 14
Cbc0038I Pass  60: suminf.    1.83343 (7) obj. -662.323 iterations 4
Cbc0038I Pass  61: suminf.    1.82797 (7) obj. -662.323 iterations 3
Cbc0038I Pass  62: suminf.    1.82797 (7) obj. -662.323 iterations 1
Cbc0038I Pass  63: suminf.    1.83343 (7) obj. -662.323 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 94 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -144.352 - took 0.05 seconds
Cbc0012I Integer solution of -144.3522 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 91 rows 94 columns, reduced to 21 rows 26 columns
Cbc0031I 61 added rows had average density of 13.770492
Cbc0013I At root node, 61 cuts changed objective from -2394.9683 to -206.79262 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1963 row cuts average 5.7 elements, 12 column cuts (12 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 163 row cuts average 59.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 272 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 319 row cuts average 53.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -144.3522 best solution, best possible -206.05094 (0.33 seconds)
Cbc0004I Integer solution of -165.6362 found after 557 iterations and 1 nodes (0.38 seconds)
Cbc0001I Search completed - best objective -165.6361999999999, took 614 iterations and 2 nodes (0.39 seconds)
Cbc0032I Strong branching done 66 times (786 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.40

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-8) rows, 48 (-2) columns and 271 (-14) elements
Clp1000I sum of infeasibilities 0.023092 - average 0.000253759, 12 fixed columns
Coin0506I Presolve 62 (-29) rows, 36 (-12) columns and 189 (-82) elements
Clp0029I End of values pass after 35 iterations
Clp0014I Perturbing problem by 0.001% of 1.5483678 - largest nonzero change 0 ( 0%) - largest zero change 1.7857169e-05
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Coin0511I After Postsolve, objective 2140.2531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.89401492 - largest nonzero change 0 ( 0%) - largest zero change 2.9487244e-05
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Clp0000I Optimal - objective value 2140.2531
Coin0511I After Postsolve, objective 2140.2531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2140.253124 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 91 rows, 48 columns (47 integer (47 of which binary)) and 271 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.912%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 9.00942
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 226.712 iterations 31
Cbc0038I Solution found of 226.712
Cbc0038I Relaxing continuous gives 226.712
Cbc0038I Rounding solution of -145.521 is better than previous of 226.712

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 46 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -344.994
Cbc0038I Pass   2: suminf.    0.78892 (6) obj. -344.994 iterations 5
Cbc0038I Pass   3: suminf.    0.98736 (4) obj. -344.994 iterations 6
Cbc0038I Pass   4: suminf.    0.97609 (4) obj. -344.994 iterations 2
Cbc0038I Pass   5: suminf.    1.48693 (6) obj. -344.994 iterations 5
Cbc0038I Pass   6: suminf.    1.48882 (7) obj. -344.994 iterations 1
Cbc0038I Pass   7: suminf.    2.40439 (8) obj. -344.994 iterations 8
Cbc0038I Pass   8: suminf.    2.07300 (9) obj. -344.994 iterations 3
Cbc0038I Pass   9: suminf.    2.04183 (10) obj. -344.994 iterations 1
Cbc0038I Pass  10: suminf.    2.36445 (6) obj. -344.994 iterations 10
Cbc0038I Pass  11: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  12: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  13: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  14: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  15: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  16: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  17: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I Pass  18: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  19: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  20: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  21: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  22: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  23: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  24: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I Pass  25: suminf.    1.76258 (6) obj. -344.994 iterations 1
Cbc0038I Pass  26: suminf.    2.20630 (7) obj. -344.994 iterations 4
Cbc0038I Pass  27: suminf.    2.07386 (7) obj. -344.994 iterations 2
Cbc0038I Pass  28: suminf.    2.04850 (7) obj. -344.994 iterations 1
Cbc0038I Pass  29: suminf.    2.36233 (8) obj. -344.994 iterations 5
Cbc0038I Pass  30: suminf.    2.12708 (9) obj. -344.994 iterations 4
Cbc0038I Pass  31: suminf.    2.36445 (6) obj. -344.994 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 48 columns, reduced to 50 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -145.521 - took 0.05 seconds
Cbc0012I Integer solution of -145.5212 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 91 rows 48 columns, reduced to 52 rows 31 columns
Cbc0012I Integer solution of -165.6362 found by RINS after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 23 added rows had average density of 27.391304
Cbc0013I At root node, 23 cuts changed objective from -2140.2531 to -1176.0526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8177 row cuts average 4.8 elements, 1 column cuts (1 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2071 row cuts average 47.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 242 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 127 row cuts average 38.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 13 nodes, 8 on tree, -165.6362 best solution, best possible -1176.0526 (0.68 seconds)
Cbc0001I Search completed - best objective -165.6361999999999, took 7854 iterations and 28 nodes (0.72 seconds)
Cbc0032I Strong branching done 480 times (9194 iterations), fathomed 2 nodes and fixed 16 variables
Cbc0035I Maximum depth 10, 30 variables fixed on reduced cost
Total time (CPU seconds):       0.71   (Wallclock seconds):       0.73

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 91 (-8) rows, 94 (-3) columns and 1352 (-62) elements
Clp1000I sum of infeasibilities 3.44547e-09 - average 3.78623e-11, 87 fixed columns
Coin0506I Presolve 5 (-86) rows, 7 (-87) columns and 15 (-1337) elements
Clp0006I 0  Obj -1889.3055 Dual inf 14.238453 (7)
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value -1889.3018
Clp0000I Optimal - objective value -1889.3018
Coin0511I After Postsolve, objective -1889.3018, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -1889.3018 Dual inf 5013.9186 (56)
Clp0014I Perturbing problem by 0.001% of 3.4687554 - largest nonzero change 2.3570742e-05 ( 0.0008514623%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 2798.7129
Clp0000I Optimal - objective value 2798.7129
Clp0000I Optimal - objective value 2798.7129
Coin0511I After Postsolve, objective 2798.7129, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2798.712936 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 91 rows, 94 columns (94 integer (94 of which binary)) and 1354 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.115%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 44 integers unsatisfied sum - 11.4189
Cbc0038I Pass   1: suminf.    4.05055 (28) obj. -1538.85 iterations 22
Cbc0038I Pass   2: suminf.    4.05055 (28) obj. -1538.85 iterations 1
Cbc0038I Pass   3: suminf.    1.92234 (17) obj. -386.769 iterations 11
Cbc0038I Pass   4: suminf.    0.45907 (6) obj. 87.1566 iterations 11
Cbc0038I Solution found of 441.436
Cbc0038I Rounding solution of 11.4838 is better than previous of 441.436

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -229.161
Cbc0038I Pass   5: suminf.    4.05055 (28) obj. -1538.85 iterations 0
Cbc0038I Pass   6: suminf.    4.05055 (28) obj. -1538.85 iterations 1
Cbc0038I Pass   7: suminf.    0.96743 (4) obj. -229.161 iterations 32
Cbc0038I Pass   8: suminf.    0.57336 (4) obj. -229.161 iterations 2
Cbc0038I Pass   9: suminf.    0.65398 (3) obj. -229.161 iterations 3
Cbc0038I Pass  10: suminf.    0.62909 (3) obj. -229.161 iterations 1
Cbc0038I Pass  11: suminf.    1.60302 (8) obj. -372.531 iterations 29
Cbc0038I Pass  12: suminf.    1.60302 (8) obj. -372.531 iterations 5
Cbc0038I Pass  13: suminf.    1.11360 (4) obj. -229.161 iterations 11
Cbc0038I Pass  14: suminf.    0.98282 (4) obj. -254.01 iterations 4
Cbc0038I Pass  15: suminf.    3.81090 (23) obj. -229.161 iterations 35
Cbc0038I Pass  16: suminf.    3.33801 (22) obj. -229.161 iterations 3
Cbc0038I Pass  17: suminf.    1.88132 (8) obj. -229.161 iterations 21
Cbc0038I Pass  18: suminf.    1.80524 (8) obj. -242.78 iterations 4
Cbc0038I Pass  19: suminf.    1.88132 (8) obj. -229.161 iterations 7
Cbc0038I Pass  20: suminf.    3.55936 (17) obj. -229.161 iterations 23
Cbc0038I Pass  21: suminf.    3.06541 (15) obj. -229.161 iterations 7
Cbc0038I Pass  22: suminf.    3.01654 (13) obj. -423.507 iterations 2
Cbc0038I Pass  23: suminf.    2.14852 (9) obj. -229.161 iterations 13
Cbc0038I Pass  24: suminf.    2.10251 (9) obj. -237.398 iterations 5
Cbc0038I Pass  25: suminf.    2.36223 (9) obj. -229.161 iterations 9
Cbc0038I Pass  26: suminf.    2.36223 (9) obj. -229.161 iterations 1
Cbc0038I Pass  27: suminf.    2.22637 (9) obj. -229.161 iterations 5
Cbc0038I Pass  28: suminf.    2.22637 (9) obj. -229.161 iterations 0
Cbc0038I Pass  29: suminf.    2.36223 (9) obj. -229.161 iterations 3
Cbc0038I Pass  30: suminf.    3.15624 (12) obj. -229.161 iterations 26
Cbc0038I Pass  31: suminf.    3.15624 (12) obj. -229.161 iterations 5
Cbc0038I Pass  32: suminf.    1.87894 (7) obj. -229.161 iterations 13
Cbc0038I Pass  33: suminf.    1.71104 (7) obj. -261.062 iterations 4
Cbc0038I Pass  34: suminf.    1.87894 (7) obj. -229.161 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 94 columns, reduced to 36 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 441.436 to -144.352 (0.05 seconds)
Cbc0038I Round again with cutoff of -662.323
Cbc0038I Pass  34: suminf.    4.05055 (28) obj. -1538.85 iterations 0
Cbc0038I Pass  35: suminf.    4.05055 (28) obj. -1538.85 iterations 1
Cbc0038I Pass  36: suminf.    2.44956 (20) obj. -662.323 iterations 11
Cbc0038I Pass  37: suminf.    1.61500 (13) obj. -662.323 iterations 12
Cbc0038I Pass  38: suminf.    1.61500 (13) obj. -662.323 iterations 0
Cbc0038I Pass  39: suminf.    1.23863 (6) obj. -662.323 iterations 24
Cbc0038I Pass  40: suminf.    1.08035 (6) obj. -662.323 iterations 2
Cbc0038I Pass  41: suminf.    1.23863 (6) obj. -662.323 iterations 4
Cbc0038I Pass  42: suminf.    3.66641 (23) obj. -662.323 iterations 29
Cbc0038I Pass  43: suminf.    2.32593 (13) obj. -662.323 iterations 8
Cbc0038I Pass  44: suminf.    2.09591 (13) obj. -662.323 iterations 1
Cbc0038I Pass  45: suminf.    2.18384 (15) obj. -662.323 iterations 12
Cbc0038I Pass  46: suminf.    2.18384 (15) obj. -662.323 iterations 0
Cbc0038I Pass  47: suminf.    2.26038 (9) obj. -662.323 iterations 14
Cbc0038I Pass  48: suminf.    1.95598 (8) obj. -720.424 iterations 5
Cbc0038I Pass  49: suminf.    2.00917 (8) obj. -662.323 iterations 7
Cbc0038I Pass  50: suminf.    2.00917 (8) obj. -662.323 iterations 0
Cbc0038I Pass  51: suminf.    2.26177 (8) obj. -662.323 iterations 1
Cbc0038I Pass  52: suminf.    2.36541 (11) obj. -662.323 iterations 13
Cbc0038I Pass  53: suminf.    2.36541 (11) obj. -662.323 iterations 4
Cbc0038I Pass  54: suminf.    1.84752 (7) obj. -662.323 iterations 8
Cbc0038I Pass  55: suminf.    1.70737 (7) obj. -690.775 iterations 4
Cbc0038I Pass  56: suminf.    1.85711 (7) obj. -662.323 iterations 6
Cbc0038I Pass  57: suminf.    4.26613 (17) obj. -662.323 iterations 23
Cbc0038I Pass  58: suminf.    3.44508 (15) obj. -662.323 iterations 7
Cbc0038I Pass  59: suminf.    1.83343 (7) obj. -662.323 iterations 14
Cbc0038I Pass  60: suminf.    1.83343 (7) obj. -662.323 iterations 4
Cbc0038I Pass  61: suminf.    1.82797 (7) obj. -662.323 iterations 3
Cbc0038I Pass  62: suminf.    1.82797 (7) obj. -662.323 iterations 1
Cbc0038I Pass  63: suminf.    1.83343 (7) obj. -662.323 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 91 rows 94 columns, reduced to 16 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -144.352 - took 0.05 seconds
Cbc0012I Integer solution of -144.3522 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 91 rows 94 columns, reduced to 21 rows 26 columns
Cbc0031I 61 added rows had average density of 13.770492
Cbc0013I At root node, 61 cuts changed objective from -2394.9683 to -206.79262 in 14 passes
Cbc0014I Cut generator 0 (Probing) - 1963 row cuts average 5.7 elements, 12 column cuts (12 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 163 row cuts average 59.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 272 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 319 row cuts average 53.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 33 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -144.3522 best solution, best possible -206.05094 (0.33 seconds)
Cbc0004I Integer solution of -165.6362 found after 557 iterations and 1 nodes (0.38 seconds)
Cbc0001I Search completed - best objective -165.6361999999999, took 614 iterations and 2 nodes (0.40 seconds)
Cbc0032I Strong branching done 66 times (786 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 0, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.41

