Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 1.80743e-06 - average 1.30031e-08, 7 fixed columns
Coin0506I Presolve 127 (-12) rows, 69 (-7) columns and 384 (-38) elements
Clp0029I End of values pass after 69 iterations
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 2.6978201 - largest nonzero change 0 ( 0%) - largest zero change 1.4771173e-05
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Coin0511I After Postsolve, objective 70.14613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Coin0511I After Postsolve, objective 70.14613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.14613035 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 11.3242
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -12.2359 iterations 71
Cbc0038I Solution found of -12.2359
Cbc0038I Relaxing continuous gives -12.2359
Cbc0038I Rounding solution of -19.2346 is better than previous of -12.2359

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -19.2346 to -34.0615 (0.06 seconds)
Cbc0038I Round again with cutoff of -37.6701
Cbc0038I Pass   2: suminf.    2.84987 (37) obj. -37.6701 iterations 41
Cbc0038I Pass   3: suminf.    2.71065 (47) obj. -37.6701 iterations 16
Cbc0038I Pass   4: suminf.    0.74639 (5) obj. -37.6701 iterations 57
Cbc0038I Pass   5: suminf.    0.53381 (4) obj. -37.6701 iterations 6
Cbc0038I Pass   6: suminf.    1.41032 (6) obj. -37.6701 iterations 11
Cbc0038I Pass   7: suminf.    1.35560 (8) obj. -37.6701 iterations 3
Cbc0038I Pass   8: suminf.    2.15531 (7) obj. -37.6701 iterations 14
Cbc0038I Pass   9: suminf.    2.01082 (6) obj. -37.6701 iterations 4
Cbc0038I Pass  10: suminf.    0.97225 (5) obj. -37.6701 iterations 11
Cbc0038I Pass  11: suminf.    0.95563 (5) obj. -37.6701 iterations 2
Cbc0038I Pass  12: suminf.    2.52471 (8) obj. -37.6701 iterations 9
Cbc0038I Pass  13: suminf.    3.35563 (9) obj. -37.6701 iterations 25
Cbc0038I Pass  14: suminf.    2.18343 (7) obj. -37.6701 iterations 8
Cbc0038I Pass  15: suminf.    2.05550 (8) obj. -37.6701 iterations 3
Cbc0038I Pass  16: suminf.    2.08644 (7) obj. -37.6701 iterations 13
Cbc0038I Pass  17: suminf.    1.96515 (6) obj. -37.6701 iterations 5
Cbc0038I Pass  18: suminf.    1.87621 (7) obj. -37.6701 iterations 13
Cbc0038I Pass  19: suminf.    2.33089 (8) obj. -37.6701 iterations 10
Cbc0038I Pass  20: suminf.    1.98955 (7) obj. -37.6701 iterations 6
Cbc0038I Pass  21: suminf.    1.68605 (8) obj. -37.6701 iterations 6
Cbc0038I Pass  22: suminf.    1.19247 (6) obj. -37.6701 iterations 6
Cbc0038I Pass  23: suminf.    1.09459 (5) obj. -37.6701 iterations 1
Cbc0038I Pass  24: suminf.    1.98955 (7) obj. -37.6701 iterations 11
Cbc0038I Pass  25: suminf.    3.21142 (10) obj. -37.6701 iterations 22
Cbc0038I Pass  26: suminf.    2.57555 (11) obj. -37.6701 iterations 7
Cbc0038I Pass  27: suminf.    2.79864 (8) obj. -37.6701 iterations 13
Cbc0038I Pass  28: suminf.    2.54221 (8) obj. -37.6701 iterations 6
Cbc0038I Pass  29: suminf.    1.62518 (9) obj. -37.6701 iterations 12
Cbc0038I Pass  30: suminf.    1.62518 (9) obj. -37.6701 iterations 0
Cbc0038I Pass  31: suminf.    2.76081 (10) obj. -37.6701 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 126 rows 69 columns - 1 fixed gives 116, 68 - ok now
Cbc0038I Full problem 139 rows 76 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -34.0615 to -35.0532 (0.14 seconds)
Cbc0038I Round again with cutoff of -44.1653
Cbc0038I Pass  31: suminf.    4.36943 (37) obj. -44.1653 iterations 0
Cbc0038I Pass  32: suminf.    4.15598 (47) obj. -44.1653 iterations 16
Cbc0038I Pass  33: suminf.    2.16981 (9) obj. -44.1653 iterations 52
Cbc0038I Pass  34: suminf.    2.00825 (10) obj. -44.1653 iterations 4
Cbc0038I Pass  35: suminf.    2.98313 (8) obj. -44.1653 iterations 17
Cbc0038I Pass  36: suminf.    2.13436 (9) obj. -44.1653 iterations 5
Cbc0038I Pass  37: suminf.    2.08814 (8) obj. -44.1653 iterations 3
Cbc0038I Pass  38: suminf.    3.24479 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  39: suminf.    2.74794 (9) obj. -44.1653 iterations 4
Cbc0038I Pass  40: suminf.    2.91804 (8) obj. -44.1653 iterations 13
Cbc0038I Pass  41: suminf.    2.32543 (8) obj. -44.1653 iterations 5
Cbc0038I Pass  42: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  43: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  44: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  45: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  46: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  47: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  48: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  49: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  50: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  51: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  52: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  53: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  54: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  55: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  56: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  57: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  58: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  59: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  60: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 118 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.19 seconds)
Cbc0038I After 0.19 seconds - Feasibility pump exiting with objective of -35.0532 - took 0.17 seconds
Cbc0012I Integer solution of -35.053226 found by feasibility pump after 0 iterations and 0 nodes (0.19 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 56 columns
Cbc0031I 29 added rows had average density of 68.724138
Cbc0013I At root node, 29 cuts changed objective from -70.14613 to -60.723619 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14058 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1529 row cuts average 74.6 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.053226 best solution, best possible -60.723619 (1.16 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 3 rows 5 columns
Cbc0016I Integer solution of -35.157226 found by strong branching after 11151 iterations and 49 nodes (1.50 seconds)
Cbc0001I Search completed - best objective -35.15722599999999, took 12343 iterations and 82 nodes (1.55 seconds)
Cbc0032I Strong branching done 880 times (18088 iterations), fathomed 7 nodes and fixed 49 variables
Cbc0035I Maximum depth 22, 167 variables fixed on reduced cost
Total time (CPU seconds):       1.52   (Wallclock seconds):       1.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-44) rows, 121 (-31) columns and 2085 (-1218) elements
Clp1000I sum of infeasibilities 4.16021e-08 - average 3.782e-10, 59 fixed columns
Coin0506I Presolve 54 (-56) rows, 62 (-59) columns and 226 (-1859) elements
Clp0006I 0  Obj 15.386555 Dual inf 1.0342749 (62)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 3.6377156 - largest nonzero change 3.94884e-05 ( 0.00091204228%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 20.640338
Clp0000I Optimal - objective value 20.640338
Coin0511I After Postsolve, objective 20.640338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 20.640338 Dual inf 36.567947 (46)
Clp0014I Perturbing problem by 0.001% of 2.0136795 - largest nonzero change 1.7959089e-05 ( 0.0011765296%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 78.757184
Clp0000I Optimal - objective value 78.757184
Clp0000I Optimal - objective value 78.757184
Coin0511I After Postsolve, objective 78.757184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.75718363 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 112 rows, 123 columns (123 integer (123 of which binary)) and 2094 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.442%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 11.4815
Cbc0038I Pass   1: suminf.    1.65541 (32) obj. -40.414 iterations 37
Cbc0038I Pass   2: suminf.    1.65541 (32) obj. -40.414 iterations 1
Cbc0038I Pass   3: suminf.    0.74938 (18) obj. -18.9626 iterations 14
Cbc0038I Pass   4: suminf.    0.02632 (1) obj. -1.73562 iterations 17
Cbc0038I Solution found of -0.761932
Cbc0038I Rounding solution of -15.3224 is better than previous of -0.761932

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 123 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -15.3224 to -22.6543 (0.03 seconds)
Cbc0038I Round again with cutoff of -27.4222
Cbc0038I Pass   5: suminf.    1.65541 (32) obj. -40.414 iterations 0
Cbc0038I Pass   6: suminf.    1.65541 (32) obj. -40.414 iterations 1
Cbc0038I Pass   7: suminf.    1.06256 (8) obj. -27.4222 iterations 46
Cbc0038I Pass   8: suminf.    1.06256 (8) obj. -27.4222 iterations 1
Cbc0038I Pass   9: suminf.    0.49025 (2) obj. -27.4222 iterations 15
Cbc0038I Pass  10: suminf.    0.37509 (2) obj. -27.998 iterations 2
Cbc0038I Pass  11: suminf.    0.49025 (2) obj. -27.4222 iterations 2
Cbc0038I Pass  12: suminf.    1.78930 (15) obj. -27.4222 iterations 27
Cbc0038I Pass  13: suminf.    1.78930 (15) obj. -27.4222 iterations 5
Cbc0038I Pass  14: suminf.    1.46284 (10) obj. -27.4222 iterations 21
Cbc0038I Pass  15: suminf.    1.32029 (6) obj. -27.4222 iterations 4
Cbc0038I Pass  16: suminf.    0.83352 (7) obj. -27.4222 iterations 6
Cbc0038I Pass  17: suminf.    1.37878 (6) obj. -27.4222 iterations 5
Cbc0038I Pass  18: suminf.    1.34545 (7) obj. -27.4222 iterations 1
Cbc0038I Pass  19: suminf.    2.12686 (8) obj. -27.4222 iterations 15
Cbc0038I Pass  20: suminf.    1.61919 (8) obj. -27.4222 iterations 12
Cbc0038I Pass  21: suminf.    2.37235 (8) obj. -27.4222 iterations 23
Cbc0038I Pass  22: suminf.    1.53338 (8) obj. -27.4222 iterations 11
Cbc0038I Pass  23: suminf.    2.14651 (8) obj. -27.4222 iterations 15
Cbc0038I Pass  24: suminf.    1.72894 (8) obj. -27.4222 iterations 9
Cbc0038I Pass  25: suminf.    2.73362 (15) obj. -27.4222 iterations 34
Cbc0038I Pass  26: suminf.    2.73362 (15) obj. -27.4222 iterations 9
Cbc0038I Pass  27: suminf.    2.22799 (10) obj. -27.4222 iterations 16
Cbc0038I Pass  28: suminf.    2.20984 (9) obj. -27.4222 iterations 2
Cbc0038I Pass  29: suminf.    2.12126 (7) obj. -27.4222 iterations 12
Cbc0038I Pass  30: suminf.    1.39260 (6) obj. -27.4222 iterations 15
Cbc0038I Pass  31: suminf.    1.97022 (6) obj. -27.4222 iterations 9
Cbc0038I Pass  32: suminf.    1.88066 (6) obj. -27.4222 iterations 6
Cbc0038I Pass  33: suminf.    1.36224 (6) obj. -27.4222 iterations 6
Cbc0038I Pass  34: suminf.    1.46566 (5) obj. -27.4222 iterations 4
Cbc0038I Rounding solution of -23.5092 is better than previous of -22.6543

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 123 columns, reduced to 47 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -23.5092 to -31.4474 (0.06 seconds)
Cbc0038I Round again with cutoff of -39.2244
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.65541 (32) obj. -40.414 iterations 0
Cbc0038I Pass  35: suminf.    1.65541 (32) obj. -40.414 iterations 1
Cbc0038I Pass  36: suminf.    2.02193 (21) obj. -39.2244 iterations 41
Cbc0038I Pass  37: suminf.    1.09494 (13) obj. -39.2244 iterations 6
Cbc0038I Pass  38: suminf.    1.09494 (13) obj. -39.2244 iterations 0
Cbc0038I Pass  39: suminf.    1.50062 (21) obj. -39.2244 iterations 21
Cbc0038I Pass  40: suminf.    1.50062 (21) obj. -39.2244 iterations 0
Cbc0038I Pass  41: suminf.    2.30344 (12) obj. -39.2244 iterations 22
Cbc0038I Pass  42: suminf.    2.30344 (12) obj. -39.2244 iterations 1
Cbc0038I Pass  43: suminf.    1.69718 (19) obj. -39.2244 iterations 14
Cbc0038I Pass  44: suminf.    1.67957 (16) obj. -39.2244 iterations 5
Cbc0038I Pass  45: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I Pass  46: suminf.    1.73632 (16) obj. -39.2244 iterations 6
Cbc0038I Pass  47: suminf.    1.73632 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  48: suminf.    3.26510 (15) obj. -39.2244 iterations 8
Cbc0038I Pass  49: suminf.    1.67957 (16) obj. -39.2244 iterations 5
Cbc0038I Pass  50: suminf.    1.67957 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  51: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I Pass  52: suminf.    1.73632 (16) obj. -39.2244 iterations 6
Cbc0038I Pass  53: suminf.    1.73632 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  54: suminf.    3.26510 (15) obj. -39.2244 iterations 8
Cbc0038I Pass  55: suminf.    1.67957 (16) obj. -39.2244 iterations 5
Cbc0038I Pass  56: suminf.    1.67957 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  57: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I Pass  58: suminf.    1.73632 (16) obj. -39.2244 iterations 6
Cbc0038I Pass  59: suminf.    1.73632 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  60: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I Pass  61: suminf.    1.67957 (16) obj. -39.2244 iterations 12
Cbc0038I Pass  62: suminf.    1.67957 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  63: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -31.4474 - took 0.06 seconds
Cbc0012I Integer solution of -31.447416 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 38 rows 41 columns
Cbc0031I 65 added rows had average density of 35.4
Cbc0013I At root node, 65 cuts changed objective from -70.331882 to -43.203052 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17980 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1949 row cuts average 116.4 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 689 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1348 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 193 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.492 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.447416 best solution, best possible -43.203052 (2.50 seconds)
Cbc0012I Integer solution of -33.752566 found by DiveCoefficient after 7641 iterations and 1 nodes (2.50 seconds)
Cbc0004I Integer solution of -34.968706 found after 7683 iterations and 1 nodes (2.56 seconds)
Cbc0010I After 5 nodes, 4 on tree, -34.968706 best solution, best possible -43.130258 (3.24 seconds)
Cbc0012I Integer solution of -35.041136 found by DiveCoefficient after 8734 iterations and 8 nodes (3.37 seconds)
Cbc0010I After 14 nodes, 3 on tree, -35.041136 best solution, best possible -43.126282 (3.95 seconds)
Cbc0010I After 36 nodes, 6 on tree, -35.041136 best solution, best possible -43.126282 (4.66 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 74 rows 82 columns
Cbc0010I After 55 nodes, 7 on tree, -35.041136 best solution, best possible -43.126282 (5.39 seconds)
Cbc0010I After 69 nodes, 4 on tree, -35.041136 best solution, best possible -43.126282 (6.10 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 77 rows 86 columns
Cbc0012I Integer solution of -35.157226 found by RINS after 12828 iterations and 92 nodes (6.72 seconds)
Cbc0010I After 96 nodes, 6 on tree, -35.157226 best solution, best possible -43.126282 (6.84 seconds)
Cbc0010I After 117 nodes, 4 on tree, -35.157226 best solution, best possible -43.126282 (7.55 seconds)
Cbc0010I After 126 nodes, 5 on tree, -35.157226 best solution, best possible -43.062886 (8.28 seconds)
Cbc0010I After 137 nodes, 7 on tree, -35.157226 best solution, best possible -43.062886 (9.06 seconds)
Cbc0010I After 152 nodes, 9 on tree, -35.157226 best solution, best possible -43.062886 (9.77 seconds)
Cbc0010I After 177 nodes, 12 on tree, -35.157226 best solution, best possible -43.062886 (10.48 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 57 rows 69 columns
Cbc0010I After 208 nodes, 13 on tree, -35.157226 best solution, best possible -43.062886 (11.23 seconds)
Cbc0010I After 240 nodes, 4 on tree, -35.157226 best solution, best possible -43.062886 (11.94 seconds)
Cbc0010I After 253 nodes, 5 on tree, -35.157226 best solution, best possible -43.062886 (12.68 seconds)
Cbc0010I After 273 nodes, 8 on tree, -35.157226 best solution, best possible -43.062886 (13.39 seconds)
Cbc0010I After 301 nodes, 9 on tree, -35.157226 best solution, best possible -43.062886 (14.11 seconds)
Cbc0010I After 325 nodes, 14 on tree, -35.157226 best solution, best possible -43.062886 (14.83 seconds)
Cbc0010I After 348 nodes, 20 on tree, -35.157226 best solution, best possible -43.062886 (15.56 seconds)
Cbc0010I After 373 nodes, 22 on tree, -35.157226 best solution, best possible -43.062886 (16.28 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 69 rows 80 columns
Cbc0010I After 403 nodes, 22 on tree, -35.157226 best solution, best possible -43.062886 (16.98 seconds)
Cbc0010I After 431 nodes, 21 on tree, -35.157226 best solution, best possible -43.062886 (17.70 seconds)
Cbc0010I After 463 nodes, 20 on tree, -35.157226 best solution, best possible -43.062886 (18.40 seconds)
Cbc0010I After 496 nodes, 18 on tree, -35.157226 best solution, best possible -43.062886 (19.15 seconds)
Cbc0001I Search completed - best objective -35.15722599999999, took 45994 iterations and 2103 nodes (19.47 seconds)
Cbc0032I Strong branching done 4166 times (70874 iterations), fathomed 24 nodes and fixed 71 variables
Cbc0041I Maximum depth 32, 503 variables fixed on reduced cost (complete fathoming 29 times, 1573 nodes taking 16456 iterations)
Total time (CPU seconds):       14.50   (Wallclock seconds):       19.49

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 139 (-16) rows, 76 (-2) columns and 422 (-31) elements
Clp1000I sum of infeasibilities 1.80743e-06 - average 1.30031e-08, 7 fixed columns
Coin0506I Presolve 127 (-12) rows, 69 (-7) columns and 384 (-38) elements
Clp0029I End of values pass after 69 iterations
Clp0029I End of values pass after 118 iterations
Clp0014I Perturbing problem by 0.001% of 2.6978201 - largest nonzero change 0 ( 0%) - largest zero change 1.4771173e-05
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Coin0511I After Postsolve, objective 70.14613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Clp0000I Optimal - objective value 70.14613
Coin0511I After Postsolve, objective 70.14613, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.14613035 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 139 rows, 76 columns (75 integer (75 of which binary)) and 422 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 11.3242
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -12.2359 iterations 71
Cbc0038I Solution found of -12.2359
Cbc0038I Relaxing continuous gives -12.2359
Cbc0038I Rounding solution of -19.2346 is better than previous of -12.2359

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -19.2346 to -34.0615 (0.05 seconds)
Cbc0038I Round again with cutoff of -37.6701
Cbc0038I Pass   2: suminf.    2.84987 (37) obj. -37.6701 iterations 41
Cbc0038I Pass   3: suminf.    2.71065 (47) obj. -37.6701 iterations 16
Cbc0038I Pass   4: suminf.    0.74639 (5) obj. -37.6701 iterations 57
Cbc0038I Pass   5: suminf.    0.53381 (4) obj. -37.6701 iterations 6
Cbc0038I Pass   6: suminf.    1.41032 (6) obj. -37.6701 iterations 11
Cbc0038I Pass   7: suminf.    1.35560 (8) obj. -37.6701 iterations 3
Cbc0038I Pass   8: suminf.    2.15531 (7) obj. -37.6701 iterations 14
Cbc0038I Pass   9: suminf.    2.01082 (6) obj. -37.6701 iterations 4
Cbc0038I Pass  10: suminf.    0.97225 (5) obj. -37.6701 iterations 11
Cbc0038I Pass  11: suminf.    0.95563 (5) obj. -37.6701 iterations 2
Cbc0038I Pass  12: suminf.    2.52471 (8) obj. -37.6701 iterations 9
Cbc0038I Pass  13: suminf.    3.35563 (9) obj. -37.6701 iterations 25
Cbc0038I Pass  14: suminf.    2.18343 (7) obj. -37.6701 iterations 8
Cbc0038I Pass  15: suminf.    2.05550 (8) obj. -37.6701 iterations 3
Cbc0038I Pass  16: suminf.    2.08644 (7) obj. -37.6701 iterations 13
Cbc0038I Pass  17: suminf.    1.96515 (6) obj. -37.6701 iterations 5
Cbc0038I Pass  18: suminf.    1.87621 (7) obj. -37.6701 iterations 13
Cbc0038I Pass  19: suminf.    2.33089 (8) obj. -37.6701 iterations 10
Cbc0038I Pass  20: suminf.    1.98955 (7) obj. -37.6701 iterations 6
Cbc0038I Pass  21: suminf.    1.68605 (8) obj. -37.6701 iterations 6
Cbc0038I Pass  22: suminf.    1.19247 (6) obj. -37.6701 iterations 6
Cbc0038I Pass  23: suminf.    1.09459 (5) obj. -37.6701 iterations 1
Cbc0038I Pass  24: suminf.    1.98955 (7) obj. -37.6701 iterations 11
Cbc0038I Pass  25: suminf.    3.21142 (10) obj. -37.6701 iterations 22
Cbc0038I Pass  26: suminf.    2.57555 (11) obj. -37.6701 iterations 7
Cbc0038I Pass  27: suminf.    2.79864 (8) obj. -37.6701 iterations 13
Cbc0038I Pass  28: suminf.    2.54221 (8) obj. -37.6701 iterations 6
Cbc0038I Pass  29: suminf.    1.62518 (9) obj. -37.6701 iterations 12
Cbc0038I Pass  30: suminf.    1.62518 (9) obj. -37.6701 iterations 0
Cbc0038I Pass  31: suminf.    2.76081 (10) obj. -37.6701 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 126 rows 69 columns - 1 fixed gives 116, 68 - ok now
Cbc0038I Full problem 139 rows 76 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound improved solution from -34.0615 to -35.0532 (0.12 seconds)
Cbc0038I Round again with cutoff of -44.1653
Cbc0038I Pass  31: suminf.    4.36943 (37) obj. -44.1653 iterations 0
Cbc0038I Pass  32: suminf.    4.15598 (47) obj. -44.1653 iterations 16
Cbc0038I Pass  33: suminf.    2.16981 (9) obj. -44.1653 iterations 52
Cbc0038I Pass  34: suminf.    2.00825 (10) obj. -44.1653 iterations 4
Cbc0038I Pass  35: suminf.    2.98313 (8) obj. -44.1653 iterations 17
Cbc0038I Pass  36: suminf.    2.13436 (9) obj. -44.1653 iterations 5
Cbc0038I Pass  37: suminf.    2.08814 (8) obj. -44.1653 iterations 3
Cbc0038I Pass  38: suminf.    3.24479 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  39: suminf.    2.74794 (9) obj. -44.1653 iterations 4
Cbc0038I Pass  40: suminf.    2.91804 (8) obj. -44.1653 iterations 13
Cbc0038I Pass  41: suminf.    2.32543 (8) obj. -44.1653 iterations 5
Cbc0038I Pass  42: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  43: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  44: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  45: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  46: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  47: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  48: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  49: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  50: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  51: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  52: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  53: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  54: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  55: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I Pass  56: suminf.    2.32543 (8) obj. -44.1653 iterations 2
Cbc0038I Pass  57: suminf.    2.94236 (8) obj. -44.1653 iterations 12
Cbc0038I Pass  58: suminf.    2.81638 (10) obj. -44.1653 iterations 6
Cbc0038I Pass  59: suminf.    2.95806 (9) obj. -44.1653 iterations 11
Cbc0038I Pass  60: suminf.    2.35419 (9) obj. -44.1653 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 139 rows 76 columns, reduced to 118 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -35.0532 - took 0.17 seconds
Cbc0012I Integer solution of -35.053226 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 102 rows 56 columns
Cbc0031I 29 added rows had average density of 68.724138
Cbc0013I At root node, 29 cuts changed objective from -70.14613 to -60.723619 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14058 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1529 row cuts average 74.6 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 34 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 216 row cuts average 63.1 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -35.053226 best solution, best possible -60.723619 (1.14 seconds)
Cbc0038I Full problem 139 rows 76 columns, reduced to 3 rows 5 columns
Cbc0016I Integer solution of -35.157226 found by strong branching after 11151 iterations and 49 nodes (1.50 seconds)
Cbc0001I Search completed - best objective -35.15722599999999, took 12343 iterations and 82 nodes (1.55 seconds)
Cbc0032I Strong branching done 880 times (18088 iterations), fathomed 7 nodes and fixed 49 variables
Cbc0035I Maximum depth 22, 167 variables fixed on reduced cost
Total time (CPU seconds):       1.54   (Wallclock seconds):       1.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 110 (-45) rows, 121 (-32) columns and 2085 (-1219) elements
Clp1000I sum of infeasibilities 4.16021e-08 - average 3.782e-10, 59 fixed columns
Coin0506I Presolve 54 (-56) rows, 62 (-59) columns and 226 (-1859) elements
Clp0006I 0  Obj 15.386555 Dual inf 1.0342749 (62)
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 3.6377156 - largest nonzero change 3.94884e-05 ( 0.00091204228%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 20.640338
Clp0000I Optimal - objective value 20.640338
Coin0511I After Postsolve, objective 20.640338, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 20.640338 Dual inf 36.567947 (46)
Clp0014I Perturbing problem by 0.001% of 2.0136795 - largest nonzero change 1.7959089e-05 ( 0.0011765296%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 78.757184
Clp0000I Optimal - objective value 78.757184
Clp0000I Optimal - objective value 78.757184
Coin0511I After Postsolve, objective 78.757184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 78.75718363 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 112 rows, 123 columns (123 integer (123 of which binary)) and 2094 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.442%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 11.4815
Cbc0038I Pass   1: suminf.    1.65541 (32) obj. -40.414 iterations 37
Cbc0038I Pass   2: suminf.    1.65541 (32) obj. -40.414 iterations 1
Cbc0038I Pass   3: suminf.    0.74938 (18) obj. -18.9626 iterations 14
Cbc0038I Pass   4: suminf.    0.02632 (1) obj. -1.73562 iterations 17
Cbc0038I Solution found of -0.761932
Cbc0038I Rounding solution of -15.3224 is better than previous of -0.761932

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 123 columns, reduced to 22 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -15.3224 to -22.6543 (0.03 seconds)
Cbc0038I Round again with cutoff of -27.4222
Cbc0038I Pass   5: suminf.    1.65541 (32) obj. -40.414 iterations 0
Cbc0038I Pass   6: suminf.    1.65541 (32) obj. -40.414 iterations 1
Cbc0038I Pass   7: suminf.    1.06256 (8) obj. -27.4222 iterations 46
Cbc0038I Pass   8: suminf.    1.06256 (8) obj. -27.4222 iterations 1
Cbc0038I Pass   9: suminf.    0.49025 (2) obj. -27.4222 iterations 15
Cbc0038I Pass  10: suminf.    0.37509 (2) obj. -27.998 iterations 2
Cbc0038I Pass  11: suminf.    0.49025 (2) obj. -27.4222 iterations 2
Cbc0038I Pass  12: suminf.    1.78930 (15) obj. -27.4222 iterations 27
Cbc0038I Pass  13: suminf.    1.78930 (15) obj. -27.4222 iterations 5
Cbc0038I Pass  14: suminf.    1.46284 (10) obj. -27.4222 iterations 21
Cbc0038I Pass  15: suminf.    1.32029 (6) obj. -27.4222 iterations 4
Cbc0038I Pass  16: suminf.    0.83352 (7) obj. -27.4222 iterations 6
Cbc0038I Pass  17: suminf.    1.37878 (6) obj. -27.4222 iterations 5
Cbc0038I Pass  18: suminf.    1.34545 (7) obj. -27.4222 iterations 1
Cbc0038I Pass  19: suminf.    2.12686 (8) obj. -27.4222 iterations 15
Cbc0038I Pass  20: suminf.    1.61919 (8) obj. -27.4222 iterations 12
Cbc0038I Pass  21: suminf.    2.37235 (8) obj. -27.4222 iterations 23
Cbc0038I Pass  22: suminf.    1.53338 (8) obj. -27.4222 iterations 11
Cbc0038I Pass  23: suminf.    2.14651 (8) obj. -27.4222 iterations 15
Cbc0038I Pass  24: suminf.    1.72894 (8) obj. -27.4222 iterations 9
Cbc0038I Pass  25: suminf.    2.73362 (15) obj. -27.4222 iterations 34
Cbc0038I Pass  26: suminf.    2.73362 (15) obj. -27.4222 iterations 9
Cbc0038I Pass  27: suminf.    2.22799 (10) obj. -27.4222 iterations 16
Cbc0038I Pass  28: suminf.    2.20984 (9) obj. -27.4222 iterations 2
Cbc0038I Pass  29: suminf.    2.12126 (7) obj. -27.4222 iterations 12
Cbc0038I Pass  30: suminf.    1.39260 (6) obj. -27.4222 iterations 15
Cbc0038I Pass  31: suminf.    1.97022 (6) obj. -27.4222 iterations 9
Cbc0038I Pass  32: suminf.    1.88066 (6) obj. -27.4222 iterations 6
Cbc0038I Pass  33: suminf.    1.36224 (6) obj. -27.4222 iterations 6
Cbc0038I Pass  34: suminf.    1.46566 (5) obj. -27.4222 iterations 4
Cbc0038I Rounding solution of -23.5092 is better than previous of -22.6543

Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 123 columns, reduced to 47 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -23.5092 to -31.4474 (0.06 seconds)
Cbc0038I Round again with cutoff of -39.2244
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    1.65541 (32) obj. -40.414 iterations 0
Cbc0038I Pass  35: suminf.    1.65541 (32) obj. -40.414 iterations 1
Cbc0038I Pass  36: suminf.    2.02193 (21) obj. -39.2244 iterations 41
Cbc0038I Pass  37: suminf.    1.09494 (13) obj. -39.2244 iterations 6
Cbc0038I Pass  38: suminf.    1.09494 (13) obj. -39.2244 iterations 0
Cbc0038I Pass  39: suminf.    1.50062 (21) obj. -39.2244 iterations 21
Cbc0038I Pass  40: suminf.    1.50062 (21) obj. -39.2244 iterations 0
Cbc0038I Pass  41: suminf.    2.30344 (12) obj. -39.2244 iterations 22
Cbc0038I Pass  42: suminf.    2.30344 (12) obj. -39.2244 iterations 1
Cbc0038I Pass  43: suminf.    1.69718 (19) obj. -39.2244 iterations 14
Cbc0038I Pass  44: suminf.    1.67957 (16) obj. -39.2244 iterations 5
Cbc0038I Pass  45: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I Pass  46: suminf.    1.73632 (16) obj. -39.2244 iterations 6
Cbc0038I Pass  47: suminf.    1.73632 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  48: suminf.    3.26510 (15) obj. -39.2244 iterations 8
Cbc0038I Pass  49: suminf.    1.67957 (16) obj. -39.2244 iterations 5
Cbc0038I Pass  50: suminf.    1.67957 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  51: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I Pass  52: suminf.    1.73632 (16) obj. -39.2244 iterations 6
Cbc0038I Pass  53: suminf.    1.73632 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  54: suminf.    3.26510 (15) obj. -39.2244 iterations 8
Cbc0038I Pass  55: suminf.    1.67957 (16) obj. -39.2244 iterations 5
Cbc0038I Pass  56: suminf.    1.67957 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  57: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I Pass  58: suminf.    1.73632 (16) obj. -39.2244 iterations 6
Cbc0038I Pass  59: suminf.    1.73632 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  60: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I Pass  61: suminf.    1.67957 (16) obj. -39.2244 iterations 12
Cbc0038I Pass  62: suminf.    1.67957 (16) obj. -39.2244 iterations 0
Cbc0038I Pass  63: suminf.    3.56209 (15) obj. -39.2244 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -31.4474 - took 0.06 seconds
Cbc0012I Integer solution of -31.447416 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 38 rows 41 columns
Cbc0031I 65 added rows had average density of 35.4
Cbc0013I At root node, 65 cuts changed objective from -70.331882 to -43.203052 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17980 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1949 row cuts average 116.4 elements, 0 column cuts (0 active)  in 0.191 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 689 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1348 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 358 row cuts average 65.1 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 193 row cuts average 8.9 elements, 0 column cuts (0 active)  in 0.492 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -31.447416 best solution, best possible -43.203052 (2.54 seconds)
Cbc0012I Integer solution of -33.752566 found by DiveCoefficient after 7641 iterations and 1 nodes (2.54 seconds)
Cbc0004I Integer solution of -34.968706 found after 7683 iterations and 1 nodes (2.60 seconds)
Cbc0010I After 5 nodes, 4 on tree, -34.968706 best solution, best possible -43.130258 (3.28 seconds)
Cbc0012I Integer solution of -35.041136 found by DiveCoefficient after 8734 iterations and 8 nodes (3.42 seconds)
Cbc0010I After 14 nodes, 3 on tree, -35.041136 best solution, best possible -43.126282 (4.00 seconds)
Cbc0010I After 36 nodes, 6 on tree, -35.041136 best solution, best possible -43.126282 (4.72 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 74 rows 82 columns
Cbc0010I After 55 nodes, 7 on tree, -35.041136 best solution, best possible -43.126282 (5.46 seconds)
Cbc0010I After 69 nodes, 4 on tree, -35.041136 best solution, best possible -43.126282 (6.18 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 77 rows 86 columns
Cbc0012I Integer solution of -35.157226 found by RINS after 12828 iterations and 92 nodes (6.80 seconds)
Cbc0010I After 93 nodes, 7 on tree, -35.157226 best solution, best possible -43.126282 (6.88 seconds)
Cbc0010I After 114 nodes, 6 on tree, -35.157226 best solution, best possible -43.126282 (7.60 seconds)
Cbc0010I After 126 nodes, 5 on tree, -35.157226 best solution, best possible -43.062886 (8.45 seconds)
Cbc0010I After 137 nodes, 7 on tree, -35.157226 best solution, best possible -43.062886 (9.20 seconds)
Cbc0010I After 152 nodes, 9 on tree, -35.157226 best solution, best possible -43.062886 (9.92 seconds)
Cbc0010I After 175 nodes, 14 on tree, -35.157226 best solution, best possible -43.062886 (10.66 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 57 rows 69 columns
Cbc0010I After 202 nodes, 17 on tree, -35.157226 best solution, best possible -43.062886 (11.39 seconds)
Cbc0010I After 234 nodes, 7 on tree, -35.157226 best solution, best possible -43.062886 (12.12 seconds)
Cbc0010I After 252 nodes, 6 on tree, -35.157226 best solution, best possible -43.062886 (12.86 seconds)
Cbc0010I After 270 nodes, 9 on tree, -35.157226 best solution, best possible -43.062886 (13.59 seconds)
Cbc0010I After 298 nodes, 8 on tree, -35.157226 best solution, best possible -43.062886 (14.29 seconds)
Cbc0010I After 321 nodes, 13 on tree, -35.157226 best solution, best possible -43.062886 (15.03 seconds)
Cbc0010I After 343 nodes, 21 on tree, -35.157226 best solution, best possible -43.062886 (15.78 seconds)
Cbc0010I After 370 nodes, 20 on tree, -35.157226 best solution, best possible -43.062886 (16.50 seconds)
Cbc0010I After 399 nodes, 22 on tree, -35.157226 best solution, best possible -43.062886 (17.20 seconds)
Cbc0038I Full problem 112 rows 123 columns, reduced to 69 rows 80 columns
Cbc0010I After 423 nodes, 23 on tree, -35.157226 best solution, best possible -43.062886 (17.90 seconds)
Cbc0010I After 451 nodes, 21 on tree, -35.157226 best solution, best possible -43.062886 (18.65 seconds)
Cbc0010I After 486 nodes, 20 on tree, -35.157226 best solution, best possible -43.062886 (19.35 seconds)
Cbc0001I Search completed - best objective -35.15722599999999, took 45994 iterations and 2103 nodes (19.97 seconds)
Cbc0032I Strong branching done 4166 times (70874 iterations), fathomed 24 nodes and fixed 71 variables
Cbc0041I Maximum depth 32, 503 variables fixed on reduced cost (complete fathoming 29 times, 1573 nodes taking 16456 iterations)
Total time (CPU seconds):       14.71   (Wallclock seconds):       19.99

