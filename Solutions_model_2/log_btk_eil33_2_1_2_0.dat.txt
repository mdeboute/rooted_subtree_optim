Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 1.09654e-05 - average 1.85854e-07, 4 fixed columns
Coin0506I Presolve 50 (-9) rows, 29 (-4) columns and 150 (-26) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Coin0511I After Postsolve, objective 73.365568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Coin0511I After Postsolve, objective 73.365568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.36556756 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.43681
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.57827 iterations 23
Cbc0038I Solution found of -1.57827
Cbc0038I Relaxing continuous gives -1.57827
Cbc0038I Rounding solution of -29.4903 is better than previous of -1.57827

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -29.4903 to -30.679 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.4235
Cbc0038I Pass   2: suminf.    1.38256 (6) obj. -34.4235 iterations 5
Cbc0038I Pass   3: suminf.    1.17243 (5) obj. -34.4235 iterations 1
Cbc0038I Pass   4: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass   5: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass   6: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass   7: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass   8: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass   9: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  10: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  11: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  12: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  13: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  14: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  15: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  16: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  17: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  18: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  19: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  20: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  21: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  22: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  23: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  24: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  25: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  26: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  27: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  28: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  29: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  30: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  31: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30.679 - took 0.05 seconds
Cbc0012I Integer solution of -30.678975 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 27.833333
Cbc0013I At root node, 12 cuts changed objective from -68.122996 to -50.145941 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2849 row cuts average 3.7 elements, 2 column cuts (2 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 800 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30.67897499999999, took 3342 iterations and 8 nodes (0.24 seconds)
Cbc0032I Strong branching done 140 times (2063 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-13) rows, 60 (-6) columns and 578 (-145) elements
Clp1000I sum of infeasibilities 7.14918e-09 - average 1.29985e-10, 10 fixed columns
Coin0506I Presolve 46 (-9) rows, 50 (-10) columns and 444 (-134) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 1.5333965 - largest nonzero change 0 ( 0%) - largest zero change 2.3508863e-05
Clp0000I Optimal - objective value 97.212931
Clp0000I Optimal - objective value 97.212931
Coin0511I After Postsolve, objective 97.212931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6146373 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 99.869076
Clp0000I Optimal - objective value 99.869076
Clp0000I Optimal - objective value 99.869076
Coin0511I After Postsolve, objective 99.869076, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.86907587 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 60 columns (60 integer (60 of which binary)) and 587 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.410%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 4.21658
Cbc0038I Pass   1: suminf.    1.64523 (13) obj. -55.4138 iterations 9
Cbc0038I Pass   2: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass   3: suminf.    0.18799 (3) obj. -22.728 iterations 10
Cbc0038I Solution found of -18.0373
Cbc0038I Rounding solution of -27.6504 is better than previous of -18.0373

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.4696
Cbc0038I Pass   4: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass   5: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass   6: suminf.    0.80460 (10) obj. -33.4696 iterations 19
Cbc0038I Pass   7: suminf.    0.52316 (3) obj. -33.4696 iterations 2
Cbc0038I Pass   8: suminf.    0.57912 (2) obj. -33.4696 iterations 2
Cbc0038I Pass   9: suminf.    0.57912 (2) obj. -33.4696 iterations 0
Cbc0038I Pass  10: suminf.    1.81016 (12) obj. -33.4696 iterations 12
Cbc0038I Pass  11: suminf.    1.81016 (12) obj. -33.4696 iterations 1
Cbc0038I Pass  12: suminf.    1.10201 (6) obj. -33.4696 iterations 16
Cbc0038I Pass  13: suminf.    1.10201 (6) obj. -33.4696 iterations 0
Cbc0038I Pass  14: suminf.    1.23624 (4) obj. -33.4696 iterations 5
Cbc0038I Pass  15: suminf.    0.51963 (3) obj. -33.4696 iterations 2
Cbc0038I Pass  16: suminf.    1.23624 (4) obj. -33.4696 iterations 3
Cbc0038I Pass  17: suminf.    1.12243 (6) obj. -33.4696 iterations 10
Cbc0038I Pass  18: suminf.    0.76985 (6) obj. -36.6428 iterations 3
Cbc0038I Pass  19: suminf.    0.86236 (5) obj. -33.4696 iterations 6
Cbc0038I Pass  20: suminf.    0.86236 (5) obj. -33.4696 iterations 1
Cbc0038I Pass  21: suminf.    0.81401 (4) obj. -33.4696 iterations 2
Cbc0038I Pass  22: suminf.    0.81401 (4) obj. -33.4696 iterations 0
Cbc0038I Pass  23: suminf.    0.75640 (4) obj. -33.4696 iterations 1
Cbc0038I Pass  24: suminf.    0.75640 (4) obj. -33.4696 iterations 0
Cbc0038I Pass  25: suminf.    0.81401 (4) obj. -33.4696 iterations 2
Cbc0038I Pass  26: suminf.    2.72803 (14) obj. -33.4696 iterations 16
Cbc0038I Pass  27: suminf.    1.66201 (10) obj. -33.4696 iterations 6
Cbc0038I Pass  28: suminf.    1.38083 (9) obj. -33.4696 iterations 2
Cbc0038I Pass  29: suminf.    1.41877 (6) obj. -33.4696 iterations 8
Cbc0038I Pass  30: suminf.    1.10529 (5) obj. -33.4696 iterations 1
Cbc0038I Pass  31: suminf.    0.67411 (4) obj. -36.4879 iterations 1
Cbc0038I Pass  32: suminf.    1.00948 (4) obj. -33.4696 iterations 3
Cbc0038I Pass  33: suminf.    1.75459 (16) obj. -33.4696 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -18.0373 to -30.679 (0.04 seconds)
Cbc0038I Round again with cutoff of -43.9441
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass  34: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass  35: suminf.    1.36738 (10) obj. -43.9441 iterations 16
Cbc0038I Pass  36: suminf.    0.89680 (8) obj. -45.3858 iterations 2
Cbc0038I Pass  37: suminf.    1.02685 (4) obj. -43.9441 iterations 13
Cbc0038I Pass  38: suminf.    0.59720 (4) obj. -43.9441 iterations 1
Cbc0038I Pass  39: suminf.    1.04728 (5) obj. -43.9441 iterations 4
Cbc0038I Pass  40: suminf.    1.43168 (9) obj. -43.9441 iterations 12
Cbc0038I Pass  41: suminf.    1.29085 (7) obj. -43.9441 iterations 2
Cbc0038I Pass  42: suminf.    0.73397 (5) obj. -43.9441 iterations 6
Cbc0038I Pass  43: suminf.    0.73397 (5) obj. -43.9441 iterations 0
Cbc0038I Pass  44: suminf.    0.99893 (5) obj. -43.9441 iterations 2
Cbc0038I Pass  45: suminf.    0.99893 (5) obj. -43.9441 iterations 0
Cbc0038I Pass  46: suminf.    0.73397 (5) obj. -43.9441 iterations 2
Cbc0038I Pass  47: suminf.    1.65303 (10) obj. -43.9441 iterations 10
Cbc0038I Pass  48: suminf.    1.62687 (9) obj. -43.9441 iterations 4
Cbc0038I Pass  49: suminf.    0.81539 (5) obj. -43.9441 iterations 11
Cbc0038I Pass  50: suminf.    0.81539 (5) obj. -43.9441 iterations 1
Cbc0038I Pass  51: suminf.    1.10556 (6) obj. -43.9441 iterations 3
Cbc0038I Pass  52: suminf.    1.07817 (5) obj. -43.9441 iterations 1
Cbc0038I Pass  53: suminf.    0.83771 (6) obj. -43.9441 iterations 3
Cbc0038I Pass  54: suminf.    2.55664 (11) obj. -43.9441 iterations 14
Cbc0038I Pass  55: suminf.    2.55664 (11) obj. -43.9441 iterations 0
Cbc0038I Pass  56: suminf.    1.56887 (7) obj. -43.9441 iterations 6
Cbc0038I Pass  57: suminf.    1.54656 (9) obj. -43.9441 iterations 1
Cbc0038I Pass  58: suminf.    0.99058 (7) obj. -43.9441 iterations 6
Cbc0038I Pass  59: suminf.    0.94398 (5) obj. -43.9441 iterations 3
Cbc0038I Pass  60: suminf.    0.68629 (5) obj. -43.9441 iterations 3
Cbc0038I Pass  61: suminf.    0.66442 (4) obj. -43.9917 iterations 2
Cbc0038I Pass  62: suminf.    0.68629 (5) obj. -43.9441 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -30.679 - took 0.04 seconds
Cbc0012I Integer solution of -30.678975 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 54 rows 60 columns, reduced to 3 rows 3 columns
Cbc0031I 19 added rows had average density of 5.2631579
Cbc0013I At root node, 34 cuts changed objective from -85.841922 to -30.678975 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 282 row cuts average 4.1 elements, 17 column cuts (17 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 15 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 45 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.67897499999999, took 202 iterations and 0 nodes (0.17 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.12   (Wallclock seconds):       0.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 59 (-10) rows, 33 (-2) columns and 176 (-19) elements
Clp1000I sum of infeasibilities 1.09654e-05 - average 1.85854e-07, 4 fixed columns
Coin0506I Presolve 50 (-9) rows, 29 (-4) columns and 150 (-26) elements
Clp0029I End of values pass after 29 iterations
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Coin0511I After Postsolve, objective 73.365568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Clp0000I Optimal - objective value 73.365568
Coin0511I After Postsolve, objective 73.365568, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 73.36556756 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 58 rows, 33 columns (32 integer (32 of which binary)) and 181 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 27 integers unsatisfied sum - 7.43681
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -1.57827 iterations 23
Cbc0038I Solution found of -1.57827
Cbc0038I Relaxing continuous gives -1.57827
Cbc0038I Rounding solution of -29.4903 is better than previous of -1.57827

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -29.4903 to -30.679 (0.02 seconds)
Cbc0038I Round again with cutoff of -34.4235
Cbc0038I Pass   2: suminf.    1.38256 (6) obj. -34.4235 iterations 5
Cbc0038I Pass   3: suminf.    1.17243 (5) obj. -34.4235 iterations 1
Cbc0038I Pass   4: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass   5: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass   6: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass   7: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass   8: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass   9: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  10: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  11: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  12: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  13: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  14: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  15: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  16: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  17: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  18: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  19: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  20: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  21: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  22: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  23: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  24: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  25: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I Pass  26: suminf.    0.87331 (5) obj. -34.4235 iterations 1
Cbc0038I Pass  27: suminf.    0.58368 (4) obj. -34.4235 iterations 1
Cbc0038I Pass  28: suminf.    0.58368 (4) obj. -34.4235 iterations 0
Cbc0038I Pass  29: suminf.    0.83872 (3) obj. -34.4235 iterations 7
Cbc0038I Pass  30: suminf.    0.74568 (4) obj. -34.4235 iterations 2
Cbc0038I Pass  31: suminf.    1.37882 (5) obj. -34.4235 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 58 rows 33 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -30.679 - took 0.02 seconds
Cbc0012I Integer solution of -30.678975 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0031I 12 added rows had average density of 27.833333
Cbc0013I At root node, 12 cuts changed objective from -68.122996 to -50.145941 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2849 row cuts average 3.7 elements, 2 column cuts (2 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 800 row cuts average 32.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 85 row cuts average 4.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0001I Search completed - best objective -30.67897499999999, took 3342 iterations and 8 nodes (0.23 seconds)
Cbc0032I Strong branching done 140 times (2063 iterations), fathomed 1 nodes and fixed 11 variables
Cbc0035I Maximum depth 3, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 60 (-7) columns and 578 (-146) elements
Clp1000I sum of infeasibilities 7.14918e-09 - average 1.29985e-10, 10 fixed columns
Coin0506I Presolve 46 (-9) rows, 50 (-10) columns and 444 (-134) elements
Clp0029I End of values pass after 48 iterations
Clp0014I Perturbing problem by 0.001% of 1.5333965 - largest nonzero change 0 ( 0%) - largest zero change 2.3508863e-05
Clp0000I Optimal - objective value 97.212931
Clp0000I Optimal - objective value 97.212931
Coin0511I After Postsolve, objective 97.212931, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.6146373 - largest nonzero change 0 ( 0%) - largest zero change 2.3530591e-05
Clp0000I Optimal - objective value 99.869076
Clp0000I Optimal - objective value 99.869076
Clp0000I Optimal - objective value 99.869076
Coin0511I After Postsolve, objective 99.869076, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 99.86907587 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 34 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0004I processed model has 54 rows, 60 columns (60 integer (60 of which binary)) and 587 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.410%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 4.21658
Cbc0038I Pass   1: suminf.    1.64523 (13) obj. -55.4138 iterations 9
Cbc0038I Pass   2: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass   3: suminf.    0.18799 (3) obj. -22.728 iterations 10
Cbc0038I Solution found of -18.0373
Cbc0038I Rounding solution of -27.6504 is better than previous of -18.0373

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -33.4696
Cbc0038I Pass   4: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass   5: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass   6: suminf.    0.80460 (10) obj. -33.4696 iterations 19
Cbc0038I Pass   7: suminf.    0.52316 (3) obj. -33.4696 iterations 2
Cbc0038I Pass   8: suminf.    0.57912 (2) obj. -33.4696 iterations 2
Cbc0038I Pass   9: suminf.    0.57912 (2) obj. -33.4696 iterations 0
Cbc0038I Pass  10: suminf.    1.81016 (12) obj. -33.4696 iterations 12
Cbc0038I Pass  11: suminf.    1.81016 (12) obj. -33.4696 iterations 1
Cbc0038I Pass  12: suminf.    1.10201 (6) obj. -33.4696 iterations 16
Cbc0038I Pass  13: suminf.    1.10201 (6) obj. -33.4696 iterations 0
Cbc0038I Pass  14: suminf.    1.23624 (4) obj. -33.4696 iterations 5
Cbc0038I Pass  15: suminf.    0.51963 (3) obj. -33.4696 iterations 2
Cbc0038I Pass  16: suminf.    1.23624 (4) obj. -33.4696 iterations 3
Cbc0038I Pass  17: suminf.    1.12243 (6) obj. -33.4696 iterations 10
Cbc0038I Pass  18: suminf.    0.76985 (6) obj. -36.6428 iterations 3
Cbc0038I Pass  19: suminf.    0.86236 (5) obj. -33.4696 iterations 6
Cbc0038I Pass  20: suminf.    0.86236 (5) obj. -33.4696 iterations 1
Cbc0038I Pass  21: suminf.    0.81401 (4) obj. -33.4696 iterations 2
Cbc0038I Pass  22: suminf.    0.81401 (4) obj. -33.4696 iterations 0
Cbc0038I Pass  23: suminf.    0.75640 (4) obj. -33.4696 iterations 1
Cbc0038I Pass  24: suminf.    0.75640 (4) obj. -33.4696 iterations 0
Cbc0038I Pass  25: suminf.    0.81401 (4) obj. -33.4696 iterations 2
Cbc0038I Pass  26: suminf.    2.72803 (14) obj. -33.4696 iterations 16
Cbc0038I Pass  27: suminf.    1.66201 (10) obj. -33.4696 iterations 6
Cbc0038I Pass  28: suminf.    1.38083 (9) obj. -33.4696 iterations 2
Cbc0038I Pass  29: suminf.    1.41877 (6) obj. -33.4696 iterations 8
Cbc0038I Pass  30: suminf.    1.10529 (5) obj. -33.4696 iterations 1
Cbc0038I Pass  31: suminf.    0.67411 (4) obj. -36.4879 iterations 1
Cbc0038I Pass  32: suminf.    1.00948 (4) obj. -33.4696 iterations 3
Cbc0038I Pass  33: suminf.    1.75459 (16) obj. -33.4696 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 33 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -18.0373 to -30.679 (0.05 seconds)
Cbc0038I Round again with cutoff of -43.9441
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass  34: suminf.    1.64523 (13) obj. -55.4138 iterations 0
Cbc0038I Pass  35: suminf.    1.36738 (10) obj. -43.9441 iterations 16
Cbc0038I Pass  36: suminf.    0.89680 (8) obj. -45.3858 iterations 2
Cbc0038I Pass  37: suminf.    1.02685 (4) obj. -43.9441 iterations 13
Cbc0038I Pass  38: suminf.    0.59720 (4) obj. -43.9441 iterations 1
Cbc0038I Pass  39: suminf.    1.04728 (5) obj. -43.9441 iterations 4
Cbc0038I Pass  40: suminf.    1.43168 (9) obj. -43.9441 iterations 12
Cbc0038I Pass  41: suminf.    1.29085 (7) obj. -43.9441 iterations 2
Cbc0038I Pass  42: suminf.    0.73397 (5) obj. -43.9441 iterations 6
Cbc0038I Pass  43: suminf.    0.73397 (5) obj. -43.9441 iterations 0
Cbc0038I Pass  44: suminf.    0.99893 (5) obj. -43.9441 iterations 2
Cbc0038I Pass  45: suminf.    0.99893 (5) obj. -43.9441 iterations 0
Cbc0038I Pass  46: suminf.    0.73397 (5) obj. -43.9441 iterations 2
Cbc0038I Pass  47: suminf.    1.65303 (10) obj. -43.9441 iterations 10
Cbc0038I Pass  48: suminf.    1.62687 (9) obj. -43.9441 iterations 4
Cbc0038I Pass  49: suminf.    0.81539 (5) obj. -43.9441 iterations 11
Cbc0038I Pass  50: suminf.    0.81539 (5) obj. -43.9441 iterations 1
Cbc0038I Pass  51: suminf.    1.10556 (6) obj. -43.9441 iterations 3
Cbc0038I Pass  52: suminf.    1.07817 (5) obj. -43.9441 iterations 1
Cbc0038I Pass  53: suminf.    0.83771 (6) obj. -43.9441 iterations 3
Cbc0038I Pass  54: suminf.    2.55664 (11) obj. -43.9441 iterations 14
Cbc0038I Pass  55: suminf.    2.55664 (11) obj. -43.9441 iterations 0
Cbc0038I Pass  56: suminf.    1.56887 (7) obj. -43.9441 iterations 6
Cbc0038I Pass  57: suminf.    1.54656 (9) obj. -43.9441 iterations 1
Cbc0038I Pass  58: suminf.    0.99058 (7) obj. -43.9441 iterations 6
Cbc0038I Pass  59: suminf.    0.94398 (5) obj. -43.9441 iterations 3
Cbc0038I Pass  60: suminf.    0.68629 (5) obj. -43.9441 iterations 3
Cbc0038I Pass  61: suminf.    0.66442 (4) obj. -43.9917 iterations 2
Cbc0038I Pass  62: suminf.    0.68629 (5) obj. -43.9441 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 54 rows 60 columns, reduced to 25 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -30.679 - took 0.04 seconds
Cbc0012I Integer solution of -30.678975 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 54 rows 60 columns, reduced to 3 rows 3 columns
Cbc0031I 19 added rows had average density of 5.2631579
Cbc0013I At root node, 34 cuts changed objective from -85.841922 to -30.678975 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 282 row cuts average 4.1 elements, 17 column cuts (17 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 44 row cuts average 23.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 23 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 30 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 15 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 45 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 16.1 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0001I Search completed - best objective -30.67897499999999, took 202 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.19

