Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 67 (-11) columns and 384 (-69) elements
Clp1000I sum of infeasibilities 7.53197e-05 - average 5.83874e-07, 13 fixed columns
Coin0506I Presolve 96 (-33) rows, 53 (-14) columns and 291 (-93) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 2.0032158 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Coin0511I After Postsolve, objective 54.785146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Coin0511I After Postsolve, objective 54.785146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.78514623 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 67 columns (66 integer (66 of which binary)) and 453 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.996%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 3.50946
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.6211 iterations 42
Cbc0038I Solution found of -14.6211
Cbc0038I Relaxing continuous gives -14.6211
Cbc0038I Rounding solution of -19.556 is better than previous of -14.6211

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 45 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -19.556 to -20.9195 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.1759
Cbc0038I Pass   2: suminf.    0.57144 (5) obj. -24.1759 iterations 5
Cbc0038I Pass   3: suminf.    0.93050 (3) obj. -24.1759 iterations 7
Cbc0038I Pass   4: suminf.    0.39139 (3) obj. -24.1759 iterations 2
Cbc0038I Pass   5: suminf.    0.51370 (2) obj. -24.1759 iterations 4
Cbc0038I Pass   6: suminf.    0.49253 (2) obj. -24.1759 iterations 1
Cbc0038I Pass   7: suminf.    0.41401 (1) obj. -24.1759 iterations 2
Cbc0038I Pass   8: suminf.    0.13162 (1) obj. -24.1759 iterations 1
Cbc0038I Pass   9: suminf.    3.38733 (9) obj. -24.1759 iterations 16
Cbc0038I Pass  10: suminf.    1.22606 (5) obj. -24.1759 iterations 22
Cbc0038I Pass  11: suminf.    1.50741 (5) obj. -24.1759 iterations 5
Cbc0038I Pass  12: suminf.    1.35467 (5) obj. -24.1759 iterations 2
Cbc0038I Pass  13: suminf.    0.98076 (5) obj. -24.1759 iterations 3
Cbc0038I Pass  14: suminf.    0.83701 (5) obj. -24.1759 iterations 5
Cbc0038I Pass  15: suminf.    1.47825 (5) obj. -24.1759 iterations 6
Cbc0038I Pass  16: suminf.    1.78191 (10) obj. -24.1759 iterations 16
Cbc0038I Pass  17: suminf.    0.91922 (4) obj. -24.1759 iterations 15
Cbc0038I Pass  18: suminf.    0.41512 (5) obj. -24.1759 iterations 9
Cbc0038I Pass  19: suminf.    0.71590 (3) obj. -24.1759 iterations 7
Cbc0038I Pass  20: suminf.    0.14286 (1) obj. -24.1759 iterations 2
Cbc0038I Pass  21: suminf.    0.24851 (2) obj. -24.1759 iterations 3
Cbc0038I Pass  22: suminf.    0.68877 (2) obj. -24.1759 iterations 2
Cbc0038I Pass  23: suminf.    4.54413 (18) obj. -24.1759 iterations 20
Cbc0038I Pass  24: suminf.    1.22451 (7) obj. -24.1759 iterations 27
Cbc0038I Pass  25: suminf.    0.93050 (3) obj. -24.1759 iterations 9
Cbc0038I Pass  26: suminf.    0.39139 (3) obj. -24.1759 iterations 2
Cbc0038I Pass  27: suminf.    0.51370 (2) obj. -24.1759 iterations 4
Cbc0038I Pass  28: suminf.    0.49253 (2) obj. -24.1759 iterations 1
Cbc0038I Pass  29: suminf.    0.41401 (1) obj. -24.1759 iterations 2
Cbc0038I Pass  30: suminf.    0.13162 (1) obj. -24.1759 iterations 1
Cbc0038I Pass  31: suminf.    1.54304 (8) obj. -24.1759 iterations 7
Cbc0038I Rounding solution of -25.0749 is better than previous of -20.9195

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 83 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -30.7566
Cbc0038I Pass  31: suminf.    0.98706 (6) obj. -30.7566 iterations 2
Cbc0038I Pass  32: suminf.    0.78378 (3) obj. -30.7566 iterations 11
Cbc0038I Pass  33: suminf.    0.70483 (3) obj. -30.7566 iterations 1
Cbc0038I Pass  34: suminf.    0.82193 (5) obj. -30.7566 iterations 7
Cbc0038I Pass  35: suminf.    0.82193 (5) obj. -30.7566 iterations 0
Cbc0038I Pass  36: suminf.    1.59950 (5) obj. -30.7566 iterations 16
Cbc0038I Pass  37: suminf.    0.81322 (3) obj. -30.7566 iterations 11
Cbc0038I Pass  38: suminf.    0.50356 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  39: suminf.    0.58132 (2) obj. -30.7566 iterations 4
Cbc0038I Pass  40: suminf.    0.24104 (2) obj. -30.7566 iterations 1
Cbc0038I Pass  41: suminf.    0.57472 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  42: suminf.    0.57472 (3) obj. -30.7566 iterations 0
Cbc0038I Pass  43: suminf.    0.58132 (2) obj. -30.7566 iterations 2
Cbc0038I Pass  44: suminf.    1.57666 (7) obj. -30.7566 iterations 10
Cbc0038I Pass  45: suminf.    0.58244 (4) obj. -30.7566 iterations 8
Cbc0038I Pass  46: suminf.    1.29804 (4) obj. -30.7566 iterations 5
Cbc0038I Pass  47: suminf.    1.29804 (4) obj. -30.7566 iterations 0
Cbc0038I Pass  48: suminf.    0.90279 (4) obj. -30.7566 iterations 3
Cbc0038I Pass  49: suminf.    0.90279 (4) obj. -30.7566 iterations 0
Cbc0038I Pass  50: suminf.    1.11737 (4) obj. -30.7566 iterations 3
Cbc0038I Pass  51: suminf.    1.11227 (4) obj. -30.7566 iterations 2
Cbc0038I Pass  52: suminf.    1.00167 (4) obj. -30.7566 iterations 2
Cbc0038I Pass  53: suminf.    0.75899 (4) obj. -30.7566 iterations 12
Cbc0038I Pass  54: suminf.    0.50356 (3) obj. -30.7566 iterations 7
Cbc0038I Pass  55: suminf.    0.58132 (2) obj. -30.7566 iterations 4
Cbc0038I Pass  56: suminf.    0.24104 (2) obj. -30.7566 iterations 1
Cbc0038I Pass  57: suminf.    0.57472 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  58: suminf.    0.57472 (3) obj. -30.7566 iterations 0
Cbc0038I Pass  59: suminf.    0.58132 (2) obj. -30.7566 iterations 2
Cbc0038I Pass  60: suminf.    0.46534 (2) obj. -30.7566 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -25.0749 - took 0.05 seconds
Cbc0012I Integer solution of -25.07486 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 122 rows 67 columns, reduced to 46 rows 25 columns
Cbc0031I 18 added rows had average density of 40.055556
Cbc0013I At root node, 18 cuts changed objective from -53.482955 to -37.775913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4269 row cuts average 7.8 elements, 1 column cuts (1 active)  in 0.079 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1359 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 295 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 116 row cuts average 60.9 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.07486, took 5136 iterations and 40 nodes (0.60 seconds)
Cbc0032I Strong branching done 618 times (9829 iterations), fathomed 1 nodes and fixed 15 variables
Cbc0035I Maximum depth 10, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 120 (-34) rows, 123 (-29) columns and 2255 (-1048) elements
Clp1000I sum of infeasibilities 1.20998e-06 - average 1.00831e-08, 114 fixed columns
Coin0506I Presolve 8 (-112) rows, 8 (-115) columns and 27 (-2228) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 116.8687
Clp0000I Optimal - objective value 116.8687
Coin0511I After Postsolve, objective 116.8687, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0486232 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 217.24755
Clp0000I Optimal - objective value 217.24755
Clp0000I Optimal - objective value 217.24755
Coin0511I After Postsolve, objective 217.24755, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 217.2475527 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 77 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 112 rows, 123 columns (123 integer (123 of which binary)) and 2302 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.284%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 11.3287
Cbc0038I Pass   1: suminf.    0.44211 (16) obj. -9.60471 iterations 63
Cbc0038I Pass   2: suminf.    0.44211 (16) obj. -9.60471 iterations 1
Cbc0038I Pass   3: suminf.    0.03670 (2) obj. 17.5672 iterations 28
Cbc0038I Solution found of 20.512
Cbc0038I Rounding solution of 0.03094 is better than previous of 20.512

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 123 columns, reduced to 34 rows 36 columns
Cbc0038I Mini branch and bound improved solution from 0.03094 to -107.488 (0.06 seconds)
Cbc0038I Round again with cutoff of -113.747
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.80049 (50) obj. -113.747 iterations 35
Cbc0038I Pass   5: suminf.    3.29445 (51) obj. -113.747 iterations 1
Cbc0038I Pass   6: suminf.    4.42806 (23) obj. -113.747 iterations 33
Cbc0038I Pass   7: suminf.    4.41060 (22) obj. -113.747 iterations 3
Cbc0038I Pass   8: suminf.    2.09653 (12) obj. -113.747 iterations 13
Cbc0038I Pass   9: suminf.    1.95678 (11) obj. -113.747 iterations 1
Cbc0038I Pass  10: suminf.    0.58514 (2) obj. -113.747 iterations 16
Cbc0038I Pass  11: suminf.    0.58514 (2) obj. -113.747 iterations 0
Cbc0038I Pass  12: suminf.    0.57534 (2) obj. -113.747 iterations 1
Cbc0038I Pass  13: suminf.    2.94857 (14) obj. -113.747 iterations 19
Cbc0038I Pass  14: suminf.    2.47790 (13) obj. -113.747 iterations 4
Cbc0038I Pass  15: suminf.    1.17261 (5) obj. -113.747 iterations 19
Cbc0038I Pass  16: suminf.    0.76916 (4) obj. -113.747 iterations 5
Cbc0038I Pass  17: suminf.    0.46646 (6) obj. -113.747 iterations 15
Cbc0038I Pass  18: suminf.    0.72848 (5) obj. -113.747 iterations 12
Cbc0038I Pass  19: suminf.    2.75099 (14) obj. -113.747 iterations 19
Cbc0038I Pass  20: suminf.    2.48737 (12) obj. -113.747 iterations 3
Cbc0038I Pass  21: suminf.    1.17261 (5) obj. -113.747 iterations 17
Cbc0038I Pass  22: suminf.    0.76916 (4) obj. -113.747 iterations 5
Cbc0038I Pass  23: suminf.    0.46646 (6) obj. -113.747 iterations 13
Cbc0038I Pass  24: suminf.    0.72848 (5) obj. -113.747 iterations 12
Cbc0038I Pass  25: suminf.    2.10130 (18) obj. -113.747 iterations 24
Cbc0038I Pass  26: suminf.    1.87246 (12) obj. -113.747 iterations 19
Cbc0038I Pass  27: suminf.    0.61529 (5) obj. -113.747 iterations 24
Cbc0038I Pass  28: suminf.    0.51500 (7) obj. -113.747 iterations 7
Cbc0038I Pass  29: suminf.    0.80110 (3) obj. -113.747 iterations 14
Cbc0038I Pass  30: suminf.    2.69809 (15) obj. -113.747 iterations 15
Cbc0038I Pass  31: suminf.    2.69809 (15) obj. -113.747 iterations 2
Cbc0038I Pass  32: suminf.    0.80110 (3) obj. -113.747 iterations 14
Cbc0038I Pass  33: suminf.    2.54389 (15) obj. -113.747 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 112 rows 123 columns, reduced to 74 rows 75 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -107.488 - took 0.04 seconds
Cbc0012I Integer solution of -107.48797 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0031I 35 added rows had average density of 6.0857143
Cbc0013I At root node, 263 cuts changed objective from -170.07761 to -107.48797 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 125 row cuts average 2.0 elements, 10 column cuts (10 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 22 row cuts average 6.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 33 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 67 row cuts average 15.1 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 15 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -107.48797, took 19 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.10   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-26) rows, 67 (-11) columns and 384 (-69) elements
Clp1000I sum of infeasibilities 7.53197e-05 - average 5.83874e-07, 13 fixed columns
Coin0506I Presolve 96 (-33) rows, 53 (-14) columns and 291 (-93) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 2.0032158 - largest nonzero change 0 ( 0%) - largest zero change 2.5242541e-05
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Coin0511I After Postsolve, objective 54.785146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Clp0000I Optimal - objective value 54.785146
Coin0511I After Postsolve, objective 54.785146, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.78514623 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 122 rows, 67 columns (66 integer (66 of which binary)) and 453 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.996%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 3.50946
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -14.6211 iterations 42
Cbc0038I Solution found of -14.6211
Cbc0038I Relaxing continuous gives -14.6211
Cbc0038I Rounding solution of -19.556 is better than previous of -14.6211

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 45 rows 24 columns
Cbc0038I Mini branch and bound improved solution from -19.556 to -20.9195 (0.03 seconds)
Cbc0038I Round again with cutoff of -24.1759
Cbc0038I Pass   2: suminf.    0.57144 (5) obj. -24.1759 iterations 5
Cbc0038I Pass   3: suminf.    0.93050 (3) obj. -24.1759 iterations 7
Cbc0038I Pass   4: suminf.    0.39139 (3) obj. -24.1759 iterations 2
Cbc0038I Pass   5: suminf.    0.51370 (2) obj. -24.1759 iterations 4
Cbc0038I Pass   6: suminf.    0.49253 (2) obj. -24.1759 iterations 1
Cbc0038I Pass   7: suminf.    0.41401 (1) obj. -24.1759 iterations 2
Cbc0038I Pass   8: suminf.    0.13162 (1) obj. -24.1759 iterations 1
Cbc0038I Pass   9: suminf.    3.38733 (9) obj. -24.1759 iterations 16
Cbc0038I Pass  10: suminf.    1.22606 (5) obj. -24.1759 iterations 22
Cbc0038I Pass  11: suminf.    1.50741 (5) obj. -24.1759 iterations 5
Cbc0038I Pass  12: suminf.    1.35467 (5) obj. -24.1759 iterations 2
Cbc0038I Pass  13: suminf.    0.98076 (5) obj. -24.1759 iterations 3
Cbc0038I Pass  14: suminf.    0.83701 (5) obj. -24.1759 iterations 5
Cbc0038I Pass  15: suminf.    1.47825 (5) obj. -24.1759 iterations 6
Cbc0038I Pass  16: suminf.    1.78191 (10) obj. -24.1759 iterations 16
Cbc0038I Pass  17: suminf.    0.91922 (4) obj. -24.1759 iterations 15
Cbc0038I Pass  18: suminf.    0.41512 (5) obj. -24.1759 iterations 9
Cbc0038I Pass  19: suminf.    0.71590 (3) obj. -24.1759 iterations 7
Cbc0038I Pass  20: suminf.    0.14286 (1) obj. -24.1759 iterations 2
Cbc0038I Pass  21: suminf.    0.24851 (2) obj. -24.1759 iterations 3
Cbc0038I Pass  22: suminf.    0.68877 (2) obj. -24.1759 iterations 2
Cbc0038I Pass  23: suminf.    4.54413 (18) obj. -24.1759 iterations 20
Cbc0038I Pass  24: suminf.    1.22451 (7) obj. -24.1759 iterations 27
Cbc0038I Pass  25: suminf.    0.93050 (3) obj. -24.1759 iterations 9
Cbc0038I Pass  26: suminf.    0.39139 (3) obj. -24.1759 iterations 2
Cbc0038I Pass  27: suminf.    0.51370 (2) obj. -24.1759 iterations 4
Cbc0038I Pass  28: suminf.    0.49253 (2) obj. -24.1759 iterations 1
Cbc0038I Pass  29: suminf.    0.41401 (1) obj. -24.1759 iterations 2
Cbc0038I Pass  30: suminf.    0.13162 (1) obj. -24.1759 iterations 1
Cbc0038I Pass  31: suminf.    1.54304 (8) obj. -24.1759 iterations 7
Cbc0038I Rounding solution of -25.0749 is better than previous of -20.9195

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 83 rows 43 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -30.7566
Cbc0038I Pass  31: suminf.    0.98706 (6) obj. -30.7566 iterations 2
Cbc0038I Pass  32: suminf.    0.78378 (3) obj. -30.7566 iterations 11
Cbc0038I Pass  33: suminf.    0.70483 (3) obj. -30.7566 iterations 1
Cbc0038I Pass  34: suminf.    0.82193 (5) obj. -30.7566 iterations 7
Cbc0038I Pass  35: suminf.    0.82193 (5) obj. -30.7566 iterations 0
Cbc0038I Pass  36: suminf.    1.59950 (5) obj. -30.7566 iterations 16
Cbc0038I Pass  37: suminf.    0.81322 (3) obj. -30.7566 iterations 11
Cbc0038I Pass  38: suminf.    0.50356 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  39: suminf.    0.58132 (2) obj. -30.7566 iterations 4
Cbc0038I Pass  40: suminf.    0.24104 (2) obj. -30.7566 iterations 1
Cbc0038I Pass  41: suminf.    0.57472 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  42: suminf.    0.57472 (3) obj. -30.7566 iterations 0
Cbc0038I Pass  43: suminf.    0.58132 (2) obj. -30.7566 iterations 2
Cbc0038I Pass  44: suminf.    1.57666 (7) obj. -30.7566 iterations 10
Cbc0038I Pass  45: suminf.    0.58244 (4) obj. -30.7566 iterations 8
Cbc0038I Pass  46: suminf.    1.29804 (4) obj. -30.7566 iterations 5
Cbc0038I Pass  47: suminf.    1.29804 (4) obj. -30.7566 iterations 0
Cbc0038I Pass  48: suminf.    0.90279 (4) obj. -30.7566 iterations 3
Cbc0038I Pass  49: suminf.    0.90279 (4) obj. -30.7566 iterations 0
Cbc0038I Pass  50: suminf.    1.11737 (4) obj. -30.7566 iterations 3
Cbc0038I Pass  51: suminf.    1.11227 (4) obj. -30.7566 iterations 2
Cbc0038I Pass  52: suminf.    1.00167 (4) obj. -30.7566 iterations 2
Cbc0038I Pass  53: suminf.    0.75899 (4) obj. -30.7566 iterations 12
Cbc0038I Pass  54: suminf.    0.50356 (3) obj. -30.7566 iterations 7
Cbc0038I Pass  55: suminf.    0.58132 (2) obj. -30.7566 iterations 4
Cbc0038I Pass  56: suminf.    0.24104 (2) obj. -30.7566 iterations 1
Cbc0038I Pass  57: suminf.    0.57472 (3) obj. -30.7566 iterations 3
Cbc0038I Pass  58: suminf.    0.57472 (3) obj. -30.7566 iterations 0
Cbc0038I Pass  59: suminf.    0.58132 (2) obj. -30.7566 iterations 2
Cbc0038I Pass  60: suminf.    0.46534 (2) obj. -30.7566 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 122 rows 67 columns, reduced to 56 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -25.0749 - took 0.05 seconds
Cbc0012I Integer solution of -25.07486 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 122 rows 67 columns, reduced to 46 rows 25 columns
Cbc0031I 18 added rows had average density of 40.055556
Cbc0013I At root node, 18 cuts changed objective from -53.482955 to -37.775913 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 4269 row cuts average 7.8 elements, 1 column cuts (1 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1359 row cuts average 65.3 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 295 row cuts average 8.3 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 116 row cuts average 60.9 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0001I Search completed - best objective -25.07486, took 5136 iterations and 40 nodes (0.63 seconds)
Cbc0032I Strong branching done 618 times (9829 iterations), fathomed 1 nodes and fixed 15 variables
Cbc0035I Maximum depth 10, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.61   (Wallclock seconds):       0.64

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 119 (-34) columns and 2058 (-1246) elements
Clp1000I sum of infeasibilities 2.52197e-06 - average 2.17411e-08, 36 fixed columns
Coin0506I Presolve 80 (-36) rows, 82 (-37) columns and 845 (-1213) elements
Clp0006I 0  Obj 65.906125 Dual inf 4.006531 (81)
Clp0029I End of values pass after 82 iterations
Clp0014I Perturbing problem by 0.001% of 7.9961493 - largest nonzero change 1.8809841e-05 ( 0.00095415479%) - largest zero change 2.562668e-05
Clp0000I Optimal - objective value 76.570594
Clp0000I Optimal - objective value 76.570594
Coin0511I After Postsolve, objective 76.570594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 76.570594
Clp0000I Optimal - objective value 76.570594
Clp0000I Optimal - objective value 76.570594
Clp0000I Optimal - objective value 76.570594
Coin0511I After Postsolve, objective 76.570594, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.57059419 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 69 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 109 rows, 119 columns (119 integer (119 of which binary)) and 2086 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.025%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 5.69352
Cbc0038I Pass   1: suminf.    0.06325 (3) obj. -29.8834 iterations 15
Cbc0038I Pass   2: suminf.    0.06325 (3) obj. -29.8834 iterations 0
Cbc0038I Solution found of -14.2155
Cbc0038I Rounding solution of -19.1504 is better than previous of -14.2155

Cbc0038I Before mini branch and bound, 65 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 119 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -19.1504 to -20.9195 (0.05 seconds)
Cbc0038I Round again with cutoff of -24.932
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.06325 (3) obj. -29.8834 iterations 0
Cbc0038I Pass   4: suminf.    0.06325 (3) obj. -29.8834 iterations 0
Cbc0038I Pass   5: suminf.    0.90422 (12) obj. -24.932 iterations 6
Cbc0038I Pass   6: suminf.    0.82349 (4) obj. -24.932 iterations 16
Cbc0038I Pass   7: suminf.    0.82349 (4) obj. -24.932 iterations 0
Cbc0038I Pass   8: suminf.    0.87939 (4) obj. -24.932 iterations 2
Cbc0038I Pass   9: suminf.    0.08452 (3) obj. -24.932 iterations 1
Cbc0038I Pass  10: suminf.    0.49603 (3) obj. -24.932 iterations 3
Cbc0038I Pass  11: suminf.    0.06594 (3) obj. -24.932 iterations 1
Cbc0038I Pass  12: suminf.    0.31602 (16) obj. -24.932 iterations 21
Cbc0038I Pass  13: suminf.    0.18817 (6) obj. -24.932 iterations 15
Cbc0038I Pass  14: suminf.    0.31851 (5) obj. -24.932 iterations 6
Cbc0038I Pass  15: suminf.    0.20417 (5) obj. -24.932 iterations 2
Cbc0038I Pass  16: suminf.    1.43625 (34) obj. -24.932 iterations 31
Cbc0038I Pass  17: suminf.    1.31675 (34) obj. -24.932 iterations 2
Cbc0038I Pass  18: suminf.    3.61478 (21) obj. -24.932 iterations 34
Cbc0038I Pass  19: suminf.    3.37021 (23) obj. -24.932 iterations 15
Cbc0038I Pass  20: suminf.    3.19025 (19) obj. -24.932 iterations 21
Cbc0038I Pass  21: suminf.    3.01997 (19) obj. -24.932 iterations 9
Cbc0038I Pass  22: suminf.    3.05738 (18) obj. -24.932 iterations 7
Cbc0038I Pass  23: suminf.    2.72435 (21) obj. -24.932 iterations 11
Cbc0038I Pass  24: suminf.    3.05738 (18) obj. -24.932 iterations 10
Cbc0038I Pass  25: suminf.    3.74557 (22) obj. -24.932 iterations 19
Cbc0038I Pass  26: suminf.    3.74557 (22) obj. -24.932 iterations 10
Cbc0038I Pass  27: suminf.    3.05738 (18) obj. -24.932 iterations 16
Cbc0038I Pass  28: suminf.    3.43054 (22) obj. -24.932 iterations 19
Cbc0038I Pass  29: suminf.    3.43054 (22) obj. -24.932 iterations 4
Cbc0038I Pass  30: suminf.    3.05738 (18) obj. -24.932 iterations 14
Cbc0038I Pass  31: suminf.    2.72435 (21) obj. -24.932 iterations 11
Cbc0038I Pass  32: suminf.    3.05738 (18) obj. -24.932 iterations 11
Cbc0038I Rounding solution of -25.0749 is better than previous of -20.9195

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 119 columns, reduced to 24 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I Round again with cutoff of -32.2688
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.73156 (8) obj. -32.2688 iterations 1
Cbc0038I Pass  33: suminf.    0.27338 (15) obj. -32.2688 iterations 4
Cbc0038I Pass  34: suminf.    0.61231 (6) obj. -32.2688 iterations 17
Cbc0038I Pass  35: suminf.    0.61231 (6) obj. -32.2688 iterations 0
Cbc0038I Pass  36: suminf.    1.30255 (5) obj. -32.2688 iterations 10
Cbc0038I Pass  37: suminf.    0.90688 (4) obj. -33.2228 iterations 5
Cbc0038I Pass  38: suminf.    1.09769 (4) obj. -32.2688 iterations 2
Cbc0038I Pass  39: suminf.    0.41749 (18) obj. -32.2688 iterations 15
Cbc0038I Pass  40: suminf.    0.36685 (10) obj. -32.2688 iterations 11
Cbc0038I Pass  41: suminf.    0.23433 (5) obj. -32.2688 iterations 9
Cbc0038I Pass  42: suminf.    0.22321 (5) obj. -32.2688 iterations 1
Cbc0038I Pass  43: suminf.    0.23433 (5) obj. -32.2688 iterations 2
Cbc0038I Pass  44: suminf.    1.01848 (31) obj. -32.2688 iterations 15
Cbc0038I Pass  45: suminf.    0.76626 (9) obj. -32.2688 iterations 7
Cbc0038I Pass  46: suminf.    0.74207 (7) obj. -32.2688 iterations 7
Cbc0038I Pass  47: suminf.    0.24288 (7) obj. -32.2688 iterations 4
Cbc0038I Pass  48: suminf.    1.69008 (29) obj. -32.2688 iterations 24
Cbc0038I Pass  49: suminf.    1.02018 (28) obj. -32.2688 iterations 14
Cbc0038I Pass  50: suminf.    4.11131 (25) obj. -32.2688 iterations 22
Cbc0038I Pass  51: suminf.    4.11131 (25) obj. -32.2688 iterations 0
Cbc0038I Pass  52: suminf.    3.40614 (23) obj. -32.2688 iterations 8
Cbc0038I Pass  53: suminf.    3.40614 (23) obj. -32.2688 iterations 0
Cbc0038I Pass  54: suminf.    3.90154 (26) obj. -32.2688 iterations 4
Cbc0038I Pass  55: suminf.    3.86272 (26) obj. -32.2688 iterations 1
Cbc0038I Pass  56: suminf.    3.38902 (22) obj. -32.2688 iterations 5
Cbc0038I Pass  57: suminf.    3.16967 (23) obj. -32.2688 iterations 9
Cbc0038I Pass  58: suminf.    3.38902 (22) obj. -32.2688 iterations 10
Cbc0038I Pass  59: suminf.    3.47629 (29) obj. -32.2688 iterations 19
Cbc0038I Pass  60: suminf.    3.45926 (27) obj. -32.2688 iterations 16
Cbc0038I Pass  61: suminf.    3.42112 (23) obj. -32.2688 iterations 16
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 109 rows 119 columns, reduced to 64 rows 67 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -25.0749 - took 0.04 seconds
Cbc0012I Integer solution of -25.07486 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 109 rows 119 columns, reduced to 6 rows 7 columns
Cbc0031I 76 added rows had average density of 10.263158
Cbc0013I At root node, 76 cuts changed objective from -61.044021 to -32.450007 in 29 passes
Cbc0014I Cut generator 0 (Probing) - 5613 row cuts average 4.2 elements, 4 column cuts (4 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 228 row cuts average 70.6 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 24 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 185 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 210 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 255 row cuts average 15.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 385 row cuts average 64.6 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 149 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -25.07486 best solution, best possible -32.450007 (0.76 seconds)
Cbc0010I After 8 nodes, 1 on tree, -25.07486 best solution, best possible -28.395783 (1.50 seconds)
Cbc0001I Search completed - best objective -25.07486, took 2543 iterations and 12 nodes (1.69 seconds)
Cbc0032I Strong branching done 354 times (9285 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 40 variables fixed on reduced cost
Total time (CPU seconds):       1.28   (Wallclock seconds):       1.70

