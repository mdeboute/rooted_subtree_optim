Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-9) rows, 30 (-3) columns and 152 (-18) elements
Clp1000I sum of infeasibilities 0.000401253 - average 7.16523e-06, 10 fixed columns
Coin0506I Presolve 36 (-20) rows, 20 (-10) columns and 89 (-63) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Coin0511I After Postsolve, objective 11176.138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.3879757 - largest nonzero change 0 ( 0%) - largest zero change 2.5061934e-05
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Coin0511I After Postsolve, objective 11176.138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11176.1378 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.05346
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3793.96 iterations 19
Cbc0038I Solution found of -3793.96
Cbc0038I Relaxing continuous gives -3793.96
Cbc0038I Rounding solution of -3794.4 is better than previous of -3793.96

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 38 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -3794.4 to -6635.19 (0.02 seconds)
Cbc0038I Round again with cutoff of -7086.75
Cbc0038I Pass   2: suminf.    0.99441 (5) obj. -7086.75 iterations 5
Cbc0038I Pass   3: suminf.    0.99441 (5) obj. -7086.75 iterations 0
Cbc0038I Pass   4: suminf.    0.87450 (4) obj. -7086.75 iterations 13
Cbc0038I Pass   5: suminf.    0.79236 (3) obj. -7086.75 iterations 4
Cbc0038I Pass   6: suminf.    0.82646 (4) obj. -7086.75 iterations 7
Cbc0038I Pass   7: suminf.    1.11763 (5) obj. -7086.75 iterations 5
Cbc0038I Pass   8: suminf.    0.23020 (2) obj. -7086.75 iterations 4
Cbc0038I Pass   9: suminf.    0.99441 (5) obj. -7086.75 iterations 5
Cbc0038I Pass  10: suminf.    0.99441 (5) obj. -7086.75 iterations 0
Cbc0038I Pass  11: suminf.    0.87450 (4) obj. -7086.75 iterations 13
Cbc0038I Pass  12: suminf.    0.79236 (3) obj. -7086.75 iterations 4
Cbc0038I Pass  13: suminf.    0.82646 (4) obj. -7086.75 iterations 7
Cbc0038I Pass  14: suminf.    0.41396 (1) obj. -7086.75 iterations 12
Cbc0038I Pass  15: suminf.    0.06122 (1) obj. -7086.75 iterations 7
Cbc0038I Pass  16: suminf.    0.27175 (1) obj. -7086.75 iterations 1
Cbc0038I Pass  17: suminf.    2.54182 (8) obj. -7086.75 iterations 16
Cbc0038I Pass  18: suminf.    1.17198 (5) obj. -7086.75 iterations 8
Cbc0038I Pass  19: suminf.    1.17198 (5) obj. -7086.75 iterations 0
Cbc0038I Pass  20: suminf.    1.47369 (6) obj. -7086.75 iterations 9
Cbc0038I Pass  21: suminf.    0.45459 (2) obj. -7086.75 iterations 6
Cbc0038I Pass  22: suminf.    0.27175 (1) obj. -7086.75 iterations 3
Cbc0038I Pass  23: suminf.    0.06122 (1) obj. -7086.75 iterations 1
Cbc0038I Pass  24: suminf.    0.16667 (3) obj. -7086.75 iterations 3
Cbc0038I Pass  25: suminf.    0.06122 (1) obj. -7086.75 iterations 4
Cbc0038I Pass  26: suminf.    0.97638 (4) obj. -7086.75 iterations 3
Cbc0038I Pass  27: suminf.    0.36735 (1) obj. -7086.75 iterations 2
Cbc0038I Pass  28: suminf.    0.13626 (1) obj. -7086.75 iterations 2
Cbc0038I Pass  29: suminf.    0.27175 (1) obj. -7086.75 iterations 7
Cbc0038I Pass  30: suminf.    1.57394 (7) obj. -7086.75 iterations 9
Cbc0038I Pass  31: suminf.    1.19085 (5) obj. -7086.75 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -6635.19 to -6636.72 (0.04 seconds)
Cbc0038I Round again with cutoff of -7899.56
Cbc0038I Pass  31: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  32: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  33: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  34: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  35: suminf.    1.88178 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  36: suminf.    1.33335 (4) obj. -7899.56 iterations 6
Cbc0038I Pass  37: suminf.    2.41412 (10) obj. -7899.56 iterations 11
Cbc0038I Pass  38: suminf.    2.29266 (11) obj. -7899.56 iterations 4
Cbc0038I Pass  39: suminf.    1.31049 (4) obj. -7899.56 iterations 14
Cbc0038I Pass  40: suminf.    0.80584 (4) obj. -7899.56 iterations 2
Cbc0038I Pass  41: suminf.    1.40513 (5) obj. -7899.56 iterations 9
Cbc0038I Pass  42: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  43: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  44: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  45: suminf.    2.53029 (10) obj. -7899.56 iterations 9
Cbc0038I Pass  46: suminf.    1.80203 (6) obj. -7899.56 iterations 5
Cbc0038I Pass  47: suminf.    2.00703 (6) obj. -7899.56 iterations 5
Cbc0038I Pass  48: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I Pass  49: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  50: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  51: suminf.    2.05915 (10) obj. -7899.56 iterations 5
Cbc0038I Pass  52: suminf.    1.88669 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  53: suminf.    2.00703 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  54: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I Pass  55: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  56: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  57: suminf.    2.72434 (9) obj. -7899.56 iterations 9
Cbc0038I Pass  58: suminf.    2.07663 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  59: suminf.    1.77087 (5) obj. -7899.56 iterations 9
Cbc0038I Pass  60: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -6636.72 - took 0.05 seconds
Cbc0012I Integer solution of -6636.7202 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 39 rows 21 columns
Cbc0031I 10 added rows had average density of 19.2
Cbc0013I At root node, 10 cuts changed objective from -11150.808 to -8434.1641 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1008 row cuts average 4.3 elements, 2 column cuts (2 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 430 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0012I Integer solution of -6914.7502 found by rounding after 1376 iterations and 1 nodes (0.32 seconds)
Cbc0001I Search completed - best objective -6914.750211, took 1579 iterations and 8 nodes (0.34 seconds)
Cbc0032I Strong branching done 72 times (575 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.26   (Wallclock seconds):       0.35

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 47 (-17) rows, 49 (-13) columns and 384 (-251) elements
Clp1000I sum of infeasibilities 1.31463e-06 - average 2.79708e-08, 44 fixed columns
Coin0506I Presolve 5 (-42) rows, 5 (-44) columns and 13 (-371) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 8316.5041
Clp0000I Optimal - objective value 8316.5041
Coin0511I After Postsolve, objective 8316.5041, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4936758 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 18361.967
Clp0000I Optimal - objective value 18361.967
Clp0000I Optimal - objective value 18361.967
Coin0511I After Postsolve, objective 18361.967, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 18361.96704 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 50 columns (50 integer (50 of which binary)) and 395 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.248%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 0.794634
Cbc0038I Pass   1: suminf.    0.77875 (7) obj. -10425.6 iterations 16
Cbc0038I Solution found of -5320.76
Cbc0038I Rounding solution of -6489.78 is better than previous of -5320.76

Cbc0038I Before mini branch and bound, 42 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6885.01
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.77875 (7) obj. -10425.6 iterations 0
Cbc0038I Pass   3: suminf.    0.46259 (1) obj. -6885.01 iterations 8
Cbc0038I Pass   4: suminf.    0.06122 (1) obj. -8053.27 iterations 1
Cbc0038I Pass   5: suminf.    0.06122 (1) obj. -7803.27 iterations 6
Cbc0038I Pass   6: suminf.    0.06122 (1) obj. -7803.27 iterations 3
Cbc0038I Pass   7: suminf.    0.37670 (1) obj. -6885.01 iterations 1
Cbc0038I Pass   8: suminf.    1.56418 (6) obj. -6885.01 iterations 13
Cbc0038I Pass   9: suminf.    0.46379 (2) obj. -6885.01 iterations 6
Cbc0038I Pass  10: suminf.    0.28964 (2) obj. -7406.96 iterations 1
Cbc0038I Pass  11: suminf.    0.12607 (2) obj. -6885.01 iterations 3
Cbc0038I Pass  12: suminf.    0.11718 (3) obj. -6885.01 iterations 2
Cbc0038I Pass  13: suminf.    0.47916 (3) obj. -6885.01 iterations 3
Cbc0038I Pass  14: suminf.    0.10816 (2) obj. -7662.2 iterations 3
Cbc0038I Pass  15: suminf.    0.31819 (3) obj. -6885.01 iterations 7
Cbc0038I Pass  16: suminf.    0.10816 (2) obj. -7187.2 iterations 2
Cbc0038I Pass  17: suminf.    0.46254 (2) obj. -6885.01 iterations 4
Cbc0038I Pass  18: suminf.    0.46072 (3) obj. -6885.01 iterations 2
Cbc0038I Pass  19: suminf.    0.44433 (2) obj. -6885.01 iterations 2
Cbc0038I Pass  20: suminf.    0.06122 (1) obj. -7678.27 iterations 3
Cbc0038I Pass  21: suminf.    0.33376 (1) obj. -6885.01 iterations 1
Cbc0038I Pass  22: suminf.    1.20483 (8) obj. -6885.01 iterations 15
Cbc0038I Pass  23: suminf.    1.17914 (7) obj. -6885.01 iterations 3
Cbc0038I Pass  24: suminf.    0.25865 (3) obj. -6885.01 iterations 9
Cbc0038I Pass  25: suminf.    0.06122 (1) obj. -7103.27 iterations 4
Cbc0038I Pass  26: suminf.    0.13621 (1) obj. -6885.01 iterations 1
Cbc0038I Pass  27: suminf.    2.28301 (10) obj. -6885.01 iterations 20
Cbc0038I Pass  28: suminf.    0.98785 (6) obj. -6885.01 iterations 8
Cbc0038I Pass  29: suminf.    0.94056 (6) obj. -7039.43 iterations 1
Cbc0038I Pass  30: suminf.    1.37237 (11) obj. -6885.01 iterations 10
Cbc0038I Pass  31: suminf.    0.82112 (7) obj. -6885.01 iterations 3
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 29 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -6489.78 to -9095.69 (0.03 seconds)
Cbc0038I Round again with cutoff of -9364.97
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.77875 (7) obj. -10425.6 iterations 0
Cbc0038I Pass  32: suminf.    0.47114 (3) obj. -9364.97 iterations 8
Cbc0038I Pass  33: suminf.    0.33658 (3) obj. -9465.89 iterations 2
Cbc0038I Pass  34: suminf.    1.52946 (7) obj. -9364.97 iterations 11
Cbc0038I Pass  35: suminf.    0.79427 (5) obj. -9364.97 iterations 4
Cbc0038I Pass  36: suminf.    0.42890 (4) obj. -9485.5 iterations 1
Cbc0038I Pass  37: suminf.    0.62978 (4) obj. -9364.97 iterations 5
Cbc0038I Pass  38: suminf.    0.78703 (7) obj. -9364.97 iterations 6
Cbc0038I Pass  39: suminf.    0.48105 (5) obj. -9580.28 iterations 4
Cbc0038I Pass  40: suminf.    1.53819 (8) obj. -9364.97 iterations 10
Cbc0038I Pass  41: suminf.    0.98727 (6) obj. -9364.97 iterations 5
Cbc0038I Pass  42: suminf.    0.48105 (5) obj. -9530.28 iterations 1
Cbc0038I Pass  43: suminf.    0.54644 (4) obj. -9364.97 iterations 5
Cbc0038I Pass  44: suminf.    0.42890 (4) obj. -9435.5 iterations 3
Cbc0038I Pass  45: suminf.    0.71816 (6) obj. -9364.97 iterations 15
Cbc0038I Pass  46: suminf.    0.71816 (6) obj. -9364.97 iterations 0
Cbc0038I Pass  47: suminf.    0.65194 (5) obj. -9364.97 iterations 3
Cbc0038I Pass  48: suminf.    0.65194 (5) obj. -9364.97 iterations 2
Cbc0038I Pass  49: suminf.    0.50379 (5) obj. -9364.97 iterations 6
Cbc0038I Pass  50: suminf.    0.50379 (5) obj. -9364.97 iterations 3
Cbc0038I Pass  51: suminf.    0.65194 (5) obj. -9364.97 iterations 4
Cbc0038I Pass  52: suminf.    1.16732 (6) obj. -9364.97 iterations 7
Cbc0038I Pass  53: suminf.    1.16732 (6) obj. -9364.97 iterations 1
Cbc0038I Pass  54: suminf.    0.65194 (5) obj. -9364.97 iterations 9
Cbc0038I Pass  55: suminf.    0.65194 (5) obj. -9364.97 iterations 0
Cbc0038I Pass  56: suminf.    0.50379 (5) obj. -9364.97 iterations 6
Cbc0038I Pass  57: suminf.    0.50379 (5) obj. -9364.97 iterations 3
Cbc0038I Pass  58: suminf.    0.65194 (5) obj. -9364.97 iterations 4
Cbc0038I Pass  59: suminf.    0.65816 (4) obj. -9364.97 iterations 5
Cbc0038I Pass  60: suminf.    0.52694 (5) obj. -9364.97 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -9095.69 - took 0.02 seconds
Cbc0012I Integer solution of -9095.6933 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 50 columns, reduced to 29 rows 28 columns
Cbc0031I 2 added rows had average density of 18
Cbc0013I At root node, 26 cuts changed objective from -10442.088 to -9095.6933 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 17 row cuts average 2.0 elements, 7 column cuts (7 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 3 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 3 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -9095.693256499999, took 15 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-9) rows, 30 (-3) columns and 152 (-18) elements
Clp1000I sum of infeasibilities 0.000401253 - average 7.16523e-06, 10 fixed columns
Coin0506I Presolve 36 (-20) rows, 20 (-10) columns and 89 (-63) elements
Clp0029I End of values pass after 20 iterations
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Coin0511I After Postsolve, objective 11176.138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.3879757 - largest nonzero change 0 ( 0%) - largest zero change 2.5061934e-05
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Clp0000I Optimal - objective value 11176.138
Coin0511I After Postsolve, objective 11176.138, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 11176.1378 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.443%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.05346
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3793.96 iterations 19
Cbc0038I Solution found of -3793.96
Cbc0038I Relaxing continuous gives -3793.96
Cbc0038I Rounding solution of -3794.4 is better than previous of -3793.96

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 38 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -3794.4 to -6635.19 (0.01 seconds)
Cbc0038I Round again with cutoff of -7086.75
Cbc0038I Pass   2: suminf.    0.99441 (5) obj. -7086.75 iterations 5
Cbc0038I Pass   3: suminf.    0.99441 (5) obj. -7086.75 iterations 0
Cbc0038I Pass   4: suminf.    0.87450 (4) obj. -7086.75 iterations 13
Cbc0038I Pass   5: suminf.    0.79236 (3) obj. -7086.75 iterations 4
Cbc0038I Pass   6: suminf.    0.82646 (4) obj. -7086.75 iterations 7
Cbc0038I Pass   7: suminf.    1.11763 (5) obj. -7086.75 iterations 5
Cbc0038I Pass   8: suminf.    0.23020 (2) obj. -7086.75 iterations 4
Cbc0038I Pass   9: suminf.    0.99441 (5) obj. -7086.75 iterations 5
Cbc0038I Pass  10: suminf.    0.99441 (5) obj. -7086.75 iterations 0
Cbc0038I Pass  11: suminf.    0.87450 (4) obj. -7086.75 iterations 13
Cbc0038I Pass  12: suminf.    0.79236 (3) obj. -7086.75 iterations 4
Cbc0038I Pass  13: suminf.    0.82646 (4) obj. -7086.75 iterations 7
Cbc0038I Pass  14: suminf.    0.41396 (1) obj. -7086.75 iterations 12
Cbc0038I Pass  15: suminf.    0.06122 (1) obj. -7086.75 iterations 7
Cbc0038I Pass  16: suminf.    0.27175 (1) obj. -7086.75 iterations 1
Cbc0038I Pass  17: suminf.    2.54182 (8) obj. -7086.75 iterations 16
Cbc0038I Pass  18: suminf.    1.17198 (5) obj. -7086.75 iterations 8
Cbc0038I Pass  19: suminf.    1.17198 (5) obj. -7086.75 iterations 0
Cbc0038I Pass  20: suminf.    1.47369 (6) obj. -7086.75 iterations 9
Cbc0038I Pass  21: suminf.    0.45459 (2) obj. -7086.75 iterations 6
Cbc0038I Pass  22: suminf.    0.27175 (1) obj. -7086.75 iterations 3
Cbc0038I Pass  23: suminf.    0.06122 (1) obj. -7086.75 iterations 1
Cbc0038I Pass  24: suminf.    0.16667 (3) obj. -7086.75 iterations 3
Cbc0038I Pass  25: suminf.    0.06122 (1) obj. -7086.75 iterations 4
Cbc0038I Pass  26: suminf.    0.97638 (4) obj. -7086.75 iterations 3
Cbc0038I Pass  27: suminf.    0.36735 (1) obj. -7086.75 iterations 2
Cbc0038I Pass  28: suminf.    0.13626 (1) obj. -7086.75 iterations 2
Cbc0038I Pass  29: suminf.    0.27175 (1) obj. -7086.75 iterations 7
Cbc0038I Pass  30: suminf.    1.57394 (7) obj. -7086.75 iterations 9
Cbc0038I Pass  31: suminf.    1.19085 (5) obj. -7086.75 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -6635.19 to -6636.72 (0.03 seconds)
Cbc0038I Round again with cutoff of -7899.56
Cbc0038I Pass  31: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  32: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  33: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  34: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  35: suminf.    1.88178 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  36: suminf.    1.33335 (4) obj. -7899.56 iterations 6
Cbc0038I Pass  37: suminf.    2.41412 (10) obj. -7899.56 iterations 11
Cbc0038I Pass  38: suminf.    2.29266 (11) obj. -7899.56 iterations 4
Cbc0038I Pass  39: suminf.    1.31049 (4) obj. -7899.56 iterations 14
Cbc0038I Pass  40: suminf.    0.80584 (4) obj. -7899.56 iterations 2
Cbc0038I Pass  41: suminf.    1.40513 (5) obj. -7899.56 iterations 9
Cbc0038I Pass  42: suminf.    1.40513 (5) obj. -7899.56 iterations 0
Cbc0038I Pass  43: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  44: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  45: suminf.    2.53029 (10) obj. -7899.56 iterations 9
Cbc0038I Pass  46: suminf.    1.80203 (6) obj. -7899.56 iterations 5
Cbc0038I Pass  47: suminf.    2.00703 (6) obj. -7899.56 iterations 5
Cbc0038I Pass  48: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I Pass  49: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  50: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  51: suminf.    2.05915 (10) obj. -7899.56 iterations 5
Cbc0038I Pass  52: suminf.    1.88669 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  53: suminf.    2.00703 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  54: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I Pass  55: suminf.    1.46765 (4) obj. -7899.56 iterations 12
Cbc0038I Pass  56: suminf.    1.33335 (4) obj. -7899.56 iterations 4
Cbc0038I Pass  57: suminf.    2.72434 (9) obj. -7899.56 iterations 9
Cbc0038I Pass  58: suminf.    2.07663 (6) obj. -7899.56 iterations 4
Cbc0038I Pass  59: suminf.    1.77087 (5) obj. -7899.56 iterations 9
Cbc0038I Pass  60: suminf.    1.40513 (5) obj. -7899.56 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 40 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -6636.72 - took 0.06 seconds
Cbc0012I Integer solution of -6636.7202 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 39 rows 21 columns
Cbc0031I 10 added rows had average density of 19.2
Cbc0013I At root node, 10 cuts changed objective from -11150.808 to -8434.1641 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1008 row cuts average 4.3 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 430 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 13.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 42 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 107 row cuts average 23.7 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0012I Integer solution of -6914.7502 found by rounding after 1376 iterations and 1 nodes (0.17 seconds)
Cbc0001I Search completed - best objective -6914.750211, took 1579 iterations and 8 nodes (0.19 seconds)
Cbc0032I Strong branching done 72 times (575 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 7 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 45 (-20) rows, 47 (-16) columns and 359 (-277) elements
Clp1000I sum of infeasibilities 6.4559e-10 - average 1.43465e-11, 42 fixed columns
Coin0506I Presolve 5 (-40) rows, 5 (-42) columns and 13 (-346) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 2959.9315
Clp0000I Optimal - objective value 2959.9315
Coin0511I After Postsolve, objective 2959.9315, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0694836 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 12539.039
Clp0000I Optimal - objective value 12539.039
Clp0000I Optimal - objective value 12539.039
Coin0511I After Postsolve, objective 12539.039, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 12539.03879 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 49 columns (49 integer (49 of which binary)) and 372 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.823%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 8 integers unsatisfied sum - 1.10949
Cbc0038I Pass   1: suminf.    1.08618 (7) obj. -10289.8 iterations 19
Cbc0038I Solution found of -5320.76
Cbc0038I Rounding solution of -6489.78 is better than previous of -5320.76

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 4 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -6871.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    1.08618 (7) obj. -10289.8 iterations 0
Cbc0038I Pass   3: suminf.    0.46737 (1) obj. -6871.1 iterations 8
Cbc0038I Pass   4: suminf.    0.06122 (1) obj. -8053.27 iterations 1
Cbc0038I Pass   5: suminf.    3.56329 (16) obj. -6871.1 iterations 17
Cbc0038I Pass   6: suminf.    0.84816 (2) obj. -6871.1 iterations 4
Cbc0038I Pass   7: suminf.    0.84816 (2) obj. -6871.1 iterations 3
Cbc0038I Pass   8: suminf.    0.36735 (1) obj. -7559.02 iterations 2
Cbc0038I Pass   9: suminf.    0.13100 (1) obj. -6871.1 iterations 1
Cbc0038I Pass  10: suminf.    1.09957 (8) obj. -8165.7 iterations 14
Cbc0038I Pass  11: suminf.    0.53549 (4) obj. -7346.58 iterations 6
Cbc0038I Pass  12: suminf.    0.82780 (2) obj. -6871.1 iterations 6
Cbc0038I Pass  13: suminf.    0.54756 (4) obj. -6871.1 iterations 5
Cbc0038I Pass  14: suminf.    0.21689 (1) obj. -6871.1 iterations 3
Cbc0038I Pass  15: suminf.    0.36735 (1) obj. -7309.02 iterations 1
Cbc0038I Pass  16: suminf.    1.11622 (5) obj. -6871.1 iterations 10
Cbc0038I Pass  17: suminf.    0.79893 (5) obj. -6871.1 iterations 5
Cbc0038I Pass  18: suminf.    1.25731 (5) obj. -6871.1 iterations 6
Cbc0038I Pass  19: suminf.    1.25731 (5) obj. -6871.1 iterations 0
Cbc0038I Pass  20: suminf.    1.45515 (5) obj. -6871.1 iterations 5
Cbc0038I Pass  21: suminf.    0.98294 (5) obj. -6871.1 iterations 12
Cbc0038I Pass  22: suminf.    0.78772 (4) obj. -6871.1 iterations 6
Cbc0038I Pass  23: suminf.    0.85319 (3) obj. -6871.1 iterations 8
Cbc0038I Pass  24: suminf.    0.68396 (8) obj. -6871.1 iterations 3
Cbc0038I Pass  25: suminf.    1.05856 (6) obj. -6871.1 iterations 6
Cbc0038I Pass  26: suminf.    0.95591 (7) obj. -6871.1 iterations 3
Cbc0038I Pass  27: suminf.    1.21033 (6) obj. -6871.1 iterations 6
Cbc0038I Pass  28: suminf.    1.11254 (7) obj. -6871.1 iterations 4
Cbc0038I Pass  29: suminf.    1.05856 (6) obj. -6871.1 iterations 5
Cbc0038I Pass  30: suminf.    1.20321 (5) obj. -6871.1 iterations 7
Cbc0038I Pass  31: suminf.    0.95762 (5) obj. -6871.1 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 29 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -5320.76 to -6914.75 (0.02 seconds)
Cbc0038I Round again with cutoff of -7592.39
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    1.08618 (7) obj. -10289.8 iterations 0
Cbc0038I Pass  32: suminf.    0.21956 (1) obj. -7592.39 iterations 8
Cbc0038I Pass  33: suminf.    0.06122 (1) obj. -8053.27 iterations 1
Cbc0038I Pass  34: suminf.    1.03867 (4) obj. -7592.39 iterations 8
Cbc0038I Pass  35: suminf.    0.47643 (3) obj. -7592.39 iterations 3
Cbc0038I Pass  36: suminf.    0.40548 (2) obj. -7592.39 iterations 7
Cbc0038I Pass  37: suminf.    0.45865 (2) obj. -8354.14 iterations 2
Cbc0038I Pass  38: suminf.    0.15994 (2) obj. -7592.39 iterations 1
Cbc0038I Pass  39: suminf.    0.72835 (7) obj. -7592.39 iterations 10
Cbc0038I Pass  40: suminf.    0.41257 (3) obj. -7592.39 iterations 7
Cbc0038I Pass  41: suminf.    0.35416 (3) obj. -7592.39 iterations 7
Cbc0038I Pass  42: suminf.    0.06122 (1) obj. -7628.27 iterations 3
Cbc0038I Pass  43: suminf.    0.07355 (1) obj. -7592.39 iterations 1
Cbc0038I Pass  44: suminf.    0.77615 (7) obj. -7592.39 iterations 13
Cbc0038I Pass  45: suminf.    0.16004 (2) obj. -7966.81 iterations 4
Cbc0038I Pass  46: suminf.    0.53450 (2) obj. -7592.39 iterations 3
Cbc0038I Pass  47: suminf.    0.52561 (3) obj. -7592.39 iterations 3
Cbc0038I Pass  48: suminf.    0.34738 (3) obj. -7592.39 iterations 3
Cbc0038I Pass  49: suminf.    0.62377 (3) obj. -7592.39 iterations 10
Cbc0038I Pass  50: suminf.    0.61783 (4) obj. -7592.39 iterations 6
Cbc0038I Pass  51: suminf.    0.30311 (3) obj. -7592.39 iterations 4
Cbc0038I Pass  52: suminf.    0.16004 (2) obj. -7866.81 iterations 3
Cbc0038I Pass  53: suminf.    0.47366 (2) obj. -7592.39 iterations 3
Cbc0038I Pass  54: suminf.    0.36727 (4) obj. -7753.64 iterations 9
Cbc0038I Pass  55: suminf.    0.33633 (2) obj. -7746.95 iterations 5
Cbc0038I Pass  56: suminf.    0.50593 (2) obj. -7592.39 iterations 4
Cbc0038I Pass  57: suminf.    0.49704 (3) obj. -7592.39 iterations 3
Cbc0038I Pass  58: suminf.    0.35844 (3) obj. -7592.39 iterations 3
Cbc0038I Pass  59: suminf.    0.16004 (2) obj. -7991.81 iterations 3
Cbc0038I Pass  60: suminf.    0.69872 (5) obj. -7592.39 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 49 columns, reduced to 11 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -6914.75 - took 0.02 seconds
Cbc0012I Integer solution of -6914.7502 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 47 rows 49 columns, reduced to 6 rows 7 columns
Cbc0031I 12 added rows had average density of 22.916667
Cbc0013I At root node, 12 cuts changed objective from -10302.955 to -7395.563 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1050 row cuts average 4.1 elements, 5 column cuts (5 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 604 row cuts average 32.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 60 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 230 row cuts average 19.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 143 row cuts average 20.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 87 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.773 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -6914.7502 best solution, best possible -7395.5436 (1.58 seconds)
Cbc0001I Search completed - best objective -6914.750211, took 1755 iterations and 4 nodes (1.84 seconds)
Cbc0032I Strong branching done 46 times (346 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 1, 9 variables fixed on reduced cost
Total time (CPU seconds):       1.15   (Wallclock seconds):       1.84

