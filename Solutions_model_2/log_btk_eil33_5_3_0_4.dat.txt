Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-21) rows, 26 (-9) columns and 141 (-54) elements
Clp1000I sum of infeasibilities 1.89598e-05 - average 3.94997e-07, 0 fixed columns
Coin0506I Presolve 48 (0) rows, 26 (0) columns and 141 (0) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 96.233477
Clp0000I Optimal - objective value 96.233477
Coin0511I After Postsolve, objective 96.233477, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.233477
Clp0000I Optimal - objective value 96.233477
Clp0000I Optimal - objective value 96.233477
Coin0511I After Postsolve, objective 96.233477, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.23347705 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 48 rows, 26 columns (25 integer (25 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.52939
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 49.4091 iterations 15
Cbc0038I Solution found of 49.4091
Cbc0038I Relaxing continuous gives 49.4091
Cbc0038I Rounding solution of 47.9091 is better than previous of 49.4091

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 26 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 47.9091 to -37.0909 (0.01 seconds)
Cbc0038I Round again with cutoff of -43.0052
Cbc0038I Pass   2: suminf.    1.13292 (4) obj. -43.0052 iterations 3
Cbc0038I Pass   3: suminf.    0.79582 (3) obj. -43.0052 iterations 1
Cbc0038I Pass   4: suminf.    0.54701 (2) obj. -43.0052 iterations 2
Cbc0038I Pass   5: suminf.    0.49096 (2) obj. -43.0052 iterations 2
Cbc0038I Pass   6: suminf.    1.06928 (5) obj. -43.0052 iterations 5
Cbc0038I Pass   7: suminf.    1.50867 (8) obj. -43.0052 iterations 8
Cbc0038I Pass   8: suminf.    0.96575 (6) obj. -43.0052 iterations 9
Cbc0038I Pass   9: suminf.    1.18748 (7) obj. -43.0052 iterations 10
Cbc0038I Pass  10: suminf.    0.66230 (16) obj. -43.0052 iterations 6
Cbc0038I Pass  11: suminf.    3.33820 (12) obj. -43.0052 iterations 10
Cbc0038I Pass  12: suminf.    1.06928 (5) obj. -43.0052 iterations 19
Cbc0038I Pass  13: suminf.    0.49096 (2) obj. -43.0052 iterations 9
Cbc0038I Pass  14: suminf.    1.06928 (5) obj. -43.0052 iterations 5
Cbc0038I Pass  15: suminf.    1.17083 (4) obj. -43.0052 iterations 15
Cbc0038I Pass  16: suminf.    1.17083 (4) obj. -43.0052 iterations 1
Cbc0038I Pass  17: suminf.    1.90269 (6) obj. -43.0052 iterations 7
Cbc0038I Pass  18: suminf.    0.66230 (16) obj. -43.0052 iterations 8
Cbc0038I Pass  19: suminf.    4.07930 (13) obj. -43.0052 iterations 12
Cbc0038I Pass  20: suminf.    4.68939 (16) obj. -43.0052 iterations 7
Cbc0038I Pass  21: suminf.    4.28636 (15) obj. -43.0052 iterations 5
Cbc0038I Pass  22: suminf.    1.41677 (4) obj. -43.0052 iterations 15
Cbc0038I Pass  23: suminf.    0.90525 (4) obj. -43.0052 iterations 3
Cbc0038I Pass  24: suminf.    0.92027 (4) obj. -43.0052 iterations 5
Cbc0038I Pass  25: suminf.    0.64645 (3) obj. -43.0052 iterations 4
Cbc0038I Pass  26: suminf.    1.26971 (6) obj. -43.0052 iterations 5
Cbc0038I Pass  27: suminf.    2.53660 (11) obj. -43.0052 iterations 11
Cbc0038I Pass  28: suminf.    1.57128 (7) obj. -43.0052 iterations 5
Cbc0038I Pass  29: suminf.    1.15355 (7) obj. -43.0052 iterations 9
Cbc0038I Pass  30: suminf.    0.66230 (16) obj. -43.0052 iterations 7
Cbc0038I Pass  31: suminf.    2.75278 (14) obj. -43.0052 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 26 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -37.0909 - took 0.05 seconds
Cbc0012I Integer solution of -37.0909 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 48 rows 26 columns, reduced to 30 rows 17 columns
Cbc0031I 9 added rows had average density of 10.333333
Cbc0013I At root node, 46 cuts changed objective from -96.233477 to -37.0909 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 13 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -37.0909, took 11 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-22) rows, 48 (-18) columns and 418 (-305) elements
Clp1000I sum of infeasibilities 7.52939e-08 - average 1.63682e-09, 33 fixed columns
Coin0506I Presolve 11 (-35) rows, 14 (-34) columns and 45 (-373) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 3.0605166 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 12.88684
Clp0000I Optimal - objective value 12.88684
Coin0511I After Postsolve, objective 12.88684, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9681466 - largest nonzero change 0 ( 0%) - largest zero change 2.7517065e-05
Clp0000I Optimal - objective value 165.29458
Clp0000I Optimal - objective value 165.29458
Clp0000I Optimal - objective value 165.29458
Coin0511I After Postsolve, objective 165.29458, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 165.2945791 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 50 columns (50 integer (50 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.505%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.14547
Cbc0038I Pass   1: suminf.    1.77747 (12) obj. -77.2883 iterations 6
Cbc0038I Pass   2: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Solution found of 35
Cbc0038I Rounding solution of 33.5 is better than previous of 35

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 33.5 to 15.1364 (0.02 seconds)
Cbc0038I Round again with cutoff of 3.99339
Cbc0038I Pass   3: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass   4: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass   5: suminf.    0.33340 (1) obj. 3.99339 iterations 16
Cbc0038I Pass   6: suminf.    0.16000 (1) obj. -43.12 iterations 1
Cbc0038I Pass   7: suminf.    0.40560 (9) obj. -32.5149 iterations 7
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -32.4 iterations 5
Cbc0038I Pass   9: suminf.    0.40867 (1) obj. 3.99339 iterations 1
Cbc0038I Pass  10: suminf.    1.64462 (7) obj. 3.99339 iterations 10
Cbc0038I Pass  11: suminf.    1.49051 (7) obj. -12.177 iterations 3
Cbc0038I Pass  12: suminf.    0.62297 (2) obj. 3.99339 iterations 6
Cbc0038I Pass  13: suminf.    0.62297 (2) obj. 3.99339 iterations 0
Cbc0038I Pass  14: suminf.    0.35135 (1) obj. 3.99339 iterations 2
Cbc0038I Pass  15: suminf.    0.16000 (1) obj. -13.8018 iterations 1
Cbc0038I Pass  16: suminf.    1.05150 (7) obj. -27.2717 iterations 6
Cbc0038I Pass  17: suminf.    0.36000 (3) obj. -20.8018 iterations 3
Cbc0038I Pass  18: suminf.    0.32984 (1) obj. 3.99339 iterations 3
Cbc0038I Pass  19: suminf.    0.16000 (1) obj. -11.8018 iterations 1
Cbc0038I Pass  20: suminf.    3.35926 (10) obj. 3.99339 iterations 14
Cbc0038I Pass  21: suminf.    1.09844 (6) obj. 3.99339 iterations 10
Cbc0038I Pass  22: suminf.    1.09844 (6) obj. 3.99339 iterations 0
Cbc0038I Pass  23: suminf.    0.77927 (2) obj. 3.99339 iterations 7
Cbc0038I Pass  24: suminf.    0.63133 (2) obj. -10.6664 iterations 1
Cbc0038I Pass  25: suminf.    0.45699 (2) obj. 3.99339 iterations 1
Cbc0038I Pass  26: suminf.    0.45699 (2) obj. 3.99339 iterations 0
Cbc0038I Pass  27: suminf.    2.07063 (8) obj. 3.99339 iterations 19
Cbc0038I Pass  28: suminf.    1.35912 (6) obj. -2.8722 iterations 2
Cbc0038I Pass  29: suminf.    0.91421 (3) obj. 3.99339 iterations 5
Cbc0038I Pass  30: suminf.    0.58127 (3) obj. 3.99339 iterations 1
Cbc0038I Pass  31: suminf.    0.20000 (1) obj. 1.14548 iterations 2
Cbc0038I Pass  32: suminf.    0.23062 (1) obj. 3.99339 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 15.1364 to 13.6364 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.0638
Cbc0038I Pass  32: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass  33: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass  34: suminf.    0.45093 (1) obj. -16.0638 iterations 16
Cbc0038I Pass  35: suminf.    0.16000 (1) obj. -43.12 iterations 1
Cbc0038I Pass  36: suminf.    1.58176 (7) obj. -16.0638 iterations 10
Cbc0038I Pass  37: suminf.    1.39184 (8) obj. -16.0638 iterations 6
Cbc0038I Pass  38: suminf.    1.37887 (4) obj. -16.0638 iterations 6
Cbc0038I Pass  39: suminf.    1.18629 (4) obj. -36.245 iterations 1
Cbc0038I Pass  40: suminf.    0.57119 (2) obj. -16.0638 iterations 3
Cbc0038I Pass  41: suminf.    0.47711 (2) obj. -19.4411 iterations 1
Cbc0038I Pass  42: suminf.    1.63241 (7) obj. -16.0638 iterations 9
Cbc0038I Pass  43: suminf.    1.63241 (7) obj. -16.0638 iterations 2
Cbc0038I Pass  44: suminf.    0.45141 (1) obj. -16.0638 iterations 7
Cbc0038I Pass  45: suminf.    0.20000 (1) obj. -39.4454 iterations 1
Cbc0038I Pass  46: suminf.    0.45141 (1) obj. -16.0638 iterations 1
Cbc0038I Pass  47: suminf.    1.52020 (9) obj. -37.4889 iterations 15
Cbc0038I Pass  48: suminf.    0.72588 (4) obj. -39.2832 iterations 5
Cbc0038I Pass  49: suminf.    0.40645 (1) obj. -16.0638 iterations 4
Cbc0038I Pass  50: suminf.    0.20000 (1) obj. -35.2636 iterations 1
Cbc0038I Pass  51: suminf.    0.76297 (5) obj. -16.0638 iterations 8
Cbc0038I Pass  52: suminf.    0.47174 (3) obj. -18.7232 iterations 2
Cbc0038I Pass  53: suminf.    0.43846 (3) obj. -16.0638 iterations 3
Cbc0038I Pass  54: suminf.    0.43846 (3) obj. -16.0638 iterations 0
Cbc0038I Pass  55: suminf.    0.36344 (1) obj. -16.0638 iterations 3
Cbc0038I Pass  56: suminf.    0.20000 (1) obj. -31.2636 iterations 1
Cbc0038I Pass  57: suminf.    2.40247 (9) obj. -16.0638 iterations 7
Cbc0038I Pass  58: suminf.    2.40247 (9) obj. -16.0638 iterations 1
Cbc0038I Pass  59: suminf.    0.50514 (2) obj. -16.0638 iterations 7
Cbc0038I Pass  60: suminf.    0.16000 (1) obj. -23.6654 iterations 1
Cbc0038I Pass  61: suminf.    0.24174 (1) obj. -16.0638 iterations 1
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 13.6364 to -36.0909 (0.04 seconds)
Cbc0038I Round again with cutoff of -54.1515
Cbc0038I Pass  61: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass  62: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass  63: suminf.    0.53087 (7) obj. -54.1515 iterations 10
Cbc0038I Pass  64: suminf.    0.53087 (7) obj. -54.1515 iterations 0
Cbc0038I Pass  65: suminf.    0.25497 (1) obj. -54.1515 iterations 7
Cbc0038I Pass  66: suminf.    0.20000 (1) obj. -59.2636 iterations 1
Cbc0038I Pass  67: suminf.    1.70598 (7) obj. -54.1515 iterations 5
Cbc0038I Pass  68: suminf.    0.43077 (2) obj. -63.879 iterations 3
Cbc0038I Pass  69: suminf.    2.33068 (8) obj. -57.0764 iterations 9
Cbc0038I Pass  70: suminf.    2.16542 (11) obj. -54.1515 iterations 2
Cbc0038I Pass  71: suminf.    0.54735 (2) obj. -54.1515 iterations 11
Cbc0038I Pass  72: suminf.    0.54735 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  73: suminf.    0.36983 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  74: suminf.    0.32667 (2) obj. -58.1654 iterations 1
Cbc0038I Pass  75: suminf.    0.54735 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  76: suminf.    1.15346 (8) obj. -54.1515 iterations 11
Cbc0038I Pass  77: suminf.    1.15346 (8) obj. -54.1515 iterations 2
Cbc0038I Pass  78: suminf.    0.43624 (2) obj. -54.1515 iterations 10
Cbc0038I Pass  79: suminf.    0.43624 (2) obj. -54.1515 iterations 0
Cbc0038I Pass  80: suminf.    0.38058 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  81: suminf.    0.32667 (2) obj. -59.1654 iterations 1
Cbc0038I Pass  82: suminf.    1.90417 (9) obj. -54.1515 iterations 6
Cbc0038I Pass  83: suminf.    0.97086 (5) obj. -54.1515 iterations 3
Cbc0038I Pass  84: suminf.    0.43624 (2) obj. -54.1515 iterations 4
Cbc0038I Pass  85: suminf.    0.43624 (2) obj. -54.1515 iterations 0
Cbc0038I Pass  86: suminf.    0.38058 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  87: suminf.    0.32667 (2) obj. -59.1654 iterations 1
Cbc0038I Pass  88: suminf.    0.69434 (7) obj. -54.1515 iterations 8
Cbc0038I Pass  89: suminf.    0.60308 (7) obj. -54.2543 iterations 2
Cbc0038I Pass  90: suminf.    0.73783 (3) obj. -54.1515 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.0909 - took 0.03 seconds
Cbc0012I Integer solution of -36.0909 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 50 columns, reduced to 9 rows 9 columns
Cbc0012I Integer solution of -37.0909 found by DiveCoefficient after 33 iterations and 0 nodes (0.05 seconds)
Cbc0031I 14 added rows had average density of 2.1428571
Cbc0013I At root node, 14 cuts changed objective from -96.292805 to -37.0909 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37.0909, took 33 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-21) rows, 26 (-9) columns and 141 (-54) elements
Clp1000I sum of infeasibilities 1.89598e-05 - average 3.94997e-07, 0 fixed columns
Coin0506I Presolve 48 (0) rows, 26 (0) columns and 141 (0) elements
Clp0029I End of values pass after 26 iterations
Clp0000I Optimal - objective value 96.233477
Clp0000I Optimal - objective value 96.233477
Coin0511I After Postsolve, objective 96.233477, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 96.233477
Clp0000I Optimal - objective value 96.233477
Clp0000I Optimal - objective value 96.233477
Coin0511I After Postsolve, objective 96.233477, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.23347705 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 48 rows, 26 columns (25 integer (25 of which binary)) and 141 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.338%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 6.52939
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 49.4091 iterations 15
Cbc0038I Solution found of 49.4091
Cbc0038I Relaxing continuous gives 49.4091
Cbc0038I Rounding solution of 47.9091 is better than previous of 49.4091

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 26 columns, reduced to 30 rows 17 columns
Cbc0038I Mini branch and bound improved solution from 47.9091 to -37.0909 (0.02 seconds)
Cbc0038I Round again with cutoff of -43.0052
Cbc0038I Pass   2: suminf.    1.13292 (4) obj. -43.0052 iterations 3
Cbc0038I Pass   3: suminf.    0.79582 (3) obj. -43.0052 iterations 1
Cbc0038I Pass   4: suminf.    0.54701 (2) obj. -43.0052 iterations 2
Cbc0038I Pass   5: suminf.    0.49096 (2) obj. -43.0052 iterations 2
Cbc0038I Pass   6: suminf.    1.06928 (5) obj. -43.0052 iterations 5
Cbc0038I Pass   7: suminf.    1.50867 (8) obj. -43.0052 iterations 8
Cbc0038I Pass   8: suminf.    0.96575 (6) obj. -43.0052 iterations 9
Cbc0038I Pass   9: suminf.    1.18748 (7) obj. -43.0052 iterations 10
Cbc0038I Pass  10: suminf.    0.66230 (16) obj. -43.0052 iterations 6
Cbc0038I Pass  11: suminf.    3.33820 (12) obj. -43.0052 iterations 10
Cbc0038I Pass  12: suminf.    1.06928 (5) obj. -43.0052 iterations 19
Cbc0038I Pass  13: suminf.    0.49096 (2) obj. -43.0052 iterations 9
Cbc0038I Pass  14: suminf.    1.06928 (5) obj. -43.0052 iterations 5
Cbc0038I Pass  15: suminf.    1.17083 (4) obj. -43.0052 iterations 15
Cbc0038I Pass  16: suminf.    1.17083 (4) obj. -43.0052 iterations 1
Cbc0038I Pass  17: suminf.    1.90269 (6) obj. -43.0052 iterations 7
Cbc0038I Pass  18: suminf.    0.66230 (16) obj. -43.0052 iterations 8
Cbc0038I Pass  19: suminf.    4.07930 (13) obj. -43.0052 iterations 12
Cbc0038I Pass  20: suminf.    4.68939 (16) obj. -43.0052 iterations 7
Cbc0038I Pass  21: suminf.    4.28636 (15) obj. -43.0052 iterations 5
Cbc0038I Pass  22: suminf.    1.41677 (4) obj. -43.0052 iterations 15
Cbc0038I Pass  23: suminf.    0.90525 (4) obj. -43.0052 iterations 3
Cbc0038I Pass  24: suminf.    0.92027 (4) obj. -43.0052 iterations 5
Cbc0038I Pass  25: suminf.    0.64645 (3) obj. -43.0052 iterations 4
Cbc0038I Pass  26: suminf.    1.26971 (6) obj. -43.0052 iterations 5
Cbc0038I Pass  27: suminf.    2.53660 (11) obj. -43.0052 iterations 11
Cbc0038I Pass  28: suminf.    1.57128 (7) obj. -43.0052 iterations 5
Cbc0038I Pass  29: suminf.    1.15355 (7) obj. -43.0052 iterations 9
Cbc0038I Pass  30: suminf.    0.66230 (16) obj. -43.0052 iterations 7
Cbc0038I Pass  31: suminf.    2.75278 (14) obj. -43.0052 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 26 columns, reduced to 38 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -37.0909 - took 0.02 seconds
Cbc0012I Integer solution of -37.0909 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 48 rows 26 columns, reduced to 30 rows 17 columns
Cbc0031I 9 added rows had average density of 10.333333
Cbc0013I At root node, 46 cuts changed objective from -96.233477 to -37.0909 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 20 row cuts average 3.0 elements, 3 column cuts (3 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 13 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -37.0909, took 11 iterations and 0 nodes (0.03 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-23) rows, 48 (-19) columns and 418 (-306) elements
Clp1000I sum of infeasibilities 7.52939e-08 - average 1.63682e-09, 33 fixed columns
Coin0506I Presolve 11 (-35) rows, 14 (-34) columns and 45 (-373) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 3.0605166 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 12.88684
Clp0000I Optimal - objective value 12.88684
Coin0511I After Postsolve, objective 12.88684, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9681466 - largest nonzero change 0 ( 0%) - largest zero change 2.7517065e-05
Clp0000I Optimal - objective value 165.29458
Clp0000I Optimal - objective value 165.29458
Clp0000I Optimal - objective value 165.29458
Coin0511I After Postsolve, objective 165.29458, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 165.2945791 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 48 rows, 50 columns (50 integer (50 of which binary)) and 435 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.505%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.14547
Cbc0038I Pass   1: suminf.    1.77747 (12) obj. -77.2883 iterations 6
Cbc0038I Pass   2: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Solution found of 35
Cbc0038I Rounding solution of 33.5 is better than previous of 35

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 33.5 to 15.1364 (0.01 seconds)
Cbc0038I Round again with cutoff of 3.99339
Cbc0038I Pass   3: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass   4: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass   5: suminf.    0.33340 (1) obj. 3.99339 iterations 16
Cbc0038I Pass   6: suminf.    0.16000 (1) obj. -43.12 iterations 1
Cbc0038I Pass   7: suminf.    0.40560 (9) obj. -32.5149 iterations 7
Cbc0038I Pass   8: suminf.    0.20000 (1) obj. -32.4 iterations 5
Cbc0038I Pass   9: suminf.    0.40867 (1) obj. 3.99339 iterations 1
Cbc0038I Pass  10: suminf.    1.64462 (7) obj. 3.99339 iterations 10
Cbc0038I Pass  11: suminf.    1.49051 (7) obj. -12.177 iterations 3
Cbc0038I Pass  12: suminf.    0.62297 (2) obj. 3.99339 iterations 6
Cbc0038I Pass  13: suminf.    0.62297 (2) obj. 3.99339 iterations 0
Cbc0038I Pass  14: suminf.    0.35135 (1) obj. 3.99339 iterations 2
Cbc0038I Pass  15: suminf.    0.16000 (1) obj. -13.8018 iterations 1
Cbc0038I Pass  16: suminf.    1.05150 (7) obj. -27.2717 iterations 6
Cbc0038I Pass  17: suminf.    0.36000 (3) obj. -20.8018 iterations 3
Cbc0038I Pass  18: suminf.    0.32984 (1) obj. 3.99339 iterations 3
Cbc0038I Pass  19: suminf.    0.16000 (1) obj. -11.8018 iterations 1
Cbc0038I Pass  20: suminf.    3.35926 (10) obj. 3.99339 iterations 14
Cbc0038I Pass  21: suminf.    1.09844 (6) obj. 3.99339 iterations 10
Cbc0038I Pass  22: suminf.    1.09844 (6) obj. 3.99339 iterations 0
Cbc0038I Pass  23: suminf.    0.77927 (2) obj. 3.99339 iterations 7
Cbc0038I Pass  24: suminf.    0.63133 (2) obj. -10.6664 iterations 1
Cbc0038I Pass  25: suminf.    0.45699 (2) obj. 3.99339 iterations 1
Cbc0038I Pass  26: suminf.    0.45699 (2) obj. 3.99339 iterations 0
Cbc0038I Pass  27: suminf.    2.07063 (8) obj. 3.99339 iterations 19
Cbc0038I Pass  28: suminf.    1.35912 (6) obj. -2.8722 iterations 2
Cbc0038I Pass  29: suminf.    0.91421 (3) obj. 3.99339 iterations 5
Cbc0038I Pass  30: suminf.    0.58127 (3) obj. 3.99339 iterations 1
Cbc0038I Pass  31: suminf.    0.20000 (1) obj. 1.14548 iterations 2
Cbc0038I Pass  32: suminf.    0.23062 (1) obj. 3.99339 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 24 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 15.1364 to 13.6364 (0.02 seconds)
Cbc0038I Round again with cutoff of -16.0638
Cbc0038I Pass  32: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass  33: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass  34: suminf.    0.45093 (1) obj. -16.0638 iterations 16
Cbc0038I Pass  35: suminf.    0.16000 (1) obj. -43.12 iterations 1
Cbc0038I Pass  36: suminf.    1.58176 (7) obj. -16.0638 iterations 10
Cbc0038I Pass  37: suminf.    1.39184 (8) obj. -16.0638 iterations 6
Cbc0038I Pass  38: suminf.    1.37887 (4) obj. -16.0638 iterations 6
Cbc0038I Pass  39: suminf.    1.18629 (4) obj. -36.245 iterations 1
Cbc0038I Pass  40: suminf.    0.57119 (2) obj. -16.0638 iterations 3
Cbc0038I Pass  41: suminf.    0.47711 (2) obj. -19.4411 iterations 1
Cbc0038I Pass  42: suminf.    1.63241 (7) obj. -16.0638 iterations 9
Cbc0038I Pass  43: suminf.    1.63241 (7) obj. -16.0638 iterations 2
Cbc0038I Pass  44: suminf.    0.45141 (1) obj. -16.0638 iterations 7
Cbc0038I Pass  45: suminf.    0.20000 (1) obj. -39.4454 iterations 1
Cbc0038I Pass  46: suminf.    0.45141 (1) obj. -16.0638 iterations 1
Cbc0038I Pass  47: suminf.    1.52020 (9) obj. -37.4889 iterations 15
Cbc0038I Pass  48: suminf.    0.72588 (4) obj. -39.2832 iterations 5
Cbc0038I Pass  49: suminf.    0.40645 (1) obj. -16.0638 iterations 4
Cbc0038I Pass  50: suminf.    0.20000 (1) obj. -35.2636 iterations 1
Cbc0038I Pass  51: suminf.    0.76297 (5) obj. -16.0638 iterations 8
Cbc0038I Pass  52: suminf.    0.47174 (3) obj. -18.7232 iterations 2
Cbc0038I Pass  53: suminf.    0.43846 (3) obj. -16.0638 iterations 3
Cbc0038I Pass  54: suminf.    0.43846 (3) obj. -16.0638 iterations 0
Cbc0038I Pass  55: suminf.    0.36344 (1) obj. -16.0638 iterations 3
Cbc0038I Pass  56: suminf.    0.20000 (1) obj. -31.2636 iterations 1
Cbc0038I Pass  57: suminf.    2.40247 (9) obj. -16.0638 iterations 7
Cbc0038I Pass  58: suminf.    2.40247 (9) obj. -16.0638 iterations 1
Cbc0038I Pass  59: suminf.    0.50514 (2) obj. -16.0638 iterations 7
Cbc0038I Pass  60: suminf.    0.16000 (1) obj. -23.6654 iterations 1
Cbc0038I Pass  61: suminf.    0.24174 (1) obj. -16.0638 iterations 1
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound improved solution from 13.6364 to -36.0909 (0.03 seconds)
Cbc0038I Round again with cutoff of -54.1515
Cbc0038I Pass  61: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass  62: suminf.    1.77747 (12) obj. -77.2883 iterations 0
Cbc0038I Pass  63: suminf.    0.53087 (7) obj. -54.1515 iterations 10
Cbc0038I Pass  64: suminf.    0.53087 (7) obj. -54.1515 iterations 0
Cbc0038I Pass  65: suminf.    0.25497 (1) obj. -54.1515 iterations 7
Cbc0038I Pass  66: suminf.    0.20000 (1) obj. -59.2636 iterations 1
Cbc0038I Pass  67: suminf.    1.70598 (7) obj. -54.1515 iterations 5
Cbc0038I Pass  68: suminf.    0.43077 (2) obj. -63.879 iterations 3
Cbc0038I Pass  69: suminf.    2.33068 (8) obj. -57.0764 iterations 9
Cbc0038I Pass  70: suminf.    2.16542 (11) obj. -54.1515 iterations 2
Cbc0038I Pass  71: suminf.    0.54735 (2) obj. -54.1515 iterations 11
Cbc0038I Pass  72: suminf.    0.54735 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  73: suminf.    0.36983 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  74: suminf.    0.32667 (2) obj. -58.1654 iterations 1
Cbc0038I Pass  75: suminf.    0.54735 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  76: suminf.    1.15346 (8) obj. -54.1515 iterations 11
Cbc0038I Pass  77: suminf.    1.15346 (8) obj. -54.1515 iterations 2
Cbc0038I Pass  78: suminf.    0.43624 (2) obj. -54.1515 iterations 10
Cbc0038I Pass  79: suminf.    0.43624 (2) obj. -54.1515 iterations 0
Cbc0038I Pass  80: suminf.    0.38058 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  81: suminf.    0.32667 (2) obj. -59.1654 iterations 1
Cbc0038I Pass  82: suminf.    1.90417 (9) obj. -54.1515 iterations 6
Cbc0038I Pass  83: suminf.    0.97086 (5) obj. -54.1515 iterations 3
Cbc0038I Pass  84: suminf.    0.43624 (2) obj. -54.1515 iterations 4
Cbc0038I Pass  85: suminf.    0.43624 (2) obj. -54.1515 iterations 0
Cbc0038I Pass  86: suminf.    0.38058 (2) obj. -54.1515 iterations 1
Cbc0038I Pass  87: suminf.    0.32667 (2) obj. -59.1654 iterations 1
Cbc0038I Pass  88: suminf.    0.69434 (7) obj. -54.1515 iterations 8
Cbc0038I Pass  89: suminf.    0.60308 (7) obj. -54.2543 iterations 2
Cbc0038I Pass  90: suminf.    0.73783 (3) obj. -54.1515 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 48 rows 50 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -36.0909 - took 0.03 seconds
Cbc0012I Integer solution of -36.0909 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 48 rows 50 columns, reduced to 9 rows 9 columns
Cbc0012I Integer solution of -37.0909 found by DiveCoefficient after 33 iterations and 0 nodes (0.05 seconds)
Cbc0031I 14 added rows had average density of 2.1428571
Cbc0013I At root node, 14 cuts changed objective from -96.292805 to -37.0909 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 160 row cuts average 2.0 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 13 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 18 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 18 row cuts average 7.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -37.0909, took 33 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

