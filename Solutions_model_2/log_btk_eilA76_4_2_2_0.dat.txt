Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.4061e-05 - average 3.31286e-07, 13 fixed columns
Coin0506I Presolve 105 (-28) rows, 61 (-14) columns and 324 (-84) elements
Clp0029I End of values pass after 61 iterations
Clp0000I Optimal - objective value 50.910941
Clp0000I Optimal - objective value 50.910941
Coin0511I After Postsolve, objective 50.910941, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.910941
Clp0000I Optimal - objective value 50.910941
Clp0000I Optimal - objective value 50.910941
Coin0511I After Postsolve, objective 50.910941, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.91094094 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.22587
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.94316 iterations 44
Cbc0038I Solution found of -8.94316
Cbc0038I Relaxing continuous gives -8.94316
Cbc0038I Rounding solution of -13.7452 is better than previous of -8.94316

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 61 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -13.7452 to -24.0624 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.7474
Cbc0038I Pass   2: suminf.    1.70046 (10) obj. -26.7474 iterations 12
Cbc0038I Pass   3: suminf.    1.94176 (7) obj. -26.7474 iterations 13
Cbc0038I Pass   4: suminf.    1.55719 (5) obj. -26.7474 iterations 3
Cbc0038I Pass   5: suminf.    2.08889 (6) obj. -26.7474 iterations 11
Cbc0038I Pass   6: suminf.    1.31313 (5) obj. -26.7474 iterations 2
Cbc0038I Pass   7: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I Pass   8: suminf.    1.54707 (6) obj. -26.7474 iterations 8
Cbc0038I Pass   9: suminf.    1.45449 (6) obj. -26.7474 iterations 3
Cbc0038I Pass  10: suminf.    1.34791 (4) obj. -26.7474 iterations 8
Cbc0038I Pass  11: suminf.    0.97063 (3) obj. -26.7474 iterations 1
Cbc0038I Pass  12: suminf.    1.08014 (5) obj. -26.7474 iterations 7
Cbc0038I Pass  13: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I Pass  14: suminf.    1.54707 (6) obj. -26.7474 iterations 8
Cbc0038I Pass  15: suminf.    1.45449 (6) obj. -26.7474 iterations 3
Cbc0038I Pass  16: suminf.    1.34791 (4) obj. -26.7474 iterations 8
Cbc0038I Pass  17: suminf.    0.97063 (3) obj. -26.7474 iterations 1
Cbc0038I Pass  18: suminf.    1.08014 (5) obj. -26.7474 iterations 7
Cbc0038I Pass  19: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I Pass  20: suminf.    1.54707 (6) obj. -26.7474 iterations 8
Cbc0038I Pass  21: suminf.    1.45449 (6) obj. -26.7474 iterations 3
Cbc0038I Pass  22: suminf.    1.34791 (4) obj. -26.7474 iterations 8
Cbc0038I Pass  23: suminf.    0.97063 (3) obj. -26.7474 iterations 1
Cbc0038I Pass  24: suminf.    1.08014 (5) obj. -26.7474 iterations 7
Cbc0038I Pass  25: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I Pass  26: suminf.    1.54707 (6) obj. -26.7474 iterations 8
Cbc0038I Pass  27: suminf.    1.45449 (6) obj. -26.7474 iterations 3
Cbc0038I Pass  28: suminf.    1.34791 (4) obj. -26.7474 iterations 8
Cbc0038I Pass  29: suminf.    0.97063 (3) obj. -26.7474 iterations 1
Cbc0038I Pass  30: suminf.    1.08014 (5) obj. -26.7474 iterations 7
Cbc0038I Pass  31: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.0624 - took 0.04 seconds
Cbc0012I Integer solution of -24.06243 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 61 rows 36 columns
Cbc0031I 27 added rows had average density of 46.185185
Cbc0013I At root node, 27 cuts changed objective from -50.910941 to -44.059355 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12449 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.077 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2039 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.06243 best solution, best possible -44.059355 (0.75 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -24.348899 found by RINS after 8666 iterations and 44 nodes (0.95 seconds)
Cbc0012I Integer solution of -24.433879 found by rounding after 8938 iterations and 67 nodes (0.98 seconds)
Cbc0001I Search completed - best objective -24.43387899999999, took 9746 iterations and 90 nodes (1.01 seconds)
Cbc0032I Strong branching done 832 times (15132 iterations), fathomed 11 nodes and fixed 43 variables
Cbc0035I Maximum depth 26, 223 variables fixed on reduced cost
Total time (CPU seconds):       0.99   (Wallclock seconds):       1.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 118 (-34) columns and 2043 (-1260) elements
Clp1000I sum of infeasibilities 2.27766e-07 - average 2.21132e-09, 27 fixed columns
Coin0506I Presolve 78 (-25) rows, 90 (-28) columns and 1215 (-828) elements
Clp0006I 0  Obj 53.665057 Dual inf 5.9066887 (90)
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.0964207 - largest nonzero change 2.3020663e-05 ( 0.0015420975%) - largest zero change 2.8192747e-05
Clp0000I Optimal - objective value 62.299845
Clp0000I Optimal - objective value 62.299845
Coin0511I After Postsolve, objective 62.299845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 62.299845
Clp0000I Optimal - objective value 62.299845
Clp0000I Optimal - objective value 62.299845
Clp0000I Optimal - objective value 62.299845
Coin0511I After Postsolve, objective 62.299845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.29984513 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 121 columns (121 integer (121 of which binary)) and 2057 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.550%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.44245
Cbc0038I Pass   1: suminf.    2.30889 (33) obj. -51.2897 iterations 9
Cbc0038I Pass   2: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass   3: suminf.    0.68406 (14) obj. -28.5139 iterations 13
Cbc0038I Solution found of -12.3359
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 121 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16.6247
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass   5: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass   6: suminf.    0.23916 (7) obj. -21.0194 iterations 20
Cbc0038I Pass   7: suminf.    0.47172 (9) obj. -16.6247 iterations 11
Cbc0038I Pass   8: suminf.    0.90155 (6) obj. -16.6247 iterations 12
Cbc0038I Pass   9: suminf.    0.65600 (11) obj. -16.6247 iterations 4
Cbc0038I Pass  10: suminf.    0.58065 (4) obj. -16.6247 iterations 18
Cbc0038I Pass  11: suminf.    0.33022 (11) obj. -16.6247 iterations 10
Cbc0038I Pass  12: suminf.    1.22821 (11) obj. -16.6247 iterations 13
Cbc0038I Pass  13: suminf.    0.93757 (8) obj. -16.6247 iterations 5
Cbc0038I Pass  14: suminf.    1.02853 (8) obj. -16.6247 iterations 4
Cbc0038I Pass  15: suminf.    0.43359 (5) obj. -16.6247 iterations 8
Cbc0038I Pass  16: suminf.    0.82617 (8) obj. -16.6247 iterations 8
Cbc0038I Pass  17: suminf.    1.82276 (13) obj. -16.6247 iterations 35
Cbc0038I Pass  18: suminf.    1.32992 (10) obj. -16.8136 iterations 8
Cbc0038I Pass  19: suminf.    1.02902 (12) obj. -16.6247 iterations 22
Cbc0038I Pass  20: suminf.    0.35079 (6) obj. -16.6247 iterations 9
Cbc0038I Pass  21: suminf.    0.85571 (7) obj. -16.6247 iterations 12
Cbc0038I Pass  22: suminf.    0.43359 (5) obj. -16.6247 iterations 4
Cbc0038I Pass  23: suminf.    0.85748 (13) obj. -16.6247 iterations 23
Cbc0038I Pass  24: suminf.    0.77368 (11) obj. -16.6247 iterations 5
Cbc0038I Pass  25: suminf.    1.57497 (12) obj. -16.6247 iterations 22
Cbc0038I Pass  26: suminf.    1.06705 (12) obj. -16.6247 iterations 6
Cbc0038I Pass  27: suminf.    1.47956 (11) obj. -16.6247 iterations 20
Cbc0038I Pass  28: suminf.    1.40940 (9) obj. -16.6247 iterations 5
Cbc0038I Pass  29: suminf.    1.94351 (11) obj. -16.6247 iterations 7
Cbc0038I Pass  30: suminf.    1.94351 (11) obj. -16.6247 iterations 0
Cbc0038I Pass  31: suminf.    1.47956 (11) obj. -16.6247 iterations 10
Cbc0038I Pass  32: suminf.    2.22345 (22) obj. -16.6247 iterations 22
Cbc0038I Pass  33: suminf.    1.92983 (11) obj. -16.6247 iterations 7
Cbc0038I Rounding solution of -14.4724 is better than previous of -12.3359

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 121 columns, reduced to 31 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -14.4724 to -16.4993 (0.08 seconds)
Cbc0038I Round again with cutoff of -24.3443
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass  34: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass  35: suminf.    1.07778 (12) obj. -24.3443 iterations 36
Cbc0038I Pass  36: suminf.    1.07778 (12) obj. -24.3443 iterations 0
Cbc0038I Pass  37: suminf.    0.71116 (6) obj. -24.3443 iterations 15
Cbc0038I Pass  38: suminf.    0.54945 (17) obj. -24.3443 iterations 11
Cbc0038I Pass  39: suminf.    1.00019 (15) obj. -24.3443 iterations 10
Cbc0038I Pass  40: suminf.    1.00019 (15) obj. -24.3443 iterations 4
Cbc0038I Pass  41: suminf.    1.13469 (13) obj. -24.3443 iterations 16
Cbc0038I Pass  42: suminf.    1.13469 (13) obj. -24.3443 iterations 3
Cbc0038I Pass  43: suminf.    1.04664 (13) obj. -24.3443 iterations 7
Cbc0038I Pass  44: suminf.    1.04664 (13) obj. -24.3443 iterations 4
Cbc0038I Pass  45: suminf.    1.19467 (13) obj. -24.3443 iterations 6
Cbc0038I Pass  46: suminf.    0.73170 (9) obj. -24.3443 iterations 7
Cbc0038I Pass  47: suminf.    1.22967 (11) obj. -24.3443 iterations 12
Cbc0038I Pass  48: suminf.    2.12880 (19) obj. -24.3443 iterations 25
Cbc0038I Pass  49: suminf.    1.83912 (15) obj. -24.3443 iterations 10
Cbc0038I Pass  50: suminf.    1.90992 (12) obj. -24.3443 iterations 14
Cbc0038I Pass  51: suminf.    1.64239 (12) obj. -24.3443 iterations 2
Cbc0038I Pass  52: suminf.    1.04664 (13) obj. -24.3443 iterations 14
Cbc0038I Pass  53: suminf.    1.04664 (13) obj. -24.3443 iterations 1
Cbc0038I Pass  54: suminf.    1.13469 (13) obj. -24.3443 iterations 3
Cbc0038I Pass  55: suminf.    1.13469 (13) obj. -24.3443 iterations 1
Cbc0038I Pass  56: suminf.    1.04664 (13) obj. -24.3443 iterations 3
Cbc0038I Pass  57: suminf.    1.60337 (19) obj. -24.3443 iterations 28
Cbc0038I Pass  58: suminf.    1.42722 (18) obj. -24.3443 iterations 8
Cbc0038I Pass  59: suminf.    2.28200 (14) obj. -24.3443 iterations 20
Cbc0038I Pass  60: suminf.    2.03507 (14) obj. -24.3443 iterations 1
Cbc0038I Pass  61: suminf.    2.15669 (16) obj. -24.3443 iterations 9
Cbc0038I Pass  62: suminf.    2.07251 (13) obj. -24.3443 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 121 columns, reduced to 28 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -16.4993 - took 0.11 seconds
Cbc0012I Integer solution of -16.49929 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 106 rows 121 columns, reduced to 13 rows 15 columns
Cbc0031I 51 added rows had average density of 45.54902
Cbc0013I At root node, 51 cuts changed objective from -55.222765 to -30.367437 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12255 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1837 row cuts average 112.8 elements, 0 column cuts (0 active)  in 0.167 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 325 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 946 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 66.8 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 126 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.384 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.49929 best solution, best possible -30.367437 (2.08 seconds)
Cbc0012I Integer solution of -20.659149 found by rounding after 5732 iterations and 1 nodes (2.08 seconds)
Cbc0012I Integer solution of -21.058899 found by DiveCoefficient after 5732 iterations and 1 nodes (2.08 seconds)
Cbc0012I Integer solution of -24.177979 found by rounding after 5861 iterations and 2 nodes (2.22 seconds)
Cbc0012I Integer solution of -24.433879 found by rounding after 6113 iterations and 32 nodes (2.77 seconds)
Cbc0010I After 32 nodes, 3 on tree, -24.433879 best solution, best possible -30.367437 (2.82 seconds)
Cbc0038I Full problem 106 rows 121 columns, reduced to 36 rows 48 columns
Cbc0010I After 45 nodes, 6 on tree, -24.433879 best solution, best possible -29.736868 (3.57 seconds)
Cbc0010I After 68 nodes, 5 on tree, -24.433879 best solution, best possible -29.736868 (4.28 seconds)
Cbc0001I Search completed - best objective -24.43387899999999, took 8539 iterations and 76 nodes (4.39 seconds)
Cbc0032I Strong branching done 860 times (13012 iterations), fathomed 6 nodes and fixed 8 variables
Cbc0035I Maximum depth 11, 157 variables fixed on reduced cost
Total time (CPU seconds):       3.12   (Wallclock seconds):       4.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-22) rows, 75 (-3) columns and 408 (-45) elements
Clp1000I sum of infeasibilities 4.4061e-05 - average 3.31286e-07, 13 fixed columns
Coin0506I Presolve 105 (-28) rows, 61 (-14) columns and 324 (-84) elements
Clp0029I End of values pass after 61 iterations
Clp0000I Optimal - objective value 50.910941
Clp0000I Optimal - objective value 50.910941
Coin0511I After Postsolve, objective 50.910941, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 50.910941
Clp0000I Optimal - objective value 50.910941
Clp0000I Optimal - objective value 50.910941
Coin0511I After Postsolve, objective 50.910941, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 50.91094094 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 133 rows, 75 columns (74 integer (74 of which binary)) and 408 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.157%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 35 integers unsatisfied sum - 6.22587
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.94316 iterations 44
Cbc0038I Solution found of -8.94316
Cbc0038I Relaxing continuous gives -8.94316
Cbc0038I Rounding solution of -13.7452 is better than previous of -8.94316

Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 61 rows 36 columns
Cbc0038I Mini branch and bound improved solution from -13.7452 to -24.0624 (0.03 seconds)
Cbc0038I Round again with cutoff of -26.7474
Cbc0038I Pass   2: suminf.    1.70046 (10) obj. -26.7474 iterations 12
Cbc0038I Pass   3: suminf.    1.94176 (7) obj. -26.7474 iterations 13
Cbc0038I Pass   4: suminf.    1.55719 (5) obj. -26.7474 iterations 3
Cbc0038I Pass   5: suminf.    2.08889 (6) obj. -26.7474 iterations 11
Cbc0038I Pass   6: suminf.    1.31313 (5) obj. -26.7474 iterations 2
Cbc0038I Pass   7: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I Pass   8: suminf.    1.54707 (6) obj. -26.7474 iterations 8
Cbc0038I Pass   9: suminf.    1.45449 (6) obj. -26.7474 iterations 3
Cbc0038I Pass  10: suminf.    1.34791 (4) obj. -26.7474 iterations 8
Cbc0038I Pass  11: suminf.    0.97063 (3) obj. -26.7474 iterations 1
Cbc0038I Pass  12: suminf.    1.08014 (5) obj. -26.7474 iterations 7
Cbc0038I Pass  13: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I Pass  14: suminf.    1.54707 (6) obj. -26.7474 iterations 8
Cbc0038I Pass  15: suminf.    1.45449 (6) obj. -26.7474 iterations 3
Cbc0038I Pass  16: suminf.    1.34791 (4) obj. -26.7474 iterations 8
Cbc0038I Pass  17: suminf.    0.97063 (3) obj. -26.7474 iterations 1
Cbc0038I Pass  18: suminf.    1.08014 (5) obj. -26.7474 iterations 7
Cbc0038I Pass  19: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I Pass  20: suminf.    1.54707 (6) obj. -26.7474 iterations 8
Cbc0038I Pass  21: suminf.    1.45449 (6) obj. -26.7474 iterations 3
Cbc0038I Pass  22: suminf.    1.34791 (4) obj. -26.7474 iterations 8
Cbc0038I Pass  23: suminf.    0.97063 (3) obj. -26.7474 iterations 1
Cbc0038I Pass  24: suminf.    1.08014 (5) obj. -26.7474 iterations 7
Cbc0038I Pass  25: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I Pass  26: suminf.    1.54707 (6) obj. -26.7474 iterations 8
Cbc0038I Pass  27: suminf.    1.45449 (6) obj. -26.7474 iterations 3
Cbc0038I Pass  28: suminf.    1.34791 (4) obj. -26.7474 iterations 8
Cbc0038I Pass  29: suminf.    0.97063 (3) obj. -26.7474 iterations 1
Cbc0038I Pass  30: suminf.    1.08014 (5) obj. -26.7474 iterations 7
Cbc0038I Pass  31: suminf.    1.04373 (4) obj. -26.7474 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 37 integers at bound fixed and 0 continuous
Cbc0038I Full problem 133 rows 75 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.0624 - took 0.04 seconds
Cbc0012I Integer solution of -24.06243 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 61 rows 36 columns
Cbc0031I 27 added rows had average density of 46.185185
Cbc0013I At root node, 27 cuts changed objective from -50.910941 to -44.059355 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12449 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2039 row cuts average 75.0 elements, 0 column cuts (0 active)  in 0.096 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.06243 best solution, best possible -44.059355 (0.90 seconds)
Cbc0038I Full problem 133 rows 75 columns, reduced to 6 rows 7 columns
Cbc0012I Integer solution of -24.348899 found by RINS after 8666 iterations and 44 nodes (1.14 seconds)
Cbc0012I Integer solution of -24.433879 found by rounding after 8938 iterations and 67 nodes (1.16 seconds)
Cbc0001I Search completed - best objective -24.43387899999999, took 9746 iterations and 90 nodes (1.20 seconds)
Cbc0032I Strong branching done 832 times (15132 iterations), fathomed 11 nodes and fixed 43 variables
Cbc0035I Maximum depth 26, 223 variables fixed on reduced cost
Total time (CPU seconds):       1.16   (Wallclock seconds):       1.23

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 118 (-35) columns and 2043 (-1261) elements
Clp1000I sum of infeasibilities 2.27766e-07 - average 2.21132e-09, 27 fixed columns
Coin0506I Presolve 78 (-25) rows, 90 (-28) columns and 1215 (-828) elements
Clp0006I 0  Obj 53.665057 Dual inf 5.9066887 (90)
Clp0029I End of values pass after 90 iterations
Clp0014I Perturbing problem by 0.001% of 2.0964207 - largest nonzero change 2.3020663e-05 ( 0.0015420975%) - largest zero change 2.8192747e-05
Clp0000I Optimal - objective value 62.299845
Clp0000I Optimal - objective value 62.299845
Coin0511I After Postsolve, objective 62.299845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 62.299845
Clp0000I Optimal - objective value 62.299845
Clp0000I Optimal - objective value 62.299845
Clp0000I Optimal - objective value 62.299845
Coin0511I After Postsolve, objective 62.299845, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.29984513 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 121 columns (121 integer (121 of which binary)) and 2057 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.550%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.44245
Cbc0038I Pass   1: suminf.    2.30889 (33) obj. -51.2897 iterations 9
Cbc0038I Pass   2: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass   3: suminf.    0.68406 (14) obj. -28.5139 iterations 13
Cbc0038I Solution found of -12.3359
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 121 columns, reduced to 12 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -16.6247
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass   5: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass   6: suminf.    0.23916 (7) obj. -21.0194 iterations 20
Cbc0038I Pass   7: suminf.    0.47172 (9) obj. -16.6247 iterations 11
Cbc0038I Pass   8: suminf.    0.90155 (6) obj. -16.6247 iterations 12
Cbc0038I Pass   9: suminf.    0.65600 (11) obj. -16.6247 iterations 4
Cbc0038I Pass  10: suminf.    0.58065 (4) obj. -16.6247 iterations 18
Cbc0038I Pass  11: suminf.    0.33022 (11) obj. -16.6247 iterations 10
Cbc0038I Pass  12: suminf.    1.22821 (11) obj. -16.6247 iterations 13
Cbc0038I Pass  13: suminf.    0.93757 (8) obj. -16.6247 iterations 5
Cbc0038I Pass  14: suminf.    1.02853 (8) obj. -16.6247 iterations 4
Cbc0038I Pass  15: suminf.    0.43359 (5) obj. -16.6247 iterations 8
Cbc0038I Pass  16: suminf.    0.82617 (8) obj. -16.6247 iterations 8
Cbc0038I Pass  17: suminf.    1.82276 (13) obj. -16.6247 iterations 35
Cbc0038I Pass  18: suminf.    1.32992 (10) obj. -16.8136 iterations 8
Cbc0038I Pass  19: suminf.    1.02902 (12) obj. -16.6247 iterations 22
Cbc0038I Pass  20: suminf.    0.35079 (6) obj. -16.6247 iterations 9
Cbc0038I Pass  21: suminf.    0.85571 (7) obj. -16.6247 iterations 12
Cbc0038I Pass  22: suminf.    0.43359 (5) obj. -16.6247 iterations 4
Cbc0038I Pass  23: suminf.    0.85748 (13) obj. -16.6247 iterations 23
Cbc0038I Pass  24: suminf.    0.77368 (11) obj. -16.6247 iterations 5
Cbc0038I Pass  25: suminf.    1.57497 (12) obj. -16.6247 iterations 22
Cbc0038I Pass  26: suminf.    1.06705 (12) obj. -16.6247 iterations 6
Cbc0038I Pass  27: suminf.    1.47956 (11) obj. -16.6247 iterations 20
Cbc0038I Pass  28: suminf.    1.40940 (9) obj. -16.6247 iterations 5
Cbc0038I Pass  29: suminf.    1.94351 (11) obj. -16.6247 iterations 7
Cbc0038I Pass  30: suminf.    1.94351 (11) obj. -16.6247 iterations 0
Cbc0038I Pass  31: suminf.    1.47956 (11) obj. -16.6247 iterations 10
Cbc0038I Pass  32: suminf.    2.22345 (22) obj. -16.6247 iterations 22
Cbc0038I Pass  33: suminf.    1.92983 (11) obj. -16.6247 iterations 7
Cbc0038I Rounding solution of -14.4724 is better than previous of -12.3359

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 121 columns, reduced to 31 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -14.4724 to -16.4993 (0.09 seconds)
Cbc0038I Round again with cutoff of -24.3443
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass  34: suminf.    2.30889 (33) obj. -51.2897 iterations 0
Cbc0038I Pass  35: suminf.    1.07778 (12) obj. -24.3443 iterations 36
Cbc0038I Pass  36: suminf.    1.07778 (12) obj. -24.3443 iterations 0
Cbc0038I Pass  37: suminf.    0.71116 (6) obj. -24.3443 iterations 15
Cbc0038I Pass  38: suminf.    0.54945 (17) obj. -24.3443 iterations 11
Cbc0038I Pass  39: suminf.    1.00019 (15) obj. -24.3443 iterations 10
Cbc0038I Pass  40: suminf.    1.00019 (15) obj. -24.3443 iterations 4
Cbc0038I Pass  41: suminf.    1.13469 (13) obj. -24.3443 iterations 16
Cbc0038I Pass  42: suminf.    1.13469 (13) obj. -24.3443 iterations 3
Cbc0038I Pass  43: suminf.    1.04664 (13) obj. -24.3443 iterations 7
Cbc0038I Pass  44: suminf.    1.04664 (13) obj. -24.3443 iterations 4
Cbc0038I Pass  45: suminf.    1.19467 (13) obj. -24.3443 iterations 6
Cbc0038I Pass  46: suminf.    0.73170 (9) obj. -24.3443 iterations 7
Cbc0038I Pass  47: suminf.    1.22967 (11) obj. -24.3443 iterations 12
Cbc0038I Pass  48: suminf.    2.12880 (19) obj. -24.3443 iterations 25
Cbc0038I Pass  49: suminf.    1.83912 (15) obj. -24.3443 iterations 10
Cbc0038I Pass  50: suminf.    1.90992 (12) obj. -24.3443 iterations 14
Cbc0038I Pass  51: suminf.    1.64239 (12) obj. -24.3443 iterations 2
Cbc0038I Pass  52: suminf.    1.04664 (13) obj. -24.3443 iterations 14
Cbc0038I Pass  53: suminf.    1.04664 (13) obj. -24.3443 iterations 1
Cbc0038I Pass  54: suminf.    1.13469 (13) obj. -24.3443 iterations 3
Cbc0038I Pass  55: suminf.    1.13469 (13) obj. -24.3443 iterations 1
Cbc0038I Pass  56: suminf.    1.04664 (13) obj. -24.3443 iterations 3
Cbc0038I Pass  57: suminf.    1.60337 (19) obj. -24.3443 iterations 28
Cbc0038I Pass  58: suminf.    1.42722 (18) obj. -24.3443 iterations 8
Cbc0038I Pass  59: suminf.    2.28200 (14) obj. -24.3443 iterations 20
Cbc0038I Pass  60: suminf.    2.03507 (14) obj. -24.3443 iterations 1
Cbc0038I Pass  61: suminf.    2.15669 (16) obj. -24.3443 iterations 9
Cbc0038I Pass  62: suminf.    2.07251 (13) obj. -24.3443 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 55 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 121 columns, reduced to 28 rows 35 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -16.4993 - took 0.13 seconds
Cbc0012I Integer solution of -16.49929 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 106 rows 121 columns, reduced to 13 rows 15 columns
Cbc0031I 51 added rows had average density of 45.54902
Cbc0013I At root node, 51 cuts changed objective from -55.222765 to -30.367437 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12255 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1837 row cuts average 112.8 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 325 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 946 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 332 row cuts average 66.8 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 126 row cuts average 16.5 elements, 0 column cuts (0 active)  in 0.399 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -16.49929 best solution, best possible -30.367437 (2.18 seconds)
Cbc0012I Integer solution of -20.659149 found by rounding after 5732 iterations and 1 nodes (2.19 seconds)
Cbc0012I Integer solution of -21.058899 found by DiveCoefficient after 5732 iterations and 1 nodes (2.19 seconds)
Cbc0012I Integer solution of -24.177979 found by rounding after 5861 iterations and 2 nodes (2.34 seconds)
Cbc0010I After 23 nodes, 6 on tree, -24.177979 best solution, best possible -30.367437 (2.92 seconds)
Cbc0012I Integer solution of -24.433879 found by rounding after 6113 iterations and 32 nodes (2.98 seconds)
Cbc0038I Full problem 106 rows 121 columns, reduced to 36 rows 48 columns
Cbc0010I After 42 nodes, 3 on tree, -24.433879 best solution, best possible -29.736868 (3.65 seconds)
Cbc0010I After 63 nodes, 4 on tree, -24.433879 best solution, best possible -29.736868 (4.51 seconds)
Cbc0001I Search completed - best objective -24.43387899999999, took 8539 iterations and 76 nodes (4.83 seconds)
Cbc0032I Strong branching done 860 times (13012 iterations), fathomed 6 nodes and fixed 8 variables
Cbc0035I Maximum depth 11, 157 variables fixed on reduced cost
Total time (CPU seconds):       3.40   (Wallclock seconds):       4.85

