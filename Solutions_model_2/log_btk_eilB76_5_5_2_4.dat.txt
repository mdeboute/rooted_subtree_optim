Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 68 (-10) columns and 382 (-71) elements
Clp1000I sum of infeasibilities 3.17777e-05 - average 2.50218e-07, 13 fixed columns
Coin0506I Presolve 97 (-30) rows, 52 (-16) columns and 290 (-92) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.1817511 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Coin0511I After Postsolve, objective 42.764781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Coin0511I After Postsolve, objective 42.764781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.76478057 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 68 columns (67 integer (67 of which binary)) and 441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.49729
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.1774 iterations 36
Cbc0038I Solution found of -13.1774
Cbc0038I Relaxing continuous gives -13.1774
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 41 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -13.1774 to -21.7488 (0.03 seconds)
Cbc0038I Round again with cutoff of -23.7765
Cbc0038I Pass   2: suminf.    0.87068 (5) obj. -23.7765 iterations 5
Cbc0038I Pass   3: suminf.    0.89599 (4) obj. -23.7765 iterations 7
Cbc0038I Pass   4: suminf.    0.88449 (4) obj. -23.7765 iterations 2
Cbc0038I Pass   5: suminf.    0.55058 (3) obj. -23.7765 iterations 4
Cbc0038I Pass   6: suminf.    0.54049 (2) obj. -23.7765 iterations 2
Cbc0038I Pass   7: suminf.    0.86341 (3) obj. -23.7765 iterations 5
Cbc0038I Pass   8: suminf.    0.86341 (3) obj. -23.7765 iterations 0
Cbc0038I Pass   9: suminf.    0.79985 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  10: suminf.    0.66817 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  11: suminf.    2.56144 (7) obj. -23.7765 iterations 11
Cbc0038I Pass  12: suminf.    1.62682 (6) obj. -23.7765 iterations 13
Cbc0038I Pass  13: suminf.    1.15551 (5) obj. -23.7765 iterations 2
Cbc0038I Pass  14: suminf.    1.37030 (4) obj. -23.7765 iterations 7
Cbc0038I Pass  15: suminf.    0.91695 (5) obj. -23.7765 iterations 3
Cbc0038I Pass  16: suminf.    0.87068 (5) obj. -23.7765 iterations 2
Cbc0038I Pass  17: suminf.    0.89599 (4) obj. -23.7765 iterations 7
Cbc0038I Pass  18: suminf.    0.88449 (4) obj. -23.7765 iterations 2
Cbc0038I Pass  19: suminf.    0.55058 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  20: suminf.    0.54049 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  21: suminf.    0.86341 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  22: suminf.    0.86341 (3) obj. -23.7765 iterations 0
Cbc0038I Pass  23: suminf.    0.79985 (3) obj. -23.7765 iterations 3
Cbc0038I Pass  24: suminf.    0.66817 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  25: suminf.    1.13317 (3) obj. -23.7765 iterations 12
Cbc0038I Pass  26: suminf.    0.67238 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  27: suminf.    0.16245 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  28: suminf.    0.16133 (3) obj. -23.7765 iterations 1
Cbc0038I Pass  29: suminf.    0.51504 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  30: suminf.    0.47767 (3) obj. -23.7765 iterations 1
Cbc0038I Pass  31: suminf.    2.93117 (11) obj. -23.7765 iterations 15
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 60 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4261
Cbc0038I Pass  31: suminf.    1.20866 (6) obj. -27.4261 iterations 2
Cbc0038I Pass  32: suminf.    1.43068 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  33: suminf.    0.79773 (4) obj. -27.4261 iterations 3
Cbc0038I Pass  34: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  35: suminf.    4.30749 (18) obj. -27.4261 iterations 24
Cbc0038I Pass  36: suminf.    1.88051 (12) obj. -27.4261 iterations 33
Cbc0038I Pass  37: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  38: suminf.    1.43068 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  39: suminf.    0.79773 (4) obj. -27.4261 iterations 3
Cbc0038I Pass  40: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  41: suminf.    2.03773 (8) obj. -27.4261 iterations 16
Cbc0038I Pass  42: suminf.    1.33579 (5) obj. -27.4261 iterations 10
Cbc0038I Pass  43: suminf.    1.20313 (5) obj. -27.4261 iterations 6
Cbc0038I Pass  44: suminf.    1.20313 (5) obj. -27.4261 iterations 1
Cbc0038I Pass  45: suminf.    1.40132 (5) obj. -27.4261 iterations 6
Cbc0038I Pass  46: suminf.    2.86292 (10) obj. -27.4261 iterations 16
Cbc0038I Pass  47: suminf.    1.00945 (5) obj. -27.4261 iterations 14
Cbc0038I Pass  48: suminf.    0.77569 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  49: suminf.    0.77107 (3) obj. -27.4261 iterations 2
Cbc0038I Pass  50: suminf.    1.13340 (4) obj. -27.4261 iterations 4
Cbc0038I Pass  51: suminf.    0.97693 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  52: suminf.    0.48844 (3) obj. -27.4261 iterations 3
Cbc0038I Pass  53: suminf.    0.88063 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  54: suminf.    0.88063 (5) obj. -27.4261 iterations 0
Cbc0038I Pass  55: suminf.    1.08686 (4) obj. -27.4261 iterations 9
Cbc0038I Pass  56: suminf.    1.00945 (5) obj. -27.4261 iterations 2
Cbc0038I Pass  57: suminf.    0.77569 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  58: suminf.    0.77107 (3) obj. -27.4261 iterations 2
Cbc0038I Pass  59: suminf.    1.13340 (4) obj. -27.4261 iterations 4
Cbc0038I Pass  60: suminf.    0.97693 (4) obj. -27.4261 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 66 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -21.7488 - took 0.04 seconds
Cbc0012I Integer solution of -21.74879 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 41 rows 22 columns
Cbc0031I 14 added rows had average density of 33.357143
Cbc0013I At root node, 14 cuts changed objective from -42.024713 to -33.521526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5334 row cuts average 5.3 elements, 1 column cuts (1 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1523 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -21.74879, took 5522 iterations and 32 nodes (0.54 seconds)
Cbc0032I Strong branching done 444 times (8087 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 89 variables fixed on reduced cost
Total time (CPU seconds):       0.53   (Wallclock seconds):       0.55

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-43) rows, 118 (-34) columns and 2024 (-1279) elements
Clp1000I sum of infeasibilities 3.58241e-08 - average 3.22739e-10, 58 fixed columns
Coin0506I Presolve 58 (-53) rows, 60 (-58) columns and 408 (-1616) elements
Clp0029I End of values pass after 60 iterations
Clp0000I Optimal - objective value 136.55556
Clp0000I Optimal - objective value 136.55556
Coin0511I After Postsolve, objective 136.55556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7533006 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 136.55556
Clp0000I Optimal - objective value 136.55556
Clp0000I Optimal - objective value 136.55556
Coin0511I After Postsolve, objective 136.55556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 136.5555593 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 5 fixed, 0 tightened bounds, 78 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 25 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 30 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 112 columns (112 integer (112 of which binary)) and 1869 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.135%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 2.29043
Cbc0038I Pass   1: suminf.    0.29521 (9) obj. -32.385 iterations 33
Cbc0038I Pass   2: suminf.    0.29521 (9) obj. -32.385 iterations 0
Cbc0038I Solution found of -16.9048
Cbc0038I Rounding solution of -21.513 is better than previous of -16.9048

Cbc0038I Before mini branch and bound, 76 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -23.2673
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.29521 (9) obj. -32.385 iterations 0
Cbc0038I Pass   4: suminf.    0.29521 (9) obj. -32.385 iterations 0
Cbc0038I Pass   5: suminf.    0.73471 (6) obj. -23.2673 iterations 24
Cbc0038I Pass   6: suminf.    0.57649 (4) obj. -23.2673 iterations 31
Cbc0038I Pass   7: suminf.    0.57649 (4) obj. -23.2673 iterations 0
Cbc0038I Pass   8: suminf.    0.66396 (4) obj. -23.2673 iterations 3
Cbc0038I Pass   9: suminf.    0.40729 (2) obj. -24.0667 iterations 4
Cbc0038I Pass  10: suminf.    0.89033 (3) obj. -23.2673 iterations 10
Cbc0038I Pass  11: suminf.    1.99021 (9) obj. -23.2673 iterations 25
Cbc0038I Pass  12: suminf.    1.83231 (9) obj. -23.2673 iterations 7
Cbc0038I Pass  13: suminf.    0.68698 (24) obj. -23.2673 iterations 17
Cbc0038I Pass  14: suminf.    0.68698 (24) obj. -23.2673 iterations 2
Cbc0038I Pass  15: suminf.    2.75158 (22) obj. -23.2673 iterations 17
Cbc0038I Pass  16: suminf.    2.48069 (21) obj. -23.2673 iterations 3
Cbc0038I Pass  17: suminf.    3.07811 (22) obj. -23.2673 iterations 15
Cbc0038I Pass  18: suminf.    2.93476 (21) obj. -23.2673 iterations 2
Cbc0038I Pass  19: suminf.    2.07872 (21) obj. -23.2673 iterations 5
Cbc0038I Pass  20: suminf.    1.87363 (20) obj. -23.2673 iterations 1
Cbc0038I Pass  21: suminf.    3.07811 (22) obj. -23.2673 iterations 6
Cbc0038I Pass  22: suminf.    0.42609 (22) obj. -23.2673 iterations 57
Cbc0038I Pass  23: suminf.    0.36281 (7) obj. -23.2673 iterations 20
Cbc0038I Pass  24: suminf.    0.38678 (7) obj. -23.2673 iterations 11
Cbc0038I Pass  25: suminf.    1.25603 (20) obj. -23.2673 iterations 30
Cbc0038I Pass  26: suminf.    1.04870 (9) obj. -23.2673 iterations 12
Cbc0038I Pass  27: suminf.    0.60204 (8) obj. -24.0109 iterations 4
Cbc0038I Pass  28: suminf.    1.81540 (22) obj. -23.2673 iterations 26
Cbc0038I Pass  29: suminf.    1.81540 (22) obj. -23.2673 iterations 1
Cbc0038I Pass  30: suminf.    3.07811 (22) obj. -23.2673 iterations 16
Cbc0038I Pass  31: suminf.    2.93476 (21) obj. -23.2673 iterations 2
Cbc0038I Pass  32: suminf.    3.16296 (22) obj. -23.2673 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 47 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -16.9048 to -21.7488 (0.06 seconds)
Cbc0038I Round again with cutoff of -26.425
Cbc0038I Reduced cost fixing fixed 6 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.29521 (9) obj. -32.385 iterations 0
Cbc0038I Pass  33: suminf.    0.29521 (9) obj. -32.385 iterations 0
Cbc0038I Pass  34: suminf.    1.21738 (6) obj. -26.425 iterations 30
Cbc0038I Pass  35: suminf.    1.08126 (6) obj. -26.425 iterations 4
Cbc0038I Pass  36: suminf.    0.66238 (5) obj. -26.425 iterations 9
Cbc0038I Pass  37: suminf.    0.63633 (6) obj. -26.425 iterations 3
Cbc0038I Pass  38: suminf.    0.62990 (6) obj. -26.425 iterations 3
Cbc0038I Pass  39: suminf.    0.62990 (6) obj. -26.425 iterations 2
Cbc0038I Pass  40: suminf.    0.63633 (6) obj. -26.425 iterations 3
Cbc0038I Pass  41: suminf.    1.73113 (24) obj. -26.425 iterations 38
Cbc0038I Pass  42: suminf.    0.65818 (6) obj. -26.425 iterations 22
Cbc0038I Pass  43: suminf.    0.54717 (7) obj. -27.1557 iterations 5
Cbc0038I Pass  44: suminf.    0.98425 (6) obj. -26.425 iterations 24
Cbc0038I Pass  45: suminf.    0.91143 (6) obj. -26.425 iterations 7
Cbc0038I Pass  46: suminf.    1.04533 (6) obj. -26.425 iterations 3
Cbc0038I Pass  47: suminf.    0.92246 (6) obj. -26.425 iterations 2
Cbc0038I Pass  48: suminf.    1.41946 (9) obj. -26.425 iterations 9
Cbc0038I Pass  49: suminf.    1.38297 (9) obj. -26.425 iterations 2
Cbc0038I Pass  50: suminf.    1.20030 (8) obj. -26.425 iterations 5
Cbc0038I Pass  51: suminf.    1.20030 (8) obj. -26.425 iterations 2
Cbc0038I Pass  52: suminf.    1.21000 (8) obj. -26.425 iterations 4
Cbc0038I Pass  53: suminf.    1.21000 (8) obj. -26.425 iterations 2
Cbc0038I Pass  54: suminf.    3.02769 (26) obj. -26.425 iterations 15
Cbc0038I Pass  55: suminf.    3.02769 (26) obj. -26.425 iterations 1
Cbc0038I Pass  56: suminf.    3.59391 (25) obj. -26.425 iterations 20
Cbc0038I Pass  57: suminf.    3.22285 (24) obj. -26.425 iterations 5
Cbc0038I Pass  58: suminf.    2.44455 (24) obj. -26.425 iterations 8
Cbc0038I Pass  59: suminf.    1.93786 (24) obj. -26.425 iterations 5
Cbc0038I Pass  60: suminf.    2.44455 (24) obj. -26.425 iterations 9
Cbc0038I Pass  61: suminf.    1.73682 (24) obj. -26.425 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 35 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -21.7488 - took 0.04 seconds
Cbc0012I Integer solution of -21.74879 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 98 rows 112 columns, reduced to 13 rows 16 columns
Cbc0031I 53 added rows had average density of 28.792453
Cbc0013I At root node, 53 cuts changed objective from -39.055687 to -26.564339 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11732 row cuts average 11.7 elements, 4 column cuts (4 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1300 row cuts average 93.6 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 87 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 836 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 614 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.062 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 226 row cuts average 13.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 244 row cuts average 65.5 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 321 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.685 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.74879 best solution, best possible -26.564339 (2.43 seconds)
Cbc0001I Search completed - best objective -21.74879, took 6463 iterations and 8 nodes (3.05 seconds)
Cbc0032I Strong branching done 232 times (6842 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 3, 22 variables fixed on reduced cost
Total time (CPU seconds):       2.15   (Wallclock seconds):       3.07

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-28) rows, 68 (-10) columns and 382 (-71) elements
Clp1000I sum of infeasibilities 3.17777e-05 - average 2.50218e-07, 13 fixed columns
Coin0506I Presolve 97 (-30) rows, 52 (-16) columns and 290 (-92) elements
Clp0029I End of values pass after 52 iterations
Clp0014I Perturbing problem by 0.001% of 2.1817511 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Coin0511I After Postsolve, objective 42.764781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Clp0000I Optimal - objective value 42.764781
Coin0511I After Postsolve, objective 42.764781, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 42.76478057 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 39 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 29 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 118 rows, 68 columns (67 integer (67 of which binary)) and 441 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.716%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 3.49729
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -13.1774 iterations 36
Cbc0038I Solution found of -13.1774
Cbc0038I Relaxing continuous gives -13.1774
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 41 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -13.1774 to -21.7488 (0.03 seconds)
Cbc0038I Round again with cutoff of -23.7765
Cbc0038I Pass   2: suminf.    0.87068 (5) obj. -23.7765 iterations 5
Cbc0038I Pass   3: suminf.    0.89599 (4) obj. -23.7765 iterations 7
Cbc0038I Pass   4: suminf.    0.88449 (4) obj. -23.7765 iterations 2
Cbc0038I Pass   5: suminf.    0.55058 (3) obj. -23.7765 iterations 4
Cbc0038I Pass   6: suminf.    0.54049 (2) obj. -23.7765 iterations 2
Cbc0038I Pass   7: suminf.    0.86341 (3) obj. -23.7765 iterations 5
Cbc0038I Pass   8: suminf.    0.86341 (3) obj. -23.7765 iterations 0
Cbc0038I Pass   9: suminf.    0.79985 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  10: suminf.    0.66817 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  11: suminf.    2.56144 (7) obj. -23.7765 iterations 11
Cbc0038I Pass  12: suminf.    1.62682 (6) obj. -23.7765 iterations 13
Cbc0038I Pass  13: suminf.    1.15551 (5) obj. -23.7765 iterations 2
Cbc0038I Pass  14: suminf.    1.37030 (4) obj. -23.7765 iterations 7
Cbc0038I Pass  15: suminf.    0.91695 (5) obj. -23.7765 iterations 3
Cbc0038I Pass  16: suminf.    0.87068 (5) obj. -23.7765 iterations 2
Cbc0038I Pass  17: suminf.    0.89599 (4) obj. -23.7765 iterations 7
Cbc0038I Pass  18: suminf.    0.88449 (4) obj. -23.7765 iterations 2
Cbc0038I Pass  19: suminf.    0.55058 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  20: suminf.    0.54049 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  21: suminf.    0.86341 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  22: suminf.    0.86341 (3) obj. -23.7765 iterations 0
Cbc0038I Pass  23: suminf.    0.79985 (3) obj. -23.7765 iterations 3
Cbc0038I Pass  24: suminf.    0.66817 (2) obj. -23.7765 iterations 2
Cbc0038I Pass  25: suminf.    1.13317 (3) obj. -23.7765 iterations 12
Cbc0038I Pass  26: suminf.    0.67238 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  27: suminf.    0.16245 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  28: suminf.    0.16133 (3) obj. -23.7765 iterations 1
Cbc0038I Pass  29: suminf.    0.51504 (3) obj. -23.7765 iterations 4
Cbc0038I Pass  30: suminf.    0.47767 (3) obj. -23.7765 iterations 1
Cbc0038I Pass  31: suminf.    2.93117 (11) obj. -23.7765 iterations 15
Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 60 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -27.4261
Cbc0038I Pass  31: suminf.    1.20866 (6) obj. -27.4261 iterations 2
Cbc0038I Pass  32: suminf.    1.43068 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  33: suminf.    0.79773 (4) obj. -27.4261 iterations 3
Cbc0038I Pass  34: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  35: suminf.    4.30749 (18) obj. -27.4261 iterations 24
Cbc0038I Pass  36: suminf.    1.88051 (12) obj. -27.4261 iterations 33
Cbc0038I Pass  37: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  38: suminf.    1.43068 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  39: suminf.    0.79773 (4) obj. -27.4261 iterations 3
Cbc0038I Pass  40: suminf.    1.20866 (6) obj. -27.4261 iterations 10
Cbc0038I Pass  41: suminf.    2.03773 (8) obj. -27.4261 iterations 16
Cbc0038I Pass  42: suminf.    1.33579 (5) obj. -27.4261 iterations 10
Cbc0038I Pass  43: suminf.    1.20313 (5) obj. -27.4261 iterations 6
Cbc0038I Pass  44: suminf.    1.20313 (5) obj. -27.4261 iterations 1
Cbc0038I Pass  45: suminf.    1.40132 (5) obj. -27.4261 iterations 6
Cbc0038I Pass  46: suminf.    2.86292 (10) obj. -27.4261 iterations 16
Cbc0038I Pass  47: suminf.    1.00945 (5) obj. -27.4261 iterations 14
Cbc0038I Pass  48: suminf.    0.77569 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  49: suminf.    0.77107 (3) obj. -27.4261 iterations 2
Cbc0038I Pass  50: suminf.    1.13340 (4) obj. -27.4261 iterations 4
Cbc0038I Pass  51: suminf.    0.97693 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  52: suminf.    0.48844 (3) obj. -27.4261 iterations 3
Cbc0038I Pass  53: suminf.    0.88063 (5) obj. -27.4261 iterations 9
Cbc0038I Pass  54: suminf.    0.88063 (5) obj. -27.4261 iterations 0
Cbc0038I Pass  55: suminf.    1.08686 (4) obj. -27.4261 iterations 9
Cbc0038I Pass  56: suminf.    1.00945 (5) obj. -27.4261 iterations 2
Cbc0038I Pass  57: suminf.    0.77569 (4) obj. -27.4261 iterations 5
Cbc0038I Pass  58: suminf.    0.77107 (3) obj. -27.4261 iterations 2
Cbc0038I Pass  59: suminf.    1.13340 (4) obj. -27.4261 iterations 4
Cbc0038I Pass  60: suminf.    0.97693 (4) obj. -27.4261 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 118 rows 68 columns, reduced to 66 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -21.7488 - took 0.04 seconds
Cbc0012I Integer solution of -21.74879 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 118 rows 68 columns, reduced to 41 rows 22 columns
Cbc0031I 14 added rows had average density of 33.357143
Cbc0013I At root node, 14 cuts changed objective from -42.024713 to -33.521526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 5334 row cuts average 5.3 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1523 row cuts average 68.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 65.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -21.74879, took 5522 iterations and 32 nodes (0.60 seconds)
Cbc0032I Strong branching done 444 times (8087 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 15, 89 variables fixed on reduced cost
Total time (CPU seconds):       0.58   (Wallclock seconds):       0.61

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 111 (-42) columns and 1811 (-1493) elements
Clp1000I sum of infeasibilities 2.33351e-07 - average 2.24375e-09, 37 fixed columns
Coin0506I Presolve 62 (-42) rows, 67 (-44) columns and 695 (-1116) elements
Clp0029I End of values pass after 67 iterations
Clp0014I Perturbing problem by 0.001% of 7.8396447 - largest nonzero change 0 ( 0%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 53.317531
Clp0000I Optimal - objective value 53.317531
Coin0511I After Postsolve, objective 53.317531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.317531
Clp0000I Optimal - objective value 53.317531
Clp0000I Optimal - objective value 53.317531
Coin0511I After Postsolve, objective 53.317531, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.31753124 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 47 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 98 rows, 112 columns (112 integer (112 of which binary)) and 1866 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.127%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 2.2338
Cbc0038I Pass   1: suminf.    0.32646 (10) obj. -35.2912 iterations 35
Cbc0038I Pass   2: suminf.    0.32646 (10) obj. -35.2912 iterations 0
Cbc0038I Solution found of -16.9048
Cbc0038I Rounding solution of -21.513 is better than previous of -16.9048

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -23.557
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.32646 (10) obj. -35.2912 iterations 0
Cbc0038I Pass   4: suminf.    0.32646 (10) obj. -35.2912 iterations 0
Cbc0038I Pass   5: suminf.    0.78018 (6) obj. -23.557 iterations 30
Cbc0038I Pass   6: suminf.    0.67303 (4) obj. -23.557 iterations 39
Cbc0038I Pass   7: suminf.    0.67303 (4) obj. -23.557 iterations 0
Cbc0038I Pass   8: suminf.    0.61395 (4) obj. -23.557 iterations 2
Cbc0038I Pass   9: suminf.    0.39803 (2) obj. -24.0945 iterations 3
Cbc0038I Pass  10: suminf.    0.97557 (25) obj. -23.557 iterations 23
Cbc0038I Pass  11: suminf.    1.64525 (8) obj. -23.557 iterations 20
Cbc0038I Pass  12: suminf.    1.54375 (8) obj. -23.557 iterations 2
Cbc0038I Pass  13: suminf.    1.02631 (8) obj. -23.557 iterations 6
Cbc0038I Pass  14: suminf.    0.88192 (6) obj. -23.557 iterations 4
Cbc0038I Pass  15: suminf.    0.91047 (6) obj. -23.557 iterations 3
Cbc0038I Pass  16: suminf.    2.00743 (20) obj. -23.557 iterations 23
Cbc0038I Pass  17: suminf.    1.47509 (22) obj. -23.557 iterations 8
Cbc0038I Pass  18: suminf.    3.14940 (21) obj. -23.557 iterations 18
Cbc0038I Pass  19: suminf.    2.99295 (20) obj. -23.557 iterations 2
Cbc0038I Pass  20: suminf.    3.17074 (21) obj. -23.557 iterations 4
Cbc0038I Pass  21: suminf.    3.01430 (20) obj. -23.557 iterations 2
Cbc0038I Pass  22: suminf.    3.14940 (21) obj. -23.557 iterations 3
Cbc0038I Pass  23: suminf.    2.45851 (24) obj. -23.557 iterations 17
Cbc0038I Pass  24: suminf.    1.98931 (23) obj. -23.557 iterations 6
Cbc0038I Pass  25: suminf.    3.21836 (22) obj. -23.557 iterations 17
Cbc0038I Pass  26: suminf.    3.06192 (21) obj. -23.557 iterations 2
Cbc0038I Pass  27: suminf.    3.14940 (21) obj. -23.557 iterations 3
Cbc0038I Pass  28: suminf.    2.99295 (20) obj. -23.557 iterations 2
Cbc0038I Pass  29: suminf.    3.17074 (21) obj. -23.557 iterations 4
Cbc0038I Pass  30: suminf.    3.01430 (20) obj. -23.557 iterations 2
Cbc0038I Pass  31: suminf.    3.14940 (21) obj. -23.557 iterations 3
Cbc0038I Pass  32: suminf.    1.88554 (20) obj. -23.557 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 46 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -16.9048 to -21.7488 (0.06 seconds)
Cbc0038I Round again with cutoff of -27.2359
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.32646 (10) obj. -35.2912 iterations 0
Cbc0038I Pass  33: suminf.    0.32646 (10) obj. -35.2912 iterations 0
Cbc0038I Pass  34: suminf.    1.09975 (6) obj. -27.2359 iterations 40
Cbc0038I Pass  35: suminf.    0.78331 (5) obj. -27.5816 iterations 5
Cbc0038I Pass  36: suminf.    0.74924 (26) obj. -27.2359 iterations 13
Cbc0038I Pass  37: suminf.    0.56211 (4) obj. -27.2359 iterations 2
Cbc0038I Pass  38: suminf.    0.56832 (4) obj. -27.2359 iterations 3
Cbc0038I Pass  39: suminf.    1.30073 (10) obj. -27.2359 iterations 15
Cbc0038I Pass  40: suminf.    1.21484 (27) obj. -27.2359 iterations 5
Cbc0038I Pass  41: suminf.    2.23893 (23) obj. -27.2359 iterations 16
Cbc0038I Pass  42: suminf.    1.94977 (22) obj. -27.2359 iterations 2
Cbc0038I Pass  43: suminf.    1.41717 (22) obj. -27.2359 iterations 2
Cbc0038I Pass  44: suminf.    2.97968 (24) obj. -27.2359 iterations 7
Cbc0038I Pass  45: suminf.    2.82324 (23) obj. -27.2359 iterations 2
Cbc0038I Pass  46: suminf.    3.12160 (24) obj. -27.2359 iterations 11
Cbc0038I Pass  47: suminf.    2.96515 (23) obj. -27.2359 iterations 2
Cbc0038I Pass  48: suminf.    3.35253 (24) obj. -27.2359 iterations 4
Cbc0038I Pass  49: suminf.    3.17389 (23) obj. -27.2359 iterations 1
Cbc0038I Pass  50: suminf.    3.12160 (24) obj. -27.2359 iterations 4
Cbc0038I Pass  51: suminf.    1.73283 (23) obj. -27.2359 iterations 11
Cbc0038I Pass  52: suminf.    1.42113 (23) obj. -27.2359 iterations 2
Cbc0038I Pass  53: suminf.    3.01023 (24) obj. -27.2359 iterations 9
Cbc0038I Pass  54: suminf.    2.85379 (23) obj. -27.2359 iterations 2
Cbc0038I Pass  55: suminf.    3.12160 (24) obj. -27.2359 iterations 8
Cbc0038I Pass  56: suminf.    2.96515 (23) obj. -27.2359 iterations 2
Cbc0038I Pass  57: suminf.    3.35253 (24) obj. -27.2359 iterations 5
Cbc0038I Pass  58: suminf.    3.17389 (23) obj. -27.2359 iterations 2
Cbc0038I Pass  59: suminf.    3.12160 (24) obj. -27.2359 iterations 4
Cbc0038I Pass  60: suminf.    2.08477 (25) obj. -27.2359 iterations 20
Cbc0038I Pass  61: suminf.    1.79852 (25) obj. -27.2359 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 98 rows 112 columns, reduced to 18 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -21.7488 - took 0.04 seconds
Cbc0012I Integer solution of -21.74879 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 98 rows 112 columns, reduced to 14 rows 17 columns
Cbc0031I 53 added rows had average density of 26.169811
Cbc0013I At root node, 53 cuts changed objective from -41.951925 to -27.838479 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14512 row cuts average 4.0 elements, 5 column cuts (5 active)  in 0.142 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1096 row cuts average 92.0 elements, 0 column cuts (0 active)  in 0.110 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 48 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 947 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 690 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 276 row cuts average 14.4 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 303 row cuts average 58.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 484 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.805 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.74879 best solution, best possible -27.838479 (2.62 seconds)
Cbc0010I After 12 nodes, 1 on tree, -21.74879 best solution, best possible -26.950357 (3.44 seconds)
Cbc0001I Search completed - best objective -21.74879, took 6848 iterations and 20 nodes (3.98 seconds)
Cbc0032I Strong branching done 454 times (7163 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 46 variables fixed on reduced cost
Total time (CPU seconds):       2.80   (Wallclock seconds):       4.00

