Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 164 (-13) elements
Clp1000I sum of infeasibilities 0.00898962 - average 0.000160529, 2 fixed columns
Coin0506I Presolve 52 (-4) rows, 28 (-2) columns and 152 (-12) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Coin0511I After Postsolve, objective 89.82473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Coin0511I After Postsolve, objective 89.82473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.82473007 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 164 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.060%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.00986
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 16.5909 iterations 22
Cbc0038I Solution found of 16.5909
Cbc0038I Relaxing continuous gives 16.5909
Cbc0038I Rounding solution of 9.05216 is better than previous of 16.5909

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 9.05216 to -24.4206 (0.01 seconds)
Cbc0038I Round again with cutoff of -30.9611
Cbc0038I Pass   2: suminf.    0.81121 (3) obj. -30.9611 iterations 4
Cbc0038I Pass   3: suminf.    0.61009 (3) obj. -30.9611 iterations 2
Cbc0038I Pass   4: suminf.    1.43123 (4) obj. -30.9611 iterations 4
Cbc0038I Pass   5: suminf.    2.53625 (13) obj. -30.9611 iterations 18
Cbc0038I Pass   6: suminf.    0.92726 (8) obj. -30.9611 iterations 9
Cbc0038I Pass   7: suminf.    0.92726 (8) obj. -30.9611 iterations 0
Cbc0038I Pass   8: suminf.    0.94824 (4) obj. -30.9611 iterations 12
Cbc0038I Pass   9: suminf.    0.86416 (4) obj. -30.9611 iterations 2
Cbc0038I Pass  10: suminf.    1.55791 (5) obj. -30.9611 iterations 4
Cbc0038I Pass  11: suminf.    1.55791 (5) obj. -30.9611 iterations 0
Cbc0038I Pass  12: suminf.    0.56777 (3) obj. -30.9611 iterations 5
Cbc0038I Pass  13: suminf.    0.53864 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  14: suminf.    0.88112 (3) obj. -30.9611 iterations 3
Cbc0038I Pass  15: suminf.    0.54004 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  16: suminf.    1.19916 (4) obj. -30.9611 iterations 4
Cbc0038I Pass  17: suminf.    4.21295 (10) obj. -30.9611 iterations 8
Cbc0038I Pass  18: suminf.    0.56777 (3) obj. -30.9611 iterations 8
Cbc0038I Pass  19: suminf.    0.53864 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  20: suminf.    0.88112 (3) obj. -30.9611 iterations 3
Cbc0038I Pass  21: suminf.    0.54004 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  22: suminf.    1.19916 (4) obj. -30.9611 iterations 4
Cbc0038I Pass  23: suminf.    3.52684 (13) obj. -30.9611 iterations 17
Cbc0038I Pass  24: suminf.    1.32257 (9) obj. -30.9611 iterations 7
Cbc0038I Pass  25: suminf.    1.06960 (6) obj. -30.9611 iterations 5
Cbc0038I Pass  26: suminf.    1.03821 (6) obj. -30.9611 iterations 5
Cbc0038I Pass  27: suminf.    0.85486 (2) obj. -30.9611 iterations 11
Cbc0038I Pass  28: suminf.    0.82921 (2) obj. -30.9611 iterations 2
Cbc0038I Pass  29: suminf.    0.93419 (4) obj. -30.9611 iterations 5
Cbc0038I Pass  30: suminf.    0.93419 (4) obj. -30.9611 iterations 1
Cbc0038I Pass  31: suminf.    1.15750 (4) obj. -30.9611 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -24.4206 to -24.8615 (0.02 seconds)
Cbc0038I Round again with cutoff of -42.7338
Cbc0038I Pass  31: suminf.    1.15463 (6) obj. -42.7338 iterations 3
Cbc0038I Pass  32: suminf.    1.15463 (6) obj. -42.7338 iterations 1
Cbc0038I Pass  33: suminf.    0.72986 (4) obj. -42.7338 iterations 8
Cbc0038I Pass  34: suminf.    0.60328 (4) obj. -42.7338 iterations 3
Cbc0038I Pass  35: suminf.    1.84018 (5) obj. -42.7338 iterations 6
Cbc0038I Pass  36: suminf.    0.70923 (4) obj. -42.7338 iterations 7
Cbc0038I Pass  37: suminf.    1.99672 (8) obj. -42.7338 iterations 12
Cbc0038I Pass  38: suminf.    1.90975 (8) obj. -42.7338 iterations 5
Cbc0038I Pass  39: suminf.    1.62327 (4) obj. -42.7338 iterations 14
Cbc0038I Pass  40: suminf.    1.25957 (4) obj. -42.7338 iterations 7
Cbc0038I Pass  41: suminf.    1.10406 (4) obj. -42.7338 iterations 3
Cbc0038I Pass  42: suminf.    1.89750 (5) obj. -42.7338 iterations 6
Cbc0038I Pass  43: suminf.    1.62266 (4) obj. -42.7338 iterations 1
Cbc0038I Pass  44: suminf.    1.57478 (4) obj. -42.7338 iterations 1
Cbc0038I Pass  45: suminf.    1.33208 (4) obj. -42.7338 iterations 6
Cbc0038I Pass  46: suminf.    1.33208 (4) obj. -42.7338 iterations 0
Cbc0038I Pass  47: suminf.    5.25091 (15) obj. -42.7338 iterations 19
Cbc0038I Pass  48: suminf.    3.04001 (11) obj. -42.7338 iterations 7
Cbc0038I Pass  49: suminf.    2.76100 (7) obj. -42.7338 iterations 13
Cbc0038I Pass  50: suminf.    1.63752 (6) obj. -42.7338 iterations 5
Cbc0038I Pass  51: suminf.    1.63752 (6) obj. -42.7338 iterations 0
Cbc0038I Pass  52: suminf.    2.51347 (7) obj. -42.7338 iterations 7
Cbc0038I Pass  53: suminf.    1.64678 (7) obj. -42.7338 iterations 5
Cbc0038I Pass  54: suminf.    1.63752 (6) obj. -42.7338 iterations 1
Cbc0038I Pass  55: suminf.    2.50315 (9) obj. -42.7338 iterations 11
Cbc0038I Pass  56: suminf.    1.25054 (5) obj. -42.7338 iterations 8
Cbc0038I Pass  57: suminf.    1.25054 (5) obj. -42.7338 iterations 0
Cbc0038I Pass  58: suminf.    2.14116 (8) obj. -42.7338 iterations 8
Cbc0038I Pass  59: suminf.    1.90761 (8) obj. -42.7338 iterations 6
Cbc0038I Pass  60: suminf.    2.82110 (7) obj. -42.7338 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -24.8615 - took 0.07 seconds
Cbc0012I Integer solution of -24.861544 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 34 rows 19 columns
Cbc0031I 10 added rows had average density of 22.4
Cbc0013I At root node, 10 cuts changed objective from -89.82473 to -46.858931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1135 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 441 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 52 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.86154445, took 2145 iterations and 4 nodes (0.20 seconds)
Cbc0032I Strong branching done 66 times (870 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-10) rows, 54 (-6) columns and 531 (-81) elements
Clp1000I sum of infeasibilities 0 - average 0, 38 fixed columns
Coin0506I Presolve 14 (-38) rows, 16 (-38) columns and 54 (-477) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 0.31198446 - largest nonzero change 2.863608e-05 ( 0.0024275985%) - largest zero change 2.0760443e-05
Clp0000I Optimal - objective value -0.65909852
Clp0000I Optimal - objective value -0.65909852
Coin0511I After Postsolve, objective -0.65909852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22215575 - largest nonzero change 2.7136955e-05 ( 0.0023005115%) - largest zero change 2.8957466e-05
Clp0000I Optimal - objective value 106.09467
Clp0000I Optimal - objective value 106.09467
Clp0000I Optimal - objective value 106.09467
Coin0511I After Postsolve, objective 106.09467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.0946692 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 54 columns (54 integer (54 of which binary)) and 535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.172%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.63532
Cbc0038I Pass   1: suminf.    1.24711 (11) obj. -28.767 iterations 15
Cbc0038I Pass   2: suminf.    1.24711 (11) obj. -28.767 iterations 2
Cbc0038I Solution found of 20.605
Cbc0038I Rounding solution of 15.2539 is better than previous of 20.605

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 54 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 15.2539 to -1.22822 (0.01 seconds)
Cbc0038I Round again with cutoff of -8.98339
Cbc0038I Pass   3: suminf.    1.24711 (11) obj. -28.767 iterations 0
Cbc0038I Pass   4: suminf.    1.24711 (11) obj. -28.767 iterations 4
Cbc0038I Pass   5: suminf.    1.30219 (13) obj. -8.98339 iterations 25
Cbc0038I Pass   6: suminf.    1.30219 (13) obj. -8.98339 iterations 0
Cbc0038I Pass   7: suminf.    0.36290 (1) obj. -12.4421 iterations 16
Cbc0038I Pass   8: suminf.    0.36290 (1) obj. -12.4421 iterations 0
Cbc0038I Pass   9: suminf.    0.44928 (1) obj. -8.98339 iterations 1
Cbc0038I Pass  10: suminf.    1.04782 (5) obj. -8.98339 iterations 14
Cbc0038I Pass  11: suminf.    0.97045 (4) obj. -8.98339 iterations 4
Cbc0038I Pass  12: suminf.    0.41129 (1) obj. -10.5142 iterations 4
Cbc0038I Pass  13: suminf.    0.44952 (1) obj. -8.98339 iterations 1
Cbc0038I Pass  14: suminf.    1.99526 (7) obj. -18.125 iterations 13
Cbc0038I Pass  15: suminf.    1.62530 (6) obj. -13.5576 iterations 5
Cbc0038I Pass  16: suminf.    1.22671 (3) obj. -8.98339 iterations 11
Cbc0038I Pass  17: suminf.    1.11964 (3) obj. -10.4167 iterations 2
Cbc0038I Pass  18: suminf.    1.03241 (4) obj. -8.98339 iterations 3
Cbc0038I Pass  19: suminf.    0.59948 (3) obj. -8.98339 iterations 6
Cbc0038I Pass  20: suminf.    0.59948 (3) obj. -8.98339 iterations 0
Cbc0038I Pass  21: suminf.    1.26536 (4) obj. -8.98339 iterations 2
Cbc0038I Pass  22: suminf.    1.26536 (4) obj. -8.98339 iterations 0
Cbc0038I Pass  23: suminf.    0.59948 (3) obj. -8.98339 iterations 5
Cbc0038I Pass  24: suminf.    3.55924 (11) obj. -8.98339 iterations 16
Cbc0038I Pass  25: suminf.    2.98458 (12) obj. -8.98339 iterations 3
Cbc0038I Pass  26: suminf.    2.96902 (11) obj. -8.98339 iterations 1
Cbc0038I Pass  27: suminf.    1.27444 (4) obj. -8.98339 iterations 9
Cbc0038I Pass  28: suminf.    1.26536 (4) obj. -8.98339 iterations 2
Cbc0038I Pass  29: suminf.    0.59948 (3) obj. -8.98339 iterations 5
Cbc0038I Pass  30: suminf.    0.59948 (3) obj. -8.98339 iterations 0
Cbc0038I Pass  31: suminf.    1.26536 (4) obj. -8.98339 iterations 2
Cbc0038I Pass  32: suminf.    3.43640 (12) obj. -8.98339 iterations 23
Cbc0038I Rounding solution of -1.8388 is better than previous of -1.22822

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 54 columns, reduced to 26 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1.8388 to -24.7728 (0.03 seconds)
Cbc0038I Round again with cutoff of -35.5741
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.23199 (16) obj. -35.5741 iterations 3
Cbc0038I Pass  33: suminf.    2.00293 (21) obj. -35.5741 iterations 9
Cbc0038I Pass  34: suminf.    1.60760 (7) obj. -35.5741 iterations 29
Cbc0038I Pass  35: suminf.    1.60760 (7) obj. -35.5741 iterations 0
Cbc0038I Pass  36: suminf.    1.37863 (4) obj. -35.5741 iterations 11
Cbc0038I Pass  37: suminf.    1.35021 (5) obj. -35.5741 iterations 2
Cbc0038I Pass  38: suminf.    1.27709 (5) obj. -35.5741 iterations 4
Cbc0038I Pass  39: suminf.    1.27709 (5) obj. -35.5741 iterations 0
Cbc0038I Pass  40: suminf.    1.19570 (4) obj. -35.5741 iterations 3
Cbc0038I Pass  41: suminf.    1.10161 (4) obj. -35.5741 iterations 1
Cbc0038I Pass  42: suminf.    1.21351 (4) obj. -35.5741 iterations 3
Cbc0038I Pass  43: suminf.    3.29202 (16) obj. -35.5741 iterations 19
Cbc0038I Pass  44: suminf.    3.16572 (12) obj. -35.5741 iterations 5
Cbc0038I Pass  45: suminf.    1.51523 (6) obj. -35.5741 iterations 18
Cbc0038I Pass  46: suminf.    1.51523 (6) obj. -35.5741 iterations 0
Cbc0038I Pass  47: suminf.    1.28101 (5) obj. -35.5741 iterations 3
Cbc0038I Pass  48: suminf.    1.23929 (5) obj. -35.5741 iterations 2
Cbc0038I Pass  49: suminf.    1.51523 (6) obj. -35.5741 iterations 3
Cbc0038I Pass  50: suminf.    2.06539 (7) obj. -35.5741 iterations 4
Cbc0038I Pass  51: suminf.    2.06539 (7) obj. -35.5741 iterations 1
Cbc0038I Pass  52: suminf.    1.26075 (5) obj. -35.5741 iterations 4
Cbc0038I Pass  53: suminf.    1.20028 (5) obj. -35.5741 iterations 1
Cbc0038I Pass  54: suminf.    1.26075 (5) obj. -35.5741 iterations 2
Cbc0038I Pass  55: suminf.    2.03432 (9) obj. -35.5741 iterations 12
Cbc0038I Pass  56: suminf.    2.03286 (9) obj. -35.5741 iterations 2
Cbc0038I Pass  57: suminf.    1.64781 (6) obj. -35.5741 iterations 7
Cbc0038I Pass  58: suminf.    1.35626 (5) obj. -35.5741 iterations 1
Cbc0038I Pass  59: suminf.    1.44858 (6) obj. -35.5741 iterations 6
Cbc0038I Pass  60: suminf.    1.35812 (6) obj. -35.5741 iterations 3
Cbc0038I Pass  61: suminf.    2.49514 (9) obj. -35.5741 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 54 columns, reduced to 29 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -24.7728 to -24.8615 (0.04 seconds)
Cbc0038I Round again with cutoff of -48.5356
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.07350 (22) obj. -48.5356 iterations 4
Cbc0038I Pass  62: suminf.    2.97531 (21) obj. -48.5356 iterations 4
Cbc0038I Pass  63: suminf.    2.12491 (7) obj. -48.5356 iterations 26
Cbc0038I Pass  64: suminf.    1.98764 (7) obj. -49.3592 iterations 3
Cbc0038I Pass  65: suminf.    2.00909 (6) obj. -48.5356 iterations 6
Cbc0038I Pass  66: suminf.    1.84793 (6) obj. -48.5356 iterations 3
Cbc0038I Pass  67: suminf.    2.02395 (6) obj. -48.5356 iterations 5
Cbc0038I Pass  68: suminf.    1.74110 (6) obj. -48.5356 iterations 2
Cbc0038I Pass  69: suminf.    1.72657 (6) obj. -48.5356 iterations 2
Cbc0038I Pass  70: suminf.    1.98485 (7) obj. -48.5356 iterations 12
Cbc0038I Pass  71: suminf.    1.75160 (7) obj. -48.5356 iterations 2
Cbc0038I Pass  72: suminf.    1.42499 (7) obj. -48.5356 iterations 7
Cbc0038I Pass  73: suminf.    1.42499 (7) obj. -48.5356 iterations 1
Cbc0038I Pass  74: suminf.    1.49643 (7) obj. -48.5356 iterations 2
Cbc0038I Pass  75: suminf.    1.49643 (7) obj. -48.5356 iterations 0
Cbc0038I Pass  76: suminf.    1.42499 (7) obj. -48.5356 iterations 3
Cbc0038I Pass  77: suminf.    2.85283 (10) obj. -48.5356 iterations 12
Cbc0038I Pass  78: suminf.    2.85283 (10) obj. -48.5356 iterations 2
Cbc0038I Pass  79: suminf.    2.41127 (7) obj. -48.5356 iterations 7
Cbc0038I Pass  80: suminf.    2.21626 (7) obj. -48.5356 iterations 3
Cbc0038I Pass  81: suminf.    2.41127 (7) obj. -48.5356 iterations 6
Cbc0038I Pass  82: suminf.    2.34123 (7) obj. -48.5356 iterations 2
Cbc0038I Pass  83: suminf.    2.14735 (7) obj. -48.5356 iterations 8
Cbc0038I Pass  84: suminf.    1.81728 (8) obj. -48.5356 iterations 4
Cbc0038I Pass  85: suminf.    1.78459 (7) obj. -48.5356 iterations 8
Cbc0038I Pass  86: suminf.    1.78459 (7) obj. -48.5356 iterations 3
Cbc0038I Pass  87: suminf.    1.86649 (7) obj. -48.5356 iterations 3
Cbc0038I Pass  88: suminf.    1.58638 (7) obj. -48.5356 iterations 4
Cbc0038I Pass  89: suminf.    3.00877 (12) obj. -48.5356 iterations 7
Cbc0038I Pass  90: suminf.    2.15644 (8) obj. -48.5356 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.8615 - took 0.04 seconds
Cbc0012I Integer solution of -24.861544 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 52 rows 54 columns, reduced to 8 rows 12 columns
Cbc0031I 19 added rows had average density of 15.736842
Cbc0013I At root node, 19 cuts changed objective from -78.779065 to -26.698623 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1145 row cuts average 3.0 elements, 20 column cuts (20 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 54 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.698 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.861544 best solution, best possible -26.698623 (1.43 seconds)
Cbc0001I Search completed - best objective -24.86154445, took 1505 iterations and 4 nodes (1.52 seconds)
Cbc0032I Strong branching done 76 times (110 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       0.98   (Wallclock seconds):       1.52

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 56 (-7) rows, 30 (-2) columns and 164 (-13) elements
Clp1000I sum of infeasibilities 0.00898962 - average 0.000160529, 2 fixed columns
Coin0506I Presolve 52 (-4) rows, 28 (-2) columns and 152 (-12) elements
Clp0029I End of values pass after 28 iterations
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Coin0511I After Postsolve, objective 89.82473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Clp0000I Optimal - objective value 89.82473
Coin0511I After Postsolve, objective 89.82473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 89.82473007 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 56 rows, 30 columns (29 integer (29 of which binary)) and 164 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.060%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 17 integers unsatisfied sum - 7.00986
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 16.5909 iterations 22
Cbc0038I Solution found of 16.5909
Cbc0038I Relaxing continuous gives 16.5909
Cbc0038I Rounding solution of 9.05216 is better than previous of 16.5909

Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 32 rows 18 columns
Cbc0038I Mini branch and bound improved solution from 9.05216 to -24.4206 (0.02 seconds)
Cbc0038I Round again with cutoff of -30.9611
Cbc0038I Pass   2: suminf.    0.81121 (3) obj. -30.9611 iterations 4
Cbc0038I Pass   3: suminf.    0.61009 (3) obj. -30.9611 iterations 2
Cbc0038I Pass   4: suminf.    1.43123 (4) obj. -30.9611 iterations 4
Cbc0038I Pass   5: suminf.    2.53625 (13) obj. -30.9611 iterations 18
Cbc0038I Pass   6: suminf.    0.92726 (8) obj. -30.9611 iterations 9
Cbc0038I Pass   7: suminf.    0.92726 (8) obj. -30.9611 iterations 0
Cbc0038I Pass   8: suminf.    0.94824 (4) obj. -30.9611 iterations 12
Cbc0038I Pass   9: suminf.    0.86416 (4) obj. -30.9611 iterations 2
Cbc0038I Pass  10: suminf.    1.55791 (5) obj. -30.9611 iterations 4
Cbc0038I Pass  11: suminf.    1.55791 (5) obj. -30.9611 iterations 0
Cbc0038I Pass  12: suminf.    0.56777 (3) obj. -30.9611 iterations 5
Cbc0038I Pass  13: suminf.    0.53864 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  14: suminf.    0.88112 (3) obj. -30.9611 iterations 3
Cbc0038I Pass  15: suminf.    0.54004 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  16: suminf.    1.19916 (4) obj. -30.9611 iterations 4
Cbc0038I Pass  17: suminf.    4.21295 (10) obj. -30.9611 iterations 8
Cbc0038I Pass  18: suminf.    0.56777 (3) obj. -30.9611 iterations 8
Cbc0038I Pass  19: suminf.    0.53864 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  20: suminf.    0.88112 (3) obj. -30.9611 iterations 3
Cbc0038I Pass  21: suminf.    0.54004 (3) obj. -30.9611 iterations 1
Cbc0038I Pass  22: suminf.    1.19916 (4) obj. -30.9611 iterations 4
Cbc0038I Pass  23: suminf.    3.52684 (13) obj. -30.9611 iterations 17
Cbc0038I Pass  24: suminf.    1.32257 (9) obj. -30.9611 iterations 7
Cbc0038I Pass  25: suminf.    1.06960 (6) obj. -30.9611 iterations 5
Cbc0038I Pass  26: suminf.    1.03821 (6) obj. -30.9611 iterations 5
Cbc0038I Pass  27: suminf.    0.85486 (2) obj. -30.9611 iterations 11
Cbc0038I Pass  28: suminf.    0.82921 (2) obj. -30.9611 iterations 2
Cbc0038I Pass  29: suminf.    0.93419 (4) obj. -30.9611 iterations 5
Cbc0038I Pass  30: suminf.    0.93419 (4) obj. -30.9611 iterations 1
Cbc0038I Pass  31: suminf.    1.15750 (4) obj. -30.9611 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -24.4206 to -24.8615 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.7338
Cbc0038I Pass  31: suminf.    1.15463 (6) obj. -42.7338 iterations 3
Cbc0038I Pass  32: suminf.    1.15463 (6) obj. -42.7338 iterations 1
Cbc0038I Pass  33: suminf.    0.72986 (4) obj. -42.7338 iterations 8
Cbc0038I Pass  34: suminf.    0.60328 (4) obj. -42.7338 iterations 3
Cbc0038I Pass  35: suminf.    1.84018 (5) obj. -42.7338 iterations 6
Cbc0038I Pass  36: suminf.    0.70923 (4) obj. -42.7338 iterations 7
Cbc0038I Pass  37: suminf.    1.99672 (8) obj. -42.7338 iterations 12
Cbc0038I Pass  38: suminf.    1.90975 (8) obj. -42.7338 iterations 5
Cbc0038I Pass  39: suminf.    1.62327 (4) obj. -42.7338 iterations 14
Cbc0038I Pass  40: suminf.    1.25957 (4) obj. -42.7338 iterations 7
Cbc0038I Pass  41: suminf.    1.10406 (4) obj. -42.7338 iterations 3
Cbc0038I Pass  42: suminf.    1.89750 (5) obj. -42.7338 iterations 6
Cbc0038I Pass  43: suminf.    1.62266 (4) obj. -42.7338 iterations 1
Cbc0038I Pass  44: suminf.    1.57478 (4) obj. -42.7338 iterations 1
Cbc0038I Pass  45: suminf.    1.33208 (4) obj. -42.7338 iterations 6
Cbc0038I Pass  46: suminf.    1.33208 (4) obj. -42.7338 iterations 0
Cbc0038I Pass  47: suminf.    5.25091 (15) obj. -42.7338 iterations 19
Cbc0038I Pass  48: suminf.    3.04001 (11) obj. -42.7338 iterations 7
Cbc0038I Pass  49: suminf.    2.76100 (7) obj. -42.7338 iterations 13
Cbc0038I Pass  50: suminf.    1.63752 (6) obj. -42.7338 iterations 5
Cbc0038I Pass  51: suminf.    1.63752 (6) obj. -42.7338 iterations 0
Cbc0038I Pass  52: suminf.    2.51347 (7) obj. -42.7338 iterations 7
Cbc0038I Pass  53: suminf.    1.64678 (7) obj. -42.7338 iterations 5
Cbc0038I Pass  54: suminf.    1.63752 (6) obj. -42.7338 iterations 1
Cbc0038I Pass  55: suminf.    2.50315 (9) obj. -42.7338 iterations 11
Cbc0038I Pass  56: suminf.    1.25054 (5) obj. -42.7338 iterations 8
Cbc0038I Pass  57: suminf.    1.25054 (5) obj. -42.7338 iterations 0
Cbc0038I Pass  58: suminf.    2.14116 (8) obj. -42.7338 iterations 8
Cbc0038I Pass  59: suminf.    1.90761 (8) obj. -42.7338 iterations 6
Cbc0038I Pass  60: suminf.    2.82110 (7) obj. -42.7338 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 56 rows 30 columns, reduced to 48 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -24.8615 - took 0.04 seconds
Cbc0012I Integer solution of -24.861544 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 56 rows 30 columns, reduced to 34 rows 19 columns
Cbc0031I 10 added rows had average density of 22.4
Cbc0013I At root node, 10 cuts changed objective from -89.82473 to -46.858931 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1135 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 441 row cuts average 30.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 52 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 78 row cuts average 29.4 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0001I Search completed - best objective -24.86154445, took 2145 iterations and 4 nodes (0.24 seconds)
Cbc0032I Strong branching done 66 times (870 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 1, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.25

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 54 (-7) columns and 531 (-82) elements
Clp1000I sum of infeasibilities 0 - average 0, 38 fixed columns
Coin0506I Presolve 14 (-38) rows, 16 (-38) columns and 54 (-477) elements
Clp0029I End of values pass after 16 iterations
Clp0014I Perturbing problem by 0.001% of 0.31198446 - largest nonzero change 2.863608e-05 ( 0.0024275985%) - largest zero change 2.0760443e-05
Clp0000I Optimal - objective value -0.65909852
Clp0000I Optimal - objective value -0.65909852
Coin0511I After Postsolve, objective -0.65909852, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22215575 - largest nonzero change 2.7136955e-05 ( 0.0023005115%) - largest zero change 2.8957466e-05
Clp0000I Optimal - objective value 106.09467
Clp0000I Optimal - objective value 106.09467
Clp0000I Optimal - objective value 106.09467
Coin0511I After Postsolve, objective 106.09467, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 106.0946692 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0004I processed model has 52 rows, 54 columns (54 integer (54 of which binary)) and 535 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.172%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.63532
Cbc0038I Pass   1: suminf.    1.24711 (11) obj. -28.767 iterations 15
Cbc0038I Pass   2: suminf.    1.24711 (11) obj. -28.767 iterations 2
Cbc0038I Solution found of 20.605
Cbc0038I Rounding solution of 15.2539 is better than previous of 20.605

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 54 columns, reduced to 16 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 15.2539 to -1.22822 (0.01 seconds)
Cbc0038I Round again with cutoff of -8.98339
Cbc0038I Pass   3: suminf.    1.24711 (11) obj. -28.767 iterations 0
Cbc0038I Pass   4: suminf.    1.24711 (11) obj. -28.767 iterations 4
Cbc0038I Pass   5: suminf.    1.30219 (13) obj. -8.98339 iterations 25
Cbc0038I Pass   6: suminf.    1.30219 (13) obj. -8.98339 iterations 0
Cbc0038I Pass   7: suminf.    0.36290 (1) obj. -12.4421 iterations 16
Cbc0038I Pass   8: suminf.    0.36290 (1) obj. -12.4421 iterations 0
Cbc0038I Pass   9: suminf.    0.44928 (1) obj. -8.98339 iterations 1
Cbc0038I Pass  10: suminf.    1.04782 (5) obj. -8.98339 iterations 14
Cbc0038I Pass  11: suminf.    0.97045 (4) obj. -8.98339 iterations 4
Cbc0038I Pass  12: suminf.    0.41129 (1) obj. -10.5142 iterations 4
Cbc0038I Pass  13: suminf.    0.44952 (1) obj. -8.98339 iterations 1
Cbc0038I Pass  14: suminf.    1.99526 (7) obj. -18.125 iterations 13
Cbc0038I Pass  15: suminf.    1.62530 (6) obj. -13.5576 iterations 5
Cbc0038I Pass  16: suminf.    1.22671 (3) obj. -8.98339 iterations 11
Cbc0038I Pass  17: suminf.    1.11964 (3) obj. -10.4167 iterations 2
Cbc0038I Pass  18: suminf.    1.03241 (4) obj. -8.98339 iterations 3
Cbc0038I Pass  19: suminf.    0.59948 (3) obj. -8.98339 iterations 6
Cbc0038I Pass  20: suminf.    0.59948 (3) obj. -8.98339 iterations 0
Cbc0038I Pass  21: suminf.    1.26536 (4) obj. -8.98339 iterations 2
Cbc0038I Pass  22: suminf.    1.26536 (4) obj. -8.98339 iterations 0
Cbc0038I Pass  23: suminf.    0.59948 (3) obj. -8.98339 iterations 5
Cbc0038I Pass  24: suminf.    3.55924 (11) obj. -8.98339 iterations 16
Cbc0038I Pass  25: suminf.    2.98458 (12) obj. -8.98339 iterations 3
Cbc0038I Pass  26: suminf.    2.96902 (11) obj. -8.98339 iterations 1
Cbc0038I Pass  27: suminf.    1.27444 (4) obj. -8.98339 iterations 9
Cbc0038I Pass  28: suminf.    1.26536 (4) obj. -8.98339 iterations 2
Cbc0038I Pass  29: suminf.    0.59948 (3) obj. -8.98339 iterations 5
Cbc0038I Pass  30: suminf.    0.59948 (3) obj. -8.98339 iterations 0
Cbc0038I Pass  31: suminf.    1.26536 (4) obj. -8.98339 iterations 2
Cbc0038I Pass  32: suminf.    3.43640 (12) obj. -8.98339 iterations 23
Cbc0038I Rounding solution of -1.8388 is better than previous of -1.22822

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 54 columns, reduced to 26 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -1.8388 to -24.7728 (0.04 seconds)
Cbc0038I Round again with cutoff of -35.5741
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.23199 (16) obj. -35.5741 iterations 3
Cbc0038I Pass  33: suminf.    2.00293 (21) obj. -35.5741 iterations 9
Cbc0038I Pass  34: suminf.    1.60760 (7) obj. -35.5741 iterations 29
Cbc0038I Pass  35: suminf.    1.60760 (7) obj. -35.5741 iterations 0
Cbc0038I Pass  36: suminf.    1.37863 (4) obj. -35.5741 iterations 11
Cbc0038I Pass  37: suminf.    1.35021 (5) obj. -35.5741 iterations 2
Cbc0038I Pass  38: suminf.    1.27709 (5) obj. -35.5741 iterations 4
Cbc0038I Pass  39: suminf.    1.27709 (5) obj. -35.5741 iterations 0
Cbc0038I Pass  40: suminf.    1.19570 (4) obj. -35.5741 iterations 3
Cbc0038I Pass  41: suminf.    1.10161 (4) obj. -35.5741 iterations 1
Cbc0038I Pass  42: suminf.    1.21351 (4) obj. -35.5741 iterations 3
Cbc0038I Pass  43: suminf.    3.29202 (16) obj. -35.5741 iterations 19
Cbc0038I Pass  44: suminf.    3.16572 (12) obj. -35.5741 iterations 5
Cbc0038I Pass  45: suminf.    1.51523 (6) obj. -35.5741 iterations 18
Cbc0038I Pass  46: suminf.    1.51523 (6) obj. -35.5741 iterations 0
Cbc0038I Pass  47: suminf.    1.28101 (5) obj. -35.5741 iterations 3
Cbc0038I Pass  48: suminf.    1.23929 (5) obj. -35.5741 iterations 2
Cbc0038I Pass  49: suminf.    1.51523 (6) obj. -35.5741 iterations 3
Cbc0038I Pass  50: suminf.    2.06539 (7) obj. -35.5741 iterations 4
Cbc0038I Pass  51: suminf.    2.06539 (7) obj. -35.5741 iterations 1
Cbc0038I Pass  52: suminf.    1.26075 (5) obj. -35.5741 iterations 4
Cbc0038I Pass  53: suminf.    1.20028 (5) obj. -35.5741 iterations 1
Cbc0038I Pass  54: suminf.    1.26075 (5) obj. -35.5741 iterations 2
Cbc0038I Pass  55: suminf.    2.03432 (9) obj. -35.5741 iterations 12
Cbc0038I Pass  56: suminf.    2.03286 (9) obj. -35.5741 iterations 2
Cbc0038I Pass  57: suminf.    1.64781 (6) obj. -35.5741 iterations 7
Cbc0038I Pass  58: suminf.    1.35626 (5) obj. -35.5741 iterations 1
Cbc0038I Pass  59: suminf.    1.44858 (6) obj. -35.5741 iterations 6
Cbc0038I Pass  60: suminf.    1.35812 (6) obj. -35.5741 iterations 3
Cbc0038I Pass  61: suminf.    2.49514 (9) obj. -35.5741 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 54 columns, reduced to 29 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -24.7728 to -24.8615 (0.05 seconds)
Cbc0038I Round again with cutoff of -48.5356
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.07350 (22) obj. -48.5356 iterations 4
Cbc0038I Pass  62: suminf.    2.97531 (21) obj. -48.5356 iterations 4
Cbc0038I Pass  63: suminf.    2.12491 (7) obj. -48.5356 iterations 26
Cbc0038I Pass  64: suminf.    1.98764 (7) obj. -49.3592 iterations 3
Cbc0038I Pass  65: suminf.    2.00909 (6) obj. -48.5356 iterations 6
Cbc0038I Pass  66: suminf.    1.84793 (6) obj. -48.5356 iterations 3
Cbc0038I Pass  67: suminf.    2.02395 (6) obj. -48.5356 iterations 5
Cbc0038I Pass  68: suminf.    1.74110 (6) obj. -48.5356 iterations 2
Cbc0038I Pass  69: suminf.    1.72657 (6) obj. -48.5356 iterations 2
Cbc0038I Pass  70: suminf.    1.98485 (7) obj. -48.5356 iterations 12
Cbc0038I Pass  71: suminf.    1.75160 (7) obj. -48.5356 iterations 2
Cbc0038I Pass  72: suminf.    1.42499 (7) obj. -48.5356 iterations 7
Cbc0038I Pass  73: suminf.    1.42499 (7) obj. -48.5356 iterations 1
Cbc0038I Pass  74: suminf.    1.49643 (7) obj. -48.5356 iterations 2
Cbc0038I Pass  75: suminf.    1.49643 (7) obj. -48.5356 iterations 0
Cbc0038I Pass  76: suminf.    1.42499 (7) obj. -48.5356 iterations 3
Cbc0038I Pass  77: suminf.    2.85283 (10) obj. -48.5356 iterations 12
Cbc0038I Pass  78: suminf.    2.85283 (10) obj. -48.5356 iterations 2
Cbc0038I Pass  79: suminf.    2.41127 (7) obj. -48.5356 iterations 7
Cbc0038I Pass  80: suminf.    2.21626 (7) obj. -48.5356 iterations 3
Cbc0038I Pass  81: suminf.    2.41127 (7) obj. -48.5356 iterations 6
Cbc0038I Pass  82: suminf.    2.34123 (7) obj. -48.5356 iterations 2
Cbc0038I Pass  83: suminf.    2.14735 (7) obj. -48.5356 iterations 8
Cbc0038I Pass  84: suminf.    1.81728 (8) obj. -48.5356 iterations 4
Cbc0038I Pass  85: suminf.    1.78459 (7) obj. -48.5356 iterations 8
Cbc0038I Pass  86: suminf.    1.78459 (7) obj. -48.5356 iterations 3
Cbc0038I Pass  87: suminf.    1.86649 (7) obj. -48.5356 iterations 3
Cbc0038I Pass  88: suminf.    1.58638 (7) obj. -48.5356 iterations 4
Cbc0038I Pass  89: suminf.    3.00877 (12) obj. -48.5356 iterations 7
Cbc0038I Pass  90: suminf.    2.15644 (8) obj. -48.5356 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -24.8615 - took 0.05 seconds
Cbc0012I Integer solution of -24.861544 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 52 rows 54 columns, reduced to 8 rows 12 columns
Cbc0031I 19 added rows had average density of 15.736842
Cbc0013I At root node, 19 cuts changed objective from -78.779065 to -26.698623 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1145 row cuts average 3.0 elements, 20 column cuts (20 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 331 row cuts average 28.7 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 51 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 54 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 110 row cuts average 12.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 176 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 24 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.782 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -24.861544 best solution, best possible -26.698623 (1.63 seconds)
Cbc0001I Search completed - best objective -24.86154445, took 1505 iterations and 4 nodes (1.74 seconds)
Cbc0032I Strong branching done 76 times (110 iterations), fathomed 0 nodes and fixed 1 variables
Cbc0035I Maximum depth 1, 13 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.74

