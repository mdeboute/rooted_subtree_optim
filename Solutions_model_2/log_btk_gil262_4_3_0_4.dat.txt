Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 337 (-190) rows, 179 (-85) columns and 1015 (-530) elements
Clp1000I sum of infeasibilities 3.44629e-06 - average 1.02264e-08, 163 fixed columns
Coin0506I Presolve 15 (-322) rows, 16 (-163) columns and 55 (-960) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Coin0511I After Postsolve, objective 211662.97, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1530071 - largest nonzero change 1.1858686e-05 ( 0.0011858686%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Coin0511I After Postsolve, objective 211662.97, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 211662.9743 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 337 rows, 179 columns (178 integer (178 of which binary)) and 1015 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.521%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.67229
Cbc0038I Solution found of -162919
Cbc0038I Relaxing continuous gives -162919
Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -162919 to -185255 (0.02 seconds)
Cbc0038I Round again with cutoff of -187896
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.11253 (1) obj. -187896 iterations 51
Cbc0038I Pass   2: suminf.    0.11253 (1) obj. -187896 iterations 0
Cbc0038I Pass   3: suminf.    0.60541 (2) obj. -188016 iterations 17
Cbc0038I Pass   4: suminf.    0.60891 (2) obj. -187896 iterations 4
Cbc0038I Pass   5: suminf.    1.04321 (4) obj. -187896 iterations 31
Cbc0038I Pass   6: suminf.    0.79050 (2) obj. -187896 iterations 20
Cbc0038I Pass   7: suminf.    0.88649 (2) obj. -191182 iterations 4
Cbc0038I Pass   8: suminf.    1.08227 (4) obj. -187896 iterations 23
Cbc0038I Pass   9: suminf.    0.84818 (4) obj. -187896 iterations 33
Cbc0038I Pass  10: suminf.    0.80810 (3) obj. -187896 iterations 13
Cbc0038I Pass  11: suminf.    0.62718 (3) obj. -187896 iterations 10
Cbc0038I Pass  12: suminf.    0.24320 (2) obj. -187896 iterations 10
Cbc0038I Pass  13: suminf.    0.43579 (2) obj. -187896 iterations 9
Cbc0038I Solution found of -193939
Cbc0038I Relaxing continuous gives -193939
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 32 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -193939 to -198680 (0.03 seconds)
Cbc0038I Round again with cutoff of -201277
Cbc0038I Reduced cost fixing fixed 81 variables on major pass 3
Cbc0038I Pass  14: suminf.    0.80268 (6) obj. -201277 iterations 2
Cbc0038I Pass  15: suminf.    0.80268 (6) obj. -201277 iterations 12
Cbc0038I Pass  16: suminf.    1.87500 (6) obj. -203069 iterations 19
Cbc0038I Pass  17: suminf.    2.28903 (9) obj. -201277 iterations 14
Cbc0038I Pass  18: suminf.    3.05625 (9) obj. -201277 iterations 17
Cbc0038I Pass  19: suminf.    3.03917 (11) obj. -201277 iterations 17
Cbc0038I Pass  20: suminf.    0.80268 (6) obj. -201277 iterations 22
Cbc0038I Pass  21: suminf.    2.01059 (7) obj. -201277 iterations 19
Cbc0038I Pass  22: suminf.    1.24526 (5) obj. -201277 iterations 17
Cbc0038I Pass  23: suminf.    0.71778 (6) obj. -201277 iterations 14
Cbc0038I Pass  24: suminf.    0.71778 (6) obj. -201277 iterations 9
Cbc0038I Pass  25: suminf.    1.37946 (6) obj. -204755 iterations 19
Cbc0038I Pass  26: suminf.    0.71778 (6) obj. -201277 iterations 12
Cbc0038I Pass  27: suminf.    1.58244 (7) obj. -201277 iterations 18
Cbc0038I Pass  28: suminf.    1.07336 (6) obj. -201277 iterations 15
Cbc0038I Pass  29: suminf.    1.07336 (6) obj. -201277 iterations 10
Cbc0038I Pass  30: suminf.    1.66071 (6) obj. -203977 iterations 18
Cbc0038I Pass  31: suminf.    1.02701 (12) obj. -201277 iterations 24
Cbc0038I Pass  32: suminf.    1.02701 (12) obj. -201277 iterations 4
Cbc0038I Pass  33: suminf.    1.03027 (6) obj. -201277 iterations 16
Cbc0038I Pass  34: suminf.    1.03027 (6) obj. -201277 iterations 6
Cbc0038I Pass  35: suminf.    0.71778 (6) obj. -201277 iterations 18
Cbc0038I Pass  36: suminf.    0.71778 (6) obj. -201277 iterations 11
Cbc0038I Pass  37: suminf.    1.37946 (6) obj. -204755 iterations 18
Cbc0038I Pass  38: suminf.    1.66694 (10) obj. -201277 iterations 15
Cbc0038I Pass  39: suminf.    1.83395 (9) obj. -201277 iterations 15
Cbc0038I Pass  40: suminf.    1.25215 (3) obj. -201277 iterations 15
Cbc0038I Pass  41: suminf.    1.22759 (4) obj. -201277 iterations 5
Cbc0038I Pass  42: suminf.    1.21447 (4) obj. -201277 iterations 7
Cbc0038I Pass  43: suminf.    1.21447 (4) obj. -201277 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 45 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -198680 - took 0.04 seconds
Cbc0012I Integer solution of -198680.4 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 337 rows 179 columns, reduced to 15 rows 15 columns
Cbc0031I 5 added rows had average density of 34.6
Cbc0013I At root node, 5 cuts changed objective from -211662.97 to -206369.12 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 3.1 elements, 13 column cuts (13 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 171.1 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is 1
Cbc0010I After 9 nodes, 1 on tree, -198680.4 best solution, best possible -206366.84 (0.67 seconds)
Cbc0001I Search completed - best objective -198680.4, took 476 iterations and 14 nodes (0.95 seconds)
Cbc0032I Strong branching done 120 times (865 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 129 variables fixed on reduced cost
Total time (CPU seconds):       0.59   (Wallclock seconds):       0.96

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 286 (-240) rows, 305 (-219) columns and 11669 (-24067) elements
Clp1000I sum of infeasibilities 6.95067e-06 - average 2.4303e-08, 284 fixed columns
Coin0506I Presolve 18 (-268) rows, 21 (-284) columns and 73 (-11596) elements
Clp0006I 0  Obj 204315.08 Primal inf 1.5964262e-06 (3) Dual inf 5.2550744e+08 (18)
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 4.5302639 - largest nonzero change 1.4860341e-05 ( 0.00078979204%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 210912.46
Clp0000I Optimal - objective value 210912.46
Coin0511I After Postsolve, objective 210912.46, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 210912.46 Dual inf 111181.45 (140)
Clp0014I Perturbing problem by 0.001% of 2.4659336 - largest nonzero change 2.6794568e-05 ( 0.0017128079%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 211812.37
Clp0000I Optimal - objective value 211812.37
Clp0000I Optimal - objective value 211812.37
Coin0511I After Postsolve, objective 211812.37, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 211812.3722 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0004I processed model has 288 rows, 307 columns (307 integer (307 of which binary)) and 11673 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.011%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 133 integers unsatisfied sum - 6.86953
Cbc0038I Pass   1: suminf.    1.53577 (82) obj. -102346 iterations 46
Cbc0038I Pass   2: suminf.    1.53577 (82) obj. -102346 iterations 1
Cbc0038I Pass   3: suminf.    0.84056 (57) obj. -102281 iterations 25
Cbc0038I Pass   4: suminf.    0.52644 (41) obj. -102264 iterations 16
Cbc0038I Pass   5: suminf.    0.31740 (28) obj. -102246 iterations 13
Cbc0038I Solution found of -102215
Cbc0038I Rounding solution of -133262 is better than previous of -102215

Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 288 rows 307 columns, reduced to 51 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -133262 to -185255 (0.13 seconds)
Cbc0038I Round again with cutoff of -187911
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   6: suminf.    2.78730 (99) obj. -187911 iterations 11
Cbc0038I Pass   7: suminf.    2.78730 (99) obj. -187911 iterations 0
Cbc0038I Pass   8: suminf.    2.25146 (89) obj. -187911 iterations 17
Cbc0038I Pass   9: suminf.    1.64584 (68) obj. -187911 iterations 23
Cbc0038I Pass  10: suminf.    1.63706 (68) obj. -192402 iterations 3
Cbc0038I Pass  11: suminf.    1.04367 (43) obj. -187911 iterations 27
Cbc0038I Pass  12: suminf.    1.01576 (43) obj. -192372 iterations 2
Cbc0038I Pass  13: suminf.    0.60046 (21) obj. -187911 iterations 24
Cbc0038I Pass  14: suminf.    0.54982 (21) obj. -192347 iterations 2
Cbc0038I Pass  15: suminf.    0.29488 (1) obj. -187911 iterations 22
Cbc0038I Pass  16: suminf.    0.21622 (2) obj. -198414 iterations 3
Cbc0038I Pass  17: suminf.    0.52302 (2) obj. -187911 iterations 6
Cbc0038I Pass  18: suminf.    1.29570 (22) obj. -187911 iterations 48
Cbc0038I Pass  19: suminf.    0.96854 (18) obj. -187911 iterations 21
Cbc0038I Pass  20: suminf.    1.01753 (6) obj. -198664 iterations 23
Cbc0038I Pass  21: suminf.    0.69625 (2) obj. -187911 iterations 8
Cbc0038I Pass  22: suminf.    0.69625 (2) obj. -187911 iterations 0
Cbc0038I Pass  23: suminf.    0.98874 (3) obj. -198661 iterations 7
Cbc0038I Pass  24: suminf.    1.13504 (19) obj. -187911 iterations 49
Cbc0038I Pass  25: suminf.    0.75630 (16) obj. -187911 iterations 19
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -194614 iterations 22
Cbc0038I Pass  27: suminf.    0.30688 (1) obj. -187911 iterations 2
Cbc0038I Pass  28: suminf.    1.56070 (21) obj. -187911 iterations 61
Cbc0038I Pass  29: suminf.    0.75772 (17) obj. -187911 iterations 22
Cbc0038I Pass  30: suminf.    0.32273 (2) obj. -193171 iterations 17
Cbc0038I Pass  31: suminf.    0.17117 (2) obj. -187911 iterations 1
Cbc0038I Pass  32: suminf.    0.30000 (1) obj. -193170 iterations 3
Cbc0038I Pass  33: suminf.    0.14847 (1) obj. -187911 iterations 2
Cbc0038I Pass  34: suminf.    1.80743 (18) obj. -187911 iterations 52
Cbc0038I Pass  35: suminf.    1.65385 (16) obj. -187911 iterations 12
Cbc0038I Rounding solution of -189584 is better than previous of -185255

Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 0 continuous
Cbc0038I Full problem 288 rows 307 columns, reduced to 146 rows 154 columns - 88 fixed gives 59, 66 - ok now
Cbc0038I Full problem 288 rows 307 columns, reduced to 59 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -189584 to -198680 (0.19 seconds)
Cbc0038I Round again with cutoff of -201306
Cbc0038I Reduced cost fixing fixed 82 variables on major pass 3
Cbc0038I Pass  35: suminf.    3.13433 (106) obj. -201306 iterations 10
Cbc0038I Pass  36: suminf.    3.13433 (106) obj. -201306 iterations 7
Cbc0038I Pass  37: suminf.    2.12061 (79) obj. -201306 iterations 34
Cbc0038I Pass  38: suminf.    2.12061 (79) obj. -201306 iterations 7
Cbc0038I Pass  39: suminf.    1.36607 (52) obj. -201306 iterations 36
Cbc0038I Pass  40: suminf.    1.36607 (52) obj. -201306 iterations 9
Cbc0038I Pass  41: suminf.    0.81967 (30) obj. -201306 iterations 31
Cbc0038I Pass  42: suminf.    0.81967 (30) obj. -201306 iterations 11
Cbc0038I Pass  43: suminf.    0.88007 (10) obj. -201306 iterations 37
Cbc0038I Pass  44: suminf.    0.41488 (10) obj. -201306 iterations 10
Cbc0038I Pass  45: suminf.    0.41488 (10) obj. -201306 iterations 12
Cbc0038I Pass  46: suminf.    1.08314 (8) obj. -206424 iterations 19
Cbc0038I Pass  47: suminf.    0.38057 (8) obj. -201306 iterations 14
Cbc0038I Pass  48: suminf.    0.38057 (8) obj. -201306 iterations 12
Cbc0038I Pass  49: suminf.    1.32173 (22) obj. -201306 iterations 36
Cbc0038I Pass  50: suminf.    0.81114 (21) obj. -201306 iterations 8
Cbc0038I Pass  51: suminf.    1.07143 (6) obj. -206393 iterations 31
Cbc0038I Pass  52: suminf.    0.38280 (6) obj. -201306 iterations 13
Cbc0038I Pass  53: suminf.    0.38280 (6) obj. -201306 iterations 12
Cbc0038I Pass  54: suminf.    3.64096 (33) obj. -201306 iterations 52
Cbc0038I Pass  55: suminf.    1.37419 (28) obj. -201306 iterations 17
Cbc0038I Pass  56: suminf.    1.37419 (28) obj. -201306 iterations 9
Cbc0038I Pass  57: suminf.    1.60480 (14) obj. -201306 iterations 30
Cbc0038I Pass  58: suminf.    0.93809 (14) obj. -201306 iterations 10
Cbc0038I Pass  59: suminf.    0.93809 (14) obj. -201306 iterations 9
Cbc0038I Pass  60: suminf.    1.35268 (6) obj. -205613 iterations 24
Cbc0038I Pass  61: suminf.    0.73849 (6) obj. -201306 iterations 12
Cbc0038I Pass  62: suminf.    0.73849 (6) obj. -201306 iterations 12
Cbc0038I Pass  63: suminf.    1.98332 (31) obj. -201306 iterations 41
Cbc0038I Pass  64: suminf.    1.10458 (24) obj. -201306 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 288 rows 307 columns, reduced to 54 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -198680 - took 0.17 seconds
Cbc0012I Integer solution of -198680.4 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 288 rows 307 columns, reduced to 35 rows 36 columns
Cbc0031I 87 added rows had average density of 7.8735632
Cbc0013I At root node, 87 cuts changed objective from -211809.88 to -206356.97 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 2209 row cuts average 11.7 elements, 48 column cuts (60 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 44.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 192 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 466 row cuts average 43.4 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 84.4 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -198680.4 best solution, best possible -206356.97 (0.68 seconds)
Cbc0001I Search completed - best objective -198680.4, took 2115 iterations and 18 nodes (0.94 seconds)
Cbc0032I Strong branching done 392 times (5774 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.85   (Wallclock seconds):       0.95

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 337 (-190) rows, 179 (-85) columns and 1015 (-530) elements
Clp1000I sum of infeasibilities 3.44629e-06 - average 1.02264e-08, 163 fixed columns
Coin0506I Presolve 15 (-322) rows, 16 (-163) columns and 55 (-960) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Coin0511I After Postsolve, objective 211662.97, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.1530071 - largest nonzero change 1.1858686e-05 ( 0.0011858686%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Clp0000I Optimal - objective value 211662.97
Coin0511I After Postsolve, objective 211662.97, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 211662.9743 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 337 rows, 179 columns (178 integer (178 of which binary)) and 1015 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.521%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 2.67229
Cbc0038I Solution found of -162919
Cbc0038I Relaxing continuous gives -162919
Cbc0038I Before mini branch and bound, 165 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 15 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -162919 to -185255 (0.01 seconds)
Cbc0038I Round again with cutoff of -187896
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   1: suminf.    0.11253 (1) obj. -187896 iterations 51
Cbc0038I Pass   2: suminf.    0.11253 (1) obj. -187896 iterations 0
Cbc0038I Pass   3: suminf.    0.60541 (2) obj. -188016 iterations 17
Cbc0038I Pass   4: suminf.    0.60891 (2) obj. -187896 iterations 4
Cbc0038I Pass   5: suminf.    1.04321 (4) obj. -187896 iterations 31
Cbc0038I Pass   6: suminf.    0.79050 (2) obj. -187896 iterations 20
Cbc0038I Pass   7: suminf.    0.88649 (2) obj. -191182 iterations 4
Cbc0038I Pass   8: suminf.    1.08227 (4) obj. -187896 iterations 23
Cbc0038I Pass   9: suminf.    0.84818 (4) obj. -187896 iterations 33
Cbc0038I Pass  10: suminf.    0.80810 (3) obj. -187896 iterations 13
Cbc0038I Pass  11: suminf.    0.62718 (3) obj. -187896 iterations 10
Cbc0038I Pass  12: suminf.    0.24320 (2) obj. -187896 iterations 10
Cbc0038I Pass  13: suminf.    0.43579 (2) obj. -187896 iterations 9
Cbc0038I Solution found of -193939
Cbc0038I Relaxing continuous gives -193939
Cbc0038I Before mini branch and bound, 154 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 32 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -193939 to -198680 (0.02 seconds)
Cbc0038I Round again with cutoff of -201277
Cbc0038I Reduced cost fixing fixed 81 variables on major pass 3
Cbc0038I Pass  14: suminf.    0.80268 (6) obj. -201277 iterations 2
Cbc0038I Pass  15: suminf.    0.80268 (6) obj. -201277 iterations 12
Cbc0038I Pass  16: suminf.    1.87500 (6) obj. -203069 iterations 19
Cbc0038I Pass  17: suminf.    2.28903 (9) obj. -201277 iterations 14
Cbc0038I Pass  18: suminf.    3.05625 (9) obj. -201277 iterations 17
Cbc0038I Pass  19: suminf.    3.03917 (11) obj. -201277 iterations 17
Cbc0038I Pass  20: suminf.    0.80268 (6) obj. -201277 iterations 22
Cbc0038I Pass  21: suminf.    2.01059 (7) obj. -201277 iterations 19
Cbc0038I Pass  22: suminf.    1.24526 (5) obj. -201277 iterations 17
Cbc0038I Pass  23: suminf.    0.71778 (6) obj. -201277 iterations 14
Cbc0038I Pass  24: suminf.    0.71778 (6) obj. -201277 iterations 9
Cbc0038I Pass  25: suminf.    1.37946 (6) obj. -204755 iterations 19
Cbc0038I Pass  26: suminf.    0.71778 (6) obj. -201277 iterations 12
Cbc0038I Pass  27: suminf.    1.58244 (7) obj. -201277 iterations 18
Cbc0038I Pass  28: suminf.    1.07336 (6) obj. -201277 iterations 15
Cbc0038I Pass  29: suminf.    1.07336 (6) obj. -201277 iterations 10
Cbc0038I Pass  30: suminf.    1.66071 (6) obj. -203977 iterations 18
Cbc0038I Pass  31: suminf.    1.02701 (12) obj. -201277 iterations 24
Cbc0038I Pass  32: suminf.    1.02701 (12) obj. -201277 iterations 4
Cbc0038I Pass  33: suminf.    1.03027 (6) obj. -201277 iterations 16
Cbc0038I Pass  34: suminf.    1.03027 (6) obj. -201277 iterations 6
Cbc0038I Pass  35: suminf.    0.71778 (6) obj. -201277 iterations 18
Cbc0038I Pass  36: suminf.    0.71778 (6) obj. -201277 iterations 11
Cbc0038I Pass  37: suminf.    1.37946 (6) obj. -204755 iterations 18
Cbc0038I Pass  38: suminf.    1.66694 (10) obj. -201277 iterations 15
Cbc0038I Pass  39: suminf.    1.83395 (9) obj. -201277 iterations 15
Cbc0038I Pass  40: suminf.    1.25215 (3) obj. -201277 iterations 15
Cbc0038I Pass  41: suminf.    1.22759 (4) obj. -201277 iterations 5
Cbc0038I Pass  42: suminf.    1.21447 (4) obj. -201277 iterations 7
Cbc0038I Pass  43: suminf.    1.21447 (4) obj. -201277 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 148 integers at bound fixed and 0 continuous
Cbc0038I Full problem 337 rows 179 columns, reduced to 45 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -198680 - took 0.04 seconds
Cbc0012I Integer solution of -198680.4 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 337 rows 179 columns, reduced to 15 rows 15 columns
Cbc0031I 5 added rows had average density of 34.6
Cbc0013I At root node, 5 cuts changed objective from -211662.97 to -206369.12 in 9 passes
Cbc0014I Cut generator 0 (Probing) - 14 row cuts average 3.1 elements, 13 column cuts (13 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 7 row cuts average 42.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 10 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 43.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 42 row cuts average 42.2 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 17 row cuts average 171.1 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is 1
Cbc0010I After 6 nodes, 3 on tree, -198680.4 best solution, best possible -206366.84 (0.70 seconds)
Cbc0001I Search completed - best objective -198680.4, took 476 iterations and 14 nodes (1.03 seconds)
Cbc0032I Strong branching done 120 times (865 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 3, 129 variables fixed on reduced cost
Total time (CPU seconds):       0.62   (Wallclock seconds):       1.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 286 (-241) rows, 305 (-220) columns and 11669 (-24068) elements
Clp1000I sum of infeasibilities 6.95067e-06 - average 2.4303e-08, 284 fixed columns
Coin0506I Presolve 18 (-268) rows, 21 (-284) columns and 73 (-11596) elements
Clp0006I 0  Obj 204315.08 Primal inf 1.5964262e-06 (3) Dual inf 5.2550744e+08 (18)
Clp0029I End of values pass after 21 iterations
Clp0014I Perturbing problem by 0.001% of 4.5302639 - largest nonzero change 1.4860341e-05 ( 0.00078979204%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 210912.46
Clp0000I Optimal - objective value 210912.46
Coin0511I After Postsolve, objective 210912.46, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 210912.46 Dual inf 111181.45 (140)
Clp0014I Perturbing problem by 0.001% of 2.4659336 - largest nonzero change 2.6794568e-05 ( 0.0017128079%) - largest zero change 2.9669812e-05
Clp0000I Optimal - objective value 211812.37
Clp0000I Optimal - objective value 211812.37
Clp0000I Optimal - objective value 211812.37
Coin0511I After Postsolve, objective 211812.37, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 211812.3722 - 0 iterations time 0.062, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 288 rows, 307 columns (307 integer (307 of which binary)) and 11673 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.011%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 133 integers unsatisfied sum - 6.86953
Cbc0038I Pass   1: suminf.    1.53577 (82) obj. -102346 iterations 46
Cbc0038I Pass   2: suminf.    1.53577 (82) obj. -102346 iterations 1
Cbc0038I Pass   3: suminf.    0.84056 (57) obj. -102281 iterations 25
Cbc0038I Pass   4: suminf.    0.52644 (41) obj. -102264 iterations 16
Cbc0038I Pass   5: suminf.    0.31740 (28) obj. -102246 iterations 13
Cbc0038I Solution found of -102215
Cbc0038I Rounding solution of -133262 is better than previous of -102215

Cbc0038I Before mini branch and bound, 173 integers at bound fixed and 0 continuous
Cbc0038I Full problem 288 rows 307 columns, reduced to 51 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -133262 to -185255 (0.13 seconds)
Cbc0038I Round again with cutoff of -187911
Cbc0038I Reduced cost fixing fixed 11 variables on major pass 2
Cbc0038I Pass   6: suminf.    2.78730 (99) obj. -187911 iterations 11
Cbc0038I Pass   7: suminf.    2.78730 (99) obj. -187911 iterations 0
Cbc0038I Pass   8: suminf.    2.25146 (89) obj. -187911 iterations 17
Cbc0038I Pass   9: suminf.    1.64584 (68) obj. -187911 iterations 23
Cbc0038I Pass  10: suminf.    1.63706 (68) obj. -192402 iterations 3
Cbc0038I Pass  11: suminf.    1.04367 (43) obj. -187911 iterations 27
Cbc0038I Pass  12: suminf.    1.01576 (43) obj. -192372 iterations 2
Cbc0038I Pass  13: suminf.    0.60046 (21) obj. -187911 iterations 24
Cbc0038I Pass  14: suminf.    0.54982 (21) obj. -192347 iterations 2
Cbc0038I Pass  15: suminf.    0.29488 (1) obj. -187911 iterations 22
Cbc0038I Pass  16: suminf.    0.21622 (2) obj. -198414 iterations 3
Cbc0038I Pass  17: suminf.    0.52302 (2) obj. -187911 iterations 6
Cbc0038I Pass  18: suminf.    1.29570 (22) obj. -187911 iterations 48
Cbc0038I Pass  19: suminf.    0.96854 (18) obj. -187911 iterations 21
Cbc0038I Pass  20: suminf.    1.01753 (6) obj. -198664 iterations 23
Cbc0038I Pass  21: suminf.    0.69625 (2) obj. -187911 iterations 8
Cbc0038I Pass  22: suminf.    0.69625 (2) obj. -187911 iterations 0
Cbc0038I Pass  23: suminf.    0.98874 (3) obj. -198661 iterations 7
Cbc0038I Pass  24: suminf.    1.13504 (19) obj. -187911 iterations 49
Cbc0038I Pass  25: suminf.    0.75630 (16) obj. -187911 iterations 19
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -194614 iterations 22
Cbc0038I Pass  27: suminf.    0.30688 (1) obj. -187911 iterations 2
Cbc0038I Pass  28: suminf.    1.56070 (21) obj. -187911 iterations 61
Cbc0038I Pass  29: suminf.    0.75772 (17) obj. -187911 iterations 22
Cbc0038I Pass  30: suminf.    0.32273 (2) obj. -193171 iterations 17
Cbc0038I Pass  31: suminf.    0.17117 (2) obj. -187911 iterations 1
Cbc0038I Pass  32: suminf.    0.30000 (1) obj. -193170 iterations 3
Cbc0038I Pass  33: suminf.    0.14847 (1) obj. -187911 iterations 2
Cbc0038I Pass  34: suminf.    1.80743 (18) obj. -187911 iterations 52
Cbc0038I Pass  35: suminf.    1.65385 (16) obj. -187911 iterations 12
Cbc0038I Rounding solution of -189584 is better than previous of -185255

Cbc0038I Before mini branch and bound, 144 integers at bound fixed and 0 continuous
Cbc0038I Full problem 288 rows 307 columns, reduced to 146 rows 154 columns - 88 fixed gives 59, 66 - ok now
Cbc0038I Full problem 288 rows 307 columns, reduced to 59 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -189584 to -198680 (0.19 seconds)
Cbc0038I Round again with cutoff of -201306
Cbc0038I Reduced cost fixing fixed 82 variables on major pass 3
Cbc0038I Pass  35: suminf.    3.13433 (106) obj. -201306 iterations 10
Cbc0038I Pass  36: suminf.    3.13433 (106) obj. -201306 iterations 7
Cbc0038I Pass  37: suminf.    2.12061 (79) obj. -201306 iterations 34
Cbc0038I Pass  38: suminf.    2.12061 (79) obj. -201306 iterations 7
Cbc0038I Pass  39: suminf.    1.36607 (52) obj. -201306 iterations 36
Cbc0038I Pass  40: suminf.    1.36607 (52) obj. -201306 iterations 9
Cbc0038I Pass  41: suminf.    0.81967 (30) obj. -201306 iterations 31
Cbc0038I Pass  42: suminf.    0.81967 (30) obj. -201306 iterations 11
Cbc0038I Pass  43: suminf.    0.88007 (10) obj. -201306 iterations 37
Cbc0038I Pass  44: suminf.    0.41488 (10) obj. -201306 iterations 10
Cbc0038I Pass  45: suminf.    0.41488 (10) obj. -201306 iterations 12
Cbc0038I Pass  46: suminf.    1.08314 (8) obj. -206424 iterations 19
Cbc0038I Pass  47: suminf.    0.38057 (8) obj. -201306 iterations 14
Cbc0038I Pass  48: suminf.    0.38057 (8) obj. -201306 iterations 12
Cbc0038I Pass  49: suminf.    1.32173 (22) obj. -201306 iterations 36
Cbc0038I Pass  50: suminf.    0.81114 (21) obj. -201306 iterations 8
Cbc0038I Pass  51: suminf.    1.07143 (6) obj. -206393 iterations 31
Cbc0038I Pass  52: suminf.    0.38280 (6) obj. -201306 iterations 13
Cbc0038I Pass  53: suminf.    0.38280 (6) obj. -201306 iterations 12
Cbc0038I Pass  54: suminf.    3.64096 (33) obj. -201306 iterations 52
Cbc0038I Pass  55: suminf.    1.37419 (28) obj. -201306 iterations 17
Cbc0038I Pass  56: suminf.    1.37419 (28) obj. -201306 iterations 9
Cbc0038I Pass  57: suminf.    1.60480 (14) obj. -201306 iterations 30
Cbc0038I Pass  58: suminf.    0.93809 (14) obj. -201306 iterations 10
Cbc0038I Pass  59: suminf.    0.93809 (14) obj. -201306 iterations 9
Cbc0038I Pass  60: suminf.    1.35268 (6) obj. -205613 iterations 24
Cbc0038I Pass  61: suminf.    0.73849 (6) obj. -201306 iterations 12
Cbc0038I Pass  62: suminf.    0.73849 (6) obj. -201306 iterations 12
Cbc0038I Pass  63: suminf.    1.98332 (31) obj. -201306 iterations 41
Cbc0038I Pass  64: suminf.    1.10458 (24) obj. -201306 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 288 rows 307 columns, reduced to 54 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -198680 - took 0.17 seconds
Cbc0012I Integer solution of -198680.4 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 288 rows 307 columns, reduced to 35 rows 36 columns
Cbc0031I 87 added rows had average density of 7.8735632
Cbc0013I At root node, 87 cuts changed objective from -211809.88 to -206356.97 in 15 passes
Cbc0014I Cut generator 0 (Probing) - 2209 row cuts average 11.7 elements, 48 column cuts (60 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 44.2 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 7 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 192 row cuts average 63.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 466 row cuts average 43.4 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 28 row cuts average 84.4 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -198680.4 best solution, best possible -206356.97 (0.68 seconds)
Cbc0001I Search completed - best objective -198680.4, took 2115 iterations and 18 nodes (0.95 seconds)
Cbc0032I Strong branching done 392 times (5774 iterations), fathomed 4 nodes and fixed 3 variables
Cbc0035I Maximum depth 5, 119 variables fixed on reduced cost
Total time (CPU seconds):       0.86   (Wallclock seconds):       0.96

