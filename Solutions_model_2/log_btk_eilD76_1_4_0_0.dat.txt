Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 73 (-5) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 2.03803e-05 - average 1.55574e-07, 11 fixed columns
Coin0506I Presolve 111 (-20) rows, 62 (-11) columns and 338 (-62) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.5747417 - largest nonzero change 0 ( 0%) - largest zero change 2.3568723e-05
Clp0000I Optimal - objective value 44.922297
Clp0000I Optimal - objective value 44.922297
Coin0511I After Postsolve, objective 44.922297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.922297
Clp0000I Optimal - objective value 44.922297
Clp0000I Optimal - objective value 44.922297
Coin0511I After Postsolve, objective 44.922297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.92229655 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 73 columns (72 integer (72 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.202%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 10.5998
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.88658 iterations 48
Cbc0038I Solution found of 9.88658
Cbc0038I Relaxing continuous gives 9.88658
Cbc0038I Rounding solution of -5.55061 is better than previous of 9.88658

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -5.55061 to -9.35468 (0.05 seconds)
Cbc0038I Round again with cutoff of -12.9115
Cbc0038I Pass   2: suminf.    2.70940 (12) obj. -12.9115 iterations 16
Cbc0038I Pass   3: suminf.    2.40284 (21) obj. -12.9115 iterations 11
Cbc0038I Pass   4: suminf.    2.09687 (36) obj. -12.9115 iterations 19
Cbc0038I Pass   5: suminf.    2.86772 (11) obj. -12.9115 iterations 43
Cbc0038I Pass   6: suminf.    1.01205 (6) obj. -12.9115 iterations 7
Cbc0038I Pass   7: suminf.    1.57219 (5) obj. -12.9115 iterations 15
Cbc0038I Pass   8: suminf.    1.44706 (5) obj. -12.9115 iterations 4
Cbc0038I Pass   9: suminf.    1.36656 (4) obj. -12.9115 iterations 1
Cbc0038I Pass  10: suminf.    1.20387 (4) obj. -12.9115 iterations 4
Cbc0038I Pass  11: suminf.    1.05838 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  12: suminf.    0.95083 (3) obj. -12.9115 iterations 1
Cbc0038I Pass  13: suminf.    1.06375 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  14: suminf.    0.90467 (3) obj. -12.9115 iterations 1
Cbc0038I Pass  15: suminf.    1.05838 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  16: suminf.    3.12599 (10) obj. -12.9115 iterations 13
Cbc0038I Pass  17: suminf.    1.93522 (7) obj. -12.9115 iterations 8
Cbc0038I Pass  18: suminf.    2.13597 (7) obj. -12.9115 iterations 12
Cbc0038I Pass  19: suminf.    2.13597 (7) obj. -12.9115 iterations 0
Cbc0038I Pass  20: suminf.    1.28962 (5) obj. -12.9115 iterations 7
Cbc0038I Pass  21: suminf.    1.73723 (6) obj. -12.9115 iterations 7
Cbc0038I Pass  22: suminf.    1.59207 (5) obj. -12.9115 iterations 5
Cbc0038I Pass  23: suminf.    1.42438 (4) obj. -12.9115 iterations 16
Cbc0038I Pass  24: suminf.    1.11606 (4) obj. -12.9115 iterations 5
Cbc0038I Pass  25: suminf.    1.46739 (4) obj. -12.9115 iterations 4
Cbc0038I Pass  26: suminf.    1.33592 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  27: suminf.    1.32693 (4) obj. -12.9115 iterations 1
Cbc0038I Pass  28: suminf.    1.32213 (4) obj. -12.9115 iterations 4
Cbc0038I Pass  29: suminf.    1.16230 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  30: suminf.    1.10505 (4) obj. -12.9115 iterations 1
Cbc0038I Pass  31: suminf.    1.46739 (4) obj. -12.9115 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 80 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -9.35468 to -10.0873 (0.11 seconds)
Cbc0038I Round again with cutoff of -19.3137
Cbc0038I Pass  31: suminf.    3.92627 (19) obj. -19.3137 iterations 7
Cbc0038I Pass  32: suminf.    3.92491 (21) obj. -19.3137 iterations 4
Cbc0038I Pass  33: suminf.    1.46666 (7) obj. -19.3137 iterations 23
Cbc0038I Pass  34: suminf.    1.46666 (7) obj. -19.3137 iterations 0
Cbc0038I Pass  35: suminf.    3.64356 (10) obj. -19.3137 iterations 9
Cbc0038I Pass  36: suminf.    1.42484 (7) obj. -19.3137 iterations 11
Cbc0038I Pass  37: suminf.    1.19392 (5) obj. -19.3137 iterations 4
Cbc0038I Pass  38: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  39: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  40: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  41: suminf.    1.21159 (4) obj. -19.3137 iterations 6
Cbc0038I Pass  42: suminf.    1.19392 (5) obj. -19.3137 iterations 2
Cbc0038I Pass  43: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  44: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  45: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  46: suminf.    1.21159 (4) obj. -19.3137 iterations 6
Cbc0038I Pass  47: suminf.    1.19392 (5) obj. -19.3137 iterations 2
Cbc0038I Pass  48: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  49: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  50: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  51: suminf.    1.21159 (4) obj. -19.3137 iterations 6
Cbc0038I Pass  52: suminf.    1.19392 (5) obj. -19.3137 iterations 2
Cbc0038I Pass  53: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  54: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  55: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  56: suminf.    1.21159 (4) obj. -19.3137 iterations 6
Cbc0038I Pass  57: suminf.    1.19392 (5) obj. -19.3137 iterations 2
Cbc0038I Pass  58: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  59: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  60: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -10.0873 - took 0.13 seconds
Cbc0012I Integer solution of -10.08727 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 65 rows 39 columns
Cbc0012I Integer solution of -12.29363 found by RINS after 0 iterations and 0 nodes (0.20 seconds)
Cbc0031I 21 added rows had average density of 53.285714
Cbc0013I At root node, 21 cuts changed objective from -44.922297 to -34.411775 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7805 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2079 row cuts average 72.6 elements, 0 column cuts (0 active)  in 0.067 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 65.6 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.29363 best solution, best possible -34.411775 (0.75 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 55 rows 33 columns
Cbc0012I Integer solution of -12.528112 found by rounding after 7241 iterations and 59 nodes (1.12 seconds)
Cbc0016I Integer solution of -12.724522 found by strong branching after 7274 iterations and 61 nodes (1.12 seconds)
Cbc0001I Search completed - best objective -12.724522, took 8059 iterations and 84 nodes (1.17 seconds)
Cbc0032I Strong branching done 936 times (15381 iterations), fathomed 6 nodes and fixed 24 variables
Cbc0035I Maximum depth 26, 245 variables fixed on reduced cost
Total time (CPU seconds):       1.13   (Wallclock seconds):       1.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-52) rows, 115 (-37) columns and 1815 (-1488) elements
Clp1000I sum of infeasibilities 1.80055e-07 - average 1.76525e-09, 23 fixed columns
Coin0506I Presolve 81 (-21) rows, 92 (-23) columns and 1234 (-581) elements
Clp0006I 0  Obj 39.302842 Dual inf 4.6819668 (91)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.2740421 - largest nonzero change 1.8187665e-05 ( 0.0014083952%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 56.848096
Clp0000I Optimal - objective value 56.848096
Coin0511I After Postsolve, objective 56.848096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.848096
Clp0000I Optimal - objective value 56.848096
Clp0000I Optimal - objective value 56.848096
Clp0000I Optimal - objective value 56.848096
Coin0511I After Postsolve, objective 56.848096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.84809551 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 115 columns (115 integer (115 of which binary)) and 1819 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.354%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.9581
Cbc0038I Pass   1: suminf.    4.23239 (33) obj. -48.3651 iterations 20
Cbc0038I Pass   2: suminf.    4.23239 (33) obj. -48.3651 iterations 1
Cbc0038I Pass   3: suminf.    0.83854 (10) obj. -12.0307 iterations 23
Cbc0038I Solution found of -2.86923
Cbc0038I Rounding solution of -4.81995 is better than previous of -2.86923

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -4.81995 to -9.32758 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.5468
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.23239 (33) obj. -48.3651 iterations 0
Cbc0038I Pass   5: suminf.    4.23239 (33) obj. -48.3651 iterations 1
Cbc0038I Pass   6: suminf.    0.58946 (5) obj. -13.5468 iterations 30
Cbc0038I Pass   7: suminf.    0.43857 (5) obj. -15.0557 iterations 1
Cbc0038I Pass   8: suminf.    0.47988 (3) obj. -13.5468 iterations 5
Cbc0038I Pass   9: suminf.    0.47988 (3) obj. -13.5468 iterations 0
Cbc0038I Pass  10: suminf.    0.54384 (2) obj. -13.5468 iterations 9
Cbc0038I Pass  11: suminf.    0.72681 (3) obj. -16.7611 iterations 2
Cbc0038I Pass  12: suminf.    0.54384 (2) obj. -13.5468 iterations 3
Cbc0038I Pass  13: suminf.    1.30945 (15) obj. -13.5468 iterations 23
Cbc0038I Pass  14: suminf.    1.16302 (11) obj. -13.5468 iterations 8
Cbc0038I Pass  15: suminf.    0.45919 (5) obj. -13.5468 iterations 15
Cbc0038I Pass  16: suminf.    0.45919 (5) obj. -13.5468 iterations 1
Cbc0038I Pass  17: suminf.    1.01905 (5) obj. -13.5468 iterations 1
Cbc0038I Pass  18: suminf.    1.85479 (6) obj. -13.5468 iterations 4
Cbc0038I Pass  19: suminf.    1.49298 (6) obj. -13.5468 iterations 1
Cbc0038I Pass  20: suminf.    0.67498 (5) obj. -13.5468 iterations 9
Cbc0038I Pass  21: suminf.    0.63206 (5) obj. -13.5468 iterations 4
Cbc0038I Pass  22: suminf.    1.84310 (6) obj. -13.5468 iterations 5
Cbc0038I Pass  23: suminf.    0.63206 (5) obj. -13.5468 iterations 3
Cbc0038I Pass  24: suminf.    1.27692 (15) obj. -13.5468 iterations 34
Cbc0038I Pass  25: suminf.    1.10560 (13) obj. -13.5468 iterations 8
Cbc0038I Pass  26: suminf.    1.04642 (6) obj. -13.5468 iterations 24
Cbc0038I Pass  27: suminf.    0.88554 (7) obj. -13.5468 iterations 7
Cbc0038I Pass  28: suminf.    0.57781 (6) obj. -13.5468 iterations 13
Cbc0038I Pass  29: suminf.    0.55898 (8) obj. -13.5468 iterations 4
Cbc0038I Pass  30: suminf.    1.52041 (6) obj. -13.5468 iterations 15
Cbc0038I Pass  31: suminf.    0.54163 (3) obj. -13.5468 iterations 7
Cbc0038I Pass  32: suminf.    0.35367 (3) obj. -15.4264 iterations 1
Cbc0038I Pass  33: suminf.    0.65338 (3) obj. -13.5468 iterations 4
Cbc0038I Rounding solution of -9.90813 is better than previous of -9.32758

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 45 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -9.90813 to -11.3756 (0.06 seconds)
Cbc0038I Round again with cutoff of -21.1412
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.23239 (33) obj. -48.3651 iterations 0
Cbc0038I Pass  34: suminf.    4.23239 (33) obj. -48.3651 iterations 1
Cbc0038I Pass  35: suminf.    1.69417 (15) obj. -21.1412 iterations 21
Cbc0038I Pass  36: suminf.    0.99521 (6) obj. -21.1412 iterations 24
Cbc0038I Pass  37: suminf.    0.95752 (8) obj. -21.1412 iterations 6
Cbc0038I Pass  38: suminf.    2.40212 (14) obj. -21.1412 iterations 9
Cbc0038I Pass  39: suminf.    1.12554 (7) obj. -21.1412 iterations 10
Cbc0038I Pass  40: suminf.    1.12554 (7) obj. -21.1412 iterations 0
Cbc0038I Pass  41: suminf.    1.22902 (14) obj. -21.1412 iterations 8
Cbc0038I Pass  42: suminf.    1.09987 (7) obj. -21.1412 iterations 8
Cbc0038I Pass  43: suminf.    1.27008 (14) obj. -21.1412 iterations 11
Cbc0038I Pass  44: suminf.    1.41563 (15) obj. -21.1412 iterations 24
Cbc0038I Pass  45: suminf.    1.36321 (11) obj. -21.1412 iterations 4
Cbc0038I Pass  46: suminf.    1.54910 (20) obj. -21.1412 iterations 16
Cbc0038I Pass  47: suminf.    1.54910 (20) obj. -21.1412 iterations 1
Cbc0038I Pass  48: suminf.    2.50477 (17) obj. -21.1412 iterations 34
Cbc0038I Pass  49: suminf.    2.27465 (15) obj. -21.1412 iterations 6
Cbc0038I Pass  50: suminf.    1.85484 (9) obj. -21.1412 iterations 17
Cbc0038I Pass  51: suminf.    1.59733 (10) obj. -21.1412 iterations 6
Cbc0038I Pass  52: suminf.    2.92151 (11) obj. -21.1412 iterations 8
Cbc0038I Pass  53: suminf.    2.42074 (12) obj. -21.1412 iterations 7
Cbc0038I Pass  54: suminf.    2.84054 (11) obj. -21.1412 iterations 6
Cbc0038I Pass  55: suminf.    2.84054 (11) obj. -21.1412 iterations 6
Cbc0038I Pass  56: suminf.    2.41157 (12) obj. -21.1412 iterations 15
Cbc0038I Pass  57: suminf.    1.91946 (13) obj. -21.1412 iterations 6
Cbc0038I Pass  58: suminf.    1.96093 (9) obj. -21.1412 iterations 14
Cbc0038I Pass  59: suminf.    1.85914 (10) obj. -21.1412 iterations 7
Cbc0038I Pass  60: suminf.    1.39443 (9) obj. -21.1412 iterations 9
Cbc0038I Pass  61: suminf.    1.39443 (9) obj. -21.1412 iterations 2
Cbc0038I Pass  62: suminf.    1.51384 (9) obj. -21.1412 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 47 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -11.3756 - took 0.07 seconds
Cbc0012I Integer solution of -11.37561 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 102 rows 115 columns, reduced to 19 rows 21 columns
Cbc0031I 52 added rows had average density of 55.423077
Cbc0013I At root node, 52 cuts changed objective from -51.518653 to -21.528516 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13806 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1791 row cuts average 109.4 elements, 0 column cuts (0 active)  in 0.175 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 308 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1790 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 460 row cuts average 44.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 76 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.575 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.37561 best solution, best possible -21.528516 (2.61 seconds)
Cbc0012I Integer solution of -11.878021 found by rounding after 6618 iterations and 12 nodes (3.11 seconds)
Cbc0012I Integer solution of -12.29363 found by rounding after 7376 iterations and 41 nodes (3.24 seconds)
Cbc0010I After 69 nodes, 9 on tree, -12.29363 best solution, best possible -21.528516 (3.32 seconds)
Cbc0012I Integer solution of -12.528112 found by rounding after 8743 iterations and 89 nodes (3.36 seconds)
Cbc0012I Integer solution of -12.724522 found by rounding after 8745 iterations and 91 nodes (3.37 seconds)
Cbc0001I Search completed - best objective -12.724522, took 8834 iterations and 92 nodes (3.37 seconds)
Cbc0032I Strong branching done 942 times (16015 iterations), fathomed 10 nodes and fixed 12 variables
Cbc0035I Maximum depth 21, 307 variables fixed on reduced cost
Total time (CPU seconds):       2.60   (Wallclock seconds):       3.39

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 131 (-24) rows, 73 (-5) columns and 400 (-53) elements
Clp1000I sum of infeasibilities 2.03803e-05 - average 1.55574e-07, 11 fixed columns
Coin0506I Presolve 111 (-20) rows, 62 (-11) columns and 338 (-62) elements
Clp0029I End of values pass after 62 iterations
Clp0014I Perturbing problem by 0.001% of 2.5747417 - largest nonzero change 0 ( 0%) - largest zero change 2.3568723e-05
Clp0000I Optimal - objective value 44.922297
Clp0000I Optimal - objective value 44.922297
Coin0511I After Postsolve, objective 44.922297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 44.922297
Clp0000I Optimal - objective value 44.922297
Clp0000I Optimal - objective value 44.922297
Coin0511I After Postsolve, objective 44.922297, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 44.92229655 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 131 rows, 73 columns (72 integer (72 of which binary)) and 400 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.202%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 10.5998
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 9.88658 iterations 48
Cbc0038I Solution found of 9.88658
Cbc0038I Relaxing continuous gives 9.88658
Cbc0038I Rounding solution of -5.55061 is better than previous of 9.88658

Cbc0038I Before mini branch and bound, 35 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 64 rows 38 columns
Cbc0038I Mini branch and bound improved solution from -5.55061 to -9.35468 (0.06 seconds)
Cbc0038I Round again with cutoff of -12.9115
Cbc0038I Pass   2: suminf.    2.70940 (12) obj. -12.9115 iterations 16
Cbc0038I Pass   3: suminf.    2.40284 (21) obj. -12.9115 iterations 11
Cbc0038I Pass   4: suminf.    2.09687 (36) obj. -12.9115 iterations 19
Cbc0038I Pass   5: suminf.    2.86772 (11) obj. -12.9115 iterations 43
Cbc0038I Pass   6: suminf.    1.01205 (6) obj. -12.9115 iterations 7
Cbc0038I Pass   7: suminf.    1.57219 (5) obj. -12.9115 iterations 15
Cbc0038I Pass   8: suminf.    1.44706 (5) obj. -12.9115 iterations 4
Cbc0038I Pass   9: suminf.    1.36656 (4) obj. -12.9115 iterations 1
Cbc0038I Pass  10: suminf.    1.20387 (4) obj. -12.9115 iterations 4
Cbc0038I Pass  11: suminf.    1.05838 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  12: suminf.    0.95083 (3) obj. -12.9115 iterations 1
Cbc0038I Pass  13: suminf.    1.06375 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  14: suminf.    0.90467 (3) obj. -12.9115 iterations 1
Cbc0038I Pass  15: suminf.    1.05838 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  16: suminf.    3.12599 (10) obj. -12.9115 iterations 13
Cbc0038I Pass  17: suminf.    1.93522 (7) obj. -12.9115 iterations 8
Cbc0038I Pass  18: suminf.    2.13597 (7) obj. -12.9115 iterations 12
Cbc0038I Pass  19: suminf.    2.13597 (7) obj. -12.9115 iterations 0
Cbc0038I Pass  20: suminf.    1.28962 (5) obj. -12.9115 iterations 7
Cbc0038I Pass  21: suminf.    1.73723 (6) obj. -12.9115 iterations 7
Cbc0038I Pass  22: suminf.    1.59207 (5) obj. -12.9115 iterations 5
Cbc0038I Pass  23: suminf.    1.42438 (4) obj. -12.9115 iterations 16
Cbc0038I Pass  24: suminf.    1.11606 (4) obj. -12.9115 iterations 5
Cbc0038I Pass  25: suminf.    1.46739 (4) obj. -12.9115 iterations 4
Cbc0038I Pass  26: suminf.    1.33592 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  27: suminf.    1.32693 (4) obj. -12.9115 iterations 1
Cbc0038I Pass  28: suminf.    1.32213 (4) obj. -12.9115 iterations 4
Cbc0038I Pass  29: suminf.    1.16230 (4) obj. -12.9115 iterations 2
Cbc0038I Pass  30: suminf.    1.10505 (4) obj. -12.9115 iterations 1
Cbc0038I Pass  31: suminf.    1.46739 (4) obj. -12.9115 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 80 rows 46 columns
Cbc0038I Mini branch and bound improved solution from -9.35468 to -10.0873 (0.11 seconds)
Cbc0038I Round again with cutoff of -19.3137
Cbc0038I Pass  31: suminf.    3.92627 (19) obj. -19.3137 iterations 7
Cbc0038I Pass  32: suminf.    3.92491 (21) obj. -19.3137 iterations 4
Cbc0038I Pass  33: suminf.    1.46666 (7) obj. -19.3137 iterations 23
Cbc0038I Pass  34: suminf.    1.46666 (7) obj. -19.3137 iterations 0
Cbc0038I Pass  35: suminf.    3.64356 (10) obj. -19.3137 iterations 9
Cbc0038I Pass  36: suminf.    1.42484 (7) obj. -19.3137 iterations 11
Cbc0038I Pass  37: suminf.    1.19392 (5) obj. -19.3137 iterations 4
Cbc0038I Pass  38: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  39: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  40: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  41: suminf.    1.21159 (4) obj. -19.3137 iterations 6
Cbc0038I Pass  42: suminf.    1.19392 (5) obj. -19.3137 iterations 2
Cbc0038I Pass  43: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  44: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  45: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  46: suminf.    1.21159 (4) obj. -19.3137 iterations 6
Cbc0038I Pass  47: suminf.    1.19392 (5) obj. -19.3137 iterations 2
Cbc0038I Pass  48: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  49: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  50: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  51: suminf.    1.21159 (4) obj. -19.3137 iterations 6
Cbc0038I Pass  52: suminf.    1.19392 (5) obj. -19.3137 iterations 2
Cbc0038I Pass  53: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  54: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  55: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  56: suminf.    1.21159 (4) obj. -19.3137 iterations 6
Cbc0038I Pass  57: suminf.    1.19392 (5) obj. -19.3137 iterations 2
Cbc0038I Pass  58: suminf.    1.75650 (6) obj. -19.3137 iterations 5
Cbc0038I Pass  59: suminf.    1.72476 (6) obj. -19.3137 iterations 1
Cbc0038I Pass  60: suminf.    2.10715 (6) obj. -19.3137 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 70 rows 40 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -10.0873 - took 0.13 seconds
Cbc0012I Integer solution of -10.08727 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 65 rows 39 columns
Cbc0012I Integer solution of -12.29363 found by RINS after 0 iterations and 0 nodes (0.20 seconds)
Cbc0031I 21 added rows had average density of 53.285714
Cbc0013I At root node, 21 cuts changed objective from -44.922297 to -34.411775 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7805 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2079 row cuts average 72.6 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 93 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 121 row cuts average 65.6 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -12.29363 best solution, best possible -34.411775 (0.74 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 55 rows 33 columns
Cbc0012I Integer solution of -12.528112 found by rounding after 7241 iterations and 59 nodes (1.10 seconds)
Cbc0016I Integer solution of -12.724522 found by strong branching after 7274 iterations and 61 nodes (1.10 seconds)
Cbc0001I Search completed - best objective -12.724522, took 8059 iterations and 84 nodes (1.14 seconds)
Cbc0032I Strong branching done 936 times (15381 iterations), fathomed 6 nodes and fixed 24 variables
Cbc0035I Maximum depth 26, 245 variables fixed on reduced cost
Total time (CPU seconds):       1.11   (Wallclock seconds):       1.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 102 (-53) rows, 115 (-38) columns and 1815 (-1489) elements
Clp1000I sum of infeasibilities 1.80055e-07 - average 1.76525e-09, 23 fixed columns
Coin0506I Presolve 81 (-21) rows, 92 (-23) columns and 1234 (-581) elements
Clp0006I 0  Obj 39.302842 Dual inf 4.6819668 (91)
Clp0029I End of values pass after 92 iterations
Clp0014I Perturbing problem by 0.001% of 2.2740421 - largest nonzero change 1.8187665e-05 ( 0.0014083952%) - largest zero change 2.8696192e-05
Clp0000I Optimal - objective value 56.848096
Clp0000I Optimal - objective value 56.848096
Coin0511I After Postsolve, objective 56.848096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.848096
Clp0000I Optimal - objective value 56.848096
Clp0000I Optimal - objective value 56.848096
Clp0000I Optimal - objective value 56.848096
Coin0511I After Postsolve, objective 56.848096, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.84809551 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 102 rows, 115 columns (115 integer (115 of which binary)) and 1819 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.354%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.9581
Cbc0038I Pass   1: suminf.    4.23239 (33) obj. -48.3651 iterations 20
Cbc0038I Pass   2: suminf.    4.23239 (33) obj. -48.3651 iterations 1
Cbc0038I Pass   3: suminf.    0.83854 (10) obj. -12.0307 iterations 23
Cbc0038I Solution found of -2.86923
Cbc0038I Rounding solution of -4.81995 is better than previous of -2.86923

Cbc0038I Before mini branch and bound, 67 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 20 rows 20 columns
Cbc0038I Mini branch and bound improved solution from -4.81995 to -9.32758 (0.03 seconds)
Cbc0038I Round again with cutoff of -13.5468
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    4.23239 (33) obj. -48.3651 iterations 0
Cbc0038I Pass   5: suminf.    4.23239 (33) obj. -48.3651 iterations 1
Cbc0038I Pass   6: suminf.    0.58946 (5) obj. -13.5468 iterations 30
Cbc0038I Pass   7: suminf.    0.43857 (5) obj. -15.0557 iterations 1
Cbc0038I Pass   8: suminf.    0.47988 (3) obj. -13.5468 iterations 5
Cbc0038I Pass   9: suminf.    0.47988 (3) obj. -13.5468 iterations 0
Cbc0038I Pass  10: suminf.    0.54384 (2) obj. -13.5468 iterations 9
Cbc0038I Pass  11: suminf.    0.72681 (3) obj. -16.7611 iterations 2
Cbc0038I Pass  12: suminf.    0.54384 (2) obj. -13.5468 iterations 3
Cbc0038I Pass  13: suminf.    1.30945 (15) obj. -13.5468 iterations 23
Cbc0038I Pass  14: suminf.    1.16302 (11) obj. -13.5468 iterations 8
Cbc0038I Pass  15: suminf.    0.45919 (5) obj. -13.5468 iterations 15
Cbc0038I Pass  16: suminf.    0.45919 (5) obj. -13.5468 iterations 1
Cbc0038I Pass  17: suminf.    1.01905 (5) obj. -13.5468 iterations 1
Cbc0038I Pass  18: suminf.    1.85479 (6) obj. -13.5468 iterations 4
Cbc0038I Pass  19: suminf.    1.49298 (6) obj. -13.5468 iterations 1
Cbc0038I Pass  20: suminf.    0.67498 (5) obj. -13.5468 iterations 9
Cbc0038I Pass  21: suminf.    0.63206 (5) obj. -13.5468 iterations 4
Cbc0038I Pass  22: suminf.    1.84310 (6) obj. -13.5468 iterations 5
Cbc0038I Pass  23: suminf.    0.63206 (5) obj. -13.5468 iterations 3
Cbc0038I Pass  24: suminf.    1.27692 (15) obj. -13.5468 iterations 34
Cbc0038I Pass  25: suminf.    1.10560 (13) obj. -13.5468 iterations 8
Cbc0038I Pass  26: suminf.    1.04642 (6) obj. -13.5468 iterations 24
Cbc0038I Pass  27: suminf.    0.88554 (7) obj. -13.5468 iterations 7
Cbc0038I Pass  28: suminf.    0.57781 (6) obj. -13.5468 iterations 13
Cbc0038I Pass  29: suminf.    0.55898 (8) obj. -13.5468 iterations 4
Cbc0038I Pass  30: suminf.    1.52041 (6) obj. -13.5468 iterations 15
Cbc0038I Pass  31: suminf.    0.54163 (3) obj. -13.5468 iterations 7
Cbc0038I Pass  32: suminf.    0.35367 (3) obj. -15.4264 iterations 1
Cbc0038I Pass  33: suminf.    0.65338 (3) obj. -13.5468 iterations 4
Cbc0038I Rounding solution of -9.90813 is better than previous of -9.32758

Cbc0038I Before mini branch and bound, 54 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 45 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -9.90813 to -11.3756 (0.06 seconds)
Cbc0038I Round again with cutoff of -21.1412
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    4.23239 (33) obj. -48.3651 iterations 0
Cbc0038I Pass  34: suminf.    4.23239 (33) obj. -48.3651 iterations 1
Cbc0038I Pass  35: suminf.    1.69417 (15) obj. -21.1412 iterations 21
Cbc0038I Pass  36: suminf.    0.99521 (6) obj. -21.1412 iterations 24
Cbc0038I Pass  37: suminf.    0.95752 (8) obj. -21.1412 iterations 6
Cbc0038I Pass  38: suminf.    2.40212 (14) obj. -21.1412 iterations 9
Cbc0038I Pass  39: suminf.    1.12554 (7) obj. -21.1412 iterations 10
Cbc0038I Pass  40: suminf.    1.12554 (7) obj. -21.1412 iterations 0
Cbc0038I Pass  41: suminf.    1.22902 (14) obj. -21.1412 iterations 8
Cbc0038I Pass  42: suminf.    1.09987 (7) obj. -21.1412 iterations 8
Cbc0038I Pass  43: suminf.    1.27008 (14) obj. -21.1412 iterations 11
Cbc0038I Pass  44: suminf.    1.41563 (15) obj. -21.1412 iterations 24
Cbc0038I Pass  45: suminf.    1.36321 (11) obj. -21.1412 iterations 4
Cbc0038I Pass  46: suminf.    1.54910 (20) obj. -21.1412 iterations 16
Cbc0038I Pass  47: suminf.    1.54910 (20) obj. -21.1412 iterations 1
Cbc0038I Pass  48: suminf.    2.50477 (17) obj. -21.1412 iterations 34
Cbc0038I Pass  49: suminf.    2.27465 (15) obj. -21.1412 iterations 6
Cbc0038I Pass  50: suminf.    1.85484 (9) obj. -21.1412 iterations 17
Cbc0038I Pass  51: suminf.    1.59733 (10) obj. -21.1412 iterations 6
Cbc0038I Pass  52: suminf.    2.92151 (11) obj. -21.1412 iterations 8
Cbc0038I Pass  53: suminf.    2.42074 (12) obj. -21.1412 iterations 7
Cbc0038I Pass  54: suminf.    2.84054 (11) obj. -21.1412 iterations 6
Cbc0038I Pass  55: suminf.    2.84054 (11) obj. -21.1412 iterations 6
Cbc0038I Pass  56: suminf.    2.41157 (12) obj. -21.1412 iterations 15
Cbc0038I Pass  57: suminf.    1.91946 (13) obj. -21.1412 iterations 6
Cbc0038I Pass  58: suminf.    1.96093 (9) obj. -21.1412 iterations 14
Cbc0038I Pass  59: suminf.    1.85914 (10) obj. -21.1412 iterations 7
Cbc0038I Pass  60: suminf.    1.39443 (9) obj. -21.1412 iterations 9
Cbc0038I Pass  61: suminf.    1.39443 (9) obj. -21.1412 iterations 2
Cbc0038I Pass  62: suminf.    1.51384 (9) obj. -21.1412 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 102 rows 115 columns, reduced to 47 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -11.3756 - took 0.08 seconds
Cbc0012I Integer solution of -11.37561 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 102 rows 115 columns, reduced to 19 rows 21 columns
Cbc0031I 52 added rows had average density of 55.423077
Cbc0013I At root node, 52 cuts changed objective from -51.518653 to -21.528516 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13806 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1791 row cuts average 109.4 elements, 0 column cuts (0 active)  in 0.169 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 308 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1790 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 460 row cuts average 44.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 76 row cuts average 6.5 elements, 0 column cuts (0 active)  in 0.562 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.37561 best solution, best possible -21.528516 (2.57 seconds)
Cbc0012I Integer solution of -11.878021 found by rounding after 6618 iterations and 12 nodes (3.04 seconds)
Cbc0012I Integer solution of -12.29363 found by rounding after 7376 iterations and 41 nodes (3.17 seconds)
Cbc0010I After 75 nodes, 9 on tree, -12.29363 best solution, best possible -21.528516 (3.27 seconds)
Cbc0012I Integer solution of -12.528112 found by rounding after 8743 iterations and 89 nodes (3.30 seconds)
Cbc0012I Integer solution of -12.724522 found by rounding after 8745 iterations and 91 nodes (3.30 seconds)
Cbc0001I Search completed - best objective -12.724522, took 8834 iterations and 92 nodes (3.31 seconds)
Cbc0032I Strong branching done 942 times (16015 iterations), fathomed 10 nodes and fixed 12 variables
Cbc0035I Maximum depth 21, 307 variables fixed on reduced cost
Total time (CPU seconds):       2.54   (Wallclock seconds):       3.33

