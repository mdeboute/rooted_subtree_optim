Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 100 (-3) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 3.94345e-05 - average 2.15489e-07, 35 fixed columns
Coin0506I Presolve 107 (-76) rows, 61 (-39) columns and 328 (-230) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0976785 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Coin0511I After Postsolve, objective 83.525376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Coin0511I After Postsolve, objective 83.525376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.52537598 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 183 rows, 100 columns (99 integer (99 of which binary)) and 566 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.965%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.76075
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.5 iterations 57
Cbc0038I Solution found of -8.5
Cbc0038I Relaxing continuous gives -8.5
Cbc0038I Rounding solution of -13.5122 is better than previous of -8.5

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 57 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -13.5122 to -56.4944 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.1976
Cbc0038I Pass   2: suminf.    3.52011 (17) obj. -59.1976 iterations 36
Cbc0038I Pass   3: suminf.    2.30091 (8) obj. -59.1976 iterations 31
Cbc0038I Pass   4: suminf.    1.59034 (6) obj. -59.1976 iterations 9
Cbc0038I Pass   5: suminf.    1.49794 (6) obj. -59.1976 iterations 3
Cbc0038I Pass   6: suminf.    1.79355 (6) obj. -59.1976 iterations 12
Cbc0038I Pass   7: suminf.    1.76657 (5) obj. -59.1976 iterations 1
Cbc0038I Pass   8: suminf.    2.35550 (6) obj. -59.1976 iterations 13
Cbc0038I Pass   9: suminf.    2.35550 (6) obj. -59.1976 iterations 1
Cbc0038I Pass  10: suminf.    2.33166 (6) obj. -59.1976 iterations 11
Cbc0038I Pass  11: suminf.    2.02590 (6) obj. -59.1976 iterations 4
Cbc0038I Pass  12: suminf.    2.11541 (7) obj. -59.1976 iterations 15
Cbc0038I Pass  13: suminf.    2.09645 (8) obj. -59.1976 iterations 4
Cbc0038I Pass  14: suminf.    2.04213 (7) obj. -59.1976 iterations 3
Cbc0038I Pass  15: suminf.    2.54599 (8) obj. -59.1976 iterations 13
Cbc0038I Pass  16: suminf.    2.54598 (8) obj. -59.1976 iterations 3
Cbc0038I Pass  17: suminf.    2.18508 (6) obj. -59.1976 iterations 14
Cbc0038I Pass  18: suminf.    2.12432 (5) obj. -59.1976 iterations 4
Cbc0038I Pass  19: suminf.    1.54690 (6) obj. -59.1976 iterations 13
Cbc0038I Pass  20: suminf.    1.50950 (5) obj. -59.1976 iterations 7
Cbc0038I Pass  21: suminf.    1.79355 (6) obj. -59.1976 iterations 10
Cbc0038I Pass  22: suminf.    1.76657 (5) obj. -59.1976 iterations 1
Cbc0038I Pass  23: suminf.    2.35550 (6) obj. -59.1976 iterations 14
Cbc0038I Pass  24: suminf.    2.35550 (6) obj. -59.1976 iterations 1
Cbc0038I Pass  25: suminf.    2.33166 (6) obj. -59.1976 iterations 10
Cbc0038I Pass  26: suminf.    2.02590 (6) obj. -59.1976 iterations 3
Cbc0038I Pass  27: suminf.    2.11541 (7) obj. -59.1976 iterations 16
Cbc0038I Pass  28: suminf.    2.09645 (8) obj. -59.1976 iterations 4
Cbc0038I Pass  29: suminf.    2.04213 (7) obj. -59.1976 iterations 3
Cbc0038I Pass  30: suminf.    2.54599 (8) obj. -59.1976 iterations 12
Cbc0038I Pass  31: suminf.    2.54598 (8) obj. -59.1976 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -56.4944 - took 0.05 seconds
Cbc0012I Integer solution of -56.49444 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 57 rows 34 columns
Cbc0031I 21 added rows had average density of 54.571429
Cbc0013I At root node, 21 cuts changed objective from -83.525376 to -75.107865 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8724 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.101 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2000 row cuts average 99.9 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.058 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -56.49444 best solution, best possible -75.107865 (0.85 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 38 rows 28 columns
Cbc0001I Search completed - best objective -56.49444, took 7723 iterations and 60 nodes (1.13 seconds)
Cbc0032I Strong branching done 750 times (15142 iterations), fathomed 4 nodes and fixed 36 variables
Cbc0035I Maximum depth 21, 220 variables fixed on reduced cost
Total time (CPU seconds):       1.09   (Wallclock seconds):       1.15

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-77) rows, 142 (-60) columns and 2715 (-2938) elements
Clp1000I sum of infeasibilities 2.04538e-06 - average 1.61054e-08, 77 fixed columns
Coin0506I Presolve 53 (-74) rows, 64 (-78) columns and 228 (-2487) elements
Clp0006I 0  Obj 29.079119 Dual inf 9.5007376 (63)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 1.1988925 - largest nonzero change 2.1657344e-05 ( 0.001262127%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 34.451429
Clp0000I Optimal - objective value 34.451429
Coin0511I After Postsolve, objective 34.451429, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 34.451429 Dual inf 89.190732 (43)
Clp0014I Perturbing problem by 0.001% of 1.4076449 - largest nonzero change 2.8214996e-05 ( 0.0024275985%) - largest zero change 2.9707416e-05
Clp0000I Optimal - objective value 94.948911
Clp0000I Optimal - objective value 94.948911
Clp0000I Optimal - objective value 94.948911
Coin0511I After Postsolve, objective 94.948911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.94891104 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 142 columns (142 integer (142 of which binary)) and 2727 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.298%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 3.36382
Cbc0038I Pass   1: suminf.    2.77601 (34) obj. -80.4001 iterations 27
Cbc0038I Pass   2: suminf.    0.48075 (7) obj. -41.919 iterations 27
Cbc0038I Solution found of -34.4719
Cbc0038I Rounding solution of -39.4841 is better than previous of -34.4719

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -39.4841 to -44.0698 (0.04 seconds)
Cbc0038I Round again with cutoff of -48.2765
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.77601 (34) obj. -80.4001 iterations 0
Cbc0038I Pass   4: suminf.    1.37521 (19) obj. -58.5807 iterations 15
Cbc0038I Pass   5: suminf.    0.82105 (2) obj. -48.2765 iterations 36
Cbc0038I Pass   6: suminf.    0.69297 (2) obj. -48.2765 iterations 5
Cbc0038I Pass   7: suminf.    0.44584 (8) obj. -48.2765 iterations 15
Cbc0038I Pass   8: suminf.    0.73321 (5) obj. -48.2765 iterations 17
Cbc0038I Pass   9: suminf.    0.57382 (3) obj. -48.2765 iterations 12
Cbc0038I Pass  10: suminf.    0.50421 (3) obj. -48.2765 iterations 1
Cbc0038I Pass  11: suminf.    0.20421 (2) obj. -49.1267 iterations 2
Cbc0038I Pass  12: suminf.    0.57382 (3) obj. -48.2765 iterations 14
Cbc0038I Pass  13: suminf.    1.22721 (17) obj. -56.6215 iterations 36
Cbc0038I Pass  14: suminf.    1.03701 (14) obj. -55.058 iterations 10
Cbc0038I Pass  15: suminf.    1.05900 (6) obj. -48.2765 iterations 24
Cbc0038I Pass  16: suminf.    1.05900 (6) obj. -48.2765 iterations 0
Cbc0038I Pass  17: suminf.    0.69659 (4) obj. -48.2765 iterations 5
Cbc0038I Pass  18: suminf.    0.60622 (4) obj. -48.2765 iterations 3
Cbc0038I Pass  19: suminf.    0.60464 (4) obj. -48.2765 iterations 6
Cbc0038I Pass  20: suminf.    0.60464 (4) obj. -48.2765 iterations 2
Cbc0038I Pass  21: suminf.    0.60622 (4) obj. -48.2765 iterations 5
Cbc0038I Pass  22: suminf.    1.12543 (9) obj. -48.2765 iterations 23
Cbc0038I Pass  23: suminf.    0.91924 (8) obj. -48.2765 iterations 16
Cbc0038I Pass  24: suminf.    0.69589 (6) obj. -48.2765 iterations 24
Cbc0038I Pass  25: suminf.    0.55968 (6) obj. -48.2765 iterations 5
Cbc0038I Pass  26: suminf.    0.58357 (6) obj. -48.2765 iterations 8
Cbc0038I Pass  27: suminf.    1.97202 (13) obj. -48.2765 iterations 37
Cbc0038I Pass  28: suminf.    1.29359 (12) obj. -48.2765 iterations 12
Cbc0038I Pass  29: suminf.    1.24016 (6) obj. -48.2765 iterations 23
Cbc0038I Pass  30: suminf.    1.23310 (6) obj. -48.2765 iterations 5
Cbc0038I Pass  31: suminf.    1.24016 (6) obj. -48.2765 iterations 16
Cbc0038I Pass  32: suminf.    1.21791 (18) obj. -48.2765 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 55 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -44.0698 to -50.773 (0.11 seconds)
Cbc0038I Round again with cutoff of -57.8458
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.77601 (34) obj. -80.4001 iterations 0
Cbc0038I Pass  33: suminf.    1.78157 (24) obj. -70.5279 iterations 10
Cbc0038I Pass  34: suminf.    1.10370 (7) obj. -57.8458 iterations 36
Cbc0038I Pass  35: suminf.    1.10370 (7) obj. -57.8458 iterations 1
Cbc0038I Pass  36: suminf.    1.20712 (7) obj. -57.8458 iterations 7
Cbc0038I Pass  37: suminf.    1.20712 (7) obj. -57.8458 iterations 1
Cbc0038I Pass  38: suminf.    1.10370 (7) obj. -57.8458 iterations 2
Cbc0038I Pass  39: suminf.    1.94747 (16) obj. -57.8458 iterations 24
Cbc0038I Pass  40: suminf.    1.07094 (13) obj. -57.8458 iterations 17
Cbc0038I Pass  41: suminf.    1.66468 (9) obj. -57.8458 iterations 20
Cbc0038I Pass  42: suminf.    1.41180 (9) obj. -57.8458 iterations 6
Cbc0038I Pass  43: suminf.    1.04233 (8) obj. -57.8458 iterations 20
Cbc0038I Pass  44: suminf.    1.04233 (8) obj. -57.8458 iterations 5
Cbc0038I Pass  45: suminf.    1.26252 (8) obj. -57.8458 iterations 4
Cbc0038I Pass  46: suminf.    1.26252 (8) obj. -57.8458 iterations 0
Cbc0038I Pass  47: suminf.    1.37037 (8) obj. -57.8458 iterations 9
Cbc0038I Pass  48: suminf.    1.37037 (8) obj. -57.8458 iterations 1
Cbc0038I Pass  49: suminf.    1.26252 (8) obj. -57.8458 iterations 2
Cbc0038I Pass  50: suminf.    2.15631 (14) obj. -57.8458 iterations 16
Cbc0038I Pass  51: suminf.    1.02967 (10) obj. -57.8458 iterations 19
Cbc0038I Pass  52: suminf.    0.92637 (10) obj. -57.8458 iterations 1
Cbc0038I Pass  53: suminf.    1.29011 (9) obj. -57.8458 iterations 19
Cbc0038I Pass  54: suminf.    0.82757 (8) obj. -57.8458 iterations 7
Cbc0038I Pass  55: suminf.    2.62645 (22) obj. -57.8458 iterations 27
Cbc0038I Pass  56: suminf.    2.26229 (19) obj. -57.8458 iterations 3
Cbc0038I Pass  57: suminf.    1.72183 (18) obj. -57.8458 iterations 4
Cbc0038I Pass  58: suminf.    2.20776 (11) obj. -57.8458 iterations 22
Cbc0038I Pass  59: suminf.    1.64161 (10) obj. -57.8458 iterations 6
Cbc0038I Pass  60: suminf.    0.87726 (9) obj. -57.8458 iterations 10
Cbc0038I Pass  61: suminf.    1.03325 (6) obj. -57.8458 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 25 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -50.773 to -51.9304 (0.15 seconds)
Cbc0038I Round again with cutoff of -66.333
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.77601 (34) obj. -80.4001 iterations 0
Cbc0038I Pass  62: suminf.    1.61775 (22) obj. -68.6917 iterations 12
Cbc0038I Pass  63: suminf.    2.08674 (14) obj. -66.333 iterations 40
Cbc0038I Pass  64: suminf.    2.08674 (14) obj. -66.333 iterations 4
Cbc0038I Pass  65: suminf.    2.11136 (14) obj. -66.333 iterations 8
Cbc0038I Pass  66: suminf.    2.11136 (14) obj. -66.333 iterations 3
Cbc0038I Pass  67: suminf.    2.08674 (14) obj. -66.333 iterations 5
Cbc0038I Pass  68: suminf.    1.69587 (17) obj. -66.333 iterations 23
Cbc0038I Pass  69: suminf.    1.69587 (17) obj. -66.333 iterations 4
Cbc0038I Pass  70: suminf.    1.79663 (17) obj. -66.333 iterations 18
Cbc0038I Pass  71: suminf.    1.79663 (17) obj. -66.333 iterations 0
Cbc0038I Pass  72: suminf.    1.76928 (17) obj. -66.333 iterations 5
Cbc0038I Pass  73: suminf.    1.76928 (17) obj. -66.333 iterations 1
Cbc0038I Pass  74: suminf.    1.77093 (16) obj. -66.333 iterations 9
Cbc0038I Pass  75: suminf.    1.77093 (16) obj. -66.333 iterations 1
Cbc0038I Pass  76: suminf.    1.77522 (16) obj. -66.333 iterations 7
Cbc0038I Pass  77: suminf.    1.77522 (16) obj. -66.333 iterations 3
Cbc0038I Pass  78: suminf.    1.80083 (16) obj. -66.333 iterations 5
Cbc0038I Pass  79: suminf.    1.80083 (16) obj. -66.333 iterations 3
Cbc0038I Pass  80: suminf.    1.77522 (16) obj. -66.333 iterations 5
Cbc0038I Pass  81: suminf.    2.37245 (17) obj. -66.333 iterations 11
Cbc0038I Pass  82: suminf.    2.00830 (19) obj. -66.333 iterations 10
Cbc0038I Pass  83: suminf.    2.37245 (17) obj. -66.333 iterations 22
Cbc0038I Pass  84: suminf.    2.00829 (19) obj. -66.333 iterations 8
Cbc0038I Pass  85: suminf.    2.37245 (17) obj. -66.333 iterations 20
Cbc0038I Pass  86: suminf.    1.96985 (20) obj. -66.333 iterations 32
Cbc0038I Pass  87: suminf.    1.89947 (19) obj. -66.333 iterations 5
Cbc0038I Pass  88: suminf.    1.82269 (17) obj. -66.333 iterations 26
Cbc0038I Pass  89: suminf.    1.57315 (18) obj. -66.333 iterations 5
Cbc0038I Pass  90: suminf.    1.82269 (17) obj. -66.333 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -51.9304 - took 0.15 seconds
Cbc0012I Integer solution of -51.93037 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 21 rows 24 columns
Cbc0031I 47 added rows had average density of 55.765957
Cbc0013I At root node, 47 cuts changed objective from -86.136479 to -63.535266 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14324 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1838 row cuts average 131.9 elements, 0 column cuts (0 active)  in 0.204 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 831 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1381 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 372 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.582 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -51.93037 best solution, best possible -63.535266 (2.98 seconds)
Cbc0012I Integer solution of -52.49594 found by rounding after 6478 iterations and 6 nodes (3.33 seconds)
Cbc0004I Integer solution of -54.62643 found after 6929 iterations and 15 nodes (3.58 seconds)
Cbc0012I Integer solution of -56.49444 found by DiveCoefficient after 7205 iterations and 22 nodes (3.64 seconds)
Cbc0010I After 24 nodes, 9 on tree, -56.49444 best solution, best possible -63.358875 (3.68 seconds)
Cbc0001I Search completed - best objective -56.49444, took 8591 iterations and 44 nodes (3.82 seconds)
Cbc0032I Strong branching done 638 times (11769 iterations), fathomed 7 nodes and fixed 5 variables
Cbc0035I Maximum depth 16, 208 variables fixed on reduced cost
Total time (CPU seconds):       2.96   (Wallclock seconds):       3.85

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 100 (-3) columns and 558 (-45) elements
Clp1000I sum of infeasibilities 3.94345e-05 - average 2.15489e-07, 35 fixed columns
Coin0506I Presolve 107 (-76) rows, 61 (-39) columns and 328 (-230) elements
Clp0029I End of values pass after 61 iterations
Clp0014I Perturbing problem by 0.001% of 2.0976785 - largest nonzero change 0 ( 0%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Coin0511I After Postsolve, objective 83.525376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Clp0000I Optimal - objective value 83.525376
Coin0511I After Postsolve, objective 83.525376, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 83.52537598 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 183 rows, 100 columns (99 integer (99 of which binary)) and 566 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.965%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 6.76075
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -8.5 iterations 57
Cbc0038I Solution found of -8.5
Cbc0038I Relaxing continuous gives -8.5
Cbc0038I Rounding solution of -13.5122 is better than previous of -8.5

Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 57 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -13.5122 to -56.4944 (0.03 seconds)
Cbc0038I Round again with cutoff of -59.1976
Cbc0038I Pass   2: suminf.    3.52011 (17) obj. -59.1976 iterations 36
Cbc0038I Pass   3: suminf.    2.30091 (8) obj. -59.1976 iterations 31
Cbc0038I Pass   4: suminf.    1.59034 (6) obj. -59.1976 iterations 9
Cbc0038I Pass   5: suminf.    1.49794 (6) obj. -59.1976 iterations 3
Cbc0038I Pass   6: suminf.    1.79355 (6) obj. -59.1976 iterations 12
Cbc0038I Pass   7: suminf.    1.76657 (5) obj. -59.1976 iterations 1
Cbc0038I Pass   8: suminf.    2.35550 (6) obj. -59.1976 iterations 13
Cbc0038I Pass   9: suminf.    2.35550 (6) obj. -59.1976 iterations 1
Cbc0038I Pass  10: suminf.    2.33166 (6) obj. -59.1976 iterations 11
Cbc0038I Pass  11: suminf.    2.02590 (6) obj. -59.1976 iterations 4
Cbc0038I Pass  12: suminf.    2.11541 (7) obj. -59.1976 iterations 15
Cbc0038I Pass  13: suminf.    2.09645 (8) obj. -59.1976 iterations 4
Cbc0038I Pass  14: suminf.    2.04213 (7) obj. -59.1976 iterations 3
Cbc0038I Pass  15: suminf.    2.54599 (8) obj. -59.1976 iterations 13
Cbc0038I Pass  16: suminf.    2.54598 (8) obj. -59.1976 iterations 3
Cbc0038I Pass  17: suminf.    2.18508 (6) obj. -59.1976 iterations 14
Cbc0038I Pass  18: suminf.    2.12432 (5) obj. -59.1976 iterations 4
Cbc0038I Pass  19: suminf.    1.54690 (6) obj. -59.1976 iterations 13
Cbc0038I Pass  20: suminf.    1.50950 (5) obj. -59.1976 iterations 7
Cbc0038I Pass  21: suminf.    1.79355 (6) obj. -59.1976 iterations 10
Cbc0038I Pass  22: suminf.    1.76657 (5) obj. -59.1976 iterations 1
Cbc0038I Pass  23: suminf.    2.35550 (6) obj. -59.1976 iterations 14
Cbc0038I Pass  24: suminf.    2.35550 (6) obj. -59.1976 iterations 1
Cbc0038I Pass  25: suminf.    2.33166 (6) obj. -59.1976 iterations 10
Cbc0038I Pass  26: suminf.    2.02590 (6) obj. -59.1976 iterations 3
Cbc0038I Pass  27: suminf.    2.11541 (7) obj. -59.1976 iterations 16
Cbc0038I Pass  28: suminf.    2.09645 (8) obj. -59.1976 iterations 4
Cbc0038I Pass  29: suminf.    2.04213 (7) obj. -59.1976 iterations 3
Cbc0038I Pass  30: suminf.    2.54599 (8) obj. -59.1976 iterations 12
Cbc0038I Pass  31: suminf.    2.54598 (8) obj. -59.1976 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 100 columns, reduced to 65 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -56.4944 - took 0.04 seconds
Cbc0012I Integer solution of -56.49444 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 57 rows 34 columns
Cbc0031I 21 added rows had average density of 54.571429
Cbc0013I At root node, 21 cuts changed objective from -83.525376 to -75.107865 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8724 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2000 row cuts average 99.9 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 144 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -56.49444 best solution, best possible -75.107865 (0.76 seconds)
Cbc0038I Full problem 183 rows 100 columns, reduced to 38 rows 28 columns
Cbc0001I Search completed - best objective -56.49444, took 7723 iterations and 60 nodes (1.03 seconds)
Cbc0032I Strong branching done 750 times (15142 iterations), fathomed 4 nodes and fixed 36 variables
Cbc0035I Maximum depth 21, 220 variables fixed on reduced cost
Total time (CPU seconds):       1.01   (Wallclock seconds):       1.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 127 (-78) rows, 142 (-61) columns and 2715 (-2939) elements
Clp1000I sum of infeasibilities 2.04538e-06 - average 1.61054e-08, 77 fixed columns
Coin0506I Presolve 53 (-74) rows, 64 (-78) columns and 228 (-2487) elements
Clp0006I 0  Obj 29.079119 Dual inf 9.5007376 (63)
Clp0029I End of values pass after 64 iterations
Clp0014I Perturbing problem by 0.001% of 1.1988925 - largest nonzero change 2.1657344e-05 ( 0.001262127%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 34.451429
Clp0000I Optimal - objective value 34.451429
Coin0511I After Postsolve, objective 34.451429, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 34.451429 Dual inf 89.190732 (43)
Clp0014I Perturbing problem by 0.001% of 1.4076449 - largest nonzero change 2.8214996e-05 ( 0.0024275985%) - largest zero change 2.9707416e-05
Clp0000I Optimal - objective value 94.948911
Clp0000I Optimal - objective value 94.948911
Clp0000I Optimal - objective value 94.948911
Coin0511I After Postsolve, objective 94.948911, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 94.94891104 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 127 rows, 142 columns (142 integer (142 of which binary)) and 2727 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.298%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 36 integers unsatisfied sum - 3.36382
Cbc0038I Pass   1: suminf.    2.77601 (34) obj. -80.4001 iterations 27
Cbc0038I Pass   2: suminf.    0.48075 (7) obj. -41.919 iterations 27
Cbc0038I Solution found of -34.4719
Cbc0038I Rounding solution of -39.4841 is better than previous of -34.4719

Cbc0038I Before mini branch and bound, 106 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -39.4841 to -44.0698 (0.04 seconds)
Cbc0038I Round again with cutoff of -48.2765
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.77601 (34) obj. -80.4001 iterations 0
Cbc0038I Pass   4: suminf.    1.37521 (19) obj. -58.5807 iterations 15
Cbc0038I Pass   5: suminf.    0.82105 (2) obj. -48.2765 iterations 36
Cbc0038I Pass   6: suminf.    0.69297 (2) obj. -48.2765 iterations 5
Cbc0038I Pass   7: suminf.    0.44584 (8) obj. -48.2765 iterations 15
Cbc0038I Pass   8: suminf.    0.73321 (5) obj. -48.2765 iterations 17
Cbc0038I Pass   9: suminf.    0.57382 (3) obj. -48.2765 iterations 12
Cbc0038I Pass  10: suminf.    0.50421 (3) obj. -48.2765 iterations 1
Cbc0038I Pass  11: suminf.    0.20421 (2) obj. -49.1267 iterations 2
Cbc0038I Pass  12: suminf.    0.57382 (3) obj. -48.2765 iterations 14
Cbc0038I Pass  13: suminf.    1.22721 (17) obj. -56.6215 iterations 36
Cbc0038I Pass  14: suminf.    1.03701 (14) obj. -55.058 iterations 10
Cbc0038I Pass  15: suminf.    1.05900 (6) obj. -48.2765 iterations 24
Cbc0038I Pass  16: suminf.    1.05900 (6) obj. -48.2765 iterations 0
Cbc0038I Pass  17: suminf.    0.69659 (4) obj. -48.2765 iterations 5
Cbc0038I Pass  18: suminf.    0.60622 (4) obj. -48.2765 iterations 3
Cbc0038I Pass  19: suminf.    0.60464 (4) obj. -48.2765 iterations 6
Cbc0038I Pass  20: suminf.    0.60464 (4) obj. -48.2765 iterations 2
Cbc0038I Pass  21: suminf.    0.60622 (4) obj. -48.2765 iterations 5
Cbc0038I Pass  22: suminf.    1.12543 (9) obj. -48.2765 iterations 23
Cbc0038I Pass  23: suminf.    0.91924 (8) obj. -48.2765 iterations 16
Cbc0038I Pass  24: suminf.    0.69589 (6) obj. -48.2765 iterations 24
Cbc0038I Pass  25: suminf.    0.55968 (6) obj. -48.2765 iterations 5
Cbc0038I Pass  26: suminf.    0.58357 (6) obj. -48.2765 iterations 8
Cbc0038I Pass  27: suminf.    1.97202 (13) obj. -48.2765 iterations 37
Cbc0038I Pass  28: suminf.    1.29359 (12) obj. -48.2765 iterations 12
Cbc0038I Pass  29: suminf.    1.24016 (6) obj. -48.2765 iterations 23
Cbc0038I Pass  30: suminf.    1.23310 (6) obj. -48.2765 iterations 5
Cbc0038I Pass  31: suminf.    1.24016 (6) obj. -48.2765 iterations 16
Cbc0038I Pass  32: suminf.    1.21791 (18) obj. -48.2765 iterations 32
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 55 rows 64 columns
Cbc0038I Mini branch and bound improved solution from -44.0698 to -50.773 (0.11 seconds)
Cbc0038I Round again with cutoff of -57.8458
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.77601 (34) obj. -80.4001 iterations 0
Cbc0038I Pass  33: suminf.    1.78157 (24) obj. -70.5279 iterations 10
Cbc0038I Pass  34: suminf.    1.10370 (7) obj. -57.8458 iterations 36
Cbc0038I Pass  35: suminf.    1.10370 (7) obj. -57.8458 iterations 1
Cbc0038I Pass  36: suminf.    1.20712 (7) obj. -57.8458 iterations 7
Cbc0038I Pass  37: suminf.    1.20712 (7) obj. -57.8458 iterations 1
Cbc0038I Pass  38: suminf.    1.10370 (7) obj. -57.8458 iterations 2
Cbc0038I Pass  39: suminf.    1.94747 (16) obj. -57.8458 iterations 24
Cbc0038I Pass  40: suminf.    1.07094 (13) obj. -57.8458 iterations 17
Cbc0038I Pass  41: suminf.    1.66468 (9) obj. -57.8458 iterations 20
Cbc0038I Pass  42: suminf.    1.41180 (9) obj. -57.8458 iterations 6
Cbc0038I Pass  43: suminf.    1.04233 (8) obj. -57.8458 iterations 20
Cbc0038I Pass  44: suminf.    1.04233 (8) obj. -57.8458 iterations 5
Cbc0038I Pass  45: suminf.    1.26252 (8) obj. -57.8458 iterations 4
Cbc0038I Pass  46: suminf.    1.26252 (8) obj. -57.8458 iterations 0
Cbc0038I Pass  47: suminf.    1.37037 (8) obj. -57.8458 iterations 9
Cbc0038I Pass  48: suminf.    1.37037 (8) obj. -57.8458 iterations 1
Cbc0038I Pass  49: suminf.    1.26252 (8) obj. -57.8458 iterations 2
Cbc0038I Pass  50: suminf.    2.15631 (14) obj. -57.8458 iterations 16
Cbc0038I Pass  51: suminf.    1.02967 (10) obj. -57.8458 iterations 19
Cbc0038I Pass  52: suminf.    0.92637 (10) obj. -57.8458 iterations 1
Cbc0038I Pass  53: suminf.    1.29011 (9) obj. -57.8458 iterations 19
Cbc0038I Pass  54: suminf.    0.82757 (8) obj. -57.8458 iterations 7
Cbc0038I Pass  55: suminf.    2.62645 (22) obj. -57.8458 iterations 27
Cbc0038I Pass  56: suminf.    2.26229 (19) obj. -57.8458 iterations 3
Cbc0038I Pass  57: suminf.    1.72183 (18) obj. -57.8458 iterations 4
Cbc0038I Pass  58: suminf.    2.20776 (11) obj. -57.8458 iterations 22
Cbc0038I Pass  59: suminf.    1.64161 (10) obj. -57.8458 iterations 6
Cbc0038I Pass  60: suminf.    0.87726 (9) obj. -57.8458 iterations 10
Cbc0038I Pass  61: suminf.    1.03325 (6) obj. -57.8458 iterations 19
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 127 rows 142 columns, reduced to 25 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -50.773 to -51.9304 (0.14 seconds)
Cbc0038I Round again with cutoff of -66.333
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.77601 (34) obj. -80.4001 iterations 0
Cbc0038I Pass  62: suminf.    1.61775 (22) obj. -68.6917 iterations 12
Cbc0038I Pass  63: suminf.    2.08674 (14) obj. -66.333 iterations 40
Cbc0038I Pass  64: suminf.    2.08674 (14) obj. -66.333 iterations 4
Cbc0038I Pass  65: suminf.    2.11136 (14) obj. -66.333 iterations 8
Cbc0038I Pass  66: suminf.    2.11136 (14) obj. -66.333 iterations 3
Cbc0038I Pass  67: suminf.    2.08674 (14) obj. -66.333 iterations 5
Cbc0038I Pass  68: suminf.    1.69587 (17) obj. -66.333 iterations 23
Cbc0038I Pass  69: suminf.    1.69587 (17) obj. -66.333 iterations 4
Cbc0038I Pass  70: suminf.    1.79663 (17) obj. -66.333 iterations 18
Cbc0038I Pass  71: suminf.    1.79663 (17) obj. -66.333 iterations 0
Cbc0038I Pass  72: suminf.    1.76928 (17) obj. -66.333 iterations 5
Cbc0038I Pass  73: suminf.    1.76928 (17) obj. -66.333 iterations 1
Cbc0038I Pass  74: suminf.    1.77093 (16) obj. -66.333 iterations 9
Cbc0038I Pass  75: suminf.    1.77093 (16) obj. -66.333 iterations 1
Cbc0038I Pass  76: suminf.    1.77522 (16) obj. -66.333 iterations 7
Cbc0038I Pass  77: suminf.    1.77522 (16) obj. -66.333 iterations 3
Cbc0038I Pass  78: suminf.    1.80083 (16) obj. -66.333 iterations 5
Cbc0038I Pass  79: suminf.    1.80083 (16) obj. -66.333 iterations 3
Cbc0038I Pass  80: suminf.    1.77522 (16) obj. -66.333 iterations 5
Cbc0038I Pass  81: suminf.    2.37245 (17) obj. -66.333 iterations 11
Cbc0038I Pass  82: suminf.    2.00830 (19) obj. -66.333 iterations 10
Cbc0038I Pass  83: suminf.    2.37245 (17) obj. -66.333 iterations 22
Cbc0038I Pass  84: suminf.    2.00829 (19) obj. -66.333 iterations 8
Cbc0038I Pass  85: suminf.    2.37245 (17) obj. -66.333 iterations 20
Cbc0038I Pass  86: suminf.    1.96985 (20) obj. -66.333 iterations 32
Cbc0038I Pass  87: suminf.    1.89947 (19) obj. -66.333 iterations 5
Cbc0038I Pass  88: suminf.    1.82269 (17) obj. -66.333 iterations 26
Cbc0038I Pass  89: suminf.    1.57315 (18) obj. -66.333 iterations 5
Cbc0038I Pass  90: suminf.    1.82269 (17) obj. -66.333 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -51.9304 - took 0.14 seconds
Cbc0012I Integer solution of -51.93037 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 127 rows 142 columns, reduced to 21 rows 24 columns
Cbc0031I 47 added rows had average density of 55.765957
Cbc0013I At root node, 47 cuts changed objective from -86.136479 to -63.535266 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14324 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1838 row cuts average 131.9 elements, 0 column cuts (0 active)  in 0.179 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 47 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 831 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1381 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 372 row cuts average 73.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 102 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.523 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -51.93037 best solution, best possible -63.535266 (2.62 seconds)
Cbc0012I Integer solution of -52.49594 found by rounding after 6478 iterations and 6 nodes (2.95 seconds)
Cbc0004I Integer solution of -54.62643 found after 6929 iterations and 15 nodes (3.18 seconds)
Cbc0012I Integer solution of -56.49444 found by DiveCoefficient after 7205 iterations and 22 nodes (3.24 seconds)
Cbc0010I After 32 nodes, 8 on tree, -56.49444 best solution, best possible -63.358875 (3.34 seconds)
Cbc0001I Search completed - best objective -56.49444, took 8591 iterations and 44 nodes (3.40 seconds)
Cbc0032I Strong branching done 638 times (11769 iterations), fathomed 7 nodes and fixed 5 variables
Cbc0035I Maximum depth 16, 208 variables fixed on reduced cost
Total time (CPU seconds):       2.69   (Wallclock seconds):       3.42

