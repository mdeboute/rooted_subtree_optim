Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 173 (-22) elements
Clp1000I sum of infeasibilities 0.000200041 - average 3.5095e-06, 2 fixed columns
Coin0506I Presolve 53 (-4) rows, 31 (-2) columns and 161 (-12) elements
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 3.4306342 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 69.504246
Clp0000I Optimal - objective value 69.504246
Coin0511I After Postsolve, objective 69.504246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.504246
Clp0000I Optimal - objective value 69.504246
Clp0000I Optimal - objective value 69.504246
Coin0511I After Postsolve, objective 69.504246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.50424604 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 174 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.578%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.18233
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.77614 iterations 24
Cbc0038I Solution found of 8.77614
Cbc0038I Relaxing continuous gives 8.77614
Cbc0038I Rounding solution of -11.6208 is better than previous of 8.77614

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -11.6208 to -21.9856 (0.02 seconds)
Cbc0038I Round again with cutoff of -26.7376
Cbc0038I Pass   2: suminf.    1.37740 (4) obj. -26.7376 iterations 4
Cbc0038I Pass   3: suminf.    1.01688 (3) obj. -26.7376 iterations 2
Cbc0038I Pass   4: suminf.    1.37437 (4) obj. -26.7376 iterations 2
Cbc0038I Pass   5: suminf.    0.68546 (4) obj. -26.7376 iterations 4
Cbc0038I Pass   6: suminf.    0.58008 (3) obj. -26.7376 iterations 2
Cbc0038I Pass   7: suminf.    1.82191 (5) obj. -26.7376 iterations 5
Cbc0038I Pass   8: suminf.    1.82191 (5) obj. -26.7376 iterations 0
Cbc0038I Pass   9: suminf.    0.94599 (4) obj. -26.7376 iterations 6
Cbc0038I Pass  10: suminf.    0.76019 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  11: suminf.    1.15156 (3) obj. -26.7376 iterations 7
Cbc0038I Pass  12: suminf.    1.01688 (3) obj. -26.7376 iterations 2
Cbc0038I Pass  13: suminf.    1.01688 (3) obj. -26.7376 iterations 0
Cbc0038I Pass  14: suminf.    1.37437 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  15: suminf.    0.68546 (4) obj. -26.7376 iterations 4
Cbc0038I Pass  16: suminf.    0.58008 (3) obj. -26.7376 iterations 2
Cbc0038I Pass  17: suminf.    1.82191 (5) obj. -26.7376 iterations 5
Cbc0038I Pass  18: suminf.    1.82191 (5) obj. -26.7376 iterations 0
Cbc0038I Pass  19: suminf.    0.94599 (4) obj. -26.7376 iterations 6
Cbc0038I Pass  20: suminf.    0.76019 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  21: suminf.    1.15156 (3) obj. -26.7376 iterations 7
Cbc0038I Pass  22: suminf.    1.01688 (3) obj. -26.7376 iterations 2
Cbc0038I Pass  23: suminf.    1.01688 (3) obj. -26.7376 iterations 0
Cbc0038I Pass  24: suminf.    1.37437 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  25: suminf.    0.68546 (4) obj. -26.7376 iterations 4
Cbc0038I Pass  26: suminf.    0.58008 (3) obj. -26.7376 iterations 2
Cbc0038I Pass  27: suminf.    1.82191 (5) obj. -26.7376 iterations 5
Cbc0038I Pass  28: suminf.    1.82191 (5) obj. -26.7376 iterations 0
Cbc0038I Pass  29: suminf.    0.94599 (4) obj. -26.7376 iterations 6
Cbc0038I Pass  30: suminf.    0.76019 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  31: suminf.    1.15156 (3) obj. -26.7376 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -21.9856 - took 0.04 seconds
Cbc0012I Integer solution of -21.98563 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 39 rows 23 columns
Cbc0031I 15 added rows had average density of 27.6
Cbc0013I At root node, 15 cuts changed objective from -69.504246 to -48.941748 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2049 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 858 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -23.39537 found by DiveCoefficient after 3469 iterations and 5 nodes (0.27 seconds)
Cbc0001I Search completed - best objective -23.39537, took 3642 iterations and 14 nodes (0.28 seconds)
Cbc0032I Strong branching done 174 times (2066 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-17) rows, 58 (-8) columns and 553 (-170) elements
Clp1000I sum of infeasibilities 6.59211e-09 - average 1.29257e-10, 14 fixed columns
Coin0506I Presolve 39 (-12) rows, 44 (-14) columns and 353 (-200) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 85.182834
Clp0000I Optimal - objective value 85.182834
Coin0511I After Postsolve, objective 85.182834, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7597384 - largest nonzero change 2.3199244e-05 ( 0.001737012%) - largest zero change 1.721383e-05
Clp0000I Optimal - objective value 87.608824
Clp0000I Optimal - objective value 87.608824
Clp0000I Optimal - objective value 87.608824
Coin0511I After Postsolve, objective 87.608824, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.60882398 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 58 columns (58 integer (58 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.383%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.34363
Cbc0038I Pass   1: suminf.    0.71562 (12) obj. 1.48826 iterations 14
Cbc0038I Pass   2: suminf.    0.71562 (12) obj. 1.48826 iterations 0
Cbc0038I Solution found of 37.1281
Cbc0038I Rounding solution of -3.51611 is better than previous of 37.1281

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -3.51611 to -12.5084 (0.01 seconds)
Cbc0038I Round again with cutoff of -19.1979
Cbc0038I Pass   3: suminf.    1.77502 (19) obj. -19.1979 iterations 1
Cbc0038I Pass   4: suminf.    1.77502 (19) obj. -19.1979 iterations 0
Cbc0038I Pass   5: suminf.    0.62698 (3) obj. -19.1979 iterations 25
Cbc0038I Pass   6: suminf.    0.59959 (2) obj. -19.1979 iterations 2
Cbc0038I Pass   7: suminf.    0.66619 (2) obj. -19.1979 iterations 3
Cbc0038I Pass   8: suminf.    1.57982 (8) obj. -19.1979 iterations 18
Cbc0038I Pass   9: suminf.    1.57982 (8) obj. -19.1979 iterations 1
Cbc0038I Pass  10: suminf.    1.12310 (4) obj. -19.1979 iterations 9
Cbc0038I Pass  11: suminf.    0.54662 (3) obj. -27.5594 iterations 5
Cbc0038I Pass  12: suminf.    0.42942 (2) obj. -19.1979 iterations 5
Cbc0038I Pass  13: suminf.    0.24310 (2) obj. -22.7378 iterations 1
Cbc0038I Pass  14: suminf.    1.43362 (6) obj. -19.1979 iterations 13
Cbc0038I Pass  15: suminf.    1.20951 (5) obj. -19.1979 iterations 4
Cbc0038I Pass  16: suminf.    0.99792 (3) obj. -19.1979 iterations 7
Cbc0038I Pass  17: suminf.    0.59816 (3) obj. -19.1979 iterations 4
Cbc0038I Pass  18: suminf.    0.72723 (2) obj. -24.7885 iterations 10
Cbc0038I Pass  19: suminf.    0.18250 (1) obj. -21.6099 iterations 2
Cbc0038I Pass  20: suminf.    0.27839 (1) obj. -19.1979 iterations 1
Cbc0038I Pass  21: suminf.    3.41598 (8) obj. -19.1979 iterations 13
Cbc0038I Pass  22: suminf.    2.25714 (7) obj. -19.1979 iterations 3
Cbc0038I Pass  23: suminf.    0.93011 (3) obj. -19.1979 iterations 10
Cbc0038I Pass  24: suminf.    0.60501 (2) obj. -19.1979 iterations 3
Cbc0038I Pass  25: suminf.    0.52155 (2) obj. -25.8182 iterations 1
Cbc0038I Pass  26: suminf.    0.27586 (1) obj. -19.9993 iterations 1
Cbc0038I Pass  27: suminf.    4.15633 (12) obj. -19.1979 iterations 22
Cbc0038I Pass  28: suminf.    2.73675 (9) obj. -19.1979 iterations 5
Cbc0038I Pass  29: suminf.    2.30494 (8) obj. -19.1979 iterations 1
Cbc0038I Pass  30: suminf.    1.19131 (3) obj. -19.1979 iterations 8
Cbc0038I Pass  31: suminf.    0.38256 (2) obj. -19.1979 iterations 1
Cbc0038I Pass  32: suminf.    0.74293 (2) obj. -19.1979 iterations 2
Cbc0038I Rounding solution of -16.2592 is better than previous of -12.5084

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 20 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -16.2592 to -21.9856 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.4689
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.81706 (19) obj. -33.4689 iterations 1
Cbc0038I Pass  33: suminf.    2.81706 (19) obj. -33.4689 iterations 0
Cbc0038I Pass  34: suminf.    0.50108 (5) obj. -33.4689 iterations 26
Cbc0038I Pass  35: suminf.    0.50108 (5) obj. -33.4689 iterations 0
Cbc0038I Pass  36: suminf.    0.78898 (3) obj. -33.4689 iterations 6
Cbc0038I Pass  37: suminf.    0.78898 (3) obj. -33.4689 iterations 0
Cbc0038I Pass  38: suminf.    0.38908 (2) obj. -33.4689 iterations 3
Cbc0038I Pass  39: suminf.    0.36379 (2) obj. -34.1106 iterations 1
Cbc0038I Pass  40: suminf.    0.39756 (2) obj. -33.4689 iterations 2
Cbc0038I Pass  41: suminf.    1.82789 (8) obj. -33.4689 iterations 11
Cbc0038I Pass  42: suminf.    0.93977 (4) obj. -33.4689 iterations 7
Cbc0038I Pass  43: suminf.    0.86140 (4) obj. -33.4689 iterations 4
Cbc0038I Pass  44: suminf.    0.81170 (4) obj. -33.4689 iterations 2
Cbc0038I Pass  45: suminf.    0.95118 (4) obj. -33.4689 iterations 4
Cbc0038I Pass  46: suminf.    1.81963 (7) obj. -33.4689 iterations 10
Cbc0038I Pass  47: suminf.    1.81963 (7) obj. -33.4689 iterations 1
Cbc0038I Pass  48: suminf.    0.70181 (2) obj. -33.4689 iterations 6
Cbc0038I Pass  49: suminf.    0.80866 (2) obj. -33.4689 iterations 2
Cbc0038I Pass  50: suminf.    0.55517 (2) obj. -38.2852 iterations 1
Cbc0038I Pass  51: suminf.    0.80866 (2) obj. -33.4689 iterations 2
Cbc0038I Pass  52: suminf.    2.24513 (8) obj. -33.4689 iterations 12
Cbc0038I Pass  53: suminf.    1.81109 (9) obj. -33.4689 iterations 3
Cbc0038I Pass  54: suminf.    1.00796 (4) obj. -33.4689 iterations 9
Cbc0038I Pass  55: suminf.    0.59991 (2) obj. -33.4689 iterations 7
Cbc0038I Pass  56: suminf.    0.44397 (2) obj. -38.8103 iterations 1
Cbc0038I Pass  57: suminf.    0.27586 (1) obj. -34.829 iterations 1
Cbc0038I Pass  58: suminf.    4.04366 (11) obj. -33.4689 iterations 12
Cbc0038I Pass  59: suminf.    3.51251 (10) obj. -33.4689 iterations 6
Cbc0038I Pass  60: suminf.    0.70361 (4) obj. -33.4689 iterations 9
Cbc0038I Pass  61: suminf.    0.52832 (2) obj. -33.4689 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 4 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -21.9856 - took 0.03 seconds
Cbc0012I Integer solution of -21.98563 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 27 added rows had average density of 19.185185
Cbc0013I At root node, 27 cuts changed objective from -79.401668 to -27.185174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2845 row cuts average 2.8 elements, 9 column cuts (9 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 656 row cuts average 42.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 397 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 258 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.741 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.98563 best solution, best possible -27.185174 (1.65 seconds)
Cbc0004I Integer solution of -23.39537 found after 1662 iterations and 4 nodes (1.92 seconds)
Cbc0001I Search completed - best objective -23.39537, took 1976 iterations and 8 nodes (2.15 seconds)
Cbc0032I Strong branching done 108 times (1402 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.41   (Wallclock seconds):       2.16

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 33 (-2) columns and 173 (-22) elements
Clp1000I sum of infeasibilities 0.000200041 - average 3.5095e-06, 2 fixed columns
Coin0506I Presolve 53 (-4) rows, 31 (-2) columns and 161 (-12) elements
Clp0029I End of values pass after 31 iterations
Clp0014I Perturbing problem by 0.001% of 3.4306342 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 69.504246
Clp0000I Optimal - objective value 69.504246
Coin0511I After Postsolve, objective 69.504246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 69.504246
Clp0000I Optimal - objective value 69.504246
Clp0000I Optimal - objective value 69.504246
Coin0511I After Postsolve, objective 69.504246, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 69.50424604 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 33 columns (32 integer (32 of which binary)) and 174 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.578%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.18233
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.77614 iterations 24
Cbc0038I Solution found of 8.77614
Cbc0038I Relaxing continuous gives 8.77614
Cbc0038I Rounding solution of -11.6208 is better than previous of 8.77614

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -11.6208 to -21.9856 (0.02 seconds)
Cbc0038I Round again with cutoff of -26.7376
Cbc0038I Pass   2: suminf.    1.37740 (4) obj. -26.7376 iterations 4
Cbc0038I Pass   3: suminf.    1.01688 (3) obj. -26.7376 iterations 2
Cbc0038I Pass   4: suminf.    1.37437 (4) obj. -26.7376 iterations 2
Cbc0038I Pass   5: suminf.    0.68546 (4) obj. -26.7376 iterations 4
Cbc0038I Pass   6: suminf.    0.58008 (3) obj. -26.7376 iterations 2
Cbc0038I Pass   7: suminf.    1.82191 (5) obj. -26.7376 iterations 5
Cbc0038I Pass   8: suminf.    1.82191 (5) obj. -26.7376 iterations 0
Cbc0038I Pass   9: suminf.    0.94599 (4) obj. -26.7376 iterations 6
Cbc0038I Pass  10: suminf.    0.76019 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  11: suminf.    1.15156 (3) obj. -26.7376 iterations 7
Cbc0038I Pass  12: suminf.    1.01688 (3) obj. -26.7376 iterations 2
Cbc0038I Pass  13: suminf.    1.01688 (3) obj. -26.7376 iterations 0
Cbc0038I Pass  14: suminf.    1.37437 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  15: suminf.    0.68546 (4) obj. -26.7376 iterations 4
Cbc0038I Pass  16: suminf.    0.58008 (3) obj. -26.7376 iterations 2
Cbc0038I Pass  17: suminf.    1.82191 (5) obj. -26.7376 iterations 5
Cbc0038I Pass  18: suminf.    1.82191 (5) obj. -26.7376 iterations 0
Cbc0038I Pass  19: suminf.    0.94599 (4) obj. -26.7376 iterations 6
Cbc0038I Pass  20: suminf.    0.76019 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  21: suminf.    1.15156 (3) obj. -26.7376 iterations 7
Cbc0038I Pass  22: suminf.    1.01688 (3) obj. -26.7376 iterations 2
Cbc0038I Pass  23: suminf.    1.01688 (3) obj. -26.7376 iterations 0
Cbc0038I Pass  24: suminf.    1.37437 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  25: suminf.    0.68546 (4) obj. -26.7376 iterations 4
Cbc0038I Pass  26: suminf.    0.58008 (3) obj. -26.7376 iterations 2
Cbc0038I Pass  27: suminf.    1.82191 (5) obj. -26.7376 iterations 5
Cbc0038I Pass  28: suminf.    1.82191 (5) obj. -26.7376 iterations 0
Cbc0038I Pass  29: suminf.    0.94599 (4) obj. -26.7376 iterations 6
Cbc0038I Pass  30: suminf.    0.76019 (4) obj. -26.7376 iterations 2
Cbc0038I Pass  31: suminf.    1.15156 (3) obj. -26.7376 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 33 columns, reduced to 41 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -21.9856 - took 0.04 seconds
Cbc0012I Integer solution of -21.98563 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 57 rows 33 columns, reduced to 39 rows 23 columns
Cbc0031I 15 added rows had average density of 27.6
Cbc0013I At root node, 15 cuts changed objective from -69.504246 to -48.941748 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2049 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 858 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 31.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -23.39537 found by DiveCoefficient after 3469 iterations and 5 nodes (0.30 seconds)
Cbc0001I Search completed - best objective -23.39537, took 3642 iterations and 14 nodes (0.31 seconds)
Cbc0032I Strong branching done 174 times (2066 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 32 variables fixed on reduced cost
Total time (CPU seconds):       0.29   (Wallclock seconds):       0.31

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-18) rows, 58 (-9) columns and 553 (-171) elements
Clp1000I sum of infeasibilities 6.59211e-09 - average 1.29257e-10, 14 fixed columns
Coin0506I Presolve 39 (-12) rows, 44 (-14) columns and 353 (-200) elements
Clp0029I End of values pass after 44 iterations
Clp0000I Optimal - objective value 85.182834
Clp0000I Optimal - objective value 85.182834
Coin0511I After Postsolve, objective 85.182834, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7597384 - largest nonzero change 2.3199244e-05 ( 0.001737012%) - largest zero change 1.721383e-05
Clp0000I Optimal - objective value 87.608824
Clp0000I Optimal - objective value 87.608824
Clp0000I Optimal - objective value 87.608824
Coin0511I After Postsolve, objective 87.608824, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 87.60882398 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 58 columns (58 integer (58 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.383%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 7.34363
Cbc0038I Pass   1: suminf.    0.71562 (12) obj. 1.48826 iterations 14
Cbc0038I Pass   2: suminf.    0.71562 (12) obj. 1.48826 iterations 0
Cbc0038I Solution found of 37.1281
Cbc0038I Rounding solution of -3.51611 is better than previous of 37.1281

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -3.51611 to -12.5084 (0.01 seconds)
Cbc0038I Round again with cutoff of -19.1979
Cbc0038I Pass   3: suminf.    1.77502 (19) obj. -19.1979 iterations 1
Cbc0038I Pass   4: suminf.    1.77502 (19) obj. -19.1979 iterations 0
Cbc0038I Pass   5: suminf.    0.62698 (3) obj. -19.1979 iterations 25
Cbc0038I Pass   6: suminf.    0.59959 (2) obj. -19.1979 iterations 2
Cbc0038I Pass   7: suminf.    0.66619 (2) obj. -19.1979 iterations 3
Cbc0038I Pass   8: suminf.    1.57982 (8) obj. -19.1979 iterations 18
Cbc0038I Pass   9: suminf.    1.57982 (8) obj. -19.1979 iterations 1
Cbc0038I Pass  10: suminf.    1.12310 (4) obj. -19.1979 iterations 9
Cbc0038I Pass  11: suminf.    0.54662 (3) obj. -27.5594 iterations 5
Cbc0038I Pass  12: suminf.    0.42942 (2) obj. -19.1979 iterations 5
Cbc0038I Pass  13: suminf.    0.24310 (2) obj. -22.7378 iterations 1
Cbc0038I Pass  14: suminf.    1.43362 (6) obj. -19.1979 iterations 13
Cbc0038I Pass  15: suminf.    1.20951 (5) obj. -19.1979 iterations 4
Cbc0038I Pass  16: suminf.    0.99792 (3) obj. -19.1979 iterations 7
Cbc0038I Pass  17: suminf.    0.59816 (3) obj. -19.1979 iterations 4
Cbc0038I Pass  18: suminf.    0.72723 (2) obj. -24.7885 iterations 10
Cbc0038I Pass  19: suminf.    0.18250 (1) obj. -21.6099 iterations 2
Cbc0038I Pass  20: suminf.    0.27839 (1) obj. -19.1979 iterations 1
Cbc0038I Pass  21: suminf.    3.41598 (8) obj. -19.1979 iterations 13
Cbc0038I Pass  22: suminf.    2.25714 (7) obj. -19.1979 iterations 3
Cbc0038I Pass  23: suminf.    0.93011 (3) obj. -19.1979 iterations 10
Cbc0038I Pass  24: suminf.    0.60501 (2) obj. -19.1979 iterations 3
Cbc0038I Pass  25: suminf.    0.52155 (2) obj. -25.8182 iterations 1
Cbc0038I Pass  26: suminf.    0.27586 (1) obj. -19.9993 iterations 1
Cbc0038I Pass  27: suminf.    4.15633 (12) obj. -19.1979 iterations 22
Cbc0038I Pass  28: suminf.    2.73675 (9) obj. -19.1979 iterations 5
Cbc0038I Pass  29: suminf.    2.30494 (8) obj. -19.1979 iterations 1
Cbc0038I Pass  30: suminf.    1.19131 (3) obj. -19.1979 iterations 8
Cbc0038I Pass  31: suminf.    0.38256 (2) obj. -19.1979 iterations 1
Cbc0038I Pass  32: suminf.    0.74293 (2) obj. -19.1979 iterations 2
Cbc0038I Rounding solution of -16.2592 is better than previous of -12.5084

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 20 rows 32 columns
Cbc0038I Mini branch and bound improved solution from -16.2592 to -21.9856 (0.03 seconds)
Cbc0038I Round again with cutoff of -33.4689
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.81706 (19) obj. -33.4689 iterations 1
Cbc0038I Pass  33: suminf.    2.81706 (19) obj. -33.4689 iterations 0
Cbc0038I Pass  34: suminf.    0.50108 (5) obj. -33.4689 iterations 26
Cbc0038I Pass  35: suminf.    0.50108 (5) obj. -33.4689 iterations 0
Cbc0038I Pass  36: suminf.    0.78898 (3) obj. -33.4689 iterations 6
Cbc0038I Pass  37: suminf.    0.78898 (3) obj. -33.4689 iterations 0
Cbc0038I Pass  38: suminf.    0.38908 (2) obj. -33.4689 iterations 3
Cbc0038I Pass  39: suminf.    0.36379 (2) obj. -34.1106 iterations 1
Cbc0038I Pass  40: suminf.    0.39756 (2) obj. -33.4689 iterations 2
Cbc0038I Pass  41: suminf.    1.82789 (8) obj. -33.4689 iterations 11
Cbc0038I Pass  42: suminf.    0.93977 (4) obj. -33.4689 iterations 7
Cbc0038I Pass  43: suminf.    0.86140 (4) obj. -33.4689 iterations 4
Cbc0038I Pass  44: suminf.    0.81170 (4) obj. -33.4689 iterations 2
Cbc0038I Pass  45: suminf.    0.95118 (4) obj. -33.4689 iterations 4
Cbc0038I Pass  46: suminf.    1.81963 (7) obj. -33.4689 iterations 10
Cbc0038I Pass  47: suminf.    1.81963 (7) obj. -33.4689 iterations 1
Cbc0038I Pass  48: suminf.    0.70181 (2) obj. -33.4689 iterations 6
Cbc0038I Pass  49: suminf.    0.80866 (2) obj. -33.4689 iterations 2
Cbc0038I Pass  50: suminf.    0.55517 (2) obj. -38.2852 iterations 1
Cbc0038I Pass  51: suminf.    0.80866 (2) obj. -33.4689 iterations 2
Cbc0038I Pass  52: suminf.    2.24513 (8) obj. -33.4689 iterations 12
Cbc0038I Pass  53: suminf.    1.81109 (9) obj. -33.4689 iterations 3
Cbc0038I Pass  54: suminf.    1.00796 (4) obj. -33.4689 iterations 9
Cbc0038I Pass  55: suminf.    0.59991 (2) obj. -33.4689 iterations 7
Cbc0038I Pass  56: suminf.    0.44397 (2) obj. -38.8103 iterations 1
Cbc0038I Pass  57: suminf.    0.27586 (1) obj. -34.829 iterations 1
Cbc0038I Pass  58: suminf.    4.04366 (11) obj. -33.4689 iterations 12
Cbc0038I Pass  59: suminf.    3.51251 (10) obj. -33.4689 iterations 6
Cbc0038I Pass  60: suminf.    0.70361 (4) obj. -33.4689 iterations 9
Cbc0038I Pass  61: suminf.    0.52832 (2) obj. -33.4689 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 58 columns, reduced to 4 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -21.9856 - took 0.03 seconds
Cbc0012I Integer solution of -21.98563 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 27 added rows had average density of 19.185185
Cbc0013I At root node, 27 cuts changed objective from -79.401668 to -27.185174 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 2845 row cuts average 2.8 elements, 9 column cuts (9 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 656 row cuts average 42.6 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 5.6 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 397 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 258 row cuts average 22.2 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 60 row cuts average 24.9 elements, 0 column cuts (0 active)  in 0.771 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -21.98563 best solution, best possible -27.185174 (1.70 seconds)
Cbc0004I Integer solution of -23.39537 found after 1662 iterations and 4 nodes (1.96 seconds)
Cbc0001I Search completed - best objective -23.39537, took 1976 iterations and 8 nodes (2.18 seconds)
Cbc0032I Strong branching done 108 times (1402 iterations), fathomed 0 nodes and fixed 6 variables
Cbc0035I Maximum depth 2, 14 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       2.19

