Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 74 (-4) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 9.56341e-06 - average 7.08401e-08, 8 fixed columns
Coin0506I Presolve 120 (-15) rows, 66 (-8) columns and 364 (-46) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.8476665 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Coin0511I After Postsolve, objective 35.340061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Coin0511I After Postsolve, objective 35.340061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.34006139 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 74 columns (73 integer (73 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.206%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.90182
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.3662 iterations 58
Cbc0038I Solution found of 13.3662
Cbc0038I Relaxing continuous gives 13.3662
Cbc0038I Rounding solution of 4.83013 is better than previous of 13.3662

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 80 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 4.83013 to -7.02582 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.85733
Cbc0038I Pass   2: suminf.    2.31056 (27) obj. -9.85733 iterations 36
Cbc0038I Pass   3: suminf.    2.16132 (46) obj. -9.85733 iterations 16
Cbc0038I Pass   4: suminf.    1.41062 (7) obj. -9.85733 iterations 55
Cbc0038I Pass   5: suminf.    1.41062 (7) obj. -9.85733 iterations 0
Cbc0038I Pass   6: suminf.    1.74262 (5) obj. -9.85733 iterations 18
Cbc0038I Pass   7: suminf.    1.32505 (7) obj. -9.85733 iterations 3
Cbc0038I Pass   8: suminf.    1.31649 (7) obj. -9.85733 iterations 1
Cbc0038I Pass   9: suminf.    1.40497 (5) obj. -9.85733 iterations 8
Cbc0038I Pass  10: suminf.    1.40497 (5) obj. -9.85733 iterations 0
Cbc0038I Pass  11: suminf.    1.28540 (4) obj. -9.85733 iterations 3
Cbc0038I Pass  12: suminf.    1.28540 (4) obj. -9.85733 iterations 0
Cbc0038I Pass  13: suminf.    1.89350 (4) obj. -9.85733 iterations 2
Cbc0038I Pass  14: suminf.    1.89350 (4) obj. -9.85733 iterations 0
Cbc0038I Pass  15: suminf.    1.07264 (5) obj. -9.85733 iterations 20
Cbc0038I Pass  16: suminf.    1.03867 (4) obj. -9.85733 iterations 9
Cbc0038I Pass  17: suminf.    1.22876 (4) obj. -9.85733 iterations 7
Cbc0038I Pass  18: suminf.    1.22876 (4) obj. -9.85733 iterations 1
Cbc0038I Pass  19: suminf.    1.33693 (3) obj. -9.85733 iterations 3
Cbc0038I Pass  20: suminf.    0.74957 (3) obj. -9.85733 iterations 2
Cbc0038I Pass  21: suminf.    3.07428 (9) obj. -9.85733 iterations 22
Cbc0038I Pass  22: suminf.    2.08360 (8) obj. -9.85733 iterations 7
Cbc0038I Pass  23: suminf.    1.92752 (6) obj. -9.85733 iterations 15
Cbc0038I Pass  24: suminf.    1.85813 (7) obj. -9.85733 iterations 1
Cbc0038I Pass  25: suminf.    2.09538 (7) obj. -9.85733 iterations 5
Cbc0038I Pass  26: suminf.    1.82182 (6) obj. -9.85733 iterations 12
Cbc0038I Pass  27: suminf.    1.82182 (6) obj. -9.85733 iterations 0
Cbc0038I Pass  28: suminf.    2.42783 (6) obj. -9.85733 iterations 2
Cbc0038I Pass  29: suminf.    2.12276 (8) obj. -9.85733 iterations 3
Cbc0038I Pass  30: suminf.    2.09899 (9) obj. -9.85733 iterations 1
Cbc0038I Pass  31: suminf.    2.70704 (9) obj. -9.85733 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.02582 - took 0.09 seconds
Cbc0012I Integer solution of -7.02582 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 80 rows 46 columns
Cbc0031I 27 added rows had average density of 48.407407
Cbc0013I At root node, 27 cuts changed objective from -35.340061 to -27.996759 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13819 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1886 row cuts average 73.5 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.073 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.02582 best solution, best possible -27.996759 (1.04 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 62 rows 35 columns
Cbc0012I Integer solution of -7.36208 found by RINS after 11322 iterations and 41 nodes (1.32 seconds)
Cbc0001I Search completed - best objective -7.362079999999999, took 12819 iterations and 78 nodes (1.38 seconds)
Cbc0032I Strong branching done 912 times (17962 iterations), fathomed 7 nodes and fixed 29 variables
Cbc0035I Maximum depth 33, 244 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.39

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 115 (-37) columns and 1886 (-1417) elements
Clp1000I sum of infeasibilities 1.23184e-07 - average 1.18446e-09, 25 fixed columns
Coin0506I Presolve 79 (-25) rows, 89 (-26) columns and 1139 (-747) elements
Clp0006I 0  Obj 38.842799 Dual inf 4.2517918 (89)
Clp0014I Perturbing problem by 0.001% of 2.4124371 - largest nonzero change 2.8697389e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 47.139799
Clp0000I Optimal - objective value 47.139799
Coin0511I After Postsolve, objective 47.139799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.139799
Clp0000I Optimal - objective value 47.139799
Clp0000I Optimal - objective value 47.139799
Clp0000I Optimal - objective value 47.139799
Coin0511I After Postsolve, objective 47.139799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.13979881 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 116 columns (116 integer (116 of which binary)) and 1891 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.504%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.9802
Cbc0038I Pass   1: suminf.    2.20589 (26) obj. -37.3436 iterations 15
Cbc0038I Pass   2: suminf.    2.20589 (26) obj. -37.3436 iterations 1
Cbc0038I Solution found of 0.84574
Cbc0038I Rounding solution of 0.799916 is better than previous of 0.84574

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 0.799916 to -1.69369 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.78963
Cbc0038I Pass   3: suminf.    2.20589 (26) obj. -37.3436 iterations 0
Cbc0038I Pass   4: suminf.    2.20589 (26) obj. -37.3436 iterations 1
Cbc0038I Pass   5: suminf.    0.17058 (1) obj. -5.78963 iterations 26
Cbc0038I Pass   6: suminf.    0.11111 (1) obj. -6.26537 iterations 1
Cbc0038I Pass   7: suminf.    1.76409 (11) obj. -5.78963 iterations 28
Cbc0038I Pass   8: suminf.    0.58038 (7) obj. -7.37085 iterations 5
Cbc0038I Pass   9: suminf.    0.72681 (10) obj. -5.78963 iterations 22
Cbc0038I Pass  10: suminf.    0.27973 (2) obj. -6.35409 iterations 13
Cbc0038I Pass  11: suminf.    0.62691 (7) obj. -5.78963 iterations 8
Cbc0038I Pass  12: suminf.    2.52812 (19) obj. -5.78963 iterations 57
Cbc0038I Pass  13: suminf.    1.48193 (13) obj. -6.93011 iterations 11
Cbc0038I Pass  14: suminf.    0.90495 (8) obj. -5.78963 iterations 30
Cbc0038I Pass  15: suminf.    0.63831 (5) obj. -6.71192 iterations 8
Cbc0038I Pass  16: suminf.    1.79668 (7) obj. -5.78963 iterations 17
Cbc0038I Pass  17: suminf.    1.79668 (7) obj. -5.78963 iterations 0
Cbc0038I Pass  18: suminf.    1.92422 (7) obj. -5.78963 iterations 9
Cbc0038I Pass  19: suminf.    1.92422 (7) obj. -5.78963 iterations 0
Cbc0038I Pass  20: suminf.    1.18391 (5) obj. -5.78963 iterations 11
Cbc0038I Pass  21: suminf.    0.59393 (5) obj. -5.78963 iterations 8
Cbc0038I Pass  22: suminf.    0.45149 (3) obj. -5.78963 iterations 3
Cbc0038I Pass  23: suminf.    0.28711 (4) obj. -6.76579 iterations 2
Cbc0038I Pass  24: suminf.    1.68884 (5) obj. -5.78963 iterations 7
Cbc0038I Pass  25: suminf.    0.54704 (4) obj. -5.78963 iterations 4
Cbc0038I Pass  26: suminf.    0.45149 (3) obj. -5.78963 iterations 7
Cbc0038I Pass  27: suminf.    1.66994 (14) obj. -5.78963 iterations 31
Cbc0038I Pass  28: suminf.    1.66994 (14) obj. -5.78963 iterations 4
Cbc0038I Pass  29: suminf.    2.26606 (11) obj. -5.78963 iterations 20
Cbc0038I Pass  30: suminf.    2.26606 (11) obj. -5.78963 iterations 0
Cbc0038I Pass  31: suminf.    1.04368 (7) obj. -5.78963 iterations 21
Cbc0038I Pass  32: suminf.    1.04368 (7) obj. -5.78963 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 49 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -1.69369 to -6.5899 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.8024
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.20589 (26) obj. -37.3436 iterations 0
Cbc0038I Pass  33: suminf.    2.20589 (26) obj. -37.3436 iterations 1
Cbc0038I Pass  34: suminf.    0.67978 (7) obj. -13.8024 iterations 25
Cbc0038I Pass  35: suminf.    0.67978 (7) obj. -13.8024 iterations 0
Cbc0038I Pass  36: suminf.    1.19533 (4) obj. -13.8024 iterations 11
Cbc0038I Pass  37: suminf.    0.97607 (6) obj. -13.8024 iterations 4
Cbc0038I Pass  38: suminf.    0.97778 (6) obj. -13.8024 iterations 3
Cbc0038I Pass  39: suminf.    1.14003 (12) obj. -13.8024 iterations 4
Cbc0038I Pass  40: suminf.    1.14003 (12) obj. -13.8024 iterations 0
Cbc0038I Pass  41: suminf.    1.15578 (9) obj. -13.8024 iterations 18
Cbc0038I Pass  42: suminf.    0.82717 (8) obj. -13.9558 iterations 4
Cbc0038I Pass  43: suminf.    1.40624 (9) obj. -13.8024 iterations 5
Cbc0038I Pass  44: suminf.    2.00649 (13) obj. -13.8024 iterations 21
Cbc0038I Pass  45: suminf.    1.94670 (14) obj. -13.8024 iterations 8
Cbc0038I Pass  46: suminf.    1.59582 (8) obj. -13.8024 iterations 14
Cbc0038I Pass  47: suminf.    1.07766 (8) obj. -13.8024 iterations 3
Cbc0038I Pass  48: suminf.    1.35667 (10) obj. -13.8024 iterations 6
Cbc0038I Pass  49: suminf.    1.02566 (10) obj. -13.8024 iterations 3
Cbc0038I Pass  50: suminf.    1.17921 (13) obj. -13.8024 iterations 7
Cbc0038I Pass  51: suminf.    1.06880 (10) obj. -13.8024 iterations 4
Cbc0038I Pass  52: suminf.    1.14008 (13) obj. -13.8024 iterations 9
Cbc0038I Pass  53: suminf.    2.07230 (13) obj. -13.8024 iterations 23
Cbc0038I Pass  54: suminf.    1.21944 (12) obj. -13.8024 iterations 8
Cbc0038I Pass  55: suminf.    1.02956 (11) obj. -13.8024 iterations 13
Cbc0038I Pass  56: suminf.    1.02566 (10) obj. -13.8024 iterations 2
Cbc0038I Pass  57: suminf.    1.17921 (13) obj. -13.8024 iterations 6
Cbc0038I Pass  58: suminf.    1.06880 (10) obj. -13.8024 iterations 3
Cbc0038I Pass  59: suminf.    1.14008 (13) obj. -13.8024 iterations 8
Cbc0038I Pass  60: suminf.    3.44945 (20) obj. -13.8024 iterations 26
Cbc0038I Pass  61: suminf.    2.72888 (19) obj. -13.8024 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 22 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -6.5899 - took 0.08 seconds
Cbc0012I Integer solution of -6.5899 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 105 rows 116 columns, reduced to 27 rows 36 columns
Cbc0031I 57 added rows had average density of 36.964912
Cbc0013I At root node, 57 cuts changed objective from -42.652224 to -14.249858 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10412 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2056 row cuts average 106.8 elements, 0 column cuts (0 active)  in 0.115 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 448 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.055 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1088 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 313 row cuts average 62.8 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 96 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.615 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.5899 best solution, best possible -14.249858 (2.21 seconds)
Cbc0016I Integer solution of -7.36208 found by strong branching after 6181 iterations and 37 nodes (2.75 seconds)
Cbc0038I Full problem 105 rows 116 columns, reduced to 54 rows 64 columns
Cbc0010I After 42 nodes, 7 on tree, -7.36208 best solution, best possible -14.249858 (2.96 seconds)
Cbc0001I Search completed - best objective -7.362079999999999, took 7532 iterations and 66 nodes (3.07 seconds)
Cbc0032I Strong branching done 798 times (14554 iterations), fathomed 8 nodes and fixed 7 variables
Cbc0035I Maximum depth 18, 100 variables fixed on reduced cost
Total time (CPU seconds):       2.43   (Wallclock seconds):       3.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 135 (-20) rows, 74 (-4) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 9.56341e-06 - average 7.08401e-08, 8 fixed columns
Coin0506I Presolve 120 (-15) rows, 66 (-8) columns and 364 (-46) elements
Clp0029I End of values pass after 66 iterations
Clp0014I Perturbing problem by 0.001% of 2.8476665 - largest nonzero change 0 ( 0%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Coin0511I After Postsolve, objective 35.340061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Clp0000I Optimal - objective value 35.340061
Coin0511I After Postsolve, objective 35.340061, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 35.34006139 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 135 rows, 74 columns (73 integer (73 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.206%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 9.90182
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 13.3662 iterations 58
Cbc0038I Solution found of 13.3662
Cbc0038I Relaxing continuous gives 13.3662
Cbc0038I Rounding solution of 4.83013 is better than previous of 13.3662

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 80 rows 46 columns
Cbc0038I Mini branch and bound improved solution from 4.83013 to -7.02582 (0.06 seconds)
Cbc0038I Round again with cutoff of -9.85733
Cbc0038I Pass   2: suminf.    2.31056 (27) obj. -9.85733 iterations 36
Cbc0038I Pass   3: suminf.    2.16132 (46) obj. -9.85733 iterations 16
Cbc0038I Pass   4: suminf.    1.41062 (7) obj. -9.85733 iterations 55
Cbc0038I Pass   5: suminf.    1.41062 (7) obj. -9.85733 iterations 0
Cbc0038I Pass   6: suminf.    1.74262 (5) obj. -9.85733 iterations 18
Cbc0038I Pass   7: suminf.    1.32505 (7) obj. -9.85733 iterations 3
Cbc0038I Pass   8: suminf.    1.31649 (7) obj. -9.85733 iterations 1
Cbc0038I Pass   9: suminf.    1.40497 (5) obj. -9.85733 iterations 8
Cbc0038I Pass  10: suminf.    1.40497 (5) obj. -9.85733 iterations 0
Cbc0038I Pass  11: suminf.    1.28540 (4) obj. -9.85733 iterations 3
Cbc0038I Pass  12: suminf.    1.28540 (4) obj. -9.85733 iterations 0
Cbc0038I Pass  13: suminf.    1.89350 (4) obj. -9.85733 iterations 2
Cbc0038I Pass  14: suminf.    1.89350 (4) obj. -9.85733 iterations 0
Cbc0038I Pass  15: suminf.    1.07264 (5) obj. -9.85733 iterations 20
Cbc0038I Pass  16: suminf.    1.03867 (4) obj. -9.85733 iterations 9
Cbc0038I Pass  17: suminf.    1.22876 (4) obj. -9.85733 iterations 7
Cbc0038I Pass  18: suminf.    1.22876 (4) obj. -9.85733 iterations 1
Cbc0038I Pass  19: suminf.    1.33693 (3) obj. -9.85733 iterations 3
Cbc0038I Pass  20: suminf.    0.74957 (3) obj. -9.85733 iterations 2
Cbc0038I Pass  21: suminf.    3.07428 (9) obj. -9.85733 iterations 22
Cbc0038I Pass  22: suminf.    2.08360 (8) obj. -9.85733 iterations 7
Cbc0038I Pass  23: suminf.    1.92752 (6) obj. -9.85733 iterations 15
Cbc0038I Pass  24: suminf.    1.85813 (7) obj. -9.85733 iterations 1
Cbc0038I Pass  25: suminf.    2.09538 (7) obj. -9.85733 iterations 5
Cbc0038I Pass  26: suminf.    1.82182 (6) obj. -9.85733 iterations 12
Cbc0038I Pass  27: suminf.    1.82182 (6) obj. -9.85733 iterations 0
Cbc0038I Pass  28: suminf.    2.42783 (6) obj. -9.85733 iterations 2
Cbc0038I Pass  29: suminf.    2.12276 (8) obj. -9.85733 iterations 3
Cbc0038I Pass  30: suminf.    2.09899 (9) obj. -9.85733 iterations 1
Cbc0038I Pass  31: suminf.    2.70704 (9) obj. -9.85733 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 74 columns, reduced to 100 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -7.02582 - took 0.10 seconds
Cbc0012I Integer solution of -7.02582 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 80 rows 46 columns
Cbc0031I 27 added rows had average density of 48.407407
Cbc0013I At root node, 27 cuts changed objective from -35.340061 to -27.996759 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13819 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1886 row cuts average 73.5 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 39 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 172 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -7.02582 best solution, best possible -27.996759 (1.10 seconds)
Cbc0038I Full problem 135 rows 74 columns, reduced to 62 rows 35 columns
Cbc0012I Integer solution of -7.36208 found by RINS after 11322 iterations and 41 nodes (1.41 seconds)
Cbc0001I Search completed - best objective -7.362079999999999, took 12819 iterations and 78 nodes (1.49 seconds)
Cbc0032I Strong branching done 912 times (17962 iterations), fathomed 7 nodes and fixed 29 variables
Cbc0035I Maximum depth 33, 244 variables fixed on reduced cost
Total time (CPU seconds):       1.43   (Wallclock seconds):       1.50

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 115 (-38) columns and 1886 (-1418) elements
Clp1000I sum of infeasibilities 1.23184e-07 - average 1.18446e-09, 25 fixed columns
Coin0506I Presolve 79 (-25) rows, 89 (-26) columns and 1139 (-747) elements
Clp0006I 0  Obj 38.842799 Dual inf 4.2517918 (89)
Clp0014I Perturbing problem by 0.001% of 2.4124371 - largest nonzero change 2.8697389e-05 ( 0.0021869008%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 47.139799
Clp0000I Optimal - objective value 47.139799
Coin0511I After Postsolve, objective 47.139799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 47.139799
Clp0000I Optimal - objective value 47.139799
Clp0000I Optimal - objective value 47.139799
Clp0000I Optimal - objective value 47.139799
Coin0511I After Postsolve, objective 47.139799, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.13979881 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 116 columns (116 integer (116 of which binary)) and 1891 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.504%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 3.9802
Cbc0038I Pass   1: suminf.    2.20589 (26) obj. -37.3436 iterations 15
Cbc0038I Pass   2: suminf.    2.20589 (26) obj. -37.3436 iterations 1
Cbc0038I Solution found of 0.84574
Cbc0038I Rounding solution of 0.799916 is better than previous of 0.84574

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from 0.799916 to -1.69369 (0.03 seconds)
Cbc0038I Round again with cutoff of -5.78963
Cbc0038I Pass   3: suminf.    2.20589 (26) obj. -37.3436 iterations 0
Cbc0038I Pass   4: suminf.    2.20589 (26) obj. -37.3436 iterations 1
Cbc0038I Pass   5: suminf.    0.17058 (1) obj. -5.78963 iterations 26
Cbc0038I Pass   6: suminf.    0.11111 (1) obj. -6.26537 iterations 1
Cbc0038I Pass   7: suminf.    1.76409 (11) obj. -5.78963 iterations 28
Cbc0038I Pass   8: suminf.    0.58038 (7) obj. -7.37085 iterations 5
Cbc0038I Pass   9: suminf.    0.72681 (10) obj. -5.78963 iterations 22
Cbc0038I Pass  10: suminf.    0.27973 (2) obj. -6.35409 iterations 13
Cbc0038I Pass  11: suminf.    0.62691 (7) obj. -5.78963 iterations 8
Cbc0038I Pass  12: suminf.    2.52812 (19) obj. -5.78963 iterations 57
Cbc0038I Pass  13: suminf.    1.48193 (13) obj. -6.93011 iterations 11
Cbc0038I Pass  14: suminf.    0.90495 (8) obj. -5.78963 iterations 30
Cbc0038I Pass  15: suminf.    0.63831 (5) obj. -6.71192 iterations 8
Cbc0038I Pass  16: suminf.    1.79668 (7) obj. -5.78963 iterations 17
Cbc0038I Pass  17: suminf.    1.79668 (7) obj. -5.78963 iterations 0
Cbc0038I Pass  18: suminf.    1.92422 (7) obj. -5.78963 iterations 9
Cbc0038I Pass  19: suminf.    1.92422 (7) obj. -5.78963 iterations 0
Cbc0038I Pass  20: suminf.    1.18391 (5) obj. -5.78963 iterations 11
Cbc0038I Pass  21: suminf.    0.59393 (5) obj. -5.78963 iterations 8
Cbc0038I Pass  22: suminf.    0.45149 (3) obj. -5.78963 iterations 3
Cbc0038I Pass  23: suminf.    0.28711 (4) obj. -6.76579 iterations 2
Cbc0038I Pass  24: suminf.    1.68884 (5) obj. -5.78963 iterations 7
Cbc0038I Pass  25: suminf.    0.54704 (4) obj. -5.78963 iterations 4
Cbc0038I Pass  26: suminf.    0.45149 (3) obj. -5.78963 iterations 7
Cbc0038I Pass  27: suminf.    1.66994 (14) obj. -5.78963 iterations 31
Cbc0038I Pass  28: suminf.    1.66994 (14) obj. -5.78963 iterations 4
Cbc0038I Pass  29: suminf.    2.26606 (11) obj. -5.78963 iterations 20
Cbc0038I Pass  30: suminf.    2.26606 (11) obj. -5.78963 iterations 0
Cbc0038I Pass  31: suminf.    1.04368 (7) obj. -5.78963 iterations 21
Cbc0038I Pass  32: suminf.    1.04368 (7) obj. -5.78963 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 49 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -1.69369 to -6.5899 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.8024
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.20589 (26) obj. -37.3436 iterations 0
Cbc0038I Pass  33: suminf.    2.20589 (26) obj. -37.3436 iterations 1
Cbc0038I Pass  34: suminf.    0.67978 (7) obj. -13.8024 iterations 25
Cbc0038I Pass  35: suminf.    0.67978 (7) obj. -13.8024 iterations 0
Cbc0038I Pass  36: suminf.    1.19533 (4) obj. -13.8024 iterations 11
Cbc0038I Pass  37: suminf.    0.97607 (6) obj. -13.8024 iterations 4
Cbc0038I Pass  38: suminf.    0.97778 (6) obj. -13.8024 iterations 3
Cbc0038I Pass  39: suminf.    1.14003 (12) obj. -13.8024 iterations 4
Cbc0038I Pass  40: suminf.    1.14003 (12) obj. -13.8024 iterations 0
Cbc0038I Pass  41: suminf.    1.15578 (9) obj. -13.8024 iterations 18
Cbc0038I Pass  42: suminf.    0.82717 (8) obj. -13.9558 iterations 4
Cbc0038I Pass  43: suminf.    1.40624 (9) obj. -13.8024 iterations 5
Cbc0038I Pass  44: suminf.    2.00649 (13) obj. -13.8024 iterations 21
Cbc0038I Pass  45: suminf.    1.94670 (14) obj. -13.8024 iterations 8
Cbc0038I Pass  46: suminf.    1.59582 (8) obj. -13.8024 iterations 14
Cbc0038I Pass  47: suminf.    1.07766 (8) obj. -13.8024 iterations 3
Cbc0038I Pass  48: suminf.    1.35667 (10) obj. -13.8024 iterations 6
Cbc0038I Pass  49: suminf.    1.02566 (10) obj. -13.8024 iterations 3
Cbc0038I Pass  50: suminf.    1.17921 (13) obj. -13.8024 iterations 7
Cbc0038I Pass  51: suminf.    1.06880 (10) obj. -13.8024 iterations 4
Cbc0038I Pass  52: suminf.    1.14008 (13) obj. -13.8024 iterations 9
Cbc0038I Pass  53: suminf.    2.07230 (13) obj. -13.8024 iterations 23
Cbc0038I Pass  54: suminf.    1.21944 (12) obj. -13.8024 iterations 8
Cbc0038I Pass  55: suminf.    1.02956 (11) obj. -13.8024 iterations 13
Cbc0038I Pass  56: suminf.    1.02566 (10) obj. -13.8024 iterations 2
Cbc0038I Pass  57: suminf.    1.17921 (13) obj. -13.8024 iterations 6
Cbc0038I Pass  58: suminf.    1.06880 (10) obj. -13.8024 iterations 3
Cbc0038I Pass  59: suminf.    1.14008 (13) obj. -13.8024 iterations 8
Cbc0038I Pass  60: suminf.    3.44945 (20) obj. -13.8024 iterations 26
Cbc0038I Pass  61: suminf.    2.72888 (19) obj. -13.8024 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 116 columns, reduced to 22 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -6.5899 - took 0.08 seconds
Cbc0012I Integer solution of -6.5899 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 105 rows 116 columns, reduced to 27 rows 36 columns
Cbc0031I 57 added rows had average density of 36.964912
Cbc0013I At root node, 57 cuts changed objective from -42.652224 to -14.249858 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 10412 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2056 row cuts average 106.8 elements, 0 column cuts (0 active)  in 0.132 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 37 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 448 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1088 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 313 row cuts average 62.8 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 96 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.682 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -6.5899 best solution, best possible -14.249858 (2.54 seconds)
Cbc0016I Integer solution of -7.36208 found by strong branching after 6181 iterations and 37 nodes (3.15 seconds)
Cbc0038I Full problem 105 rows 116 columns, reduced to 54 rows 64 columns
Cbc0010I After 42 nodes, 7 on tree, -7.36208 best solution, best possible -14.249858 (3.39 seconds)
Cbc0001I Search completed - best objective -7.362079999999999, took 7532 iterations and 66 nodes (3.52 seconds)
Cbc0032I Strong branching done 798 times (14554 iterations), fathomed 8 nodes and fixed 7 variables
Cbc0035I Maximum depth 18, 100 variables fixed on reduced cost
Total time (CPU seconds):       2.72   (Wallclock seconds):       3.54

