Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 0.000175849 - average 1.27427e-06, 7 fixed columns
Coin0506I Presolve 119 (-19) rows, 65 (-10) columns and 360 (-58) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 34.253184
Clp0000I Optimal - objective value 34.253184
Coin0511I After Postsolve, objective 34.253184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.253184
Clp0000I Optimal - objective value 34.253184
Clp0000I Optimal - objective value 34.253184
Coin0511I After Postsolve, objective 34.253184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.25318399 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.1673
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.72401 iterations 52
Cbc0038I Solution found of 4.72401
Cbc0038I Relaxing continuous gives 4.72401
Cbc0038I Rounding solution of -4.57493 is better than previous of 4.72401

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -4.57493 to -7.44854 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.1291
Cbc0038I Pass   2: suminf.    2.07693 (8) obj. -10.1291 iterations 9
Cbc0038I Pass   3: suminf.    1.94684 (6) obj. -10.1291 iterations 8
Cbc0038I Pass   4: suminf.    1.71248 (7) obj. -10.1291 iterations 6
Cbc0038I Pass   5: suminf.    2.16438 (9) obj. -10.1291 iterations 10
Cbc0038I Pass   6: suminf.    2.35483 (7) obj. -10.1291 iterations 10
Cbc0038I Pass   7: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass   8: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass   9: suminf.    2.44469 (9) obj. -10.1291 iterations 6
Cbc0038I Pass  10: suminf.    1.52119 (7) obj. -10.1291 iterations 8
Cbc0038I Pass  11: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I Pass  12: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass  13: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass  14: suminf.    2.44469 (9) obj. -10.1291 iterations 5
Cbc0038I Pass  15: suminf.    1.52119 (7) obj. -10.1291 iterations 7
Cbc0038I Pass  16: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I Pass  17: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass  18: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass  19: suminf.    2.44469 (9) obj. -10.1291 iterations 5
Cbc0038I Pass  20: suminf.    1.52119 (7) obj. -10.1291 iterations 7
Cbc0038I Pass  21: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I Pass  22: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass  23: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass  24: suminf.    2.44469 (9) obj. -10.1291 iterations 5
Cbc0038I Pass  25: suminf.    1.52119 (7) obj. -10.1291 iterations 7
Cbc0038I Pass  26: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I Pass  27: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass  28: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass  29: suminf.    2.44469 (9) obj. -10.1291 iterations 5
Cbc0038I Pass  30: suminf.    1.52119 (7) obj. -10.1291 iterations 7
Cbc0038I Pass  31: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -7.44854 - took 0.06 seconds
Cbc0012I Integer solution of -7.4485427 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0031I 28 added rows had average density of 55.964286
Cbc0013I At root node, 28 cuts changed objective from -34.253184 to -26.777021 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12748 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1975 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.4485427 best solution, best possible -26.777021 (0.99 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 68 rows 39 columns
Cbc0012I Integer solution of -8.5562827 found by RINS after 9828 iterations and 41 nodes (1.33 seconds)
Cbc0001I Search completed - best objective -8.556282700000001, took 11127 iterations and 78 nodes (1.39 seconds)
Cbc0032I Strong branching done 868 times (16930 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 37, 135 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       1.40

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-50) rows, 114 (-38) columns and 1825 (-1478) elements
Clp1000I sum of infeasibilities 9.72244e-08 - average 9.3485e-10, 57 fixed columns
Coin0506I Presolve 49 (-55) rows, 57 (-57) columns and 206 (-1619) elements
Clp0006I 0  Obj -17.412821 Dual inf 0.7604958 (57)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 3.5653133 - largest nonzero change 3.1632889e-05 ( 0.00095415479%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value -9.4653065
Clp0000I Optimal - objective value -9.4653065
Coin0511I After Postsolve, objective -9.4653065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.4653065 Dual inf 56.469756 (40)
Clp0014I Perturbing problem by 0.001% of 1.8968209 - largest nonzero change 2.4100946e-05 ( 0.0018056464%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 43.077374
Clp0000I Optimal - objective value 43.077374
Clp0000I Optimal - objective value 43.077374
Coin0511I After Postsolve, objective 43.077374, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.07737363 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 114 columns (114 integer (114 of which binary)) and 1827 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.477%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 5.80853
Cbc0038I Pass   1: suminf.    2.83997 (29) obj. -29.4738 iterations 29
Cbc0038I Pass   2: suminf.    2.30978 (27) obj. -25.8719 iterations 3
Cbc0038I Pass   3: suminf.    1.08655 (16) obj. -10.8349 iterations 11
Cbc0038I Solution found of 6.81604
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 6.81604 to -0.401205 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.90257
Cbc0038I Pass   4: suminf.    2.83997 (29) obj. -29.4738 iterations 0
Cbc0038I Pass   5: suminf.    2.30978 (27) obj. -25.8719 iterations 3
Cbc0038I Pass   6: suminf.    1.18030 (17) obj. -11.7412 iterations 10
Cbc0038I Pass   7: suminf.    1.08271 (5) obj. -3.90257 iterations 26
Cbc0038I Pass   8: suminf.    0.92561 (5) obj. -3.90257 iterations 2
Cbc0038I Pass   9: suminf.    0.73171 (2) obj. -3.90257 iterations 16
Cbc0038I Pass  10: suminf.    0.57639 (4) obj. -3.90257 iterations 6
Cbc0038I Pass  11: suminf.    1.73778 (9) obj. -3.90257 iterations 25
Cbc0038I Pass  12: suminf.    1.03695 (11) obj. -3.90257 iterations 10
Cbc0038I Pass  13: suminf.    1.22281 (7) obj. -3.90257 iterations 17
Cbc0038I Pass  14: suminf.    1.21253 (9) obj. -3.90257 iterations 5
Cbc0038I Pass  15: suminf.    1.07633 (6) obj. -3.90257 iterations 5
Cbc0038I Pass  16: suminf.    0.71485 (6) obj. -4.62552 iterations 5
Cbc0038I Pass  17: suminf.    1.07633 (6) obj. -3.90257 iterations 5
Cbc0038I Pass  18: suminf.    3.25132 (23) obj. -3.90257 iterations 37
Cbc0038I Pass  19: suminf.    1.44096 (13) obj. -3.90257 iterations 15
Cbc0038I Pass  20: suminf.    0.85148 (10) obj. -6.96139 iterations 4
Cbc0038I Pass  21: suminf.    0.71295 (8) obj. -3.90257 iterations 20
Cbc0038I Pass  22: suminf.    0.71295 (8) obj. -3.90257 iterations 0
Cbc0038I Pass  23: suminf.    1.07063 (5) obj. -3.90257 iterations 15
Cbc0038I Pass  24: suminf.    0.83296 (9) obj. -3.90257 iterations 9
Cbc0038I Pass  25: suminf.    0.91904 (7) obj. -3.90257 iterations 14
Cbc0038I Pass  26: suminf.    0.91058 (8) obj. -3.90257 iterations 7
Cbc0038I Pass  27: suminf.    0.91904 (7) obj. -3.90257 iterations 7
Cbc0038I Pass  28: suminf.    2.37328 (16) obj. -3.90257 iterations 25
Cbc0038I Pass  29: suminf.    2.09072 (16) obj. -3.90257 iterations 10
Cbc0038I Pass  30: suminf.    0.99754 (7) obj. -3.90257 iterations 22
Cbc0038I Pass  31: suminf.    0.66429 (6) obj. -4.1585 iterations 7
Cbc0038I Pass  32: suminf.    0.80658 (8) obj. -3.90257 iterations 8
Cbc0038I Pass  33: suminf.    0.80658 (8) obj. -3.90257 iterations 0
Cbc0038I Rounding solution of -0.805243 is better than previous of -0.401205

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 56 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -0.805243 to -8.14553 (0.07 seconds)
Cbc0038I Round again with cutoff of -13.5993
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.83997 (29) obj. -29.4738 iterations 0
Cbc0038I Pass  34: suminf.    2.30978 (27) obj. -25.8719 iterations 8
Cbc0038I Pass  35: suminf.    1.60929 (14) obj. -13.5993 iterations 25
Cbc0038I Pass  36: suminf.    1.60929 (14) obj. -13.5993 iterations 1
Cbc0038I Pass  37: suminf.    1.41330 (12) obj. -13.5993 iterations 32
Cbc0038I Pass  38: suminf.    0.91900 (7) obj. -13.5993 iterations 9
Cbc0038I Pass  39: suminf.    1.24243 (7) obj. -13.5993 iterations 8
Cbc0038I Pass  40: suminf.    1.52260 (11) obj. -13.5993 iterations 17
Cbc0038I Pass  41: suminf.    1.19373 (9) obj. -14.1724 iterations 5
Cbc0038I Pass  42: suminf.    1.24646 (7) obj. -13.5993 iterations 19
Cbc0038I Pass  43: suminf.    1.04864 (7) obj. -13.9949 iterations 8
Cbc0038I Pass  44: suminf.    2.80829 (14) obj. -13.5993 iterations 15
Cbc0038I Pass  45: suminf.    2.80829 (14) obj. -13.5993 iterations 1
Cbc0038I Pass  46: suminf.    1.35082 (8) obj. -13.5993 iterations 17
Cbc0038I Pass  47: suminf.    1.35082 (8) obj. -13.5993 iterations 3
Cbc0038I Pass  48: suminf.    1.75585 (12) obj. -13.5993 iterations 8
Cbc0038I Pass  49: suminf.    1.75585 (12) obj. -13.5993 iterations 4
Cbc0038I Pass  50: suminf.    2.58773 (16) obj. -13.5993 iterations 11
Cbc0038I Pass  51: suminf.    2.58773 (16) obj. -13.5993 iterations 1
Cbc0038I Pass  52: suminf.    2.32673 (15) obj. -13.5993 iterations 8
Cbc0038I Pass  53: suminf.    2.03961 (15) obj. -13.5993 iterations 4
Cbc0038I Pass  54: suminf.    1.77065 (15) obj. -13.5993 iterations 4
Cbc0038I Pass  55: suminf.    2.32673 (15) obj. -13.5993 iterations 7
Cbc0038I Pass  56: suminf.    1.95844 (15) obj. -13.5993 iterations 2
Cbc0038I Pass  57: suminf.    1.70185 (15) obj. -13.5993 iterations 4
Cbc0038I Pass  58: suminf.    2.32673 (15) obj. -13.5993 iterations 12
Cbc0038I Pass  59: suminf.    2.03961 (15) obj. -13.5993 iterations 5
Cbc0038I Pass  60: suminf.    1.77065 (15) obj. -13.5993 iterations 4
Cbc0038I Pass  61: suminf.    2.32673 (15) obj. -13.5993 iterations 8
Cbc0038I Pass  62: suminf.    1.95844 (15) obj. -13.5993 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -8.14553 - took 0.08 seconds
Cbc0012I Integer solution of -8.145535 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 31 rows 36 columns
Cbc0031I 58 added rows had average density of 27.5
Cbc0013I At root node, 58 cuts changed objective from -35.413972 to -14.431095 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14033 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1855 row cuts average 106.8 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 714 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1305 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 352 row cuts average 52.7 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.518 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.145535 best solution, best possible -14.431095 (2.26 seconds)
Cbc0016I Integer solution of -8.1560627 found by strong branching after 5346 iterations and 1 nodes (2.27 seconds)
Cbc0016I Integer solution of -8.5562827 found by strong branching after 5346 iterations and 1 nodes (2.27 seconds)
Cbc0001I Search completed - best objective -8.556282700000001, took 6877 iterations and 18 nodes (2.82 seconds)
Cbc0032I Strong branching done 388 times (8998 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 8, 57 variables fixed on reduced cost
Total time (CPU seconds):       2.17   (Wallclock seconds):       2.83

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-17) rows, 75 (-3) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 0.000175849 - average 1.27427e-06, 7 fixed columns
Coin0506I Presolve 119 (-19) rows, 65 (-10) columns and 360 (-58) elements
Clp0029I End of values pass after 65 iterations
Clp0000I Optimal - objective value 34.253184
Clp0000I Optimal - objective value 34.253184
Coin0511I After Postsolve, objective 34.253184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 34.253184
Clp0000I Optimal - objective value 34.253184
Clp0000I Optimal - objective value 34.253184
Coin0511I After Postsolve, objective 34.253184, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 34.25318399 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 138 rows, 75 columns (74 integer (74 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.201%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 10.1673
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 4.72401 iterations 52
Cbc0038I Solution found of 4.72401
Cbc0038I Relaxing continuous gives 4.72401
Cbc0038I Rounding solution of -4.57493 is better than previous of 4.72401

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -4.57493 to -7.44854 (0.04 seconds)
Cbc0038I Round again with cutoff of -10.1291
Cbc0038I Pass   2: suminf.    2.07693 (8) obj. -10.1291 iterations 9
Cbc0038I Pass   3: suminf.    1.94684 (6) obj. -10.1291 iterations 8
Cbc0038I Pass   4: suminf.    1.71248 (7) obj. -10.1291 iterations 6
Cbc0038I Pass   5: suminf.    2.16438 (9) obj. -10.1291 iterations 10
Cbc0038I Pass   6: suminf.    2.35483 (7) obj. -10.1291 iterations 10
Cbc0038I Pass   7: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass   8: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass   9: suminf.    2.44469 (9) obj. -10.1291 iterations 6
Cbc0038I Pass  10: suminf.    1.52119 (7) obj. -10.1291 iterations 8
Cbc0038I Pass  11: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I Pass  12: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass  13: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass  14: suminf.    2.44469 (9) obj. -10.1291 iterations 5
Cbc0038I Pass  15: suminf.    1.52119 (7) obj. -10.1291 iterations 7
Cbc0038I Pass  16: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I Pass  17: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass  18: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass  19: suminf.    2.44469 (9) obj. -10.1291 iterations 5
Cbc0038I Pass  20: suminf.    1.52119 (7) obj. -10.1291 iterations 7
Cbc0038I Pass  21: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I Pass  22: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass  23: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass  24: suminf.    2.44469 (9) obj. -10.1291 iterations 5
Cbc0038I Pass  25: suminf.    1.52119 (7) obj. -10.1291 iterations 7
Cbc0038I Pass  26: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I Pass  27: suminf.    2.17617 (9) obj. -10.1291 iterations 2
Cbc0038I Pass  28: suminf.    2.02925 (9) obj. -10.1291 iterations 1
Cbc0038I Pass  29: suminf.    2.44469 (9) obj. -10.1291 iterations 5
Cbc0038I Pass  30: suminf.    1.52119 (7) obj. -10.1291 iterations 7
Cbc0038I Pass  31: suminf.    2.35655 (7) obj. -10.1291 iterations 11
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -7.44854 - took 0.06 seconds
Cbc0012I Integer solution of -7.4485427 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 85 rows 48 columns
Cbc0031I 28 added rows had average density of 55.964286
Cbc0013I At root node, 28 cuts changed objective from -34.253184 to -26.777021 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12748 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1975 row cuts average 74.7 elements, 0 column cuts (0 active)  in 0.092 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 76 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 142 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -7.4485427 best solution, best possible -26.777021 (0.97 seconds)
Cbc0038I Full problem 138 rows 75 columns, reduced to 68 rows 39 columns
Cbc0012I Integer solution of -8.5562827 found by RINS after 9828 iterations and 41 nodes (1.30 seconds)
Cbc0001I Search completed - best objective -8.556282700000001, took 11127 iterations and 78 nodes (1.36 seconds)
Cbc0032I Strong branching done 868 times (16930 iterations), fathomed 2 nodes and fixed 13 variables
Cbc0035I Maximum depth 37, 135 variables fixed on reduced cost
Total time (CPU seconds):       1.34   (Wallclock seconds):       1.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 104 (-51) rows, 114 (-39) columns and 1825 (-1479) elements
Clp1000I sum of infeasibilities 9.72244e-08 - average 9.3485e-10, 57 fixed columns
Coin0506I Presolve 49 (-55) rows, 57 (-57) columns and 206 (-1619) elements
Clp0006I 0  Obj -17.412821 Dual inf 0.7604958 (57)
Clp0029I End of values pass after 57 iterations
Clp0014I Perturbing problem by 0.001% of 3.5653133 - largest nonzero change 3.1632889e-05 ( 0.00095415479%) - largest zero change 2.5816127e-05
Clp0000I Optimal - objective value -9.4653065
Clp0000I Optimal - objective value -9.4653065
Coin0511I After Postsolve, objective -9.4653065, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -9.4653065 Dual inf 56.469756 (40)
Clp0014I Perturbing problem by 0.001% of 1.8968209 - largest nonzero change 2.4100946e-05 ( 0.0018056464%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 43.077374
Clp0000I Optimal - objective value 43.077374
Clp0000I Optimal - objective value 43.077374
Coin0511I After Postsolve, objective 43.077374, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 43.07737363 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 104 rows, 114 columns (114 integer (114 of which binary)) and 1827 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.477%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 5.80853
Cbc0038I Pass   1: suminf.    2.83997 (29) obj. -29.4738 iterations 29
Cbc0038I Pass   2: suminf.    2.30978 (27) obj. -25.8719 iterations 3
Cbc0038I Pass   3: suminf.    1.08655 (16) obj. -10.8349 iterations 11
Cbc0038I Solution found of 6.81604
Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound improved solution from 6.81604 to -0.401205 (0.03 seconds)
Cbc0038I Round again with cutoff of -3.90257
Cbc0038I Pass   4: suminf.    2.83997 (29) obj. -29.4738 iterations 0
Cbc0038I Pass   5: suminf.    2.30978 (27) obj. -25.8719 iterations 3
Cbc0038I Pass   6: suminf.    1.18030 (17) obj. -11.7412 iterations 10
Cbc0038I Pass   7: suminf.    1.08271 (5) obj. -3.90257 iterations 26
Cbc0038I Pass   8: suminf.    0.92561 (5) obj. -3.90257 iterations 2
Cbc0038I Pass   9: suminf.    0.73171 (2) obj. -3.90257 iterations 16
Cbc0038I Pass  10: suminf.    0.57639 (4) obj. -3.90257 iterations 6
Cbc0038I Pass  11: suminf.    1.73778 (9) obj. -3.90257 iterations 25
Cbc0038I Pass  12: suminf.    1.03695 (11) obj. -3.90257 iterations 10
Cbc0038I Pass  13: suminf.    1.22281 (7) obj. -3.90257 iterations 17
Cbc0038I Pass  14: suminf.    1.21253 (9) obj. -3.90257 iterations 5
Cbc0038I Pass  15: suminf.    1.07633 (6) obj. -3.90257 iterations 5
Cbc0038I Pass  16: suminf.    0.71485 (6) obj. -4.62552 iterations 5
Cbc0038I Pass  17: suminf.    1.07633 (6) obj. -3.90257 iterations 5
Cbc0038I Pass  18: suminf.    3.25132 (23) obj. -3.90257 iterations 37
Cbc0038I Pass  19: suminf.    1.44096 (13) obj. -3.90257 iterations 15
Cbc0038I Pass  20: suminf.    0.85148 (10) obj. -6.96139 iterations 4
Cbc0038I Pass  21: suminf.    0.71295 (8) obj. -3.90257 iterations 20
Cbc0038I Pass  22: suminf.    0.71295 (8) obj. -3.90257 iterations 0
Cbc0038I Pass  23: suminf.    1.07063 (5) obj. -3.90257 iterations 15
Cbc0038I Pass  24: suminf.    0.83296 (9) obj. -3.90257 iterations 9
Cbc0038I Pass  25: suminf.    0.91904 (7) obj. -3.90257 iterations 14
Cbc0038I Pass  26: suminf.    0.91058 (8) obj. -3.90257 iterations 7
Cbc0038I Pass  27: suminf.    0.91904 (7) obj. -3.90257 iterations 7
Cbc0038I Pass  28: suminf.    2.37328 (16) obj. -3.90257 iterations 25
Cbc0038I Pass  29: suminf.    2.09072 (16) obj. -3.90257 iterations 10
Cbc0038I Pass  30: suminf.    0.99754 (7) obj. -3.90257 iterations 22
Cbc0038I Pass  31: suminf.    0.66429 (6) obj. -4.1585 iterations 7
Cbc0038I Pass  32: suminf.    0.80658 (8) obj. -3.90257 iterations 8
Cbc0038I Pass  33: suminf.    0.80658 (8) obj. -3.90257 iterations 0
Cbc0038I Rounding solution of -0.805243 is better than previous of -0.401205

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 104 rows 114 columns, reduced to 56 rows 62 columns
Cbc0038I Mini branch and bound improved solution from -0.805243 to -8.14553 (0.08 seconds)
Cbc0038I Round again with cutoff of -13.5993
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.83997 (29) obj. -29.4738 iterations 0
Cbc0038I Pass  34: suminf.    2.30978 (27) obj. -25.8719 iterations 8
Cbc0038I Pass  35: suminf.    1.60929 (14) obj. -13.5993 iterations 25
Cbc0038I Pass  36: suminf.    1.60929 (14) obj. -13.5993 iterations 1
Cbc0038I Pass  37: suminf.    1.41330 (12) obj. -13.5993 iterations 32
Cbc0038I Pass  38: suminf.    0.91900 (7) obj. -13.5993 iterations 9
Cbc0038I Pass  39: suminf.    1.24243 (7) obj. -13.5993 iterations 8
Cbc0038I Pass  40: suminf.    1.52260 (11) obj. -13.5993 iterations 17
Cbc0038I Pass  41: suminf.    1.19373 (9) obj. -14.1724 iterations 5
Cbc0038I Pass  42: suminf.    1.24646 (7) obj. -13.5993 iterations 19
Cbc0038I Pass  43: suminf.    1.04864 (7) obj. -13.9949 iterations 8
Cbc0038I Pass  44: suminf.    2.80829 (14) obj. -13.5993 iterations 15
Cbc0038I Pass  45: suminf.    2.80829 (14) obj. -13.5993 iterations 1
Cbc0038I Pass  46: suminf.    1.35082 (8) obj. -13.5993 iterations 17
Cbc0038I Pass  47: suminf.    1.35082 (8) obj. -13.5993 iterations 3
Cbc0038I Pass  48: suminf.    1.75585 (12) obj. -13.5993 iterations 8
Cbc0038I Pass  49: suminf.    1.75585 (12) obj. -13.5993 iterations 4
Cbc0038I Pass  50: suminf.    2.58773 (16) obj. -13.5993 iterations 11
Cbc0038I Pass  51: suminf.    2.58773 (16) obj. -13.5993 iterations 1
Cbc0038I Pass  52: suminf.    2.32673 (15) obj. -13.5993 iterations 8
Cbc0038I Pass  53: suminf.    2.03961 (15) obj. -13.5993 iterations 4
Cbc0038I Pass  54: suminf.    1.77065 (15) obj. -13.5993 iterations 4
Cbc0038I Pass  55: suminf.    2.32673 (15) obj. -13.5993 iterations 7
Cbc0038I Pass  56: suminf.    1.95844 (15) obj. -13.5993 iterations 2
Cbc0038I Pass  57: suminf.    1.70185 (15) obj. -13.5993 iterations 4
Cbc0038I Pass  58: suminf.    2.32673 (15) obj. -13.5993 iterations 12
Cbc0038I Pass  59: suminf.    2.03961 (15) obj. -13.5993 iterations 5
Cbc0038I Pass  60: suminf.    1.77065 (15) obj. -13.5993 iterations 4
Cbc0038I Pass  61: suminf.    2.32673 (15) obj. -13.5993 iterations 8
Cbc0038I Pass  62: suminf.    1.95844 (15) obj. -13.5993 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -8.14553 - took 0.08 seconds
Cbc0012I Integer solution of -8.145535 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 104 rows 114 columns, reduced to 31 rows 36 columns
Cbc0031I 58 added rows had average density of 27.5
Cbc0013I At root node, 58 cuts changed objective from -35.413972 to -14.431095 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14033 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1855 row cuts average 106.8 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 714 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.077 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1305 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 352 row cuts average 52.7 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 72 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.536 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -8.145535 best solution, best possible -14.431095 (2.39 seconds)
Cbc0016I Integer solution of -8.1560627 found by strong branching after 5346 iterations and 1 nodes (2.41 seconds)
Cbc0016I Integer solution of -8.5562827 found by strong branching after 5346 iterations and 1 nodes (2.41 seconds)
Cbc0001I Search completed - best objective -8.556282700000001, took 6877 iterations and 18 nodes (2.97 seconds)
Cbc0032I Strong branching done 388 times (8998 iterations), fathomed 2 nodes and fixed 1 variables
Cbc0035I Maximum depth 8, 57 variables fixed on reduced cost
Total time (CPU seconds):       2.27   (Wallclock seconds):       2.99

