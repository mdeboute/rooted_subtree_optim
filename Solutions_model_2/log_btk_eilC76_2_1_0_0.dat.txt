Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 65 (-13) columns and 366 (-87) elements
Clp1000I sum of infeasibilities 1.56798e-05 - average 1.29586e-07, 12 fixed columns
Coin0506I Presolve 97 (-24) rows, 53 (-12) columns and 294 (-72) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 2.9092099 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Coin0511I After Postsolve, objective 71.8008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Coin0511I After Postsolve, objective 71.8008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.80079954 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 121 rows, 65 columns (64 integer (64 of which binary)) and 366 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.21521
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -27.2461 iterations 24
Cbc0038I Solution found of -27.2461
Cbc0038I Relaxing continuous gives -27.2461
Cbc0038I Rounding solution of -33.2427 is better than previous of -27.2461

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -33.2427 to -45.0084 (0.02 seconds)
Cbc0038I Round again with cutoff of -47.6877
Cbc0038I Pass   2: suminf.    0.76538 (5) obj. -47.6877 iterations 5
Cbc0038I Pass   3: suminf.    0.76538 (5) obj. -47.6877 iterations 0
Cbc0038I Pass   4: suminf.    1.17308 (3) obj. -47.6877 iterations 11
Cbc0038I Pass   5: suminf.    0.60602 (2) obj. -47.6877 iterations 4
Cbc0038I Pass   6: suminf.    0.60602 (2) obj. -47.6877 iterations 0
Cbc0038I Pass   7: suminf.    0.59132 (2) obj. -47.6877 iterations 1
Cbc0038I Pass   8: suminf.    1.61867 (6) obj. -47.6877 iterations 6
Cbc0038I Pass   9: suminf.    0.85431 (5) obj. -47.6877 iterations 5
Cbc0038I Pass  10: suminf.    0.93551 (3) obj. -47.6877 iterations 7
Cbc0038I Pass  11: suminf.    0.93551 (3) obj. -47.6877 iterations 0
Cbc0038I Pass  12: suminf.    0.60602 (2) obj. -47.6877 iterations 4
Cbc0038I Pass  13: suminf.    0.59132 (2) obj. -47.6877 iterations 1
Cbc0038I Pass  14: suminf.    1.53189 (5) obj. -47.6877 iterations 7
Cbc0038I Pass  15: suminf.    1.16189 (5) obj. -47.6877 iterations 4
Cbc0038I Pass  16: suminf.    3.37750 (11) obj. -47.6877 iterations 12
Cbc0038I Pass  17: suminf.    2.55698 (9) obj. -47.6877 iterations 3
Cbc0038I Pass  18: suminf.    2.65613 (8) obj. -47.6877 iterations 13
Cbc0038I Pass  19: suminf.    1.71330 (5) obj. -47.6877 iterations 4
Cbc0038I Pass  20: suminf.    1.05239 (4) obj. -47.6877 iterations 8
Cbc0038I Pass  21: suminf.    1.05239 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  22: suminf.    1.32435 (4) obj. -47.6877 iterations 5
Cbc0038I Pass  23: suminf.    0.94823 (4) obj. -47.6877 iterations 1
Cbc0038I Pass  24: suminf.    0.94823 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  25: suminf.    1.36380 (4) obj. -47.6877 iterations 3
Cbc0038I Pass  26: suminf.    1.05239 (4) obj. -47.6877 iterations 2
Cbc0038I Pass  27: suminf.    1.05239 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  28: suminf.    1.32435 (4) obj. -47.6877 iterations 5
Cbc0038I Pass  29: suminf.    0.94823 (4) obj. -47.6877 iterations 1
Cbc0038I Pass  30: suminf.    0.94823 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  31: suminf.    1.36380 (4) obj. -47.6877 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -45.0084 to -45.3574 (0.04 seconds)
Cbc0038I Round again with cutoff of -52.5103
Cbc0038I Pass  31: suminf.    1.16401 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  32: suminf.    1.16401 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  33: suminf.    1.22438 (3) obj. -52.5103 iterations 11
Cbc0038I Pass  34: suminf.    0.56178 (2) obj. -52.5103 iterations 4
Cbc0038I Pass  35: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  36: suminf.    3.78683 (12) obj. -52.5103 iterations 17
Cbc0038I Pass  37: suminf.    1.37224 (7) obj. -52.5103 iterations 10
Cbc0038I Pass  38: suminf.    2.54475 (8) obj. -52.5103 iterations 12
Cbc0038I Pass  39: suminf.    1.13065 (6) obj. -52.5103 iterations 5
Cbc0038I Pass  40: suminf.    1.59696 (6) obj. -52.5103 iterations 3
Cbc0038I Pass  41: suminf.    1.13065 (6) obj. -52.5103 iterations 2
Cbc0038I Pass  42: suminf.    2.30233 (6) obj. -52.5103 iterations 5
Cbc0038I Pass  43: suminf.    2.13619 (9) obj. -52.5103 iterations 12
Cbc0038I Pass  44: suminf.    1.86609 (7) obj. -52.5103 iterations 9
Cbc0038I Pass  45: suminf.    1.02881 (4) obj. -52.5103 iterations 12
Cbc0038I Pass  46: suminf.    0.91399 (3) obj. -52.5103 iterations 4
Cbc0038I Pass  47: suminf.    1.30401 (3) obj. -52.5103 iterations 3
Cbc0038I Pass  48: suminf.    0.56178 (2) obj. -52.5103 iterations 2
Cbc0038I Pass  49: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  50: suminf.    0.56178 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  51: suminf.    2.28529 (9) obj. -52.5103 iterations 9
Cbc0038I Pass  52: suminf.    1.01761 (5) obj. -52.5103 iterations 5
Cbc0038I Pass  53: suminf.    1.01761 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  54: suminf.    1.04981 (4) obj. -52.5103 iterations 7
Cbc0038I Pass  55: suminf.    0.91399 (3) obj. -52.5103 iterations 4
Cbc0038I Pass  56: suminf.    1.30401 (3) obj. -52.5103 iterations 3
Cbc0038I Pass  57: suminf.    0.56178 (2) obj. -52.5103 iterations 2
Cbc0038I Pass  58: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  59: suminf.    0.56178 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  60: suminf.    2.60657 (11) obj. -52.5103 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -45.3574 - took 0.04 seconds
Cbc0012I Integer solution of -45.357387 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 121 rows 65 columns, reduced to 39 rows 22 columns
Cbc0031I 10 added rows had average density of 40.8
Cbc0013I At root node, 10 cuts changed objective from -71.8008 to -55.112928 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1142 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 564 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0001I Search completed - best objective -45.357387, took 2299 iterations and 12 nodes (0.28 seconds)
Cbc0032I Strong branching done 96 times (973 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 87 variables fixed on reduced cost
Total time (CPU seconds):       0.27   (Wallclock seconds):       0.28

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-54) rows, 107 (-45) columns and 1632 (-1671) elements
Clp1000I sum of infeasibilities 1.18577e-07 - average 1.18577e-09, 61 fixed columns
Coin0506I Presolve 39 (-61) rows, 45 (-62) columns and 164 (-1468) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 2.0570108 - largest nonzero change 1.9242665e-05 ( 0.00089819337%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 21.294741
Clp0000I Optimal - objective value 21.294741
Coin0511I After Postsolve, objective 21.294741, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0801349 - largest nonzero change 2.2619731e-05 ( 0.0015823696%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 96.874473
Clp0000I Optimal - objective value 96.874473
Clp0000I Optimal - objective value 96.874473
Coin0511I After Postsolve, objective 96.874473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.8744726 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 108 columns (108 integer (108 of which binary)) and 1641 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.469%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 5.70236
Cbc0038I Pass   1: suminf.    2.14385 (25) obj. -66.8271 iterations 17
Cbc0038I Pass   2: suminf.    1.85906 (24) obj. -63.6372 iterations 2
Cbc0038I Pass   3: suminf.    0.27773 (7) obj. -30.3716 iterations 17
Cbc0038I Solution found of -21.7172
Cbc0038I Rounding solution of -24.17 is better than previous of -21.7172

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 108 columns, reduced to 33 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -24.17 to -37.1935 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.0465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.14385 (25) obj. -66.8271 iterations 0
Cbc0038I Pass   5: suminf.    1.85906 (24) obj. -63.6372 iterations 8
Cbc0038I Pass   6: suminf.    0.46903 (5) obj. -42.0465 iterations 22
Cbc0038I Pass   7: suminf.    0.40551 (5) obj. -42.0465 iterations 1
Cbc0038I Pass   8: suminf.    0.68190 (2) obj. -42.0465 iterations 6
Cbc0038I Pass   9: suminf.    0.28295 (1) obj. -42.0465 iterations 2
Cbc0038I Pass  10: suminf.    0.45161 (1) obj. -44.9393 iterations 1
Cbc0038I Pass  11: suminf.    1.33457 (8) obj. -42.0465 iterations 32
Cbc0038I Pass  12: suminf.    0.77913 (6) obj. -42.0465 iterations 17
Cbc0038I Pass  13: suminf.    0.44282 (6) obj. -46.7548 iterations 2
Cbc0038I Pass  14: suminf.    0.09924 (1) obj. -42.0465 iterations 6
Cbc0038I Pass  15: suminf.    0.09524 (1) obj. -42.1024 iterations 2
Cbc0038I Pass  16: suminf.    1.58098 (16) obj. -42.0465 iterations 23
Cbc0038I Pass  17: suminf.    1.31920 (15) obj. -42.0465 iterations 2
Cbc0038I Pass  18: suminf.    1.02985 (17) obj. -42.0465 iterations 22
Cbc0038I Pass  19: suminf.    0.25761 (4) obj. -42.0465 iterations 9
Cbc0038I Pass  20: suminf.    0.57729 (2) obj. -42.0465 iterations 8
Cbc0038I Pass  21: suminf.    0.13562 (2) obj. -42.0465 iterations 3
Cbc0038I Pass  22: suminf.    0.88602 (7) obj. -42.0465 iterations 12
Cbc0038I Pass  23: suminf.    0.81185 (5) obj. -42.0465 iterations 3
Cbc0038I Pass  24: suminf.    0.57729 (2) obj. -42.0465 iterations 7
Cbc0038I Pass  25: suminf.    0.13562 (2) obj. -42.0465 iterations 1
Cbc0038I Pass  26: suminf.    0.57729 (2) obj. -42.0465 iterations 4
Cbc0038I Pass  27: suminf.    1.03593 (10) obj. -42.0465 iterations 15
Cbc0038I Pass  28: suminf.    0.78124 (7) obj. -42.2478 iterations 8
Cbc0038I Pass  29: suminf.    0.99451 (3) obj. -42.0465 iterations 12
Cbc0038I Pass  30: suminf.    0.11111 (1) obj. -42.638 iterations 10
Cbc0038I Pass  31: suminf.    0.74849 (2) obj. -42.0465 iterations 2
Cbc0038I Pass  32: suminf.    0.70440 (5) obj. -42.0465 iterations 19
Cbc0038I Pass  33: suminf.    0.23552 (4) obj. -43.8979 iterations 7
Cbc0038I Rounding solution of -39.8886 is better than previous of -37.1935

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 108 columns, reduced to 54 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -50.7815
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.14385 (25) obj. -66.8271 iterations 0
Cbc0038I Pass  34: suminf.    1.85906 (24) obj. -63.6372 iterations 8
Cbc0038I Pass  35: suminf.    1.15923 (12) obj. -50.7815 iterations 16
Cbc0038I Pass  36: suminf.    1.15923 (12) obj. -50.7815 iterations 0
Cbc0038I Pass  37: suminf.    0.45146 (2) obj. -50.7815 iterations 19
Cbc0038I Pass  38: suminf.    0.17973 (2) obj. -50.7815 iterations 1
Cbc0038I Pass  39: suminf.    0.45146 (2) obj. -50.7815 iterations 4
Cbc0038I Pass  40: suminf.    1.27326 (22) obj. -50.7815 iterations 20
Cbc0038I Pass  41: suminf.    0.56587 (7) obj. -50.7815 iterations 13
Cbc0038I Pass  42: suminf.    0.39986 (4) obj. -50.7815 iterations 11
Cbc0038I Pass  43: suminf.    0.39986 (4) obj. -50.7815 iterations 2
Cbc0038I Pass  44: suminf.    0.41101 (4) obj. -50.7815 iterations 6
Cbc0038I Pass  45: suminf.    0.41101 (4) obj. -50.7815 iterations 3
Cbc0038I Pass  46: suminf.    0.39986 (4) obj. -50.7815 iterations 5
Cbc0038I Pass  47: suminf.    1.00434 (6) obj. -50.7815 iterations 21
Cbc0038I Pass  48: suminf.    0.52147 (6) obj. -50.7815 iterations 6
Cbc0038I Pass  49: suminf.    0.64202 (5) obj. -50.7815 iterations 7
Cbc0038I Pass  50: suminf.    0.53923 (5) obj. -50.7815 iterations 4
Cbc0038I Pass  51: suminf.    0.89098 (10) obj. -50.7815 iterations 11
Cbc0038I Pass  52: suminf.    0.78541 (9) obj. -50.7815 iterations 8
Cbc0038I Pass  53: suminf.    0.64202 (5) obj. -50.7815 iterations 11
Cbc0038I Pass  54: suminf.    1.08126 (7) obj. -50.7815 iterations 7
Cbc0038I Pass  55: suminf.    0.64235 (7) obj. -50.7815 iterations 9
Cbc0038I Pass  56: suminf.    1.29776 (8) obj. -50.7815 iterations 8
Cbc0038I Pass  57: suminf.    0.89602 (17) obj. -50.7815 iterations 6
Cbc0038I Pass  58: suminf.    1.86197 (13) obj. -50.7815 iterations 18
Cbc0038I Pass  59: suminf.    1.77505 (16) obj. -50.7815 iterations 1
Cbc0038I Pass  60: suminf.    2.66335 (14) obj. -50.7815 iterations 10
Cbc0038I Pass  61: suminf.    1.43272 (13) obj. -50.7815 iterations 6
Cbc0038I Pass  62: suminf.    1.40904 (12) obj. -50.7815 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 108 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -39.8886 - took 0.04 seconds
Cbc0012I Integer solution of -39.888567 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 101 rows 108 columns, reduced to 6 rows 7 columns
Cbc0031I 43 added rows had average density of 16.162791
Cbc0013I At root node, 43 cuts changed objective from -85.721715 to -49.598936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6134 row cuts average 7.5 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 422 row cuts average 81.8 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 106 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 586 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 247 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.634 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.888567 best solution, best possible -49.598936 (1.63 seconds)
Cbc0012I Integer solution of -41.383177 found by rounding after 1601 iterations and 1 nodes (1.64 seconds)
Cbc0012I Integer solution of -42.560417 found by DiveCoefficient after 1773 iterations and 4 nodes (1.94 seconds)
Cbc0012I Integer solution of -45.008367 found by DiveCoefficient after 1973 iterations and 6 nodes (2.24 seconds)
Cbc0016I Integer solution of -45.357387 found by strong branching after 2085 iterations and 9 nodes (2.41 seconds)
Cbc0010I After 9 nodes, 7 on tree, -45.357387 best solution, best possible -49.598936 (2.41 seconds)
Cbc0001I Search completed - best objective -45.357387, took 2604 iterations and 18 nodes (2.74 seconds)
Cbc0032I Strong branching done 424 times (5526 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 54 variables fixed on reduced cost
Total time (CPU seconds):       1.95   (Wallclock seconds):       2.75

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 121 (-34) rows, 65 (-13) columns and 366 (-87) elements
Clp1000I sum of infeasibilities 1.56798e-05 - average 1.29586e-07, 12 fixed columns
Coin0506I Presolve 97 (-24) rows, 53 (-12) columns and 294 (-72) elements
Clp0029I End of values pass after 53 iterations
Clp0014I Perturbing problem by 0.001% of 2.9092099 - largest nonzero change 0 ( 0%) - largest zero change 2.5215374e-05
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Coin0511I After Postsolve, objective 71.8008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Clp0000I Optimal - objective value 71.8008
Coin0511I After Postsolve, objective 71.8008, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.80079954 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 121 rows, 65 columns (64 integer (64 of which binary)) and 366 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.398%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 7.21521
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -27.2461 iterations 24
Cbc0038I Solution found of -27.2461
Cbc0038I Relaxing continuous gives -27.2461
Cbc0038I Rounding solution of -33.2427 is better than previous of -27.2461

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 37 rows 21 columns
Cbc0038I Mini branch and bound improved solution from -33.2427 to -45.0084 (0.01 seconds)
Cbc0038I Round again with cutoff of -47.6877
Cbc0038I Pass   2: suminf.    0.76538 (5) obj. -47.6877 iterations 5
Cbc0038I Pass   3: suminf.    0.76538 (5) obj. -47.6877 iterations 0
Cbc0038I Pass   4: suminf.    1.17308 (3) obj. -47.6877 iterations 11
Cbc0038I Pass   5: suminf.    0.60602 (2) obj. -47.6877 iterations 4
Cbc0038I Pass   6: suminf.    0.60602 (2) obj. -47.6877 iterations 0
Cbc0038I Pass   7: suminf.    0.59132 (2) obj. -47.6877 iterations 1
Cbc0038I Pass   8: suminf.    1.61867 (6) obj. -47.6877 iterations 6
Cbc0038I Pass   9: suminf.    0.85431 (5) obj. -47.6877 iterations 5
Cbc0038I Pass  10: suminf.    0.93551 (3) obj. -47.6877 iterations 7
Cbc0038I Pass  11: suminf.    0.93551 (3) obj. -47.6877 iterations 0
Cbc0038I Pass  12: suminf.    0.60602 (2) obj. -47.6877 iterations 4
Cbc0038I Pass  13: suminf.    0.59132 (2) obj. -47.6877 iterations 1
Cbc0038I Pass  14: suminf.    1.53189 (5) obj. -47.6877 iterations 7
Cbc0038I Pass  15: suminf.    1.16189 (5) obj. -47.6877 iterations 4
Cbc0038I Pass  16: suminf.    3.37750 (11) obj. -47.6877 iterations 12
Cbc0038I Pass  17: suminf.    2.55698 (9) obj. -47.6877 iterations 3
Cbc0038I Pass  18: suminf.    2.65613 (8) obj. -47.6877 iterations 13
Cbc0038I Pass  19: suminf.    1.71330 (5) obj. -47.6877 iterations 4
Cbc0038I Pass  20: suminf.    1.05239 (4) obj. -47.6877 iterations 8
Cbc0038I Pass  21: suminf.    1.05239 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  22: suminf.    1.32435 (4) obj. -47.6877 iterations 5
Cbc0038I Pass  23: suminf.    0.94823 (4) obj. -47.6877 iterations 1
Cbc0038I Pass  24: suminf.    0.94823 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  25: suminf.    1.36380 (4) obj. -47.6877 iterations 3
Cbc0038I Pass  26: suminf.    1.05239 (4) obj. -47.6877 iterations 2
Cbc0038I Pass  27: suminf.    1.05239 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  28: suminf.    1.32435 (4) obj. -47.6877 iterations 5
Cbc0038I Pass  29: suminf.    0.94823 (4) obj. -47.6877 iterations 1
Cbc0038I Pass  30: suminf.    0.94823 (4) obj. -47.6877 iterations 0
Cbc0038I Pass  31: suminf.    1.36380 (4) obj. -47.6877 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 50 rows 28 columns
Cbc0038I Mini branch and bound improved solution from -45.0084 to -45.3574 (0.03 seconds)
Cbc0038I Round again with cutoff of -52.5103
Cbc0038I Pass  31: suminf.    1.16401 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  32: suminf.    1.16401 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  33: suminf.    1.22438 (3) obj. -52.5103 iterations 11
Cbc0038I Pass  34: suminf.    0.56178 (2) obj. -52.5103 iterations 4
Cbc0038I Pass  35: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  36: suminf.    3.78683 (12) obj. -52.5103 iterations 17
Cbc0038I Pass  37: suminf.    1.37224 (7) obj. -52.5103 iterations 10
Cbc0038I Pass  38: suminf.    2.54475 (8) obj. -52.5103 iterations 12
Cbc0038I Pass  39: suminf.    1.13065 (6) obj. -52.5103 iterations 5
Cbc0038I Pass  40: suminf.    1.59696 (6) obj. -52.5103 iterations 3
Cbc0038I Pass  41: suminf.    1.13065 (6) obj. -52.5103 iterations 2
Cbc0038I Pass  42: suminf.    2.30233 (6) obj. -52.5103 iterations 5
Cbc0038I Pass  43: suminf.    2.13619 (9) obj. -52.5103 iterations 12
Cbc0038I Pass  44: suminf.    1.86609 (7) obj. -52.5103 iterations 9
Cbc0038I Pass  45: suminf.    1.02881 (4) obj. -52.5103 iterations 12
Cbc0038I Pass  46: suminf.    0.91399 (3) obj. -52.5103 iterations 4
Cbc0038I Pass  47: suminf.    1.30401 (3) obj. -52.5103 iterations 3
Cbc0038I Pass  48: suminf.    0.56178 (2) obj. -52.5103 iterations 2
Cbc0038I Pass  49: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  50: suminf.    0.56178 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  51: suminf.    2.28529 (9) obj. -52.5103 iterations 9
Cbc0038I Pass  52: suminf.    1.01761 (5) obj. -52.5103 iterations 5
Cbc0038I Pass  53: suminf.    1.01761 (5) obj. -52.5103 iterations 0
Cbc0038I Pass  54: suminf.    1.04981 (4) obj. -52.5103 iterations 7
Cbc0038I Pass  55: suminf.    0.91399 (3) obj. -52.5103 iterations 4
Cbc0038I Pass  56: suminf.    1.30401 (3) obj. -52.5103 iterations 3
Cbc0038I Pass  57: suminf.    0.56178 (2) obj. -52.5103 iterations 2
Cbc0038I Pass  58: suminf.    0.53700 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  59: suminf.    0.56178 (2) obj. -52.5103 iterations 1
Cbc0038I Pass  60: suminf.    2.60657 (11) obj. -52.5103 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 121 rows 65 columns, reduced to 59 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -45.3574 - took 0.04 seconds
Cbc0012I Integer solution of -45.357387 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 121 rows 65 columns, reduced to 39 rows 22 columns
Cbc0031I 10 added rows had average density of 40.8
Cbc0013I At root node, 10 cuts changed objective from -71.8008 to -55.112928 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1142 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.038 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 564 row cuts average 57.5 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 32 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 100 row cuts average 30.2 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0001I Search completed - best objective -45.357387, took 2299 iterations and 12 nodes (0.32 seconds)
Cbc0032I Strong branching done 96 times (973 iterations), fathomed 1 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 87 variables fixed on reduced cost
Total time (CPU seconds):       0.30   (Wallclock seconds):       0.32

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 100 (-55) rows, 107 (-46) columns and 1632 (-1672) elements
Clp1000I sum of infeasibilities 1.18577e-07 - average 1.18577e-09, 61 fixed columns
Coin0506I Presolve 39 (-61) rows, 45 (-62) columns and 164 (-1468) elements
Clp0029I End of values pass after 45 iterations
Clp0014I Perturbing problem by 0.001% of 2.0570108 - largest nonzero change 1.9242665e-05 ( 0.00089819337%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 21.294741
Clp0000I Optimal - objective value 21.294741
Coin0511I After Postsolve, objective 21.294741, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0801349 - largest nonzero change 2.2619731e-05 ( 0.0015823696%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 96.874473
Clp0000I Optimal - objective value 96.874473
Clp0000I Optimal - objective value 96.874473
Coin0511I After Postsolve, objective 96.874473, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 96.8744726 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 101 rows, 108 columns (108 integer (108 of which binary)) and 1641 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.469%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 5.70236
Cbc0038I Pass   1: suminf.    2.14385 (25) obj. -66.8271 iterations 17
Cbc0038I Pass   2: suminf.    1.85906 (24) obj. -63.6372 iterations 2
Cbc0038I Pass   3: suminf.    0.27773 (7) obj. -30.3716 iterations 17
Cbc0038I Solution found of -21.7172
Cbc0038I Rounding solution of -24.17 is better than previous of -21.7172

Cbc0038I Before mini branch and bound, 61 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 108 columns, reduced to 33 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -24.17 to -37.1935 (0.03 seconds)
Cbc0038I Round again with cutoff of -42.0465
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.14385 (25) obj. -66.8271 iterations 0
Cbc0038I Pass   5: suminf.    1.85906 (24) obj. -63.6372 iterations 8
Cbc0038I Pass   6: suminf.    0.46903 (5) obj. -42.0465 iterations 22
Cbc0038I Pass   7: suminf.    0.40551 (5) obj. -42.0465 iterations 1
Cbc0038I Pass   8: suminf.    0.68190 (2) obj. -42.0465 iterations 6
Cbc0038I Pass   9: suminf.    0.28295 (1) obj. -42.0465 iterations 2
Cbc0038I Pass  10: suminf.    0.45161 (1) obj. -44.9393 iterations 1
Cbc0038I Pass  11: suminf.    1.33457 (8) obj. -42.0465 iterations 32
Cbc0038I Pass  12: suminf.    0.77913 (6) obj. -42.0465 iterations 17
Cbc0038I Pass  13: suminf.    0.44282 (6) obj. -46.7548 iterations 2
Cbc0038I Pass  14: suminf.    0.09924 (1) obj. -42.0465 iterations 6
Cbc0038I Pass  15: suminf.    0.09524 (1) obj. -42.1024 iterations 2
Cbc0038I Pass  16: suminf.    1.58098 (16) obj. -42.0465 iterations 23
Cbc0038I Pass  17: suminf.    1.31920 (15) obj. -42.0465 iterations 2
Cbc0038I Pass  18: suminf.    1.02985 (17) obj. -42.0465 iterations 22
Cbc0038I Pass  19: suminf.    0.25761 (4) obj. -42.0465 iterations 9
Cbc0038I Pass  20: suminf.    0.57729 (2) obj. -42.0465 iterations 8
Cbc0038I Pass  21: suminf.    0.13562 (2) obj. -42.0465 iterations 3
Cbc0038I Pass  22: suminf.    0.88602 (7) obj. -42.0465 iterations 12
Cbc0038I Pass  23: suminf.    0.81185 (5) obj. -42.0465 iterations 3
Cbc0038I Pass  24: suminf.    0.57729 (2) obj. -42.0465 iterations 7
Cbc0038I Pass  25: suminf.    0.13562 (2) obj. -42.0465 iterations 1
Cbc0038I Pass  26: suminf.    0.57729 (2) obj. -42.0465 iterations 4
Cbc0038I Pass  27: suminf.    1.03593 (10) obj. -42.0465 iterations 15
Cbc0038I Pass  28: suminf.    0.78124 (7) obj. -42.2478 iterations 8
Cbc0038I Pass  29: suminf.    0.99451 (3) obj. -42.0465 iterations 12
Cbc0038I Pass  30: suminf.    0.11111 (1) obj. -42.638 iterations 10
Cbc0038I Pass  31: suminf.    0.74849 (2) obj. -42.0465 iterations 2
Cbc0038I Pass  32: suminf.    0.70440 (5) obj. -42.0465 iterations 19
Cbc0038I Pass  33: suminf.    0.23552 (4) obj. -43.8979 iterations 7
Cbc0038I Rounding solution of -39.8886 is better than previous of -37.1935

Cbc0038I Before mini branch and bound, 50 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 108 columns, reduced to 54 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -50.7815
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.14385 (25) obj. -66.8271 iterations 0
Cbc0038I Pass  34: suminf.    1.85906 (24) obj. -63.6372 iterations 8
Cbc0038I Pass  35: suminf.    1.15923 (12) obj. -50.7815 iterations 16
Cbc0038I Pass  36: suminf.    1.15923 (12) obj. -50.7815 iterations 0
Cbc0038I Pass  37: suminf.    0.45146 (2) obj. -50.7815 iterations 19
Cbc0038I Pass  38: suminf.    0.17973 (2) obj. -50.7815 iterations 1
Cbc0038I Pass  39: suminf.    0.45146 (2) obj. -50.7815 iterations 4
Cbc0038I Pass  40: suminf.    1.27326 (22) obj. -50.7815 iterations 20
Cbc0038I Pass  41: suminf.    0.56587 (7) obj. -50.7815 iterations 13
Cbc0038I Pass  42: suminf.    0.39986 (4) obj. -50.7815 iterations 11
Cbc0038I Pass  43: suminf.    0.39986 (4) obj. -50.7815 iterations 2
Cbc0038I Pass  44: suminf.    0.41101 (4) obj. -50.7815 iterations 6
Cbc0038I Pass  45: suminf.    0.41101 (4) obj. -50.7815 iterations 3
Cbc0038I Pass  46: suminf.    0.39986 (4) obj. -50.7815 iterations 5
Cbc0038I Pass  47: suminf.    1.00434 (6) obj. -50.7815 iterations 21
Cbc0038I Pass  48: suminf.    0.52147 (6) obj. -50.7815 iterations 6
Cbc0038I Pass  49: suminf.    0.64202 (5) obj. -50.7815 iterations 7
Cbc0038I Pass  50: suminf.    0.53923 (5) obj. -50.7815 iterations 4
Cbc0038I Pass  51: suminf.    0.89098 (10) obj. -50.7815 iterations 11
Cbc0038I Pass  52: suminf.    0.78541 (9) obj. -50.7815 iterations 8
Cbc0038I Pass  53: suminf.    0.64202 (5) obj. -50.7815 iterations 11
Cbc0038I Pass  54: suminf.    1.08126 (7) obj. -50.7815 iterations 7
Cbc0038I Pass  55: suminf.    0.64235 (7) obj. -50.7815 iterations 9
Cbc0038I Pass  56: suminf.    1.29776 (8) obj. -50.7815 iterations 8
Cbc0038I Pass  57: suminf.    0.89602 (17) obj. -50.7815 iterations 6
Cbc0038I Pass  58: suminf.    1.86197 (13) obj. -50.7815 iterations 18
Cbc0038I Pass  59: suminf.    1.77505 (16) obj. -50.7815 iterations 1
Cbc0038I Pass  60: suminf.    2.66335 (14) obj. -50.7815 iterations 10
Cbc0038I Pass  61: suminf.    1.43272 (13) obj. -50.7815 iterations 6
Cbc0038I Pass  62: suminf.    1.40904 (12) obj. -50.7815 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 101 rows 108 columns, reduced to 18 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -39.8886 - took 0.05 seconds
Cbc0012I Integer solution of -39.888567 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 101 rows 108 columns, reduced to 6 rows 7 columns
Cbc0031I 43 added rows had average density of 16.162791
Cbc0013I At root node, 43 cuts changed objective from -85.721715 to -49.598936 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 6134 row cuts average 7.5 elements, 1 column cuts (1 active)  in 0.118 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 422 row cuts average 81.8 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 106 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 586 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 247 row cuts average 54.1 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 111 row cuts average 17.2 elements, 0 column cuts (0 active)  in 0.756 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.888567 best solution, best possible -49.598936 (2.03 seconds)
Cbc0012I Integer solution of -41.383177 found by rounding after 1601 iterations and 1 nodes (2.04 seconds)
Cbc0012I Integer solution of -42.560417 found by DiveCoefficient after 1773 iterations and 4 nodes (2.40 seconds)
Cbc0012I Integer solution of -45.008367 found by DiveCoefficient after 1973 iterations and 6 nodes (2.75 seconds)
Cbc0010I After 6 nodes, 7 on tree, -45.008367 best solution, best possible -49.598936 (2.75 seconds)
Cbc0016I Integer solution of -45.357387 found by strong branching after 2085 iterations and 9 nodes (2.93 seconds)
Cbc0001I Search completed - best objective -45.357387, took 2604 iterations and 18 nodes (3.31 seconds)
Cbc0032I Strong branching done 424 times (5526 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 7, 54 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       3.33

