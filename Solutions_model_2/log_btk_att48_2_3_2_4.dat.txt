Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 48 (-2) columns and 260 (-25) elements
Clp1000I sum of infeasibilities 3.04158e-05 - average 3.53672e-07, 10 fixed columns
Coin0506I Presolve 61 (-25) rows, 37 (-11) columns and 188 (-72) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 1.613053 - largest nonzero change 0 ( 0%) - largest zero change 2.329182e-05
Clp0000I Optimal - objective value 2456.2792
Clp0000I Optimal - objective value 2456.2792
Coin0511I After Postsolve, objective 2456.2792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2456.2792
Clp0000I Optimal - objective value 2456.2792
Clp0000I Optimal - objective value 2456.2792
Coin0511I After Postsolve, objective 2456.2792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2456.279204 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 48 columns (47 integer (47 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 10.7114
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 137.336 iterations 24
Cbc0038I Solution found of 137.336
Cbc0038I Relaxing continuous gives 137.336
Cbc0038I Rounding solution of -151.201 is better than previous of 137.336

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 43 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -151.201 to -1226.74 (0.02 seconds)
Cbc0038I Round again with cutoff of -1349.7
Cbc0038I Pass   2: suminf.    2.00207 (6) obj. -1349.7 iterations 6
Cbc0038I Pass   3: suminf.    1.96394 (5) obj. -1349.7 iterations 1
Cbc0038I Pass   4: suminf.    1.60824 (5) obj. -1349.7 iterations 4
Cbc0038I Pass   5: suminf.    0.71941 (4) obj. -1349.7 iterations 3
Cbc0038I Pass   6: suminf.    1.16009 (4) obj. -1349.7 iterations 5
Cbc0038I Pass   7: suminf.    1.33617 (4) obj. -1349.7 iterations 3
Cbc0038I Pass   8: suminf.    0.36880 (2) obj. -1349.7 iterations 2
Cbc0038I Pass   9: suminf.    1.00000 (7) obj. -1349.7 iterations 8
Cbc0038I Pass  10: suminf.    0.84236 (3) obj. -1349.7 iterations 5
Cbc0038I Pass  11: suminf.    0.79973 (4) obj. -1349.7 iterations 2
Cbc0038I Pass  12: suminf.    1.51462 (5) obj. -1349.7 iterations 3
Cbc0038I Pass  13: suminf.    1.15951 (4) obj. -1349.7 iterations 1
Cbc0038I Pass  14: suminf.    3.81453 (13) obj. -1349.7 iterations 17
Cbc0038I Pass  15: suminf.    2.75206 (10) obj. -1349.7 iterations 10
Cbc0038I Pass  16: suminf.    2.47165 (9) obj. -1349.7 iterations 1
Cbc0038I Pass  17: suminf.    1.77768 (8) obj. -1349.7 iterations 1
Cbc0038I Pass  18: suminf.    2.58466 (6) obj. -1349.7 iterations 8
Cbc0038I Pass  19: suminf.    2.58466 (6) obj. -1349.7 iterations 0
Cbc0038I Pass  20: suminf.    1.00000 (5) obj. -1349.7 iterations 4
Cbc0038I Pass  21: suminf.    0.92618 (4) obj. -1349.7 iterations 2
Cbc0038I Pass  22: suminf.    0.91641 (4) obj. -1349.7 iterations 1
Cbc0038I Pass  23: suminf.    1.58907 (5) obj. -1349.7 iterations 3
Cbc0038I Pass  24: suminf.    1.04946 (4) obj. -1349.7 iterations 1
Cbc0038I Pass  25: suminf.    1.18710 (5) obj. -1349.7 iterations 14
Cbc0038I Pass  26: suminf.    1.00000 (5) obj. -1349.7 iterations 5
Cbc0038I Pass  27: suminf.    2.30324 (7) obj. -1349.7 iterations 5
Cbc0038I Pass  28: suminf.    1.17515 (5) obj. -1349.7 iterations 2
Cbc0038I Pass  29: suminf.    0.68634 (4) obj. -1349.7 iterations 2
Cbc0038I Pass  30: suminf.    1.51116 (6) obj. -1349.7 iterations 4
Cbc0038I Pass  31: suminf.    1.26644 (4) obj. -1349.7 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -1226.74 - took 0.03 seconds
Cbc0012I Integer solution of -1226.7441 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 86 rows 48 columns, reduced to 43 rows 29 columns
Cbc0031I 15 added rows had average density of 39.533333
Cbc0013I At root node, 15 cuts changed objective from -2456.2792 to -1686.1787 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3976 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1322 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 135 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1226.7441, took 4574 iterations and 10 nodes (0.43 seconds)
Cbc0032I Strong branching done 234 times (3724 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.42   (Wallclock seconds):       0.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-12) rows, 94 (-2) columns and 1341 (-72) elements
Clp1000I sum of infeasibilities 1.39128e-08 - average 1.61777e-10, 82 fixed columns
Coin0506I Presolve 10 (-76) rows, 12 (-82) columns and 38 (-1303) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 262.04598
Clp0000I Optimal - objective value 262.04598
Coin0511I After Postsolve, objective 262.04598, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.6331912e-05 ( 0.0026331912%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3547.0826
Clp0000I Optimal - objective value 3547.0826
Clp0000I Optimal - objective value 3547.0826
Coin0511I After Postsolve, objective 3547.0826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3547.082642 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 94 columns (94 integer (94 of which binary)) and 1351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 13.0523
Cbc0038I Pass   1: suminf.    2.93154 (24) obj. -1075.85 iterations 26
Cbc0038I Pass   2: suminf.    2.93154 (24) obj. -1075.85 iterations 4
Cbc0038I Pass   3: suminf.    1.33863 (13) obj. -289.616 iterations 11
Cbc0038I Pass   4: suminf.    0.10263 (2) obj. 72.8754 iterations 11
Cbc0038I Solution found of 137.336
Cbc0038I Rounding solution of -279.465 is better than previous of 137.336

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -279.465 to -1226.74 (0.03 seconds)
Cbc0038I Round again with cutoff of -1432.3
Cbc0038I Pass   5: suminf.    3.98674 (29) obj. -1432.3 iterations 1
Cbc0038I Pass   6: suminf.    3.98674 (29) obj. -1432.3 iterations 1
Cbc0038I Pass   7: suminf.    1.50473 (9) obj. -1432.3 iterations 38
Cbc0038I Pass   8: suminf.    1.34036 (8) obj. -1650.85 iterations 2
Cbc0038I Pass   9: suminf.    0.53678 (4) obj. -1432.3 iterations 11
Cbc0038I Pass  10: suminf.    0.50699 (3) obj. -1449.72 iterations 3
Cbc0038I Pass  11: suminf.    0.85563 (4) obj. -1432.3 iterations 12
Cbc0038I Pass  12: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  13: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  14: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I Pass  15: suminf.    0.60421 (3) obj. -1505.72 iterations 4
Cbc0038I Pass  16: suminf.    0.85563 (4) obj. -1432.3 iterations 7
Cbc0038I Pass  17: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  18: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  19: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I Pass  20: suminf.    0.60421 (3) obj. -1505.72 iterations 4
Cbc0038I Pass  21: suminf.    0.85563 (4) obj. -1432.3 iterations 7
Cbc0038I Pass  22: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  23: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  24: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I Pass  25: suminf.    0.60421 (3) obj. -1505.72 iterations 4
Cbc0038I Pass  26: suminf.    0.85563 (4) obj. -1432.3 iterations 7
Cbc0038I Pass  27: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  28: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  29: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I Pass  30: suminf.    0.60421 (3) obj. -1505.72 iterations 4
Cbc0038I Pass  31: suminf.    0.85563 (4) obj. -1432.3 iterations 7
Cbc0038I Pass  32: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  33: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  34: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -1226.74 - took 0.02 seconds
Cbc0012I Integer solution of -1226.7441 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 86 rows 94 columns, reduced to 8 rows 9 columns
Cbc0031I 28 added rows had average density of 3.9642857
Cbc0013I At root node, 35 cuts changed objective from -3282.3332 to -1226.7441 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 389 row cuts average 2.2 elements, 34 column cuts (34 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 43 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1226.7441, took 100 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 48 (-2) columns and 260 (-25) elements
Clp1000I sum of infeasibilities 3.04158e-05 - average 3.53672e-07, 10 fixed columns
Coin0506I Presolve 61 (-25) rows, 37 (-11) columns and 188 (-72) elements
Clp0029I End of values pass after 37 iterations
Clp0014I Perturbing problem by 0.001% of 1.613053 - largest nonzero change 0 ( 0%) - largest zero change 2.329182e-05
Clp0000I Optimal - objective value 2456.2792
Clp0000I Optimal - objective value 2456.2792
Coin0511I After Postsolve, objective 2456.2792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 2456.2792
Clp0000I Optimal - objective value 2456.2792
Clp0000I Optimal - objective value 2456.2792
Coin0511I After Postsolve, objective 2456.2792, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 2456.279204 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 86 rows, 48 columns (47 integer (47 of which binary)) and 260 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.804%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 28 integers unsatisfied sum - 10.7114
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 137.336 iterations 24
Cbc0038I Solution found of 137.336
Cbc0038I Relaxing continuous gives 137.336
Cbc0038I Rounding solution of -151.201 is better than previous of 137.336

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 43 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -151.201 to -1226.74 (0.02 seconds)
Cbc0038I Round again with cutoff of -1349.7
Cbc0038I Pass   2: suminf.    2.00207 (6) obj. -1349.7 iterations 6
Cbc0038I Pass   3: suminf.    1.96394 (5) obj. -1349.7 iterations 1
Cbc0038I Pass   4: suminf.    1.60824 (5) obj. -1349.7 iterations 4
Cbc0038I Pass   5: suminf.    0.71941 (4) obj. -1349.7 iterations 3
Cbc0038I Pass   6: suminf.    1.16009 (4) obj. -1349.7 iterations 5
Cbc0038I Pass   7: suminf.    1.33617 (4) obj. -1349.7 iterations 3
Cbc0038I Pass   8: suminf.    0.36880 (2) obj. -1349.7 iterations 2
Cbc0038I Pass   9: suminf.    1.00000 (7) obj. -1349.7 iterations 8
Cbc0038I Pass  10: suminf.    0.84236 (3) obj. -1349.7 iterations 5
Cbc0038I Pass  11: suminf.    0.79973 (4) obj. -1349.7 iterations 2
Cbc0038I Pass  12: suminf.    1.51462 (5) obj. -1349.7 iterations 3
Cbc0038I Pass  13: suminf.    1.15951 (4) obj. -1349.7 iterations 1
Cbc0038I Pass  14: suminf.    3.81453 (13) obj. -1349.7 iterations 17
Cbc0038I Pass  15: suminf.    2.75206 (10) obj. -1349.7 iterations 10
Cbc0038I Pass  16: suminf.    2.47165 (9) obj. -1349.7 iterations 1
Cbc0038I Pass  17: suminf.    1.77768 (8) obj. -1349.7 iterations 1
Cbc0038I Pass  18: suminf.    2.58466 (6) obj. -1349.7 iterations 8
Cbc0038I Pass  19: suminf.    2.58466 (6) obj. -1349.7 iterations 0
Cbc0038I Pass  20: suminf.    1.00000 (5) obj. -1349.7 iterations 4
Cbc0038I Pass  21: suminf.    0.92618 (4) obj. -1349.7 iterations 2
Cbc0038I Pass  22: suminf.    0.91641 (4) obj. -1349.7 iterations 1
Cbc0038I Pass  23: suminf.    1.58907 (5) obj. -1349.7 iterations 3
Cbc0038I Pass  24: suminf.    1.04946 (4) obj. -1349.7 iterations 1
Cbc0038I Pass  25: suminf.    1.18710 (5) obj. -1349.7 iterations 14
Cbc0038I Pass  26: suminf.    1.00000 (5) obj. -1349.7 iterations 5
Cbc0038I Pass  27: suminf.    2.30324 (7) obj. -1349.7 iterations 5
Cbc0038I Pass  28: suminf.    1.17515 (5) obj. -1349.7 iterations 2
Cbc0038I Pass  29: suminf.    0.68634 (4) obj. -1349.7 iterations 2
Cbc0038I Pass  30: suminf.    1.51116 (6) obj. -1349.7 iterations 4
Cbc0038I Pass  31: suminf.    1.26644 (4) obj. -1349.7 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 48 columns, reduced to 55 rows 34 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -1226.74 - took 0.05 seconds
Cbc0012I Integer solution of -1226.7441 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 86 rows 48 columns, reduced to 43 rows 29 columns
Cbc0031I 15 added rows had average density of 39.533333
Cbc0013I At root node, 15 cuts changed objective from -2456.2792 to -1686.1787 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3976 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1322 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 135 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 86 row cuts average 39.5 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0001I Search completed - best objective -1226.7441, took 4574 iterations and 10 nodes (0.43 seconds)
Cbc0032I Strong branching done 234 times (3724 iterations), fathomed 2 nodes and fixed 5 variables
Cbc0035I Maximum depth 4, 17 variables fixed on reduced cost
Total time (CPU seconds):       0.44   (Wallclock seconds):       0.43

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 86 (-13) rows, 94 (-3) columns and 1341 (-73) elements
Clp1000I sum of infeasibilities 1.39128e-08 - average 1.61777e-10, 82 fixed columns
Coin0506I Presolve 10 (-76) rows, 12 (-82) columns and 38 (-1303) elements
Clp0029I End of values pass after 12 iterations
Clp0000I Optimal - objective value 262.04598
Clp0000I Optimal - objective value 262.04598
Coin0511I After Postsolve, objective 262.04598, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.464777 - largest nonzero change 2.6331912e-05 ( 0.0026331912%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 3547.0826
Clp0000I Optimal - objective value 3547.0826
Clp0000I Optimal - objective value 3547.0826
Coin0511I After Postsolve, objective 3547.0826, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 3547.082642 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 86 rows, 94 columns (94 integer (94 of which binary)) and 1351 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.087%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 13.0523
Cbc0038I Pass   1: suminf.    2.93154 (24) obj. -1075.85 iterations 26
Cbc0038I Pass   2: suminf.    2.93154 (24) obj. -1075.85 iterations 4
Cbc0038I Pass   3: suminf.    1.33863 (13) obj. -289.616 iterations 11
Cbc0038I Pass   4: suminf.    0.10263 (2) obj. 72.8754 iterations 11
Cbc0038I Solution found of 137.336
Cbc0038I Rounding solution of -279.465 is better than previous of 137.336

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -279.465 to -1226.74 (0.03 seconds)
Cbc0038I Round again with cutoff of -1432.3
Cbc0038I Pass   5: suminf.    3.98674 (29) obj. -1432.3 iterations 1
Cbc0038I Pass   6: suminf.    3.98674 (29) obj. -1432.3 iterations 1
Cbc0038I Pass   7: suminf.    1.50473 (9) obj. -1432.3 iterations 38
Cbc0038I Pass   8: suminf.    1.34036 (8) obj. -1650.85 iterations 2
Cbc0038I Pass   9: suminf.    0.53678 (4) obj. -1432.3 iterations 11
Cbc0038I Pass  10: suminf.    0.50699 (3) obj. -1449.72 iterations 3
Cbc0038I Pass  11: suminf.    0.85563 (4) obj. -1432.3 iterations 12
Cbc0038I Pass  12: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  13: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  14: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I Pass  15: suminf.    0.60421 (3) obj. -1505.72 iterations 4
Cbc0038I Pass  16: suminf.    0.85563 (4) obj. -1432.3 iterations 7
Cbc0038I Pass  17: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  18: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  19: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I Pass  20: suminf.    0.60421 (3) obj. -1505.72 iterations 4
Cbc0038I Pass  21: suminf.    0.85563 (4) obj. -1432.3 iterations 7
Cbc0038I Pass  22: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  23: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  24: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I Pass  25: suminf.    0.60421 (3) obj. -1505.72 iterations 4
Cbc0038I Pass  26: suminf.    0.85563 (4) obj. -1432.3 iterations 7
Cbc0038I Pass  27: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  28: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  29: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I Pass  30: suminf.    0.60421 (3) obj. -1505.72 iterations 4
Cbc0038I Pass  31: suminf.    0.85563 (4) obj. -1432.3 iterations 7
Cbc0038I Pass  32: suminf.    0.85563 (4) obj. -1432.3 iterations 1
Cbc0038I Pass  33: suminf.    1.02367 (4) obj. -1432.3 iterations 3
Cbc0038I Pass  34: suminf.    0.91269 (3) obj. -1432.3 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 86 rows 94 columns, reduced to 19 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -1226.74 - took 0.02 seconds
Cbc0012I Integer solution of -1226.7441 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 86 rows 94 columns, reduced to 8 rows 9 columns
Cbc0031I 28 added rows had average density of 3.9642857
Cbc0013I At root node, 35 cuts changed objective from -3282.3332 to -1226.7441 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 389 row cuts average 2.2 elements, 34 column cuts (34 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 27.4 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 27 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 43 row cuts average 20.8 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 16 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0001I Search completed - best objective -1226.7441, took 100 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.12

