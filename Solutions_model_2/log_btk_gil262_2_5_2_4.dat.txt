Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 503 (-24) rows, 262 (-2) columns and 1499 (-46) elements
Clp1000I sum of infeasibilities 0.000247379 - average 4.91808e-07, 115 fixed columns
Coin0506I Presolve 268 (-235) rows, 142 (-120) columns and 800 (-699) elements
Clp0029I End of values pass after 142 iterations
Clp0000I Optimal - objective value 188.86257
Clp0000I Optimal - objective value 188.86257
Coin0511I After Postsolve, objective 188.86257, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13441103 - largest nonzero change 0 ( 0%) - largest zero change 2.971642e-05
Clp0000I Optimal - objective value 188.86257
Clp0000I Optimal - objective value 188.86257
Clp0000I Optimal - objective value 188.86257
Coin0511I After Postsolve, objective 188.86257, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 188.8625652 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 503 rows, 262 columns (261 integer (261 of which binary)) and 1499 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 79 integers unsatisfied sum - 11.0863
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.5216 iterations 231
Cbc0038I Solution found of -3.5216
Cbc0038I Relaxing continuous gives -3.5216
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 149 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -3.5216 to -115.88 (0.09 seconds)
Cbc0038I Round again with cutoff of -123.179
Cbc0038I Pass   2: suminf.    4.88098 (25) obj. -123.179 iterations 82
Cbc0038I Pass   3: suminf.    3.29922 (22) obj. -123.179 iterations 22
Cbc0038I Pass   4: suminf.    2.29530 (8) obj. -123.179 iterations 38
Cbc0038I Pass   5: suminf.    0.80401 (5) obj. -123.179 iterations 59
Cbc0038I Pass   6: suminf.    2.26985 (8) obj. -123.179 iterations 50
Cbc0038I Pass   7: suminf.    1.85383 (6) obj. -123.179 iterations 18
Cbc0038I Pass   8: suminf.    1.70159 (6) obj. -123.179 iterations 60
Cbc0038I Pass   9: suminf.    1.05601 (5) obj. -123.179 iterations 31
Cbc0038I Pass  10: suminf.    1.01293 (6) obj. -123.179 iterations 8
Cbc0038I Pass  11: suminf.    1.87085 (6) obj. -123.179 iterations 32
Cbc0038I Pass  12: suminf.    1.20879 (6) obj. -123.179 iterations 15
Cbc0038I Pass  13: suminf.    1.83296 (6) obj. -123.179 iterations 31
Cbc0038I Pass  14: suminf.    3.01792 (15) obj. -123.179 iterations 70
Cbc0038I Pass  15: suminf.    0.80960 (8) obj. -123.179 iterations 77
Cbc0038I Pass  16: suminf.    0.80375 (10) obj. -123.179 iterations 9
Cbc0038I Pass  17: suminf.    2.92292 (7) obj. -123.179 iterations 44
Cbc0038I Pass  18: suminf.    2.10708 (9) obj. -123.179 iterations 6
Cbc0038I Pass  19: suminf.    1.83050 (7) obj. -123.179 iterations 16
Cbc0038I Pass  20: suminf.    1.35613 (5) obj. -123.179 iterations 49
Cbc0038I Pass  21: suminf.    0.69643 (7) obj. -123.179 iterations 33
Cbc0038I Pass  22: suminf.    2.10560 (10) obj. -123.179 iterations 29
Cbc0038I Pass  23: suminf.    1.31694 (5) obj. -123.179 iterations 25
Cbc0038I Pass  24: suminf.    1.14370 (5) obj. -123.179 iterations 7
Cbc0038I Pass  25: suminf.    1.41943 (7) obj. -123.179 iterations 55
Cbc0038I Pass  26: suminf.    1.31771 (4) obj. -123.179 iterations 22
Cbc0038I Pass  27: suminf.    1.49812 (6) obj. -123.179 iterations 49
Cbc0038I Pass  28: suminf.    1.11970 (5) obj. -123.179 iterations 12
Cbc0038I Pass  29: suminf.    0.77314 (5) obj. -123.179 iterations 33
Cbc0038I Pass  30: suminf.    1.61147 (10) obj. -123.179 iterations 33
Cbc0038I Pass  31: suminf.    1.31771 (4) obj. -123.179 iterations 34
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 190 rows 103 columns
Cbc0038I Mini branch and bound improved solution from -115.88 to -122.265 (0.18 seconds)
Cbc0038I Round again with cutoff of -136.315
Cbc0038I Pass  31: suminf.    5.44825 (29) obj. -136.315 iterations 1
Cbc0038I Pass  32: suminf.    4.30906 (18) obj. -136.315 iterations 21
Cbc0038I Pass  33: suminf.    3.63934 (18) obj. -136.315 iterations 38
Cbc0038I Pass  34: suminf.    3.97621 (12) obj. -136.315 iterations 40
Cbc0038I Pass  35: suminf.    3.21876 (21) obj. -136.315 iterations 31
Cbc0038I Pass  36: suminf.    3.49061 (13) obj. -136.315 iterations 53
Cbc0038I Pass  37: suminf.    2.65856 (12) obj. -136.315 iterations 18
Cbc0038I Pass  38: suminf.    2.65078 (13) obj. -136.315 iterations 7
Cbc0038I Pass  39: suminf.    4.23627 (12) obj. -136.315 iterations 26
Cbc0038I Pass  40: suminf.    2.62284 (12) obj. -136.315 iterations 49
Cbc0038I Pass  41: suminf.    2.30235 (9) obj. -136.315 iterations 19
Cbc0038I Pass  42: suminf.    2.23366 (9) obj. -136.315 iterations 4
Cbc0038I Pass  43: suminf.    3.53227 (12) obj. -136.315 iterations 25
Cbc0038I Pass  44: suminf.    3.48724 (12) obj. -136.315 iterations 5
Cbc0038I Pass  45: suminf.    3.02156 (13) obj. -136.315 iterations 35
Cbc0038I Pass  46: suminf.    2.86231 (12) obj. -136.315 iterations 25
Cbc0038I Pass  47: suminf.    3.36286 (11) obj. -136.315 iterations 20
Cbc0038I Pass  48: suminf.    2.89382 (12) obj. -136.315 iterations 32
Cbc0038I Pass  49: suminf.    3.33696 (11) obj. -136.315 iterations 32
Cbc0038I Pass  50: suminf.    3.18845 (11) obj. -136.315 iterations 24
Cbc0038I Pass  51: suminf.    2.59820 (12) obj. -136.315 iterations 25
Cbc0038I Pass  52: suminf.    2.59820 (12) obj. -136.315 iterations 2
Cbc0038I Pass  53: suminf.    3.13060 (11) obj. -136.315 iterations 22
Cbc0038I Pass  54: suminf.    2.89382 (12) obj. -136.315 iterations 33
Cbc0038I Pass  55: suminf.    2.89382 (12) obj. -136.315 iterations 0
Cbc0038I Pass  56: suminf.    3.33696 (11) obj. -136.315 iterations 32
Cbc0038I Pass  57: suminf.    3.18845 (11) obj. -136.315 iterations 24
Cbc0038I Pass  58: suminf.    2.59820 (12) obj. -136.315 iterations 23
Cbc0038I Pass  59: suminf.    2.59820 (12) obj. -136.315 iterations 2
Cbc0038I Pass  60: suminf.    3.13060 (11) obj. -136.315 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 175 rows 95 columns
Cbc0038I Mini branch and bound did not improve solution (0.28 seconds)
Cbc0038I After 0.28 seconds - Feasibility pump exiting with objective of -122.265 - took 0.26 seconds
Cbc0012I Integer solution of -122.26525 found by feasibility pump after 0 iterations and 0 nodes (0.28 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 154 rows 84 columns
Cbc0012I Integer solution of -122.59193 found by RINS after 0 iterations and 0 nodes (0.36 seconds)
Cbc0031I 48 added rows had average density of 130.5
Cbc0013I At root node, 48 cuts changed objective from -188.86257 to -175.29472 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 49065 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.543 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3306 row cuts average 257.3 elements, 0 column cuts (0 active)  in 0.543 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.591 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -122.59193 best solution, best possible -175.29472 (6.30 seconds)
Cbc0010I After 9 nodes, 9 on tree, -122.59193 best solution, best possible -175.29472 (7.02 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 18 rows 18 columns
Cbc0012I Integer solution of -124.43215 found by rounding after 26185 iterations and 43 nodes (7.49 seconds)
Cbc0010I After 70 nodes, 12 on tree, -124.43215 best solution, best possible -175.29472 (7.72 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 4 rows 8 columns
Cbc0012I Integer solution of -127.32174 found by RINS after 28781 iterations and 91 nodes (7.84 seconds)
Cbc0004I Integer solution of -128.44415 found after 30682 iterations and 154 nodes (8.03 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 126 rows 74 columns
Cbc0012I Integer solution of -128.75404 found by RINS after 32534 iterations and 200 nodes (8.27 seconds)
Cbc0010I After 225 nodes, 11 on tree, -128.75404 best solution, best possible -175.29472 (8.43 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 9 rows 11 columns
Cbc0001I Search completed - best objective -128.75404, took 40681 iterations and 414 nodes (9.13 seconds)
Cbc0032I Strong branching done 3334 times (79210 iterations), fathomed 77 nodes and fixed 249 variables
Cbc0035I Maximum depth 60, 1960 variables fixed on reduced cost
Total time (CPU seconds):       8.96   (Wallclock seconds):       9.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 391 (-135) rows, 410 (-114) columns and 19769 (-15967) elements
Clp1000I sum of infeasibilities 2.0527e-06 - average 5.24988e-09, 82 fixed columns
Coin0506I Presolve 309 (-82) rows, 323 (-87) columns and 13010 (-6759) elements
Clp0006I 0  Obj 202.65103 Dual inf 118.96234 (323)
Clp0029I End of values pass after 321 iterations
Clp0014I Perturbing problem by 0.001% of 2.3847667 - largest nonzero change 2.8891026e-05 ( 0.0023693761%) - largest zero change 2.9895905e-05
Clp0000I Optimal - objective value 228.30537
Clp0000I Optimal - objective value 228.30537
Coin0511I After Postsolve, objective 228.30537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 228.30537 Dual inf 20.675162 (5)
Clp0014I Perturbing problem by 0.001% of 1.7395669 - largest nonzero change 2.5955254e-05 ( 0.0016756202%) - largest zero change 2.9597463e-05
Clp0000I Optimal - objective value 228.6965
Clp0000I Optimal - objective value 228.6965
Clp0000I Optimal - objective value 228.6965
Coin0511I After Postsolve, objective 228.6965, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 228.6965042 - 0 iterations time 0.172, Presolve 0.00, Idiot 0.16

Starting MIP optimization
Cgl0004I processed model has 391 rows, 410 columns (410 integer (410 of which binary)) and 19769 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 139 integers unsatisfied sum - 8.45866
Cbc0038I Pass   1: suminf.    2.39315 (77) obj. -180.583 iterations 58
Cbc0038I Pass   2: suminf.    2.39315 (77) obj. -180.583 iterations 3
Cbc0038I Pass   3: suminf.    1.30973 (53) obj. -122.62 iterations 24
Cbc0038I Pass   4: suminf.    0.70355 (35) obj. -97.487 iterations 18
Cbc0038I Pass   5: suminf.    0.29204 (19) obj. -76.0553 iterations 16
Cbc0038I Solution found of -55.3834
Cbc0038I Rounding solution of -72.6924 is better than previous of -55.3834

Cbc0038I Before mini branch and bound, 268 integers at bound fixed and 0 continuous
Cbc0038I Full problem 391 rows 410 columns, reduced to 61 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -88.2929
Cbc0038I Pass   6: suminf.    2.39315 (77) obj. -180.583 iterations 0
Cbc0038I Pass   7: suminf.    2.39315 (77) obj. -180.583 iterations 1
Cbc0038I Pass   8: suminf.    1.79584 (65) obj. -139.877 iterations 12
Cbc0038I Pass   9: suminf.    0.91399 (42) obj. -109.128 iterations 23
Cbc0038I Pass  10: suminf.    0.70223 (19) obj. -88.2929 iterations 30
Cbc0038I Pass  11: suminf.    0.48349 (3) obj. -90.4454 iterations 19
Cbc0038I Pass  12: suminf.    0.41597 (3) obj. -88.2929 iterations 1
Cbc0038I Pass  13: suminf.    0.54448 (2) obj. -88.2929 iterations 4
Cbc0038I Pass  14: suminf.    0.21782 (2) obj. -88.2929 iterations 9
Cbc0038I Pass  15: suminf.    0.87200 (2) obj. -88.2929 iterations 5
Cbc0038I Pass  16: suminf.    0.25529 (2) obj. -88.2929 iterations 1
Cbc0038I Pass  17: suminf.    1.85987 (24) obj. -90.4944 iterations 84
Cbc0038I Pass  18: suminf.    0.96534 (17) obj. -88.2929 iterations 27
Cbc0038I Pass  19: suminf.    1.03624 (47) obj. -88.2929 iterations 50
Cbc0038I Pass  20: suminf.    1.03624 (47) obj. -88.2929 iterations 0
Cbc0038I Pass  21: suminf.    0.55500 (43) obj. -88.2929 iterations 15
Cbc0038I Pass  22: suminf.    0.37532 (44) obj. -88.2929 iterations 13
Cbc0038I Pass  23: suminf.    1.27969 (35) obj. -88.2929 iterations 36
Cbc0038I Pass  24: suminf.    1.10848 (35) obj. -88.2929 iterations 9
Cbc0038I Pass  25: suminf.    1.59078 (24) obj. -88.2929 iterations 44
Cbc0038I Pass  26: suminf.    1.59078 (24) obj. -88.2929 iterations 0
Cbc0038I Pass  27: suminf.    1.27585 (23) obj. -88.2929 iterations 65
Cbc0038I Pass  28: suminf.    1.03644 (14) obj. -88.2929 iterations 19
Cbc0038I Pass  29: suminf.    1.61701 (13) obj. -88.2929 iterations 19
Cbc0038I Pass  30: suminf.    1.56371 (22) obj. -88.2929 iterations 18
Cbc0038I Pass  31: suminf.    1.19592 (18) obj. -88.2929 iterations 37
Cbc0038I Pass  32: suminf.    1.07696 (20) obj. -88.2929 iterations 13
Cbc0038I Pass  33: suminf.    1.82311 (16) obj. -88.2929 iterations 29
Cbc0038I Pass  34: suminf.    1.82311 (16) obj. -88.2929 iterations 8
Cbc0038I Pass  35: suminf.    1.74369 (16) obj. -88.2929 iterations 15
Cbc0038I Rounding solution of -77.2315 is better than previous of -72.6924

Cbc0038I Before mini branch and bound, 245 integers at bound fixed and 0 continuous
Cbc0038I Full problem 391 rows 410 columns, reduced to 151 rows 162 columns - 26 fixed gives 120, 136 - still too large
Cbc0038I Full problem 391 rows 410 columns, reduced to 65 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -77.2315 to -84.1303 (0.25 seconds)
Cbc0038I Round again with cutoff of -116.374
Cbc0038I Pass  35: suminf.    2.39315 (77) obj. -180.583 iterations 0
Cbc0038I Pass  36: suminf.    2.39315 (77) obj. -180.583 iterations 1
Cbc0038I Pass  37: suminf.    1.70713 (63) obj. -137.966 iterations 14
Cbc0038I Pass  38: suminf.    1.14878 (46) obj. -116.374 iterations 19
Cbc0038I Pass  39: suminf.    1.33595 (33) obj. -116.374 iterations 21
Cbc0038I Pass  40: suminf.    1.23844 (33) obj. -116.374 iterations 5
Cbc0038I Pass  41: suminf.    1.32155 (36) obj. -116.374 iterations 62
Cbc0038I Pass  42: suminf.    0.74667 (12) obj. -116.374 iterations 23
Cbc0038I Pass  43: suminf.    0.62071 (61) obj. -116.374 iterations 26
Cbc0038I Pass  44: suminf.    1.70604 (51) obj. -116.374 iterations 48
Cbc0038I Pass  45: suminf.    1.69800 (55) obj. -116.374 iterations 24
Cbc0038I Pass  46: suminf.    2.60251 (41) obj. -116.374 iterations 57
Cbc0038I Pass  47: suminf.    1.54144 (38) obj. -116.374 iterations 31
Cbc0038I Pass  48: suminf.    1.20971 (36) obj. -116.374 iterations 11
Cbc0038I Pass  49: suminf.    1.67208 (33) obj. -116.374 iterations 39
Cbc0038I Pass  50: suminf.    1.13099 (33) obj. -116.374 iterations 23
Cbc0038I Pass  51: suminf.    1.67208 (33) obj. -116.374 iterations 32
Cbc0038I Pass  52: suminf.    2.56219 (48) obj. -116.374 iterations 122
Cbc0038I Pass  53: suminf.    2.18439 (47) obj. -116.374 iterations 25
Cbc0038I Pass  54: suminf.    2.34952 (43) obj. -116.374 iterations 55
Cbc0038I Pass  55: suminf.    1.94606 (43) obj. -116.374 iterations 13
Cbc0038I Pass  56: suminf.    2.30085 (42) obj. -116.374 iterations 19
Cbc0038I Pass  57: suminf.    1.93426 (42) obj. -116.374 iterations 12
Cbc0038I Pass  58: suminf.    2.03310 (40) obj. -116.374 iterations 32
Cbc0038I Pass  59: suminf.    1.97183 (41) obj. -116.374 iterations 16
Cbc0038I Pass  60: suminf.    2.33153 (36) obj. -116.374 iterations 40
Cbc0038I Pass  61: suminf.    1.86180 (36) obj. -116.374 iterations 11
Cbc0038I Pass  62: suminf.    2.74717 (37) obj. -116.374 iterations 21
Cbc0038I Pass  63: suminf.    2.33153 (35) obj. -116.374 iterations 6
Cbc0038I Pass  64: suminf.    2.15211 (55) obj. -116.374 iterations 60
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 391 rows 410 columns, reduced to 83 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -84.1303 to -92.1202 (0.36 seconds)
Cbc0038I Round again with cutoff of -150.07
Cbc0038I Pass  64: suminf.    2.39315 (77) obj. -180.583 iterations 0
Cbc0038I Pass  65: suminf.    2.39315 (77) obj. -180.583 iterations 1
Cbc0038I Pass  66: suminf.    2.16816 (56) obj. -150.07 iterations 24
Cbc0038I Pass  67: suminf.    1.58576 (56) obj. -150.07 iterations 1
Cbc0038I Pass  68: suminf.    1.45395 (41) obj. -150.07 iterations 27
Cbc0038I Pass  69: suminf.    1.26723 (41) obj. -150.07 iterations 10
Cbc0038I Pass  70: suminf.    3.18264 (78) obj. -150.07 iterations 60
Cbc0038I Pass  71: suminf.    3.03437 (84) obj. -150.07 iterations 4
Cbc0038I Pass  72: suminf.    3.25431 (71) obj. -150.07 iterations 45
Cbc0038I Pass  73: suminf.    3.27369 (71) obj. -150.07 iterations 18
Cbc0038I Pass  74: suminf.    3.41475 (70) obj. -150.07 iterations 21
Cbc0038I Pass  75: suminf.    2.64671 (76) obj. -150.07 iterations 24
Cbc0038I Pass  76: suminf.    3.07534 (66) obj. -150.07 iterations 46
Cbc0038I Pass  77: suminf.    2.79692 (72) obj. -150.07 iterations 23
Cbc0038I Pass  78: suminf.    2.81819 (69) obj. -150.07 iterations 28
Cbc0038I Pass  79: suminf.    2.79832 (71) obj. -150.07 iterations 17
Cbc0038I Pass  80: suminf.    2.80356 (69) obj. -150.07 iterations 17
Cbc0038I Pass  81: suminf.    3.93802 (79) obj. -150.07 iterations 77
Cbc0038I Pass  82: suminf.    3.88347 (80) obj. -150.07 iterations 8
Cbc0038I Pass  83: suminf.    3.87837 (77) obj. -150.07 iterations 32
Cbc0038I Pass  84: suminf.    3.25123 (67) obj. -150.07 iterations 26
Cbc0038I Pass  85: suminf.    3.64911 (73) obj. -150.07 iterations 48
Cbc0038I Pass  86: suminf.    3.64911 (73) obj. -150.07 iterations 10
Cbc0038I Pass  87: suminf.    3.23208 (65) obj. -150.07 iterations 39
Cbc0038I Pass  88: suminf.    2.79808 (70) obj. -150.07 iterations 10
Cbc0038I Pass  89: suminf.    3.12316 (65) obj. -150.07 iterations 28
Cbc0038I Pass  90: suminf.    3.12316 (65) obj. -150.07 iterations 7
Cbc0038I Pass  91: suminf.    3.54594 (65) obj. -150.07 iterations 20
Cbc0038I Pass  92: suminf.    3.11625 (64) obj. -150.07 iterations 11
Cbc0038I Pass  93: suminf.    3.11069 (64) obj. -150.07 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 391 rows 410 columns, reduced to 83 rows 94 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.45 seconds - Feasibility pump exiting with objective of -92.1202 - took 0.34 seconds
Cbc0012I Integer solution of -92.12024 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0038I Full problem 391 rows 410 columns, reduced to 11 rows 17 columns
Cbc0031I 138 added rows had average density of 101.68116
Cbc0013I At root node, 138 cuts changed objective from -228.6965 to -157.44896 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 33987 row cuts average 2.0 elements, 0 column cuts (35 active)  in 0.601 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3605 row cuts average 366.1 elements, 0 column cuts (0 active)  in 1.275 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 595 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6614 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.214 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.719 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2438 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.897 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 396 row cuts average 227.7 elements, 0 column cuts (0 active)  in 0.284 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1146 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.575 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -92.12024 best solution, best possible -157.44896 (9.47 seconds)
Cbc0010I After 2 nodes, 3 on tree, -92.12024 best solution, best possible -157.44896 (10.55 seconds)
Cbc0012I Integer solution of -108.4007 found by rounding after 13036 iterations and 3 nodes (10.66 seconds)
Cbc0012I Integer solution of -114.27371 found by rounding after 13659 iterations and 5 nodes (11.27 seconds)
Cbc0010I After 5 nodes, 6 on tree, -114.27371 best solution, best possible -157.44896 (11.32 seconds)
Cbc0012I Integer solution of -115.11364 found by DiveCoefficient after 13749 iterations and 7 nodes (11.42 seconds)
Cbc0012I Integer solution of -119.94926 found by rounding after 14345 iterations and 20 nodes (11.75 seconds)
Cbc0012I Integer solution of -128.44415 found by rounding after 14355 iterations and 21 nodes (11.77 seconds)
Cbc0010I After 29 nodes, 8 on tree, -128.44415 best solution, best possible -157.44896 (12.09 seconds)
Cbc0038I Full problem 391 rows 410 columns, reduced to 111 rows 120 columns
Cbc0010I After 44 nodes, 3 on tree, -128.44415 best solution, best possible -157.44896 (13.70 seconds)
Cbc0010I After 45 nodes, 4 on tree, -128.44415 best solution, best possible -157.44896 (14.45 seconds)
Cbc0010I After 47 nodes, 6 on tree, -128.44415 best solution, best possible -157.44896 (15.55 seconds)
Cbc0010I After 51 nodes, 8 on tree, -128.44415 best solution, best possible -157.44896 (16.36 seconds)
Cbc0010I After 70 nodes, 7 on tree, -128.44415 best solution, best possible -157.44896 (17.10 seconds)
Cbc0010I After 86 nodes, 1 on tree, -128.44415 best solution, best possible -150.58219 (18.85 seconds)
Cbc0010I After 88 nodes, 3 on tree, -128.44415 best solution, best possible -150.58219 (19.89 seconds)
Cbc0038I Full problem 391 rows 410 columns, reduced to 66 rows 77 columns
Cbc0010I After 91 nodes, 6 on tree, -128.44415 best solution, best possible -150.58219 (20.64 seconds)
Cbc0010I After 110 nodes, 9 on tree, -128.44415 best solution, best possible -150.58219 (21.37 seconds)
Cbc0012I Integer solution of -128.75404 found by rounding after 25292 iterations and 112 nodes (21.42 seconds)
Cbc0010I After 133 nodes, 11 on tree, -128.75404 best solution, best possible -150.58219 (22.13 seconds)
Cbc0010I After 163 nodes, 8 on tree, -128.75404 best solution, best possible -150.58219 (22.84 seconds)
Cbc0010I After 182 nodes, 8 on tree, -128.75404 best solution, best possible -150.58219 (23.54 seconds)
Cbc0010I After 194 nodes, 3 on tree, -128.75404 best solution, best possible -150.58219 (24.37 seconds)
Cbc0010I After 197 nodes, 6 on tree, -128.75404 best solution, best possible -150.58219 (25.20 seconds)
Cbc0038I Full problem 391 rows 410 columns, reduced to 119 rows 128 columns
Cbc0010I After 200 nodes, 7 on tree, -128.75404 best solution, best possible -150.58219 (26.01 seconds)
Cbc0010I After 213 nodes, 8 on tree, -128.75404 best solution, best possible -150.58219 (27.17 seconds)
Cbc0010I After 230 nodes, 8 on tree, -128.75404 best solution, best possible -150.58219 (27.93 seconds)
Cbc0010I After 248 nodes, 6 on tree, -128.75404 best solution, best possible -150.58219 (28.69 seconds)
Cbc0001I Search completed - best objective -128.75404, took 35298 iterations and 262 nodes (29.06 seconds)
Cbc0032I Strong branching done 2148 times (46898 iterations), fathomed 13 nodes and fixed 14 variables
Cbc0035I Maximum depth 19, 1497 variables fixed on reduced cost
Total time (CPU seconds):       26.85   (Wallclock seconds):       29.18

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 503 (-24) rows, 262 (-2) columns and 1499 (-46) elements
Clp1000I sum of infeasibilities 0.000247379 - average 4.91808e-07, 115 fixed columns
Coin0506I Presolve 268 (-235) rows, 142 (-120) columns and 800 (-699) elements
Clp0029I End of values pass after 142 iterations
Clp0000I Optimal - objective value 188.86257
Clp0000I Optimal - objective value 188.86257
Coin0511I After Postsolve, objective 188.86257, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13441103 - largest nonzero change 0 ( 0%) - largest zero change 2.971642e-05
Clp0000I Optimal - objective value 188.86257
Clp0000I Optimal - objective value 188.86257
Clp0000I Optimal - objective value 188.86257
Coin0511I After Postsolve, objective 188.86257, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 188.8625652 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 503 rows, 262 columns (261 integer (261 of which binary)) and 1499 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 79 integers unsatisfied sum - 11.0863
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.5216 iterations 231
Cbc0038I Solution found of -3.5216
Cbc0038I Relaxing continuous gives -3.5216
Cbc0038I Before mini branch and bound, 182 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 149 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -3.5216 to -115.88 (0.09 seconds)
Cbc0038I Round again with cutoff of -123.179
Cbc0038I Pass   2: suminf.    4.88098 (25) obj. -123.179 iterations 82
Cbc0038I Pass   3: suminf.    3.29922 (22) obj. -123.179 iterations 22
Cbc0038I Pass   4: suminf.    2.29530 (8) obj. -123.179 iterations 38
Cbc0038I Pass   5: suminf.    0.80401 (5) obj. -123.179 iterations 59
Cbc0038I Pass   6: suminf.    2.26985 (8) obj. -123.179 iterations 50
Cbc0038I Pass   7: suminf.    1.85383 (6) obj. -123.179 iterations 18
Cbc0038I Pass   8: suminf.    1.70159 (6) obj. -123.179 iterations 60
Cbc0038I Pass   9: suminf.    1.05601 (5) obj. -123.179 iterations 31
Cbc0038I Pass  10: suminf.    1.01293 (6) obj. -123.179 iterations 8
Cbc0038I Pass  11: suminf.    1.87085 (6) obj. -123.179 iterations 32
Cbc0038I Pass  12: suminf.    1.20879 (6) obj. -123.179 iterations 15
Cbc0038I Pass  13: suminf.    1.83296 (6) obj. -123.179 iterations 31
Cbc0038I Pass  14: suminf.    3.01792 (15) obj. -123.179 iterations 70
Cbc0038I Pass  15: suminf.    0.80960 (8) obj. -123.179 iterations 77
Cbc0038I Pass  16: suminf.    0.80375 (10) obj. -123.179 iterations 9
Cbc0038I Pass  17: suminf.    2.92292 (7) obj. -123.179 iterations 44
Cbc0038I Pass  18: suminf.    2.10708 (9) obj. -123.179 iterations 6
Cbc0038I Pass  19: suminf.    1.83050 (7) obj. -123.179 iterations 16
Cbc0038I Pass  20: suminf.    1.35613 (5) obj. -123.179 iterations 49
Cbc0038I Pass  21: suminf.    0.69643 (7) obj. -123.179 iterations 33
Cbc0038I Pass  22: suminf.    2.10560 (10) obj. -123.179 iterations 29
Cbc0038I Pass  23: suminf.    1.31694 (5) obj. -123.179 iterations 25
Cbc0038I Pass  24: suminf.    1.14370 (5) obj. -123.179 iterations 7
Cbc0038I Pass  25: suminf.    1.41943 (7) obj. -123.179 iterations 55
Cbc0038I Pass  26: suminf.    1.31771 (4) obj. -123.179 iterations 22
Cbc0038I Pass  27: suminf.    1.49812 (6) obj. -123.179 iterations 49
Cbc0038I Pass  28: suminf.    1.11970 (5) obj. -123.179 iterations 12
Cbc0038I Pass  29: suminf.    0.77314 (5) obj. -123.179 iterations 33
Cbc0038I Pass  30: suminf.    1.61147 (10) obj. -123.179 iterations 33
Cbc0038I Pass  31: suminf.    1.31771 (4) obj. -123.179 iterations 34
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 159 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 190 rows 103 columns
Cbc0038I Mini branch and bound improved solution from -115.88 to -122.265 (0.17 seconds)
Cbc0038I Round again with cutoff of -136.315
Cbc0038I Pass  31: suminf.    5.44825 (29) obj. -136.315 iterations 1
Cbc0038I Pass  32: suminf.    4.30906 (18) obj. -136.315 iterations 21
Cbc0038I Pass  33: suminf.    3.63934 (18) obj. -136.315 iterations 38
Cbc0038I Pass  34: suminf.    3.97621 (12) obj. -136.315 iterations 40
Cbc0038I Pass  35: suminf.    3.21876 (21) obj. -136.315 iterations 31
Cbc0038I Pass  36: suminf.    3.49061 (13) obj. -136.315 iterations 53
Cbc0038I Pass  37: suminf.    2.65856 (12) obj. -136.315 iterations 18
Cbc0038I Pass  38: suminf.    2.65078 (13) obj. -136.315 iterations 7
Cbc0038I Pass  39: suminf.    4.23627 (12) obj. -136.315 iterations 26
Cbc0038I Pass  40: suminf.    2.62284 (12) obj. -136.315 iterations 49
Cbc0038I Pass  41: suminf.    2.30235 (9) obj. -136.315 iterations 19
Cbc0038I Pass  42: suminf.    2.23366 (9) obj. -136.315 iterations 4
Cbc0038I Pass  43: suminf.    3.53227 (12) obj. -136.315 iterations 25
Cbc0038I Pass  44: suminf.    3.48724 (12) obj. -136.315 iterations 5
Cbc0038I Pass  45: suminf.    3.02156 (13) obj. -136.315 iterations 35
Cbc0038I Pass  46: suminf.    2.86231 (12) obj. -136.315 iterations 25
Cbc0038I Pass  47: suminf.    3.36286 (11) obj. -136.315 iterations 20
Cbc0038I Pass  48: suminf.    2.89382 (12) obj. -136.315 iterations 32
Cbc0038I Pass  49: suminf.    3.33696 (11) obj. -136.315 iterations 32
Cbc0038I Pass  50: suminf.    3.18845 (11) obj. -136.315 iterations 24
Cbc0038I Pass  51: suminf.    2.59820 (12) obj. -136.315 iterations 25
Cbc0038I Pass  52: suminf.    2.59820 (12) obj. -136.315 iterations 2
Cbc0038I Pass  53: suminf.    3.13060 (11) obj. -136.315 iterations 22
Cbc0038I Pass  54: suminf.    2.89382 (12) obj. -136.315 iterations 33
Cbc0038I Pass  55: suminf.    2.89382 (12) obj. -136.315 iterations 0
Cbc0038I Pass  56: suminf.    3.33696 (11) obj. -136.315 iterations 32
Cbc0038I Pass  57: suminf.    3.18845 (11) obj. -136.315 iterations 24
Cbc0038I Pass  58: suminf.    2.59820 (12) obj. -136.315 iterations 23
Cbc0038I Pass  59: suminf.    2.59820 (12) obj. -136.315 iterations 2
Cbc0038I Pass  60: suminf.    3.13060 (11) obj. -136.315 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 167 integers at bound fixed and 0 continuous
Cbc0038I Full problem 503 rows 262 columns, reduced to 175 rows 95 columns
Cbc0038I Mini branch and bound did not improve solution (0.27 seconds)
Cbc0038I After 0.27 seconds - Feasibility pump exiting with objective of -122.265 - took 0.25 seconds
Cbc0012I Integer solution of -122.26525 found by feasibility pump after 0 iterations and 0 nodes (0.27 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 154 rows 84 columns
Cbc0012I Integer solution of -122.59193 found by RINS after 0 iterations and 0 nodes (0.35 seconds)
Cbc0031I 48 added rows had average density of 130.5
Cbc0013I At root node, 48 cuts changed objective from -188.86257 to -175.29472 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 49065 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.543 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3306 row cuts average 257.3 elements, 0 column cuts (0 active)  in 0.537 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.104 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.592 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 203 row cuts average 253.4 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -122.59193 best solution, best possible -175.29472 (6.25 seconds)
Cbc0010I After 9 nodes, 9 on tree, -122.59193 best solution, best possible -175.29472 (6.96 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 18 rows 18 columns
Cbc0012I Integer solution of -124.43215 found by rounding after 26185 iterations and 43 nodes (7.44 seconds)
Cbc0010I After 70 nodes, 12 on tree, -124.43215 best solution, best possible -175.29472 (7.68 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 4 rows 8 columns
Cbc0012I Integer solution of -127.32174 found by RINS after 28781 iterations and 91 nodes (7.80 seconds)
Cbc0004I Integer solution of -128.44415 found after 30682 iterations and 154 nodes (7.97 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 126 rows 74 columns
Cbc0012I Integer solution of -128.75404 found by RINS after 32534 iterations and 200 nodes (8.21 seconds)
Cbc0010I After 230 nodes, 11 on tree, -128.75404 best solution, best possible -175.29472 (8.38 seconds)
Cbc0038I Full problem 503 rows 262 columns, reduced to 9 rows 11 columns
Cbc0001I Search completed - best objective -128.75404, took 40681 iterations and 414 nodes (9.06 seconds)
Cbc0032I Strong branching done 3334 times (79210 iterations), fathomed 77 nodes and fixed 249 variables
Cbc0035I Maximum depth 60, 1960 variables fixed on reduced cost
Total time (CPU seconds):       8.90   (Wallclock seconds):       9.12

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 391 (-136) rows, 410 (-115) columns and 19769 (-15968) elements
Clp1000I sum of infeasibilities 2.0527e-06 - average 5.24988e-09, 82 fixed columns
Coin0506I Presolve 309 (-82) rows, 323 (-87) columns and 13010 (-6759) elements
Clp0006I 0  Obj 202.65103 Dual inf 118.96234 (323)
Clp0029I End of values pass after 321 iterations
Clp0014I Perturbing problem by 0.001% of 2.3847667 - largest nonzero change 2.8891026e-05 ( 0.0023693761%) - largest zero change 2.9895905e-05
Clp0000I Optimal - objective value 228.30537
Clp0000I Optimal - objective value 228.30537
Coin0511I After Postsolve, objective 228.30537, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 228.30537 Dual inf 20.675162 (5)
Clp0014I Perturbing problem by 0.001% of 1.7395669 - largest nonzero change 2.5955254e-05 ( 0.0016756202%) - largest zero change 2.9597463e-05
Clp0000I Optimal - objective value 228.6965
Clp0000I Optimal - objective value 228.6965
Clp0000I Optimal - objective value 228.6965
Coin0511I After Postsolve, objective 228.6965, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 228.6965042 - 0 iterations time 0.162, Presolve 0.00, Idiot 0.16

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 391 rows, 410 columns (410 integer (410 of which binary)) and 19769 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.732%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 139 integers unsatisfied sum - 8.45866
Cbc0038I Pass   1: suminf.    2.39315 (77) obj. -180.583 iterations 58
Cbc0038I Pass   2: suminf.    2.39315 (77) obj. -180.583 iterations 3
Cbc0038I Pass   3: suminf.    1.30973 (53) obj. -122.62 iterations 24
Cbc0038I Pass   4: suminf.    0.70355 (35) obj. -97.487 iterations 18
Cbc0038I Pass   5: suminf.    0.29204 (19) obj. -76.0553 iterations 16
Cbc0038I Solution found of -55.3834
Cbc0038I Rounding solution of -72.6924 is better than previous of -55.3834

Cbc0038I Before mini branch and bound, 268 integers at bound fixed and 0 continuous
Cbc0038I Full problem 391 rows 410 columns, reduced to 61 rows 64 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -88.2929
Cbc0038I Pass   6: suminf.    2.39315 (77) obj. -180.583 iterations 0
Cbc0038I Pass   7: suminf.    2.39315 (77) obj. -180.583 iterations 1
Cbc0038I Pass   8: suminf.    1.79584 (65) obj. -139.877 iterations 12
Cbc0038I Pass   9: suminf.    0.91399 (42) obj. -109.128 iterations 23
Cbc0038I Pass  10: suminf.    0.70223 (19) obj. -88.2929 iterations 30
Cbc0038I Pass  11: suminf.    0.48349 (3) obj. -90.4454 iterations 19
Cbc0038I Pass  12: suminf.    0.41597 (3) obj. -88.2929 iterations 1
Cbc0038I Pass  13: suminf.    0.54448 (2) obj. -88.2929 iterations 4
Cbc0038I Pass  14: suminf.    0.21782 (2) obj. -88.2929 iterations 9
Cbc0038I Pass  15: suminf.    0.87200 (2) obj. -88.2929 iterations 5
Cbc0038I Pass  16: suminf.    0.25529 (2) obj. -88.2929 iterations 1
Cbc0038I Pass  17: suminf.    1.85987 (24) obj. -90.4944 iterations 84
Cbc0038I Pass  18: suminf.    0.96534 (17) obj. -88.2929 iterations 27
Cbc0038I Pass  19: suminf.    1.03624 (47) obj. -88.2929 iterations 50
Cbc0038I Pass  20: suminf.    1.03624 (47) obj. -88.2929 iterations 0
Cbc0038I Pass  21: suminf.    0.55500 (43) obj. -88.2929 iterations 15
Cbc0038I Pass  22: suminf.    0.37532 (44) obj. -88.2929 iterations 13
Cbc0038I Pass  23: suminf.    1.27969 (35) obj. -88.2929 iterations 36
Cbc0038I Pass  24: suminf.    1.10848 (35) obj. -88.2929 iterations 9
Cbc0038I Pass  25: suminf.    1.59078 (24) obj. -88.2929 iterations 44
Cbc0038I Pass  26: suminf.    1.59078 (24) obj. -88.2929 iterations 0
Cbc0038I Pass  27: suminf.    1.27585 (23) obj. -88.2929 iterations 65
Cbc0038I Pass  28: suminf.    1.03644 (14) obj. -88.2929 iterations 19
Cbc0038I Pass  29: suminf.    1.61701 (13) obj. -88.2929 iterations 19
Cbc0038I Pass  30: suminf.    1.56371 (22) obj. -88.2929 iterations 18
Cbc0038I Pass  31: suminf.    1.19592 (18) obj. -88.2929 iterations 37
Cbc0038I Pass  32: suminf.    1.07696 (20) obj. -88.2929 iterations 13
Cbc0038I Pass  33: suminf.    1.82311 (16) obj. -88.2929 iterations 29
Cbc0038I Pass  34: suminf.    1.82311 (16) obj. -88.2929 iterations 8
Cbc0038I Pass  35: suminf.    1.74369 (16) obj. -88.2929 iterations 15
Cbc0038I Rounding solution of -77.2315 is better than previous of -72.6924

Cbc0038I Before mini branch and bound, 245 integers at bound fixed and 0 continuous
Cbc0038I Full problem 391 rows 410 columns, reduced to 151 rows 162 columns - 26 fixed gives 120, 136 - still too large
Cbc0038I Full problem 391 rows 410 columns, reduced to 65 rows 80 columns
Cbc0038I Mini branch and bound improved solution from -77.2315 to -84.1303 (0.25 seconds)
Cbc0038I Round again with cutoff of -116.374
Cbc0038I Pass  35: suminf.    2.39315 (77) obj. -180.583 iterations 0
Cbc0038I Pass  36: suminf.    2.39315 (77) obj. -180.583 iterations 1
Cbc0038I Pass  37: suminf.    1.70713 (63) obj. -137.966 iterations 14
Cbc0038I Pass  38: suminf.    1.14878 (46) obj. -116.374 iterations 19
Cbc0038I Pass  39: suminf.    1.33595 (33) obj. -116.374 iterations 21
Cbc0038I Pass  40: suminf.    1.23844 (33) obj. -116.374 iterations 5
Cbc0038I Pass  41: suminf.    1.32155 (36) obj. -116.374 iterations 62
Cbc0038I Pass  42: suminf.    0.74667 (12) obj. -116.374 iterations 23
Cbc0038I Pass  43: suminf.    0.62071 (61) obj. -116.374 iterations 26
Cbc0038I Pass  44: suminf.    1.70604 (51) obj. -116.374 iterations 48
Cbc0038I Pass  45: suminf.    1.69800 (55) obj. -116.374 iterations 24
Cbc0038I Pass  46: suminf.    2.60251 (41) obj. -116.374 iterations 57
Cbc0038I Pass  47: suminf.    1.54144 (38) obj. -116.374 iterations 31
Cbc0038I Pass  48: suminf.    1.20971 (36) obj. -116.374 iterations 11
Cbc0038I Pass  49: suminf.    1.67208 (33) obj. -116.374 iterations 39
Cbc0038I Pass  50: suminf.    1.13099 (33) obj. -116.374 iterations 23
Cbc0038I Pass  51: suminf.    1.67208 (33) obj. -116.374 iterations 32
Cbc0038I Pass  52: suminf.    2.56219 (48) obj. -116.374 iterations 122
Cbc0038I Pass  53: suminf.    2.18439 (47) obj. -116.374 iterations 25
Cbc0038I Pass  54: suminf.    2.34952 (43) obj. -116.374 iterations 55
Cbc0038I Pass  55: suminf.    1.94606 (43) obj. -116.374 iterations 13
Cbc0038I Pass  56: suminf.    2.30085 (42) obj. -116.374 iterations 19
Cbc0038I Pass  57: suminf.    1.93426 (42) obj. -116.374 iterations 12
Cbc0038I Pass  58: suminf.    2.03310 (40) obj. -116.374 iterations 32
Cbc0038I Pass  59: suminf.    1.97183 (41) obj. -116.374 iterations 16
Cbc0038I Pass  60: suminf.    2.33153 (36) obj. -116.374 iterations 40
Cbc0038I Pass  61: suminf.    1.86180 (36) obj. -116.374 iterations 11
Cbc0038I Pass  62: suminf.    2.74717 (37) obj. -116.374 iterations 21
Cbc0038I Pass  63: suminf.    2.33153 (35) obj. -116.374 iterations 6
Cbc0038I Pass  64: suminf.    2.15211 (55) obj. -116.374 iterations 60
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 233 integers at bound fixed and 0 continuous
Cbc0038I Full problem 391 rows 410 columns, reduced to 83 rows 101 columns
Cbc0038I Mini branch and bound improved solution from -84.1303 to -92.1202 (0.36 seconds)
Cbc0038I Round again with cutoff of -150.07
Cbc0038I Pass  64: suminf.    2.39315 (77) obj. -180.583 iterations 0
Cbc0038I Pass  65: suminf.    2.39315 (77) obj. -180.583 iterations 1
Cbc0038I Pass  66: suminf.    2.16816 (56) obj. -150.07 iterations 24
Cbc0038I Pass  67: suminf.    1.58576 (56) obj. -150.07 iterations 1
Cbc0038I Pass  68: suminf.    1.45395 (41) obj. -150.07 iterations 27
Cbc0038I Pass  69: suminf.    1.26723 (41) obj. -150.07 iterations 10
Cbc0038I Pass  70: suminf.    3.18264 (78) obj. -150.07 iterations 60
Cbc0038I Pass  71: suminf.    3.03437 (84) obj. -150.07 iterations 4
Cbc0038I Pass  72: suminf.    3.25431 (71) obj. -150.07 iterations 45
Cbc0038I Pass  73: suminf.    3.27369 (71) obj. -150.07 iterations 18
Cbc0038I Pass  74: suminf.    3.41475 (70) obj. -150.07 iterations 21
Cbc0038I Pass  75: suminf.    2.64671 (76) obj. -150.07 iterations 24
Cbc0038I Pass  76: suminf.    3.07534 (66) obj. -150.07 iterations 46
Cbc0038I Pass  77: suminf.    2.79692 (72) obj. -150.07 iterations 23
Cbc0038I Pass  78: suminf.    2.81819 (69) obj. -150.07 iterations 28
Cbc0038I Pass  79: suminf.    2.79832 (71) obj. -150.07 iterations 17
Cbc0038I Pass  80: suminf.    2.80356 (69) obj. -150.07 iterations 17
Cbc0038I Pass  81: suminf.    3.93802 (79) obj. -150.07 iterations 77
Cbc0038I Pass  82: suminf.    3.88347 (80) obj. -150.07 iterations 8
Cbc0038I Pass  83: suminf.    3.87837 (77) obj. -150.07 iterations 32
Cbc0038I Pass  84: suminf.    3.25123 (67) obj. -150.07 iterations 26
Cbc0038I Pass  85: suminf.    3.64911 (73) obj. -150.07 iterations 48
Cbc0038I Pass  86: suminf.    3.64911 (73) obj. -150.07 iterations 10
Cbc0038I Pass  87: suminf.    3.23208 (65) obj. -150.07 iterations 39
Cbc0038I Pass  88: suminf.    2.79808 (70) obj. -150.07 iterations 10
Cbc0038I Pass  89: suminf.    3.12316 (65) obj. -150.07 iterations 28
Cbc0038I Pass  90: suminf.    3.12316 (65) obj. -150.07 iterations 7
Cbc0038I Pass  91: suminf.    3.54594 (65) obj. -150.07 iterations 20
Cbc0038I Pass  92: suminf.    3.11625 (64) obj. -150.07 iterations 11
Cbc0038I Pass  93: suminf.    3.11069 (64) obj. -150.07 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 391 rows 410 columns, reduced to 83 rows 94 columns
Cbc0038I Mini branch and bound did not improve solution (0.45 seconds)
Cbc0038I After 0.45 seconds - Feasibility pump exiting with objective of -92.1202 - took 0.34 seconds
Cbc0012I Integer solution of -92.12024 found by feasibility pump after 0 iterations and 0 nodes (0.45 seconds)
Cbc0038I Full problem 391 rows 410 columns, reduced to 11 rows 17 columns
Cbc0031I 138 added rows had average density of 101.68116
Cbc0013I At root node, 138 cuts changed objective from -228.6965 to -157.44896 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 33987 row cuts average 2.0 elements, 0 column cuts (35 active)  in 0.603 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3605 row cuts average 366.1 elements, 0 column cuts (0 active)  in 1.278 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 595 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6614 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.216 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.723 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2438 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.899 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 396 row cuts average 227.7 elements, 0 column cuts (0 active)  in 0.292 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1146 row cuts average 30.7 elements, 0 column cuts (0 active)  in 0.576 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -92.12024 best solution, best possible -157.44896 (9.51 seconds)
Cbc0010I After 2 nodes, 3 on tree, -92.12024 best solution, best possible -157.44896 (10.59 seconds)
Cbc0012I Integer solution of -108.4007 found by rounding after 13036 iterations and 3 nodes (10.71 seconds)
Cbc0012I Integer solution of -114.27371 found by rounding after 13659 iterations and 5 nodes (11.31 seconds)
Cbc0010I After 5 nodes, 6 on tree, -114.27371 best solution, best possible -157.44896 (11.37 seconds)
Cbc0012I Integer solution of -115.11364 found by DiveCoefficient after 13749 iterations and 7 nodes (11.47 seconds)
Cbc0012I Integer solution of -119.94926 found by rounding after 14345 iterations and 20 nodes (11.80 seconds)
Cbc0012I Integer solution of -128.44415 found by rounding after 14355 iterations and 21 nodes (11.82 seconds)
Cbc0010I After 29 nodes, 8 on tree, -128.44415 best solution, best possible -157.44896 (12.14 seconds)
Cbc0038I Full problem 391 rows 410 columns, reduced to 111 rows 120 columns
Cbc0010I After 44 nodes, 3 on tree, -128.44415 best solution, best possible -157.44896 (13.78 seconds)
Cbc0010I After 45 nodes, 4 on tree, -128.44415 best solution, best possible -157.44896 (14.52 seconds)
Cbc0010I After 47 nodes, 6 on tree, -128.44415 best solution, best possible -157.44896 (15.63 seconds)
Cbc0010I After 51 nodes, 8 on tree, -128.44415 best solution, best possible -157.44896 (16.44 seconds)
Cbc0010I After 70 nodes, 7 on tree, -128.44415 best solution, best possible -157.44896 (17.20 seconds)
Cbc0010I After 86 nodes, 1 on tree, -128.44415 best solution, best possible -150.58219 (18.92 seconds)
Cbc0010I After 88 nodes, 3 on tree, -128.44415 best solution, best possible -150.58219 (19.96 seconds)
Cbc0038I Full problem 391 rows 410 columns, reduced to 66 rows 77 columns
Cbc0010I After 91 nodes, 6 on tree, -128.44415 best solution, best possible -150.58219 (20.69 seconds)
Cbc0010I After 110 nodes, 9 on tree, -128.44415 best solution, best possible -150.58219 (21.39 seconds)
Cbc0012I Integer solution of -128.75404 found by rounding after 25292 iterations and 112 nodes (21.45 seconds)
Cbc0010I After 133 nodes, 11 on tree, -128.75404 best solution, best possible -150.58219 (22.13 seconds)
Cbc0010I After 159 nodes, 11 on tree, -128.75404 best solution, best possible -150.58219 (22.83 seconds)
Cbc0010I After 182 nodes, 8 on tree, -128.75404 best solution, best possible -150.58219 (23.58 seconds)
Cbc0010I After 194 nodes, 3 on tree, -128.75404 best solution, best possible -150.58219 (24.42 seconds)
Cbc0010I After 197 nodes, 6 on tree, -128.75404 best solution, best possible -150.58219 (25.24 seconds)
Cbc0038I Full problem 391 rows 410 columns, reduced to 119 rows 128 columns
Cbc0010I After 200 nodes, 7 on tree, -128.75404 best solution, best possible -150.58219 (26.06 seconds)
Cbc0010I After 213 nodes, 8 on tree, -128.75404 best solution, best possible -150.58219 (27.23 seconds)
Cbc0010I After 230 nodes, 8 on tree, -128.75404 best solution, best possible -150.58219 (27.98 seconds)
Cbc0010I After 248 nodes, 6 on tree, -128.75404 best solution, best possible -150.58219 (28.73 seconds)
Cbc0001I Search completed - best objective -128.75404, took 35298 iterations and 262 nodes (29.10 seconds)
Cbc0032I Strong branching done 2148 times (46898 iterations), fathomed 13 nodes and fixed 14 variables
Cbc0035I Maximum depth 19, 1497 variables fixed on reduced cost
Total time (CPU seconds):       26.88   (Wallclock seconds):       29.22

