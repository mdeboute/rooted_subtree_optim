Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-17) rows, 27 (-6) columns and 143 (-40) elements
Clp1000I sum of infeasibilities 5.59251e-06 - average 1.16511e-07, 10 fixed columns
Coin0506I Presolve 27 (-21) rows, 16 (-11) columns and 80 (-63) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 142.9112
Clp0000I Optimal - objective value 142.9112
Coin0511I After Postsolve, objective 142.9112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 142.9112
Clp0000I Optimal - objective value 142.9112
Clp0000I Optimal - objective value 142.9112
Coin0511I After Postsolve, objective 142.9112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.9111971 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 27 columns (26 integer (26 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.734%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 4.28524
Cbc0038I Pass   1: suminf.    0.25000 (1) obj. -70.7311 iterations 15
Cbc0038I Solution found of -42.1907
Cbc0038I Relaxing continuous gives -42.1907
Cbc0038I Rounding solution of -68.426 is better than previous of -42.1907

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 27 columns, reduced to 19 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -68.426 to -82.4384 (0.01 seconds)
Cbc0038I Round again with cutoff of -86.783
Cbc0038I Pass   2: suminf.    0.96551 (4) obj. -86.783 iterations 2
Cbc0038I Pass   3: suminf.    0.75510 (3) obj. -86.783 iterations 7
Cbc0038I Pass   4: suminf.    0.22764 (1) obj. -86.783 iterations 3
Cbc0038I Pass   5: suminf.    0.32102 (1) obj. -86.783 iterations 1
Cbc0038I Pass   6: suminf.    0.82823 (4) obj. -86.783 iterations 6
Cbc0038I Pass   7: suminf.    0.46454 (2) obj. -86.783 iterations 1
Cbc0038I Pass   8: suminf.    0.59637 (3) obj. -86.783 iterations 3
Cbc0038I Pass   9: suminf.    0.66892 (2) obj. -86.783 iterations 4
Cbc0038I Pass  10: suminf.    0.12156 (1) obj. -86.783 iterations 2
Cbc0038I Pass  11: suminf.    0.84616 (2) obj. -86.783 iterations 2
Cbc0038I Pass  12: suminf.    0.66892 (2) obj. -86.783 iterations 1
Cbc0038I Pass  13: suminf.    2.53166 (8) obj. -86.783 iterations 7
Cbc0038I Pass  14: suminf.    0.65850 (2) obj. -86.783 iterations 9
Cbc0038I Pass  15: suminf.    0.56109 (2) obj. -86.783 iterations 3
Cbc0038I Pass  16: suminf.    0.50496 (2) obj. -86.783 iterations 2
Cbc0038I Pass  17: suminf.    0.35473 (2) obj. -86.783 iterations 2
Cbc0038I Pass  18: suminf.    1.18166 (3) obj. -86.783 iterations 3
Cbc0038I Pass  19: suminf.    1.26316 (3) obj. -86.783 iterations 8
Cbc0038I Pass  20: suminf.    0.91040 (3) obj. -86.783 iterations 3
Cbc0038I Pass  21: suminf.    0.85168 (3) obj. -86.783 iterations 1
Cbc0038I Pass  22: suminf.    0.96736 (2) obj. -86.783 iterations 3
Cbc0038I Pass  23: suminf.    0.54677 (3) obj. -86.783 iterations 3
Cbc0038I Pass  24: suminf.    0.32102 (1) obj. -86.783 iterations 4
Cbc0038I Pass  25: suminf.    0.22764 (1) obj. -86.783 iterations 1
Cbc0038I Pass  26: suminf.    1.27462 (4) obj. -86.783 iterations 6
Cbc0038I Pass  27: suminf.    0.22764 (1) obj. -86.783 iterations 4
Cbc0038I Pass  28: suminf.    0.54962 (2) obj. -86.783 iterations 3
Cbc0038I Pass  29: suminf.    0.54962 (2) obj. -86.783 iterations 2
Cbc0038I Pass  30: suminf.    0.68733 (3) obj. -86.783 iterations 2
Cbc0038I Pass  31: suminf.    0.65452 (4) obj. -86.783 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 27 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -82.4384 to -84.7154 (0.02 seconds)
Cbc0038I Round again with cutoff of -94.6029
Cbc0038I Pass  31: suminf.    1.31464 (6) obj. -94.6029 iterations 1
Cbc0038I Pass  32: suminf.    0.91775 (3) obj. -94.6029 iterations 2
Cbc0038I Pass  33: suminf.    0.86997 (4) obj. -94.6029 iterations 3
Cbc0038I Pass  34: suminf.    0.38133 (2) obj. -94.6029 iterations 5
Cbc0038I Pass  35: suminf.    0.16842 (1) obj. -94.6029 iterations 1
Cbc0038I Pass  36: suminf.    0.46204 (2) obj. -94.6029 iterations 3
Cbc0038I Pass  37: suminf.    3.26100 (8) obj. -94.6029 iterations 11
Cbc0038I Pass  38: suminf.    1.47699 (5) obj. -94.6029 iterations 9
Cbc0038I Pass  39: suminf.    0.94474 (5) obj. -94.6029 iterations 4
Cbc0038I Pass  40: suminf.    0.95580 (4) obj. -94.6029 iterations 6
Cbc0038I Pass  41: suminf.    0.43241 (2) obj. -94.6029 iterations 2
Cbc0038I Pass  42: suminf.    0.81752 (2) obj. -94.6029 iterations 3
Cbc0038I Pass  43: suminf.    3.62639 (10) obj. -94.6029 iterations 7
Cbc0038I Pass  44: suminf.    0.81752 (2) obj. -94.6029 iterations 9
Cbc0038I Pass  45: suminf.    1.91097 (7) obj. -94.6029 iterations 14
Cbc0038I Pass  46: suminf.    1.32148 (4) obj. -94.6029 iterations 5
Cbc0038I Pass  47: suminf.    0.69013 (4) obj. -94.6029 iterations 4
Cbc0038I Pass  48: suminf.    0.69013 (4) obj. -94.6029 iterations 1
Cbc0038I Pass  49: suminf.    0.84616 (2) obj. -94.6029 iterations 5
Cbc0038I Pass  50: suminf.    0.81752 (2) obj. -94.6029 iterations 1
Cbc0038I Pass  51: suminf.    0.81752 (2) obj. -94.6029 iterations 0
Cbc0038I Pass  52: suminf.    0.43241 (2) obj. -94.6029 iterations 3
Cbc0038I Pass  53: suminf.    2.33510 (8) obj. -94.6029 iterations 8
Cbc0038I Pass  54: suminf.    0.79232 (4) obj. -94.6029 iterations 4
Cbc0038I Pass  55: suminf.    0.79232 (4) obj. -94.6029 iterations 0
Cbc0038I Pass  56: suminf.    1.52562 (5) obj. -94.6029 iterations 4
Cbc0038I Pass  57: suminf.    1.18161 (6) obj. -94.6029 iterations 6
Cbc0038I Pass  58: suminf.    1.36493 (4) obj. -94.6029 iterations 6
Cbc0038I Pass  59: suminf.    0.42220 (2) obj. -94.6029 iterations 4
Cbc0038I Pass  60: suminf.    0.25882 (3) obj. -94.6029 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 27 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -84.7154 - took 0.04 seconds
Cbc0012I Integer solution of -84.71535 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 46 rows 27 columns, reduced to 21 rows 12 columns
Cbc0031I 10 added rows had average density of 15
Cbc0013I At root node, 10 cuts changed objective from -125.88273 to -99.406852 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 326 row cuts average 3.2 elements, 7 column cuts (7 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 611 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -84.71535, took 1756 iterations and 8 nodes (0.16 seconds)
Cbc0032I Strong branching done 86 times (546 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.16

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 46 (-18) rows, 50 (-12) columns and 436 (-212) elements
Clp1000I sum of infeasibilities 6.36008e-08 - average 1.38263e-09, 20 fixed columns
Coin0506I Presolve 29 (-17) rows, 30 (-20) columns and 154 (-282) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 151.30036
Clp0000I Optimal - objective value 151.30036
Coin0511I After Postsolve, objective 151.30036, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 151.30036
Clp0000I Optimal - objective value 151.30036
Clp0000I Optimal - objective value 151.30036
Coin0511I After Postsolve, objective 151.30036, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 151.3003588 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 4 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 394 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.561%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 6.73059
Cbc0038I Pass   1: suminf.    1.00980 (6) obj. -59.3058 iterations 19
Cbc0038I Pass   2: suminf.    1.00980 (6) obj. -59.3058 iterations 1
Cbc0038I Solution found of -29.7469
Cbc0038I Rounding solution of -35.4777 is better than previous of -29.7469

Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 19 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -35.4777 to -77.3823 (0.02 seconds)
Cbc0038I Round again with cutoff of -81.9261
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.48901 (13) obj. -81.9261 iterations 7
Cbc0038I Pass   4: suminf.    1.74454 (15) obj. -81.9261 iterations 2
Cbc0038I Pass   5: suminf.    1.29206 (6) obj. -81.9261 iterations 1
Cbc0038I Pass   6: suminf.    0.70071 (2) obj. -81.9261 iterations 5
Cbc0038I Pass   7: suminf.    0.34737 (1) obj. -83.7495 iterations 2
Cbc0038I Pass   8: suminf.    0.36942 (1) obj. -81.9261 iterations 1
Cbc0038I Pass   9: suminf.    0.89750 (6) obj. -81.9261 iterations 7
Cbc0038I Pass  10: suminf.    0.69066 (5) obj. -81.9261 iterations 3
Cbc0038I Pass  11: suminf.    0.72883 (7) obj. -81.9261 iterations 6
Cbc0038I Pass  12: suminf.    0.66856 (2) obj. -81.9261 iterations 1
Cbc0038I Pass  13: suminf.    0.40872 (1) obj. -81.9261 iterations 1
Cbc0038I Pass  14: suminf.    0.32222 (1) obj. -88.6153 iterations 1
Cbc0038I Pass  15: suminf.    2.08472 (15) obj. -81.9261 iterations 12
Cbc0038I Pass  16: suminf.    1.82206 (10) obj. -81.9261 iterations 2
Cbc0038I Pass  17: suminf.    1.58719 (9) obj. -81.9261 iterations 1
Cbc0038I Pass  18: suminf.    1.58719 (9) obj. -81.9261 iterations 0
Cbc0038I Pass  19: suminf.    0.38286 (1) obj. -81.9261 iterations 8
Cbc0038I Pass  20: suminf.    0.32222 (1) obj. -86.6153 iterations 1
Cbc0038I Pass  21: suminf.    0.90529 (3) obj. -91.7352 iterations 5
Cbc0038I Pass  22: suminf.    0.90529 (3) obj. -91.7352 iterations 1
Cbc0038I Pass  23: suminf.    0.43459 (1) obj. -81.9261 iterations 3
Cbc0038I Pass  24: suminf.    0.32222 (1) obj. -90.6153 iterations 1
Cbc0038I Pass  25: suminf.    1.09378 (4) obj. -81.9261 iterations 10
Cbc0038I Pass  26: suminf.    0.51463 (3) obj. -81.9261 iterations 5
Cbc0038I Pass  27: suminf.    0.72565 (2) obj. -81.9261 iterations 3
Cbc0038I Pass  28: suminf.    0.23361 (2) obj. -81.9261 iterations 2
Cbc0038I Pass  29: suminf.    1.11331 (10) obj. -81.9261 iterations 16
Cbc0038I Pass  30: suminf.    0.95983 (8) obj. -81.9261 iterations 3
Cbc0038I Pass  31: suminf.    0.85626 (4) obj. -81.9261 iterations 9
Cbc0038I Pass  32: suminf.    0.50764 (2) obj. -83.0128 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 31 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -77.3823 to -84.7154 (0.05 seconds)
Cbc0038I Round again with cutoff of -92.3362
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.91838 (13) obj. -92.3362 iterations 0
Cbc0038I Pass  33: suminf.    2.91838 (13) obj. -92.3362 iterations 0
Cbc0038I Pass  34: suminf.    0.59447 (3) obj. -92.3362 iterations 22
Cbc0038I Pass  35: suminf.    0.42345 (2) obj. -92.3362 iterations 1
Cbc0038I Pass  36: suminf.    0.61554 (2) obj. -92.3362 iterations 1
Cbc0038I Pass  37: suminf.    2.82711 (9) obj. -92.3362 iterations 14
Cbc0038I Pass  38: suminf.    2.64096 (11) obj. -92.3362 iterations 6
Cbc0038I Pass  39: suminf.    1.59991 (5) obj. -92.3362 iterations 11
Cbc0038I Pass  40: suminf.    0.98018 (3) obj. -92.3362 iterations 3
Cbc0038I Pass  41: suminf.    1.36118 (5) obj. -92.3362 iterations 4
Cbc0038I Pass  42: suminf.    1.06866 (3) obj. -92.3362 iterations 3
Cbc0038I Pass  43: suminf.    2.54497 (8) obj. -92.3362 iterations 10
Cbc0038I Pass  44: suminf.    1.25379 (6) obj. -92.3362 iterations 5
Cbc0038I Pass  45: suminf.    1.25379 (6) obj. -92.3362 iterations 0
Cbc0038I Pass  46: suminf.    1.38587 (4) obj. -92.3362 iterations 7
Cbc0038I Pass  47: suminf.    1.32091 (5) obj. -92.3362 iterations 2
Cbc0038I Pass  48: suminf.    0.81061 (5) obj. -92.3362 iterations 4
Cbc0038I Pass  49: suminf.    0.81061 (5) obj. -92.3362 iterations 0
Cbc0038I Pass  50: suminf.    1.42348 (4) obj. -92.3362 iterations 4
Cbc0038I Pass  51: suminf.    2.11111 (7) obj. -92.3362 iterations 12
Cbc0038I Pass  52: suminf.    1.42701 (4) obj. -92.3362 iterations 4
Cbc0038I Pass  53: suminf.    0.93121 (2) obj. -92.3362 iterations 3
Cbc0038I Pass  54: suminf.    0.87694 (2) obj. -92.3362 iterations 1
Cbc0038I Pass  55: suminf.    0.56572 (3) obj. -92.3362 iterations 3
Cbc0038I Pass  56: suminf.    0.56572 (3) obj. -92.3362 iterations 0
Cbc0038I Pass  57: suminf.    1.07975 (3) obj. -92.3362 iterations 3
Cbc0038I Pass  58: suminf.    1.18259 (3) obj. -92.3362 iterations 1
Cbc0038I Pass  59: suminf.    1.18259 (3) obj. -92.3362 iterations 0
Cbc0038I Pass  60: suminf.    1.07975 (3) obj. -92.3362 iterations 2
Cbc0038I Pass  61: suminf.    1.94645 (8) obj. -92.3362 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 28 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -84.7154 - took 0.04 seconds
Cbc0012I Integer solution of -84.71535 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 19 rows 21 columns
Cbc0031I 16 added rows had average density of 13.625
Cbc0013I At root node, 16 cuts changed objective from -122.81905 to -94.95117 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 946 row cuts average 3.3 elements, 11 column cuts (11 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 732 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 110 row cuts average 4.7 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 176 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 55 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 169 row cuts average 6.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 298 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 80 row cuts average 15.4 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -84.71535 best solution, best possible -94.95117 (1.56 seconds)
Cbc0001I Search completed - best objective -84.71535, took 1988 iterations and 6 nodes (1.79 seconds)
Cbc0032I Strong branching done 82 times (659 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.14   (Wallclock seconds):       1.80

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 48 (-17) rows, 27 (-6) columns and 143 (-40) elements
Clp1000I sum of infeasibilities 5.59251e-06 - average 1.16511e-07, 10 fixed columns
Coin0506I Presolve 27 (-21) rows, 16 (-11) columns and 80 (-63) elements
Clp0029I End of values pass after 16 iterations
Clp0000I Optimal - objective value 142.9112
Clp0000I Optimal - objective value 142.9112
Coin0511I After Postsolve, objective 142.9112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 142.9112
Clp0000I Optimal - objective value 142.9112
Clp0000I Optimal - objective value 142.9112
Coin0511I After Postsolve, objective 142.9112, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 142.9111971 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 46 rows, 27 columns (26 integer (26 of which binary)) and 157 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.734%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 4.28524
Cbc0038I Pass   1: suminf.    0.25000 (1) obj. -70.7311 iterations 15
Cbc0038I Solution found of -42.1907
Cbc0038I Relaxing continuous gives -42.1907
Cbc0038I Rounding solution of -68.426 is better than previous of -42.1907

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 27 columns, reduced to 19 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -68.426 to -82.4384 (0.01 seconds)
Cbc0038I Round again with cutoff of -86.783
Cbc0038I Pass   2: suminf.    0.96551 (4) obj. -86.783 iterations 2
Cbc0038I Pass   3: suminf.    0.75510 (3) obj. -86.783 iterations 7
Cbc0038I Pass   4: suminf.    0.22764 (1) obj. -86.783 iterations 3
Cbc0038I Pass   5: suminf.    0.32102 (1) obj. -86.783 iterations 1
Cbc0038I Pass   6: suminf.    0.82823 (4) obj. -86.783 iterations 6
Cbc0038I Pass   7: suminf.    0.46454 (2) obj. -86.783 iterations 1
Cbc0038I Pass   8: suminf.    0.59637 (3) obj. -86.783 iterations 3
Cbc0038I Pass   9: suminf.    0.66892 (2) obj. -86.783 iterations 4
Cbc0038I Pass  10: suminf.    0.12156 (1) obj. -86.783 iterations 2
Cbc0038I Pass  11: suminf.    0.84616 (2) obj. -86.783 iterations 2
Cbc0038I Pass  12: suminf.    0.66892 (2) obj. -86.783 iterations 1
Cbc0038I Pass  13: suminf.    2.53166 (8) obj. -86.783 iterations 7
Cbc0038I Pass  14: suminf.    0.65850 (2) obj. -86.783 iterations 9
Cbc0038I Pass  15: suminf.    0.56109 (2) obj. -86.783 iterations 3
Cbc0038I Pass  16: suminf.    0.50496 (2) obj. -86.783 iterations 2
Cbc0038I Pass  17: suminf.    0.35473 (2) obj. -86.783 iterations 2
Cbc0038I Pass  18: suminf.    1.18166 (3) obj. -86.783 iterations 3
Cbc0038I Pass  19: suminf.    1.26316 (3) obj. -86.783 iterations 8
Cbc0038I Pass  20: suminf.    0.91040 (3) obj. -86.783 iterations 3
Cbc0038I Pass  21: suminf.    0.85168 (3) obj. -86.783 iterations 1
Cbc0038I Pass  22: suminf.    0.96736 (2) obj. -86.783 iterations 3
Cbc0038I Pass  23: suminf.    0.54677 (3) obj. -86.783 iterations 3
Cbc0038I Pass  24: suminf.    0.32102 (1) obj. -86.783 iterations 4
Cbc0038I Pass  25: suminf.    0.22764 (1) obj. -86.783 iterations 1
Cbc0038I Pass  26: suminf.    1.27462 (4) obj. -86.783 iterations 6
Cbc0038I Pass  27: suminf.    0.22764 (1) obj. -86.783 iterations 4
Cbc0038I Pass  28: suminf.    0.54962 (2) obj. -86.783 iterations 3
Cbc0038I Pass  29: suminf.    0.54962 (2) obj. -86.783 iterations 2
Cbc0038I Pass  30: suminf.    0.68733 (3) obj. -86.783 iterations 2
Cbc0038I Pass  31: suminf.    0.65452 (4) obj. -86.783 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 27 columns, reduced to 39 rows 23 columns
Cbc0038I Mini branch and bound improved solution from -82.4384 to -84.7154 (0.03 seconds)
Cbc0038I Round again with cutoff of -94.6029
Cbc0038I Pass  31: suminf.    1.31464 (6) obj. -94.6029 iterations 1
Cbc0038I Pass  32: suminf.    0.91775 (3) obj. -94.6029 iterations 2
Cbc0038I Pass  33: suminf.    0.86997 (4) obj. -94.6029 iterations 3
Cbc0038I Pass  34: suminf.    0.38133 (2) obj. -94.6029 iterations 5
Cbc0038I Pass  35: suminf.    0.16842 (1) obj. -94.6029 iterations 1
Cbc0038I Pass  36: suminf.    0.46204 (2) obj. -94.6029 iterations 3
Cbc0038I Pass  37: suminf.    3.26100 (8) obj. -94.6029 iterations 11
Cbc0038I Pass  38: suminf.    1.47699 (5) obj. -94.6029 iterations 9
Cbc0038I Pass  39: suminf.    0.94474 (5) obj. -94.6029 iterations 4
Cbc0038I Pass  40: suminf.    0.95580 (4) obj. -94.6029 iterations 6
Cbc0038I Pass  41: suminf.    0.43241 (2) obj. -94.6029 iterations 2
Cbc0038I Pass  42: suminf.    0.81752 (2) obj. -94.6029 iterations 3
Cbc0038I Pass  43: suminf.    3.62639 (10) obj. -94.6029 iterations 7
Cbc0038I Pass  44: suminf.    0.81752 (2) obj. -94.6029 iterations 9
Cbc0038I Pass  45: suminf.    1.91097 (7) obj. -94.6029 iterations 14
Cbc0038I Pass  46: suminf.    1.32148 (4) obj. -94.6029 iterations 5
Cbc0038I Pass  47: suminf.    0.69013 (4) obj. -94.6029 iterations 4
Cbc0038I Pass  48: suminf.    0.69013 (4) obj. -94.6029 iterations 1
Cbc0038I Pass  49: suminf.    0.84616 (2) obj. -94.6029 iterations 5
Cbc0038I Pass  50: suminf.    0.81752 (2) obj. -94.6029 iterations 1
Cbc0038I Pass  51: suminf.    0.81752 (2) obj. -94.6029 iterations 0
Cbc0038I Pass  52: suminf.    0.43241 (2) obj. -94.6029 iterations 3
Cbc0038I Pass  53: suminf.    2.33510 (8) obj. -94.6029 iterations 8
Cbc0038I Pass  54: suminf.    0.79232 (4) obj. -94.6029 iterations 4
Cbc0038I Pass  55: suminf.    0.79232 (4) obj. -94.6029 iterations 0
Cbc0038I Pass  56: suminf.    1.52562 (5) obj. -94.6029 iterations 4
Cbc0038I Pass  57: suminf.    1.18161 (6) obj. -94.6029 iterations 6
Cbc0038I Pass  58: suminf.    1.36493 (4) obj. -94.6029 iterations 6
Cbc0038I Pass  59: suminf.    0.42220 (2) obj. -94.6029 iterations 4
Cbc0038I Pass  60: suminf.    0.25882 (3) obj. -94.6029 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 46 rows 27 columns, reduced to 33 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -84.7154 - took 0.04 seconds
Cbc0012I Integer solution of -84.71535 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 46 rows 27 columns, reduced to 21 rows 12 columns
Cbc0031I 10 added rows had average density of 15
Cbc0013I At root node, 10 cuts changed objective from -125.88273 to -99.406852 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 326 row cuts average 3.2 elements, 7 column cuts (7 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 611 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 33 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 160 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0001I Search completed - best objective -84.71535, took 1756 iterations and 8 nodes (0.21 seconds)
Cbc0032I Strong branching done 86 times (546 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 3, 15 variables fixed on reduced cost
Total time (CPU seconds):       0.19   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 42 (-23) rows, 46 (-17) columns and 382 (-267) elements
Clp1000I sum of infeasibilities 7.49482e-08 - average 1.78448e-09, 16 fixed columns
Coin0506I Presolve 28 (-14) rows, 30 (-16) columns and 157 (-225) elements
Clp0029I End of values pass after 30 iterations
Clp0000I Optimal - objective value 148.91865
Clp0000I Optimal - objective value 148.91865
Coin0511I After Postsolve, objective 148.91865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 148.91865
Clp0000I Optimal - objective value 148.91865
Clp0000I Optimal - objective value 148.91865
Coin0511I After Postsolve, objective 148.91865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 148.9186467 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 46 columns (46 integer (46 of which binary)) and 394 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.561%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.36569
Cbc0038I Pass   1: suminf.    0.23323 (5) obj. -31.9202 iterations 18
Cbc0038I Pass   2: suminf.    0.23323 (5) obj. -31.9202 iterations 0
Cbc0038I Solution found of -25.2469
Cbc0038I Rounding solution of -34.7469 is better than previous of -25.2469

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -34.7469 to -77.3823 (0.02 seconds)
Cbc0038I Round again with cutoff of -82.8507
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.26593 (13) obj. -82.8507 iterations 8
Cbc0038I Pass   4: suminf.    0.92882 (7) obj. -82.8507 iterations 1
Cbc0038I Pass   5: suminf.    0.25982 (2) obj. -88.9718 iterations 3
Cbc0038I Pass   6: suminf.    0.29428 (1) obj. -82.8507 iterations 2
Cbc0038I Pass   7: suminf.    0.22764 (1) obj. -88.0039 iterations 1
Cbc0038I Pass   8: suminf.    0.64926 (6) obj. -90.732 iterations 4
Cbc0038I Pass   9: suminf.    0.64926 (6) obj. -90.732 iterations 3
Cbc0038I Pass  10: suminf.    0.41745 (2) obj. -82.8507 iterations 6
Cbc0038I Pass  11: suminf.    0.41745 (2) obj. -82.8507 iterations 0
Cbc0038I Pass  12: suminf.    0.42889 (1) obj. -82.8507 iterations 1
Cbc0038I Pass  13: suminf.    0.39024 (1) obj. -96.8375 iterations 1
Cbc0038I Pass  14: suminf.    0.55610 (2) obj. -83.3763 iterations 11
Cbc0038I Pass  15: suminf.    0.55610 (2) obj. -83.3763 iterations 3
Cbc0038I Pass  16: suminf.    0.44648 (2) obj. -82.8507 iterations 2
Cbc0038I Pass  17: suminf.    0.44648 (2) obj. -82.8507 iterations 0
Cbc0038I Pass  18: suminf.    0.37643 (1) obj. -82.8507 iterations 1
Cbc0038I Pass  19: suminf.    0.43902 (1) obj. -97.1214 iterations 1
Cbc0038I Pass  20: suminf.    0.74627 (3) obj. -99.6403 iterations 4
Cbc0038I Pass  21: suminf.    0.74627 (3) obj. -99.6403 iterations 2
Cbc0038I Pass  22: suminf.    1.09861 (8) obj. -82.8507 iterations 6
Cbc0038I Pass  23: suminf.    1.06660 (11) obj. -82.8507 iterations 2
Cbc0038I Pass  24: suminf.    1.32257 (4) obj. -82.8507 iterations 15
Cbc0038I Pass  25: suminf.    0.71211 (5) obj. -82.8507 iterations 1
Cbc0038I Pass  26: suminf.    0.71211 (5) obj. -82.8507 iterations 0
Cbc0038I Pass  27: suminf.    0.93162 (2) obj. -104.278 iterations 4
Cbc0038I Pass  28: suminf.    0.62707 (2) obj. -82.8507 iterations 1
Cbc0038I Pass  29: suminf.    0.64682 (2) obj. -82.8507 iterations 1
Cbc0038I Pass  30: suminf.    0.64682 (2) obj. -82.8507 iterations 0
Cbc0038I Pass  31: suminf.    2.71714 (11) obj. -82.8507 iterations 19
Cbc0038I Pass  32: suminf.    2.71714 (11) obj. -82.8507 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 22 rows 26 columns
Cbc0038I Mini branch and bound improved solution from -77.3823 to -82.7 (0.05 seconds)
Cbc0038I Round again with cutoff of -92.6936
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.08526 (13) obj. -92.6936 iterations 0
Cbc0038I Pass  33: suminf.    0.81361 (14) obj. -92.6936 iterations 1
Cbc0038I Pass  34: suminf.    0.64524 (8) obj. -92.6936 iterations 1
Cbc0038I Pass  35: suminf.    0.25583 (1) obj. -92.6936 iterations 8
Cbc0038I Pass  36: suminf.    0.24390 (1) obj. -93.6157 iterations 1
Cbc0038I Pass  37: suminf.    1.51987 (10) obj. -92.6936 iterations 15
Cbc0038I Pass  38: suminf.    1.51987 (10) obj. -92.6936 iterations 2
Cbc0038I Pass  39: suminf.    0.88222 (2) obj. -92.6936 iterations 9
Cbc0038I Pass  40: suminf.    0.87252 (2) obj. -92.6936 iterations 1
Cbc0038I Pass  41: suminf.    0.91649 (2) obj. -95.3731 iterations 1
Cbc0038I Pass  42: suminf.    1.60718 (5) obj. -92.6936 iterations 7
Cbc0038I Pass  43: suminf.    1.40419 (5) obj. -92.6936 iterations 3
Cbc0038I Pass  44: suminf.    0.91649 (2) obj. -100.373 iterations 4
Cbc0038I Pass  45: suminf.    0.79047 (2) obj. -92.6936 iterations 1
Cbc0038I Pass  46: suminf.    1.92444 (8) obj. -92.6936 iterations 8
Cbc0038I Pass  47: suminf.    1.19499 (4) obj. -92.6936 iterations 4
Cbc0038I Pass  48: suminf.    1.19499 (4) obj. -92.6936 iterations 0
Cbc0038I Pass  49: suminf.    0.77413 (2) obj. -92.6936 iterations 3
Cbc0038I Pass  50: suminf.    0.97589 (2) obj. -92.6936 iterations 1
Cbc0038I Pass  51: suminf.    0.77565 (4) obj. -92.6936 iterations 5
Cbc0038I Pass  52: suminf.    0.77565 (4) obj. -92.6936 iterations 1
Cbc0038I Pass  53: suminf.    0.60158 (3) obj. -92.6936 iterations 1
Cbc0038I Pass  54: suminf.    0.60158 (3) obj. -92.6936 iterations 0
Cbc0038I Pass  55: suminf.    0.42276 (1) obj. -96.755 iterations 4
Cbc0038I Pass  56: suminf.    0.42276 (1) obj. -96.755 iterations 0
Cbc0038I Pass  57: suminf.    0.47528 (1) obj. -92.6936 iterations 1
Cbc0038I Pass  58: suminf.    1.25965 (4) obj. -102.921 iterations 8
Cbc0038I Pass  59: suminf.    1.25965 (4) obj. -102.921 iterations 3
Cbc0038I Pass  60: suminf.    0.46666 (1) obj. -92.6936 iterations 4
Cbc0038I Pass  61: suminf.    0.44715 (1) obj. -99.3581 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 46 columns, reduced to 25 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -82.7 - took 0.04 seconds
Cbc0012I Integer solution of -82.69995 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 39 rows 46 columns, reduced to 20 rows 23 columns
Cbc0031I 14 added rows had average density of 17.071429
Cbc0013I At root node, 14 cuts changed objective from -132.0653 to -95.133823 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 856 row cuts average 3.0 elements, 12 column cuts (12 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 624 row cuts average 27.5 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 93 row cuts average 4.5 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 233 row cuts average 3.6 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 73 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 167 row cuts average 9.1 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 285 row cuts average 14.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 76 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.750 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -82.69995 best solution, best possible -95.133823 (1.53 seconds)
Cbc0012I Integer solution of -84.71535 found by rounding after 2134 iterations and 8 nodes (1.88 seconds)
Cbc0001I Search completed - best objective -84.71535, took 2134 iterations and 8 nodes (1.89 seconds)
Cbc0032I Strong branching done 130 times (1121 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 3, 18 variables fixed on reduced cost
Total time (CPU seconds):       1.24   (Wallclock seconds):       1.89

