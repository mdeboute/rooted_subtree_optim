Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 95 (-8) columns and 533 (-70) elements
Clp1000I sum of infeasibilities 2.9178e-05 - average 1.66732e-07, 25 fixed columns
Coin0506I Presolve 113 (-62) rows, 69 (-26) columns and 357 (-176) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 2.3039484 - largest nonzero change 2.6009659e-05 ( 0.0016981022%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 97.798209
Clp0000I Optimal - objective value 97.798209
Coin0511I After Postsolve, objective 97.798209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 97.798209
Clp0000I Optimal - objective value 97.798209
Clp0000I Optimal - objective value 97.798209
Coin0511I After Postsolve, objective 97.798209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 97.79820909 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 175 rows, 95 columns (94 integer (94 of which binary)) and 533 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.953%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.3927
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -39.7697 iterations 35
Cbc0038I Solution found of -39.7697
Cbc0038I Relaxing continuous gives -39.7697
Cbc0038I Rounding solution of -56.5855 is better than previous of -39.7697

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 95 columns, reduced to 38 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -56.5855 to -69.4337 (0.03 seconds)
Cbc0038I Round again with cutoff of -72.2703
Cbc0038I Pass   2: suminf.    1.40641 (4) obj. -72.2703 iterations 13
Cbc0038I Pass   3: suminf.    1.40641 (4) obj. -72.2703 iterations 0
Cbc0038I Pass   4: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass   5: suminf.    0.52623 (2) obj. -72.2703 iterations 5
Cbc0038I Pass   6: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass   7: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I Pass   8: suminf.    1.35625 (6) obj. -72.2703 iterations 10
Cbc0038I Pass   9: suminf.    1.93927 (6) obj. -72.2703 iterations 5
Cbc0038I Pass  10: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass  11: suminf.    0.52623 (2) obj. -72.2703 iterations 3
Cbc0038I Pass  12: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  13: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I Pass  14: suminf.    1.35625 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  15: suminf.    1.93927 (6) obj. -72.2703 iterations 5
Cbc0038I Pass  16: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass  17: suminf.    0.52623 (2) obj. -72.2703 iterations 3
Cbc0038I Pass  18: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  19: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I Pass  20: suminf.    1.35625 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  21: suminf.    1.93927 (6) obj. -72.2703 iterations 5
Cbc0038I Pass  22: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass  23: suminf.    0.52623 (2) obj. -72.2703 iterations 3
Cbc0038I Pass  24: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  25: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I Pass  26: suminf.    1.35625 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  27: suminf.    1.93927 (6) obj. -72.2703 iterations 5
Cbc0038I Pass  28: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass  29: suminf.    0.52623 (2) obj. -72.2703 iterations 3
Cbc0038I Pass  30: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  31: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 95 columns, reduced to 40 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -69.4337 - took 0.04 seconds
Cbc0012I Integer solution of -69.433714 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 175 rows 95 columns, reduced to 38 rows 27 columns
Cbc0031I 12 added rows had average density of 24
Cbc0013I At root node, 12 cuts changed objective from -97.798209 to -81.267133 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3474 row cuts average 3.4 elements, 5 column cuts (5 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1138 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0016I Integer solution of -69.504094 found by strong branching after 3372 iterations and 12 nodes (0.43 seconds)
Cbc0012I Integer solution of -69.868894 found by rounding after 3395 iterations and 15 nodes (0.43 seconds)
Cbc0012I Integer solution of -70.966073 found by DiveCoefficient after 3438 iterations and 19 nodes (0.44 seconds)
Cbc0001I Search completed - best objective -70.96607299999999, took 3473 iterations and 20 nodes (0.44 seconds)
Cbc0032I Strong branching done 196 times (2148 iterations), fathomed 5 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 156 variables fixed on reduced cost
Total time (CPU seconds):       0.43   (Wallclock seconds):       0.44

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-71) rows, 146 (-56) columns and 2720 (-2933) elements
Clp1000I sum of infeasibilities 9.78659e-07 - average 7.35834e-09, 34 fixed columns
Coin0506I Presolve 100 (-33) rows, 112 (-34) columns and 1705 (-1015) elements
Clp0029I End of values pass after 112 iterations
Clp0014I Perturbing problem by 0.001% of 2.3274572 - largest nonzero change 2.6985005e-05 ( 0.0022879966%) - largest zero change 2.9516076e-05
Clp0000I Optimal - objective value 117.35785
Clp0000I Optimal - objective value 117.35785
Coin0511I After Postsolve, objective 117.35785, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.35785
Clp0000I Optimal - objective value 117.35785
Clp0000I Optimal - objective value 117.35785
Coin0511I After Postsolve, objective 117.35785, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.3578531 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 148 columns (148 integer (148 of which binary)) and 2783 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.931%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 4.09223
Cbc0038I Pass   1: suminf.    3.78804 (39) obj. -110.319 iterations 31
Cbc0038I Pass   2: suminf.    0.30059 (8) obj. -66.527 iterations 29
Cbc0038I Solution found of -58.8275
Cbc0038I Rounding solution of -59.105 is better than previous of -58.8275

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 148 columns, reduced to 29 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -59.105 to -63.0375 (0.05 seconds)
Cbc0038I Round again with cutoff of -68.0074
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.78804 (39) obj. -110.319 iterations 0
Cbc0038I Pass   4: suminf.    1.12746 (19) obj. -79.5005 iterations 19
Cbc0038I Pass   5: suminf.    0.46673 (7) obj. -68.0074 iterations 14
Cbc0038I Pass   6: suminf.    0.62921 (2) obj. -68.0074 iterations 9
Cbc0038I Pass   7: suminf.    0.16000 (1) obj. -68.7264 iterations 3
Cbc0038I Pass   8: suminf.    0.19706 (1) obj. -68.0074 iterations 1
Cbc0038I Pass   9: suminf.    1.28939 (13) obj. -68.0074 iterations 48
Cbc0038I Pass  10: suminf.    1.28939 (13) obj. -68.0074 iterations 4
Cbc0038I Pass  11: suminf.    1.35116 (8) obj. -68.0074 iterations 29
Cbc0038I Pass  12: suminf.    0.61862 (8) obj. -68.0074 iterations 13
Cbc0038I Pass  13: suminf.    1.76212 (11) obj. -68.0074 iterations 21
Cbc0038I Pass  14: suminf.    1.76212 (11) obj. -68.0074 iterations 0
Cbc0038I Pass  15: suminf.    1.57540 (9) obj. -68.0074 iterations 12
Cbc0038I Pass  16: suminf.    1.57437 (11) obj. -68.0074 iterations 7
Cbc0038I Pass  17: suminf.    2.93446 (12) obj. -68.0074 iterations 15
Cbc0038I Pass  18: suminf.    2.16420 (12) obj. -68.0074 iterations 6
Cbc0038I Pass  19: suminf.    0.92665 (8) obj. -68.0074 iterations 13
Cbc0038I Pass  20: suminf.    0.92665 (8) obj. -68.0074 iterations 4
Cbc0038I Pass  21: suminf.    0.89379 (8) obj. -68.0074 iterations 9
Cbc0038I Pass  22: suminf.    0.89379 (8) obj. -68.0074 iterations 4
Cbc0038I Pass  23: suminf.    0.92665 (8) obj. -68.0074 iterations 8
Cbc0038I Pass  24: suminf.    2.09094 (14) obj. -68.0074 iterations 43
Cbc0038I Pass  25: suminf.    1.88042 (14) obj. -68.0074 iterations 15
Cbc0038I Pass  26: suminf.    1.31889 (8) obj. -68.0074 iterations 23
Cbc0038I Pass  27: suminf.    1.31889 (8) obj. -68.0074 iterations 1
Cbc0038I Pass  28: suminf.    1.28888 (8) obj. -68.0074 iterations 8
Cbc0038I Pass  29: suminf.    1.28888 (8) obj. -68.0074 iterations 5
Cbc0038I Pass  30: suminf.    1.31889 (8) obj. -68.0074 iterations 7
Cbc0038I Pass  31: suminf.    3.50320 (15) obj. -68.0074 iterations 32
Cbc0038I Pass  32: suminf.    1.49797 (10) obj. -68.0074 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 148 columns, reduced to 47 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -63.0375 to -69.4337 (0.10 seconds)
Cbc0038I Round again with cutoff of -78.0941
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.78804 (39) obj. -110.319 iterations 0
Cbc0038I Pass  33: suminf.    0.72285 (14) obj. -78.0941 iterations 47
Cbc0038I Pass  34: suminf.    0.72227 (15) obj. -78.0941 iterations 2
Cbc0038I Pass  35: suminf.    1.22373 (19) obj. -78.0941 iterations 47
Cbc0038I Pass  36: suminf.    0.83968 (8) obj. -78.0941 iterations 21
Cbc0038I Pass  37: suminf.    1.10143 (7) obj. -78.0941 iterations 21
Cbc0038I Pass  38: suminf.    1.64476 (14) obj. -78.0941 iterations 29
Cbc0038I Pass  39: suminf.    1.54884 (15) obj. -78.0941 iterations 6
Cbc0038I Pass  40: suminf.    2.72505 (17) obj. -78.0941 iterations 31
Cbc0038I Pass  41: suminf.    2.72505 (17) obj. -78.0941 iterations 1
Cbc0038I Pass  42: suminf.    2.40818 (15) obj. -78.0941 iterations 8
Cbc0038I Pass  43: suminf.    2.40818 (15) obj. -78.0941 iterations 3
Cbc0038I Pass  44: suminf.    2.12246 (14) obj. -78.0941 iterations 10
Cbc0038I Pass  45: suminf.    2.12246 (14) obj. -78.0941 iterations 7
Cbc0038I Pass  46: suminf.    2.20616 (14) obj. -78.0941 iterations 21
Cbc0038I Pass  47: suminf.    2.20610 (17) obj. -78.0941 iterations 6
Cbc0038I Pass  48: suminf.    2.12246 (14) obj. -78.0941 iterations 7
Cbc0038I Pass  49: suminf.    3.08635 (22) obj. -78.0941 iterations 32
Cbc0038I Pass  50: suminf.    1.91792 (16) obj. -78.0941 iterations 11
Cbc0038I Pass  51: suminf.    1.69722 (16) obj. -78.0941 iterations 23
Cbc0038I Pass  52: suminf.    1.69722 (16) obj. -78.0941 iterations 5
Cbc0038I Pass  53: suminf.    2.07855 (17) obj. -78.0941 iterations 13
Cbc0038I Pass  54: suminf.    2.06211 (16) obj. -78.0941 iterations 5
Cbc0038I Pass  55: suminf.    2.13944 (17) obj. -78.0941 iterations 18
Cbc0038I Pass  56: suminf.    2.12297 (16) obj. -78.0941 iterations 5
Cbc0038I Pass  57: suminf.    2.10129 (16) obj. -78.0941 iterations 9
Cbc0038I Pass  58: suminf.    2.08587 (18) obj. -78.0941 iterations 1
Cbc0038I Pass  59: suminf.    2.54924 (17) obj. -78.0941 iterations 16
Cbc0038I Pass  60: suminf.    1.68525 (15) obj. -78.0941 iterations 1
Cbc0038I Pass  61: suminf.    1.59160 (14) obj. -78.0941 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 148 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -69.4337 - took 0.11 seconds
Cbc0012I Integer solution of -69.433714 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 148 columns, reduced to 22 rows 23 columns
Cbc0031I 60 added rows had average density of 20.366667
Cbc0013I At root node, 60 cuts changed objective from -112.73501 to -77.277729 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 2119 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 87 row cuts average 87.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 231 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 225 row cuts average 90.4 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.074 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -69.433714 best solution, best possible -77.277729 (0.51 seconds)
Cbc0012I Integer solution of -70.966073 found by DiveCoefficient after 610 iterations and 2 nodes (0.78 seconds)
Cbc0010I After 9 nodes, 10 on tree, -70.966073 best solution, best possible -77.277729 (1.23 seconds)
Cbc0001I Search completed - best objective -70.96607299999999, took 1323 iterations and 22 nodes (1.37 seconds)
Cbc0032I Strong branching done 418 times (8010 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 86 variables fixed on reduced cost
Total time (CPU seconds):       0.96   (Wallclock seconds):       1.38

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 175 (-30) rows, 95 (-8) columns and 533 (-70) elements
Clp1000I sum of infeasibilities 2.9178e-05 - average 1.66732e-07, 25 fixed columns
Coin0506I Presolve 113 (-62) rows, 69 (-26) columns and 357 (-176) elements
Clp0029I End of values pass after 69 iterations
Clp0014I Perturbing problem by 0.001% of 2.3039484 - largest nonzero change 2.6009659e-05 ( 0.0016981022%) - largest zero change 2.3094151e-05
Clp0000I Optimal - objective value 97.798209
Clp0000I Optimal - objective value 97.798209
Coin0511I After Postsolve, objective 97.798209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 97.798209
Clp0000I Optimal - objective value 97.798209
Clp0000I Optimal - objective value 97.798209
Coin0511I After Postsolve, objective 97.798209, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 97.79820909 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 175 rows, 95 columns (94 integer (94 of which binary)) and 533 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.953%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 26 integers unsatisfied sum - 8.3927
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -39.7697 iterations 35
Cbc0038I Solution found of -39.7697
Cbc0038I Relaxing continuous gives -39.7697
Cbc0038I Rounding solution of -56.5855 is better than previous of -39.7697

Cbc0038I Before mini branch and bound, 68 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 95 columns, reduced to 38 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -56.5855 to -69.4337 (0.03 seconds)
Cbc0038I Round again with cutoff of -72.2703
Cbc0038I Pass   2: suminf.    1.40641 (4) obj. -72.2703 iterations 13
Cbc0038I Pass   3: suminf.    1.40641 (4) obj. -72.2703 iterations 0
Cbc0038I Pass   4: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass   5: suminf.    0.52623 (2) obj. -72.2703 iterations 5
Cbc0038I Pass   6: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass   7: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I Pass   8: suminf.    1.35625 (6) obj. -72.2703 iterations 10
Cbc0038I Pass   9: suminf.    1.93927 (6) obj. -72.2703 iterations 5
Cbc0038I Pass  10: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass  11: suminf.    0.52623 (2) obj. -72.2703 iterations 3
Cbc0038I Pass  12: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  13: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I Pass  14: suminf.    1.35625 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  15: suminf.    1.93927 (6) obj. -72.2703 iterations 5
Cbc0038I Pass  16: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass  17: suminf.    0.52623 (2) obj. -72.2703 iterations 3
Cbc0038I Pass  18: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  19: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I Pass  20: suminf.    1.35625 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  21: suminf.    1.93927 (6) obj. -72.2703 iterations 5
Cbc0038I Pass  22: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass  23: suminf.    0.52623 (2) obj. -72.2703 iterations 3
Cbc0038I Pass  24: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  25: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I Pass  26: suminf.    1.35625 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  27: suminf.    1.93927 (6) obj. -72.2703 iterations 5
Cbc0038I Pass  28: suminf.    0.53706 (2) obj. -72.2703 iterations 9
Cbc0038I Pass  29: suminf.    0.52623 (2) obj. -72.2703 iterations 3
Cbc0038I Pass  30: suminf.    0.86406 (6) obj. -72.2703 iterations 10
Cbc0038I Pass  31: suminf.    2.44304 (9) obj. -72.2703 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 66 integers at bound fixed and 0 continuous
Cbc0038I Full problem 175 rows 95 columns, reduced to 40 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -69.4337 - took 0.04 seconds
Cbc0012I Integer solution of -69.433714 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 175 rows 95 columns, reduced to 38 rows 27 columns
Cbc0031I 12 added rows had average density of 24
Cbc0013I At root node, 12 cuts changed objective from -97.798209 to -81.267133 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 3474 row cuts average 3.4 elements, 5 column cuts (5 active)  in 0.063 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1138 row cuts average 72.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 118 row cuts average 27.6 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0016I Integer solution of -69.504094 found by strong branching after 3372 iterations and 12 nodes (0.45 seconds)
Cbc0012I Integer solution of -69.868894 found by rounding after 3395 iterations and 15 nodes (0.45 seconds)
Cbc0012I Integer solution of -70.966073 found by DiveCoefficient after 3438 iterations and 19 nodes (0.45 seconds)
Cbc0001I Search completed - best objective -70.96607299999999, took 3473 iterations and 20 nodes (0.45 seconds)
Cbc0032I Strong branching done 196 times (2148 iterations), fathomed 5 nodes and fixed 12 variables
Cbc0035I Maximum depth 5, 156 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.46

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-72) rows, 146 (-57) columns and 2720 (-2934) elements
Clp1000I sum of infeasibilities 9.78659e-07 - average 7.35834e-09, 34 fixed columns
Coin0506I Presolve 100 (-33) rows, 112 (-34) columns and 1705 (-1015) elements
Clp0029I End of values pass after 112 iterations
Clp0014I Perturbing problem by 0.001% of 2.3274572 - largest nonzero change 2.6985005e-05 ( 0.0022879966%) - largest zero change 2.9516076e-05
Clp0000I Optimal - objective value 117.35785
Clp0000I Optimal - objective value 117.35785
Coin0511I After Postsolve, objective 117.35785, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 117.35785
Clp0000I Optimal - objective value 117.35785
Clp0000I Optimal - objective value 117.35785
Coin0511I After Postsolve, objective 117.35785, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 117.3578531 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 135 rows, 148 columns (148 integer (148 of which binary)) and 2783 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.931%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 52 integers unsatisfied sum - 4.09223
Cbc0038I Pass   1: suminf.    3.78804 (39) obj. -110.319 iterations 31
Cbc0038I Pass   2: suminf.    0.30059 (8) obj. -66.527 iterations 29
Cbc0038I Solution found of -58.8275
Cbc0038I Rounding solution of -59.105 is better than previous of -58.8275

Cbc0038I Before mini branch and bound, 95 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 148 columns, reduced to 29 rows 30 columns
Cbc0038I Mini branch and bound improved solution from -59.105 to -63.0375 (0.04 seconds)
Cbc0038I Round again with cutoff of -68.0074
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    3.78804 (39) obj. -110.319 iterations 0
Cbc0038I Pass   4: suminf.    1.12746 (19) obj. -79.5005 iterations 19
Cbc0038I Pass   5: suminf.    0.46673 (7) obj. -68.0074 iterations 14
Cbc0038I Pass   6: suminf.    0.62921 (2) obj. -68.0074 iterations 9
Cbc0038I Pass   7: suminf.    0.16000 (1) obj. -68.7264 iterations 3
Cbc0038I Pass   8: suminf.    0.19706 (1) obj. -68.0074 iterations 1
Cbc0038I Pass   9: suminf.    1.28939 (13) obj. -68.0074 iterations 48
Cbc0038I Pass  10: suminf.    1.28939 (13) obj. -68.0074 iterations 4
Cbc0038I Pass  11: suminf.    1.35116 (8) obj. -68.0074 iterations 29
Cbc0038I Pass  12: suminf.    0.61862 (8) obj. -68.0074 iterations 13
Cbc0038I Pass  13: suminf.    1.76212 (11) obj. -68.0074 iterations 21
Cbc0038I Pass  14: suminf.    1.76212 (11) obj. -68.0074 iterations 0
Cbc0038I Pass  15: suminf.    1.57540 (9) obj. -68.0074 iterations 12
Cbc0038I Pass  16: suminf.    1.57437 (11) obj. -68.0074 iterations 7
Cbc0038I Pass  17: suminf.    2.93446 (12) obj. -68.0074 iterations 15
Cbc0038I Pass  18: suminf.    2.16420 (12) obj. -68.0074 iterations 6
Cbc0038I Pass  19: suminf.    0.92665 (8) obj. -68.0074 iterations 13
Cbc0038I Pass  20: suminf.    0.92665 (8) obj. -68.0074 iterations 4
Cbc0038I Pass  21: suminf.    0.89379 (8) obj. -68.0074 iterations 9
Cbc0038I Pass  22: suminf.    0.89379 (8) obj. -68.0074 iterations 4
Cbc0038I Pass  23: suminf.    0.92665 (8) obj. -68.0074 iterations 8
Cbc0038I Pass  24: suminf.    2.09094 (14) obj. -68.0074 iterations 43
Cbc0038I Pass  25: suminf.    1.88042 (14) obj. -68.0074 iterations 15
Cbc0038I Pass  26: suminf.    1.31889 (8) obj. -68.0074 iterations 23
Cbc0038I Pass  27: suminf.    1.31889 (8) obj. -68.0074 iterations 1
Cbc0038I Pass  28: suminf.    1.28888 (8) obj. -68.0074 iterations 8
Cbc0038I Pass  29: suminf.    1.28888 (8) obj. -68.0074 iterations 5
Cbc0038I Pass  30: suminf.    1.31889 (8) obj. -68.0074 iterations 7
Cbc0038I Pass  31: suminf.    3.50320 (15) obj. -68.0074 iterations 32
Cbc0038I Pass  32: suminf.    1.49797 (10) obj. -68.0074 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 80 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 148 columns, reduced to 47 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -63.0375 to -69.4337 (0.11 seconds)
Cbc0038I Round again with cutoff of -78.0941
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    3.78804 (39) obj. -110.319 iterations 0
Cbc0038I Pass  33: suminf.    0.72285 (14) obj. -78.0941 iterations 47
Cbc0038I Pass  34: suminf.    0.72227 (15) obj. -78.0941 iterations 2
Cbc0038I Pass  35: suminf.    1.22373 (19) obj. -78.0941 iterations 47
Cbc0038I Pass  36: suminf.    0.83968 (8) obj. -78.0941 iterations 21
Cbc0038I Pass  37: suminf.    1.10143 (7) obj. -78.0941 iterations 21
Cbc0038I Pass  38: suminf.    1.64476 (14) obj. -78.0941 iterations 29
Cbc0038I Pass  39: suminf.    1.54884 (15) obj. -78.0941 iterations 6
Cbc0038I Pass  40: suminf.    2.72505 (17) obj. -78.0941 iterations 31
Cbc0038I Pass  41: suminf.    2.72505 (17) obj. -78.0941 iterations 1
Cbc0038I Pass  42: suminf.    2.40818 (15) obj. -78.0941 iterations 8
Cbc0038I Pass  43: suminf.    2.40818 (15) obj. -78.0941 iterations 3
Cbc0038I Pass  44: suminf.    2.12246 (14) obj. -78.0941 iterations 10
Cbc0038I Pass  45: suminf.    2.12246 (14) obj. -78.0941 iterations 7
Cbc0038I Pass  46: suminf.    2.20616 (14) obj. -78.0941 iterations 21
Cbc0038I Pass  47: suminf.    2.20610 (17) obj. -78.0941 iterations 6
Cbc0038I Pass  48: suminf.    2.12246 (14) obj. -78.0941 iterations 7
Cbc0038I Pass  49: suminf.    3.08635 (22) obj. -78.0941 iterations 32
Cbc0038I Pass  50: suminf.    1.91792 (16) obj. -78.0941 iterations 11
Cbc0038I Pass  51: suminf.    1.69722 (16) obj. -78.0941 iterations 23
Cbc0038I Pass  52: suminf.    1.69722 (16) obj. -78.0941 iterations 5
Cbc0038I Pass  53: suminf.    2.07855 (17) obj. -78.0941 iterations 13
Cbc0038I Pass  54: suminf.    2.06211 (16) obj. -78.0941 iterations 5
Cbc0038I Pass  55: suminf.    2.13944 (17) obj. -78.0941 iterations 18
Cbc0038I Pass  56: suminf.    2.12297 (16) obj. -78.0941 iterations 5
Cbc0038I Pass  57: suminf.    2.10129 (16) obj. -78.0941 iterations 9
Cbc0038I Pass  58: suminf.    2.08587 (18) obj. -78.0941 iterations 1
Cbc0038I Pass  59: suminf.    2.54924 (17) obj. -78.0941 iterations 16
Cbc0038I Pass  60: suminf.    1.68525 (15) obj. -78.0941 iterations 1
Cbc0038I Pass  61: suminf.    1.59160 (14) obj. -78.0941 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 85 integers at bound fixed and 0 continuous
Cbc0038I Full problem 135 rows 148 columns, reduced to 35 rows 41 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -69.4337 - took 0.12 seconds
Cbc0012I Integer solution of -69.433714 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 135 rows 148 columns, reduced to 22 rows 23 columns
Cbc0031I 60 added rows had average density of 20.366667
Cbc0013I At root node, 60 cuts changed objective from -112.73501 to -77.277729 in 11 passes
Cbc0014I Cut generator 0 (Probing) - 2119 row cuts average 3.3 elements, 4 column cuts (4 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 87 row cuts average 87.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 39 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 231 row cuts average 14.6 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 225 row cuts average 90.4 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 54 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -69.433714 best solution, best possible -77.277729 (0.54 seconds)
Cbc0012I Integer solution of -70.966073 found by DiveCoefficient after 610 iterations and 2 nodes (0.81 seconds)
Cbc0010I After 7 nodes, 8 on tree, -70.966073 best solution, best possible -77.277729 (1.27 seconds)
Cbc0001I Search completed - best objective -70.96607299999999, took 1323 iterations and 22 nodes (1.49 seconds)
Cbc0032I Strong branching done 418 times (8010 iterations), fathomed 3 nodes and fixed 1 variables
Cbc0035I Maximum depth 9, 86 variables fixed on reduced cost
Total time (CPU seconds):       1.03   (Wallclock seconds):       1.50

