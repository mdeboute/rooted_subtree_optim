Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 99 (-4) columns and 571 (-32) elements
Clp1000I sum of infeasibilities 1.06844e-05 - average 5.62338e-08, 22 fixed columns
Coin0506I Presolve 146 (-44) rows, 77 (-22) columns and 439 (-132) elements
Clp0029I End of values pass after 77 iterations
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Coin0511I After Postsolve, objective 47.516167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Coin0511I After Postsolve, objective 47.516167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.51616674 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 189 rows, 99 columns (98 integer (98 of which binary)) and 594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 7.11812
Cbc0038I Solution found of -1.92067
Cbc0038I Relaxing continuous gives -7.63194
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 189 rows 99 columns, reduced to 107 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -7.63194 to -25.2254 (0.05 seconds)
Cbc0038I Round again with cutoff of -27.4104
Cbc0038I Pass   1: suminf.    2.56428 (29) obj. -27.4104 iterations 64
Cbc0038I Pass   2: suminf.    1.73733 (11) obj. -27.4104 iterations 25
Cbc0038I Pass   3: suminf.    2.74541 (8) obj. -27.4104 iterations 14
Cbc0038I Pass   4: suminf.    1.76329 (10) obj. -27.4104 iterations 14
Cbc0038I Pass   5: suminf.    4.09202 (16) obj. -27.4104 iterations 31
Cbc0038I Pass   6: suminf.    2.18410 (11) obj. -27.4104 iterations 44
Cbc0038I Pass   7: suminf.    2.38822 (7) obj. -27.4104 iterations 13
Cbc0038I Pass   8: suminf.    2.13391 (7) obj. -27.4104 iterations 8
Cbc0038I Pass   9: suminf.    1.43745 (6) obj. -27.4104 iterations 10
Cbc0038I Pass  10: suminf.    1.24684 (8) obj. -27.4104 iterations 16
Cbc0038I Pass  11: suminf.    2.71624 (8) obj. -27.4104 iterations 16
Cbc0038I Pass  12: suminf.    1.76329 (10) obj. -27.4104 iterations 11
Cbc0038I Pass  13: suminf.    1.73733 (11) obj. -27.4104 iterations 4
Cbc0038I Pass  14: suminf.    2.74541 (8) obj. -27.4104 iterations 17
Cbc0038I Pass  15: suminf.    6.12655 (19) obj. -27.4104 iterations 37
Cbc0038I Pass  16: suminf.    2.86183 (15) obj. -27.4104 iterations 38
Cbc0038I Pass  17: suminf.    2.56428 (29) obj. -27.4104 iterations 15
Cbc0038I Pass  18: suminf.    5.75276 (20) obj. -27.4104 iterations 53
Cbc0038I Pass  19: suminf.    2.55556 (9) obj. -27.4104 iterations 38
Cbc0038I Pass  20: suminf.    1.86091 (13) obj. -27.4104 iterations 10
Cbc0038I Pass  21: suminf.    4.02129 (12) obj. -27.4104 iterations 23
Cbc0038I Pass  22: suminf.    4.33329 (16) obj. -27.4104 iterations 16
Cbc0038I Pass  23: suminf.    2.95960 (13) obj. -27.4104 iterations 25
Cbc0038I Pass  24: suminf.    1.79903 (10) obj. -27.4104 iterations 13
Cbc0038I Pass  25: suminf.    3.27823 (10) obj. -27.4104 iterations 11
Cbc0038I Pass  26: suminf.    2.31744 (9) obj. -27.4104 iterations 5
Cbc0038I Pass  27: suminf.    2.15169 (13) obj. -27.4104 iterations 12
Cbc0038I Pass  28: suminf.    2.69816 (9) obj. -27.4104 iterations 14
Cbc0038I Pass  29: suminf.    2.36545 (10) obj. -27.4104 iterations 8
Cbc0038I Pass  30: suminf.    1.56409 (8) obj. -27.4104 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 189 rows 99 columns, reduced to 146 rows 77 columns - 1 fixed gives 135, 76 - still too large
Cbc0038I Full problem 189 rows 99 columns, reduced to 135 rows 76 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -25.2254 - took 0.06 seconds
Cbc0012I Integer solution of -25.2254 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 189 rows 99 columns, reduced to 107 rows 56 columns
Cbc0031I 23 added rows had average density of 78.434783
Cbc0013I At root node, 23 cuts changed objective from -47.074975 to -40.225309 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9214 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1820 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.099 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -25.2254 best solution, best possible -40.225309 (1.02 seconds)
Cbc0038I Full problem 189 rows 99 columns, reduced to 73 rows 40 columns
Cbc0001I Search completed - best objective -25.2254, took 8620 iterations and 64 nodes (1.36 seconds)
Cbc0032I Strong branching done 840 times (16972 iterations), fathomed 3 nodes and fixed 27 variables
Cbc0035I Maximum depth 23, 97 variables fixed on reduced cost
Total time (CPU seconds):       1.31   (Wallclock seconds):       1.37

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-68) rows, 142 (-60) columns and 2482 (-3171) elements
Clp1000I sum of infeasibilities 2.49611e-07 - average 1.83538e-09, 95 fixed columns
Coin0506I Presolve 42 (-94) rows, 47 (-95) columns and 173 (-2309) elements
Clp0006I 0  Obj 32.436589 Dual inf 1.3137362 (45)
Clp0029I End of values pass after 47 iterations
Clp0014I Perturbing problem by 0.001% of 3.1734115 - largest nonzero change 0 ( 0%) - largest zero change 2.8167904e-05
Clp0000I Optimal - objective value 35.792364
Clp0000I Optimal - objective value 35.792364
Coin0511I After Postsolve, objective 35.792364, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 35.792364 Dual inf 252.68664 (43)
Clp0014I Perturbing problem by 0.001% of 1.3766408 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 95.204549
Clp0000I Optimal - objective value 95.204549
Clp0000I Optimal - objective value 95.204549
Coin0511I After Postsolve, objective 95.204549, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 95.20454914 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 54 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 37 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0004I processed model has 134 rows, 141 columns (141 integer (141 of which binary)) and 2495 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.832%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 49 integers unsatisfied sum - 14.6866
Cbc0038I Pass   1: suminf.    1.55438 (30) obj. 7.52687 iterations 34
Cbc0038I Pass   2: suminf.    1.55438 (30) obj. 7.52687 iterations 0
Cbc0038I Pass   3: suminf.    0.09589 (3) obj. 46.2434 iterations 43
Cbc0038I Solution found of 49.1475
Cbc0038I Rounding solution of 3.27165 is better than previous of 49.1475

Cbc0038I Before mini branch and bound, 92 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 141 columns, reduced to 52 rows 49 columns
Cbc0038I Mini branch and bound improved solution from 3.27165 to -33.4758 (0.08 seconds)
Cbc0038I Round again with cutoff of -37.5989
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.46144 (43) obj. -37.5989 iterations 16
Cbc0038I Pass   5: suminf.    2.22442 (43) obj. -37.5989 iterations 7
Cbc0038I Pass   6: suminf.    2.22442 (43) obj. -37.5989 iterations 1
Cbc0038I Pass   7: suminf.    6.15527 (25) obj. -37.5989 iterations 72
Cbc0038I Pass   8: suminf.    5.97819 (21) obj. -37.5989 iterations 13
Cbc0038I Pass   9: suminf.    0.75992 (11) obj. -37.5989 iterations 25
Cbc0038I Pass  10: suminf.    0.75992 (11) obj. -37.5989 iterations 1
Cbc0038I Pass  11: suminf.    0.30740 (8) obj. -37.5989 iterations 29
Cbc0038I Pass  12: suminf.    0.30303 (1) obj. -37.6577 iterations 8
Cbc0038I Pass  13: suminf.    0.40128 (3) obj. -37.5989 iterations 14
Cbc0038I Pass  14: suminf.    4.48221 (18) obj. -37.5989 iterations 44
Cbc0038I Pass  15: suminf.    4.48221 (18) obj. -37.5989 iterations 7
Cbc0038I Pass  16: suminf.    0.59634 (9) obj. -37.5989 iterations 27
Cbc0038I Pass  17: suminf.    2.87130 (13) obj. -37.5989 iterations 8
Cbc0038I Pass  18: suminf.    2.18355 (12) obj. -37.5989 iterations 6
Cbc0038I Pass  19: suminf.    1.55140 (10) obj. -37.5989 iterations 3
Cbc0038I Pass  20: suminf.    0.67839 (9) obj. -37.5989 iterations 15
Cbc0038I Pass  21: suminf.    0.67839 (9) obj. -37.5989 iterations 2
Cbc0038I Pass  22: suminf.    1.19030 (9) obj. -37.5989 iterations 10
Cbc0038I Pass  23: suminf.    1.19030 (9) obj. -37.5989 iterations 2
Cbc0038I Pass  24: suminf.    0.67839 (9) obj. -37.5989 iterations 6
Cbc0038I Pass  25: suminf.    3.71829 (18) obj. -37.5989 iterations 18
Cbc0038I Pass  26: suminf.    3.71829 (18) obj. -37.5989 iterations 3
Cbc0038I Pass  27: suminf.    0.67839 (9) obj. -37.5989 iterations 22
Cbc0038I Pass  28: suminf.    0.67839 (9) obj. -37.5989 iterations 3
Cbc0038I Pass  29: suminf.    1.19030 (9) obj. -37.5989 iterations 10
Cbc0038I Pass  30: suminf.    1.19030 (9) obj. -37.5989 iterations 2
Cbc0038I Pass  31: suminf.    0.67839 (9) obj. -37.5989 iterations 6
Cbc0038I Pass  32: suminf.    2.23402 (10) obj. -37.5989 iterations 19
Cbc0038I Pass  33: suminf.    1.95260 (9) obj. -37.5989 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 83 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 141 columns, reduced to 58 rows 58 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -33.4758 - took 0.04 seconds
Cbc0012I Integer solution of -33.47585 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 134 rows 141 columns, reduced to 52 rows 49 columns
Cbc0031I 44 added rows had average density of 74.136364
Cbc0013I At root node, 44 cuts changed objective from -74.705889 to -38.87801 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8243 row cuts average 2.1 elements, 5 column cuts (5 active)  in 0.140 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2863 row cuts average 121.5 elements, 0 column cuts (0 active)  in 0.224 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 108 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 662 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 679 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.117 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1510 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.120 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 442 row cuts average 74.8 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 67 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.395 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -33.47585 best solution, best possible -38.87801 (2.40 seconds)
Cbc0001I Search completed - best objective -33.47584999999998, took 4817 iterations and 4 nodes (2.97 seconds)
Cbc0032I Strong branching done 214 times (6559 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 99 variables fixed on reduced cost
Total time (CPU seconds):       2.42   (Wallclock seconds):       2.99

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 190 (-15) rows, 99 (-4) columns and 571 (-32) elements
Clp1000I sum of infeasibilities 1.06844e-05 - average 5.62338e-08, 22 fixed columns
Coin0506I Presolve 146 (-44) rows, 77 (-22) columns and 439 (-132) elements
Clp0029I End of values pass after 77 iterations
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Coin0511I After Postsolve, objective 47.516167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Clp0000I Optimal - objective value 47.516167
Coin0511I After Postsolve, objective 47.516167, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.51616674 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 189 rows, 99 columns (98 integer (98 of which binary)) and 594 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.178%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 55 integers unsatisfied sum - 7.11812
Cbc0038I Solution found of -1.92067
Cbc0038I Relaxing continuous gives -7.63194
Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 189 rows 99 columns, reduced to 107 rows 56 columns
Cbc0038I Mini branch and bound improved solution from -7.63194 to -25.2254 (0.06 seconds)
Cbc0038I Round again with cutoff of -27.4104
Cbc0038I Pass   1: suminf.    2.56428 (29) obj. -27.4104 iterations 64
Cbc0038I Pass   2: suminf.    1.73733 (11) obj. -27.4104 iterations 25
Cbc0038I Pass   3: suminf.    2.74541 (8) obj. -27.4104 iterations 14
Cbc0038I Pass   4: suminf.    1.76329 (10) obj. -27.4104 iterations 14
Cbc0038I Pass   5: suminf.    4.09202 (16) obj. -27.4104 iterations 31
Cbc0038I Pass   6: suminf.    2.18410 (11) obj. -27.4104 iterations 44
Cbc0038I Pass   7: suminf.    2.38822 (7) obj. -27.4104 iterations 13
Cbc0038I Pass   8: suminf.    2.13391 (7) obj. -27.4104 iterations 8
Cbc0038I Pass   9: suminf.    1.43745 (6) obj. -27.4104 iterations 10
Cbc0038I Pass  10: suminf.    1.24684 (8) obj. -27.4104 iterations 16
Cbc0038I Pass  11: suminf.    2.71624 (8) obj. -27.4104 iterations 16
Cbc0038I Pass  12: suminf.    1.76329 (10) obj. -27.4104 iterations 11
Cbc0038I Pass  13: suminf.    1.73733 (11) obj. -27.4104 iterations 4
Cbc0038I Pass  14: suminf.    2.74541 (8) obj. -27.4104 iterations 17
Cbc0038I Pass  15: suminf.    6.12655 (19) obj. -27.4104 iterations 37
Cbc0038I Pass  16: suminf.    2.86183 (15) obj. -27.4104 iterations 38
Cbc0038I Pass  17: suminf.    2.56428 (29) obj. -27.4104 iterations 15
Cbc0038I Pass  18: suminf.    5.75276 (20) obj. -27.4104 iterations 53
Cbc0038I Pass  19: suminf.    2.55556 (9) obj. -27.4104 iterations 38
Cbc0038I Pass  20: suminf.    1.86091 (13) obj. -27.4104 iterations 10
Cbc0038I Pass  21: suminf.    4.02129 (12) obj. -27.4104 iterations 23
Cbc0038I Pass  22: suminf.    4.33329 (16) obj. -27.4104 iterations 16
Cbc0038I Pass  23: suminf.    2.95960 (13) obj. -27.4104 iterations 25
Cbc0038I Pass  24: suminf.    1.79903 (10) obj. -27.4104 iterations 13
Cbc0038I Pass  25: suminf.    3.27823 (10) obj. -27.4104 iterations 11
Cbc0038I Pass  26: suminf.    2.31744 (9) obj. -27.4104 iterations 5
Cbc0038I Pass  27: suminf.    2.15169 (13) obj. -27.4104 iterations 12
Cbc0038I Pass  28: suminf.    2.69816 (9) obj. -27.4104 iterations 14
Cbc0038I Pass  29: suminf.    2.36545 (10) obj. -27.4104 iterations 8
Cbc0038I Pass  30: suminf.    1.56409 (8) obj. -27.4104 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 189 rows 99 columns, reduced to 146 rows 77 columns - 1 fixed gives 135, 76 - still too large
Cbc0038I Full problem 189 rows 99 columns, reduced to 135 rows 76 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -25.2254 - took 0.07 seconds
Cbc0012I Integer solution of -25.2254 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 189 rows 99 columns, reduced to 107 rows 56 columns
Cbc0031I 23 added rows had average density of 78.434783
Cbc0013I At root node, 23 cuts changed objective from -47.074975 to -40.225309 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 9214 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1820 row cuts average 99.0 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 9 row cuts average 4.2 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -25.2254 best solution, best possible -40.225309 (1.38 seconds)
Cbc0038I Full problem 189 rows 99 columns, reduced to 73 rows 40 columns
Cbc0001I Search completed - best objective -25.2254, took 8620 iterations and 64 nodes (1.89 seconds)
Cbc0032I Strong branching done 840 times (16972 iterations), fathomed 3 nodes and fixed 27 variables
Cbc0035I Maximum depth 23, 97 variables fixed on reduced cost
Total time (CPU seconds):       1.78   (Wallclock seconds):       1.91

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 133 (-72) rows, 139 (-64) columns and 2419 (-3235) elements
Clp1000I sum of infeasibilities 8.69629e-08 - average 6.53856e-10, 19 fixed columns
Coin0506I Presolve 115 (-18) rows, 120 (-19) columns and 1911 (-508) elements
Clp0006I 0  Obj 44.628405 Dual inf 11.139919 (118)
Clp0029I End of values pass after 120 iterations
Clp0014I Perturbing problem by 0.001% of 1.7730718 - largest nonzero change 2.1540128e-05 ( 0.0014083952%) - largest zero change 2.9365449e-05
Clp0000I Optimal - objective value 54.489869
Clp0000I Optimal - objective value 54.489869
Coin0511I After Postsolve, objective 54.489869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 54.489869
Clp0000I Optimal - objective value 54.489869
Clp0000I Optimal - objective value 54.489869
Clp0000I Optimal - objective value 54.489869
Coin0511I After Postsolve, objective 54.489869, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 54.48986878 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 48 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 132 rows, 139 columns (139 integer (139 of which binary)) and 2447 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.879%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 7.06831
Cbc0038I Pass   1: suminf.    1.39516 (30) obj. -22.5065 iterations 25
Cbc0038I Pass   2: suminf.    1.39516 (30) obj. -22.5065 iterations 1
Cbc0038I Pass   3: suminf.    0.06919 (2) obj. 17.5732 iterations 30
Cbc0038I Solution found of 19.504
Cbc0038I Rounding solution of 7.48961 is better than previous of 19.504

Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 139 columns, reduced to 16 rows 16 columns
Cbc0038I Mini branch and bound improved solution from 7.48961 to 2.8716 (0.07 seconds)
Cbc0038I Round again with cutoff of -2.37494
Cbc0038I Pass   4: suminf.    1.39516 (30) obj. -22.5065 iterations 0
Cbc0038I Pass   5: suminf.    1.39516 (30) obj. -22.5065 iterations 1
Cbc0038I Pass   6: suminf.    0.90380 (12) obj. -2.37494 iterations 21
Cbc0038I Pass   7: suminf.    0.54311 (3) obj. -2.37494 iterations 16
Cbc0038I Pass   8: suminf.    0.40893 (2) obj. -2.6027 iterations 4
Cbc0038I Pass   9: suminf.    0.44689 (2) obj. -2.37494 iterations 7
Cbc0038I Pass  10: suminf.    2.57277 (18) obj. -2.37494 iterations 36
Cbc0038I Pass  11: suminf.    1.71952 (11) obj. -2.37494 iterations 21
Cbc0038I Pass  12: suminf.    1.08562 (5) obj. -2.37494 iterations 21
Cbc0038I Pass  13: suminf.    0.40238 (3) obj. -2.37494 iterations 6
Cbc0038I Pass  14: suminf.    0.66763 (3) obj. -2.37494 iterations 5
Cbc0038I Pass  15: suminf.    2.16624 (11) obj. -2.37494 iterations 28
Cbc0038I Pass  16: suminf.    0.67981 (6) obj. -2.37494 iterations 22
Cbc0038I Pass  17: suminf.    0.66512 (5) obj. -2.37494 iterations 7
Cbc0038I Pass  18: suminf.    0.56754 (4) obj. -2.37494 iterations 4
Cbc0038I Pass  19: suminf.    1.38891 (12) obj. -11.7524 iterations 30
Cbc0038I Pass  20: suminf.    0.91757 (11) obj. -10.3633 iterations 7
Cbc0038I Pass  21: suminf.    1.25498 (6) obj. -2.37494 iterations 23
Cbc0038I Pass  22: suminf.    1.23492 (11) obj. -2.37494 iterations 3
Cbc0038I Pass  23: suminf.    2.50875 (8) obj. -2.37494 iterations 22
Cbc0038I Pass  24: suminf.    1.11879 (7) obj. -2.37494 iterations 3
Cbc0038I Pass  25: suminf.    0.72115 (4) obj. -2.37494 iterations 5
Cbc0038I Pass  26: suminf.    0.86973 (4) obj. -2.37494 iterations 7
Cbc0038I Pass  27: suminf.    0.76039 (6) obj. -2.37494 iterations 7
Cbc0038I Pass  28: suminf.    1.27210 (5) obj. -2.37494 iterations 6
Cbc0038I Pass  29: suminf.    1.18275 (11) obj. -2.37494 iterations 23
Cbc0038I Pass  30: suminf.    1.02198 (9) obj. -2.51239 iterations 8
Cbc0038I Pass  31: suminf.    1.12839 (7) obj. -2.37494 iterations 15
Cbc0038I Pass  32: suminf.    1.12839 (7) obj. -2.37494 iterations 0
Cbc0038I Pass  33: suminf.    0.59061 (3) obj. -2.37494 iterations 10
Cbc0038I Rounding solution of -1.55257 is better than previous of 2.8716

Cbc0038I Before mini branch and bound, 56 integers at bound fixed and 0 continuous
Cbc0038I Full problem 132 rows 139 columns, reduced to 71 rows 75 columns
Cbc0038I Mini branch and bound improved solution from -1.55257 to -18.2925 (0.21 seconds)
Cbc0038I Round again with cutoff of -24.5527
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    1.88450 (37) obj. -24.5527 iterations 4
Cbc0038I Pass  34: suminf.    1.60851 (31) obj. -24.5527 iterations 2
Cbc0038I Pass  35: suminf.    3.35132 (19) obj. -24.5527 iterations 39
Cbc0038I Pass  36: suminf.    3.08482 (21) obj. -24.5527 iterations 9
Cbc0038I Pass  37: suminf.    3.91580 (25) obj. -24.5527 iterations 17
Cbc0038I Pass  38: suminf.    3.05147 (18) obj. -24.5527 iterations 2
Cbc0038I Pass  39: suminf.    2.92167 (18) obj. -24.5527 iterations 8
Cbc0038I Pass  40: suminf.    2.90100 (15) obj. -24.5527 iterations 18
Cbc0038I Pass  41: suminf.    2.74161 (15) obj. -24.5527 iterations 9
Cbc0038I Pass  42: suminf.    2.04455 (15) obj. -24.5527 iterations 7
Cbc0038I Pass  43: suminf.    2.90100 (15) obj. -24.5527 iterations 21
Cbc0038I Pass  44: suminf.    2.82368 (20) obj. -24.5527 iterations 22
Cbc0038I Pass  45: suminf.    2.08546 (16) obj. -24.5527 iterations 9
Cbc0038I Pass  46: suminf.    1.52009 (15) obj. -24.8578 iterations 6
Cbc0038I Pass  47: suminf.    2.24630 (18) obj. -24.5527 iterations 29
Cbc0038I Pass  48: suminf.    2.02768 (19) obj. -24.5527 iterations 3
Cbc0038I Pass  49: suminf.    3.15624 (16) obj. -24.5527 iterations 21
Cbc0038I Pass  50: suminf.    2.35942 (18) obj. -24.5527 iterations 9
Cbc0038I Pass  51: suminf.    2.11044 (21) obj. -24.5527 iterations 6
Cbc0038I Pass  52: suminf.    3.24362 (17) obj. -24.5527 iterations 12
Cbc0038I Pass  53: suminf.    2.22326 (21) obj. -24.5527 iterations 12
Cbc0038I Pass  54: suminf.    2.35387 (22) obj. -24.5527 iterations 27
Cbc0038I Pass  55: suminf.    1.51315 (16) obj. -24.6702 iterations 14
Cbc0038I Pass  56: suminf.    2.01906 (23) obj. -24.5527 iterations 34
Cbc0038I Pass  57: suminf.    2.01906 (23) obj. -24.5527 iterations 0
Cbc0038I Pass  58: suminf.    2.74224 (22) obj. -24.5527 iterations 22
Cbc0038I Pass  59: suminf.    2.18392 (21) obj. -24.5527 iterations 2
Cbc0038I Pass  60: suminf.    3.24362 (17) obj. -24.5527 iterations 16
Cbc0038I Pass  61: suminf.    2.22326 (21) obj. -24.5527 iterations 10
Cbc0038I Pass  62: suminf.    3.08265 (23) obj. -24.5527 iterations 23
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.24 seconds)
Cbc0038I After 0.24 seconds - Feasibility pump exiting with objective of -18.2925 - took 0.17 seconds
Cbc0012I Integer solution of -18.29248 found by feasibility pump after 0 iterations and 0 nodes (0.24 seconds)
Cbc0038I Full problem 132 rows 139 columns, reduced to 39 rows 45 columns
Cbc0031I 55 added rows had average density of 46.563636
Cbc0013I At root node, 55 cuts changed objective from -49.59294 to -27.092788 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14145 row cuts average 2.0 elements, 2 column cuts (2 active)  in 0.172 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1858 row cuts average 129.9 elements, 0 column cuts (0 active)  in 0.221 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 79 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 929 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 1181 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.154 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 803 row cuts average 12.6 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 345 row cuts average 84.5 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 479 row cuts average 14.9 elements, 0 column cuts (0 active)  in 0.725 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -18.29248 best solution, best possible -27.092788 (3.45 seconds)
Cbc0010I After 1 nodes, 2 on tree, -18.29248 best solution, best possible -27.092788 (4.65 seconds)
Cbc0012I Integer solution of -25.2254 found by rounding after 6823 iterations and 2 nodes (4.67 seconds)
Cbc0001I Search completed - best objective -25.2254, took 7854 iterations and 6 nodes (5.51 seconds)
Cbc0032I Strong branching done 266 times (8975 iterations), fathomed 2 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 74 variables fixed on reduced cost
Total time (CPU seconds):       4.09   (Wallclock seconds):       5.55

