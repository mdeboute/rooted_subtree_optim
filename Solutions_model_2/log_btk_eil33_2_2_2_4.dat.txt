Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-7) rows, 33 (-2) columns and 182 (-13) elements
Clp1000I sum of infeasibilities 1.49155e-05 - average 2.40573e-07, 1 fixed columns
Coin0506I Presolve 60 (-2) rows, 32 (-1) columns and 176 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 79.500273
Clp0000I Optimal - objective value 79.500273
Coin0511I After Postsolve, objective 79.500273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.500273
Clp0000I Optimal - objective value 79.500273
Clp0000I Optimal - objective value 79.500273
Coin0511I After Postsolve, objective 79.500273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.50027287 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 33 columns (32 integer (32 of which binary)) and 186 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.64967
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.23748 iterations 22
Cbc0038I Solution found of 5.23748
Cbc0038I Relaxing continuous gives 5.23748
Cbc0038I Rounding solution of -15.7209 is better than previous of 5.23748

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 47 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -15.7209 to -28.4391 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.5453
Cbc0038I Pass   2: suminf.    1.62326 (5) obj. -33.5453 iterations 6
Cbc0038I Pass   3: suminf.    1.60244 (4) obj. -33.5453 iterations 1
Cbc0038I Pass   4: suminf.    0.34763 (2) obj. -33.5453 iterations 4
Cbc0038I Pass   5: suminf.    0.41454 (3) obj. -33.5453 iterations 3
Cbc0038I Pass   6: suminf.    0.29876 (1) obj. -33.5453 iterations 2
Cbc0038I Pass   7: suminf.    1.47929 (5) obj. -33.5453 iterations 7
Cbc0038I Pass   8: suminf.    0.51694 (3) obj. -33.5453 iterations 4
Cbc0038I Pass   9: suminf.    0.85896 (2) obj. -33.5453 iterations 2
Cbc0038I Pass  10: suminf.    0.52075 (3) obj. -33.5453 iterations 2
Cbc0038I Pass  11: suminf.    0.70781 (2) obj. -33.5453 iterations 3
Cbc0038I Pass  12: suminf.    0.64416 (2) obj. -33.5453 iterations 2
Cbc0038I Pass  13: suminf.    0.64416 (2) obj. -33.5453 iterations 1
Cbc0038I Pass  14: suminf.    0.64416 (2) obj. -33.5453 iterations 1
Cbc0038I Pass  15: suminf.    1.60518 (5) obj. -33.5453 iterations 12
Cbc0038I Pass  16: suminf.    1.26236 (4) obj. -33.5453 iterations 2
Cbc0038I Pass  17: suminf.    0.74827 (3) obj. -33.5453 iterations 8
Cbc0038I Pass  18: suminf.    0.45765 (1) obj. -33.5453 iterations 2
Cbc0038I Pass  19: suminf.    0.40656 (1) obj. -33.5453 iterations 1
Cbc0038I Pass  20: suminf.    0.36374 (4) obj. -33.5453 iterations 5
Cbc0038I Pass  21: suminf.    0.35497 (2) obj. -33.5453 iterations 3
Cbc0038I Pass  22: suminf.    0.64342 (3) obj. -33.5453 iterations 3
Cbc0038I Pass  23: suminf.    0.43750 (1) obj. -33.5453 iterations 2
Cbc0038I Pass  24: suminf.    1.57556 (7) obj. -33.5453 iterations 8
Cbc0038I Pass  25: suminf.    1.05876 (5) obj. -33.5453 iterations 2
Cbc0038I Pass  26: suminf.    0.85620 (3) obj. -33.5453 iterations 9
Cbc0038I Pass  27: suminf.    0.65995 (3) obj. -33.5453 iterations 1
Cbc0038I Pass  28: suminf.    0.85075 (3) obj. -33.5453 iterations 4
Cbc0038I Pass  29: suminf.    0.60572 (2) obj. -33.5453 iterations 1
Cbc0038I Pass  30: suminf.    0.60572 (2) obj. -33.5453 iterations 0
Cbc0038I Pass  31: suminf.    0.62509 (2) obj. -33.5453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 52 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -28.4391 - took 0.03 seconds
Cbc0012I Integer solution of -28.43912 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 62 rows 33 columns, reduced to 47 rows 25 columns
Cbc0031I 14 added rows had average density of 22.428571
Cbc0013I At root node, 14 cuts changed objective from -79.500273 to -55.728512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1972 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 811 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0012I Integer solution of -29.15934 found by rounding after 3421 iterations and 17 nodes (0.28 seconds)
Cbc0001I Search completed - best objective -29.15934, took 3442 iterations and 18 nodes (0.28 seconds)
Cbc0032I Strong branching done 180 times (1742 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 4, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.28   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-11) rows, 59 (-7) columns and 584 (-139) elements
Clp1000I sum of infeasibilities 3.28385e-08 - average 5.76114e-10, 34 fixed columns
Coin0506I Presolve 23 (-34) rows, 25 (-34) columns and 90 (-494) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.4390783 - largest nonzero change 2.2936599e-05 ( 0.0018024707%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 14.235313
Clp0000I Optimal - objective value 14.235313
Coin0511I After Postsolve, objective 14.235313, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7677968 - largest nonzero change 2.7612132e-05 ( 0.0022742989%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 107.07747
Clp0000I Optimal - objective value 107.07747
Clp0000I Optimal - objective value 107.07747
Coin0511I After Postsolve, objective 107.07747, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.0774657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 59 columns (59 integer (59 of which binary)) and 592 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.592%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.05429
Cbc0038I Pass   1: suminf.    1.68387 (16) obj. -48.5595 iterations 11
Cbc0038I Pass   2: suminf.    1.68387 (16) obj. -48.5595 iterations 1
Cbc0038I Solution found of 22.9678
Cbc0038I Rounding solution of -4.31594 is better than previous of 22.9678

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 59 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -4.31594 to -9.51797 (0.01 seconds)
Cbc0038I Round again with cutoff of -16.3081
Cbc0038I Pass   3: suminf.    1.68387 (16) obj. -48.5595 iterations 0
Cbc0038I Pass   4: suminf.    1.68387 (16) obj. -48.5595 iterations 1
Cbc0038I Pass   5: suminf.    0.08750 (2) obj. -18.4363 iterations 18
Cbc0038I Pass   6: suminf.    0.56663 (6) obj. -16.3081 iterations 6
Cbc0038I Pass   7: suminf.    0.56663 (6) obj. -16.3081 iterations 0
Cbc0038I Pass   8: suminf.    0.26661 (1) obj. -16.3081 iterations 6
Cbc0038I Pass   9: suminf.    0.18750 (1) obj. -18.8307 iterations 1
Cbc0038I Pass  10: suminf.    1.53345 (6) obj. -16.3081 iterations 11
Cbc0038I Pass  11: suminf.    1.41685 (5) obj. -16.3081 iterations 2
Cbc0038I Pass  12: suminf.    0.68404 (2) obj. -16.3081 iterations 5
Cbc0038I Pass  13: suminf.    0.44916 (1) obj. -16.3081 iterations 1
Cbc0038I Pass  14: suminf.    0.32250 (1) obj. -23.5896 iterations 1
Cbc0038I Pass  15: suminf.    1.86042 (6) obj. -16.3081 iterations 13
Cbc0038I Pass  16: suminf.    1.31527 (6) obj. -16.3081 iterations 3
Cbc0038I Pass  17: suminf.    1.01113 (6) obj. -16.3081 iterations 1
Cbc0038I Pass  18: suminf.    0.59359 (6) obj. -20.901 iterations 1
Cbc0038I Pass  19: suminf.    0.41748 (2) obj. -16.3081 iterations 8
Cbc0038I Pass  20: suminf.    0.41748 (2) obj. -16.3081 iterations 0
Cbc0038I Pass  21: suminf.    0.74188 (2) obj. -16.3081 iterations 2
Cbc0038I Pass  22: suminf.    0.56250 (2) obj. -22.0283 iterations 1
Cbc0038I Pass  23: suminf.    0.41748 (2) obj. -16.3081 iterations 3
Cbc0038I Pass  24: suminf.    1.91679 (6) obj. -16.3081 iterations 20
Cbc0038I Pass  25: suminf.    1.89712 (6) obj. -16.3081 iterations 6
Cbc0038I Pass  26: suminf.    1.39535 (4) obj. -16.3081 iterations 5
Cbc0038I Pass  27: suminf.    1.39535 (4) obj. -16.3081 iterations 0
Cbc0038I Pass  28: suminf.    0.81987 (3) obj. -16.3081 iterations 2
Cbc0038I Pass  29: suminf.    0.81987 (3) obj. -16.3081 iterations 0
Cbc0038I Pass  30: suminf.    1.12607 (3) obj. -16.3081 iterations 1
Cbc0038I Pass  31: suminf.    0.72374 (3) obj. -16.3081 iterations 1
Cbc0038I Pass  32: suminf.    3.01874 (13) obj. -16.3081 iterations 26
Cbc0038I Rounding solution of -19.388 is better than previous of -9.51797

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 59 columns, reduced to 31 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -19.388 to -28.4391 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.235
Cbc0038I Pass  32: suminf.    1.68387 (16) obj. -48.5595 iterations 0
Cbc0038I Pass  33: suminf.    1.68387 (16) obj. -48.5595 iterations 1
Cbc0038I Pass  34: suminf.    1.17443 (6) obj. -38.235 iterations 24
Cbc0038I Pass  35: suminf.    1.14767 (6) obj. -38.235 iterations 1
Cbc0038I Pass  36: suminf.    0.94605 (3) obj. -38.235 iterations 5
Cbc0038I Pass  37: suminf.    0.80386 (3) obj. -42.0297 iterations 1
Cbc0038I Pass  38: suminf.    0.81763 (3) obj. -38.235 iterations 2
Cbc0038I Pass  39: suminf.    0.68872 (3) obj. -38.235 iterations 1
Cbc0038I Pass  40: suminf.    0.69006 (2) obj. -38.235 iterations 2
Cbc0038I Pass  41: suminf.    0.62500 (2) obj. -40.3096 iterations 1
Cbc0038I Pass  42: suminf.    0.68641 (2) obj. -38.235 iterations 2
Cbc0038I Pass  43: suminf.    0.68641 (2) obj. -38.235 iterations 0
Cbc0038I Pass  44: suminf.    2.25278 (9) obj. -38.235 iterations 14
Cbc0038I Pass  45: suminf.    1.79712 (6) obj. -43.8121 iterations 3
Cbc0038I Pass  46: suminf.    0.95604 (4) obj. -38.235 iterations 9
Cbc0038I Pass  47: suminf.    0.89353 (3) obj. -38.235 iterations 2
Cbc0038I Pass  48: suminf.    1.17939 (3) obj. -38.235 iterations 4
Cbc0038I Pass  49: suminf.    1.17939 (3) obj. -38.235 iterations 0
Cbc0038I Pass  50: suminf.    0.89353 (3) obj. -38.235 iterations 1
Cbc0038I Pass  51: suminf.    1.47144 (8) obj. -38.235 iterations 11
Cbc0038I Pass  52: suminf.    0.99658 (7) obj. -38.235 iterations 2
Cbc0038I Pass  53: suminf.    1.22161 (5) obj. -38.235 iterations 7
Cbc0038I Pass  54: suminf.    1.22161 (5) obj. -38.235 iterations 0
Cbc0038I Pass  55: suminf.    0.99253 (4) obj. -38.235 iterations 4
Cbc0038I Pass  56: suminf.    0.94302 (3) obj. -38.235 iterations 2
Cbc0038I Pass  57: suminf.    0.89353 (3) obj. -38.235 iterations 6
Cbc0038I Pass  58: suminf.    0.89353 (3) obj. -38.235 iterations 0
Cbc0038I Pass  59: suminf.    1.17939 (3) obj. -38.235 iterations 4
Cbc0038I Pass  60: suminf.    1.17939 (3) obj. -38.235 iterations 0
Cbc0038I Pass  61: suminf.    2.07711 (7) obj. -38.235 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 59 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -28.4391 - took 0.02 seconds
Cbc0012I Integer solution of -28.43912 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 57 rows 59 columns, reduced to 2 rows 4 columns
Cbc0031I 28 added rows had average density of 14.214286
Cbc0013I At root node, 28 cuts changed objective from -77.418262 to -34.553756 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1319 row cuts average 2.9 elements, 9 column cuts (9 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 571 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 80 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 6 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 240 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 223 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.713 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.43912 best solution, best possible -34.553756 (1.56 seconds)
Cbc0010I After 6 nodes, 7 on tree, -28.43912 best solution, best possible -34.553756 (2.28 seconds)
Cbc0012I Integer solution of -29.15934 found by DiveCoefficient after 2683 iterations and 24 nodes (2.71 seconds)
Cbc0001I Search completed - best objective -29.15934, took 2722 iterations and 26 nodes (2.75 seconds)
Cbc0032I Strong branching done 282 times (3213 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 52 variables fixed on reduced cost
Total time (CPU seconds):       1.75   (Wallclock seconds):       2.76

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 62 (-7) rows, 33 (-2) columns and 182 (-13) elements
Clp1000I sum of infeasibilities 1.49155e-05 - average 2.40573e-07, 1 fixed columns
Coin0506I Presolve 60 (-2) rows, 32 (-1) columns and 176 (-6) elements
Clp0029I End of values pass after 32 iterations
Clp0000I Optimal - objective value 79.500273
Clp0000I Optimal - objective value 79.500273
Coin0511I After Postsolve, objective 79.500273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 79.500273
Clp0000I Optimal - objective value 79.500273
Clp0000I Optimal - objective value 79.500273
Coin0511I After Postsolve, objective 79.500273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 79.50027287 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0004I processed model has 62 rows, 33 columns (32 integer (32 of which binary)) and 186 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.030%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 6.64967
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.23748 iterations 22
Cbc0038I Solution found of 5.23748
Cbc0038I Relaxing continuous gives 5.23748
Cbc0038I Rounding solution of -15.7209 is better than previous of 5.23748

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 47 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -15.7209 to -28.4391 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.5453
Cbc0038I Pass   2: suminf.    1.62326 (5) obj. -33.5453 iterations 6
Cbc0038I Pass   3: suminf.    1.60244 (4) obj. -33.5453 iterations 1
Cbc0038I Pass   4: suminf.    0.34763 (2) obj. -33.5453 iterations 4
Cbc0038I Pass   5: suminf.    0.41454 (3) obj. -33.5453 iterations 3
Cbc0038I Pass   6: suminf.    0.29876 (1) obj. -33.5453 iterations 2
Cbc0038I Pass   7: suminf.    1.47929 (5) obj. -33.5453 iterations 7
Cbc0038I Pass   8: suminf.    0.51694 (3) obj. -33.5453 iterations 4
Cbc0038I Pass   9: suminf.    0.85896 (2) obj. -33.5453 iterations 2
Cbc0038I Pass  10: suminf.    0.52075 (3) obj. -33.5453 iterations 2
Cbc0038I Pass  11: suminf.    0.70781 (2) obj. -33.5453 iterations 3
Cbc0038I Pass  12: suminf.    0.64416 (2) obj. -33.5453 iterations 2
Cbc0038I Pass  13: suminf.    0.64416 (2) obj. -33.5453 iterations 1
Cbc0038I Pass  14: suminf.    0.64416 (2) obj. -33.5453 iterations 1
Cbc0038I Pass  15: suminf.    1.60518 (5) obj. -33.5453 iterations 12
Cbc0038I Pass  16: suminf.    1.26236 (4) obj. -33.5453 iterations 2
Cbc0038I Pass  17: suminf.    0.74827 (3) obj. -33.5453 iterations 8
Cbc0038I Pass  18: suminf.    0.45765 (1) obj. -33.5453 iterations 2
Cbc0038I Pass  19: suminf.    0.40656 (1) obj. -33.5453 iterations 1
Cbc0038I Pass  20: suminf.    0.36374 (4) obj. -33.5453 iterations 5
Cbc0038I Pass  21: suminf.    0.35497 (2) obj. -33.5453 iterations 3
Cbc0038I Pass  22: suminf.    0.64342 (3) obj. -33.5453 iterations 3
Cbc0038I Pass  23: suminf.    0.43750 (1) obj. -33.5453 iterations 2
Cbc0038I Pass  24: suminf.    1.57556 (7) obj. -33.5453 iterations 8
Cbc0038I Pass  25: suminf.    1.05876 (5) obj. -33.5453 iterations 2
Cbc0038I Pass  26: suminf.    0.85620 (3) obj. -33.5453 iterations 9
Cbc0038I Pass  27: suminf.    0.65995 (3) obj. -33.5453 iterations 1
Cbc0038I Pass  28: suminf.    0.85075 (3) obj. -33.5453 iterations 4
Cbc0038I Pass  29: suminf.    0.60572 (2) obj. -33.5453 iterations 1
Cbc0038I Pass  30: suminf.    0.60572 (2) obj. -33.5453 iterations 0
Cbc0038I Pass  31: suminf.    0.62509 (2) obj. -33.5453 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 62 rows 33 columns, reduced to 52 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -28.4391 - took 0.05 seconds
Cbc0012I Integer solution of -28.43912 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 62 rows 33 columns, reduced to 47 rows 25 columns
Cbc0031I 14 added rows had average density of 22.428571
Cbc0013I At root node, 14 cuts changed objective from -79.500273 to -55.728512 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1972 row cuts average 3.2 elements, 2 column cuts (2 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 811 row cuts average 31.7 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 77 row cuts average 5.4 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 106 row cuts average 29.7 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -29.15934 found by rounding after 3421 iterations and 17 nodes (0.29 seconds)
Cbc0001I Search completed - best objective -29.15934, took 3442 iterations and 18 nodes (0.29 seconds)
Cbc0032I Strong branching done 180 times (1742 iterations), fathomed 0 nodes and fixed 13 variables
Cbc0035I Maximum depth 4, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.31   (Wallclock seconds):       0.29

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 57 (-12) rows, 59 (-8) columns and 584 (-140) elements
Clp1000I sum of infeasibilities 3.28385e-08 - average 5.76114e-10, 34 fixed columns
Coin0506I Presolve 23 (-34) rows, 25 (-34) columns and 90 (-494) elements
Clp0029I End of values pass after 25 iterations
Clp0014I Perturbing problem by 0.001% of 2.4390783 - largest nonzero change 2.2936599e-05 ( 0.0018024707%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 14.235313
Clp0000I Optimal - objective value 14.235313
Coin0511I After Postsolve, objective 14.235313, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.7677968 - largest nonzero change 2.7612132e-05 ( 0.0022742989%) - largest zero change 2.8834042e-05
Clp0000I Optimal - objective value 107.07747
Clp0000I Optimal - objective value 107.07747
Clp0000I Optimal - objective value 107.07747
Coin0511I After Postsolve, objective 107.07747, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 107.0774657 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 57 rows, 59 columns (59 integer (59 of which binary)) and 592 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.592%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 21 integers unsatisfied sum - 7.05429
Cbc0038I Pass   1: suminf.    1.68387 (16) obj. -48.5595 iterations 11
Cbc0038I Pass   2: suminf.    1.68387 (16) obj. -48.5595 iterations 1
Cbc0038I Solution found of 22.9678
Cbc0038I Rounding solution of -4.31594 is better than previous of 22.9678

Cbc0038I Before mini branch and bound, 36 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 59 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound improved solution from -4.31594 to -9.51797 (0.01 seconds)
Cbc0038I Round again with cutoff of -16.3081
Cbc0038I Pass   3: suminf.    1.68387 (16) obj. -48.5595 iterations 0
Cbc0038I Pass   4: suminf.    1.68387 (16) obj. -48.5595 iterations 1
Cbc0038I Pass   5: suminf.    0.08750 (2) obj. -18.4363 iterations 18
Cbc0038I Pass   6: suminf.    0.56663 (6) obj. -16.3081 iterations 6
Cbc0038I Pass   7: suminf.    0.56663 (6) obj. -16.3081 iterations 0
Cbc0038I Pass   8: suminf.    0.26661 (1) obj. -16.3081 iterations 6
Cbc0038I Pass   9: suminf.    0.18750 (1) obj. -18.8307 iterations 1
Cbc0038I Pass  10: suminf.    1.53345 (6) obj. -16.3081 iterations 11
Cbc0038I Pass  11: suminf.    1.41685 (5) obj. -16.3081 iterations 2
Cbc0038I Pass  12: suminf.    0.68404 (2) obj. -16.3081 iterations 5
Cbc0038I Pass  13: suminf.    0.44916 (1) obj. -16.3081 iterations 1
Cbc0038I Pass  14: suminf.    0.32250 (1) obj. -23.5896 iterations 1
Cbc0038I Pass  15: suminf.    1.86042 (6) obj. -16.3081 iterations 13
Cbc0038I Pass  16: suminf.    1.31527 (6) obj. -16.3081 iterations 3
Cbc0038I Pass  17: suminf.    1.01113 (6) obj. -16.3081 iterations 1
Cbc0038I Pass  18: suminf.    0.59359 (6) obj. -20.901 iterations 1
Cbc0038I Pass  19: suminf.    0.41748 (2) obj. -16.3081 iterations 8
Cbc0038I Pass  20: suminf.    0.41748 (2) obj. -16.3081 iterations 0
Cbc0038I Pass  21: suminf.    0.74188 (2) obj. -16.3081 iterations 2
Cbc0038I Pass  22: suminf.    0.56250 (2) obj. -22.0283 iterations 1
Cbc0038I Pass  23: suminf.    0.41748 (2) obj. -16.3081 iterations 3
Cbc0038I Pass  24: suminf.    1.91679 (6) obj. -16.3081 iterations 20
Cbc0038I Pass  25: suminf.    1.89712 (6) obj. -16.3081 iterations 6
Cbc0038I Pass  26: suminf.    1.39535 (4) obj. -16.3081 iterations 5
Cbc0038I Pass  27: suminf.    1.39535 (4) obj. -16.3081 iterations 0
Cbc0038I Pass  28: suminf.    0.81987 (3) obj. -16.3081 iterations 2
Cbc0038I Pass  29: suminf.    0.81987 (3) obj. -16.3081 iterations 0
Cbc0038I Pass  30: suminf.    1.12607 (3) obj. -16.3081 iterations 1
Cbc0038I Pass  31: suminf.    0.72374 (3) obj. -16.3081 iterations 1
Cbc0038I Pass  32: suminf.    3.01874 (13) obj. -16.3081 iterations 26
Cbc0038I Rounding solution of -19.388 is better than previous of -9.51797

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 59 columns, reduced to 31 rows 37 columns
Cbc0038I Mini branch and bound improved solution from -19.388 to -28.4391 (0.03 seconds)
Cbc0038I Round again with cutoff of -38.235
Cbc0038I Pass  32: suminf.    1.68387 (16) obj. -48.5595 iterations 0
Cbc0038I Pass  33: suminf.    1.68387 (16) obj. -48.5595 iterations 1
Cbc0038I Pass  34: suminf.    1.17443 (6) obj. -38.235 iterations 24
Cbc0038I Pass  35: suminf.    1.14767 (6) obj. -38.235 iterations 1
Cbc0038I Pass  36: suminf.    0.94605 (3) obj. -38.235 iterations 5
Cbc0038I Pass  37: suminf.    0.80386 (3) obj. -42.0297 iterations 1
Cbc0038I Pass  38: suminf.    0.81763 (3) obj. -38.235 iterations 2
Cbc0038I Pass  39: suminf.    0.68872 (3) obj. -38.235 iterations 1
Cbc0038I Pass  40: suminf.    0.69006 (2) obj. -38.235 iterations 2
Cbc0038I Pass  41: suminf.    0.62500 (2) obj. -40.3096 iterations 1
Cbc0038I Pass  42: suminf.    0.68641 (2) obj. -38.235 iterations 2
Cbc0038I Pass  43: suminf.    0.68641 (2) obj. -38.235 iterations 0
Cbc0038I Pass  44: suminf.    2.25278 (9) obj. -38.235 iterations 14
Cbc0038I Pass  45: suminf.    1.79712 (6) obj. -43.8121 iterations 3
Cbc0038I Pass  46: suminf.    0.95604 (4) obj. -38.235 iterations 9
Cbc0038I Pass  47: suminf.    0.89353 (3) obj. -38.235 iterations 2
Cbc0038I Pass  48: suminf.    1.17939 (3) obj. -38.235 iterations 4
Cbc0038I Pass  49: suminf.    1.17939 (3) obj. -38.235 iterations 0
Cbc0038I Pass  50: suminf.    0.89353 (3) obj. -38.235 iterations 1
Cbc0038I Pass  51: suminf.    1.47144 (8) obj. -38.235 iterations 11
Cbc0038I Pass  52: suminf.    0.99658 (7) obj. -38.235 iterations 2
Cbc0038I Pass  53: suminf.    1.22161 (5) obj. -38.235 iterations 7
Cbc0038I Pass  54: suminf.    1.22161 (5) obj. -38.235 iterations 0
Cbc0038I Pass  55: suminf.    0.99253 (4) obj. -38.235 iterations 4
Cbc0038I Pass  56: suminf.    0.94302 (3) obj. -38.235 iterations 2
Cbc0038I Pass  57: suminf.    0.89353 (3) obj. -38.235 iterations 6
Cbc0038I Pass  58: suminf.    0.89353 (3) obj. -38.235 iterations 0
Cbc0038I Pass  59: suminf.    1.17939 (3) obj. -38.235 iterations 4
Cbc0038I Pass  60: suminf.    1.17939 (3) obj. -38.235 iterations 0
Cbc0038I Pass  61: suminf.    2.07711 (7) obj. -38.235 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 27 integers at bound fixed and 0 continuous
Cbc0038I Full problem 57 rows 59 columns, reduced to 27 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -28.4391 - took 0.02 seconds
Cbc0012I Integer solution of -28.43912 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 57 rows 59 columns, reduced to 2 rows 4 columns
Cbc0031I 28 added rows had average density of 14.214286
Cbc0013I At root node, 28 cuts changed objective from -77.418262 to -34.553756 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1319 row cuts average 2.9 elements, 9 column cuts (9 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 571 row cuts average 46.1 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 38 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 80 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 6 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 240 row cuts average 4.3 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 223 row cuts average 19.8 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 69 row cuts average 22.9 elements, 0 column cuts (0 active)  in 0.649 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -28.43912 best solution, best possible -34.553756 (1.38 seconds)
Cbc0010I After 8 nodes, 9 on tree, -28.43912 best solution, best possible -34.553756 (2.08 seconds)
Cbc0012I Integer solution of -29.15934 found by DiveCoefficient after 2683 iterations and 24 nodes (2.52 seconds)
Cbc0001I Search completed - best objective -29.15934, took 2722 iterations and 26 nodes (2.56 seconds)
Cbc0032I Strong branching done 282 times (3213 iterations), fathomed 0 nodes and fixed 10 variables
Cbc0035I Maximum depth 9, 52 variables fixed on reduced cost
Total time (CPU seconds):       1.66   (Wallclock seconds):       2.56

