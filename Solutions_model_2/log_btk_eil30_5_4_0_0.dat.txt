Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 29 (-3) columns and 154 (-23) elements
Clp1000I sum of infeasibilities 2.9378e-06 - average 5.64962e-08, 4 fixed columns
Coin0506I Presolve 41 (-11) rows, 25 (-4) columns and 124 (-30) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Coin0511I After Postsolve, objective 81.751084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Coin0511I After Postsolve, objective 81.751084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.75108439 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 52 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.981%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.86481
Cbc0038I Pass   1: suminf.    0.20565 (2) obj. -37.7588 iterations 23
Cbc0038I Solution found of 9.9472
Cbc0038I Relaxing continuous gives 7.50365
Cbc0038I Rounding solution of -8.221 is better than previous of 7.50365

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -8.221 to -19.8918 (0.01 seconds)
Cbc0038I Round again with cutoff of -26.0778
Cbc0038I Pass   2: suminf.    0.20565 (2) obj. -37.7588 iterations 0
Cbc0038I Pass   3: suminf.    0.47553 (2) obj. -26.0778 iterations 4
Cbc0038I Pass   4: suminf.    0.13356 (2) obj. -26.0778 iterations 3
Cbc0038I Pass   5: suminf.    0.31379 (2) obj. -26.0778 iterations 5
Cbc0038I Pass   6: suminf.    0.05000 (1) obj. -26.0778 iterations 3
Cbc0038I Pass   7: suminf.    0.17375 (1) obj. -26.0778 iterations 4
Cbc0038I Pass   8: suminf.    0.23397 (1) obj. -26.0778 iterations 2
Cbc0038I Pass   9: suminf.    2.16174 (8) obj. -26.0778 iterations 9
Cbc0038I Pass  10: suminf.    1.87059 (8) obj. -26.0778 iterations 3
Cbc0038I Pass  11: suminf.    0.38308 (3) obj. -26.0778 iterations 8
Cbc0038I Pass  12: suminf.    1.75382 (5) obj. -26.0778 iterations 4
Cbc0038I Pass  13: suminf.    0.71532 (3) obj. -26.0778 iterations 3
Cbc0038I Pass  14: suminf.    0.22202 (1) obj. -26.0778 iterations 7
Cbc0038I Pass  15: suminf.    0.05000 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  16: suminf.    0.17375 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  17: suminf.    0.23397 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  18: suminf.    2.26960 (9) obj. -26.0778 iterations 9
Cbc0038I Pass  19: suminf.    2.13649 (9) obj. -26.0778 iterations 3
Cbc0038I Pass  20: suminf.    0.76626 (2) obj. -26.0778 iterations 10
Cbc0038I Pass  21: suminf.    0.41649 (1) obj. -26.0778 iterations 3
Cbc0038I Pass  22: suminf.    0.36768 (1) obj. -26.0778 iterations 1
Cbc0038I Pass  23: suminf.    0.97407 (5) obj. -26.0778 iterations 7
Cbc0038I Pass  24: suminf.    0.91413 (5) obj. -26.0778 iterations 2
Cbc0038I Pass  25: suminf.    0.75742 (2) obj. -26.0778 iterations 13
Cbc0038I Pass  26: suminf.    0.69142 (2) obj. -26.0778 iterations 1
Cbc0038I Pass  27: suminf.    0.41316 (1) obj. -26.0778 iterations 3
Cbc0038I Pass  28: suminf.    0.37080 (1) obj. -26.0778 iterations 1
Cbc0038I Pass  29: suminf.    0.41724 (2) obj. -26.0778 iterations 2
Cbc0038I Pass  30: suminf.    0.41724 (2) obj. -26.0778 iterations 0
Cbc0038I Pass  31: suminf.    0.22202 (1) obj. -26.0778 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -19.8918 to -20.003 (0.03 seconds)
Cbc0038I Round again with cutoff of -37.2125
Cbc0038I Pass  31: suminf.    0.20565 (2) obj. -37.7588 iterations 0
Cbc0038I Pass  32: suminf.    0.78764 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  33: suminf.    0.34053 (2) obj. -37.2125 iterations 1
Cbc0038I Pass  34: suminf.    3.46545 (9) obj. -37.2125 iterations 13
Cbc0038I Pass  35: suminf.    1.75271 (5) obj. -37.2125 iterations 8
Cbc0038I Pass  36: suminf.    0.89815 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  37: suminf.    0.89815 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  38: suminf.    1.09925 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  39: suminf.    1.09925 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  40: suminf.    0.63808 (3) obj. -37.2125 iterations 11
Cbc0038I Pass  41: suminf.    0.78764 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  42: suminf.    0.34053 (2) obj. -37.2125 iterations 1
Cbc0038I Pass  43: suminf.    0.20565 (2) obj. -37.7588 iterations 3
Cbc0038I Pass  44: suminf.    5.54751 (12) obj. -37.2125 iterations 14
Cbc0038I Pass  45: suminf.    1.63004 (5) obj. -37.2125 iterations 10
Cbc0038I Pass  46: suminf.    1.33917 (4) obj. -37.2125 iterations 1
Cbc0038I Pass  47: suminf.    0.84753 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  48: suminf.    0.84753 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  49: suminf.    1.10690 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  50: suminf.    1.10690 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  51: suminf.    3.02754 (10) obj. -37.2125 iterations 11
Cbc0038I Pass  52: suminf.    1.82456 (7) obj. -37.2125 iterations 2
Cbc0038I Pass  53: suminf.    0.81713 (3) obj. -37.2125 iterations 11
Cbc0038I Pass  54: suminf.    0.44458 (1) obj. -37.2125 iterations 3
Cbc0038I Pass  55: suminf.    0.05104 (2) obj. -37.2125 iterations 3
Cbc0038I Pass  56: suminf.    0.64716 (2) obj. -37.2125 iterations 2
Cbc0038I Pass  57: suminf.    3.90858 (11) obj. -37.2125 iterations 6
Cbc0038I Pass  58: suminf.    0.64716 (2) obj. -37.2125 iterations 8
Cbc0038I Pass  59: suminf.    1.35818 (6) obj. -37.2125 iterations 14
Cbc0038I Pass  60: suminf.    1.35818 (6) obj. -37.2125 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 46 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -20.003 - took 0.05 seconds
Cbc0012I Integer solution of -20.00301 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 52 rows 29 columns, reduced to 32 rows 20 columns
Cbc0031I 10 added rows had average density of 21.4
Cbc0013I At root node, 10 cuts changed objective from -81.751084 to -44.092324 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1600 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 766 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 82 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.00300999999999, took 2085 iterations and 6 nodes (0.19 seconds)
Cbc0032I Strong branching done 68 times (763 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-10) rows, 56 (-4) columns and 537 (-75) elements
Clp1000I sum of infeasibilities 0 - average 0, 48 fixed columns
Coin0506I Presolve 7 (-45) rows, 8 (-48) columns and 25 (-512) elements
Clp0029I End of values pass after 6 iterations
Clp0014I Perturbing problem by 0.001% of 1.8796125 - largest nonzero change 2.3181388e-05 ( 0.0017106093%) - largest zero change 1.7383337e-05
Clp0000I Optimal - objective value 55.694468
Clp0000I Optimal - objective value 55.694468
Coin0511I After Postsolve, objective 55.694468, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.21662934 - largest nonzero change 1.9220034e-05 ( 0.0016293615%) - largest zero change 2.9595272e-05
Clp0000I Optimal - objective value 162.26628
Clp0000I Optimal - objective value 162.26628
Clp0000I Optimal - objective value 162.26628
Coin0511I After Postsolve, objective 162.26628, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 162.2662774 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 21 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 56 columns (56 integer (56 of which binary)) and 545 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.791%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 7.16159
Cbc0038I Pass   1: suminf.    2.38510 (15) obj. -62.0029 iterations 8
Cbc0038I Solution found of -1.40295
Cbc0038I Rounding solution of -7.5927 is better than previous of -1.40295

Cbc0038I Before mini branch and bound, 38 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -15.5434
Cbc0038I Pass   2: suminf.    2.38510 (15) obj. -62.0029 iterations 0
Cbc0038I Pass   3: suminf.    0.14429 (1) obj. -15.5434 iterations 19
Cbc0038I Pass   4: suminf.    0.48387 (1) obj. -48.8223 iterations 1
Cbc0038I Pass   5: suminf.    1.14641 (4) obj. -15.5434 iterations 12
Cbc0038I Pass   6: suminf.    0.55053 (3) obj. -15.5434 iterations 4
Cbc0038I Pass   7: suminf.    0.42001 (3) obj. -15.5434 iterations 4
Cbc0038I Pass   8: suminf.    0.30854 (2) obj. -15.5434 iterations 1
Cbc0038I Pass   9: suminf.    0.48387 (1) obj. -47.8223 iterations 2
Cbc0038I Pass  10: suminf.    0.15449 (1) obj. -15.5434 iterations 1
Cbc0038I Pass  11: suminf.    1.87051 (7) obj. -15.5434 iterations 11
Cbc0038I Pass  12: suminf.    1.45181 (6) obj. -15.5434 iterations 2
Cbc0038I Pass  13: suminf.    0.36735 (1) obj. -38.9004 iterations 6
Cbc0038I Pass  14: suminf.    0.39432 (1) obj. -15.5434 iterations 1
Cbc0038I Pass  15: suminf.    3.14327 (11) obj. -15.5434 iterations 12
Cbc0038I Pass  16: suminf.    2.07145 (7) obj. -15.5434 iterations 4
Cbc0038I Pass  17: suminf.    0.50588 (3) obj. -15.5434 iterations 8
Cbc0038I Pass  18: suminf.    0.49004 (3) obj. -15.5434 iterations 1
Cbc0038I Pass  19: suminf.    0.39721 (2) obj. -24.615 iterations 1
Cbc0038I Pass  20: suminf.    0.23840 (1) obj. -15.5434 iterations 2
Cbc0038I Pass  21: suminf.    0.30645 (1) obj. -22.2121 iterations 1
Cbc0038I Pass  22: suminf.    2.26388 (10) obj. -18.1545 iterations 21
Cbc0038I Pass  23: suminf.    2.26388 (10) obj. -18.1545 iterations 1
Cbc0038I Pass  24: suminf.    0.32681 (1) obj. -15.5434 iterations 15
Cbc0038I Pass  25: suminf.    0.38710 (1) obj. -21.451 iterations 1
Cbc0038I Pass  26: suminf.    1.99656 (6) obj. -15.5434 iterations 16
Cbc0038I Pass  27: suminf.    1.32968 (6) obj. -15.5434 iterations 6
Cbc0038I Pass  28: suminf.    1.69867 (5) obj. -15.5434 iterations 4
Cbc0038I Pass  29: suminf.    1.69867 (5) obj. -15.5434 iterations 0
Cbc0038I Pass  30: suminf.    0.48134 (2) obj. -30.1556 iterations 4
Cbc0038I Pass  31: suminf.    0.30645 (1) obj. -26.3426 iterations 1
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 56 columns, reduced to 10 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -7.5927 to -11.5447 (0.03 seconds)
Cbc0038I Round again with cutoff of -29.8543
Cbc0038I Pass  31: suminf.    2.38510 (15) obj. -62.0029 iterations 0
Cbc0038I Pass  32: suminf.    0.29032 (1) obj. -29.8543 iterations 19
Cbc0038I Pass  33: suminf.    0.48387 (1) obj. -48.8223 iterations 1
Cbc0038I Pass  34: suminf.    1.32352 (5) obj. -29.8543 iterations 7
Cbc0038I Pass  35: suminf.    1.23770 (4) obj. -29.8543 iterations 3
Cbc0038I Pass  36: suminf.    0.69543 (2) obj. -37.8377 iterations 3
Cbc0038I Pass  37: suminf.    0.41247 (1) obj. -29.8543 iterations 2
Cbc0038I Pass  38: suminf.    0.41935 (1) obj. -30.5286 iterations 1
Cbc0038I Pass  39: suminf.    4.19229 (11) obj. -29.8543 iterations 16
Cbc0038I Pass  40: suminf.    2.16689 (7) obj. -29.8543 iterations 5
Cbc0038I Pass  41: suminf.    2.10219 (8) obj. -29.8543 iterations 2
Cbc0038I Pass  42: suminf.    0.59547 (2) obj. -29.8543 iterations 12
Cbc0038I Pass  43: suminf.    0.59547 (2) obj. -29.8543 iterations 1
Cbc0038I Pass  44: suminf.    0.78144 (2) obj. -34.778 iterations 1
Cbc0038I Pass  45: suminf.    2.05592 (7) obj. -29.8543 iterations 6
Cbc0038I Pass  46: suminf.    1.54449 (4) obj. -29.8543 iterations 4
Cbc0038I Pass  47: suminf.    0.90104 (3) obj. -29.8543 iterations 4
Cbc0038I Pass  48: suminf.    1.23360 (3) obj. -29.8543 iterations 4
Cbc0038I Pass  49: suminf.    2.09084 (7) obj. -29.8543 iterations 8
Cbc0038I Pass  50: suminf.    2.03821 (6) obj. -29.8543 iterations 2
Cbc0038I Pass  51: suminf.    0.60968 (2) obj. -33.9081 iterations 6
Cbc0038I Pass  52: suminf.    0.45657 (2) obj. -29.8543 iterations 1
Cbc0038I Pass  53: suminf.    1.24178 (3) obj. -29.8543 iterations 4
Cbc0038I Pass  54: suminf.    1.24178 (3) obj. -29.8543 iterations 1
Cbc0038I Pass  55: suminf.    0.90744 (3) obj. -29.8543 iterations 3
Cbc0038I Pass  56: suminf.    0.90104 (3) obj. -29.8543 iterations 2
Cbc0038I Pass  57: suminf.    1.23360 (3) obj. -29.8543 iterations 3
Cbc0038I Pass  58: suminf.    2.72858 (7) obj. -29.8543 iterations 6
Cbc0038I Pass  59: suminf.    2.72858 (7) obj. -29.8543 iterations 0
Cbc0038I Pass  60: suminf.    1.61298 (4) obj. -29.8543 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 21 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 56 columns, reduced to 6 rows 11 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -11.5447 - took 0.02 seconds
Cbc0012I Integer solution of -11.544696 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 51 rows 56 columns, reduced to 2 rows 6 columns
Cbc0012I Integer solution of -66.359983 found by DiveCoefficient after 50 iterations and 0 nodes (0.08 seconds)
Cbc0031I 15 added rows had average density of 6.2666667
Cbc0013I At root node, 15 cuts changed objective from -87.098315 to -66.359983 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 118 row cuts average 2.3 elements, 6 column cuts (6 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 31.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 17 row cuts average 7.9 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 28.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -66.35998299999997, took 50 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 52 (-11) rows, 29 (-3) columns and 154 (-23) elements
Clp1000I sum of infeasibilities 2.9378e-06 - average 5.64962e-08, 4 fixed columns
Coin0506I Presolve 41 (-11) rows, 25 (-4) columns and 124 (-30) elements
Clp0029I End of values pass after 25 iterations
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Coin0511I After Postsolve, objective 81.751084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Clp0000I Optimal - objective value 81.751084
Coin0511I After Postsolve, objective 81.751084, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.75108439 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 52 rows, 29 columns (28 integer (28 of which binary)) and 154 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.981%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.86481
Cbc0038I Pass   1: suminf.    0.20565 (2) obj. -37.7588 iterations 23
Cbc0038I Solution found of 9.9472
Cbc0038I Relaxing continuous gives 7.50365
Cbc0038I Rounding solution of -8.221 is better than previous of 7.50365

Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -8.221 to -19.8918 (0.02 seconds)
Cbc0038I Round again with cutoff of -26.0778
Cbc0038I Pass   2: suminf.    0.20565 (2) obj. -37.7588 iterations 0
Cbc0038I Pass   3: suminf.    0.47553 (2) obj. -26.0778 iterations 4
Cbc0038I Pass   4: suminf.    0.13356 (2) obj. -26.0778 iterations 3
Cbc0038I Pass   5: suminf.    0.31379 (2) obj. -26.0778 iterations 5
Cbc0038I Pass   6: suminf.    0.05000 (1) obj. -26.0778 iterations 3
Cbc0038I Pass   7: suminf.    0.17375 (1) obj. -26.0778 iterations 4
Cbc0038I Pass   8: suminf.    0.23397 (1) obj. -26.0778 iterations 2
Cbc0038I Pass   9: suminf.    2.16174 (8) obj. -26.0778 iterations 9
Cbc0038I Pass  10: suminf.    1.87059 (8) obj. -26.0778 iterations 3
Cbc0038I Pass  11: suminf.    0.38308 (3) obj. -26.0778 iterations 8
Cbc0038I Pass  12: suminf.    1.75382 (5) obj. -26.0778 iterations 4
Cbc0038I Pass  13: suminf.    0.71532 (3) obj. -26.0778 iterations 3
Cbc0038I Pass  14: suminf.    0.22202 (1) obj. -26.0778 iterations 7
Cbc0038I Pass  15: suminf.    0.05000 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  16: suminf.    0.17375 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  17: suminf.    0.23397 (1) obj. -26.0778 iterations 2
Cbc0038I Pass  18: suminf.    2.26960 (9) obj. -26.0778 iterations 9
Cbc0038I Pass  19: suminf.    2.13649 (9) obj. -26.0778 iterations 3
Cbc0038I Pass  20: suminf.    0.76626 (2) obj. -26.0778 iterations 10
Cbc0038I Pass  21: suminf.    0.41649 (1) obj. -26.0778 iterations 3
Cbc0038I Pass  22: suminf.    0.36768 (1) obj. -26.0778 iterations 1
Cbc0038I Pass  23: suminf.    0.97407 (5) obj. -26.0778 iterations 7
Cbc0038I Pass  24: suminf.    0.91413 (5) obj. -26.0778 iterations 2
Cbc0038I Pass  25: suminf.    0.75742 (2) obj. -26.0778 iterations 13
Cbc0038I Pass  26: suminf.    0.69142 (2) obj. -26.0778 iterations 1
Cbc0038I Pass  27: suminf.    0.41316 (1) obj. -26.0778 iterations 3
Cbc0038I Pass  28: suminf.    0.37080 (1) obj. -26.0778 iterations 1
Cbc0038I Pass  29: suminf.    0.41724 (2) obj. -26.0778 iterations 2
Cbc0038I Pass  30: suminf.    0.41724 (2) obj. -26.0778 iterations 0
Cbc0038I Pass  31: suminf.    0.22202 (1) obj. -26.0778 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 44 rows 25 columns
Cbc0038I Mini branch and bound improved solution from -19.8918 to -20.003 (0.04 seconds)
Cbc0038I Round again with cutoff of -37.2125
Cbc0038I Pass  31: suminf.    0.20565 (2) obj. -37.7588 iterations 0
Cbc0038I Pass  32: suminf.    0.78764 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  33: suminf.    0.34053 (2) obj. -37.2125 iterations 1
Cbc0038I Pass  34: suminf.    3.46545 (9) obj. -37.2125 iterations 13
Cbc0038I Pass  35: suminf.    1.75271 (5) obj. -37.2125 iterations 8
Cbc0038I Pass  36: suminf.    0.89815 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  37: suminf.    0.89815 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  38: suminf.    1.09925 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  39: suminf.    1.09925 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  40: suminf.    0.63808 (3) obj. -37.2125 iterations 11
Cbc0038I Pass  41: suminf.    0.78764 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  42: suminf.    0.34053 (2) obj. -37.2125 iterations 1
Cbc0038I Pass  43: suminf.    0.20565 (2) obj. -37.7588 iterations 3
Cbc0038I Pass  44: suminf.    5.54751 (12) obj. -37.2125 iterations 14
Cbc0038I Pass  45: suminf.    1.63004 (5) obj. -37.2125 iterations 10
Cbc0038I Pass  46: suminf.    1.33917 (4) obj. -37.2125 iterations 1
Cbc0038I Pass  47: suminf.    0.84753 (3) obj. -37.2125 iterations 5
Cbc0038I Pass  48: suminf.    0.84753 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  49: suminf.    1.10690 (3) obj. -37.2125 iterations 4
Cbc0038I Pass  50: suminf.    1.10690 (3) obj. -37.2125 iterations 0
Cbc0038I Pass  51: suminf.    3.02754 (10) obj. -37.2125 iterations 11
Cbc0038I Pass  52: suminf.    1.82456 (7) obj. -37.2125 iterations 2
Cbc0038I Pass  53: suminf.    0.81713 (3) obj. -37.2125 iterations 11
Cbc0038I Pass  54: suminf.    0.44458 (1) obj. -37.2125 iterations 3
Cbc0038I Pass  55: suminf.    0.05104 (2) obj. -37.2125 iterations 3
Cbc0038I Pass  56: suminf.    0.64716 (2) obj. -37.2125 iterations 2
Cbc0038I Pass  57: suminf.    3.90858 (11) obj. -37.2125 iterations 6
Cbc0038I Pass  58: suminf.    0.64716 (2) obj. -37.2125 iterations 8
Cbc0038I Pass  59: suminf.    1.35818 (6) obj. -37.2125 iterations 14
Cbc0038I Pass  60: suminf.    1.35818 (6) obj. -37.2125 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 52 rows 29 columns, reduced to 46 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -20.003 - took 0.05 seconds
Cbc0012I Integer solution of -20.00301 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 52 rows 29 columns, reduced to 32 rows 20 columns
Cbc0031I 10 added rows had average density of 21.4
Cbc0013I At root node, 10 cuts changed objective from -81.751084 to -44.092324 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1600 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.019 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 766 row cuts average 28.9 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 5.8 elements, 0 column cuts (0 active)  in 0.020 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 82 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 27.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -20.00300999999999, took 2085 iterations and 6 nodes (0.24 seconds)
Cbc0032I Strong branching done 68 times (763 iterations), fathomed 0 nodes and fixed 4 variables
Cbc0035I Maximum depth 2, 10 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.24

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 51 (-12) rows, 55 (-6) columns and 516 (-97) elements
Clp1000I sum of infeasibilities 1.11087e-08 - average 2.17819e-10, 12 fixed columns
Coin0506I Presolve 40 (-11) rows, 43 (-12) columns and 313 (-203) elements
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 1.417949 - largest nonzero change 2.2495289e-05 ( 0.0018024707%) - largest zero change 2.6386041e-05
Clp0000I Optimal - objective value 108.93166
Clp0000I Optimal - objective value 108.93166
Coin0511I After Postsolve, objective 108.93166, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 108.93166
Clp0000I Optimal - objective value 108.93166
Clp0000I Optimal - objective value 108.93166
Coin0511I After Postsolve, objective 108.93166, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 108.9316632 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 51 rows, 55 columns (55 integer (55 of which binary)) and 518 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.682%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.46708
Cbc0038I Pass   1: suminf.    2.72854 (15) obj. -82.0095 iterations 7
Cbc0038I Pass   2: suminf.    2.72854 (15) obj. -82.0095 iterations 1
Cbc0038I Solution found of -3.55937
Cbc0038I Rounding solution of -9.73556 is better than previous of -3.55937

Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 55 columns, reduced to 5 rows 7 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -18.3064
Cbc0038I Pass   3: suminf.    2.72854 (15) obj. -82.0095 iterations 0
Cbc0038I Pass   4: suminf.    2.72854 (15) obj. -82.0095 iterations 1
Cbc0038I Pass   5: suminf.    0.56159 (2) obj. -18.3064 iterations 18
Cbc0038I Pass   6: suminf.    0.48790 (2) obj. -28.2496 iterations 1
Cbc0038I Pass   7: suminf.    0.10000 (1) obj. -19.9108 iterations 1
Cbc0038I Pass   8: suminf.    0.65674 (3) obj. -18.5852 iterations 14
Cbc0038I Pass   9: suminf.    0.64840 (3) obj. -18.3064 iterations 6
Cbc0038I Pass  10: suminf.    0.81066 (3) obj. -18.3064 iterations 7
Cbc0038I Pass  11: suminf.    0.81256 (4) obj. -18.3064 iterations 1
Cbc0038I Pass  12: suminf.    0.48790 (2) obj. -25.2496 iterations 5
Cbc0038I Pass  13: suminf.    0.15577 (3) obj. -18.3064 iterations 2
Cbc0038I Pass  14: suminf.    0.89477 (3) obj. -18.3064 iterations 4
Cbc0038I Pass  15: suminf.    0.89090 (4) obj. -18.3064 iterations 1
Cbc0038I Pass  16: suminf.    2.01635 (11) obj. -18.3064 iterations 15
Cbc0038I Pass  17: suminf.    2.01635 (11) obj. -18.3064 iterations 0
Cbc0038I Pass  18: suminf.    1.16668 (5) obj. -18.3064 iterations 12
Cbc0038I Pass  19: suminf.    1.16668 (5) obj. -18.3064 iterations 0
Cbc0038I Pass  20: suminf.    1.04083 (4) obj. -18.3064 iterations 3
Cbc0038I Pass  21: suminf.    1.03667 (5) obj. -18.3064 iterations 1
Cbc0038I Pass  22: suminf.    0.78724 (4) obj. -18.3064 iterations 6
Cbc0038I Pass  23: suminf.    0.78724 (4) obj. -18.3064 iterations 0
Cbc0038I Pass  24: suminf.    1.04083 (4) obj. -18.3064 iterations 3
Cbc0038I Pass  25: suminf.    2.13366 (7) obj. -18.3064 iterations 11
Cbc0038I Pass  26: suminf.    2.13366 (7) obj. -18.3064 iterations 1
Cbc0038I Pass  27: suminf.    1.19007 (5) obj. -18.3064 iterations 10
Cbc0038I Pass  28: suminf.    1.19007 (5) obj. -18.3064 iterations 0
Cbc0038I Pass  29: suminf.    1.06737 (4) obj. -18.3064 iterations 4
Cbc0038I Pass  30: suminf.    1.06737 (4) obj. -18.3064 iterations 0
Cbc0038I Pass  31: suminf.    1.35719 (4) obj. -18.3064 iterations 3
Cbc0038I Pass  32: suminf.    1.35719 (4) obj. -18.3064 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 55 columns, reduced to 9 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -3.55937 to -13.7429 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.7337
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.72854 (15) obj. -82.0095 iterations 0
Cbc0038I Pass  33: suminf.    2.72854 (15) obj. -82.0095 iterations 1
Cbc0038I Pass  34: suminf.    0.98646 (3) obj. -33.7337 iterations 20
Cbc0038I Pass  35: suminf.    0.91486 (4) obj. -33.7337 iterations 1
Cbc0038I Pass  36: suminf.    1.20908 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  37: suminf.    1.15214 (4) obj. -33.7337 iterations 1
Cbc0038I Pass  38: suminf.    1.57884 (5) obj. -33.7337 iterations 5
Cbc0038I Pass  39: suminf.    1.57884 (5) obj. -33.7337 iterations 1
Cbc0038I Pass  40: suminf.    0.91486 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  41: suminf.    0.91486 (4) obj. -33.7337 iterations 0
Cbc0038I Pass  42: suminf.    1.20908 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  43: suminf.    1.15214 (4) obj. -33.7337 iterations 1
Cbc0038I Pass  44: suminf.    1.57884 (5) obj. -33.7337 iterations 5
Cbc0038I Pass  45: suminf.    1.57884 (5) obj. -33.7337 iterations 1
Cbc0038I Pass  46: suminf.    0.91486 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  47: suminf.    0.91486 (4) obj. -33.7337 iterations 0
Cbc0038I Pass  48: suminf.    1.20908 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  49: suminf.    1.15214 (4) obj. -33.7337 iterations 1
Cbc0038I Pass  50: suminf.    1.57884 (5) obj. -33.7337 iterations 5
Cbc0038I Pass  51: suminf.    1.57884 (5) obj. -33.7337 iterations 1
Cbc0038I Pass  52: suminf.    0.91486 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  53: suminf.    0.91486 (4) obj. -33.7337 iterations 0
Cbc0038I Pass  54: suminf.    1.20908 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  55: suminf.    1.15214 (4) obj. -33.7337 iterations 1
Cbc0038I Pass  56: suminf.    1.57884 (5) obj. -33.7337 iterations 5
Cbc0038I Pass  57: suminf.    1.57884 (5) obj. -33.7337 iterations 1
Cbc0038I Pass  58: suminf.    0.91486 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  59: suminf.    0.91486 (4) obj. -33.7337 iterations 0
Cbc0038I Pass  60: suminf.    1.20908 (4) obj. -33.7337 iterations 5
Cbc0038I Pass  61: suminf.    1.15214 (4) obj. -33.7337 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 51 rows 55 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -13.7429 - took 0.02 seconds
Cbc0012I Integer solution of -13.742872 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 51 rows 55 columns, reduced to 6 rows 8 columns
Cbc0031I 19 added rows had average density of 21.736842
Cbc0013I At root node, 19 cuts changed objective from -95.442907 to -26.606844 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1911 row cuts average 4.8 elements, 6 column cuts (6 active)  in 0.042 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 644 row cuts average 45.7 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 31 row cuts average 4.8 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 20 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 243 row cuts average 7.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 221 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 86 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.781 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -13.742872 best solution, best possible -26.606844 (1.82 seconds)
Cbc0010I After 4 nodes, 5 on tree, -13.742872 best solution, best possible -26.606844 (2.62 seconds)
Cbc0012I Integer solution of -14.77441 found by rounding after 2292 iterations and 7 nodes (2.71 seconds)
Cbc0012I Integer solution of -18.77441 found by rounding after 2349 iterations and 9 nodes (2.73 seconds)
Cbc0004I Integer solution of -20.00301 found after 2394 iterations and 10 nodes (2.78 seconds)
Cbc0001I Search completed - best objective -20.00300999999999, took 2394 iterations and 10 nodes (2.78 seconds)
Cbc0032I Strong branching done 176 times (1999 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 4, 25 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.79

