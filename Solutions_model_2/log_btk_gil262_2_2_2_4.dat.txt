Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 262 (-2) columns and 1490 (-55) elements
Clp1000I sum of infeasibilities 4.4563e-05 - average 8.93047e-08, 139 fixed columns
Coin0506I Presolve 221 (-278) rows, 121 (-141) columns and 663 (-827) elements
Clp0029I End of values pass after 121 iterations
Clp0014I Perturbing problem by 0.001% of 2.2474963 - largest nonzero change 1.6052853e-05 ( 0.0011830588%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Coin0511I After Postsolve, objective 184.68286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13387871 - largest nonzero change 1.0197004e-05 ( 0.00092700036%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Coin0511I After Postsolve, objective 184.68286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184.6828579 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 262 columns (261 integer (261 of which binary)) and 1490 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.361%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 11.1108
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.94997 iterations 147
Cbc0038I Solution found of -9.94997
Cbc0038I Relaxing continuous gives -9.94997
Cbc0038I Rounding solution of -98.8487 is better than previous of -9.94997

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 79 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -98.8487 to -101.838 (0.06 seconds)
Cbc0038I Round again with cutoff of -110.123
Cbc0038I Pass   2: suminf.    2.32937 (7) obj. -110.123 iterations 17
Cbc0038I Pass   3: suminf.    1.71341 (5) obj. -110.123 iterations 2
Cbc0038I Pass   4: suminf.    1.71341 (5) obj. -110.123 iterations 0
Cbc0038I Pass   5: suminf.    0.87283 (4) obj. -110.123 iterations 14
Cbc0038I Pass   6: suminf.    0.62162 (3) obj. -110.123 iterations 9
Cbc0038I Pass   7: suminf.    1.08762 (3) obj. -110.123 iterations 10
Cbc0038I Pass   8: suminf.    0.92618 (6) obj. -110.123 iterations 7
Cbc0038I Pass   9: suminf.    1.61311 (5) obj. -110.123 iterations 12
Cbc0038I Pass  10: suminf.    0.99861 (4) obj. -110.123 iterations 7
Cbc0038I Pass  11: suminf.    0.99414 (4) obj. -110.123 iterations 1
Cbc0038I Pass  12: suminf.    1.73407 (5) obj. -110.123 iterations 7
Cbc0038I Pass  13: suminf.    1.44592 (7) obj. -110.123 iterations 6
Cbc0038I Pass  14: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  15: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  16: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  17: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  18: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  19: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Pass  20: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  21: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  22: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  23: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  24: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  25: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Pass  26: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  27: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  28: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  29: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  30: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  31: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Rounding solution of -117.829 is better than previous of -101.838

Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 86 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I Round again with cutoff of -131.2
Cbc0038I Pass  31: suminf.    3.11018 (12) obj. -131.2 iterations 4
Cbc0038I Pass  32: suminf.    1.58107 (7) obj. -131.2 iterations 17
Cbc0038I Pass  33: suminf.    3.23248 (8) obj. -131.2 iterations 41
Cbc0038I Pass  34: suminf.    2.40618 (7) obj. -131.2 iterations 13
Cbc0038I Pass  35: suminf.    2.38878 (7) obj. -131.2 iterations 14
Cbc0038I Pass  36: suminf.    2.81587 (9) obj. -131.2 iterations 9
Cbc0038I Pass  37: suminf.    2.36564 (8) obj. -131.2 iterations 2
Cbc0038I Pass  38: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  39: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  40: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I Pass  41: suminf.    2.48243 (6) obj. -131.2 iterations 6
Cbc0038I Pass  42: suminf.    2.24834 (8) obj. -131.2 iterations 11
Cbc0038I Pass  43: suminf.    3.18843 (8) obj. -131.2 iterations 23
Cbc0038I Pass  44: suminf.    2.74481 (7) obj. -131.2 iterations 8
Cbc0038I Pass  45: suminf.    2.74481 (7) obj. -131.2 iterations 0
Cbc0038I Pass  46: suminf.    2.57233 (8) obj. -131.2 iterations 8
Cbc0038I Pass  47: suminf.    2.36564 (8) obj. -131.2 iterations 7
Cbc0038I Pass  48: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  49: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  50: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I Pass  51: suminf.    2.48243 (6) obj. -131.2 iterations 6
Cbc0038I Pass  52: suminf.    2.24834 (8) obj. -131.2 iterations 11
Cbc0038I Pass  53: suminf.    3.18843 (8) obj. -131.2 iterations 23
Cbc0038I Pass  54: suminf.    2.74481 (7) obj. -131.2 iterations 8
Cbc0038I Pass  55: suminf.    2.74481 (7) obj. -131.2 iterations 0
Cbc0038I Pass  56: suminf.    2.57233 (8) obj. -131.2 iterations 8
Cbc0038I Pass  57: suminf.    2.36564 (8) obj. -131.2 iterations 7
Cbc0038I Pass  58: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  59: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  60: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 206 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 88 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -117.829 - took 0.15 seconds
Cbc0012I Integer solution of -117.82887 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 83 rows 53 columns
Cbc0012I Integer solution of -124.42038 found by RINS after 0 iterations and 0 nodes (0.21 seconds)
Cbc0031I 42 added rows had average density of 161.02381
Cbc0013I At root node, 42 cuts changed objective from -184.68286 to -168.53825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34778 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.492 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3521 row cuts average 257.0 elements, 0 column cuts (0 active)  in 0.454 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.068 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.502 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.038 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 252.0 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -124.42038 best solution, best possible -168.53825 (5.02 seconds)
Cbc0012I Integer solution of -126.43676 found by rounding after 19567 iterations and 20 nodes (5.65 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 125 rows 77 columns
Cbc0012I Integer solution of -131.55723 found by RINS after 20248 iterations and 42 nodes (5.81 seconds)
Cbc0010I After 42 nodes, 9 on tree, -131.55723 best solution, best possible -168.53825 (5.81 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 127 rows 76 columns
Cbc0001I Search completed - best objective -131.55723, took 25689 iterations and 140 nodes (6.50 seconds)
Cbc0032I Strong branching done 1474 times (40917 iterations), fathomed 25 nodes and fixed 53 variables
Cbc0035I Maximum depth 43, 952 variables fixed on reduced cost
Total time (CPU seconds):       6.40   (Wallclock seconds):       6.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 370 (-156) rows, 393 (-131) columns and 18412 (-17324) elements
Clp1000I sum of infeasibilities 1.01004e-05 - average 2.72983e-08, 284 fixed columns
Coin0506I Presolve 86 (-284) rows, 102 (-291) columns and 359 (-18053) elements
Clp0006I 0  Obj 29.797007 Dual inf 16.633457 (102)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 1.8364283 - largest nonzero change 2.5449039e-05 ( 0.0012908064%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 30.223583
Clp0000I Optimal - objective value 30.223583
Coin0511I After Postsolve, objective 30.223583, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 30.223583 Dual inf 469.40004 (138)
Clp0014I Perturbing problem by 0.001% of 1.7046532 - largest nonzero change 2.9495196e-05 ( 0.0025888945%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 230.43527
Clp0000I Optimal - objective value 230.43527
Clp0000I Optimal - objective value 230.43527
Coin0511I After Postsolve, objective 230.43527, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 230.4352714 - 0 iterations time 0.102, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0004I processed model has 370 rows, 393 columns (393 integer (393 of which binary)) and 18412 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.801%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 133 integers unsatisfied sum - 7.39373
Cbc0038I Pass   1: suminf.    3.90633 (100) obj. -187.87 iterations 31
Cbc0038I Pass   2: suminf.    3.90633 (100) obj. -187.87 iterations 1
Cbc0038I Pass   3: suminf.    1.88543 (59) obj. -123.267 iterations 29
Cbc0038I Pass   4: suminf.    0.75584 (30) obj. -92.515 iterations 29
Cbc0038I Pass   5: suminf.    0.07247 (4) obj. -66.2289 iterations 26
Cbc0038I Solution found of -62.3014
Cbc0038I Rounding solution of -82.109 is better than previous of -62.3014

Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 370 rows 393 columns, reduced to 47 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -96.9417
Cbc0038I Pass   6: suminf.    3.90633 (100) obj. -187.87 iterations 0
Cbc0038I Pass   7: suminf.    3.90633 (100) obj. -187.87 iterations 1
Cbc0038I Pass   8: suminf.    2.13273 (65) obj. -130.937 iterations 23
Cbc0038I Pass   9: suminf.    1.40188 (47) obj. -109.831 iterations 18
Cbc0038I Pass  10: suminf.    1.06009 (22) obj. -96.9417 iterations 31
Cbc0038I Pass  11: suminf.    1.06926 (8) obj. -96.9417 iterations 18
Cbc0038I Pass  12: suminf.    0.97762 (3) obj. -96.9417 iterations 22
Cbc0038I Pass  13: suminf.    0.97762 (3) obj. -96.9417 iterations 6
Cbc0038I Pass  14: suminf.    0.35148 (3) obj. -96.9417 iterations 9
Cbc0038I Pass  15: suminf.    0.10674 (2) obj. -99.0943 iterations 6
Cbc0038I Pass  16: suminf.    0.97625 (3) obj. -96.9417 iterations 9
Cbc0038I Pass  17: suminf.    0.18124 (3) obj. -104.257 iterations 4
Cbc0038I Pass  18: suminf.    1.15838 (3) obj. -96.9417 iterations 16
Cbc0038I Pass  19: suminf.    0.73862 (2) obj. -96.9417 iterations 6
Cbc0038I Pass  20: suminf.    0.12923 (3) obj. -96.9417 iterations 17
Cbc0038I Pass  21: suminf.    1.04441 (3) obj. -96.9417 iterations 12
Cbc0038I Pass  22: suminf.    0.89235 (2) obj. -96.9417 iterations 14
Cbc0038I Pass  23: suminf.    0.39553 (2) obj. -99.48 iterations 2
Cbc0038I Pass  24: suminf.    0.41066 (3) obj. -96.9417 iterations 8
Cbc0038I Pass  25: suminf.    0.41066 (3) obj. -96.9417 iterations 0
Cbc0038I Pass  26: suminf.    0.16539 (2) obj. -100.594 iterations 5
Cbc0038I Pass  27: suminf.    0.04247 (1) obj. -97.1824 iterations 1
Cbc0038I Pass  28: suminf.    0.51197 (2) obj. -96.9417 iterations 10
Cbc0038I Pass  29: suminf.    1.76845 (39) obj. -96.9417 iterations 95
Cbc0038I Pass  30: suminf.    1.31904 (38) obj. -96.9417 iterations 24
Cbc0038I Pass  31: suminf.    1.08745 (37) obj. -96.9417 iterations 3
Cbc0038I Pass  32: suminf.    1.09519 (32) obj. -96.9417 iterations 40
Cbc0038I Pass  33: suminf.    1.09519 (32) obj. -96.9417 iterations 3
Cbc0038I Pass  34: suminf.    1.39641 (16) obj. -96.9417 iterations 32
Cbc0038I Pass  35: suminf.    0.97924 (14) obj. -96.9888 iterations 6
Cbc0038I Rounding solution of -89.2906 is better than previous of -82.109

Cbc0038I Before mini branch and bound, 246 integers at bound fixed and 0 continuous
Cbc0038I Full problem 370 rows 393 columns, reduced to 133 rows 146 columns - 29 fixed gives 103, 116 - still too large
Cbc0038I Full problem 370 rows 393 columns, reduced to 24 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -89.2906 to -94.2365 (0.22 seconds)
Cbc0038I Round again with cutoff of -123.64
Cbc0038I Pass  35: suminf.    3.90633 (100) obj. -187.87 iterations 0
Cbc0038I Pass  36: suminf.    3.90633 (100) obj. -187.87 iterations 1
Cbc0038I Pass  37: suminf.    2.55972 (75) obj. -160.614 iterations 13
Cbc0038I Pass  38: suminf.    1.99171 (49) obj. -123.64 iterations 32
Cbc0038I Pass  39: suminf.    1.91777 (28) obj. -123.64 iterations 27
Cbc0038I Pass  40: suminf.    1.49080 (29) obj. -123.64 iterations 62
Cbc0038I Pass  41: suminf.    0.91407 (7) obj. -123.64 iterations 6
Cbc0038I Pass  42: suminf.    0.50481 (28) obj. -123.64 iterations 7
Cbc0038I Pass  43: suminf.    1.97802 (34) obj. -123.64 iterations 47
Cbc0038I Pass  44: suminf.    1.97802 (34) obj. -123.64 iterations 4
Cbc0038I Pass  45: suminf.    1.90880 (26) obj. -123.64 iterations 24
Cbc0038I Pass  46: suminf.    1.49533 (29) obj. -123.64 iterations 5
Cbc0038I Pass  47: suminf.    1.93875 (28) obj. -123.64 iterations 2
Cbc0038I Pass  48: suminf.    3.49678 (46) obj. -123.64 iterations 55
Cbc0038I Pass  49: suminf.    3.49156 (46) obj. -123.64 iterations 5
Cbc0038I Pass  50: suminf.    2.95548 (42) obj. -123.64 iterations 10
Cbc0038I Pass  51: suminf.    2.65607 (42) obj. -123.64 iterations 2
Cbc0038I Pass  52: suminf.    3.15372 (34) obj. -123.64 iterations 28
Cbc0038I Pass  53: suminf.    3.15372 (34) obj. -123.64 iterations 1
Cbc0038I Pass  54: suminf.    3.10065 (34) obj. -123.64 iterations 5
Cbc0038I Pass  55: suminf.    3.10065 (34) obj. -123.64 iterations 3
Cbc0038I Pass  56: suminf.    3.39876 (33) obj. -123.64 iterations 6
Cbc0038I Pass  57: suminf.    2.82594 (31) obj. -123.64 iterations 6
Cbc0038I Pass  58: suminf.    3.13178 (31) obj. -123.64 iterations 7
Cbc0038I Pass  59: suminf.    2.24397 (36) obj. -123.64 iterations 38
Cbc0038I Pass  60: suminf.    2.07813 (35) obj. -123.64 iterations 11
Cbc0038I Pass  61: suminf.    2.72498 (33) obj. -123.64 iterations 22
Cbc0038I Pass  62: suminf.    2.45705 (31) obj. -123.64 iterations 4
Cbc0038I Pass  63: suminf.    2.57456 (31) obj. -123.64 iterations 5
Cbc0038I Pass  64: suminf.    2.96746 (45) obj. -123.64 iterations 54
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 240 integers at bound fixed and 0 continuous
Cbc0038I Full problem 370 rows 393 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.29 seconds)
Cbc0038I After 0.29 seconds - Feasibility pump exiting with objective of -94.2365 - took 0.19 seconds
Cbc0012I Integer solution of -94.23651 found by feasibility pump after 0 iterations and 0 nodes (0.29 seconds)
Cbc0038I Full problem 370 rows 393 columns, reduced to 28 rows 30 columns
Cbc0012I Integer solution of -95.0311 found by DiveCoefficient after 13631 iterations and 0 nodes (7.35 seconds)
Cbc0031I 153 added rows had average density of 68.921569
Cbc0013I At root node, 153 cuts changed objective from -230.43527 to -145.99383 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25448 row cuts average 2.0 elements, 0 column cuts (22 active)  in 0.482 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3406 row cuts average 364.4 elements, 0 column cuts (0 active)  in 1.133 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 614 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.078 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7205 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.187 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.575 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3243 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.942 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 458 row cuts average 192.7 elements, 0 column cuts (0 active)  in 0.254 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 287 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.342 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -95.0311 best solution, best possible -145.99383 (8.21 seconds)
Cbc0010I After 1 nodes, 2 on tree, -95.0311 best solution, best possible -145.99383 (9.00 seconds)
Cbc0012I Integer solution of -95.93617 found by DiveCoefficient after 14207 iterations and 2 nodes (9.09 seconds)
Cbc0012I Integer solution of -98.50878 found by DiveCoefficient after 14596 iterations and 4 nodes (9.33 seconds)
Cbc0010I After 7 nodes, 6 on tree, -98.50878 best solution, best possible -145.99383 (9.74 seconds)
Cbc0012I Integer solution of -107.09457 found by DiveCoefficient after 14800 iterations and 9 nodes (9.87 seconds)
Cbc0012I Integer solution of -110.27748 found by DiveCoefficient after 15047 iterations and 12 nodes (9.98 seconds)
Cbc0012I Integer solution of -129.55723 found by rounding after 15102 iterations and 16 nodes (10.05 seconds)
Cbc0010I After 26 nodes, 13 on tree, -129.55723 best solution, best possible -145.99383 (10.46 seconds)
Cbc0038I Full problem 370 rows 393 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -130.55723 found by rounding after 17708 iterations and 69 nodes (11.08 seconds)
Cbc0010I After 75 nodes, 7 on tree, -130.55723 best solution, best possible -145.99383 (11.17 seconds)
Cbc0012I Integer solution of -131.55723 found by rounding after 18594 iterations and 91 nodes (11.48 seconds)
Cbc0038I Full problem 370 rows 393 columns, reduced to 0 rows 0 columns
Cbc0010I After 111 nodes, 2 on tree, -131.55723 best solution, best possible -145.99383 (12.18 seconds)
Cbc0010I After 114 nodes, 5 on tree, -131.55723 best solution, best possible -145.99383 (13.19 seconds)
Cbc0010I After 121 nodes, 7 on tree, -131.55723 best solution, best possible -145.99383 (14.03 seconds)
Cbc0010I After 141 nodes, 3 on tree, -131.55723 best solution, best possible -145.99383 (14.77 seconds)
Cbc0010I After 144 nodes, 5 on tree, -131.55723 best solution, best possible -145.99383 (15.49 seconds)
Cbc0010I After 150 nodes, 5 on tree, -131.55723 best solution, best possible -145.99383 (16.31 seconds)
Cbc0010I After 158 nodes, 3 on tree, -131.55723 best solution, best possible -145.99383 (17.16 seconds)
Cbc0010I After 167 nodes, 2 on tree, -131.55723 best solution, best possible -145.99383 (17.90 seconds)
Cbc0010I After 180 nodes, 5 on tree, -131.55723 best solution, best possible -145.99383 (18.60 seconds)
Cbc0001I Search completed - best objective -131.55723, took 27476 iterations and 190 nodes (18.71 seconds)
Cbc0032I Strong branching done 1812 times (42249 iterations), fathomed 12 nodes and fixed 26 variables
Cbc0035I Maximum depth 18, 916 variables fixed on reduced cost
Total time (CPU seconds):       18.36   (Wallclock seconds):       18.81

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 499 (-28) rows, 262 (-2) columns and 1490 (-55) elements
Clp1000I sum of infeasibilities 4.4563e-05 - average 8.93047e-08, 139 fixed columns
Coin0506I Presolve 221 (-278) rows, 121 (-141) columns and 663 (-827) elements
Clp0029I End of values pass after 121 iterations
Clp0014I Perturbing problem by 0.001% of 2.2474963 - largest nonzero change 1.6052853e-05 ( 0.0011830588%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Coin0511I After Postsolve, objective 184.68286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13387871 - largest nonzero change 1.0197004e-05 ( 0.00092700036%) - largest zero change 2.9856677e-05
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Clp0000I Optimal - objective value 184.68286
Coin0511I After Postsolve, objective 184.68286, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 184.6828579 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 499 rows, 262 columns (261 integer (261 of which binary)) and 1490 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.361%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 11.1108
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -9.94997 iterations 147
Cbc0038I Solution found of -9.94997
Cbc0038I Relaxing continuous gives -9.94997
Cbc0038I Rounding solution of -98.8487 is better than previous of -9.94997

Cbc0038I Before mini branch and bound, 213 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 79 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -98.8487 to -101.838 (0.06 seconds)
Cbc0038I Round again with cutoff of -110.123
Cbc0038I Pass   2: suminf.    2.32937 (7) obj. -110.123 iterations 17
Cbc0038I Pass   3: suminf.    1.71341 (5) obj. -110.123 iterations 2
Cbc0038I Pass   4: suminf.    1.71341 (5) obj. -110.123 iterations 0
Cbc0038I Pass   5: suminf.    0.87283 (4) obj. -110.123 iterations 14
Cbc0038I Pass   6: suminf.    0.62162 (3) obj. -110.123 iterations 9
Cbc0038I Pass   7: suminf.    1.08762 (3) obj. -110.123 iterations 10
Cbc0038I Pass   8: suminf.    0.92618 (6) obj. -110.123 iterations 7
Cbc0038I Pass   9: suminf.    1.61311 (5) obj. -110.123 iterations 12
Cbc0038I Pass  10: suminf.    0.99861 (4) obj. -110.123 iterations 7
Cbc0038I Pass  11: suminf.    0.99414 (4) obj. -110.123 iterations 1
Cbc0038I Pass  12: suminf.    1.73407 (5) obj. -110.123 iterations 7
Cbc0038I Pass  13: suminf.    1.44592 (7) obj. -110.123 iterations 6
Cbc0038I Pass  14: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  15: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  16: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  17: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  18: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  19: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Pass  20: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  21: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  22: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  23: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  24: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  25: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Pass  26: suminf.    1.33021 (7) obj. -110.123 iterations 4
Cbc0038I Pass  27: suminf.    1.31584 (6) obj. -110.123 iterations 1
Cbc0038I Pass  28: suminf.    1.54724 (4) obj. -110.123 iterations 10
Cbc0038I Pass  29: suminf.    1.22318 (5) obj. -110.123 iterations 10
Cbc0038I Pass  30: suminf.    1.45355 (5) obj. -110.123 iterations 9
Cbc0038I Pass  31: suminf.    1.44880 (4) obj. -110.123 iterations 2
Cbc0038I Rounding solution of -117.829 is better than previous of -101.838

Cbc0038I Before mini branch and bound, 208 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 86 rows 54 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I Round again with cutoff of -131.2
Cbc0038I Pass  31: suminf.    3.11018 (12) obj. -131.2 iterations 4
Cbc0038I Pass  32: suminf.    1.58107 (7) obj. -131.2 iterations 17
Cbc0038I Pass  33: suminf.    3.23248 (8) obj. -131.2 iterations 41
Cbc0038I Pass  34: suminf.    2.40618 (7) obj. -131.2 iterations 13
Cbc0038I Pass  35: suminf.    2.38878 (7) obj. -131.2 iterations 14
Cbc0038I Pass  36: suminf.    2.81587 (9) obj. -131.2 iterations 9
Cbc0038I Pass  37: suminf.    2.36564 (8) obj. -131.2 iterations 2
Cbc0038I Pass  38: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  39: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  40: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I Pass  41: suminf.    2.48243 (6) obj. -131.2 iterations 6
Cbc0038I Pass  42: suminf.    2.24834 (8) obj. -131.2 iterations 11
Cbc0038I Pass  43: suminf.    3.18843 (8) obj. -131.2 iterations 23
Cbc0038I Pass  44: suminf.    2.74481 (7) obj. -131.2 iterations 8
Cbc0038I Pass  45: suminf.    2.74481 (7) obj. -131.2 iterations 0
Cbc0038I Pass  46: suminf.    2.57233 (8) obj. -131.2 iterations 8
Cbc0038I Pass  47: suminf.    2.36564 (8) obj. -131.2 iterations 7
Cbc0038I Pass  48: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  49: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  50: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I Pass  51: suminf.    2.48243 (6) obj. -131.2 iterations 6
Cbc0038I Pass  52: suminf.    2.24834 (8) obj. -131.2 iterations 11
Cbc0038I Pass  53: suminf.    3.18843 (8) obj. -131.2 iterations 23
Cbc0038I Pass  54: suminf.    2.74481 (7) obj. -131.2 iterations 8
Cbc0038I Pass  55: suminf.    2.74481 (7) obj. -131.2 iterations 0
Cbc0038I Pass  56: suminf.    2.57233 (8) obj. -131.2 iterations 8
Cbc0038I Pass  57: suminf.    2.36564 (8) obj. -131.2 iterations 7
Cbc0038I Pass  58: suminf.    2.33651 (8) obj. -131.2 iterations 1
Cbc0038I Pass  59: suminf.    3.17807 (9) obj. -131.2 iterations 28
Cbc0038I Pass  60: suminf.    3.01692 (8) obj. -131.2 iterations 17
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 206 integers at bound fixed and 0 continuous
Cbc0038I Full problem 499 rows 262 columns, reduced to 88 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.20 seconds)
Cbc0038I After 0.20 seconds - Feasibility pump exiting with objective of -117.829 - took 0.18 seconds
Cbc0012I Integer solution of -117.82887 found by feasibility pump after 0 iterations and 0 nodes (0.20 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 83 rows 53 columns
Cbc0012I Integer solution of -124.42038 found by RINS after 0 iterations and 0 nodes (0.24 seconds)
Cbc0031I 42 added rows had average density of 161.02381
Cbc0013I At root node, 42 cuts changed objective from -184.68286 to -168.53825 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34778 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.541 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3521 row cuts average 257.0 elements, 0 column cuts (0 active)  in 0.508 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.072 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 79 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.540 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 197 row cuts average 252.0 elements, 0 column cuts (0 active)  in 0.184 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -124.42038 best solution, best possible -168.53825 (5.59 seconds)
Cbc0012I Integer solution of -126.43676 found by rounding after 19567 iterations and 20 nodes (6.27 seconds)
Cbc0010I After 27 nodes, 13 on tree, -126.43676 best solution, best possible -168.53825 (6.30 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 125 rows 77 columns
Cbc0012I Integer solution of -131.55723 found by RINS after 20248 iterations and 42 nodes (6.44 seconds)
Cbc0038I Full problem 499 rows 262 columns, reduced to 127 rows 76 columns
Cbc0010I After 111 nodes, 8 on tree, -131.55723 best solution, best possible -168.53825 (7.01 seconds)
Cbc0001I Search completed - best objective -131.55723, took 25689 iterations and 140 nodes (7.14 seconds)
Cbc0032I Strong branching done 1474 times (40917 iterations), fathomed 25 nodes and fixed 53 variables
Cbc0035I Maximum depth 43, 952 variables fixed on reduced cost
Total time (CPU seconds):       6.93   (Wallclock seconds):       7.20

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 370 (-157) rows, 393 (-132) columns and 18412 (-17325) elements
Clp1000I sum of infeasibilities 1.01004e-05 - average 2.72983e-08, 284 fixed columns
Coin0506I Presolve 86 (-284) rows, 102 (-291) columns and 359 (-18053) elements
Clp0006I 0  Obj 29.797007 Dual inf 16.633457 (102)
Clp0029I End of values pass after 102 iterations
Clp0014I Perturbing problem by 0.001% of 1.8364283 - largest nonzero change 2.5449039e-05 ( 0.0012908064%) - largest zero change 2.6774595e-05
Clp0000I Optimal - objective value 30.223583
Clp0000I Optimal - objective value 30.223583
Coin0511I After Postsolve, objective 30.223583, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 30.223583 Dual inf 469.40004 (138)
Clp0014I Perturbing problem by 0.001% of 1.7046532 - largest nonzero change 2.9495196e-05 ( 0.0025888945%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 230.43527
Clp0000I Optimal - objective value 230.43527
Clp0000I Optimal - objective value 230.43527
Coin0511I After Postsolve, objective 230.43527, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 230.4352714 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.09

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 370 rows, 393 columns (393 integer (393 of which binary)) and 18412 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.801%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 133 integers unsatisfied sum - 7.39373
Cbc0038I Pass   1: suminf.    3.90633 (100) obj. -187.87 iterations 31
Cbc0038I Pass   2: suminf.    3.90633 (100) obj. -187.87 iterations 1
Cbc0038I Pass   3: suminf.    1.88543 (59) obj. -123.267 iterations 29
Cbc0038I Pass   4: suminf.    0.75584 (30) obj. -92.515 iterations 29
Cbc0038I Pass   5: suminf.    0.07247 (4) obj. -66.2289 iterations 26
Cbc0038I Solution found of -62.3014
Cbc0038I Rounding solution of -82.109 is better than previous of -62.3014

Cbc0038I Before mini branch and bound, 259 integers at bound fixed and 0 continuous
Cbc0038I Full problem 370 rows 393 columns, reduced to 47 rows 48 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -96.9417
Cbc0038I Pass   6: suminf.    3.90633 (100) obj. -187.87 iterations 0
Cbc0038I Pass   7: suminf.    3.90633 (100) obj. -187.87 iterations 1
Cbc0038I Pass   8: suminf.    2.13273 (65) obj. -130.937 iterations 23
Cbc0038I Pass   9: suminf.    1.40188 (47) obj. -109.831 iterations 18
Cbc0038I Pass  10: suminf.    1.06009 (22) obj. -96.9417 iterations 31
Cbc0038I Pass  11: suminf.    1.06926 (8) obj. -96.9417 iterations 18
Cbc0038I Pass  12: suminf.    0.97762 (3) obj. -96.9417 iterations 22
Cbc0038I Pass  13: suminf.    0.97762 (3) obj. -96.9417 iterations 6
Cbc0038I Pass  14: suminf.    0.35148 (3) obj. -96.9417 iterations 9
Cbc0038I Pass  15: suminf.    0.10674 (2) obj. -99.0943 iterations 6
Cbc0038I Pass  16: suminf.    0.97625 (3) obj. -96.9417 iterations 9
Cbc0038I Pass  17: suminf.    0.18124 (3) obj. -104.257 iterations 4
Cbc0038I Pass  18: suminf.    1.15838 (3) obj. -96.9417 iterations 16
Cbc0038I Pass  19: suminf.    0.73862 (2) obj. -96.9417 iterations 6
Cbc0038I Pass  20: suminf.    0.12923 (3) obj. -96.9417 iterations 17
Cbc0038I Pass  21: suminf.    1.04441 (3) obj. -96.9417 iterations 12
Cbc0038I Pass  22: suminf.    0.89235 (2) obj. -96.9417 iterations 14
Cbc0038I Pass  23: suminf.    0.39553 (2) obj. -99.48 iterations 2
Cbc0038I Pass  24: suminf.    0.41066 (3) obj. -96.9417 iterations 8
Cbc0038I Pass  25: suminf.    0.41066 (3) obj. -96.9417 iterations 0
Cbc0038I Pass  26: suminf.    0.16539 (2) obj. -100.594 iterations 5
Cbc0038I Pass  27: suminf.    0.04247 (1) obj. -97.1824 iterations 1
Cbc0038I Pass  28: suminf.    0.51197 (2) obj. -96.9417 iterations 10
Cbc0038I Pass  29: suminf.    1.76845 (39) obj. -96.9417 iterations 95
Cbc0038I Pass  30: suminf.    1.31904 (38) obj. -96.9417 iterations 24
Cbc0038I Pass  31: suminf.    1.08745 (37) obj. -96.9417 iterations 3
Cbc0038I Pass  32: suminf.    1.09519 (32) obj. -96.9417 iterations 40
Cbc0038I Pass  33: suminf.    1.09519 (32) obj. -96.9417 iterations 3
Cbc0038I Pass  34: suminf.    1.39641 (16) obj. -96.9417 iterations 32
Cbc0038I Pass  35: suminf.    0.97924 (14) obj. -96.9888 iterations 6
Cbc0038I Rounding solution of -89.2906 is better than previous of -82.109

Cbc0038I Before mini branch and bound, 246 integers at bound fixed and 0 continuous
Cbc0038I Full problem 370 rows 393 columns, reduced to 133 rows 146 columns - 29 fixed gives 103, 116 - still too large
Cbc0038I Full problem 370 rows 393 columns, reduced to 24 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -89.2906 to -94.2365 (0.23 seconds)
Cbc0038I Round again with cutoff of -123.64
Cbc0038I Pass  35: suminf.    3.90633 (100) obj. -187.87 iterations 0
Cbc0038I Pass  36: suminf.    3.90633 (100) obj. -187.87 iterations 1
Cbc0038I Pass  37: suminf.    2.55972 (75) obj. -160.614 iterations 13
Cbc0038I Pass  38: suminf.    1.99171 (49) obj. -123.64 iterations 32
Cbc0038I Pass  39: suminf.    1.91777 (28) obj. -123.64 iterations 27
Cbc0038I Pass  40: suminf.    1.49080 (29) obj. -123.64 iterations 62
Cbc0038I Pass  41: suminf.    0.91407 (7) obj. -123.64 iterations 6
Cbc0038I Pass  42: suminf.    0.50481 (28) obj. -123.64 iterations 7
Cbc0038I Pass  43: suminf.    1.97802 (34) obj. -123.64 iterations 47
Cbc0038I Pass  44: suminf.    1.97802 (34) obj. -123.64 iterations 4
Cbc0038I Pass  45: suminf.    1.90880 (26) obj. -123.64 iterations 24
Cbc0038I Pass  46: suminf.    1.49533 (29) obj. -123.64 iterations 5
Cbc0038I Pass  47: suminf.    1.93875 (28) obj. -123.64 iterations 2
Cbc0038I Pass  48: suminf.    3.49678 (46) obj. -123.64 iterations 55
Cbc0038I Pass  49: suminf.    3.49156 (46) obj. -123.64 iterations 5
Cbc0038I Pass  50: suminf.    2.95548 (42) obj. -123.64 iterations 10
Cbc0038I Pass  51: suminf.    2.65607 (42) obj. -123.64 iterations 2
Cbc0038I Pass  52: suminf.    3.15372 (34) obj. -123.64 iterations 28
Cbc0038I Pass  53: suminf.    3.15372 (34) obj. -123.64 iterations 1
Cbc0038I Pass  54: suminf.    3.10065 (34) obj. -123.64 iterations 5
Cbc0038I Pass  55: suminf.    3.10065 (34) obj. -123.64 iterations 3
Cbc0038I Pass  56: suminf.    3.39876 (33) obj. -123.64 iterations 6
Cbc0038I Pass  57: suminf.    2.82594 (31) obj. -123.64 iterations 6
Cbc0038I Pass  58: suminf.    3.13178 (31) obj. -123.64 iterations 7
Cbc0038I Pass  59: suminf.    2.24397 (36) obj. -123.64 iterations 38
Cbc0038I Pass  60: suminf.    2.07813 (35) obj. -123.64 iterations 11
Cbc0038I Pass  61: suminf.    2.72498 (33) obj. -123.64 iterations 22
Cbc0038I Pass  62: suminf.    2.45705 (31) obj. -123.64 iterations 4
Cbc0038I Pass  63: suminf.    2.57456 (31) obj. -123.64 iterations 5
Cbc0038I Pass  64: suminf.    2.96746 (45) obj. -123.64 iterations 54
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 240 integers at bound fixed and 0 continuous
Cbc0038I Full problem 370 rows 393 columns, reduced to 30 rows 36 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -94.2365 - took 0.20 seconds
Cbc0012I Integer solution of -94.23651 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 370 rows 393 columns, reduced to 28 rows 30 columns
Cbc0012I Integer solution of -95.0311 found by DiveCoefficient after 13631 iterations and 0 nodes (7.61 seconds)
Cbc0031I 153 added rows had average density of 68.921569
Cbc0013I At root node, 153 cuts changed objective from -230.43527 to -145.99383 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25448 row cuts average 2.0 elements, 0 column cuts (22 active)  in 0.500 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3406 row cuts average 364.4 elements, 0 column cuts (0 active)  in 1.188 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 614 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7205 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.193 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.596 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3243 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.971 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 458 row cuts average 192.7 elements, 0 column cuts (0 active)  in 0.255 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 287 row cuts average 33.1 elements, 0 column cuts (0 active)  in 0.351 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -95.0311 best solution, best possible -145.99383 (8.46 seconds)
Cbc0010I After 1 nodes, 2 on tree, -95.0311 best solution, best possible -145.99383 (9.25 seconds)
Cbc0012I Integer solution of -95.93617 found by DiveCoefficient after 14207 iterations and 2 nodes (9.33 seconds)
Cbc0012I Integer solution of -98.50878 found by DiveCoefficient after 14596 iterations and 4 nodes (9.58 seconds)
Cbc0010I After 7 nodes, 6 on tree, -98.50878 best solution, best possible -145.99383 (9.99 seconds)
Cbc0012I Integer solution of -107.09457 found by DiveCoefficient after 14800 iterations and 9 nodes (10.12 seconds)
Cbc0012I Integer solution of -110.27748 found by DiveCoefficient after 15047 iterations and 12 nodes (10.23 seconds)
Cbc0012I Integer solution of -129.55723 found by rounding after 15102 iterations and 16 nodes (10.30 seconds)
Cbc0010I After 26 nodes, 13 on tree, -129.55723 best solution, best possible -145.99383 (10.73 seconds)
Cbc0038I Full problem 370 rows 393 columns, reduced to 0 rows 0 columns
Cbc0012I Integer solution of -130.55723 found by rounding after 17708 iterations and 69 nodes (11.39 seconds)
Cbc0010I After 71 nodes, 7 on tree, -130.55723 best solution, best possible -145.99383 (11.43 seconds)
Cbc0012I Integer solution of -131.55723 found by rounding after 18594 iterations and 91 nodes (11.84 seconds)
Cbc0038I Full problem 370 rows 393 columns, reduced to 0 rows 0 columns
Cbc0010I After 110 nodes, 2 on tree, -131.55723 best solution, best possible -145.99383 (12.14 seconds)
Cbc0010I After 112 nodes, 3 on tree, -131.55723 best solution, best possible -145.99383 (12.86 seconds)
Cbc0010I After 114 nodes, 5 on tree, -131.55723 best solution, best possible -145.99383 (13.62 seconds)
Cbc0010I After 121 nodes, 7 on tree, -131.55723 best solution, best possible -145.99383 (14.47 seconds)
Cbc0010I After 141 nodes, 3 on tree, -131.55723 best solution, best possible -145.99383 (15.18 seconds)
Cbc0010I After 144 nodes, 5 on tree, -131.55723 best solution, best possible -145.99383 (15.91 seconds)
Cbc0010I After 150 nodes, 5 on tree, -131.55723 best solution, best possible -145.99383 (16.74 seconds)
Cbc0010I After 158 nodes, 3 on tree, -131.55723 best solution, best possible -145.99383 (17.60 seconds)
Cbc0010I After 167 nodes, 2 on tree, -131.55723 best solution, best possible -145.99383 (18.34 seconds)
Cbc0010I After 179 nodes, 6 on tree, -131.55723 best solution, best possible -145.99383 (19.05 seconds)
Cbc0001I Search completed - best objective -131.55723, took 27476 iterations and 190 nodes (19.16 seconds)
Cbc0032I Strong branching done 1812 times (42249 iterations), fathomed 12 nodes and fixed 26 variables
Cbc0035I Maximum depth 18, 916 variables fixed on reduced cost
Total time (CPU seconds):       18.81   (Wallclock seconds):       19.30

