Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-35) rows, 17 (-16) columns and 88 (-95) elements
Clp1000I sum of infeasibilities 4.55069e-07 - average 1.5169e-08, 10 fixed columns
Coin0506I Presolve 11 (-19) rows, 7 (-10) columns and 30 (-58) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 5511.3804
Clp0000I Optimal - objective value 5511.3804
Coin0511I After Postsolve, objective 5511.3804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.132666 - largest nonzero change 0 ( 0%) - largest zero change 2.0117201e-05
Clp0000I Optimal - objective value 5511.3804
Clp0000I Optimal - objective value 5511.3804
Clp0000I Optimal - objective value 5511.3804
Coin0511I After Postsolve, objective 5511.3804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5511.380353 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 17 columns (16 integer (16 of which binary)) and 97 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.765%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.58162
Cbc0038I Pass   1: suminf.    0.67528 (2) obj. -5044.15 iterations 4
Cbc0038I Pass   2: suminf.    0.41053 (1) obj. -4581.45 iterations 2
Cbc0038I Solution found of -3521.1
Cbc0038I Relaxing continuous gives -3521.1
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 10 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -3521.1 to -3552.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -3748.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.67528 (2) obj. -5044.15 iterations 0
Cbc0038I Pass   4: suminf.    0.41053 (1) obj. -4581.45 iterations 2
Cbc0038I Pass   5: suminf.    0.12717 (1) obj. -3748.1 iterations 2
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -4145.87 iterations 1
Cbc0038I Pass   7: suminf.    0.98752 (4) obj. -3748.1 iterations 5
Cbc0038I Pass   8: suminf.    0.11675 (1) obj. -3748.1 iterations 5
Cbc0038I Pass   9: suminf.    0.26316 (1) obj. -4016.22 iterations 5
Cbc0038I Pass  10: suminf.    0.11410 (1) obj. -3748.1 iterations 3
Cbc0038I Pass  11: suminf.    1.09285 (8) obj. -3748.1 iterations 5
Cbc0038I Pass  12: suminf.    0.53506 (4) obj. -3748.1 iterations 4
Cbc0038I Pass  13: suminf.    2.08365 (7) obj. -3748.1 iterations 12
Cbc0038I Pass  14: suminf.    0.10896 (1) obj. -3748.1 iterations 9
Cbc0038I Pass  15: suminf.    0.10896 (1) obj. -3748.1 iterations 0
Cbc0038I Pass  16: suminf.    0.11667 (1) obj. -5116.64 iterations 4
Cbc0038I Pass  17: suminf.    0.11666 (1) obj. -3748.1 iterations 2
Cbc0038I Pass  18: suminf.    0.11666 (1) obj. -3748.1 iterations 0
Cbc0038I Pass  19: suminf.    1.47380 (4) obj. -3748.1 iterations 4
Cbc0038I Pass  20: suminf.    0.11666 (1) obj. -3748.1 iterations 6
Cbc0038I Pass  21: suminf.    0.16404 (2) obj. -3748.1 iterations 2
Cbc0038I Pass  22: suminf.    0.88542 (3) obj. -3748.1 iterations 7
Cbc0038I Pass  23: suminf.    0.47707 (2) obj. -4479.31 iterations 3
Cbc0038I Pass  24: suminf.    0.74650 (2) obj. -3748.1 iterations 4
Cbc0038I Pass  25: suminf.    0.74650 (2) obj. -3748.1 iterations 0
Cbc0038I Pass  26: suminf.    0.28589 (2) obj. -3748.1 iterations 1
Cbc0038I Pass  27: suminf.    0.84476 (5) obj. -3748.1 iterations 2
Cbc0038I Pass  28: suminf.    0.28589 (2) obj. -3748.1 iterations 4
Cbc0038I Pass  29: suminf.    0.88469 (3) obj. -3748.1 iterations 1
Cbc0038I Pass  30: suminf.    0.74650 (2) obj. -3748.1 iterations 2
Cbc0038I Pass  31: suminf.    0.38795 (3) obj. -3748.1 iterations 3
Cbc0038I Pass  32: suminf.    1.06040 (6) obj. -3748.1 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3552.1 - took 0.02 seconds
Cbc0012I Integer solution of -3552.1 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 28 rows 17 columns, reduced to 10 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 7
Cbc0013I At root node, 2 cuts changed objective from -5511.3804 to -3563.9033 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3552.1, took 9 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 50 (-14) rows, 52 (-10) columns and 486 (-162) elements
Clp1000I sum of infeasibilities 1.04591e-09 - average 2.09182e-11, 47 fixed columns
Coin0506I Presolve 5 (-45) rows, 5 (-47) columns and 16 (-470) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 5497.446
Clp0000I Optimal - objective value 5497.446
Coin0511I After Postsolve, objective 5497.446, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2508124 - largest nonzero change 0 ( 0%) - largest zero change 1.9398167e-05
Clp0000I Optimal - objective value 5537.1009
Clp0000I Optimal - objective value 5537.1009
Clp0000I Optimal - objective value 5537.1009
Coin0511I After Postsolve, objective 5537.1009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5537.100926 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 11 fixed, 0 tightened bounds, 33 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 292 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.136%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 23 integers unsatisfied sum - 3.54889
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3531.1 iterations 25
Cbc0038I Solution found of -3531.1
Cbc0038I Rounding solution of -3552.1 is better than previous of -3531.1

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 25 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -3724.2
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.24165 (5) obj. -3724.2 iterations 1
Cbc0038I Pass   3: suminf.    0.22861 (6) obj. -3724.2 iterations 3
Cbc0038I Pass   4: suminf.    0.11667 (1) obj. -5116.64 iterations 15
Cbc0038I Pass   5: suminf.    0.11667 (1) obj. -5116.64 iterations 0
Cbc0038I Pass   6: suminf.    0.10327 (1) obj. -3724.2 iterations 1
Cbc0038I Pass   7: suminf.    2.77897 (8) obj. -3724.2 iterations 8
Cbc0038I Pass   8: suminf.    0.74691 (4) obj. -3724.2 iterations 6
Cbc0038I Pass   9: suminf.    0.11667 (1) obj. -5116.64 iterations 4
Cbc0038I Pass  10: suminf.    1.72871 (10) obj. -3724.2 iterations 12
Cbc0038I Pass  11: suminf.    0.59863 (7) obj. -3724.2 iterations 2
Cbc0038I Pass  12: suminf.    0.42080 (7) obj. -3724.2 iterations 5
Cbc0038I Pass  13: suminf.    0.11667 (1) obj. -5115.64 iterations 9
Cbc0038I Pass  14: suminf.    0.11667 (1) obj. -5115.64 iterations 0
Cbc0038I Pass  15: suminf.    0.10383 (1) obj. -3724.2 iterations 1
Cbc0038I Pass  16: suminf.    1.03365 (6) obj. -3724.2 iterations 10
Cbc0038I Pass  17: suminf.    0.83060 (4) obj. -3724.2 iterations 2
Cbc0038I Pass  18: suminf.    0.11655 (2) obj. -3724.2 iterations 2
Cbc0038I Pass  19: suminf.    0.11655 (2) obj. -3724.2 iterations 0
Cbc0038I Pass  20: suminf.    0.22604 (2) obj. -3921.42 iterations 1
Cbc0038I Pass  21: suminf.    0.89424 (7) obj. -3724.2 iterations 8
Cbc0038I Pass  22: suminf.    0.69485 (6) obj. -3724.2 iterations 3
Cbc0038I Pass  23: suminf.    0.56250 (2) obj. -4516.63 iterations 10
Cbc0038I Pass  24: suminf.    0.12050 (1) obj. -3724.2 iterations 2
Cbc0038I Pass  25: suminf.    0.35000 (1) obj. -4133.87 iterations 1
Cbc0038I Pass  26: suminf.    2.02068 (6) obj. -3724.2 iterations 7
Cbc0038I Pass  27: suminf.    0.37925 (2) obj. -3724.2 iterations 5
Cbc0038I Pass  28: suminf.    0.12222 (1) obj. -3739.12 iterations 2
Cbc0038I Pass  29: suminf.    0.11378 (1) obj. -3724.2 iterations 2
Cbc0038I Pass  30: suminf.    0.31667 (1) obj. -4086.37 iterations 1
Cbc0038I Pass  31: suminf.    2.12743 (13) obj. -3724.2 iterations 14
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 30 rows 27 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4033.85
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.66195 (6) obj. -4033.85 iterations 1
Cbc0038I Pass  32: suminf.    0.65524 (7) obj. -4033.85 iterations 3
Cbc0038I Pass  33: suminf.    0.34340 (3) obj. -4033.85 iterations 27
Cbc0038I Pass  34: suminf.    0.68702 (2) obj. -4711.55 iterations 6
Cbc0038I Pass  35: suminf.    0.68702 (2) obj. -4711.55 iterations 0
Cbc0038I Pass  36: suminf.    1.75083 (10) obj. -4033.85 iterations 10
Cbc0038I Pass  37: suminf.    1.71211 (10) obj. -4033.85 iterations 2
Cbc0038I Pass  38: suminf.    0.11667 (1) obj. -5116.64 iterations 12
Cbc0038I Pass  39: suminf.    0.11667 (1) obj. -5116.64 iterations 0
Cbc0038I Pass  40: suminf.    0.27674 (1) obj. -4033.85 iterations 1
Cbc0038I Pass  41: suminf.    1.24215 (5) obj. -4033.85 iterations 8
Cbc0038I Pass  42: suminf.    0.65140 (5) obj. -4033.85 iterations 3
Cbc0038I Pass  43: suminf.    0.34464 (3) obj. -4033.85 iterations 8
Cbc0038I Pass  44: suminf.    0.68702 (2) obj. -4710.55 iterations 7
Cbc0038I Pass  45: suminf.    0.68702 (2) obj. -4710.55 iterations 0
Cbc0038I Pass  46: suminf.    2.81365 (7) obj. -4033.85 iterations 5
Cbc0038I Pass  47: suminf.    0.93702 (3) obj. -4711.55 iterations 4
Cbc0038I Pass  48: suminf.    1.26489 (9) obj. -4033.85 iterations 9
Cbc0038I Pass  49: suminf.    0.66758 (3) obj. -4033.85 iterations 8
Cbc0038I Pass  50: suminf.    0.31667 (1) obj. -4090.37 iterations 2
Cbc0038I Pass  51: suminf.    0.28501 (1) obj. -4033.85 iterations 1
Cbc0038I Pass  52: suminf.    0.31667 (1) obj. -4090.37 iterations 1
Cbc0038I Pass  53: suminf.    1.49498 (5) obj. -4033.85 iterations 5
Cbc0038I Pass  54: suminf.    1.17759 (8) obj. -4033.85 iterations 6
Cbc0038I Pass  55: suminf.    0.56250 (2) obj. -4517.63 iterations 10
Cbc0038I Pass  56: suminf.    0.29341 (1) obj. -4033.85 iterations 2
Cbc0038I Pass  57: suminf.    0.35000 (1) obj. -4134.87 iterations 1
Cbc0038I Pass  58: suminf.    1.16186 (5) obj. -4033.85 iterations 10
Cbc0038I Pass  59: suminf.    0.58629 (3) obj. -4033.85 iterations 8
Cbc0038I Pass  60: suminf.    0.35000 (1) obj. -4139.87 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 28 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3552.1 - took 0.02 seconds
Cbc0012I Integer solution of -3552.1 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 26 rows 22 columns
Cbc0031I 6 added rows had average density of 3.6666667
Cbc0013I At root node, 28 cuts changed objective from -5272.2485 to -3544.1 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 46 row cuts average 2.1 elements, 26 column cuts (26 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 18 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 12 row cuts average 3.3 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 6 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 44 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 10.2 elements, 0 column cuts (0 active)  in 0.030 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3552.1, took 52 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.11

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 30 (-35) rows, 17 (-16) columns and 88 (-95) elements
Clp1000I sum of infeasibilities 4.55069e-07 - average 1.5169e-08, 10 fixed columns
Coin0506I Presolve 11 (-19) rows, 7 (-10) columns and 30 (-58) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 5511.3804
Clp0000I Optimal - objective value 5511.3804
Coin0511I After Postsolve, objective 5511.3804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.132666 - largest nonzero change 0 ( 0%) - largest zero change 2.0117201e-05
Clp0000I Optimal - objective value 5511.3804
Clp0000I Optimal - objective value 5511.3804
Clp0000I Optimal - objective value 5511.3804
Coin0511I After Postsolve, objective 5511.3804, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5511.380353 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 28 rows, 17 columns (16 integer (16 of which binary)) and 97 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 11.765%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.58162
Cbc0038I Pass   1: suminf.    0.67528 (2) obj. -5044.15 iterations 4
Cbc0038I Pass   2: suminf.    0.41053 (1) obj. -4581.45 iterations 2
Cbc0038I Solution found of -3521.1
Cbc0038I Relaxing continuous gives -3521.1
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 10 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -3521.1 to -3552.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -3748.1
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.67528 (2) obj. -5044.15 iterations 0
Cbc0038I Pass   4: suminf.    0.41053 (1) obj. -4581.45 iterations 2
Cbc0038I Pass   5: suminf.    0.12717 (1) obj. -3748.1 iterations 2
Cbc0038I Pass   6: suminf.    0.35000 (1) obj. -4145.87 iterations 1
Cbc0038I Pass   7: suminf.    0.98752 (4) obj. -3748.1 iterations 5
Cbc0038I Pass   8: suminf.    0.11675 (1) obj. -3748.1 iterations 5
Cbc0038I Pass   9: suminf.    0.26316 (1) obj. -4016.22 iterations 5
Cbc0038I Pass  10: suminf.    0.11410 (1) obj. -3748.1 iterations 3
Cbc0038I Pass  11: suminf.    1.09285 (8) obj. -3748.1 iterations 5
Cbc0038I Pass  12: suminf.    0.53506 (4) obj. -3748.1 iterations 4
Cbc0038I Pass  13: suminf.    2.08365 (7) obj. -3748.1 iterations 12
Cbc0038I Pass  14: suminf.    0.10896 (1) obj. -3748.1 iterations 9
Cbc0038I Pass  15: suminf.    0.10896 (1) obj. -3748.1 iterations 0
Cbc0038I Pass  16: suminf.    0.11667 (1) obj. -5116.64 iterations 4
Cbc0038I Pass  17: suminf.    0.11666 (1) obj. -3748.1 iterations 2
Cbc0038I Pass  18: suminf.    0.11666 (1) obj. -3748.1 iterations 0
Cbc0038I Pass  19: suminf.    1.47380 (4) obj. -3748.1 iterations 4
Cbc0038I Pass  20: suminf.    0.11666 (1) obj. -3748.1 iterations 6
Cbc0038I Pass  21: suminf.    0.16404 (2) obj. -3748.1 iterations 2
Cbc0038I Pass  22: suminf.    0.88542 (3) obj. -3748.1 iterations 7
Cbc0038I Pass  23: suminf.    0.47707 (2) obj. -4479.31 iterations 3
Cbc0038I Pass  24: suminf.    0.74650 (2) obj. -3748.1 iterations 4
Cbc0038I Pass  25: suminf.    0.74650 (2) obj. -3748.1 iterations 0
Cbc0038I Pass  26: suminf.    0.28589 (2) obj. -3748.1 iterations 1
Cbc0038I Pass  27: suminf.    0.84476 (5) obj. -3748.1 iterations 2
Cbc0038I Pass  28: suminf.    0.28589 (2) obj. -3748.1 iterations 4
Cbc0038I Pass  29: suminf.    0.88469 (3) obj. -3748.1 iterations 1
Cbc0038I Pass  30: suminf.    0.74650 (2) obj. -3748.1 iterations 2
Cbc0038I Pass  31: suminf.    0.38795 (3) obj. -3748.1 iterations 3
Cbc0038I Pass  32: suminf.    1.06040 (6) obj. -3748.1 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 28 rows 17 columns, reduced to 23 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -3552.1 - took 0.01 seconds
Cbc0012I Integer solution of -3552.1 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0038I Full problem 28 rows 17 columns, reduced to 10 rows 6 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 7
Cbc0013I At root node, 2 cuts changed objective from -5511.3804 to -3563.9033 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3552.1, took 9 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-27) rows, 40 (-23) columns and 279 (-370) elements
Clp1000I sum of infeasibilities 1.52361e-07 - average 4.00949e-09, 35 fixed columns
Coin0506I Presolve 5 (-33) rows, 5 (-35) columns and 16 (-263) elements
Clp0029I End of values pass after 5 iterations
Clp0000I Optimal - objective value 5502.446
Clp0000I Optimal - objective value 5502.446
Coin0511I After Postsolve, objective 5502.446, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4863582 - largest nonzero change 0 ( 0%) - largest zero change 2.4494631e-05
Clp0000I Optimal - objective value 5537.1009
Clp0000I Optimal - objective value 5537.1009
Clp0000I Optimal - objective value 5537.1009
Coin0511I After Postsolve, objective 5537.1009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 5537.100926 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 31 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 19 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 292 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.105%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 4.58166
Cbc0038I Pass   1: suminf.    0.77500 (2) obj. -4900.39 iterations 26
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -4409.5 iterations 1
Cbc0038I Solution found of -3510.1
Cbc0038I Rounding solution of -3528.1 is better than previous of -3510.1

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 24 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -3528.1 to -3547.1 (0.01 seconds)
Cbc0038I Round again with cutoff of -3738.5
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.77500 (2) obj. -4900.39 iterations 0
Cbc0038I Pass   4: suminf.    0.12795 (1) obj. -3738.5 iterations 6
Cbc0038I Pass   5: suminf.    0.35000 (1) obj. -4134.87 iterations 1
Cbc0038I Pass   6: suminf.    1.85007 (5) obj. -3738.5 iterations 8
Cbc0038I Pass   7: suminf.    0.55452 (2) obj. -3738.5 iterations 7
Cbc0038I Pass   8: suminf.    0.35000 (1) obj. -4137.87 iterations 2
Cbc0038I Pass   9: suminf.    0.12627 (1) obj. -3738.5 iterations 2
Cbc0038I Pass  10: suminf.    1.92708 (7) obj. -3738.5 iterations 10
Cbc0038I Pass  11: suminf.    0.84260 (4) obj. -3738.5 iterations 3
Cbc0038I Pass  12: suminf.    0.35000 (1) obj. -4139.87 iterations 5
Cbc0038I Pass  13: suminf.    0.12515 (1) obj. -3738.5 iterations 2
Cbc0038I Pass  14: suminf.    0.83267 (7) obj. -3738.5 iterations 6
Cbc0038I Pass  15: suminf.    0.50432 (9) obj. -3738.5 iterations 3
Cbc0038I Pass  16: suminf.    0.77500 (2) obj. -4900.39 iterations 13
Cbc0038I Pass  17: suminf.    0.12795 (1) obj. -3738.5 iterations 7
Cbc0038I Pass  18: suminf.    0.35000 (1) obj. -4134.87 iterations 1
Cbc0038I Pass  19: suminf.    1.75846 (6) obj. -3738.5 iterations 10
Cbc0038I Pass  20: suminf.    0.42373 (3) obj. -3738.5 iterations 7
Cbc0038I Pass  21: suminf.    0.38542 (2) obj. -4209.49 iterations 3
Cbc0038I Pass  22: suminf.    0.12393 (2) obj. -3738.5 iterations 7
Cbc0038I Pass  23: suminf.    1.18597 (7) obj. -3738.5 iterations 9
Cbc0038I Pass  24: suminf.    0.86623 (6) obj. -3738.5 iterations 1
Cbc0038I Pass  25: suminf.    0.77500 (2) obj. -4900.39 iterations 8
Cbc0038I Pass  26: suminf.    0.50000 (1) obj. -4409.5 iterations 2
Cbc0038I Pass  27: suminf.    0.12795 (1) obj. -3738.5 iterations 2
Cbc0038I Pass  28: suminf.    0.35000 (1) obj. -4134.87 iterations 1
Cbc0038I Pass  29: suminf.    3.14673 (10) obj. -3738.5 iterations 13
Cbc0038I Pass  30: suminf.    2.49917 (10) obj. -3738.5 iterations 2
Cbc0038I Pass  31: suminf.    2.29102 (11) obj. -3738.5 iterations 3
Cbc0038I Pass  32: suminf.    0.11136 (1) obj. -3738.5 iterations 16
Cbc0038I Rounding solution of -3552.1 is better than previous of -3547.1

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 29 rows 25 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4082.9
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    0.77500 (2) obj. -4900.39 iterations 0
Cbc0038I Pass  33: suminf.    0.32089 (1) obj. -4082.9 iterations 6
Cbc0038I Pass  34: suminf.    0.35000 (1) obj. -4134.87 iterations 1
Cbc0038I Pass  35: suminf.    1.85464 (8) obj. -4082.9 iterations 13
Cbc0038I Pass  36: suminf.    1.85464 (8) obj. -4082.9 iterations 1
Cbc0038I Pass  37: suminf.    0.40430 (3) obj. -4082.9 iterations 15
Cbc0038I Pass  38: suminf.    0.68702 (2) obj. -4711.55 iterations 3
Cbc0038I Pass  39: suminf.    0.68702 (2) obj. -4711.55 iterations 0
Cbc0038I Pass  40: suminf.    1.97587 (5) obj. -4082.9 iterations 4
Cbc0038I Pass  41: suminf.    0.88702 (3) obj. -4711.75 iterations 3
Cbc0038I Pass  42: suminf.    2.47840 (7) obj. -4082.9 iterations 6
Cbc0038I Pass  43: suminf.    1.41513 (4) obj. -4589.6 iterations 3
Cbc0038I Pass  44: suminf.    0.99846 (3) obj. -4589.18 iterations 1
Cbc0038I Pass  45: suminf.    0.40430 (3) obj. -4082.9 iterations 5
Cbc0038I Pass  46: suminf.    0.68702 (2) obj. -4711.55 iterations 3
Cbc0038I Pass  47: suminf.    0.68702 (2) obj. -4711.55 iterations 0
Cbc0038I Pass  48: suminf.    1.75947 (8) obj. -4082.9 iterations 11
Cbc0038I Pass  49: suminf.    0.31529 (1) obj. -4082.9 iterations 12
Cbc0038I Pass  50: suminf.    0.31667 (1) obj. -4085.37 iterations 1
Cbc0038I Pass  51: suminf.    1.52299 (6) obj. -4082.9 iterations 5
Cbc0038I Pass  52: suminf.    0.83426 (4) obj. -4082.9 iterations 3
Cbc0038I Pass  53: suminf.    0.77500 (2) obj. -4899.39 iterations 4
Cbc0038I Pass  54: suminf.    0.32145 (1) obj. -4082.9 iterations 7
Cbc0038I Pass  55: suminf.    0.35000 (1) obj. -4133.87 iterations 1
Cbc0038I Pass  56: suminf.    2.63797 (7) obj. -4082.9 iterations 12
Cbc0038I Pass  57: suminf.    0.59620 (3) obj. -4082.9 iterations 8
Cbc0038I Pass  58: suminf.    0.11667 (1) obj. -5115.64 iterations 4
Cbc0038I Pass  59: suminf.    0.11667 (1) obj. -5115.64 iterations 0
Cbc0038I Pass  60: suminf.    0.30478 (1) obj. -4082.9 iterations 2
Cbc0038I Pass  61: suminf.    2.28975 (7) obj. -4082.9 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 28 rows 24 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -3552.1 - took 0.02 seconds
Cbc0012I Integer solution of -3552.1 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 26 rows 22 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 3 added rows had average density of 4.6666667
Cbc0013I At root node, 7 cuts changed objective from -5460.3373 to -3319.8433 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 16 row cuts average 2.9 elements, 22 column cuts (22 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 16 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 18 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 10 row cuts average 2.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 48 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 8.7 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is 1
Cbc0001I Search completed - best objective -3552.1, took 51 iterations and 0 nodes (0.10 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.10

