Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 73 (-5) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 2.40928e-05 - average 1.77153e-07, 16 fixed columns
Coin0506I Presolve 104 (-32) rows, 57 (-16) columns and 314 (-96) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Coin0511I After Postsolve, objective 58.033866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22788992 - largest nonzero change 0 ( 0%) - largest zero change 2.6927956e-05
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Coin0511I After Postsolve, objective 58.033866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.03386559 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 73 columns (72 integer (72 of which binary)) and 462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.31465
Cbc0038I Solution found of 2.01887
Cbc0038I Relaxing continuous gives -4.50633
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 78 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.50633 to -27.4971 (0.04 seconds)
Cbc0038I Round again with cutoff of -30.4876
Cbc0038I Pass   1: suminf.    2.07255 (16) obj. -30.4876 iterations 43
Cbc0038I Pass   2: suminf.    1.29079 (8) obj. -30.4876 iterations 22
Cbc0038I Pass   3: suminf.    0.99534 (3) obj. -30.4876 iterations 19
Cbc0038I Pass   4: suminf.    0.72769 (2) obj. -30.4876 iterations 3
Cbc0038I Pass   5: suminf.    0.82203 (2) obj. -30.4876 iterations 2
Cbc0038I Pass   6: suminf.    2.19000 (6) obj. -30.4876 iterations 15
Cbc0038I Pass   7: suminf.    0.60837 (2) obj. -30.4876 iterations 17
Cbc0038I Pass   8: suminf.    1.11320 (3) obj. -30.4876 iterations 3
Cbc0038I Pass   9: suminf.    0.60539 (2) obj. -30.4876 iterations 2
Cbc0038I Pass  10: suminf.    0.60837 (2) obj. -30.4876 iterations 1
Cbc0038I Pass  11: suminf.    1.07533 (4) obj. -30.4876 iterations 11
Cbc0038I Pass  12: suminf.    0.88537 (3) obj. -30.4876 iterations 5
Cbc0038I Pass  13: suminf.    0.49973 (2) obj. -30.4876 iterations 9
Cbc0038I Pass  14: suminf.    0.49973 (2) obj. -30.4876 iterations 0
Cbc0038I Pass  15: suminf.    0.67694 (2) obj. -30.4876 iterations 2
Cbc0038I Pass  16: suminf.    3.47566 (11) obj. -30.4876 iterations 17
Cbc0038I Pass  17: suminf.    2.48973 (7) obj. -30.4876 iterations 12
Cbc0038I Pass  18: suminf.    2.14290 (5) obj. -30.4876 iterations 6
Cbc0038I Pass  19: suminf.    1.15085 (3) obj. -30.4876 iterations 4
Cbc0038I Pass  20: suminf.    0.60539 (2) obj. -30.4876 iterations 3
Cbc0038I Pass  21: suminf.    0.60837 (2) obj. -30.4876 iterations 1
Cbc0038I Pass  22: suminf.    0.60837 (2) obj. -30.4876 iterations 0
Cbc0038I Pass  23: suminf.    1.11320 (3) obj. -30.4876 iterations 3
Cbc0038I Pass  24: suminf.    2.79153 (10) obj. -30.4876 iterations 14
Cbc0038I Pass  25: suminf.    1.50467 (5) obj. -30.4876 iterations 12
Cbc0038I Pass  26: suminf.    1.77609 (6) obj. -30.4876 iterations 14
Cbc0038I Pass  27: suminf.    1.45503 (4) obj. -30.4876 iterations 3
Cbc0038I Pass  28: suminf.    1.02822 (4) obj. -30.4876 iterations 6
Cbc0038I Pass  29: suminf.    1.02822 (4) obj. -30.4876 iterations 1
Cbc0038I Pass  30: suminf.    0.60837 (2) obj. -30.4876 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 92 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -27.4971 to -28.437 (0.08 seconds)
Cbc0038I Round again with cutoff of -35.8704
Cbc0038I Pass  30: suminf.    2.29476 (16) obj. -35.8704 iterations 0
Cbc0038I Pass  31: suminf.    1.71233 (11) obj. -35.8704 iterations 12
Cbc0038I Pass  32: suminf.    1.53483 (5) obj. -35.8704 iterations 21
Cbc0038I Pass  33: suminf.    1.14061 (4) obj. -35.8704 iterations 6
Cbc0038I Pass  34: suminf.    1.63753 (4) obj. -35.8704 iterations 4
Cbc0038I Pass  35: suminf.    0.85479 (3) obj. -35.8704 iterations 5
Cbc0038I Pass  36: suminf.    0.77385 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  37: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  38: suminf.    1.94328 (7) obj. -35.8704 iterations 15
Cbc0038I Pass  39: suminf.    1.06522 (4) obj. -35.8704 iterations 14
Cbc0038I Pass  40: suminf.    0.88991 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  41: suminf.    1.11976 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  42: suminf.    0.77385 (3) obj. -35.8704 iterations 11
Cbc0038I Pass  43: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  44: suminf.    2.28720 (9) obj. -35.8704 iterations 9
Cbc0038I Pass  45: suminf.    0.85479 (3) obj. -35.8704 iterations 12
Cbc0038I Pass  46: suminf.    2.72236 (8) obj. -35.8704 iterations 16
Cbc0038I Pass  47: suminf.    1.27729 (4) obj. -35.8704 iterations 15
Cbc0038I Pass  48: suminf.    1.08982 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  49: suminf.    1.07071 (4) obj. -35.8704 iterations 2
Cbc0038I Pass  50: suminf.    0.84801 (5) obj. -35.8704 iterations 4
Cbc0038I Pass  51: suminf.    1.83815 (6) obj. -35.8704 iterations 9
Cbc0038I Pass  52: suminf.    1.63343 (6) obj. -35.8704 iterations 6
Cbc0038I Pass  53: suminf.    1.58038 (5) obj. -35.8704 iterations 9
Cbc0038I Pass  54: suminf.    0.85479 (3) obj. -35.8704 iterations 5
Cbc0038I Pass  55: suminf.    0.77385 (3) obj. -35.8704 iterations 2
Cbc0038I Pass  56: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  57: suminf.    1.91973 (8) obj. -35.8704 iterations 12
Cbc0038I Pass  58: suminf.    0.80044 (3) obj. -35.8704 iterations 10
Cbc0038I Pass  59: suminf.    0.78133 (2) obj. -35.8704 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 94 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -28.437 - took 0.09 seconds
Cbc0012I Integer solution of -28.43702 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 80 rows 41 columns
Cbc0031I 21 added rows had average density of 44.428571
Cbc0013I At root node, 21 cuts changed objective from -57.401468 to -48.916518 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8137 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.094 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2084 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.43702 best solution, best possible -48.916518 (0.74 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 7 rows 6 columns
Cbc0001I Search completed - best objective -28.43702, took 7789 iterations and 52 nodes (0.93 seconds)
Cbc0032I Strong branching done 614 times (11938 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 17, 175 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-43) rows, 119 (-33) columns and 2023 (-1280) elements
Clp1000I sum of infeasibilities 4.34677e-07 - average 3.91601e-09, 43 fixed columns
Coin0506I Presolve 62 (-49) rows, 71 (-48) columns and 792 (-1231) elements
Clp0006I 0  Obj 142.30791 Dual inf 5.1161199 (71)
Clp0029I End of values pass after 71 iterations
Clp0014I Perturbing problem by 0.001% of 4.747686 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 151.43833
Clp0000I Optimal - objective value 151.43833
Coin0511I After Postsolve, objective 151.43833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 151.43833 Dual inf 36.445482 (2)
Clp0014I Perturbing problem by 0.001% of 1.4069467 - largest nonzero change 0 ( 0%) - largest zero change 2.8981471e-05
Clp0000I Optimal - objective value 151.43833
Clp0000I Optimal - objective value 151.43833
Clp0000I Optimal - objective value 151.43833
Coin0511I After Postsolve, objective 151.43833, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 151.4383343 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 71 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 56 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 107 rows, 119 columns (119 integer (119 of which binary)) and 2070 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.934%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 40 integers unsatisfied sum - 11.6774
Cbc0038I Pass   1: suminf.    0.97356 (31) obj. -50.4986 iterations 24
Cbc0038I Pass   2: suminf.    0.97356 (31) obj. -50.4986 iterations 0
Cbc0038I Pass   3: suminf.    0.04792 (3) obj. -13.7544 iterations 30
Cbc0038I Solution found of -10.8023
Cbc0038I Rounding solution of -23.9065 is better than previous of -10.8023

Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 119 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -23.9065 to -81.8023 (0.04 seconds)
Cbc0038I Round again with cutoff of -85.5268
Cbc0038I Pass   4: suminf.    4.03724 (35) obj. -85.5268 iterations 7
Cbc0038I Pass   5: suminf.    4.03724 (35) obj. -85.5268 iterations 1
Cbc0038I Pass   6: suminf.    3.97928 (22) obj. -85.5268 iterations 16
Cbc0038I Pass   7: suminf.    1.06713 (6) obj. -85.5268 iterations 16
Cbc0038I Pass   8: suminf.    1.06713 (6) obj. -85.5268 iterations 0
Cbc0038I Pass   9: suminf.    0.42944 (3) obj. -85.5268 iterations 18
Cbc0038I Pass  10: suminf.    0.42944 (3) obj. -85.5268 iterations 0
Cbc0038I Pass  11: suminf.    0.40666 (3) obj. -85.5268 iterations 8
Cbc0038I Pass  12: suminf.    0.40666 (3) obj. -85.5268 iterations 5
Cbc0038I Pass  13: suminf.    0.42944 (3) obj. -85.5268 iterations 8
Cbc0038I Pass  14: suminf.    3.15475 (12) obj. -85.5268 iterations 20
Cbc0038I Pass  15: suminf.    2.71050 (11) obj. -85.5268 iterations 4
Cbc0038I Pass  16: suminf.    0.42944 (3) obj. -85.5268 iterations 28
Cbc0038I Pass  17: suminf.    0.42944 (3) obj. -85.5268 iterations 0
Cbc0038I Pass  18: suminf.    0.40666 (3) obj. -85.5268 iterations 8
Cbc0038I Pass  19: suminf.    0.40666 (3) obj. -85.5268 iterations 5
Cbc0038I Pass  20: suminf.    0.42944 (3) obj. -85.5268 iterations 8
Cbc0038I Pass  21: suminf.    3.07634 (11) obj. -85.5268 iterations 12
Cbc0038I Pass  22: suminf.    2.50151 (9) obj. -85.5268 iterations 6
Cbc0038I Pass  23: suminf.    0.42944 (3) obj. -85.5268 iterations 22
Cbc0038I Pass  24: suminf.    0.42944 (3) obj. -85.5268 iterations 0
Cbc0038I Pass  25: suminf.    0.40666 (3) obj. -85.5268 iterations 10
Cbc0038I Pass  26: suminf.    0.40666 (3) obj. -85.5268 iterations 5
Cbc0038I Pass  27: suminf.    0.42944 (3) obj. -85.5268 iterations 10
Cbc0038I Pass  28: suminf.    3.07904 (14) obj. -85.5268 iterations 28
Cbc0038I Pass  29: suminf.    2.18401 (9) obj. -85.5268 iterations 10
Cbc0038I Pass  30: suminf.    0.42944 (3) obj. -85.5268 iterations 17
Cbc0038I Pass  31: suminf.    0.42944 (3) obj. -85.5268 iterations 0
Cbc0038I Pass  32: suminf.    0.40666 (3) obj. -85.5268 iterations 10
Cbc0038I Pass  33: suminf.    0.40666 (3) obj. -85.5268 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 69 integers at bound fixed and 0 continuous
Cbc0038I Full problem 107 rows 119 columns, reduced to 2 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -81.8023 - took 0.03 seconds
Cbc0012I Integer solution of -81.80231 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0031I 13 added rows had average density of 7
Cbc0013I At root node, 136 cuts changed objective from -119.04646 to -81.80231 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 77 row cuts average 2.0 elements, 32 column cuts (32 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 54.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 6.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 24 row cuts average 52.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 3.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -81.80230999999998, took 28 iterations and 0 nodes (0.08 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.08   (Wallclock seconds):       0.08

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-19) rows, 73 (-5) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 2.40928e-05 - average 1.77153e-07, 16 fixed columns
Coin0506I Presolve 104 (-32) rows, 57 (-16) columns and 314 (-96) elements
Clp0029I End of values pass after 57 iterations
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Coin0511I After Postsolve, objective 58.033866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.22788992 - largest nonzero change 0 ( 0%) - largest zero change 2.6927956e-05
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Clp0000I Optimal - objective value 58.033866
Coin0511I After Postsolve, objective 58.033866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 58.03386559 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 26 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 20 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 131 rows, 73 columns (72 integer (72 of which binary)) and 462 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.404%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 39 integers unsatisfied sum - 5.31465
Cbc0038I Solution found of 2.01887
Cbc0038I Relaxing continuous gives -4.50633
Cbc0038I Before mini branch and bound, 33 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 78 rows 40 columns
Cbc0038I Mini branch and bound improved solution from -4.50633 to -27.4971 (0.05 seconds)
Cbc0038I Round again with cutoff of -30.4876
Cbc0038I Pass   1: suminf.    2.07255 (16) obj. -30.4876 iterations 43
Cbc0038I Pass   2: suminf.    1.29079 (8) obj. -30.4876 iterations 22
Cbc0038I Pass   3: suminf.    0.99534 (3) obj. -30.4876 iterations 19
Cbc0038I Pass   4: suminf.    0.72769 (2) obj. -30.4876 iterations 3
Cbc0038I Pass   5: suminf.    0.82203 (2) obj. -30.4876 iterations 2
Cbc0038I Pass   6: suminf.    2.19000 (6) obj. -30.4876 iterations 15
Cbc0038I Pass   7: suminf.    0.60837 (2) obj. -30.4876 iterations 17
Cbc0038I Pass   8: suminf.    1.11320 (3) obj. -30.4876 iterations 3
Cbc0038I Pass   9: suminf.    0.60539 (2) obj. -30.4876 iterations 2
Cbc0038I Pass  10: suminf.    0.60837 (2) obj. -30.4876 iterations 1
Cbc0038I Pass  11: suminf.    1.07533 (4) obj. -30.4876 iterations 11
Cbc0038I Pass  12: suminf.    0.88537 (3) obj. -30.4876 iterations 5
Cbc0038I Pass  13: suminf.    0.49973 (2) obj. -30.4876 iterations 9
Cbc0038I Pass  14: suminf.    0.49973 (2) obj. -30.4876 iterations 0
Cbc0038I Pass  15: suminf.    0.67694 (2) obj. -30.4876 iterations 2
Cbc0038I Pass  16: suminf.    3.47566 (11) obj. -30.4876 iterations 17
Cbc0038I Pass  17: suminf.    2.48973 (7) obj. -30.4876 iterations 12
Cbc0038I Pass  18: suminf.    2.14290 (5) obj. -30.4876 iterations 6
Cbc0038I Pass  19: suminf.    1.15085 (3) obj. -30.4876 iterations 4
Cbc0038I Pass  20: suminf.    0.60539 (2) obj. -30.4876 iterations 3
Cbc0038I Pass  21: suminf.    0.60837 (2) obj. -30.4876 iterations 1
Cbc0038I Pass  22: suminf.    0.60837 (2) obj. -30.4876 iterations 0
Cbc0038I Pass  23: suminf.    1.11320 (3) obj. -30.4876 iterations 3
Cbc0038I Pass  24: suminf.    2.79153 (10) obj. -30.4876 iterations 14
Cbc0038I Pass  25: suminf.    1.50467 (5) obj. -30.4876 iterations 12
Cbc0038I Pass  26: suminf.    1.77609 (6) obj. -30.4876 iterations 14
Cbc0038I Pass  27: suminf.    1.45503 (4) obj. -30.4876 iterations 3
Cbc0038I Pass  28: suminf.    1.02822 (4) obj. -30.4876 iterations 6
Cbc0038I Pass  29: suminf.    1.02822 (4) obj. -30.4876 iterations 1
Cbc0038I Pass  30: suminf.    0.60837 (2) obj. -30.4876 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 92 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -27.4971 to -28.437 (0.09 seconds)
Cbc0038I Round again with cutoff of -35.8704
Cbc0038I Pass  30: suminf.    2.29476 (16) obj. -35.8704 iterations 0
Cbc0038I Pass  31: suminf.    1.71233 (11) obj. -35.8704 iterations 12
Cbc0038I Pass  32: suminf.    1.53483 (5) obj. -35.8704 iterations 21
Cbc0038I Pass  33: suminf.    1.14061 (4) obj. -35.8704 iterations 6
Cbc0038I Pass  34: suminf.    1.63753 (4) obj. -35.8704 iterations 4
Cbc0038I Pass  35: suminf.    0.85479 (3) obj. -35.8704 iterations 5
Cbc0038I Pass  36: suminf.    0.77385 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  37: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  38: suminf.    1.94328 (7) obj. -35.8704 iterations 15
Cbc0038I Pass  39: suminf.    1.06522 (4) obj. -35.8704 iterations 14
Cbc0038I Pass  40: suminf.    0.88991 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  41: suminf.    1.11976 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  42: suminf.    0.77385 (3) obj. -35.8704 iterations 11
Cbc0038I Pass  43: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  44: suminf.    2.28720 (9) obj. -35.8704 iterations 9
Cbc0038I Pass  45: suminf.    0.85479 (3) obj. -35.8704 iterations 12
Cbc0038I Pass  46: suminf.    2.72236 (8) obj. -35.8704 iterations 16
Cbc0038I Pass  47: suminf.    1.27729 (4) obj. -35.8704 iterations 15
Cbc0038I Pass  48: suminf.    1.08982 (4) obj. -35.8704 iterations 3
Cbc0038I Pass  49: suminf.    1.07071 (4) obj. -35.8704 iterations 2
Cbc0038I Pass  50: suminf.    0.84801 (5) obj. -35.8704 iterations 4
Cbc0038I Pass  51: suminf.    1.83815 (6) obj. -35.8704 iterations 9
Cbc0038I Pass  52: suminf.    1.63343 (6) obj. -35.8704 iterations 6
Cbc0038I Pass  53: suminf.    1.58038 (5) obj. -35.8704 iterations 9
Cbc0038I Pass  54: suminf.    0.85479 (3) obj. -35.8704 iterations 5
Cbc0038I Pass  55: suminf.    0.77385 (3) obj. -35.8704 iterations 2
Cbc0038I Pass  56: suminf.    1.13210 (3) obj. -35.8704 iterations 1
Cbc0038I Pass  57: suminf.    1.91973 (8) obj. -35.8704 iterations 12
Cbc0038I Pass  58: suminf.    0.80044 (3) obj. -35.8704 iterations 10
Cbc0038I Pass  59: suminf.    0.78133 (2) obj. -35.8704 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 131 rows 73 columns, reduced to 94 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -28.437 - took 0.10 seconds
Cbc0012I Integer solution of -28.43702 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 80 rows 41 columns
Cbc0031I 21 added rows had average density of 44.428571
Cbc0013I At root node, 21 cuts changed objective from -57.401468 to -48.916518 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 8137 row cuts average 3.9 elements, 1 column cuts (1 active)  in 0.091 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2084 row cuts average 73.0 elements, 0 column cuts (0 active)  in 0.063 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 22 row cuts average 5.5 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -28.43702 best solution, best possible -48.916518 (0.75 seconds)
Cbc0038I Full problem 131 rows 73 columns, reduced to 7 rows 6 columns
Cbc0001I Search completed - best objective -28.43702, took 7789 iterations and 52 nodes (0.94 seconds)
Cbc0032I Strong branching done 614 times (11938 iterations), fathomed 2 nodes and fixed 28 variables
Cbc0035I Maximum depth 17, 175 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.95

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 109 (-46) rows, 117 (-36) columns and 1929 (-1375) elements
Clp1000I sum of infeasibilities 3.1485e-07 - average 2.88853e-09, 61 fixed columns
Coin0506I Presolve 49 (-60) rows, 56 (-61) columns and 204 (-1725) elements
Clp0006I 0  Obj -7.1385398 Dual inf 431.30125 (55)
Clp0029I End of values pass after 50 iterations
Clp0014I Perturbing problem by 0.001% of 0.24767377 - largest nonzero change 1.0048354e-05 ( 0.00086296483%) - largest zero change 2.9743255e-05
Clp0000I Optimal - objective value -7.0902451
Clp0000I Optimal - objective value -7.0902451
Coin0511I After Postsolve, objective -7.0902451, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -7.0902451 Dual inf 78.22379 (45)
Clp0014I Perturbing problem by 0.001% of 1.4158995 - largest nonzero change 1.3842105e-05 ( 0.00088996209%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 68.494081
Clp0000I Optimal - objective value 68.494081
Clp0000I Optimal - objective value 68.494081
Coin0511I After Postsolve, objective 68.494081, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 68.49408078 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 63 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 105 rows, 117 columns (117 integer (117 of which binary)) and 1965 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.827%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 43 integers unsatisfied sum - 4.03579
Cbc0038I Pass   1: suminf.    0.94426 (33) obj. -36.8359 iterations 24
Cbc0038I Pass   2: suminf.    0.94426 (33) obj. -36.8359 iterations 1
Cbc0038I Pass   3: suminf.    0.38878 (20) obj. -12.9208 iterations 15
Cbc0038I Pass   4: suminf.    0.16159 (10) obj. -2.16803 iterations 10
Cbc0038I Solution found of 14.5612
Cbc0038I Rounding solution of 4.543 is better than previous of 14.5612

Cbc0038I Before mini branch and bound, 73 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 117 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 4.543 to -2.96061 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.73463
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    0.94426 (33) obj. -36.8359 iterations 0
Cbc0038I Pass   6: suminf.    0.94426 (33) obj. -36.8359 iterations 1
Cbc0038I Pass   7: suminf.    0.36324 (5) obj. -8.73463 iterations 34
Cbc0038I Pass   8: suminf.    0.27784 (5) obj. -10.3833 iterations 1
Cbc0038I Pass   9: suminf.    0.28000 (2) obj. -8.73463 iterations 17
Cbc0038I Pass  10: suminf.    0.23560 (2) obj. -9.13425 iterations 2
Cbc0038I Pass  11: suminf.    0.70695 (9) obj. -10.1292 iterations 21
Cbc0038I Pass  12: suminf.    0.70695 (9) obj. -10.1292 iterations 5
Cbc0038I Pass  13: suminf.    0.84239 (3) obj. -8.73463 iterations 12
Cbc0038I Pass  14: suminf.    0.28342 (3) obj. -8.73463 iterations 2
Cbc0038I Pass  15: suminf.    0.69263 (2) obj. -8.73463 iterations 3
Cbc0038I Pass  16: suminf.    0.29258 (2) obj. -8.73463 iterations 1
Cbc0038I Pass  17: suminf.    0.72948 (11) obj. -15.5513 iterations 44
Cbc0038I Pass  18: suminf.    0.70349 (11) obj. -15.7797 iterations 9
Cbc0038I Pass  19: suminf.    0.49896 (6) obj. -8.73463 iterations 25
Cbc0038I Pass  20: suminf.    0.42780 (6) obj. -8.73463 iterations 4
Cbc0038I Pass  21: suminf.    1.39135 (6) obj. -8.73463 iterations 6
Cbc0038I Pass  22: suminf.    0.36760 (5) obj. -8.73463 iterations 7
Cbc0038I Pass  23: suminf.    1.29357 (5) obj. -8.73463 iterations 6
Cbc0038I Pass  24: suminf.    0.68419 (5) obj. -8.73463 iterations 9
Cbc0038I Pass  25: suminf.    1.19700 (13) obj. -8.73463 iterations 25
Cbc0038I Pass  26: suminf.    1.08049 (12) obj. -8.73463 iterations 7
Cbc0038I Pass  27: suminf.    0.24708 (3) obj. -8.73463 iterations 27
Cbc0038I Pass  28: suminf.    0.24708 (3) obj. -8.73463 iterations 0
Cbc0038I Pass  29: suminf.    0.94992 (5) obj. -8.73463 iterations 10
Cbc0038I Pass  30: suminf.    0.10179 (2) obj. -9.77463 iterations 7
Cbc0038I Pass  31: suminf.    0.24708 (3) obj. -8.73463 iterations 14
Cbc0038I Pass  32: suminf.    1.73958 (11) obj. -8.73463 iterations 26
Cbc0038I Pass  33: suminf.    1.73958 (11) obj. -8.73463 iterations 5
Cbc0038I Pass  34: suminf.    1.58011 (5) obj. -8.73463 iterations 15
Cbc0038I Rounding solution of -7.0865 is better than previous of -2.96061

Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 117 columns, reduced to 51 rows 58 columns
Cbc0038I Mini branch and bound improved solution from -7.0865 to -27.0315 (0.10 seconds)
Cbc0038I Round again with cutoff of -33.7653
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    0.94426 (33) obj. -36.8359 iterations 0
Cbc0038I Pass  35: suminf.    0.94426 (33) obj. -36.8359 iterations 1
Cbc0038I Pass  36: suminf.    1.16955 (19) obj. -33.7653 iterations 29
Cbc0038I Pass  37: suminf.    1.16955 (19) obj. -33.7653 iterations 2
Cbc0038I Pass  38: suminf.    1.75502 (11) obj. -33.7653 iterations 35
Cbc0038I Pass  39: suminf.    1.23978 (12) obj. -33.7653 iterations 12
Cbc0038I Pass  40: suminf.    1.49379 (12) obj. -33.7653 iterations 6
Cbc0038I Pass  41: suminf.    1.68314 (13) obj. -33.7653 iterations 14
Cbc0038I Pass  42: suminf.    1.28708 (13) obj. -33.7653 iterations 5
Cbc0038I Pass  43: suminf.    0.99614 (15) obj. -33.7653 iterations 22
Cbc0038I Pass  44: suminf.    0.87465 (15) obj. -33.7653 iterations 7
Cbc0038I Pass  45: suminf.    1.50981 (12) obj. -33.7653 iterations 24
Cbc0038I Pass  46: suminf.    1.50981 (12) obj. -33.7653 iterations 10
Cbc0038I Pass  47: suminf.    1.42238 (12) obj. -33.7653 iterations 14
Cbc0038I Pass  48: suminf.    1.42238 (12) obj. -33.7653 iterations 9
Cbc0038I Pass  49: suminf.    1.50981 (12) obj. -33.7653 iterations 15
Cbc0038I Pass  50: suminf.    1.99784 (16) obj. -33.7653 iterations 39
Cbc0038I Pass  51: suminf.    1.57268 (17) obj. -33.7653 iterations 5
Cbc0038I Pass  52: suminf.    1.64341 (14) obj. -33.7653 iterations 22
Cbc0038I Pass  53: suminf.    1.60420 (13) obj. -33.7653 iterations 5
Cbc0038I Pass  54: suminf.    1.64774 (13) obj. -33.7653 iterations 13
Cbc0038I Pass  55: suminf.    1.64774 (13) obj. -33.7653 iterations 9
Cbc0038I Pass  56: suminf.    1.60420 (13) obj. -33.7653 iterations 14
Cbc0038I Pass  57: suminf.    1.83428 (15) obj. -33.7653 iterations 28
Cbc0038I Pass  58: suminf.    1.38020 (16) obj. -33.7653 iterations 5
Cbc0038I Pass  59: suminf.    1.19565 (15) obj. -33.7653 iterations 5
Cbc0038I Pass  60: suminf.    1.30776 (14) obj. -33.7653 iterations 21
Cbc0038I Pass  61: suminf.    1.15447 (14) obj. -33.7653 iterations 12
Cbc0038I Pass  62: suminf.    1.42181 (19) obj. -33.7653 iterations 13
Cbc0038I Pass  63: suminf.    1.39253 (18) obj. -33.7653 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 105 rows 117 columns, reduced to 44 rows 50 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -27.0315 - took 0.10 seconds
Cbc0012I Integer solution of -27.03151 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 105 rows 117 columns, reduced to 41 rows 43 columns
Cbc0031I 61 added rows had average density of 26.918033
Cbc0013I At root node, 61 cuts changed objective from -60.699919 to -35.775738 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13743 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.134 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1834 row cuts average 108.1 elements, 0 column cuts (0 active)  in 0.147 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 35 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1048 row cuts average 2.9 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 959 row cuts average 5.1 elements, 0 column cuts (0 active)  in 0.114 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 593 row cuts average 8.8 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 307 row cuts average 62.8 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 150 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.664 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27.03151 best solution, best possible -35.775738 (2.63 seconds)
Cbc0004I Integer solution of -28.43702 found after 5664 iterations and 2 nodes (3.00 seconds)
Cbc0010I After 4 nodes, 3 on tree, -28.43702 best solution, best possible -35.775738 (3.40 seconds)
Cbc0010I After 11 nodes, 9 on tree, -28.43702 best solution, best possible -35.775738 (4.10 seconds)
Cbc0010I After 28 nodes, 1 on tree, -28.43702 best solution, best possible -35.563558 (5.00 seconds)
Cbc0010I After 34 nodes, 7 on tree, -28.43702 best solution, best possible -35.563558 (5.74 seconds)
Cbc0038I Full problem 105 rows 117 columns, reduced to 62 rows 71 columns
Cbc0010I After 52 nodes, 7 on tree, -28.43702 best solution, best possible -35.563558 (6.49 seconds)
Cbc0001I Search completed - best objective -28.43702, took 9792 iterations and 60 nodes (6.87 seconds)
Cbc0032I Strong branching done 990 times (23503 iterations), fathomed 3 nodes and fixed 0 variables
Cbc0035I Maximum depth 15, 125 variables fixed on reduced cost
Total time (CPU seconds):       5.16   (Wallclock seconds):       6.89

