Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 9 (-8) rows, 6 (-3) columns and 23 (-16) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 9 (0) rows, 6 (0) columns and 23 (0) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 19.533149
Clp0000I Optimal - objective value 19.533149
Coin0511I After Postsolve, objective 19.533149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 19.533149
Clp0000I Optimal - objective value 19.533149
Clp0000I Optimal - objective value 19.533149
Coin0511I After Postsolve, objective 19.533149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19.53314917 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 9 rows, 6 columns (5 integer (5 of which binary)) and 23 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.974%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.43402
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0 iterations 4
Cbc0038I Solution found of 0
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9 rows 6 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 0 to -9 (0.00 seconds)
Cbc0038I Round again with cutoff of -10.9532
Cbc0038I Pass   2: suminf.    0.73324 (3) obj. -10.9532 iterations 2
Cbc0038I Pass   3: suminf.    1.29294 (4) obj. -10.9532 iterations 3
Cbc0038I Pass   4: suminf.    0.95709 (4) obj. -10.9532 iterations 2
Cbc0038I Pass   5: suminf.    0.43310 (5) obj. -10.9532 iterations 3
Cbc0038I Pass   6: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass   7: suminf.    1.03818 (4) obj. -10.9532 iterations 3
Cbc0038I Pass   8: suminf.    0.43310 (5) obj. -10.9532 iterations 2
Cbc0038I Pass   9: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  10: suminf.    1.03818 (4) obj. -10.9532 iterations 3
Cbc0038I Pass  11: suminf.    0.95709 (4) obj. -10.9532 iterations 1
Cbc0038I Pass  12: suminf.    0.43310 (5) obj. -10.9532 iterations 3
Cbc0038I Pass  13: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  14: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  15: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  16: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  17: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  18: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  19: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  20: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  21: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  22: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  23: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  24: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  25: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  26: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  27: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  28: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  29: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  30: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  31: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9 rows 6 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9 - took 0.01 seconds
Cbc0012I Integer solution of -9 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -19.533149 to -19.533149 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.02   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 10 (-6) rows, 11 (-3) columns and 37 (-23) elements
Clp1000I sum of infeasibilities 0 - average 0, 3 fixed columns
Coin0506I Presolve 7 (-3) rows, 8 (-3) columns and 23 (-14) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 22.3
Clp0000I Optimal - objective value 22.3
Coin0511I After Postsolve, objective 22.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 23.3
Clp0000I Optimal - objective value 23.3
Clp0000I Optimal - objective value 23.3
Coin0511I After Postsolve, objective 23.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 23.3 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 10 rows, 11 columns (11 integer (11 of which binary)) and 39 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 12.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.41667
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -6.5 iterations 4
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2.11658
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -6.5 iterations 0
Cbc0038I Pass   3: suminf.    0.16281 (1) obj. -2.11658 iterations 1
Cbc0038I Pass   4: suminf.    0.71805 (2) obj. -2.11658 iterations 4
Cbc0038I Pass   5: suminf.    0.71805 (2) obj. -2.11658 iterations 0
Cbc0038I Pass   6: suminf.    0.73974 (2) obj. -2.11658 iterations 1
Cbc0038I Pass   7: suminf.    0.73974 (2) obj. -2.11658 iterations 0
Cbc0038I Pass   8: suminf.    0.34230 (2) obj. -2.11658 iterations 5
Cbc0038I Pass   9: suminf.    0.16281 (1) obj. -2.11658 iterations 2
Cbc0038I Pass  10: suminf.    0.97051 (3) obj. -2.11658 iterations 7
Cbc0038I Pass  11: suminf.    0.97051 (3) obj. -2.11658 iterations 1
Cbc0038I Pass  12: suminf.    0.97051 (3) obj. -2.11658 iterations 1
Cbc0038I Pass  13: suminf.    0.97051 (3) obj. -2.11658 iterations 1
Cbc0038I Pass  14: suminf.    0.94027 (3) obj. -2.11658 iterations 1
Cbc0038I Pass  15: suminf.    0.94027 (3) obj. -2.11658 iterations 0
Cbc0038I Pass  16: suminf.    0.94027 (3) obj. -2.11658 iterations 0
Cbc0038I Pass  17: suminf.    0.73194 (2) obj. -2.11658 iterations 3
Cbc0038I Pass  18: suminf.    0.73194 (2) obj. -2.11658 iterations 2
Cbc0038I Pass  19: suminf.    0.25000 (1) obj. -5 iterations 3
Cbc0038I Pass  20: suminf.    0.49029 (1) obj. -2.11658 iterations 2
Cbc0038I Pass  21: suminf.    0.90770 (3) obj. -2.11658 iterations 2
Cbc0038I Pass  22: suminf.    0.58333 (2) obj. -6.33333 iterations 2
Cbc0038I Pass  23: suminf.    0.58333 (2) obj. -6.33333 iterations 0
Cbc0038I Pass  24: suminf.    0.04908 (1) obj. -2.11658 iterations 3
Cbc0038I Solution found of -3
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 11 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -3 to -9 (0.01 seconds)
Cbc0038I Round again with cutoff of -10.4333
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  25: suminf.    0.90554 (3) obj. -10.4333 iterations 2
Cbc0038I Pass  26: suminf.    1.00128 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  27: suminf.    0.90554 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  28: suminf.    1.08333 (3) obj. -11.5 iterations 2
Cbc0038I Pass  29: suminf.    1.08333 (3) obj. -11.5 iterations 0
Cbc0038I Pass  30: suminf.    1.00128 (3) obj. -10.4333 iterations 4
Cbc0038I Pass  31: suminf.    1.00128 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  32: suminf.    2.30547 (5) obj. -10.4333 iterations 5
Cbc0038I Pass  33: suminf.    1.79996 (4) obj. -10.4333 iterations 2
Cbc0038I Pass  34: suminf.    1.79996 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  35: suminf.    1.73335 (4) obj. -10.4333 iterations 2
Cbc0038I Pass  36: suminf.    1.63589 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  37: suminf.    1.79996 (4) obj. -10.4333 iterations 3
Cbc0038I Pass  38: suminf.    1.63333 (4) obj. -10.4333 iterations 3
Cbc0038I Pass  39: suminf.    1.63333 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  40: suminf.    1.79996 (4) obj. -10.4333 iterations 4
Cbc0038I Pass  41: suminf.    1.79996 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  42: suminf.    1.73335 (4) obj. -10.4333 iterations 2
Cbc0038I Pass  43: suminf.    1.63589 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  44: suminf.    1.79996 (4) obj. -10.4333 iterations 3
Cbc0038I Pass  45: suminf.    1.49225 (5) obj. -10.4333 iterations 4
Cbc0038I Pass  46: suminf.    0.90554 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  47: suminf.    0.90554 (3) obj. -10.4333 iterations 0
Cbc0038I Pass  48: suminf.    1.12776 (4) obj. -10.4333 iterations 3
Cbc0038I Pass  49: suminf.    1.00128 (3) obj. -10.4333 iterations 3
Cbc0038I Pass  50: suminf.    0.90554 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  51: suminf.    1.08333 (3) obj. -11.5 iterations 2
Cbc0038I Pass  52: suminf.    0.90554 (3) obj. -10.4333 iterations 3
Cbc0038I Pass  53: suminf.    2.31671 (6) obj. -10.4333 iterations 4
Cbc0038I Pass  54: suminf.    2.30547 (5) obj. -10.4333 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9 - took 0.01 seconds
Cbc0012I Integer solution of -9 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -12.166667 to -12.166667 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 9 (-8) rows, 6 (-3) columns and 23 (-16) elements
Clp1000I sum of infeasibilities 0 - average 0, 0 fixed columns
Coin0506I Presolve 9 (0) rows, 6 (0) columns and 23 (0) elements
Clp0029I End of values pass after 6 iterations
Clp0000I Optimal - objective value 19.533149
Clp0000I Optimal - objective value 19.533149
Coin0511I After Postsolve, objective 19.533149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 19.533149
Clp0000I Optimal - objective value 19.533149
Clp0000I Optimal - objective value 19.533149
Coin0511I After Postsolve, objective 19.533149, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 19.53314917 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 9 rows, 6 columns (5 integer (5 of which binary)) and 23 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.974%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 5 integers unsatisfied sum - 1.43402
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 0 iterations 4
Cbc0038I Solution found of 0
Cbc0038I Relaxing continuous gives 0
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9 rows 6 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound improved solution from 0 to -9 (0.01 seconds)
Cbc0038I Round again with cutoff of -10.9532
Cbc0038I Pass   2: suminf.    0.73324 (3) obj. -10.9532 iterations 2
Cbc0038I Pass   3: suminf.    1.29294 (4) obj. -10.9532 iterations 3
Cbc0038I Pass   4: suminf.    0.95709 (4) obj. -10.9532 iterations 2
Cbc0038I Pass   5: suminf.    0.43310 (5) obj. -10.9532 iterations 3
Cbc0038I Pass   6: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass   7: suminf.    1.03818 (4) obj. -10.9532 iterations 3
Cbc0038I Pass   8: suminf.    0.43310 (5) obj. -10.9532 iterations 2
Cbc0038I Pass   9: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  10: suminf.    1.03818 (4) obj. -10.9532 iterations 3
Cbc0038I Pass  11: suminf.    0.95709 (4) obj. -10.9532 iterations 1
Cbc0038I Pass  12: suminf.    0.43310 (5) obj. -10.9532 iterations 3
Cbc0038I Pass  13: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  14: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  15: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  16: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  17: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  18: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  19: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  20: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  21: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  22: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  23: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  24: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  25: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  26: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  27: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  28: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  29: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  30: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I Pass  31: suminf.    0.43310 (5) obj. -10.9532 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 0 integers at bound fixed and 0 continuous
Cbc0038I Full problem 9 rows 6 columns, reduced to 9 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9 - took 0.00 seconds
Cbc0012I Integer solution of -9 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -19.533149 to -19.533149 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 10 (-7) rows, 11 (-4) columns and 37 (-24) elements
Clp1000I sum of infeasibilities 0 - average 0, 3 fixed columns
Coin0506I Presolve 7 (-3) rows, 8 (-3) columns and 23 (-14) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 22.3
Clp0000I Optimal - objective value 22.3
Coin0511I After Postsolve, objective 22.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 23.3
Clp0000I Optimal - objective value 23.3
Clp0000I Optimal - objective value 23.3
Coin0511I After Postsolve, objective 23.3, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 23.3 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 10 rows, 11 columns (11 integer (11 of which binary)) and 39 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 12.253%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 1.41667
Cbc0038I Pass   1: suminf.    0.50000 (1) obj. -6.5 iterations 4
Cbc0038I Solution found of 0
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.00 seconds)
Cbc0038I Round again with cutoff of -2.11658
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.50000 (1) obj. -6.5 iterations 0
Cbc0038I Pass   3: suminf.    0.16281 (1) obj. -2.11658 iterations 1
Cbc0038I Pass   4: suminf.    0.71805 (2) obj. -2.11658 iterations 4
Cbc0038I Pass   5: suminf.    0.71805 (2) obj. -2.11658 iterations 0
Cbc0038I Pass   6: suminf.    0.73974 (2) obj. -2.11658 iterations 1
Cbc0038I Pass   7: suminf.    0.73974 (2) obj. -2.11658 iterations 0
Cbc0038I Pass   8: suminf.    0.34230 (2) obj. -2.11658 iterations 5
Cbc0038I Pass   9: suminf.    0.16281 (1) obj. -2.11658 iterations 2
Cbc0038I Pass  10: suminf.    0.97051 (3) obj. -2.11658 iterations 7
Cbc0038I Pass  11: suminf.    0.97051 (3) obj. -2.11658 iterations 1
Cbc0038I Pass  12: suminf.    0.97051 (3) obj. -2.11658 iterations 1
Cbc0038I Pass  13: suminf.    0.97051 (3) obj. -2.11658 iterations 1
Cbc0038I Pass  14: suminf.    0.94027 (3) obj. -2.11658 iterations 1
Cbc0038I Pass  15: suminf.    0.94027 (3) obj. -2.11658 iterations 0
Cbc0038I Pass  16: suminf.    0.94027 (3) obj. -2.11658 iterations 0
Cbc0038I Pass  17: suminf.    0.73194 (2) obj. -2.11658 iterations 3
Cbc0038I Pass  18: suminf.    0.73194 (2) obj. -2.11658 iterations 2
Cbc0038I Pass  19: suminf.    0.25000 (1) obj. -5 iterations 3
Cbc0038I Pass  20: suminf.    0.49029 (1) obj. -2.11658 iterations 2
Cbc0038I Pass  21: suminf.    0.90770 (3) obj. -2.11658 iterations 2
Cbc0038I Pass  22: suminf.    0.58333 (2) obj. -6.33333 iterations 2
Cbc0038I Pass  23: suminf.    0.58333 (2) obj. -6.33333 iterations 0
Cbc0038I Pass  24: suminf.    0.04908 (1) obj. -2.11658 iterations 3
Cbc0038I Solution found of -3
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 11 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -3 to -9 (0.00 seconds)
Cbc0038I Round again with cutoff of -10.4333
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  25: suminf.    0.90554 (3) obj. -10.4333 iterations 2
Cbc0038I Pass  26: suminf.    1.00128 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  27: suminf.    0.90554 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  28: suminf.    1.08333 (3) obj. -11.5 iterations 2
Cbc0038I Pass  29: suminf.    1.08333 (3) obj. -11.5 iterations 0
Cbc0038I Pass  30: suminf.    1.00128 (3) obj. -10.4333 iterations 4
Cbc0038I Pass  31: suminf.    1.00128 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  32: suminf.    2.30547 (5) obj. -10.4333 iterations 5
Cbc0038I Pass  33: suminf.    1.79996 (4) obj. -10.4333 iterations 2
Cbc0038I Pass  34: suminf.    1.79996 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  35: suminf.    1.73335 (4) obj. -10.4333 iterations 2
Cbc0038I Pass  36: suminf.    1.63589 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  37: suminf.    1.79996 (4) obj. -10.4333 iterations 3
Cbc0038I Pass  38: suminf.    1.63333 (4) obj. -10.4333 iterations 3
Cbc0038I Pass  39: suminf.    1.63333 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  40: suminf.    1.79996 (4) obj. -10.4333 iterations 4
Cbc0038I Pass  41: suminf.    1.79996 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  42: suminf.    1.73335 (4) obj. -10.4333 iterations 2
Cbc0038I Pass  43: suminf.    1.63589 (4) obj. -10.4333 iterations 1
Cbc0038I Pass  44: suminf.    1.79996 (4) obj. -10.4333 iterations 3
Cbc0038I Pass  45: suminf.    1.49225 (5) obj. -10.4333 iterations 4
Cbc0038I Pass  46: suminf.    0.90554 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  47: suminf.    0.90554 (3) obj. -10.4333 iterations 0
Cbc0038I Pass  48: suminf.    1.12776 (4) obj. -10.4333 iterations 3
Cbc0038I Pass  49: suminf.    1.00128 (3) obj. -10.4333 iterations 3
Cbc0038I Pass  50: suminf.    0.90554 (3) obj. -10.4333 iterations 1
Cbc0038I Pass  51: suminf.    1.08333 (3) obj. -11.5 iterations 2
Cbc0038I Pass  52: suminf.    0.90554 (3) obj. -10.4333 iterations 3
Cbc0038I Pass  53: suminf.    2.31671 (6) obj. -10.4333 iterations 4
Cbc0038I Pass  54: suminf.    2.30547 (5) obj. -10.4333 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 10 rows 11 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I After 0.01 seconds - Feasibility pump exiting with objective of -9 - took 0.00 seconds
Cbc0012I Integer solution of -9 found by feasibility pump after 0 iterations and 0 nodes (0.01 seconds)
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0013I At root node, 0 cuts changed objective from -12.166667 to -12.166667 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 1 row cuts average 0.0 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -9, took 0 iterations and 0 nodes (0.01 seconds)
Cbc0035I Maximum depth 0, 2 variables fixed on reduced cost
Total time (CPU seconds):       0.01   (Wallclock seconds):       0.01

