Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 20 (-5) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 4.68384e-06 - average 1.3776e-07, 1 fixed columns
Coin0506I Presolve 28 (-6) rows, 17 (-3) columns and 84 (-18) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Coin0511I After Postsolve, objective 280.16287, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Coin0511I After Postsolve, objective 280.16287, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 280.1628745 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 20 columns (19 integer (19 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.14737
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -135.629 iterations 11
Cbc0038I Solution found of -135.629
Cbc0038I Relaxing continuous gives -135.629
Cbc0038I Rounding solution of -155.571 is better than previous of -135.629

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -164.265
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.19245 (1) obj. -164.265 iterations 1
Cbc0038I Pass   3: suminf.    0.19889 (1) obj. -164.265 iterations 1
Cbc0038I Pass   4: suminf.    1.20811 (4) obj. -164.265 iterations 7
Cbc0038I Pass   5: suminf.    0.48256 (3) obj. -164.265 iterations 5
Cbc0038I Pass   6: suminf.    0.95075 (3) obj. -164.265 iterations 5
Cbc0038I Pass   7: suminf.    0.73027 (3) obj. -164.265 iterations 2
Cbc0038I Pass   8: suminf.    1.05301 (4) obj. -164.265 iterations 4
Cbc0038I Pass   9: suminf.    0.93952 (3) obj. -164.265 iterations 1
Cbc0038I Pass  10: suminf.    0.89824 (3) obj. -164.265 iterations 2
Cbc0038I Pass  11: suminf.    1.26261 (6) obj. -164.265 iterations 6
Cbc0038I Pass  12: suminf.    1.22815 (4) obj. -164.265 iterations 1
Cbc0038I Pass  13: suminf.    1.27855 (3) obj. -164.265 iterations 3
Cbc0038I Pass  14: suminf.    1.27855 (3) obj. -164.265 iterations 0
Cbc0038I Pass  15: suminf.    1.06964 (5) obj. -164.265 iterations 4
Cbc0038I Pass  16: suminf.    1.20155 (3) obj. -164.265 iterations 4
Cbc0038I Pass  17: suminf.    1.20155 (3) obj. -164.265 iterations 0
Cbc0038I Pass  18: suminf.    0.72541 (3) obj. -164.265 iterations 4
Cbc0038I Pass  19: suminf.    0.72541 (3) obj. -164.265 iterations 0
Cbc0038I Pass  20: suminf.    1.20558 (4) obj. -164.265 iterations 6
Cbc0038I Pass  21: suminf.    1.16737 (5) obj. -164.265 iterations 2
Cbc0038I Pass  22: suminf.    1.34808 (3) obj. -164.265 iterations 3
Cbc0038I Pass  23: suminf.    0.70742 (3) obj. -164.265 iterations 4
Cbc0038I Pass  24: suminf.    1.41308 (4) obj. -164.265 iterations 4
Cbc0038I Pass  25: suminf.    1.41308 (4) obj. -164.265 iterations 0
Cbc0038I Pass  26: suminf.    1.45917 (5) obj. -164.265 iterations 2
Cbc0038I Pass  27: suminf.    1.16737 (5) obj. -164.265 iterations 3
Cbc0038I Pass  28: suminf.    1.34808 (3) obj. -164.265 iterations 3
Cbc0038I Pass  29: suminf.    0.70742 (3) obj. -164.265 iterations 4
Cbc0038I Pass  30: suminf.    1.41308 (4) obj. -164.265 iterations 4
Cbc0038I Pass  31: suminf.    1.41308 (4) obj. -164.265 iterations 0
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -179.913
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.34311 (3) obj. -179.913 iterations 2
Cbc0038I Pass  32: suminf.    0.42571 (2) obj. -179.913 iterations 3
Cbc0038I Pass  33: suminf.    0.42571 (2) obj. -179.913 iterations 0
Cbc0038I Pass  34: suminf.    0.46583 (4) obj. -179.913 iterations 4
Cbc0038I Pass  35: suminf.    0.45657 (3) obj. -179.913 iterations 1
Cbc0038I Pass  36: suminf.    0.57323 (2) obj. -179.913 iterations 3
Cbc0038I Pass  37: suminf.    0.57323 (2) obj. -179.913 iterations 0
Cbc0038I Pass  38: suminf.    0.60647 (3) obj. -179.913 iterations 2
Cbc0038I Pass  39: suminf.    0.60647 (3) obj. -179.913 iterations 0
Cbc0038I Pass  40: suminf.    0.80916 (2) obj. -179.913 iterations 2
Cbc0038I Pass  41: suminf.    0.80916 (2) obj. -179.913 iterations 0
Cbc0038I Pass  42: suminf.    0.80758 (3) obj. -179.913 iterations 2
Cbc0038I Pass  43: suminf.    0.80758 (3) obj. -179.913 iterations 0
Cbc0038I Pass  44: suminf.    0.88743 (2) obj. -179.913 iterations 2
Cbc0038I Pass  45: suminf.    0.88743 (2) obj. -179.913 iterations 0
Cbc0038I Pass  46: suminf.    0.72885 (3) obj. -179.913 iterations 2
Cbc0038I Pass  47: suminf.    0.72885 (3) obj. -179.913 iterations 0
Cbc0038I Pass  48: suminf.    1.02316 (3) obj. -179.913 iterations 2
Cbc0038I Pass  49: suminf.    0.99363 (3) obj. -179.913 iterations 1
Cbc0038I Pass  50: suminf.    0.98604 (4) obj. -179.913 iterations 4
Cbc0038I Pass  51: suminf.    0.95178 (5) obj. -179.913 iterations 1
Cbc0038I Pass  52: suminf.    1.29806 (4) obj. -179.913 iterations 3
Cbc0038I Pass  53: suminf.    1.07285 (3) obj. -179.913 iterations 3
Cbc0038I Pass  54: suminf.    1.05821 (4) obj. -179.913 iterations 2
Cbc0038I Pass  55: suminf.    1.05821 (4) obj. -179.913 iterations 0
Cbc0038I Pass  56: suminf.    3.12996 (8) obj. -179.913 iterations 8
Cbc0038I Pass  57: suminf.    2.04341 (6) obj. -179.913 iterations 4
Cbc0038I Pass  58: suminf.    1.80142 (7) obj. -179.913 iterations 4
Cbc0038I Pass  59: suminf.    0.93960 (4) obj. -179.913 iterations 5
Cbc0038I Pass  60: suminf.    0.93960 (4) obj. -179.913 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -155.572 - took 0.02 seconds
Cbc0012I Integer solution of -155.5715 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 20 columns, reduced to 12 rows 10 columns
Cbc0012I Integer solution of -184.7715 found by DiveCoefficient after 90 iterations and 0 nodes (0.04 seconds)
Cbc0031I 7 added rows had average density of 10.714286
Cbc0013I At root node, 7 cuts changed objective from -242.5048 to -184.7715 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 124 row cuts average 3.8 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 80 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -184.7715, took 90 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-13) rows, 39 (-7) columns and 298 (-90) elements
Clp1000I sum of infeasibilities 8.88178e-16 - average 2.53765e-17, 16 fixed columns
Coin0506I Presolve 10 (-25) rows, 12 (-27) columns and 49 (-249) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 337.1327
Clp0000I Optimal - objective value 337.1327
Coin0511I After Postsolve, objective 337.1327, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0649394 - largest nonzero change 2.5841054e-05 ( 0.0025841054%) - largest zero change 1.8653502e-05
Clp0000I Optimal - objective value 349.04488
Clp0000I Optimal - objective value 349.04488
Clp0000I Optimal - objective value 349.04488
Coin0511I After Postsolve, objective 349.04488, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 349.0448818 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 36 rows, 40 columns (40 integer (40 of which binary)) and 310 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.920%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.84381
Cbc0038I Pass   1: suminf.    2.37222 (6) obj. -229.529 iterations 19
Cbc0038I Solution found of -190.457
Cbc0038I Rounding solution of -202.286 is better than previous of -190.457

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 2 rows 2 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -210.784
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    2.37222 (6) obj. -229.529 iterations 0
Cbc0038I Pass   3: suminf.    0.13660 (1) obj. -210.784 iterations 10
Cbc0038I Pass   4: suminf.    0.15976 (1) obj. -214.229 iterations 1
Cbc0038I Pass   5: suminf.    2.48799 (7) obj. -210.784 iterations 10
Cbc0038I Pass   6: suminf.    0.83071 (3) obj. -210.784 iterations 7
Cbc0038I Pass   7: suminf.    0.53780 (2) obj. -215.583 iterations 2
Cbc0038I Pass   8: suminf.    0.50555 (2) obj. -210.784 iterations 1
Cbc0038I Pass   9: suminf.    0.41475 (2) obj. -210.784 iterations 1
Cbc0038I Pass  10: suminf.    0.41475 (2) obj. -210.784 iterations 0
Cbc0038I Pass  11: suminf.    2.17337 (6) obj. -210.784 iterations 7
Cbc0038I Pass  12: suminf.    1.45036 (4) obj. -210.784 iterations 3
Cbc0038I Pass  13: suminf.    0.50555 (2) obj. -210.784 iterations 5
Cbc0038I Pass  14: suminf.    0.22592 (2) obj. -210.784 iterations 1
Cbc0038I Pass  15: suminf.    0.22592 (2) obj. -210.784 iterations 0
Cbc0038I Pass  16: suminf.    0.60488 (2) obj. -225.563 iterations 1
Cbc0038I Pass  17: suminf.    1.88012 (6) obj. -210.784 iterations 7
Cbc0038I Pass  18: suminf.    1.88012 (6) obj. -210.784 iterations 1
Cbc0038I Pass  19: suminf.    0.89973 (3) obj. -210.784 iterations 4
Cbc0038I Pass  20: suminf.    0.69538 (3) obj. -210.784 iterations 2
Cbc0038I Pass  21: suminf.    0.00122 (1) obj. -221.124 iterations 1
Cbc0038I Solution found of -220.943
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 4 rows 5 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -234.207
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  22: suminf.    2.40366 (7) obj. -234.207 iterations 1
Cbc0038I Pass  23: suminf.    0.68631 (3) obj. -234.207 iterations 13
Cbc0038I Pass  24: suminf.    0.68631 (3) obj. -234.207 iterations 2
Cbc0038I Pass  25: suminf.    0.83964 (3) obj. -234.207 iterations 2
Cbc0038I Pass  26: suminf.    0.68631 (3) obj. -234.207 iterations 3
Cbc0038I Pass  27: suminf.    3.42742 (9) obj. -234.207 iterations 12
Cbc0038I Pass  28: suminf.    2.89247 (8) obj. -234.207 iterations 4
Cbc0038I Pass  29: suminf.    2.89247 (8) obj. -234.207 iterations 0
Cbc0038I Pass  30: suminf.    4.15243 (11) obj. -234.207 iterations 5
Cbc0038I Pass  31: suminf.    3.34144 (9) obj. -234.207 iterations 2
Cbc0038I Pass  32: suminf.    1.84564 (6) obj. -234.207 iterations 4
Cbc0038I Pass  33: suminf.    1.24460 (4) obj. -234.207 iterations 5
Cbc0038I Pass  34: suminf.    0.68631 (3) obj. -234.207 iterations 4
Cbc0038I Pass  35: suminf.    0.83964 (3) obj. -234.207 iterations 2
Cbc0038I Pass  36: suminf.    0.68631 (3) obj. -234.207 iterations 3
Cbc0038I Pass  37: suminf.    4.72060 (14) obj. -234.207 iterations 16
Cbc0038I Pass  38: suminf.    4.29899 (13) obj. -234.207 iterations 2
Cbc0038I Pass  39: suminf.    2.73080 (7) obj. -234.207 iterations 12
Cbc0038I Pass  40: suminf.    2.29564 (6) obj. -234.207 iterations 2
Cbc0038I Pass  41: suminf.    0.68631 (3) obj. -234.207 iterations 5
Cbc0038I Pass  42: suminf.    0.83964 (3) obj. -234.207 iterations 2
Cbc0038I Pass  43: suminf.    0.68631 (3) obj. -234.207 iterations 3
Cbc0038I Pass  44: suminf.    2.41728 (7) obj. -234.207 iterations 11
Cbc0038I Pass  45: suminf.    2.14680 (6) obj. -234.207 iterations 3
Cbc0038I Pass  46: suminf.    1.60038 (6) obj. -234.207 iterations 3
Cbc0038I Pass  47: suminf.    1.56071 (5) obj. -234.207 iterations 1
Cbc0038I Pass  48: suminf.    0.55637 (3) obj. -240.952 iterations 8
Cbc0038I Pass  49: suminf.    0.16351 (5) obj. -234.207 iterations 3
Cbc0038I Pass  50: suminf.    2.36996 (6) obj. -234.207 iterations 5
Cbc0038I Pass  51: suminf.    2.93078 (9) obj. -234.207 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 36 rows 40 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -220.943 - took 0.02 seconds
Cbc0012I Integer solution of -220.9429 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 36 rows 40 columns, reduced to 4 rows 5 columns
Cbc0031I 4 added rows had average density of 9
Cbc0013I At root node, 13 cuts changed objective from -287.26279 to -218.63435 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 113 row cuts average 2.0 elements, 24 column cuts (24 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 8 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 10 row cuts average 10.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 22.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -220.9429, took 31 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 20 (-5) columns and 102 (-33) elements
Clp1000I sum of infeasibilities 4.68384e-06 - average 1.3776e-07, 1 fixed columns
Coin0506I Presolve 28 (-6) rows, 17 (-3) columns and 84 (-18) elements
Clp0029I End of values pass after 17 iterations
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Coin0511I After Postsolve, objective 280.16287, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Clp0000I Optimal - objective value 280.16287
Coin0511I After Postsolve, objective 280.16287, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 280.1628745 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0004I processed model has 33 rows, 20 columns (19 integer (19 of which binary)) and 104 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 10 integers unsatisfied sum - 3.14737
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -135.629 iterations 11
Cbc0038I Solution found of -135.629
Cbc0038I Relaxing continuous gives -135.629
Cbc0038I Rounding solution of -155.571 is better than previous of -135.629

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 12 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -164.265
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.19245 (1) obj. -164.265 iterations 1
Cbc0038I Pass   3: suminf.    0.19889 (1) obj. -164.265 iterations 1
Cbc0038I Pass   4: suminf.    1.20811 (4) obj. -164.265 iterations 7
Cbc0038I Pass   5: suminf.    0.48256 (3) obj. -164.265 iterations 5
Cbc0038I Pass   6: suminf.    0.95075 (3) obj. -164.265 iterations 5
Cbc0038I Pass   7: suminf.    0.73027 (3) obj. -164.265 iterations 2
Cbc0038I Pass   8: suminf.    1.05301 (4) obj. -164.265 iterations 4
Cbc0038I Pass   9: suminf.    0.93952 (3) obj. -164.265 iterations 1
Cbc0038I Pass  10: suminf.    0.89824 (3) obj. -164.265 iterations 2
Cbc0038I Pass  11: suminf.    1.26261 (6) obj. -164.265 iterations 6
Cbc0038I Pass  12: suminf.    1.22815 (4) obj. -164.265 iterations 1
Cbc0038I Pass  13: suminf.    1.27855 (3) obj. -164.265 iterations 3
Cbc0038I Pass  14: suminf.    1.27855 (3) obj. -164.265 iterations 0
Cbc0038I Pass  15: suminf.    1.06964 (5) obj. -164.265 iterations 4
Cbc0038I Pass  16: suminf.    1.20155 (3) obj. -164.265 iterations 4
Cbc0038I Pass  17: suminf.    1.20155 (3) obj. -164.265 iterations 0
Cbc0038I Pass  18: suminf.    0.72541 (3) obj. -164.265 iterations 4
Cbc0038I Pass  19: suminf.    0.72541 (3) obj. -164.265 iterations 0
Cbc0038I Pass  20: suminf.    1.20558 (4) obj. -164.265 iterations 6
Cbc0038I Pass  21: suminf.    1.16737 (5) obj. -164.265 iterations 2
Cbc0038I Pass  22: suminf.    1.34808 (3) obj. -164.265 iterations 3
Cbc0038I Pass  23: suminf.    0.70742 (3) obj. -164.265 iterations 4
Cbc0038I Pass  24: suminf.    1.41308 (4) obj. -164.265 iterations 4
Cbc0038I Pass  25: suminf.    1.41308 (4) obj. -164.265 iterations 0
Cbc0038I Pass  26: suminf.    1.45917 (5) obj. -164.265 iterations 2
Cbc0038I Pass  27: suminf.    1.16737 (5) obj. -164.265 iterations 3
Cbc0038I Pass  28: suminf.    1.34808 (3) obj. -164.265 iterations 3
Cbc0038I Pass  29: suminf.    0.70742 (3) obj. -164.265 iterations 4
Cbc0038I Pass  30: suminf.    1.41308 (4) obj. -164.265 iterations 4
Cbc0038I Pass  31: suminf.    1.41308 (4) obj. -164.265 iterations 0
Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 27 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -179.913
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.34311 (3) obj. -179.913 iterations 2
Cbc0038I Pass  32: suminf.    0.42571 (2) obj. -179.913 iterations 3
Cbc0038I Pass  33: suminf.    0.42571 (2) obj. -179.913 iterations 0
Cbc0038I Pass  34: suminf.    0.46583 (4) obj. -179.913 iterations 4
Cbc0038I Pass  35: suminf.    0.45657 (3) obj. -179.913 iterations 1
Cbc0038I Pass  36: suminf.    0.57323 (2) obj. -179.913 iterations 3
Cbc0038I Pass  37: suminf.    0.57323 (2) obj. -179.913 iterations 0
Cbc0038I Pass  38: suminf.    0.60647 (3) obj. -179.913 iterations 2
Cbc0038I Pass  39: suminf.    0.60647 (3) obj. -179.913 iterations 0
Cbc0038I Pass  40: suminf.    0.80916 (2) obj. -179.913 iterations 2
Cbc0038I Pass  41: suminf.    0.80916 (2) obj. -179.913 iterations 0
Cbc0038I Pass  42: suminf.    0.80758 (3) obj. -179.913 iterations 2
Cbc0038I Pass  43: suminf.    0.80758 (3) obj. -179.913 iterations 0
Cbc0038I Pass  44: suminf.    0.88743 (2) obj. -179.913 iterations 2
Cbc0038I Pass  45: suminf.    0.88743 (2) obj. -179.913 iterations 0
Cbc0038I Pass  46: suminf.    0.72885 (3) obj. -179.913 iterations 2
Cbc0038I Pass  47: suminf.    0.72885 (3) obj. -179.913 iterations 0
Cbc0038I Pass  48: suminf.    1.02316 (3) obj. -179.913 iterations 2
Cbc0038I Pass  49: suminf.    0.99363 (3) obj. -179.913 iterations 1
Cbc0038I Pass  50: suminf.    0.98604 (4) obj. -179.913 iterations 4
Cbc0038I Pass  51: suminf.    0.95178 (5) obj. -179.913 iterations 1
Cbc0038I Pass  52: suminf.    1.29806 (4) obj. -179.913 iterations 3
Cbc0038I Pass  53: suminf.    1.07285 (3) obj. -179.913 iterations 3
Cbc0038I Pass  54: suminf.    1.05821 (4) obj. -179.913 iterations 2
Cbc0038I Pass  55: suminf.    1.05821 (4) obj. -179.913 iterations 0
Cbc0038I Pass  56: suminf.    3.12996 (8) obj. -179.913 iterations 8
Cbc0038I Pass  57: suminf.    2.04341 (6) obj. -179.913 iterations 4
Cbc0038I Pass  58: suminf.    1.80142 (7) obj. -179.913 iterations 4
Cbc0038I Pass  59: suminf.    0.93960 (4) obj. -179.913 iterations 5
Cbc0038I Pass  60: suminf.    0.93960 (4) obj. -179.913 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 20 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -155.572 - took 0.02 seconds
Cbc0012I Integer solution of -155.5715 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 33 rows 20 columns, reduced to 12 rows 10 columns
Cbc0012I Integer solution of -184.7715 found by DiveCoefficient after 90 iterations and 0 nodes (0.04 seconds)
Cbc0031I 7 added rows had average density of 10.714286
Cbc0013I At root node, 7 cuts changed objective from -242.5048 to -184.7715 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 124 row cuts average 3.8 elements, 3 column cuts (3 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 46 row cuts average 14.2 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 16 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 80 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0001I Search completed - best objective -184.7715, took 90 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 34 (-15) rows, 38 (-9) columns and 289 (-100) elements
Clp1000I sum of infeasibilities 9.86463e-09 - average 2.90136e-10, 33 fixed columns
Coin0506I Presolve 3 (-31) rows, 5 (-33) columns and 12 (-277) elements
Clp0029I End of values pass after 4 iterations
Clp0000I Optimal - objective value 213.62273
Clp0000I Optimal - objective value 213.62273
Coin0511I After Postsolve, objective 213.62273, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0795029 - largest nonzero change 1.6348245e-05 ( 0.0016348245%) - largest zero change 2.4903109e-05
Clp0000I Optimal - objective value 318.55866
Clp0000I Optimal - objective value 318.55866
Clp0000I Optimal - objective value 318.55866
Coin0511I After Postsolve, objective 318.55866, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 318.558657 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 16 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 39 columns (39 integer (39 of which binary)) and 298 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.056%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 22 integers unsatisfied sum - 7.14479
Cbc0038I Pass   1: suminf.    1.25000 (5) obj. -139.379 iterations 15
Cbc0038I Pass   2: suminf.    1.25000 (5) obj. -139.379 iterations 0
Cbc0038I Solution found of -126.629
Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 4 rows 6 columns
Cbc0038I Mini branch and bound improved solution from -126.629 to -145.343 (0.01 seconds)
Cbc0038I Round again with cutoff of -153.777
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.35311 (8) obj. -153.777 iterations 1
Cbc0038I Pass   4: suminf.    2.35311 (8) obj. -153.777 iterations 0
Cbc0038I Pass   5: suminf.    0.39167 (2) obj. -153.777 iterations 11
Cbc0038I Pass   6: suminf.    0.45912 (2) obj. -154.991 iterations 2
Cbc0038I Pass   7: suminf.    1.82745 (7) obj. -153.777 iterations 5
Cbc0038I Pass   8: suminf.    0.76309 (3) obj. -153.777 iterations 4
Cbc0038I Pass   9: suminf.    0.39167 (2) obj. -153.777 iterations 4
Cbc0038I Pass  10: suminf.    0.81504 (4) obj. -153.777 iterations 6
Cbc0038I Pass  11: suminf.    0.59082 (3) obj. -153.777 iterations 1
Cbc0038I Pass  12: suminf.    0.48363 (4) obj. -153.777 iterations 3
Cbc0038I Pass  13: suminf.    0.48363 (4) obj. -153.777 iterations 0
Cbc0038I Pass  14: suminf.    0.23902 (1) obj. -156.91 iterations 5
Cbc0038I Pass  15: suminf.    0.21797 (1) obj. -153.777 iterations 1
Cbc0038I Pass  16: suminf.    1.88778 (6) obj. -153.777 iterations 9
Cbc0038I Pass  17: suminf.    1.68454 (5) obj. -153.777 iterations 1
Cbc0038I Pass  18: suminf.    0.70030 (2) obj. -153.777 iterations 4
Cbc0038I Pass  19: suminf.    0.70030 (2) obj. -153.777 iterations 0
Cbc0038I Pass  20: suminf.    0.72073 (2) obj. -154.573 iterations 2
Cbc0038I Pass  21: suminf.    0.71538 (2) obj. -153.777 iterations 1
Cbc0038I Pass  22: suminf.    1.29237 (5) obj. -153.777 iterations 6
Cbc0038I Pass  23: suminf.    1.11294 (5) obj. -153.777 iterations 1
Cbc0038I Pass  24: suminf.    1.19729 (4) obj. -153.777 iterations 4
Cbc0038I Pass  25: suminf.    1.11109 (3) obj. -153.777 iterations 2
Cbc0038I Pass  26: suminf.    0.55409 (2) obj. -153.777 iterations 1
Cbc0038I Pass  27: suminf.    0.39392 (2) obj. -153.777 iterations 1
Cbc0038I Pass  28: suminf.    0.39392 (2) obj. -153.777 iterations 0
Cbc0038I Pass  29: suminf.    0.61098 (2) obj. -162.242 iterations 2
Cbc0038I Pass  30: suminf.    1.94266 (6) obj. -153.777 iterations 8
Cbc0038I Pass  31: suminf.    1.41682 (5) obj. -153.777 iterations 4
Cbc0038I Pass  32: suminf.    2.51961 (8) obj. -153.777 iterations 15
Cbc0038I Rounding solution of -176.657 is better than previous of -145.343

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -187.262
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    2.58609 (11) obj. -187.262 iterations 2
Cbc0038I Pass  33: suminf.    2.58266 (9) obj. -187.262 iterations 1
Cbc0038I Pass  34: suminf.    1.24893 (5) obj. -187.262 iterations 8
Cbc0038I Pass  35: suminf.    0.94816 (3) obj. -187.262 iterations 2
Cbc0038I Pass  36: suminf.    0.57355 (2) obj. -187.262 iterations 2
Cbc0038I Pass  37: suminf.    0.57355 (2) obj. -187.262 iterations 0
Cbc0038I Pass  38: suminf.    0.67806 (2) obj. -191.338 iterations 1
Cbc0038I Pass  39: suminf.    0.65066 (2) obj. -187.262 iterations 1
Cbc0038I Pass  40: suminf.    2.20179 (7) obj. -187.262 iterations 9
Cbc0038I Pass  41: suminf.    2.20179 (7) obj. -187.262 iterations 0
Cbc0038I Pass  42: suminf.    1.44834 (5) obj. -187.262 iterations 4
Cbc0038I Pass  43: suminf.    0.86469 (4) obj. -187.262 iterations 1
Cbc0038I Pass  44: suminf.    1.01397 (4) obj. -187.262 iterations 1
Cbc0038I Pass  45: suminf.    0.86469 (4) obj. -187.262 iterations 1
Cbc0038I Pass  46: suminf.    0.83006 (5) obj. -187.262 iterations 9
Cbc0038I Pass  47: suminf.    0.10605 (2) obj. -187.262 iterations 6
Cbc0038I Pass  48: suminf.    0.23608 (2) obj. -189.602 iterations 5
Cbc0038I Pass  49: suminf.    1.20845 (6) obj. -187.262 iterations 7
Cbc0038I Pass  50: suminf.    3.18503 (10) obj. -187.262 iterations 10
Cbc0038I Pass  51: suminf.    3.02966 (11) obj. -187.262 iterations 1
Cbc0038I Pass  52: suminf.    1.44056 (6) obj. -187.262 iterations 6
Cbc0038I Pass  53: suminf.    0.07470 (2) obj. -187.262 iterations 3
Cbc0038I Pass  54: suminf.    0.07470 (2) obj. -187.262 iterations 0
Cbc0038I Pass  55: suminf.    0.30225 (2) obj. -191.358 iterations 4
Cbc0038I Pass  56: suminf.    0.75184 (3) obj. -187.262 iterations 4
Cbc0038I Pass  57: suminf.    0.44726 (3) obj. -187.262 iterations 4
Cbc0038I Pass  58: suminf.    1.87607 (6) obj. -187.262 iterations 8
Cbc0038I Pass  59: suminf.    1.09667 (4) obj. -187.262 iterations 6
Cbc0038I Pass  60: suminf.    0.44726 (3) obj. -187.262 iterations 6
Cbc0038I Pass  61: suminf.    1.74444 (6) obj. -187.262 iterations 5
Cbc0038I Rounding solution of -184.772 is better than previous of -176.657

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 17 rows 20 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -199.987
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 4
Cbc0038I Pass  61: suminf.    4.04458 (11) obj. -199.987 iterations 0
Cbc0038I Pass  62: suminf.    3.61732 (13) obj. -199.987 iterations 2
Cbc0038I Pass  63: suminf.    1.30968 (5) obj. -199.987 iterations 12
Cbc0038I Pass  64: suminf.    1.30968 (5) obj. -199.987 iterations 0
Cbc0038I Pass  65: suminf.    1.50184 (5) obj. -199.987 iterations 1
Cbc0038I Pass  66: suminf.    1.30968 (5) obj. -199.987 iterations 2
Cbc0038I Pass  67: suminf.    2.73750 (10) obj. -199.987 iterations 7
Cbc0038I Pass  68: suminf.    2.21123 (7) obj. -199.987 iterations 4
Cbc0038I Pass  69: suminf.    2.21123 (7) obj. -199.987 iterations 0
Cbc0038I Pass  70: suminf.    2.84602 (11) obj. -199.987 iterations 9
Cbc0038I Pass  71: suminf.    0.80958 (4) obj. -199.987 iterations 7
Cbc0038I Pass  72: suminf.    0.64379 (3) obj. -199.987 iterations 2
Cbc0038I Pass  73: suminf.    0.87809 (4) obj. -199.987 iterations 2
Cbc0038I Pass  74: suminf.    1.47140 (7) obj. -199.987 iterations 6
Cbc0038I Pass  75: suminf.    1.19524 (6) obj. -199.987 iterations 4
Cbc0038I Pass  76: suminf.    1.30366 (5) obj. -201.693 iterations 6
Cbc0038I Pass  77: suminf.    3.79182 (11) obj. -199.987 iterations 13
Cbc0038I Pass  78: suminf.    1.64007 (5) obj. -199.987 iterations 8
Cbc0038I Pass  79: suminf.    1.20022 (5) obj. -199.987 iterations 2
Cbc0038I Pass  80: suminf.    1.30968 (5) obj. -199.987 iterations 3
Cbc0038I Pass  81: suminf.    1.30968 (5) obj. -199.987 iterations 0
Cbc0038I Pass  82: suminf.    1.50184 (5) obj. -199.987 iterations 1
Cbc0038I Pass  83: suminf.    1.41897 (5) obj. -199.987 iterations 1
Cbc0038I Pass  84: suminf.    1.41897 (5) obj. -199.987 iterations 0
Cbc0038I Pass  85: suminf.    1.30968 (5) obj. -199.987 iterations 2
Cbc0038I Pass  86: suminf.    1.30968 (5) obj. -199.987 iterations 0
Cbc0038I Pass  87: suminf.    1.50184 (5) obj. -199.987 iterations 1
Cbc0038I Pass  88: suminf.    1.41897 (5) obj. -199.987 iterations 1
Cbc0038I Pass  89: suminf.    1.41897 (5) obj. -199.987 iterations 0
Cbc0038I Pass  90: suminf.    1.30968 (5) obj. -199.987 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 10 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 39 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -184.772 - took 0.03 seconds
Cbc0012I Integer solution of -184.7715 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 34 rows 39 columns, reduced to 2 rows 4 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 2 added rows had average density of 7.5
Cbc0013I At root node, 2 cuts changed objective from -229.67974 to -184.7715 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 89 row cuts average 2.0 elements, 22 column cuts (22 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 1 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -184.7715, took 23 iterations and 0 nodes (0.04 seconds)
Cbc0035I Maximum depth 0, 5 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.04

