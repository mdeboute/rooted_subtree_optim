Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 6.34594e-05 - average 4.63208e-07, 10 fixed columns
Coin0506I Presolve 119 (-18) rows, 66 (-10) columns and 362 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 53.928239
Clp0000I Optimal - objective value 53.928239
Coin0511I After Postsolve, objective 53.928239, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.928239
Clp0000I Optimal - objective value 53.928239
Clp0000I Optimal - objective value 53.928239
Coin0511I After Postsolve, objective 53.928239, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.92823926 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.5562
Cbc0038I Solution found of 8.07349
Cbc0038I Relaxing continuous gives -3.78799
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 86 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -3.78799 to -22.5694 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.7053
Cbc0038I Pass   1: suminf.    4.75669 (49) obj. -25.7053 iterations 32
Cbc0038I Pass   2: suminf.    1.46530 (8) obj. -25.7053 iterations 62
Cbc0038I Pass   3: suminf.    0.85201 (6) obj. -25.7053 iterations 4
Cbc0038I Pass   4: suminf.    1.98268 (6) obj. -25.7053 iterations 12
Cbc0038I Pass   5: suminf.    1.98268 (6) obj. -25.7053 iterations 0
Cbc0038I Pass   6: suminf.    1.91117 (5) obj. -25.7053 iterations 3
Cbc0038I Pass   7: suminf.    1.44096 (5) obj. -25.7053 iterations 1
Cbc0038I Pass   8: suminf.    1.41473 (4) obj. -25.7053 iterations 5
Cbc0038I Pass   9: suminf.    1.40747 (5) obj. -25.7053 iterations 1
Cbc0038I Pass  10: suminf.    1.85886 (5) obj. -25.7053 iterations 3
Cbc0038I Pass  11: suminf.    1.85886 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  12: suminf.    1.29119 (5) obj. -25.7053 iterations 7
Cbc0038I Pass  13: suminf.    1.29119 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  14: suminf.    1.51699 (5) obj. -25.7053 iterations 8
Cbc0038I Pass  15: suminf.    1.85886 (5) obj. -25.7053 iterations 4
Cbc0038I Pass  16: suminf.    1.85886 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  17: suminf.    1.29119 (5) obj. -25.7053 iterations 7
Cbc0038I Pass  18: suminf.    1.29119 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  19: suminf.    1.51699 (5) obj. -25.7053 iterations 8
Cbc0038I Pass  20: suminf.    1.85886 (5) obj. -25.7053 iterations 4
Cbc0038I Pass  21: suminf.    1.85886 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  22: suminf.    1.29119 (5) obj. -25.7053 iterations 7
Cbc0038I Pass  23: suminf.    1.29119 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  24: suminf.    1.51699 (5) obj. -25.7053 iterations 8
Cbc0038I Pass  25: suminf.    1.85886 (5) obj. -25.7053 iterations 4
Cbc0038I Pass  26: suminf.    1.85886 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  27: suminf.    1.29119 (5) obj. -25.7053 iterations 7
Cbc0038I Pass  28: suminf.    1.29119 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  29: suminf.    1.51699 (5) obj. -25.7053 iterations 8
Cbc0038I Pass  30: suminf.    1.85886 (5) obj. -25.7053 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 103 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -22.5694 - took 0.11 seconds
Cbc0012I Integer solution of -22.56936 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 86 rows 47 columns
Cbc0031I 22 added rows had average density of 59.409091
Cbc0013I At root node, 22 cuts changed objective from -53.928239 to -46.45667 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13576 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1832 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.085 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.56936 best solution, best possible -46.45667 (0.99 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 63 rows 38 columns
Cbc0001I Search completed - best objective -22.56936, took 9517 iterations and 66 nodes (1.32 seconds)
Cbc0032I Strong branching done 838 times (17170 iterations), fathomed 6 nodes and fixed 17 variables
Cbc0035I Maximum depth 28, 133 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.33

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-48) rows, 119 (-33) columns and 1977 (-1326) elements
Clp1000I sum of infeasibilities 1.77574e-07 - average 1.67522e-09, 13 fixed columns
Coin0506I Presolve 96 (-10) rows, 106 (-13) columns and 1636 (-341) elements
Clp0006I 0  Obj 56.931387 Dual inf 6.1011469 (104)
Clp0029I End of values pass after 106 iterations
Clp0014I Perturbing problem by 0.001% of 2.0176221 - largest nonzero change 2.1611179e-05 ( 0.0014083952%) - largest zero change 2.9193555e-05
Clp0000I Optimal - objective value 70.342093
Clp0000I Optimal - objective value 70.342093
Coin0511I After Postsolve, objective 70.342093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.342093
Clp0000I Optimal - objective value 70.342093
Clp0000I Optimal - objective value 70.342093
Clp0000I Optimal - objective value 70.342093
Coin0511I After Postsolve, objective 70.342093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.34209305 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 119 columns (119 integer (119 of which binary)) and 1979 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.484%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 7.41693
Cbc0038I Pass   1: suminf.    3.70550 (34) obj. -45.0088 iterations 18
Cbc0038I Pass   2: suminf.    3.70550 (34) obj. -45.0088 iterations 1
Cbc0038I Pass   3: suminf.    0.51802 (6) obj. -13.9939 iterations 28
Cbc0038I Solution found of -7.57858
Cbc0038I Rounding solution of -10.4399 is better than previous of -7.57858

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 119 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -10.4399 to -11.5568 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.4338
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.70550 (34) obj. -45.0088 iterations 0
Cbc0038I Pass   5: suminf.    3.70550 (34) obj. -45.0088 iterations 1
Cbc0038I Pass   6: suminf.    1.98682 (20) obj. -30.9914 iterations 14
Cbc0038I Pass   7: suminf.    0.47350 (4) obj. -16.4338 iterations 26
Cbc0038I Pass   8: suminf.    0.40813 (4) obj. -16.8762 iterations 3
Cbc0038I Pass   9: suminf.    0.96629 (9) obj. -16.4338 iterations 12
Cbc0038I Pass  10: suminf.    0.85905 (9) obj. -16.4338 iterations 1
Cbc0038I Pass  11: suminf.    0.42280 (2) obj. -16.4338 iterations 17
Cbc0038I Pass  12: suminf.    0.34535 (3) obj. -16.4338 iterations 2
Cbc0038I Pass  13: suminf.    0.53290 (3) obj. -16.4338 iterations 2
Cbc0038I Pass  14: suminf.    0.20090 (3) obj. -19.4868 iterations 1
Cbc0038I Pass  15: suminf.    0.43742 (3) obj. -16.4338 iterations 3
Cbc0038I Pass  16: suminf.    2.10510 (12) obj. -16.4338 iterations 34
Cbc0038I Pass  17: suminf.    1.77602 (10) obj. -16.4338 iterations 6
Cbc0038I Pass  18: suminf.    0.58239 (8) obj. -16.4338 iterations 17
Cbc0038I Pass  19: suminf.    0.57246 (11) obj. -16.4338 iterations 2
Cbc0038I Pass  20: suminf.    0.97383 (3) obj. -16.4338 iterations 18
Cbc0038I Pass  21: suminf.    0.62896 (3) obj. -16.8856 iterations 16
Cbc0038I Pass  22: suminf.    0.71933 (3) obj. -16.4338 iterations 2
Cbc0038I Pass  23: suminf.    3.83466 (16) obj. -16.4338 iterations 31
Cbc0038I Pass  24: suminf.    3.22967 (15) obj. -16.4338 iterations 16
Cbc0038I Pass  25: suminf.    0.52043 (4) obj. -16.4338 iterations 26
Cbc0038I Pass  26: suminf.    0.49488 (4) obj. -16.4338 iterations 4
Cbc0038I Pass  27: suminf.    1.14906 (4) obj. -16.4338 iterations 8
Cbc0038I Pass  28: suminf.    0.72000 (3) obj. -17.1804 iterations 8
Cbc0038I Pass  29: suminf.    0.56423 (7) obj. -16.4338 iterations 11
Cbc0038I Pass  30: suminf.    2.20223 (12) obj. -16.4338 iterations 26
Cbc0038I Pass  31: suminf.    1.90660 (9) obj. -16.4338 iterations 5
Cbc0038I Pass  32: suminf.    0.75650 (4) obj. -16.4338 iterations 12
Cbc0038I Pass  33: suminf.    0.49488 (4) obj. -16.4338 iterations 6
Cbc0038I Rounding solution of -12.5599 is better than previous of -11.5568

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 119 columns, reduced to 45 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -12.5599 to -19.1962 (0.09 seconds)
Cbc0038I Round again with cutoff of -27.4223
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.70550 (34) obj. -45.0088 iterations 0
Cbc0038I Pass  34: suminf.    3.70550 (34) obj. -45.0088 iterations 1
Cbc0038I Pass  35: suminf.    1.82224 (16) obj. -27.4223 iterations 30
Cbc0038I Pass  36: suminf.    1.57166 (15) obj. -27.5975 iterations 5
Cbc0038I Pass  37: suminf.    2.21637 (12) obj. -27.4223 iterations 25
Cbc0038I Pass  38: suminf.    2.19304 (11) obj. -27.4223 iterations 1
Cbc0038I Pass  39: suminf.    1.71981 (8) obj. -27.4223 iterations 17
Cbc0038I Pass  40: suminf.    1.46884 (9) obj. -27.4223 iterations 3
Cbc0038I Pass  41: suminf.    2.29649 (8) obj. -27.4223 iterations 13
Cbc0038I Pass  42: suminf.    2.05323 (8) obj. -27.4223 iterations 4
Cbc0038I Pass  43: suminf.    1.40263 (6) obj. -27.4223 iterations 10
Cbc0038I Pass  44: suminf.    1.13939 (6) obj. -27.4902 iterations 6
Cbc0038I Pass  45: suminf.    1.34881 (7) obj. -27.4223 iterations 7
Cbc0038I Pass  46: suminf.    1.87759 (12) obj. -27.4223 iterations 11
Cbc0038I Pass  47: suminf.    1.83236 (10) obj. -27.4223 iterations 6
Cbc0038I Pass  48: suminf.    2.46015 (10) obj. -27.4223 iterations 20
Cbc0038I Pass  49: suminf.    2.46015 (10) obj. -27.4223 iterations 1
Cbc0038I Pass  50: suminf.    2.14068 (9) obj. -27.4223 iterations 14
Cbc0038I Pass  51: suminf.    2.14068 (9) obj. -27.4223 iterations 3
Cbc0038I Pass  52: suminf.    2.50976 (10) obj. -27.4223 iterations 22
Cbc0038I Pass  53: suminf.    2.61163 (13) obj. -27.4223 iterations 20
Cbc0038I Pass  54: suminf.    2.02361 (11) obj. -27.4223 iterations 12
Cbc0038I Pass  55: suminf.    1.73756 (11) obj. -27.4223 iterations 7
Cbc0038I Pass  56: suminf.    2.41595 (11) obj. -27.4223 iterations 29
Cbc0038I Pass  57: suminf.    1.40263 (7) obj. -27.4223 iterations 7
Cbc0038I Pass  58: suminf.    1.26084 (8) obj. -27.4223 iterations 8
Cbc0038I Pass  59: suminf.    3.34694 (16) obj. -27.4223 iterations 27
Cbc0038I Pass  60: suminf.    3.26820 (15) obj. -27.4223 iterations 6
Cbc0038I Pass  61: suminf.    1.68879 (8) obj. -27.4223 iterations 19
Cbc0038I Pass  62: suminf.    1.45753 (8) obj. -27.4223 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 119 columns, reduced to 14 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -19.1962 - took 0.09 seconds
Cbc0012I Integer solution of -19.196184 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 106 rows 119 columns, reduced to 24 rows 31 columns
Cbc0031I 61 added rows had average density of 47.95082
Cbc0013I At root node, 61 cuts changed objective from -60.326144 to -28.412945 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17155 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1724 row cuts average 112.5 elements, 0 column cuts (0 active)  in 0.210 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 554 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1160 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 397 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.375 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.196184 best solution, best possible -28.412945 (2.41 seconds)
Cbc0012I Integer solution of -22.56936 found by rounding after 8145 iterations and 19 nodes (3.08 seconds)
Cbc0010I After 29 nodes, 3 on tree, -22.56936 best solution, best possible -28.412945 (3.12 seconds)
Cbc0001I Search completed - best objective -22.56936, took 9141 iterations and 32 nodes (3.12 seconds)
Cbc0032I Strong branching done 532 times (14558 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 14, 84 variables fixed on reduced cost
Total time (CPU seconds):       2.63   (Wallclock seconds):       3.14

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 137 (-18) rows, 76 (-2) columns and 418 (-35) elements
Clp1000I sum of infeasibilities 6.34594e-05 - average 4.63208e-07, 10 fixed columns
Coin0506I Presolve 119 (-18) rows, 66 (-10) columns and 362 (-56) elements
Clp0029I End of values pass after 66 iterations
Clp0000I Optimal - objective value 53.928239
Clp0000I Optimal - objective value 53.928239
Coin0511I After Postsolve, objective 53.928239, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 53.928239
Clp0000I Optimal - objective value 53.928239
Clp0000I Optimal - objective value 53.928239
Coin0511I After Postsolve, objective 53.928239, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 53.92823926 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 137 rows, 76 columns (75 integer (75 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.161%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 46 integers unsatisfied sum - 11.5562
Cbc0038I Solution found of 8.07349
Cbc0038I Relaxing continuous gives -3.78799
Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 86 rows 47 columns
Cbc0038I Mini branch and bound improved solution from -3.78799 to -22.5694 (0.05 seconds)
Cbc0038I Round again with cutoff of -25.7053
Cbc0038I Pass   1: suminf.    4.75669 (49) obj. -25.7053 iterations 32
Cbc0038I Pass   2: suminf.    1.46530 (8) obj. -25.7053 iterations 62
Cbc0038I Pass   3: suminf.    0.85201 (6) obj. -25.7053 iterations 4
Cbc0038I Pass   4: suminf.    1.98268 (6) obj. -25.7053 iterations 12
Cbc0038I Pass   5: suminf.    1.98268 (6) obj. -25.7053 iterations 0
Cbc0038I Pass   6: suminf.    1.91117 (5) obj. -25.7053 iterations 3
Cbc0038I Pass   7: suminf.    1.44096 (5) obj. -25.7053 iterations 1
Cbc0038I Pass   8: suminf.    1.41473 (4) obj. -25.7053 iterations 5
Cbc0038I Pass   9: suminf.    1.40747 (5) obj. -25.7053 iterations 1
Cbc0038I Pass  10: suminf.    1.85886 (5) obj. -25.7053 iterations 3
Cbc0038I Pass  11: suminf.    1.85886 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  12: suminf.    1.29119 (5) obj. -25.7053 iterations 7
Cbc0038I Pass  13: suminf.    1.29119 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  14: suminf.    1.51699 (5) obj. -25.7053 iterations 8
Cbc0038I Pass  15: suminf.    1.85886 (5) obj. -25.7053 iterations 4
Cbc0038I Pass  16: suminf.    1.85886 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  17: suminf.    1.29119 (5) obj. -25.7053 iterations 7
Cbc0038I Pass  18: suminf.    1.29119 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  19: suminf.    1.51699 (5) obj. -25.7053 iterations 8
Cbc0038I Pass  20: suminf.    1.85886 (5) obj. -25.7053 iterations 4
Cbc0038I Pass  21: suminf.    1.85886 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  22: suminf.    1.29119 (5) obj. -25.7053 iterations 7
Cbc0038I Pass  23: suminf.    1.29119 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  24: suminf.    1.51699 (5) obj. -25.7053 iterations 8
Cbc0038I Pass  25: suminf.    1.85886 (5) obj. -25.7053 iterations 4
Cbc0038I Pass  26: suminf.    1.85886 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  27: suminf.    1.29119 (5) obj. -25.7053 iterations 7
Cbc0038I Pass  28: suminf.    1.29119 (5) obj. -25.7053 iterations 0
Cbc0038I Pass  29: suminf.    1.51699 (5) obj. -25.7053 iterations 8
Cbc0038I Pass  30: suminf.    1.85886 (5) obj. -25.7053 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 137 rows 76 columns, reduced to 103 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -22.5694 - took 0.10 seconds
Cbc0012I Integer solution of -22.56936 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 86 rows 47 columns
Cbc0031I 22 added rows had average density of 59.409091
Cbc0013I At root node, 22 cuts changed objective from -53.928239 to -46.45667 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13576 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1832 row cuts average 76.0 elements, 0 column cuts (0 active)  in 0.102 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 35 row cuts average 3.8 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 75.6 elements, 0 column cuts (0 active)  in 0.039 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -22.56936 best solution, best possible -46.45667 (1.06 seconds)
Cbc0038I Full problem 137 rows 76 columns, reduced to 63 rows 38 columns
Cbc0001I Search completed - best objective -22.56936, took 9517 iterations and 66 nodes (1.41 seconds)
Cbc0032I Strong branching done 838 times (17170 iterations), fathomed 6 nodes and fixed 17 variables
Cbc0035I Maximum depth 28, 133 variables fixed on reduced cost
Total time (CPU seconds):       1.35   (Wallclock seconds):       1.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 106 (-49) rows, 119 (-34) columns and 1977 (-1327) elements
Clp1000I sum of infeasibilities 1.77574e-07 - average 1.67522e-09, 13 fixed columns
Coin0506I Presolve 96 (-10) rows, 106 (-13) columns and 1636 (-341) elements
Clp0006I 0  Obj 56.931387 Dual inf 6.1011469 (104)
Clp0029I End of values pass after 106 iterations
Clp0014I Perturbing problem by 0.001% of 2.0176221 - largest nonzero change 2.1611179e-05 ( 0.0014083952%) - largest zero change 2.9193555e-05
Clp0000I Optimal - objective value 70.342093
Clp0000I Optimal - objective value 70.342093
Coin0511I After Postsolve, objective 70.342093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 70.342093
Clp0000I Optimal - objective value 70.342093
Clp0000I Optimal - objective value 70.342093
Clp0000I Optimal - objective value 70.342093
Coin0511I After Postsolve, objective 70.342093, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 70.34209305 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 106 rows, 119 columns (119 integer (119 of which binary)) and 1979 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.484%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 45 integers unsatisfied sum - 7.41693
Cbc0038I Pass   1: suminf.    3.70550 (34) obj. -45.0088 iterations 18
Cbc0038I Pass   2: suminf.    3.70550 (34) obj. -45.0088 iterations 1
Cbc0038I Pass   3: suminf.    0.51802 (6) obj. -13.9939 iterations 28
Cbc0038I Solution found of -7.57858
Cbc0038I Rounding solution of -10.4399 is better than previous of -7.57858

Cbc0038I Before mini branch and bound, 72 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 119 columns, reduced to 12 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -10.4399 to -11.5568 (0.03 seconds)
Cbc0038I Round again with cutoff of -16.4338
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    3.70550 (34) obj. -45.0088 iterations 0
Cbc0038I Pass   5: suminf.    3.70550 (34) obj. -45.0088 iterations 1
Cbc0038I Pass   6: suminf.    1.98682 (20) obj. -30.9914 iterations 14
Cbc0038I Pass   7: suminf.    0.47350 (4) obj. -16.4338 iterations 26
Cbc0038I Pass   8: suminf.    0.40813 (4) obj. -16.8762 iterations 3
Cbc0038I Pass   9: suminf.    0.96629 (9) obj. -16.4338 iterations 12
Cbc0038I Pass  10: suminf.    0.85905 (9) obj. -16.4338 iterations 1
Cbc0038I Pass  11: suminf.    0.42280 (2) obj. -16.4338 iterations 17
Cbc0038I Pass  12: suminf.    0.34535 (3) obj. -16.4338 iterations 2
Cbc0038I Pass  13: suminf.    0.53290 (3) obj. -16.4338 iterations 2
Cbc0038I Pass  14: suminf.    0.20090 (3) obj. -19.4868 iterations 1
Cbc0038I Pass  15: suminf.    0.43742 (3) obj. -16.4338 iterations 3
Cbc0038I Pass  16: suminf.    2.10510 (12) obj. -16.4338 iterations 34
Cbc0038I Pass  17: suminf.    1.77602 (10) obj. -16.4338 iterations 6
Cbc0038I Pass  18: suminf.    0.58239 (8) obj. -16.4338 iterations 17
Cbc0038I Pass  19: suminf.    0.57246 (11) obj. -16.4338 iterations 2
Cbc0038I Pass  20: suminf.    0.97383 (3) obj. -16.4338 iterations 18
Cbc0038I Pass  21: suminf.    0.62896 (3) obj. -16.8856 iterations 16
Cbc0038I Pass  22: suminf.    0.71933 (3) obj. -16.4338 iterations 2
Cbc0038I Pass  23: suminf.    3.83466 (16) obj. -16.4338 iterations 31
Cbc0038I Pass  24: suminf.    3.22967 (15) obj. -16.4338 iterations 16
Cbc0038I Pass  25: suminf.    0.52043 (4) obj. -16.4338 iterations 26
Cbc0038I Pass  26: suminf.    0.49488 (4) obj. -16.4338 iterations 4
Cbc0038I Pass  27: suminf.    1.14906 (4) obj. -16.4338 iterations 8
Cbc0038I Pass  28: suminf.    0.72000 (3) obj. -17.1804 iterations 8
Cbc0038I Pass  29: suminf.    0.56423 (7) obj. -16.4338 iterations 11
Cbc0038I Pass  30: suminf.    2.20223 (12) obj. -16.4338 iterations 26
Cbc0038I Pass  31: suminf.    1.90660 (9) obj. -16.4338 iterations 5
Cbc0038I Pass  32: suminf.    0.75650 (4) obj. -16.4338 iterations 12
Cbc0038I Pass  33: suminf.    0.49488 (4) obj. -16.4338 iterations 6
Cbc0038I Rounding solution of -12.5599 is better than previous of -11.5568

Cbc0038I Before mini branch and bound, 47 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 119 columns, reduced to 45 rows 53 columns
Cbc0038I Mini branch and bound improved solution from -12.5599 to -19.1962 (0.09 seconds)
Cbc0038I Round again with cutoff of -27.4223
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.70550 (34) obj. -45.0088 iterations 0
Cbc0038I Pass  34: suminf.    3.70550 (34) obj. -45.0088 iterations 1
Cbc0038I Pass  35: suminf.    1.82224 (16) obj. -27.4223 iterations 30
Cbc0038I Pass  36: suminf.    1.57166 (15) obj. -27.5975 iterations 5
Cbc0038I Pass  37: suminf.    2.21637 (12) obj. -27.4223 iterations 25
Cbc0038I Pass  38: suminf.    2.19304 (11) obj. -27.4223 iterations 1
Cbc0038I Pass  39: suminf.    1.71981 (8) obj. -27.4223 iterations 17
Cbc0038I Pass  40: suminf.    1.46884 (9) obj. -27.4223 iterations 3
Cbc0038I Pass  41: suminf.    2.29649 (8) obj. -27.4223 iterations 13
Cbc0038I Pass  42: suminf.    2.05323 (8) obj. -27.4223 iterations 4
Cbc0038I Pass  43: suminf.    1.40263 (6) obj. -27.4223 iterations 10
Cbc0038I Pass  44: suminf.    1.13939 (6) obj. -27.4902 iterations 6
Cbc0038I Pass  45: suminf.    1.34881 (7) obj. -27.4223 iterations 7
Cbc0038I Pass  46: suminf.    1.87759 (12) obj. -27.4223 iterations 11
Cbc0038I Pass  47: suminf.    1.83236 (10) obj. -27.4223 iterations 6
Cbc0038I Pass  48: suminf.    2.46015 (10) obj. -27.4223 iterations 20
Cbc0038I Pass  49: suminf.    2.46015 (10) obj. -27.4223 iterations 1
Cbc0038I Pass  50: suminf.    2.14068 (9) obj. -27.4223 iterations 14
Cbc0038I Pass  51: suminf.    2.14068 (9) obj. -27.4223 iterations 3
Cbc0038I Pass  52: suminf.    2.50976 (10) obj. -27.4223 iterations 22
Cbc0038I Pass  53: suminf.    2.61163 (13) obj. -27.4223 iterations 20
Cbc0038I Pass  54: suminf.    2.02361 (11) obj. -27.4223 iterations 12
Cbc0038I Pass  55: suminf.    1.73756 (11) obj. -27.4223 iterations 7
Cbc0038I Pass  56: suminf.    2.41595 (11) obj. -27.4223 iterations 29
Cbc0038I Pass  57: suminf.    1.40263 (7) obj. -27.4223 iterations 7
Cbc0038I Pass  58: suminf.    1.26084 (8) obj. -27.4223 iterations 8
Cbc0038I Pass  59: suminf.    3.34694 (16) obj. -27.4223 iterations 27
Cbc0038I Pass  60: suminf.    3.26820 (15) obj. -27.4223 iterations 6
Cbc0038I Pass  61: suminf.    1.68879 (8) obj. -27.4223 iterations 19
Cbc0038I Pass  62: suminf.    1.45753 (8) obj. -27.4223 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 59 integers at bound fixed and 0 continuous
Cbc0038I Full problem 106 rows 119 columns, reduced to 14 rows 23 columns
Cbc0038I Mini branch and bound did not improve solution (0.11 seconds)
Cbc0038I After 0.11 seconds - Feasibility pump exiting with objective of -19.1962 - took 0.09 seconds
Cbc0012I Integer solution of -19.196184 found by feasibility pump after 0 iterations and 0 nodes (0.11 seconds)
Cbc0038I Full problem 106 rows 119 columns, reduced to 24 rows 31 columns
Cbc0031I 61 added rows had average density of 47.95082
Cbc0013I At root node, 61 cuts changed objective from -60.326144 to -28.412945 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 17155 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.152 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1724 row cuts average 112.5 elements, 0 column cuts (0 active)  in 0.220 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.3 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 554 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.045 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1160 row cuts average 6.4 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 397 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 35 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.392 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -19.196184 best solution, best possible -28.412945 (2.56 seconds)
Cbc0012I Integer solution of -22.56936 found by rounding after 8145 iterations and 19 nodes (3.20 seconds)
Cbc0001I Search completed - best objective -22.56936, took 9141 iterations and 32 nodes (3.24 seconds)
Cbc0032I Strong branching done 532 times (14558 iterations), fathomed 2 nodes and fixed 3 variables
Cbc0035I Maximum depth 14, 84 variables fixed on reduced cost
Total time (CPU seconds):       2.71   (Wallclock seconds):       3.26

