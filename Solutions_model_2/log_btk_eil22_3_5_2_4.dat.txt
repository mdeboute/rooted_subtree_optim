Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 6.27848e-05 - average 1.79385e-06, 3 fixed columns
Coin0506I Presolve 29 (-6) rows, 19 (-3) columns and 88 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 71.149426
Clp0000I Optimal - objective value 71.149426
Coin0511I After Postsolve, objective 71.149426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.149426
Clp0000I Optimal - objective value 71.149426
Clp0000I Optimal - objective value 71.149426
Coin0511I After Postsolve, objective 71.149426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.14942642 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.535%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.55982
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.59726 iterations 17
Cbc0038I Solution found of -0.59726
Cbc0038I Relaxing continuous gives -0.59726
Cbc0038I Rounding solution of -5.45356 is better than previous of -0.59726

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -5.45356 to -29.4124 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.5736
Cbc0038I Pass   2: suminf.    1.28693 (5) obj. -33.5736 iterations 6
Cbc0038I Pass   3: suminf.    1.03755 (4) obj. -33.5736 iterations 1
Cbc0038I Pass   4: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass   5: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass   6: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass   7: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass   8: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass   9: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  10: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  11: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass  12: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass  13: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass  14: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  15: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  16: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass  17: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass  18: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass  19: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  20: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  21: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass  22: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass  23: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass  24: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  25: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  26: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass  27: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass  28: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass  29: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  30: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  31: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -41.0636
Cbc0038I Pass  31: suminf.    1.71897 (6) obj. -41.0636 iterations 1
Cbc0038I Pass  32: suminf.    1.46968 (4) obj. -41.0636 iterations 2
Cbc0038I Pass  33: suminf.    1.46968 (4) obj. -41.0636 iterations 0
Cbc0038I Pass  34: suminf.    0.99852 (5) obj. -41.0636 iterations 5
Cbc0038I Pass  35: suminf.    0.99852 (5) obj. -41.0636 iterations 0
Cbc0038I Pass  36: suminf.    1.46865 (4) obj. -41.0636 iterations 7
Cbc0038I Pass  37: suminf.    0.76326 (4) obj. -41.0636 iterations 10
Cbc0038I Pass  38: suminf.    0.68835 (3) obj. -41.0636 iterations 1
Cbc0038I Pass  39: suminf.    0.94102 (4) obj. -41.0636 iterations 4
Cbc0038I Pass  40: suminf.    0.63392 (4) obj. -41.0636 iterations 3
Cbc0038I Pass  41: suminf.    0.63392 (4) obj. -41.0636 iterations 0
Cbc0038I Pass  42: suminf.    1.21897 (4) obj. -41.0636 iterations 6
Cbc0038I Pass  43: suminf.    0.99852 (5) obj. -41.0636 iterations 3
Cbc0038I Pass  44: suminf.    1.46865 (4) obj. -41.0636 iterations 7
Cbc0038I Pass  45: suminf.    1.46968 (4) obj. -41.0636 iterations 1
Cbc0038I Pass  46: suminf.    0.99852 (5) obj. -41.0636 iterations 5
Cbc0038I Pass  47: suminf.    1.38158 (7) obj. -41.0636 iterations 5
Cbc0038I Pass  48: suminf.    1.08960 (6) obj. -41.0636 iterations 1
Cbc0038I Pass  49: suminf.    1.72424 (6) obj. -41.0636 iterations 3
Cbc0038I Pass  50: suminf.    1.72548 (5) obj. -41.0636 iterations 11
Cbc0038I Pass  51: suminf.    1.22133 (3) obj. -41.0636 iterations 1
Cbc0038I Pass  52: suminf.    1.07326 (3) obj. -41.0636 iterations 5
Cbc0038I Pass  53: suminf.    1.07326 (3) obj. -41.0636 iterations 1
Cbc0038I Pass  54: suminf.    1.22133 (3) obj. -41.0636 iterations 3
Cbc0038I Pass  55: suminf.    1.92295 (5) obj. -41.0636 iterations 8
Cbc0038I Pass  56: suminf.    0.96696 (5) obj. -41.0636 iterations 5
Cbc0038I Pass  57: suminf.    0.96696 (5) obj. -41.0636 iterations 1
Cbc0038I Pass  58: suminf.    1.80011 (5) obj. -41.0636 iterations 2
Cbc0038I Pass  59: suminf.    1.22133 (3) obj. -41.0636 iterations 15
Cbc0038I Pass  60: suminf.    1.07326 (3) obj. -41.0636 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.4124 - took 0.05 seconds
Cbc0012I Integer solution of -29.412358 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 26 rows 17 columns
Cbc0031I 10 added rows had average density of 16.8
Cbc0013I At root node, 10 cuts changed objective from -71.02358 to -49.275393 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1234 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 493 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.412358, took 2403 iterations and 16 nodes (0.21 seconds)
Cbc0032I Strong branching done 150 times (1165 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-13) rows, 40 (-4) columns and 303 (-57) elements
Clp1000I sum of infeasibilities 2.78861e-08 - average 8.45035e-10, 26 fixed columns
Coin0506I Presolve 9 (-24) rows, 14 (-26) columns and 41 (-262) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 3.6216787 - largest nonzero change 1.9874658e-05 ( 0.00078778277%) - largest zero change 1.6394527e-05
Clp0000I Optimal - objective value 19.13133
Clp0000I Optimal - objective value 19.13133
Coin0511I After Postsolve, objective 19.13133, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0931155 - largest nonzero change 0 ( 0%) - largest zero change 2.7656362e-05
Clp0000I Optimal - objective value 81.997487
Clp0000I Optimal - objective value 81.997487
Clp0000I Optimal - objective value 81.997487
Coin0511I After Postsolve, objective 81.997487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.99748724 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 41 columns (41 integer (41 of which binary)) and 309 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.140%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.3222
Cbc0038I Pass   1: suminf.    1.69836 (11) obj. -51.5322 iterations 4
Cbc0038I Pass   2: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Solution found of -16.4194
Cbc0038I Rounding solution of -21.1197 is better than previous of -16.4194

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -21.1197 to -27.3726 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.9966
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Pass   4: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Pass   5: suminf.    0.71213 (2) obj. -31.9966 iterations 14
Cbc0038I Pass   6: suminf.    0.65736 (2) obj. -31.9966 iterations 2
Cbc0038I Pass   7: suminf.    0.71213 (2) obj. -31.9966 iterations 1
Cbc0038I Pass   8: suminf.    1.03294 (5) obj. -34.3707 iterations 11
Cbc0038I Pass   9: suminf.    1.03294 (5) obj. -34.3707 iterations 0
Cbc0038I Pass  10: suminf.    0.64190 (3) obj. -31.9966 iterations 7
Cbc0038I Pass  11: suminf.    0.64190 (3) obj. -31.9966 iterations 0
Cbc0038I Pass  12: suminf.    1.06118 (3) obj. -31.9966 iterations 2
Cbc0038I Pass  13: suminf.    1.01367 (3) obj. -33.1847 iterations 1
Cbc0038I Pass  14: suminf.    2.19903 (8) obj. -34.3421 iterations 8
Cbc0038I Pass  15: suminf.    1.99486 (8) obj. -31.9966 iterations 2
Cbc0038I Pass  16: suminf.    1.25071 (5) obj. -31.9966 iterations 11
Cbc0038I Pass  17: suminf.    1.25071 (5) obj. -31.9966 iterations 1
Cbc0038I Pass  18: suminf.    1.23793 (4) obj. -31.9966 iterations 3
Cbc0038I Pass  19: suminf.    1.10324 (4) obj. -31.9966 iterations 1
Cbc0038I Pass  20: suminf.    1.25071 (5) obj. -31.9966 iterations 4
Cbc0038I Pass  21: suminf.    1.58986 (6) obj. -31.9966 iterations 5
Cbc0038I Pass  22: suminf.    1.58986 (6) obj. -31.9966 iterations 0
Cbc0038I Pass  23: suminf.    1.52088 (5) obj. -31.9966 iterations 3
Cbc0038I Pass  24: suminf.    1.52088 (5) obj. -31.9966 iterations 0
Cbc0038I Pass  25: suminf.    1.67928 (5) obj. -31.9966 iterations 2
Cbc0038I Pass  26: suminf.    1.67928 (5) obj. -31.9966 iterations 0
Cbc0038I Pass  27: suminf.    1.88094 (8) obj. -34.758 iterations 13
Cbc0038I Pass  28: suminf.    1.44330 (5) obj. -31.9966 iterations 13
Cbc0038I Pass  29: suminf.    1.44330 (5) obj. -31.9966 iterations 0
Cbc0038I Pass  30: suminf.    1.57086 (5) obj. -31.9966 iterations 3
Cbc0038I Pass  31: suminf.    1.57086 (5) obj. -31.9966 iterations 0
Cbc0038I Pass  32: suminf.    1.73456 (5) obj. -31.9966 iterations 1
Cbc0038I Rounding solution of -27.8807 is better than previous of -27.3726

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 7 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -40.3194
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Pass  33: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Pass  34: suminf.    0.90679 (5) obj. -40.3194 iterations 15
Cbc0038I Pass  35: suminf.    0.60822 (4) obj. -40.3194 iterations 1
Cbc0038I Pass  36: suminf.    0.78655 (4) obj. -40.3194 iterations 6
Cbc0038I Pass  37: suminf.    0.78655 (4) obj. -40.3194 iterations 1
Cbc0038I Pass  38: suminf.    0.89600 (4) obj. -40.3194 iterations 2
Cbc0038I Pass  39: suminf.    0.89600 (4) obj. -40.3194 iterations 1
Cbc0038I Pass  40: suminf.    0.78655 (4) obj. -40.3194 iterations 2
Cbc0038I Pass  41: suminf.    2.08707 (8) obj. -40.3194 iterations 13
Cbc0038I Pass  42: suminf.    2.08707 (8) obj. -40.3194 iterations 0
Cbc0038I Pass  43: suminf.    1.30310 (5) obj. -40.3194 iterations 6
Cbc0038I Pass  44: suminf.    1.30310 (5) obj. -40.3194 iterations 0
Cbc0038I Pass  45: suminf.    1.14611 (5) obj. -40.3194 iterations 1
Cbc0038I Pass  46: suminf.    1.14611 (5) obj. -40.3194 iterations 0
Cbc0038I Pass  47: suminf.    1.98905 (7) obj. -45.9944 iterations 15
Cbc0038I Pass  48: suminf.    1.66493 (7) obj. -40.3194 iterations 3
Cbc0038I Pass  49: suminf.    1.70182 (6) obj. -40.3194 iterations 9
Cbc0038I Pass  50: suminf.    1.70182 (6) obj. -40.3194 iterations 1
Cbc0038I Pass  51: suminf.    1.75174 (6) obj. -40.3194 iterations 3
Cbc0038I Pass  52: suminf.    1.75174 (6) obj. -40.3194 iterations 0
Cbc0038I Pass  53: suminf.    1.70182 (6) obj. -40.3194 iterations 1
Cbc0038I Pass  54: suminf.    2.25068 (8) obj. -40.3194 iterations 14
Cbc0038I Pass  55: suminf.    1.86658 (6) obj. -40.3194 iterations 6
Cbc0038I Pass  56: suminf.    1.24984 (6) obj. -40.3194 iterations 1
Cbc0038I Pass  57: suminf.    1.29508 (5) obj. -40.3194 iterations 5
Cbc0038I Pass  58: suminf.    0.99215 (4) obj. -40.9225 iterations 2
Cbc0038I Pass  59: suminf.    1.29508 (5) obj. -40.3194 iterations 3
Cbc0038I Pass  60: suminf.    3.24027 (9) obj. -40.3194 iterations 8
Cbc0038I Pass  61: suminf.    1.14509 (5) obj. -40.3194 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 10 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -27.8807 - took 0.02 seconds
Cbc0012I Integer solution of -27.880698 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 13 added rows had average density of 12.846154
Cbc0013I At root node, 13 cuts changed objective from -73.610939 to -33.317807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1313 row cuts average 6.3 elements, 9 column cuts (9 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 471 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 111 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 293 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 281 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.717 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27.880698 best solution, best possible -33.317807 (1.44 seconds)
Cbc0012I Integer solution of -28.107748 found by DiveCoefficient after 1351 iterations and 1 nodes (1.49 seconds)
Cbc0016I Integer solution of -28.430848 found by strong branching after 1399 iterations and 3 nodes (1.58 seconds)
Cbc0012I Integer solution of -28.54117 found by DiveCoefficient after 1413 iterations and 5 nodes (1.60 seconds)
Cbc0012I Integer solution of -28.85381 found by DiveCoefficient after 1467 iterations and 6 nodes (1.72 seconds)
Cbc0012I Integer solution of -29.36186 found by rounding after 1511 iterations and 12 nodes (1.81 seconds)
Cbc0012I Integer solution of -29.412358 found by rounding after 1560 iterations and 14 nodes (1.86 seconds)
Cbc0001I Search completed - best objective -29.412358, took 1560 iterations and 14 nodes (1.86 seconds)
Cbc0032I Strong branching done 148 times (658 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.18   (Wallclock seconds):       1.86

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-12) rows, 22 (-2) columns and 106 (-23) elements
Clp1000I sum of infeasibilities 6.27848e-05 - average 1.79385e-06, 3 fixed columns
Coin0506I Presolve 29 (-6) rows, 19 (-3) columns and 88 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 71.149426
Clp0000I Optimal - objective value 71.149426
Coin0511I After Postsolve, objective 71.149426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 71.149426
Clp0000I Optimal - objective value 71.149426
Clp0000I Optimal - objective value 71.149426
Coin0511I After Postsolve, objective 71.149426, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 71.14942642 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 22 columns (21 integer (21 of which binary)) and 107 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.535%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.55982
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -0.59726 iterations 17
Cbc0038I Solution found of -0.59726
Cbc0038I Relaxing continuous gives -0.59726
Cbc0038I Rounding solution of -5.45356 is better than previous of -0.59726

Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -5.45356 to -29.4124 (0.02 seconds)
Cbc0038I Round again with cutoff of -33.5736
Cbc0038I Pass   2: suminf.    1.28693 (5) obj. -33.5736 iterations 6
Cbc0038I Pass   3: suminf.    1.03755 (4) obj. -33.5736 iterations 1
Cbc0038I Pass   4: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass   5: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass   6: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass   7: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass   8: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass   9: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  10: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  11: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass  12: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass  13: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass  14: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  15: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  16: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass  17: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass  18: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass  19: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  20: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  21: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass  22: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass  23: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass  24: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  25: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  26: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Pass  27: suminf.    1.29095 (3) obj. -33.5736 iterations 8
Cbc0038I Pass  28: suminf.    1.03755 (4) obj. -33.5736 iterations 2
Cbc0038I Pass  29: suminf.    1.03755 (4) obj. -33.5736 iterations 0
Cbc0038I Pass  30: suminf.    0.72643 (3) obj. -33.5736 iterations 7
Cbc0038I Pass  31: suminf.    0.56398 (3) obj. -33.5736 iterations 2
Cbc0038I Before mini branch and bound, 5 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 26 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -41.0636
Cbc0038I Pass  31: suminf.    1.71897 (6) obj. -41.0636 iterations 1
Cbc0038I Pass  32: suminf.    1.46968 (4) obj. -41.0636 iterations 2
Cbc0038I Pass  33: suminf.    1.46968 (4) obj. -41.0636 iterations 0
Cbc0038I Pass  34: suminf.    0.99852 (5) obj. -41.0636 iterations 5
Cbc0038I Pass  35: suminf.    0.99852 (5) obj. -41.0636 iterations 0
Cbc0038I Pass  36: suminf.    1.46865 (4) obj. -41.0636 iterations 7
Cbc0038I Pass  37: suminf.    0.76326 (4) obj. -41.0636 iterations 10
Cbc0038I Pass  38: suminf.    0.68835 (3) obj. -41.0636 iterations 1
Cbc0038I Pass  39: suminf.    0.94102 (4) obj. -41.0636 iterations 4
Cbc0038I Pass  40: suminf.    0.63392 (4) obj. -41.0636 iterations 3
Cbc0038I Pass  41: suminf.    0.63392 (4) obj. -41.0636 iterations 0
Cbc0038I Pass  42: suminf.    1.21897 (4) obj. -41.0636 iterations 6
Cbc0038I Pass  43: suminf.    0.99852 (5) obj. -41.0636 iterations 3
Cbc0038I Pass  44: suminf.    1.46865 (4) obj. -41.0636 iterations 7
Cbc0038I Pass  45: suminf.    1.46968 (4) obj. -41.0636 iterations 1
Cbc0038I Pass  46: suminf.    0.99852 (5) obj. -41.0636 iterations 5
Cbc0038I Pass  47: suminf.    1.38158 (7) obj. -41.0636 iterations 5
Cbc0038I Pass  48: suminf.    1.08960 (6) obj. -41.0636 iterations 1
Cbc0038I Pass  49: suminf.    1.72424 (6) obj. -41.0636 iterations 3
Cbc0038I Pass  50: suminf.    1.72548 (5) obj. -41.0636 iterations 11
Cbc0038I Pass  51: suminf.    1.22133 (3) obj. -41.0636 iterations 1
Cbc0038I Pass  52: suminf.    1.07326 (3) obj. -41.0636 iterations 5
Cbc0038I Pass  53: suminf.    1.07326 (3) obj. -41.0636 iterations 1
Cbc0038I Pass  54: suminf.    1.22133 (3) obj. -41.0636 iterations 3
Cbc0038I Pass  55: suminf.    1.92295 (5) obj. -41.0636 iterations 8
Cbc0038I Pass  56: suminf.    0.96696 (5) obj. -41.0636 iterations 5
Cbc0038I Pass  57: suminf.    0.96696 (5) obj. -41.0636 iterations 1
Cbc0038I Pass  58: suminf.    1.80011 (5) obj. -41.0636 iterations 2
Cbc0038I Pass  59: suminf.    1.22133 (3) obj. -41.0636 iterations 15
Cbc0038I Pass  60: suminf.    1.07326 (3) obj. -41.0636 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 3 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 22 columns, reduced to 28 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -29.4124 - took 0.06 seconds
Cbc0012I Integer solution of -29.412358 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 35 rows 22 columns, reduced to 26 rows 17 columns
Cbc0031I 10 added rows had average density of 16.8
Cbc0013I At root node, 10 cuts changed objective from -71.02358 to -49.275393 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1234 row cuts average 3.6 elements, 1 column cuts (1 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 493 row cuts average 21.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 3.4 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 44 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 109 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -29.412358, took 2403 iterations and 16 nodes (0.21 seconds)
Cbc0032I Strong branching done 150 times (1165 iterations), fathomed 2 nodes and fixed 7 variables
Cbc0035I Maximum depth 4, 35 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 40 (-5) columns and 303 (-58) elements
Clp1000I sum of infeasibilities 2.78861e-08 - average 8.45035e-10, 26 fixed columns
Coin0506I Presolve 9 (-24) rows, 14 (-26) columns and 41 (-262) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 3.6216787 - largest nonzero change 1.9874658e-05 ( 0.00078778277%) - largest zero change 1.6394527e-05
Clp0000I Optimal - objective value 19.13133
Clp0000I Optimal - objective value 19.13133
Coin0511I After Postsolve, objective 19.13133, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 4.0931155 - largest nonzero change 0 ( 0%) - largest zero change 2.7656362e-05
Clp0000I Optimal - objective value 81.997487
Clp0000I Optimal - objective value 81.997487
Clp0000I Optimal - objective value 81.997487
Coin0511I After Postsolve, objective 81.997487, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 81.99748724 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 34 rows, 41 columns (41 integer (41 of which binary)) and 309 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.140%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.3222
Cbc0038I Pass   1: suminf.    1.69836 (11) obj. -51.5322 iterations 4
Cbc0038I Pass   2: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Solution found of -16.4194
Cbc0038I Rounding solution of -21.1197 is better than previous of -16.4194

Cbc0038I Before mini branch and bound, 24 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -21.1197 to -27.3726 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.9966
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Pass   4: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Pass   5: suminf.    0.71213 (2) obj. -31.9966 iterations 14
Cbc0038I Pass   6: suminf.    0.65736 (2) obj. -31.9966 iterations 2
Cbc0038I Pass   7: suminf.    0.71213 (2) obj. -31.9966 iterations 1
Cbc0038I Pass   8: suminf.    1.03294 (5) obj. -34.3707 iterations 11
Cbc0038I Pass   9: suminf.    1.03294 (5) obj. -34.3707 iterations 0
Cbc0038I Pass  10: suminf.    0.64190 (3) obj. -31.9966 iterations 7
Cbc0038I Pass  11: suminf.    0.64190 (3) obj. -31.9966 iterations 0
Cbc0038I Pass  12: suminf.    1.06118 (3) obj. -31.9966 iterations 2
Cbc0038I Pass  13: suminf.    1.01367 (3) obj. -33.1847 iterations 1
Cbc0038I Pass  14: suminf.    2.19903 (8) obj. -34.3421 iterations 8
Cbc0038I Pass  15: suminf.    1.99486 (8) obj. -31.9966 iterations 2
Cbc0038I Pass  16: suminf.    1.25071 (5) obj. -31.9966 iterations 11
Cbc0038I Pass  17: suminf.    1.25071 (5) obj. -31.9966 iterations 1
Cbc0038I Pass  18: suminf.    1.23793 (4) obj. -31.9966 iterations 3
Cbc0038I Pass  19: suminf.    1.10324 (4) obj. -31.9966 iterations 1
Cbc0038I Pass  20: suminf.    1.25071 (5) obj. -31.9966 iterations 4
Cbc0038I Pass  21: suminf.    1.58986 (6) obj. -31.9966 iterations 5
Cbc0038I Pass  22: suminf.    1.58986 (6) obj. -31.9966 iterations 0
Cbc0038I Pass  23: suminf.    1.52088 (5) obj. -31.9966 iterations 3
Cbc0038I Pass  24: suminf.    1.52088 (5) obj. -31.9966 iterations 0
Cbc0038I Pass  25: suminf.    1.67928 (5) obj. -31.9966 iterations 2
Cbc0038I Pass  26: suminf.    1.67928 (5) obj. -31.9966 iterations 0
Cbc0038I Pass  27: suminf.    1.88094 (8) obj. -34.758 iterations 13
Cbc0038I Pass  28: suminf.    1.44330 (5) obj. -31.9966 iterations 13
Cbc0038I Pass  29: suminf.    1.44330 (5) obj. -31.9966 iterations 0
Cbc0038I Pass  30: suminf.    1.57086 (5) obj. -31.9966 iterations 3
Cbc0038I Pass  31: suminf.    1.57086 (5) obj. -31.9966 iterations 0
Cbc0038I Pass  32: suminf.    1.73456 (5) obj. -31.9966 iterations 1
Cbc0038I Rounding solution of -27.8807 is better than previous of -27.3726

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 7 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -40.3194
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Pass  33: suminf.    1.69836 (11) obj. -51.5322 iterations 0
Cbc0038I Pass  34: suminf.    0.90679 (5) obj. -40.3194 iterations 15
Cbc0038I Pass  35: suminf.    0.60822 (4) obj. -40.3194 iterations 1
Cbc0038I Pass  36: suminf.    0.78655 (4) obj. -40.3194 iterations 6
Cbc0038I Pass  37: suminf.    0.78655 (4) obj. -40.3194 iterations 1
Cbc0038I Pass  38: suminf.    0.89600 (4) obj. -40.3194 iterations 2
Cbc0038I Pass  39: suminf.    0.89600 (4) obj. -40.3194 iterations 1
Cbc0038I Pass  40: suminf.    0.78655 (4) obj. -40.3194 iterations 2
Cbc0038I Pass  41: suminf.    2.08707 (8) obj. -40.3194 iterations 13
Cbc0038I Pass  42: suminf.    2.08707 (8) obj. -40.3194 iterations 0
Cbc0038I Pass  43: suminf.    1.30310 (5) obj. -40.3194 iterations 6
Cbc0038I Pass  44: suminf.    1.30310 (5) obj. -40.3194 iterations 0
Cbc0038I Pass  45: suminf.    1.14611 (5) obj. -40.3194 iterations 1
Cbc0038I Pass  46: suminf.    1.14611 (5) obj. -40.3194 iterations 0
Cbc0038I Pass  47: suminf.    1.98905 (7) obj. -45.9944 iterations 15
Cbc0038I Pass  48: suminf.    1.66493 (7) obj. -40.3194 iterations 3
Cbc0038I Pass  49: suminf.    1.70182 (6) obj. -40.3194 iterations 9
Cbc0038I Pass  50: suminf.    1.70182 (6) obj. -40.3194 iterations 1
Cbc0038I Pass  51: suminf.    1.75174 (6) obj. -40.3194 iterations 3
Cbc0038I Pass  52: suminf.    1.75174 (6) obj. -40.3194 iterations 0
Cbc0038I Pass  53: suminf.    1.70182 (6) obj. -40.3194 iterations 1
Cbc0038I Pass  54: suminf.    2.25068 (8) obj. -40.3194 iterations 14
Cbc0038I Pass  55: suminf.    1.86658 (6) obj. -40.3194 iterations 6
Cbc0038I Pass  56: suminf.    1.24984 (6) obj. -40.3194 iterations 1
Cbc0038I Pass  57: suminf.    1.29508 (5) obj. -40.3194 iterations 5
Cbc0038I Pass  58: suminf.    0.99215 (4) obj. -40.9225 iterations 2
Cbc0038I Pass  59: suminf.    1.29508 (5) obj. -40.3194 iterations 3
Cbc0038I Pass  60: suminf.    3.24027 (9) obj. -40.3194 iterations 8
Cbc0038I Pass  61: suminf.    1.14509 (5) obj. -40.3194 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 34 rows 41 columns, reduced to 10 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -27.8807 - took 0.02 seconds
Cbc0012I Integer solution of -27.880698 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 13 added rows had average density of 12.846154
Cbc0013I At root node, 13 cuts changed objective from -73.610939 to -33.317807 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1313 row cuts average 6.3 elements, 9 column cuts (9 active)  in 0.021 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 471 row cuts average 26.4 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 111 row cuts average 5.9 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 293 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 281 row cuts average 13.4 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 58 row cuts average 16.9 elements, 0 column cuts (0 active)  in 0.745 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -27.880698 best solution, best possible -33.317807 (1.47 seconds)
Cbc0012I Integer solution of -28.107748 found by DiveCoefficient after 1351 iterations and 1 nodes (1.53 seconds)
Cbc0016I Integer solution of -28.430848 found by strong branching after 1399 iterations and 3 nodes (1.62 seconds)
Cbc0012I Integer solution of -28.54117 found by DiveCoefficient after 1413 iterations and 5 nodes (1.64 seconds)
Cbc0012I Integer solution of -28.85381 found by DiveCoefficient after 1467 iterations and 6 nodes (1.76 seconds)
Cbc0012I Integer solution of -29.36186 found by rounding after 1511 iterations and 12 nodes (1.86 seconds)
Cbc0012I Integer solution of -29.412358 found by rounding after 1560 iterations and 14 nodes (1.91 seconds)
Cbc0001I Search completed - best objective -29.412358, took 1560 iterations and 14 nodes (1.91 seconds)
Cbc0032I Strong branching done 148 times (658 iterations), fathomed 1 nodes and fixed 1 variables
Cbc0035I Maximum depth 5, 19 variables fixed on reduced cost
Total time (CPU seconds):       1.22   (Wallclock seconds):       1.91

