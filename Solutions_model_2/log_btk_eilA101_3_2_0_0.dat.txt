Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 100 (-3) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 4.08326e-05 - average 2.17195e-07, 25 fixed columns
Coin0506I Presolve 134 (-54) rows, 74 (-26) columns and 408 (-160) elements
Clp0029I End of values pass after 74 iterations
Clp0014I Perturbing problem by 0.001% of 2.26334 - largest nonzero change 0 ( 0%) - largest zero change 2.8832638e-05
Clp0000I Optimal - objective value 45.354456
Clp0000I Optimal - objective value 45.354456
Coin0511I After Postsolve, objective 45.354456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.354456
Clp0000I Optimal - objective value 45.354456
Clp0000I Optimal - objective value 45.354456
Coin0511I After Postsolve, objective 45.354456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.35445648 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 100 columns (99 integer (99 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.925%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 11.3924
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.76416 iterations 76
Cbc0038I Solution found of -4.76416
Cbc0038I Relaxing continuous gives -4.76416
Cbc0038I Rounding solution of -8.05994 is better than previous of -4.76416

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 100 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -8.05994 to -10.5915 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.0679
Cbc0038I Pass   2: suminf.    1.08993 (4) obj. -14.0679 iterations 5
Cbc0038I Pass   3: suminf.    1.58553 (5) obj. -14.0679 iterations 8
Cbc0038I Pass   4: suminf.    1.58553 (5) obj. -14.0679 iterations 0
Cbc0038I Pass   5: suminf.    1.81938 (5) obj. -14.0679 iterations 6
Cbc0038I Pass   6: suminf.    1.62747 (5) obj. -14.0679 iterations 2
Cbc0038I Pass   7: suminf.    1.78224 (5) obj. -14.0679 iterations 6
Cbc0038I Pass   8: suminf.    4.92282 (13) obj. -14.0679 iterations 27
Cbc0038I Pass   9: suminf.    2.60161 (8) obj. -14.0679 iterations 21
Cbc0038I Pass  10: suminf.    2.46150 (7) obj. -14.0679 iterations 1
Cbc0038I Pass  11: suminf.    2.41286 (7) obj. -14.0679 iterations 1
Cbc0038I Pass  12: suminf.    2.05964 (6) obj. -14.0679 iterations 6
Cbc0038I Pass  13: suminf.    1.94652 (5) obj. -14.0679 iterations 1
Cbc0038I Pass  14: suminf.    1.89008 (5) obj. -14.0679 iterations 1
Cbc0038I Pass  15: suminf.    1.56622 (6) obj. -14.0679 iterations 2
Cbc0038I Pass  16: suminf.    1.56334 (7) obj. -14.0679 iterations 1
Cbc0038I Pass  17: suminf.    3.47930 (9) obj. -14.0679 iterations 6
Cbc0038I Pass  18: suminf.    1.17003 (6) obj. -14.0679 iterations 8
Cbc0038I Pass  19: suminf.    1.17003 (6) obj. -14.0679 iterations 0
Cbc0038I Pass  20: suminf.    1.66394 (5) obj. -14.0679 iterations 7
Cbc0038I Pass  21: suminf.    1.61465 (6) obj. -14.0679 iterations 2
Cbc0038I Pass  22: suminf.    4.51219 (14) obj. -14.0679 iterations 37
Cbc0038I Pass  23: suminf.    1.68453 (7) obj. -14.0679 iterations 18
Cbc0038I Pass  24: suminf.    1.42607 (5) obj. -14.0679 iterations 14
Cbc0038I Pass  25: suminf.    1.42607 (5) obj. -14.0679 iterations 0
Cbc0038I Pass  26: suminf.    1.64063 (4) obj. -14.0679 iterations 2
Cbc0038I Pass  27: suminf.    1.35008 (4) obj. -14.0679 iterations 1
Cbc0038I Pass  28: suminf.    3.00104 (9) obj. -14.0679 iterations 26
Cbc0038I Pass  29: suminf.    2.04399 (8) obj. -14.0679 iterations 9
Cbc0038I Pass  30: suminf.    1.68100 (6) obj. -14.0679 iterations 17
Cbc0038I Pass  31: suminf.    1.62614 (5) obj. -14.0679 iterations 1
Cbc0038I Rounding solution of -12.6602 is better than previous of -10.5915

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 100 columns, reduced to 126 rows 69 columns - 4 fixed gives 105, 65 - ok now
Cbc0038I Full problem 188 rows 100 columns, reduced to 105 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -12.6602 to -17.7108 (0.16 seconds)
Cbc0038I Round again with cutoff of -23.2396
Cbc0038I Pass  31: suminf.    2.44386 (10) obj. -23.2396 iterations 7
Cbc0038I Pass  32: suminf.    2.36260 (9) obj. -23.2396 iterations 1
Cbc0038I Pass  33: suminf.    2.41452 (8) obj. -23.2396 iterations 13
Cbc0038I Pass  34: suminf.    2.41452 (8) obj. -23.2396 iterations 4
Cbc0038I Pass  35: suminf.    2.29790 (7) obj. -23.2396 iterations 8
Cbc0038I Pass  36: suminf.    2.22387 (7) obj. -23.2396 iterations 3
Cbc0038I Pass  37: suminf.    2.74409 (7) obj. -23.2396 iterations 5
Cbc0038I Pass  38: suminf.    2.74409 (7) obj. -23.2396 iterations 0
Cbc0038I Pass  39: suminf.    1.82775 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  40: suminf.    1.76931 (7) obj. -23.2396 iterations 1
Cbc0038I Pass  41: suminf.    2.41456 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  42: suminf.    2.41456 (8) obj. -23.2396 iterations 0
Cbc0038I Pass  43: suminf.    2.81609 (8) obj. -23.2396 iterations 6
Cbc0038I Pass  44: suminf.    1.95909 (7) obj. -23.2396 iterations 4
Cbc0038I Pass  45: suminf.    1.76931 (7) obj. -23.2396 iterations 2
Cbc0038I Pass  46: suminf.    1.76931 (7) obj. -23.2396 iterations 0
Cbc0038I Pass  47: suminf.    2.41456 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  48: suminf.    2.41456 (8) obj. -23.2396 iterations 0
Cbc0038I Pass  49: suminf.    2.81609 (8) obj. -23.2396 iterations 6
Cbc0038I Pass  50: suminf.    1.95909 (7) obj. -23.2396 iterations 4
Cbc0038I Pass  51: suminf.    1.76931 (7) obj. -23.2396 iterations 2
Cbc0038I Pass  52: suminf.    1.76931 (7) obj. -23.2396 iterations 0
Cbc0038I Pass  53: suminf.    2.41456 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  54: suminf.    2.41456 (8) obj. -23.2396 iterations 0
Cbc0038I Pass  55: suminf.    2.81609 (8) obj. -23.2396 iterations 6
Cbc0038I Pass  56: suminf.    1.95909 (7) obj. -23.2396 iterations 4
Cbc0038I Pass  57: suminf.    1.76931 (7) obj. -23.2396 iterations 2
Cbc0038I Pass  58: suminf.    1.76931 (7) obj. -23.2396 iterations 0
Cbc0038I Pass  59: suminf.    2.41456 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  60: suminf.    2.41456 (8) obj. -23.2396 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 100 columns, reduced to 89 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.21 seconds)
Cbc0038I After 0.21 seconds - Feasibility pump exiting with objective of -17.7108 - took 0.19 seconds
Cbc0012I Integer solution of -17.710839 found by feasibility pump after 0 iterations and 0 nodes (0.21 seconds)
Cbc0038I Full problem 188 rows 100 columns, reduced to 88 rows 50 columns
Cbc0031I 30 added rows had average density of 66.533333
Cbc0013I At root node, 30 cuts changed objective from -45.354456 to -33.828214 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15089 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2265 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.131 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.123 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 222 row cuts average 64.4 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.710839 best solution, best possible -33.828214 (1.46 seconds)
Cbc0038I Full problem 188 rows 100 columns, reduced to 64 rows 40 columns
Cbc0001I Search completed - best objective -17.710839, took 11343 iterations and 62 nodes (1.81 seconds)
Cbc0032I Strong branching done 834 times (13559 iterations), fathomed 1 nodes and fixed 43 variables
Cbc0035I Maximum depth 24, 124 variables fixed on reduced cost
Total time (CPU seconds):       1.74   (Wallclock seconds):       1.82

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-68) rows, 146 (-56) columns and 2601 (-3052) elements
Clp1000I sum of infeasibilities 1.59072e-07 - average 1.16965e-09, 78 fixed columns
Coin0506I Presolve 58 (-78) rows, 68 (-78) columns and 246 (-2355) elements
Clp0006I 0  Obj -21.60013 Dual inf 3.4449928 (68)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 1.4393957 - largest nonzero change 1.9194337e-05 ( 0.0014083952%) - largest zero change 2.728119e-05
Clp0000I Optimal - objective value -18.4047
Clp0000I Optimal - objective value -18.4047
Coin0511I After Postsolve, objective -18.4047, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -18.4047 Dual inf 126.71688 (48)
Clp0014I Perturbing problem by 0.001% of 1.628118 - largest nonzero change 1.6552997e-05 ( 0.0014083952%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 62.253541
Clp0000I Optimal - objective value 62.253541
Clp0000I Optimal - objective value 62.253541
Coin0511I After Postsolve, objective 62.253541, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.25354111 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 146 columns (146 integer (146 of which binary)) and 2603 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.650%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 5.51911
Cbc0038I Pass   1: suminf.    2.68788 (34) obj. -49.2907 iterations 18
Cbc0038I Pass   2: suminf.    2.68788 (34) obj. -49.2907 iterations 1
Cbc0038I Pass   3: suminf.    0.51066 (11) obj. -10.5878 iterations 23
Cbc0038I Solution found of 2.75984
Cbc0038I Rounding solution of 0.66023 is better than previous of 2.75984

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 146 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 0.66023 to -1.60484 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.32592
Cbc0038I Pass   4: suminf.    2.68788 (34) obj. -49.2907 iterations 0
Cbc0038I Pass   5: suminf.    2.68788 (34) obj. -49.2907 iterations 1
Cbc0038I Pass   6: suminf.    1.20599 (20) obj. -21.6628 iterations 14
Cbc0038I Pass   7: suminf.    0.50067 (8) obj. -7.32592 iterations 14
Cbc0038I Pass   8: suminf.    0.54391 (3) obj. -7.32592 iterations 10
Cbc0038I Pass   9: suminf.    0.54391 (3) obj. -7.32592 iterations 0
Cbc0038I Pass  10: suminf.    1.12712 (8) obj. -7.32592 iterations 7
Cbc0038I Pass  11: suminf.    0.33307 (2) obj. -7.32592 iterations 8
Cbc0038I Pass  12: suminf.    0.21687 (2) obj. -7.32592 iterations 2
Cbc0038I Pass  13: suminf.    3.98101 (22) obj. -7.32592 iterations 41
Cbc0038I Pass  14: suminf.    2.68273 (18) obj. -7.32592 iterations 9
Cbc0038I Pass  15: suminf.    0.78610 (5) obj. -7.32592 iterations 27
Cbc0038I Pass  16: suminf.    0.78469 (5) obj. -7.92977 iterations 2
Cbc0038I Pass  17: suminf.    0.84646 (4) obj. -7.32592 iterations 11
Cbc0038I Pass  18: suminf.    0.49831 (4) obj. -7.32592 iterations 6
Cbc0038I Pass  19: suminf.    0.86310 (4) obj. -7.32592 iterations 6
Cbc0038I Pass  20: suminf.    0.86310 (4) obj. -7.32592 iterations 4
Cbc0038I Pass  21: suminf.    1.04392 (4) obj. -7.32592 iterations 5
Cbc0038I Pass  22: suminf.    1.04392 (4) obj. -7.32592 iterations 3
Cbc0038I Pass  23: suminf.    0.86310 (4) obj. -7.32592 iterations 4
Cbc0038I Pass  24: suminf.    1.02687 (13) obj. -7.32592 iterations 41
Cbc0038I Pass  25: suminf.    0.98355 (10) obj. -7.32592 iterations 15
Cbc0038I Pass  26: suminf.    0.57266 (6) obj. -7.32592 iterations 10
Cbc0038I Pass  27: suminf.    0.56150 (6) obj. -7.35942 iterations 3
Cbc0038I Pass  28: suminf.    0.57266 (6) obj. -7.32592 iterations 7
Cbc0038I Pass  29: suminf.    2.00164 (11) obj. -7.32592 iterations 24
Cbc0038I Pass  30: suminf.    1.52363 (11) obj. -7.32592 iterations 6
Cbc0038I Pass  31: suminf.    0.87624 (5) obj. -7.32592 iterations 19
Cbc0038I Pass  32: suminf.    0.45847 (5) obj. -7.32592 iterations 6
Cbc0038I Pass  33: suminf.    1.20315 (4) obj. -7.32592 iterations 11
Cbc0038I Rounding solution of -2.97681 is better than previous of -1.60484

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 146 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -2.97681 to -4.17985 (0.07 seconds)
Cbc0038I Round again with cutoff of -17.6237
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.68788 (34) obj. -49.2907 iterations 0
Cbc0038I Pass  34: suminf.    2.68788 (34) obj. -49.2907 iterations 1
Cbc0038I Pass  35: suminf.    1.25037 (13) obj. -17.6237 iterations 25
Cbc0038I Pass  36: suminf.    1.25037 (13) obj. -17.6237 iterations 0
Cbc0038I Pass  37: suminf.    1.17097 (9) obj. -17.6237 iterations 22
Cbc0038I Pass  38: suminf.    0.74528 (9) obj. -17.6237 iterations 3
Cbc0038I Pass  39: suminf.    0.97758 (6) obj. -17.6237 iterations 23
Cbc0038I Pass  40: suminf.    0.95354 (6) obj. -17.6237 iterations 3
Cbc0038I Pass  41: suminf.    0.98882 (6) obj. -17.6237 iterations 5
Cbc0038I Pass  42: suminf.    0.98882 (6) obj. -17.6237 iterations 3
Cbc0038I Pass  43: suminf.    0.95354 (6) obj. -17.6237 iterations 5
Cbc0038I Pass  44: suminf.    1.85284 (17) obj. -19.1799 iterations 32
Cbc0038I Pass  45: suminf.    1.85284 (17) obj. -19.1799 iterations 4
Cbc0038I Pass  46: suminf.    0.89439 (7) obj. -17.6237 iterations 21
Cbc0038I Pass  47: suminf.    0.80833 (7) obj. -17.7958 iterations 4
Cbc0038I Pass  48: suminf.    0.89439 (7) obj. -17.6237 iterations 5
Cbc0038I Pass  49: suminf.    2.66472 (17) obj. -17.6237 iterations 23
Cbc0038I Pass  50: suminf.    2.00409 (16) obj. -17.6237 iterations 6
Cbc0038I Pass  51: suminf.    1.39118 (9) obj. -17.6237 iterations 22
Cbc0038I Pass  52: suminf.    1.27526 (9) obj. -17.6237 iterations 3
Cbc0038I Pass  53: suminf.    1.20309 (6) obj. -17.6237 iterations 16
Cbc0038I Pass  54: suminf.    0.95909 (6) obj. -18.1909 iterations 4
Cbc0038I Pass  55: suminf.    1.14814 (6) obj. -17.6237 iterations 4
Cbc0038I Pass  56: suminf.    1.29274 (16) obj. -17.6237 iterations 32
Cbc0038I Pass  57: suminf.    1.20558 (13) obj. -17.6237 iterations 9
Cbc0038I Pass  58: suminf.    1.14239 (7) obj. -17.6237 iterations 27
Cbc0038I Pass  59: suminf.    1.14239 (7) obj. -17.6237 iterations 3
Cbc0038I Pass  60: suminf.    1.46001 (7) obj. -17.6237 iterations 8
Cbc0038I Pass  61: suminf.    1.46001 (7) obj. -17.6237 iterations 3
Cbc0038I Pass  62: suminf.    1.14239 (7) obj. -17.6237 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 146 columns, reduced to 55 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -4.17985 to -11.0741 (0.12 seconds)
Cbc0038I Round again with cutoff of -29.981
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.68788 (34) obj. -49.2907 iterations 0
Cbc0038I Pass  63: suminf.    2.68788 (34) obj. -49.2907 iterations 1
Cbc0038I Pass  64: suminf.    1.77505 (18) obj. -29.981 iterations 32
Cbc0038I Pass  65: suminf.    1.58848 (18) obj. -29.981 iterations 1
Cbc0038I Pass  66: suminf.    1.69499 (14) obj. -29.981 iterations 27
Cbc0038I Pass  67: suminf.    1.67986 (14) obj. -29.981 iterations 2
Cbc0038I Pass  68: suminf.    1.37697 (12) obj. -29.981 iterations 12
Cbc0038I Pass  69: suminf.    1.27438 (12) obj. -29.981 iterations 6
Cbc0038I Pass  70: suminf.    1.32951 (12) obj. -29.981 iterations 6
Cbc0038I Pass  71: suminf.    2.23070 (23) obj. -29.981 iterations 28
Cbc0038I Pass  72: suminf.    1.78600 (14) obj. -30.0194 iterations 13
Cbc0038I Pass  73: suminf.    1.86635 (14) obj. -29.981 iterations 17
Cbc0038I Pass  74: suminf.    1.83548 (15) obj. -29.981 iterations 11
Cbc0038I Pass  75: suminf.    1.60592 (13) obj. -29.981 iterations 17
Cbc0038I Pass  76: suminf.    1.60592 (13) obj. -29.981 iterations 6
Cbc0038I Pass  77: suminf.    1.59166 (13) obj. -29.981 iterations 10
Cbc0038I Pass  78: suminf.    1.59166 (13) obj. -29.981 iterations 6
Cbc0038I Pass  79: suminf.    2.65281 (16) obj. -29.981 iterations 26
Cbc0038I Pass  80: suminf.    2.52220 (16) obj. -29.981 iterations 7
Cbc0038I Pass  81: suminf.    1.44558 (12) obj. -29.981 iterations 17
Cbc0038I Pass  82: suminf.    1.42285 (12) obj. -30.0265 iterations 6
Cbc0038I Pass  83: suminf.    1.44558 (12) obj. -29.981 iterations 6
Cbc0038I Pass  84: suminf.    1.66142 (15) obj. -29.981 iterations 21
Cbc0038I Pass  85: suminf.    1.46827 (14) obj. -29.981 iterations 16
Cbc0038I Pass  86: suminf.    1.43518 (13) obj. -29.981 iterations 18
Cbc0038I Pass  87: suminf.    1.26941 (13) obj. -29.981 iterations 5
Cbc0038I Pass  88: suminf.    1.91084 (13) obj. -29.981 iterations 8
Cbc0038I Pass  89: suminf.    3.07734 (21) obj. -29.981 iterations 29
Cbc0038I Pass  90: suminf.    2.81324 (19) obj. -29.981 iterations 11
Cbc0038I Pass  91: suminf.    1.96169 (16) obj. -29.981 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -11.0741 - took 0.13 seconds
Cbc0012I Integer solution of -11.074098 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 136 rows 146 columns, reduced to 38 rows 42 columns
Cbc0031I 68 added rows had average density of 35.764706
Cbc0013I At root node, 68 cuts changed objective from -58.814767 to -23.905327 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11114 row cuts average 2.0 elements, 0 column cuts (38 active)  in 0.143 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1256 row cuts average 131.9 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 845 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 977 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 78 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.554 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.074098 best solution, best possible -23.905327 (2.77 seconds)
Cbc0012I Integer solution of -14.608586 found by rounding after 5509 iterations and 1 nodes (2.80 seconds)
Cbc0012I Integer solution of -15.292488 found by DiveCoefficient after 5509 iterations and 1 nodes (2.80 seconds)
Cbc0012I Integer solution of -15.40497 found by rounding after 5516 iterations and 2 nodes (2.81 seconds)
Cbc0012I Integer solution of -15.76132 found by rounding after 5663 iterations and 7 nodes (2.83 seconds)
Cbc0004I Integer solution of -17.710839 found after 6445 iterations and 19 nodes (3.38 seconds)
Cbc0001I Search completed - best objective -17.710839, took 6740 iterations and 26 nodes (3.39 seconds)
Cbc0032I Strong branching done 492 times (10813 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 8, 67 variables fixed on reduced cost
Total time (CPU seconds):       2.69   (Wallclock seconds):       3.41

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 188 (-17) rows, 100 (-3) columns and 568 (-35) elements
Clp1000I sum of infeasibilities 4.08326e-05 - average 2.17195e-07, 25 fixed columns
Coin0506I Presolve 134 (-54) rows, 74 (-26) columns and 408 (-160) elements
Clp0029I End of values pass after 74 iterations
Clp0014I Perturbing problem by 0.001% of 2.26334 - largest nonzero change 0 ( 0%) - largest zero change 2.8832638e-05
Clp0000I Optimal - objective value 45.354456
Clp0000I Optimal - objective value 45.354456
Coin0511I After Postsolve, objective 45.354456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 45.354456
Clp0000I Optimal - objective value 45.354456
Clp0000I Optimal - objective value 45.354456
Coin0511I After Postsolve, objective 45.354456, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 45.35445648 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 188 rows, 100 columns (99 integer (99 of which binary)) and 568 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.925%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 11.3924
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -4.76416 iterations 76
Cbc0038I Solution found of -4.76416
Cbc0038I Relaxing continuous gives -4.76416
Cbc0038I Rounding solution of -8.05994 is better than previous of -4.76416

Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 100 columns, reduced to 87 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -8.05994 to -10.5915 (0.08 seconds)
Cbc0038I Round again with cutoff of -14.0679
Cbc0038I Pass   2: suminf.    1.08993 (4) obj. -14.0679 iterations 5
Cbc0038I Pass   3: suminf.    1.58553 (5) obj. -14.0679 iterations 8
Cbc0038I Pass   4: suminf.    1.58553 (5) obj. -14.0679 iterations 0
Cbc0038I Pass   5: suminf.    1.81938 (5) obj. -14.0679 iterations 6
Cbc0038I Pass   6: suminf.    1.62747 (5) obj. -14.0679 iterations 2
Cbc0038I Pass   7: suminf.    1.78224 (5) obj. -14.0679 iterations 6
Cbc0038I Pass   8: suminf.    4.92282 (13) obj. -14.0679 iterations 27
Cbc0038I Pass   9: suminf.    2.60161 (8) obj. -14.0679 iterations 21
Cbc0038I Pass  10: suminf.    2.46150 (7) obj. -14.0679 iterations 1
Cbc0038I Pass  11: suminf.    2.41286 (7) obj. -14.0679 iterations 1
Cbc0038I Pass  12: suminf.    2.05964 (6) obj. -14.0679 iterations 6
Cbc0038I Pass  13: suminf.    1.94652 (5) obj. -14.0679 iterations 1
Cbc0038I Pass  14: suminf.    1.89008 (5) obj. -14.0679 iterations 1
Cbc0038I Pass  15: suminf.    1.56622 (6) obj. -14.0679 iterations 2
Cbc0038I Pass  16: suminf.    1.56334 (7) obj. -14.0679 iterations 1
Cbc0038I Pass  17: suminf.    3.47930 (9) obj. -14.0679 iterations 6
Cbc0038I Pass  18: suminf.    1.17003 (6) obj. -14.0679 iterations 8
Cbc0038I Pass  19: suminf.    1.17003 (6) obj. -14.0679 iterations 0
Cbc0038I Pass  20: suminf.    1.66394 (5) obj. -14.0679 iterations 7
Cbc0038I Pass  21: suminf.    1.61465 (6) obj. -14.0679 iterations 2
Cbc0038I Pass  22: suminf.    4.51219 (14) obj. -14.0679 iterations 37
Cbc0038I Pass  23: suminf.    1.68453 (7) obj. -14.0679 iterations 18
Cbc0038I Pass  24: suminf.    1.42607 (5) obj. -14.0679 iterations 14
Cbc0038I Pass  25: suminf.    1.42607 (5) obj. -14.0679 iterations 0
Cbc0038I Pass  26: suminf.    1.64063 (4) obj. -14.0679 iterations 2
Cbc0038I Pass  27: suminf.    1.35008 (4) obj. -14.0679 iterations 1
Cbc0038I Pass  28: suminf.    3.00104 (9) obj. -14.0679 iterations 26
Cbc0038I Pass  29: suminf.    2.04399 (8) obj. -14.0679 iterations 9
Cbc0038I Pass  30: suminf.    1.68100 (6) obj. -14.0679 iterations 17
Cbc0038I Pass  31: suminf.    1.62614 (5) obj. -14.0679 iterations 1
Cbc0038I Rounding solution of -12.6602 is better than previous of -10.5915

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 100 columns, reduced to 126 rows 69 columns - 4 fixed gives 105, 65 - ok now
Cbc0038I Full problem 188 rows 100 columns, reduced to 105 rows 65 columns
Cbc0038I Mini branch and bound improved solution from -12.6602 to -17.7108 (0.16 seconds)
Cbc0038I Round again with cutoff of -23.2396
Cbc0038I Pass  31: suminf.    2.44386 (10) obj. -23.2396 iterations 7
Cbc0038I Pass  32: suminf.    2.36260 (9) obj. -23.2396 iterations 1
Cbc0038I Pass  33: suminf.    2.41452 (8) obj. -23.2396 iterations 13
Cbc0038I Pass  34: suminf.    2.41452 (8) obj. -23.2396 iterations 4
Cbc0038I Pass  35: suminf.    2.29790 (7) obj. -23.2396 iterations 8
Cbc0038I Pass  36: suminf.    2.22387 (7) obj. -23.2396 iterations 3
Cbc0038I Pass  37: suminf.    2.74409 (7) obj. -23.2396 iterations 5
Cbc0038I Pass  38: suminf.    2.74409 (7) obj. -23.2396 iterations 0
Cbc0038I Pass  39: suminf.    1.82775 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  40: suminf.    1.76931 (7) obj. -23.2396 iterations 1
Cbc0038I Pass  41: suminf.    2.41456 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  42: suminf.    2.41456 (8) obj. -23.2396 iterations 0
Cbc0038I Pass  43: suminf.    2.81609 (8) obj. -23.2396 iterations 6
Cbc0038I Pass  44: suminf.    1.95909 (7) obj. -23.2396 iterations 4
Cbc0038I Pass  45: suminf.    1.76931 (7) obj. -23.2396 iterations 2
Cbc0038I Pass  46: suminf.    1.76931 (7) obj. -23.2396 iterations 0
Cbc0038I Pass  47: suminf.    2.41456 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  48: suminf.    2.41456 (8) obj. -23.2396 iterations 0
Cbc0038I Pass  49: suminf.    2.81609 (8) obj. -23.2396 iterations 6
Cbc0038I Pass  50: suminf.    1.95909 (7) obj. -23.2396 iterations 4
Cbc0038I Pass  51: suminf.    1.76931 (7) obj. -23.2396 iterations 2
Cbc0038I Pass  52: suminf.    1.76931 (7) obj. -23.2396 iterations 0
Cbc0038I Pass  53: suminf.    2.41456 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  54: suminf.    2.41456 (8) obj. -23.2396 iterations 0
Cbc0038I Pass  55: suminf.    2.81609 (8) obj. -23.2396 iterations 6
Cbc0038I Pass  56: suminf.    1.95909 (7) obj. -23.2396 iterations 4
Cbc0038I Pass  57: suminf.    1.76931 (7) obj. -23.2396 iterations 2
Cbc0038I Pass  58: suminf.    1.76931 (7) obj. -23.2396 iterations 0
Cbc0038I Pass  59: suminf.    2.41456 (8) obj. -23.2396 iterations 7
Cbc0038I Pass  60: suminf.    2.41456 (8) obj. -23.2396 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 49 integers at bound fixed and 0 continuous
Cbc0038I Full problem 188 rows 100 columns, reduced to 89 rows 51 columns
Cbc0038I Mini branch and bound did not improve solution (0.22 seconds)
Cbc0038I After 0.22 seconds - Feasibility pump exiting with objective of -17.7108 - took 0.19 seconds
Cbc0012I Integer solution of -17.710839 found by feasibility pump after 0 iterations and 0 nodes (0.22 seconds)
Cbc0038I Full problem 188 rows 100 columns, reduced to 88 rows 50 columns
Cbc0031I 30 added rows had average density of 66.533333
Cbc0013I At root node, 30 cuts changed objective from -45.354456 to -33.828214 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 15089 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.128 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2265 row cuts average 97.2 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.122 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 222 row cuts average 64.4 elements, 0 column cuts (0 active)  in 0.053 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -17.710839 best solution, best possible -33.828214 (1.46 seconds)
Cbc0038I Full problem 188 rows 100 columns, reduced to 64 rows 40 columns
Cbc0001I Search completed - best objective -17.710839, took 11343 iterations and 62 nodes (1.81 seconds)
Cbc0032I Strong branching done 834 times (13559 iterations), fathomed 1 nodes and fixed 43 variables
Cbc0035I Maximum depth 24, 124 variables fixed on reduced cost
Total time (CPU seconds):       1.74   (Wallclock seconds):       1.83

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 136 (-69) rows, 146 (-57) columns and 2601 (-3053) elements
Clp1000I sum of infeasibilities 1.59072e-07 - average 1.16965e-09, 78 fixed columns
Coin0506I Presolve 58 (-78) rows, 68 (-78) columns and 246 (-2355) elements
Clp0006I 0  Obj -21.60013 Dual inf 3.4449928 (68)
Clp0029I End of values pass after 68 iterations
Clp0014I Perturbing problem by 0.001% of 1.4393957 - largest nonzero change 1.9194337e-05 ( 0.0014083952%) - largest zero change 2.728119e-05
Clp0000I Optimal - objective value -18.4047
Clp0000I Optimal - objective value -18.4047
Coin0511I After Postsolve, objective -18.4047, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -18.4047 Dual inf 126.71688 (48)
Clp0014I Perturbing problem by 0.001% of 1.628118 - largest nonzero change 1.6552997e-05 ( 0.0014083952%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 62.253541
Clp0000I Optimal - objective value 62.253541
Clp0000I Optimal - objective value 62.253541
Coin0511I After Postsolve, objective 62.253541, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 62.25354111 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 136 rows, 146 columns (146 integer (146 of which binary)) and 2603 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.650%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 5.51911
Cbc0038I Pass   1: suminf.    2.68788 (34) obj. -49.2907 iterations 18
Cbc0038I Pass   2: suminf.    2.68788 (34) obj. -49.2907 iterations 1
Cbc0038I Pass   3: suminf.    0.51066 (11) obj. -10.5878 iterations 23
Cbc0038I Solution found of 2.75984
Cbc0038I Rounding solution of 0.66023 is better than previous of 2.75984

Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 146 columns, reduced to 14 rows 15 columns
Cbc0038I Mini branch and bound improved solution from 0.66023 to -1.60484 (0.04 seconds)
Cbc0038I Round again with cutoff of -7.32592
Cbc0038I Pass   4: suminf.    2.68788 (34) obj. -49.2907 iterations 0
Cbc0038I Pass   5: suminf.    2.68788 (34) obj. -49.2907 iterations 1
Cbc0038I Pass   6: suminf.    1.20599 (20) obj. -21.6628 iterations 14
Cbc0038I Pass   7: suminf.    0.50067 (8) obj. -7.32592 iterations 14
Cbc0038I Pass   8: suminf.    0.54391 (3) obj. -7.32592 iterations 10
Cbc0038I Pass   9: suminf.    0.54391 (3) obj. -7.32592 iterations 0
Cbc0038I Pass  10: suminf.    1.12712 (8) obj. -7.32592 iterations 7
Cbc0038I Pass  11: suminf.    0.33307 (2) obj. -7.32592 iterations 8
Cbc0038I Pass  12: suminf.    0.21687 (2) obj. -7.32592 iterations 2
Cbc0038I Pass  13: suminf.    3.98101 (22) obj. -7.32592 iterations 41
Cbc0038I Pass  14: suminf.    2.68273 (18) obj. -7.32592 iterations 9
Cbc0038I Pass  15: suminf.    0.78610 (5) obj. -7.32592 iterations 27
Cbc0038I Pass  16: suminf.    0.78469 (5) obj. -7.92977 iterations 2
Cbc0038I Pass  17: suminf.    0.84646 (4) obj. -7.32592 iterations 11
Cbc0038I Pass  18: suminf.    0.49831 (4) obj. -7.32592 iterations 6
Cbc0038I Pass  19: suminf.    0.86310 (4) obj. -7.32592 iterations 6
Cbc0038I Pass  20: suminf.    0.86310 (4) obj. -7.32592 iterations 4
Cbc0038I Pass  21: suminf.    1.04392 (4) obj. -7.32592 iterations 5
Cbc0038I Pass  22: suminf.    1.04392 (4) obj. -7.32592 iterations 3
Cbc0038I Pass  23: suminf.    0.86310 (4) obj. -7.32592 iterations 4
Cbc0038I Pass  24: suminf.    1.02687 (13) obj. -7.32592 iterations 41
Cbc0038I Pass  25: suminf.    0.98355 (10) obj. -7.32592 iterations 15
Cbc0038I Pass  26: suminf.    0.57266 (6) obj. -7.32592 iterations 10
Cbc0038I Pass  27: suminf.    0.56150 (6) obj. -7.35942 iterations 3
Cbc0038I Pass  28: suminf.    0.57266 (6) obj. -7.32592 iterations 7
Cbc0038I Pass  29: suminf.    2.00164 (11) obj. -7.32592 iterations 24
Cbc0038I Pass  30: suminf.    1.52363 (11) obj. -7.32592 iterations 6
Cbc0038I Pass  31: suminf.    0.87624 (5) obj. -7.32592 iterations 19
Cbc0038I Pass  32: suminf.    0.45847 (5) obj. -7.32592 iterations 6
Cbc0038I Pass  33: suminf.    1.20315 (4) obj. -7.32592 iterations 11
Cbc0038I Rounding solution of -2.97681 is better than previous of -1.60484

Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 146 columns, reduced to 27 rows 34 columns
Cbc0038I Mini branch and bound improved solution from -2.97681 to -4.17985 (0.07 seconds)
Cbc0038I Round again with cutoff of -17.6237
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    2.68788 (34) obj. -49.2907 iterations 0
Cbc0038I Pass  34: suminf.    2.68788 (34) obj. -49.2907 iterations 1
Cbc0038I Pass  35: suminf.    1.25037 (13) obj. -17.6237 iterations 25
Cbc0038I Pass  36: suminf.    1.25037 (13) obj. -17.6237 iterations 0
Cbc0038I Pass  37: suminf.    1.17097 (9) obj. -17.6237 iterations 22
Cbc0038I Pass  38: suminf.    0.74528 (9) obj. -17.6237 iterations 3
Cbc0038I Pass  39: suminf.    0.97758 (6) obj. -17.6237 iterations 23
Cbc0038I Pass  40: suminf.    0.95354 (6) obj. -17.6237 iterations 3
Cbc0038I Pass  41: suminf.    0.98882 (6) obj. -17.6237 iterations 5
Cbc0038I Pass  42: suminf.    0.98882 (6) obj. -17.6237 iterations 3
Cbc0038I Pass  43: suminf.    0.95354 (6) obj. -17.6237 iterations 5
Cbc0038I Pass  44: suminf.    1.85284 (17) obj. -19.1799 iterations 32
Cbc0038I Pass  45: suminf.    1.85284 (17) obj. -19.1799 iterations 4
Cbc0038I Pass  46: suminf.    0.89439 (7) obj. -17.6237 iterations 21
Cbc0038I Pass  47: suminf.    0.80833 (7) obj. -17.7958 iterations 4
Cbc0038I Pass  48: suminf.    0.89439 (7) obj. -17.6237 iterations 5
Cbc0038I Pass  49: suminf.    2.66472 (17) obj. -17.6237 iterations 23
Cbc0038I Pass  50: suminf.    2.00409 (16) obj. -17.6237 iterations 6
Cbc0038I Pass  51: suminf.    1.39118 (9) obj. -17.6237 iterations 22
Cbc0038I Pass  52: suminf.    1.27526 (9) obj. -17.6237 iterations 3
Cbc0038I Pass  53: suminf.    1.20309 (6) obj. -17.6237 iterations 16
Cbc0038I Pass  54: suminf.    0.95909 (6) obj. -18.1909 iterations 4
Cbc0038I Pass  55: suminf.    1.14814 (6) obj. -17.6237 iterations 4
Cbc0038I Pass  56: suminf.    1.29274 (16) obj. -17.6237 iterations 32
Cbc0038I Pass  57: suminf.    1.20558 (13) obj. -17.6237 iterations 9
Cbc0038I Pass  58: suminf.    1.14239 (7) obj. -17.6237 iterations 27
Cbc0038I Pass  59: suminf.    1.14239 (7) obj. -17.6237 iterations 3
Cbc0038I Pass  60: suminf.    1.46001 (7) obj. -17.6237 iterations 8
Cbc0038I Pass  61: suminf.    1.46001 (7) obj. -17.6237 iterations 3
Cbc0038I Pass  62: suminf.    1.14239 (7) obj. -17.6237 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 136 rows 146 columns, reduced to 55 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -4.17985 to -11.0741 (0.12 seconds)
Cbc0038I Round again with cutoff of -29.981
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  62: suminf.    2.68788 (34) obj. -49.2907 iterations 0
Cbc0038I Pass  63: suminf.    2.68788 (34) obj. -49.2907 iterations 1
Cbc0038I Pass  64: suminf.    1.77505 (18) obj. -29.981 iterations 32
Cbc0038I Pass  65: suminf.    1.58848 (18) obj. -29.981 iterations 1
Cbc0038I Pass  66: suminf.    1.69499 (14) obj. -29.981 iterations 27
Cbc0038I Pass  67: suminf.    1.67986 (14) obj. -29.981 iterations 2
Cbc0038I Pass  68: suminf.    1.37697 (12) obj. -29.981 iterations 12
Cbc0038I Pass  69: suminf.    1.27438 (12) obj. -29.981 iterations 6
Cbc0038I Pass  70: suminf.    1.32951 (12) obj. -29.981 iterations 6
Cbc0038I Pass  71: suminf.    2.23070 (23) obj. -29.981 iterations 28
Cbc0038I Pass  72: suminf.    1.78600 (14) obj. -30.0194 iterations 13
Cbc0038I Pass  73: suminf.    1.86635 (14) obj. -29.981 iterations 17
Cbc0038I Pass  74: suminf.    1.83548 (15) obj. -29.981 iterations 11
Cbc0038I Pass  75: suminf.    1.60592 (13) obj. -29.981 iterations 17
Cbc0038I Pass  76: suminf.    1.60592 (13) obj. -29.981 iterations 6
Cbc0038I Pass  77: suminf.    1.59166 (13) obj. -29.981 iterations 10
Cbc0038I Pass  78: suminf.    1.59166 (13) obj. -29.981 iterations 6
Cbc0038I Pass  79: suminf.    2.65281 (16) obj. -29.981 iterations 26
Cbc0038I Pass  80: suminf.    2.52220 (16) obj. -29.981 iterations 7
Cbc0038I Pass  81: suminf.    1.44558 (12) obj. -29.981 iterations 17
Cbc0038I Pass  82: suminf.    1.42285 (12) obj. -30.0265 iterations 6
Cbc0038I Pass  83: suminf.    1.44558 (12) obj. -29.981 iterations 6
Cbc0038I Pass  84: suminf.    1.66142 (15) obj. -29.981 iterations 21
Cbc0038I Pass  85: suminf.    1.46827 (14) obj. -29.981 iterations 16
Cbc0038I Pass  86: suminf.    1.43518 (13) obj. -29.981 iterations 18
Cbc0038I Pass  87: suminf.    1.26941 (13) obj. -29.981 iterations 5
Cbc0038I Pass  88: suminf.    1.91084 (13) obj. -29.981 iterations 8
Cbc0038I Pass  89: suminf.    3.07734 (21) obj. -29.981 iterations 29
Cbc0038I Pass  90: suminf.    2.81324 (19) obj. -29.981 iterations 11
Cbc0038I Pass  91: suminf.    1.96169 (16) obj. -29.981 iterations 21
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -11.0741 - took 0.13 seconds
Cbc0012I Integer solution of -11.074098 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 136 rows 146 columns, reduced to 38 rows 42 columns
Cbc0031I 68 added rows had average density of 35.764706
Cbc0013I At root node, 68 cuts changed objective from -58.814767 to -23.905327 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11114 row cuts average 2.0 elements, 0 column cuts (38 active)  in 0.145 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1256 row cuts average 131.9 elements, 0 column cuts (0 active)  in 0.205 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 845 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.041 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 977 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.130 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 335 row cuts average 84.7 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 78 row cuts average 16.2 elements, 0 column cuts (0 active)  in 0.564 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -11.074098 best solution, best possible -23.905327 (2.85 seconds)
Cbc0012I Integer solution of -14.608586 found by rounding after 5509 iterations and 1 nodes (2.89 seconds)
Cbc0012I Integer solution of -15.292488 found by DiveCoefficient after 5509 iterations and 1 nodes (2.89 seconds)
Cbc0012I Integer solution of -15.40497 found by rounding after 5516 iterations and 2 nodes (2.89 seconds)
Cbc0012I Integer solution of -15.76132 found by rounding after 5663 iterations and 7 nodes (2.92 seconds)
Cbc0004I Integer solution of -17.710839 found after 6445 iterations and 19 nodes (3.49 seconds)
Cbc0001I Search completed - best objective -17.710839, took 6740 iterations and 26 nodes (3.51 seconds)
Cbc0032I Strong branching done 492 times (10813 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 8, 67 variables fixed on reduced cost
Total time (CPU seconds):       2.76   (Wallclock seconds):       3.53

