Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 502 (-25) rows, 262 (-2) columns and 1496 (-49) elements
Clp1000I sum of infeasibilities 2.03456e-05 - average 4.0529e-08, 152 fixed columns
Coin0506I Presolve 202 (-300) rows, 110 (-152) columns and 598 (-898) elements
Clp0029I End of values pass after 110 iterations
Clp0014I Perturbing problem by 0.001% of 0.17900991 - largest nonzero change 0 ( 0%) - largest zero change 2.9365872e-05
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Coin0511I After Postsolve, objective 146.64838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13334639 - largest nonzero change 0 ( 0%) - largest zero change 2.9744408e-05
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Coin0511I After Postsolve, objective 146.64838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 146.6483849 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 502 rows, 262 columns (261 integer (261 of which binary)) and 1496 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 10.9035
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.6836 iterations 77
Cbc0038I Solution found of -31.6836
Cbc0038I Relaxing continuous gives -31.6836
Cbc0038I Rounding solution of -68.9755 is better than previous of -31.6836

Cbc0038I Before mini branch and bound, 210 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 92 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -68.9755 to -72.428 (0.06 seconds)
Cbc0038I Round again with cutoff of -79.8501
Cbc0038I Pass   2: suminf.    2.08932 (8) obj. -79.8501 iterations 24
Cbc0038I Pass   3: suminf.    2.03532 (6) obj. -79.8501 iterations 25
Cbc0038I Pass   4: suminf.    1.76333 (7) obj. -79.8501 iterations 25
Cbc0038I Pass   5: suminf.    2.18591 (6) obj. -79.8501 iterations 15
Cbc0038I Pass   6: suminf.    1.78376 (5) obj. -79.8501 iterations 10
Cbc0038I Pass   7: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass   8: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass   9: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  10: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  11: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  12: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  13: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  14: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  15: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass  16: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass  17: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  18: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  19: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  20: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  21: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  22: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  23: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass  24: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass  25: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  26: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  27: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  28: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  29: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  30: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  31: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Rounding solution of -75.2791 is better than previous of -72.428

Cbc0038I Before mini branch and bound, 209 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -93.2098
Cbc0038I Pass  31: suminf.    2.73639 (10) obj. -93.2098 iterations 3
Cbc0038I Pass  32: suminf.    3.22379 (9) obj. -93.2098 iterations 26
Cbc0038I Pass  33: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  34: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  35: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  36: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  37: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  38: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  39: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  40: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  41: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  42: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  43: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  44: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  45: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  46: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  47: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  48: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  49: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  50: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  51: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  52: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  53: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  54: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  55: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  56: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  57: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  58: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  59: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  60: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 207 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I After 0.15 seconds - Feasibility pump exiting with objective of -75.2791 - took 0.12 seconds
Cbc0012I Integer solution of -75.27911 found by feasibility pump after 0 iterations and 0 nodes (0.15 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 95 rows 55 columns
Cbc0031I 37 added rows had average density of 100.86486
Cbc0013I At root node, 37 cuts changed objective from -146.64838 to -128.08711 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25624 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.454 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2627 row cuts average 257.6 elements, 0 column cuts (0 active)  in 0.415 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.439 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 254.6 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -75.27911 best solution, best possible -128.08711 (3.84 seconds)
Cbc0010I After 19 nodes, 11 on tree, -75.27911 best solution, best possible -128.08711 (4.55 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 177 rows 97 columns
Cbc0012I Integer solution of -75.55581 found by RINS after 15682 iterations and 42 nodes (4.83 seconds)
Cbc0012I Integer solution of -76.936783 found by rounding after 17741 iterations and 73 nodes (5.14 seconds)
Cbc0012I Integer solution of -77.845393 found by rounding after 17759 iterations and 74 nodes (5.15 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -78.607313 found by RINS after 18470 iterations and 91 nodes (5.21 seconds)
Cbc0010I After 111 nodes, 11 on tree, -78.607313 best solution, best possible -128.08711 (5.25 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 73 rows 48 columns
Cbc0010I After 237 nodes, 17 on tree, -78.607313 best solution, best possible -128.08711 (5.96 seconds)
Cbc0010I After 363 nodes, 15 on tree, -78.607313 best solution, best possible -128.08711 (6.67 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 16 rows 16 columns
Cbc0004I Integer solution of -78.6656 found after 31566 iterations and 433 nodes (6.99 seconds)
Cbc0012I Integer solution of -79.193743 found by rounding after 35365 iterations and 576 nodes (7.34 seconds)
Cbc0010I After 599 nodes, 8 on tree, -79.193743 best solution, best possible -128.08711 (7.37 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 8 rows 8 columns
Cbc0012I Integer solution of -79.85167 found by rounding after 38379 iterations and 660 nodes (7.72 seconds)
Cbc0012I Integer solution of -81.8525 found by rounding after 39690 iterations and 718 nodes (7.82 seconds)
Cbc0012I Integer solution of -82.07571 found by rounding after 41113 iterations and 771 nodes (8.03 seconds)
Cbc0010I After 796 nodes, 18 on tree, -82.07571 best solution, best possible -128.08711 (8.08 seconds)
Cbc0001I Search completed - best objective -82.07571000000002, took 43450 iterations and 818 nodes (8.12 seconds)
Cbc0032I Strong branching done 5794 times (125922 iterations), fathomed 65 nodes and fixed 261 variables
Cbc0035I Maximum depth 68, 3697 variables fixed on reduced cost
Total time (CPU seconds):       7.95   (Wallclock seconds):       8.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 357 (-169) rows, 377 (-147) columns and 18027 (-17709) elements
Clp1000I sum of infeasibilities 1.71731e-05 - average 4.81038e-08, 265 fixed columns
Coin0506I Presolve 85 (-272) rows, 107 (-270) columns and 366 (-17661) elements
Clp0006I 0  Obj 35.300887 Primal inf 9.0142165e-06 (1) Dual inf 1.0100001e+11 (107)
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 0.16488165 - largest nonzero change 2.6381946e-05 ( 0.0023983587%) - largest zero change 2.9640381e-05
Clp0000I Optimal - objective value 35.639865
Clp0000I Optimal - objective value 35.639865
Coin0511I After Postsolve, objective 35.639865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 35.639865 Dual inf 376.15211 (122)
Clp0014I Perturbing problem by 0.001% of 1.6508065 - largest nonzero change 2.2788203e-05 ( 0.0021869008%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 193.66276
Clp0000I Optimal - objective value 193.66276
Clp0000I Optimal - objective value 193.66276
Coin0511I After Postsolve, objective 193.66276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.6627583 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.08

Starting MIP optimization
Cgl0004I processed model has 357 rows, 377 columns (377 integer (377 of which binary)) and 18027 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.167%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 120 integers unsatisfied sum - 8.89856
Cbc0038I Pass   1: suminf.    4.94100 (100) obj. -173.384 iterations 33
Cbc0038I Pass   2: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass   3: suminf.    3.30747 (80) obj. -133.328 iterations 22
Cbc0038I Pass   4: suminf.    2.54614 (64) obj. -108.568 iterations 16
Cbc0038I Pass   5: suminf.    1.71618 (46) obj. -74.2326 iterations 18
Cbc0038I Pass   6: suminf.    0.86657 (26) obj. -55.0822 iterations 20
Cbc0038I Pass   7: suminf.    0.02381 (1) obj. -28.9872 iterations 25
Cbc0038I Solution found of -28.011
Cbc0038I Rounding solution of -45.4567 is better than previous of -28.011

Cbc0038I Before mini branch and bound, 255 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -60.2774
Cbc0038I Pass   8: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass   9: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  10: suminf.    2.92907 (72) obj. -119.996 iterations 34
Cbc0038I Pass  11: suminf.    2.40959 (61) obj. -104.751 iterations 11
Cbc0038I Pass  12: suminf.    1.76364 (47) obj. -75.1852 iterations 14
Cbc0038I Pass  13: suminf.    0.95387 (19) obj. -60.2774 iterations 41
Cbc0038I Pass  14: suminf.    0.66460 (19) obj. -66.3252 iterations 7
Cbc0038I Pass  15: suminf.    0.75995 (3) obj. -60.2774 iterations 34
Cbc0038I Pass  16: suminf.    0.28953 (3) obj. -61.7545 iterations 8
Cbc0038I Pass  17: suminf.    0.75995 (3) obj. -60.2774 iterations 13
Cbc0038I Pass  18: suminf.    3.07408 (32) obj. -60.2774 iterations 75
Cbc0038I Pass  19: suminf.    2.80978 (33) obj. -60.2774 iterations 19
Cbc0038I Pass  20: suminf.    2.17819 (13) obj. -60.2774 iterations 38
Cbc0038I Pass  21: suminf.    1.44847 (11) obj. -60.2774 iterations 21
Cbc0038I Pass  22: suminf.    1.92519 (8) obj. -60.2774 iterations 23
Cbc0038I Pass  23: suminf.    1.92519 (8) obj. -60.2774 iterations 3
Cbc0038I Pass  24: suminf.    1.08593 (6) obj. -60.2774 iterations 13
Cbc0038I Pass  25: suminf.    1.08593 (6) obj. -60.2774 iterations 3
Cbc0038I Pass  26: suminf.    1.35665 (6) obj. -60.2774 iterations 25
Cbc0038I Pass  27: suminf.    1.27425 (6) obj. -60.2774 iterations 6
Cbc0038I Pass  28: suminf.    1.17989 (6) obj. -60.2774 iterations 5
Cbc0038I Pass  29: suminf.    1.03008 (6) obj. -60.2774 iterations 4
Cbc0038I Pass  30: suminf.    1.41473 (6) obj. -60.2774 iterations 5
Cbc0038I Pass  31: suminf.    2.75551 (26) obj. -60.2774 iterations 86
Cbc0038I Pass  32: suminf.    2.57217 (26) obj. -60.2774 iterations 24
Cbc0038I Pass  33: suminf.    2.53451 (14) obj. -60.2774 iterations 32
Cbc0038I Pass  34: suminf.    2.53451 (14) obj. -60.2774 iterations 0
Cbc0038I Pass  35: suminf.    1.95804 (7) obj. -60.2774 iterations 43
Cbc0038I Pass  36: suminf.    1.81115 (8) obj. -60.2774 iterations 6
Cbc0038I Pass  37: suminf.    2.34025 (9) obj. -60.2774 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 125 rows 142 columns - 28 fixed gives 97, 113 - still too large
Cbc0038I Full problem 357 rows 377 columns, reduced to 27 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -28.011 to -48.5694 (0.24 seconds)
Cbc0038I Round again with cutoff of -86.9545
Cbc0038I Pass  37: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  38: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  39: suminf.    2.78677 (69) obj. -116.186 iterations 37
Cbc0038I Pass  40: suminf.    1.65672 (42) obj. -86.9545 iterations 33
Cbc0038I Pass  41: suminf.    1.58748 (42) obj. -88.4023 iterations 5
Cbc0038I Pass  42: suminf.    1.61655 (33) obj. -86.9545 iterations 35
Cbc0038I Pass  43: suminf.    1.20790 (33) obj. -93.0843 iterations 10
Cbc0038I Pass  44: suminf.    1.12633 (15) obj. -86.9545 iterations 43
Cbc0038I Pass  45: suminf.    1.12633 (15) obj. -86.9545 iterations 5
Cbc0038I Pass  46: suminf.    1.38261 (7) obj. -86.9545 iterations 41
Cbc0038I Pass  47: suminf.    0.96520 (7) obj. -87.2775 iterations 12
Cbc0038I Pass  48: suminf.    1.12670 (7) obj. -86.9545 iterations 22
Cbc0038I Pass  49: suminf.    2.06242 (23) obj. -86.9545 iterations 60
Cbc0038I Pass  50: suminf.    1.77986 (22) obj. -86.9545 iterations 21
Cbc0038I Pass  51: suminf.    1.57355 (15) obj. -86.9545 iterations 70
Cbc0038I Pass  52: suminf.    1.57355 (15) obj. -86.9545 iterations 1
Cbc0038I Pass  53: suminf.    1.28460 (10) obj. -86.9545 iterations 25
Cbc0038I Pass  54: suminf.    0.96004 (9) obj. -87.1755 iterations 9
Cbc0038I Pass  55: suminf.    1.07056 (9) obj. -86.9545 iterations 17
Cbc0038I Pass  56: suminf.    1.37469 (25) obj. -86.9545 iterations 56
Cbc0038I Pass  57: suminf.    1.37469 (25) obj. -86.9545 iterations 11
Cbc0038I Pass  58: suminf.    1.42145 (14) obj. -86.9545 iterations 39
Cbc0038I Pass  59: suminf.    1.06043 (14) obj. -86.9545 iterations 19
Cbc0038I Pass  60: suminf.    1.45349 (12) obj. -86.9545 iterations 32
Cbc0038I Pass  61: suminf.    1.45169 (13) obj. -86.9545 iterations 6
Cbc0038I Pass  62: suminf.    1.35763 (12) obj. -86.9545 iterations 42
Cbc0038I Pass  63: suminf.    1.35763 (12) obj. -86.9545 iterations 8
Cbc0038I Pass  64: suminf.    1.36104 (12) obj. -86.9545 iterations 12
Cbc0038I Pass  65: suminf.    1.36104 (12) obj. -86.9545 iterations 8
Cbc0038I Pass  66: suminf.    1.35763 (12) obj. -86.9545 iterations 12
Cbc0038I Rounding solution of -50.8376 is better than previous of -48.5694

Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 10 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -50.8376 to -53.9643 (0.33 seconds)
Cbc0038I Round again with cutoff of -118.967
Cbc0038I Pass  66: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  67: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  68: suminf.    3.30747 (80) obj. -133.328 iterations 26
Cbc0038I Pass  69: suminf.    2.54018 (58) obj. -118.967 iterations 42
Cbc0038I Pass  70: suminf.    2.54018 (58) obj. -118.967 iterations 12
Cbc0038I Pass  71: suminf.    2.13747 (42) obj. -118.967 iterations 30
Cbc0038I Pass  72: suminf.    2.13747 (42) obj. -118.967 iterations 3
Cbc0038I Pass  73: suminf.    2.20738 (37) obj. -118.967 iterations 42
Cbc0038I Pass  74: suminf.    2.20738 (37) obj. -118.967 iterations 4
Cbc0038I Pass  75: suminf.    2.15284 (35) obj. -118.967 iterations 15
Cbc0038I Pass  76: suminf.    2.15284 (35) obj. -118.967 iterations 4
Cbc0038I Pass  77: suminf.    2.14415 (31) obj. -118.967 iterations 18
Cbc0038I Pass  78: suminf.    1.88942 (31) obj. -119.476 iterations 10
Cbc0038I Pass  79: suminf.    3.09931 (28) obj. -118.967 iterations 43
Cbc0038I Pass  80: suminf.    2.11204 (27) obj. -118.967 iterations 9
Cbc0038I Pass  81: suminf.    2.11204 (27) obj. -118.967 iterations 3
Cbc0038I Pass  82: suminf.    2.19660 (27) obj. -118.967 iterations 20
Cbc0038I Pass  83: suminf.    2.19660 (27) obj. -118.967 iterations 7
Cbc0038I Pass  84: suminf.    2.20647 (27) obj. -118.967 iterations 10
Cbc0038I Pass  85: suminf.    2.20647 (27) obj. -118.967 iterations 7
Cbc0038I Pass  86: suminf.    2.51647 (27) obj. -118.967 iterations 10
Cbc0038I Pass  87: suminf.    1.83929 (27) obj. -118.967 iterations 11
Cbc0038I Pass  88: suminf.    2.19660 (27) obj. -118.967 iterations 20
Cbc0038I Pass  89: suminf.    2.19660 (27) obj. -118.967 iterations 4
Cbc0038I Pass  90: suminf.    2.19714 (27) obj. -118.967 iterations 11
Cbc0038I Pass  91: suminf.    2.19714 (27) obj. -118.967 iterations 5
Cbc0038I Pass  92: suminf.    2.19660 (27) obj. -118.967 iterations 11
Cbc0038I Pass  93: suminf.    1.90911 (39) obj. -118.967 iterations 78
Cbc0038I Pass  94: suminf.    1.89008 (39) obj. -118.967 iterations 16
Cbc0038I Pass  95: suminf.    2.92369 (37) obj. -118.967 iterations 56
Cbc0038I Rounding solution of -54.4112 is better than previous of -53.9643

Cbc0038I Before mini branch and bound, 246 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 41 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -54.4112 to -68.6 (0.41 seconds)
Cbc0038I Round again with cutoff of -141.376
Cbc0038I Pass  95: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  96: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  97: suminf.    3.70080 (82) obj. -141.376 iterations 26
Cbc0038I Pass  98: suminf.    3.35018 (64) obj. -141.376 iterations 35
Cbc0038I Pass  99: suminf.    3.30715 (63) obj. -141.525 iterations 7
Cbc0038I Pass 100: suminf.    3.31582 (55) obj. -141.376 iterations 72
Cbc0038I Pass 101: suminf.    3.31582 (55) obj. -141.376 iterations 4
Cbc0038I Pass 102: suminf.    4.23753 (51) obj. -141.376 iterations 37
Cbc0038I Pass 103: suminf.    2.83695 (49) obj. -141.454 iterations 14
Cbc0038I Pass 104: suminf.    2.83149 (50) obj. -141.376 iterations 2
Cbc0038I Pass 105: suminf.    2.91514 (49) obj. -141.376 iterations 45
Cbc0038I Pass 106: suminf.    2.86774 (50) obj. -141.376 iterations 11
Cbc0038I Pass 107: suminf.    2.91514 (49) obj. -141.376 iterations 28
Cbc0038I Pass 108: suminf.    4.09237 (54) obj. -141.376 iterations 42
Cbc0038I Pass 109: suminf.    4.09237 (54) obj. -141.376 iterations 4
Cbc0038I Pass 110: suminf.    3.51162 (53) obj. -141.376 iterations 18
Cbc0038I Pass 111: suminf.    3.28748 (54) obj. -141.376 iterations 3
Cbc0038I Pass 112: suminf.    3.51162 (51) obj. -141.376 iterations 29
Cbc0038I Pass 113: suminf.    3.05221 (52) obj. -141.376 iterations 6
Cbc0038I Pass 114: suminf.    3.51162 (51) obj. -141.376 iterations 22
Cbc0038I Pass 115: suminf.    3.65559 (58) obj. -141.376 iterations 44
Cbc0038I Pass 116: suminf.    3.65559 (58) obj. -141.376 iterations 9
Cbc0038I Pass 117: suminf.    3.23052 (53) obj. -141.376 iterations 19
Cbc0038I Pass 118: suminf.    3.23052 (53) obj. -141.376 iterations 4
Cbc0038I Pass 119: suminf.    3.17568 (51) obj. -141.376 iterations 16
Cbc0038I Pass 120: suminf.    3.16836 (52) obj. -141.376 iterations 6
Cbc0038I Pass 121: suminf.    3.68759 (51) obj. -141.376 iterations 20
Cbc0038I Pass 122: suminf.    3.53782 (69) obj. -141.376 iterations 41
Cbc0038I Pass 123: suminf.    3.40077 (53) obj. -141.376 iterations 7
Cbc0038I Pass 124: suminf.    3.20139 (52) obj. -141.376 iterations 58
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.48 seconds)
Cbc0038I After 0.48 seconds - Feasibility pump exiting with objective of -68.6 - took 0.38 seconds
Cbc0012I Integer solution of -68.60002 found by feasibility pump after 0 iterations and 0 nodes (0.48 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 16 rows 19 columns
Cbc0031I 139 added rows had average density of 106.42446
Cbc0013I At root node, 139 cuts changed objective from -193.66276 to -110.85783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39396 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.518 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3653 row cuts average 356.0 elements, 0 column cuts (0 active)  in 1.424 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 357 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7114 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.263 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.627 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3432 row cuts average 13.5 elements, 0 column cuts (0 active)  in 1.103 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 452 row cuts average 183.9 elements, 0 column cuts (0 active)  in 0.242 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 131 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.360 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -68.60002 best solution, best possible -110.85783 (9.70 seconds)
Cbc0012I Integer solution of -70.26348 found by rounding after 15809 iterations and 1 nodes (9.74 seconds)
Cbc0016I Integer solution of -75.27911 found by strong branching after 15884 iterations and 1 nodes (9.77 seconds)
Cbc0012I Integer solution of -76.4045 found by rounding after 15907 iterations and 2 nodes (9.78 seconds)
Cbc0012I Integer solution of -78.6656 found by rounding after 15915 iterations and 4 nodes (9.80 seconds)
Cbc0010I After 9 nodes, 2 on tree, -78.6656 best solution, best possible -108.96093 (10.44 seconds)
Cbc0012I Integer solution of -80.7335 found by DiveCoefficient after 16914 iterations and 11 nodes (10.58 seconds)
Cbc0012I Integer solution of -81.8525 found by rounding after 16955 iterations and 12 nodes (10.61 seconds)
Cbc0012I Integer solution of -82.07571 found by rounding after 17098 iterations and 15 nodes (10.71 seconds)
Cbc0010I After 27 nodes, 2 on tree, -82.07571 best solution, best possible -108.96093 (11.21 seconds)
Cbc0010I After 29 nodes, 4 on tree, -82.07571 best solution, best possible -108.96093 (12.49 seconds)
Cbc0010I After 33 nodes, 6 on tree, -82.07571 best solution, best possible -108.96093 (13.21 seconds)
Cbc0010I After 37 nodes, 7 on tree, -82.07571 best solution, best possible -108.96093 (14.35 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 140 rows 153 columns
Cbc0010I After 42 nodes, 7 on tree, -82.07571 best solution, best possible -108.96093 (16.58 seconds)
Cbc0010I After 52 nodes, 9 on tree, -82.07571 best solution, best possible -108.96093 (17.31 seconds)
Cbc0010I After 84 nodes, 11 on tree, -82.07571 best solution, best possible -108.96093 (18.05 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 84 rows 95 columns
Cbc0010I After 118 nodes, 13 on tree, -82.07571 best solution, best possible -108.96093 (18.75 seconds)
Cbc0010I After 142 nodes, 16 on tree, -82.07571 best solution, best possible -108.96093 (19.46 seconds)
Cbc0010I After 188 nodes, 18 on tree, -82.07571 best solution, best possible -108.96093 (20.17 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 118 rows 139 columns
Cbc0010I After 200 nodes, 19 on tree, -82.07571 best solution, best possible -108.96093 (21.64 seconds)
Cbc0010I After 239 nodes, 19 on tree, -82.07571 best solution, best possible -108.96093 (22.34 seconds)
Cbc0010I After 270 nodes, 21 on tree, -82.07571 best solution, best possible -108.96093 (23.08 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 116 rows 137 columns
Cbc0010I After 300 nodes, 23 on tree, -82.07571 best solution, best possible -108.96093 (24.83 seconds)
Cbc0010I After 347 nodes, 20 on tree, -82.07571 best solution, best possible -108.96093 (25.54 seconds)
Cbc0010I After 400 nodes, 10 on tree, -82.07571 best solution, best possible -108.96093 (26.25 seconds)
Cbc0010I After 420 nodes, 3 on tree, -82.07571 best solution, best possible -108.96093 (27.13 seconds)
Cbc0010I After 430 nodes, 9 on tree, -82.07571 best solution, best possible -108.96093 (27.86 seconds)
Cbc0010I After 453 nodes, 17 on tree, -82.07571 best solution, best possible -108.96093 (28.57 seconds)
Cbc0010I After 480 nodes, 19 on tree, -82.07571 best solution, best possible -108.96093 (29.27 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 46 rows 52 columns
Cbc0010I After 521 nodes, 10 on tree, -82.07571 best solution, best possible -108.96093 (29.99 seconds)
Cbc0010I After 546 nodes, 12 on tree, -82.07571 best solution, best possible -108.96093 (30.72 seconds)
Cbc0010I After 582 nodes, 13 on tree, -82.07571 best solution, best possible -108.96093 (31.43 seconds)
Cbc0010I After 634 nodes, 17 on tree, -82.07571 best solution, best possible -108.96093 (32.13 seconds)
Cbc0010I After 695 nodes, 18 on tree, -82.07571 best solution, best possible -108.96093 (32.86 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 126 rows 136 columns
Cbc0010I After 704 nodes, 18 on tree, -82.07571 best solution, best possible -108.96093 (33.87 seconds)
Cbc0010I After 772 nodes, 17 on tree, -82.07571 best solution, best possible -108.96093 (34.58 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 124 rows 134 columns
Cbc0010I After 800 nodes, 15 on tree, -82.07571 best solution, best possible -108.96093 (35.84 seconds)
Cbc0010I After 860 nodes, 10 on tree, -82.07571 best solution, best possible -108.96093 (36.56 seconds)
Cbc0010I After 914 nodes, 3 on tree, -82.07571 best solution, best possible -108.96093 (37.45 seconds)
Cbc0001I Search completed - best objective -82.07571000000002, took 85436 iterations and 960 nodes (38.01 seconds)
Cbc0032I Strong branching done 3218 times (84924 iterations), fathomed 31 nodes and fixed 42 variables
Cbc0035I Maximum depth 41, 6268 variables fixed on reduced cost
Total time (CPU seconds):       36.93   (Wallclock seconds):       38.12

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 502 (-25) rows, 262 (-2) columns and 1496 (-49) elements
Clp1000I sum of infeasibilities 2.03456e-05 - average 4.0529e-08, 152 fixed columns
Coin0506I Presolve 202 (-300) rows, 110 (-152) columns and 598 (-898) elements
Clp0029I End of values pass after 110 iterations
Clp0014I Perturbing problem by 0.001% of 0.17900991 - largest nonzero change 0 ( 0%) - largest zero change 2.9365872e-05
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Coin0511I After Postsolve, objective 146.64838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13334639 - largest nonzero change 0 ( 0%) - largest zero change 2.9744408e-05
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Clp0000I Optimal - objective value 146.64838
Coin0511I After Postsolve, objective 146.64838, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 146.6483849 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 502 rows, 262 columns (261 integer (261 of which binary)) and 1496 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.364%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 51 integers unsatisfied sum - 10.9035
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -31.6836 iterations 77
Cbc0038I Solution found of -31.6836
Cbc0038I Relaxing continuous gives -31.6836
Cbc0038I Rounding solution of -68.9755 is better than previous of -31.6836

Cbc0038I Before mini branch and bound, 210 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 92 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -68.9755 to -72.428 (0.06 seconds)
Cbc0038I Round again with cutoff of -79.8501
Cbc0038I Pass   2: suminf.    2.08932 (8) obj. -79.8501 iterations 24
Cbc0038I Pass   3: suminf.    2.03532 (6) obj. -79.8501 iterations 25
Cbc0038I Pass   4: suminf.    1.76333 (7) obj. -79.8501 iterations 25
Cbc0038I Pass   5: suminf.    2.18591 (6) obj. -79.8501 iterations 15
Cbc0038I Pass   6: suminf.    1.78376 (5) obj. -79.8501 iterations 10
Cbc0038I Pass   7: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass   8: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass   9: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  10: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  11: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  12: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  13: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  14: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  15: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass  16: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass  17: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  18: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  19: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  20: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  21: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  22: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  23: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Pass  24: suminf.    2.17271 (6) obj. -79.8501 iterations 23
Cbc0038I Pass  25: suminf.    2.14021 (5) obj. -79.8501 iterations 1
Cbc0038I Pass  26: suminf.    2.09279 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  27: suminf.    1.83967 (5) obj. -79.8501 iterations 10
Cbc0038I Pass  28: suminf.    1.78655 (6) obj. -79.8501 iterations 1
Cbc0038I Pass  29: suminf.    2.07860 (5) obj. -79.8501 iterations 14
Cbc0038I Pass  30: suminf.    1.78376 (5) obj. -79.8501 iterations 8
Cbc0038I Pass  31: suminf.    1.74752 (7) obj. -79.8501 iterations 13
Cbc0038I Rounding solution of -75.2791 is better than previous of -72.428

Cbc0038I Before mini branch and bound, 209 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 94 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I Round again with cutoff of -93.2098
Cbc0038I Pass  31: suminf.    2.73639 (10) obj. -93.2098 iterations 3
Cbc0038I Pass  32: suminf.    3.22379 (9) obj. -93.2098 iterations 26
Cbc0038I Pass  33: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  34: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  35: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  36: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  37: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  38: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  39: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  40: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  41: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  42: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  43: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  44: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  45: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  46: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  47: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  48: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  49: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  50: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  51: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I Pass  52: suminf.    2.63520 (7) obj. -93.2098 iterations 13
Cbc0038I Pass  53: suminf.    2.60929 (8) obj. -93.2098 iterations 10
Cbc0038I Pass  54: suminf.    1.84457 (7) obj. -93.2098 iterations 22
Cbc0038I Pass  55: suminf.    1.44325 (7) obj. -93.2098 iterations 2
Cbc0038I Pass  56: suminf.    2.82581 (7) obj. -93.2098 iterations 27
Cbc0038I Pass  57: suminf.    1.98023 (6) obj. -93.2098 iterations 23
Cbc0038I Pass  58: suminf.    1.96471 (9) obj. -93.2098 iterations 4
Cbc0038I Pass  59: suminf.    3.22379 (9) obj. -93.2098 iterations 25
Cbc0038I Pass  60: suminf.    2.53336 (9) obj. -93.2098 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 207 integers at bound fixed and 0 continuous
Cbc0038I Full problem 502 rows 262 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -75.2791 - took 0.12 seconds
Cbc0012I Integer solution of -75.27911 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 95 rows 55 columns
Cbc0031I 37 added rows had average density of 100.86486
Cbc0013I At root node, 37 cuts changed objective from -146.64838 to -128.08711 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 25624 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.445 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2627 row cuts average 257.6 elements, 0 column cuts (0 active)  in 0.402 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.081 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.422 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 189 row cuts average 254.6 elements, 0 column cuts (0 active)  in 0.155 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -75.27911 best solution, best possible -128.08711 (3.73 seconds)
Cbc0010I After 21 nodes, 10 on tree, -75.27911 best solution, best possible -128.08711 (4.43 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 177 rows 97 columns
Cbc0012I Integer solution of -75.55581 found by RINS after 15682 iterations and 42 nodes (4.70 seconds)
Cbc0012I Integer solution of -76.936783 found by rounding after 17741 iterations and 73 nodes (5.01 seconds)
Cbc0012I Integer solution of -77.845393 found by rounding after 17759 iterations and 74 nodes (5.02 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 16 rows 16 columns
Cbc0012I Integer solution of -78.607313 found by RINS after 18470 iterations and 91 nodes (5.08 seconds)
Cbc0010I After 112 nodes, 12 on tree, -78.607313 best solution, best possible -128.08711 (5.14 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 73 rows 48 columns
Cbc0010I After 237 nodes, 17 on tree, -78.607313 best solution, best possible -128.08711 (5.85 seconds)
Cbc0010I After 363 nodes, 15 on tree, -78.607313 best solution, best possible -128.08711 (6.55 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 16 rows 16 columns
Cbc0004I Integer solution of -78.6656 found after 31566 iterations and 433 nodes (6.87 seconds)
Cbc0012I Integer solution of -79.193743 found by rounding after 35365 iterations and 576 nodes (7.22 seconds)
Cbc0010I After 591 nodes, 14 on tree, -79.193743 best solution, best possible -128.08711 (7.25 seconds)
Cbc0038I Full problem 502 rows 262 columns, reduced to 8 rows 8 columns
Cbc0012I Integer solution of -79.85167 found by rounding after 38379 iterations and 660 nodes (7.60 seconds)
Cbc0012I Integer solution of -81.8525 found by rounding after 39690 iterations and 718 nodes (7.70 seconds)
Cbc0012I Integer solution of -82.07571 found by rounding after 41113 iterations and 771 nodes (7.90 seconds)
Cbc0010I After 801 nodes, 17 on tree, -82.07571 best solution, best possible -128.08711 (7.96 seconds)
Cbc0001I Search completed - best objective -82.07571000000002, took 43450 iterations and 818 nodes (8.00 seconds)
Cbc0032I Strong branching done 5794 times (125922 iterations), fathomed 65 nodes and fixed 261 variables
Cbc0035I Maximum depth 68, 3697 variables fixed on reduced cost
Total time (CPU seconds):       7.83   (Wallclock seconds):       8.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 357 (-170) rows, 377 (-148) columns and 18027 (-17710) elements
Clp1000I sum of infeasibilities 1.71731e-05 - average 4.81038e-08, 265 fixed columns
Coin0506I Presolve 85 (-272) rows, 107 (-270) columns and 366 (-17661) elements
Clp0006I 0  Obj 35.300887 Primal inf 9.0142165e-06 (1) Dual inf 1.0100001e+11 (107)
Clp0029I End of values pass after 43 iterations
Clp0014I Perturbing problem by 0.001% of 0.16488165 - largest nonzero change 2.6381946e-05 ( 0.0023983587%) - largest zero change 2.9640381e-05
Clp0000I Optimal - objective value 35.639865
Clp0000I Optimal - objective value 35.639865
Coin0511I After Postsolve, objective 35.639865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 35.639865 Dual inf 376.15211 (122)
Clp0014I Perturbing problem by 0.001% of 1.6508065 - largest nonzero change 2.2788203e-05 ( 0.0021869008%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 193.66276
Clp0000I Optimal - objective value 193.66276
Clp0000I Optimal - objective value 193.66276
Coin0511I After Postsolve, objective 193.66276, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 193.6627583 - 0 iterations time 0.092, Presolve 0.00, Idiot 0.08

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 357 rows, 377 columns (377 integer (377 of which binary)) and 18027 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.167%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 120 integers unsatisfied sum - 8.89856
Cbc0038I Pass   1: suminf.    4.94100 (100) obj. -173.384 iterations 33
Cbc0038I Pass   2: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass   3: suminf.    3.30747 (80) obj. -133.328 iterations 22
Cbc0038I Pass   4: suminf.    2.54614 (64) obj. -108.568 iterations 16
Cbc0038I Pass   5: suminf.    1.71618 (46) obj. -74.2326 iterations 18
Cbc0038I Pass   6: suminf.    0.86657 (26) obj. -55.0822 iterations 20
Cbc0038I Pass   7: suminf.    0.02381 (1) obj. -28.9872 iterations 25
Cbc0038I Solution found of -28.011
Cbc0038I Rounding solution of -45.4567 is better than previous of -28.011

Cbc0038I Before mini branch and bound, 255 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 24 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I Round again with cutoff of -60.2774
Cbc0038I Pass   8: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass   9: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  10: suminf.    2.92907 (72) obj. -119.996 iterations 34
Cbc0038I Pass  11: suminf.    2.40959 (61) obj. -104.751 iterations 11
Cbc0038I Pass  12: suminf.    1.76364 (47) obj. -75.1852 iterations 14
Cbc0038I Pass  13: suminf.    0.95387 (19) obj. -60.2774 iterations 41
Cbc0038I Pass  14: suminf.    0.66460 (19) obj. -66.3252 iterations 7
Cbc0038I Pass  15: suminf.    0.75995 (3) obj. -60.2774 iterations 34
Cbc0038I Pass  16: suminf.    0.28953 (3) obj. -61.7545 iterations 8
Cbc0038I Pass  17: suminf.    0.75995 (3) obj. -60.2774 iterations 13
Cbc0038I Pass  18: suminf.    3.07408 (32) obj. -60.2774 iterations 75
Cbc0038I Pass  19: suminf.    2.80978 (33) obj. -60.2774 iterations 19
Cbc0038I Pass  20: suminf.    2.17819 (13) obj. -60.2774 iterations 38
Cbc0038I Pass  21: suminf.    1.44847 (11) obj. -60.2774 iterations 21
Cbc0038I Pass  22: suminf.    1.92519 (8) obj. -60.2774 iterations 23
Cbc0038I Pass  23: suminf.    1.92519 (8) obj. -60.2774 iterations 3
Cbc0038I Pass  24: suminf.    1.08593 (6) obj. -60.2774 iterations 13
Cbc0038I Pass  25: suminf.    1.08593 (6) obj. -60.2774 iterations 3
Cbc0038I Pass  26: suminf.    1.35665 (6) obj. -60.2774 iterations 25
Cbc0038I Pass  27: suminf.    1.27425 (6) obj. -60.2774 iterations 6
Cbc0038I Pass  28: suminf.    1.17989 (6) obj. -60.2774 iterations 5
Cbc0038I Pass  29: suminf.    1.03008 (6) obj. -60.2774 iterations 4
Cbc0038I Pass  30: suminf.    1.41473 (6) obj. -60.2774 iterations 5
Cbc0038I Pass  31: suminf.    2.75551 (26) obj. -60.2774 iterations 86
Cbc0038I Pass  32: suminf.    2.57217 (26) obj. -60.2774 iterations 24
Cbc0038I Pass  33: suminf.    2.53451 (14) obj. -60.2774 iterations 32
Cbc0038I Pass  34: suminf.    2.53451 (14) obj. -60.2774 iterations 0
Cbc0038I Pass  35: suminf.    1.95804 (7) obj. -60.2774 iterations 43
Cbc0038I Pass  36: suminf.    1.81115 (8) obj. -60.2774 iterations 6
Cbc0038I Pass  37: suminf.    2.34025 (9) obj. -60.2774 iterations 14
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 235 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 125 rows 142 columns - 28 fixed gives 97, 113 - still too large
Cbc0038I Full problem 357 rows 377 columns, reduced to 27 rows 43 columns
Cbc0038I Mini branch and bound improved solution from -28.011 to -48.5694 (0.24 seconds)
Cbc0038I Round again with cutoff of -86.9545
Cbc0038I Pass  37: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  38: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  39: suminf.    2.78677 (69) obj. -116.186 iterations 37
Cbc0038I Pass  40: suminf.    1.65672 (42) obj. -86.9545 iterations 33
Cbc0038I Pass  41: suminf.    1.58748 (42) obj. -88.4023 iterations 5
Cbc0038I Pass  42: suminf.    1.61655 (33) obj. -86.9545 iterations 35
Cbc0038I Pass  43: suminf.    1.20790 (33) obj. -93.0843 iterations 10
Cbc0038I Pass  44: suminf.    1.12633 (15) obj. -86.9545 iterations 43
Cbc0038I Pass  45: suminf.    1.12633 (15) obj. -86.9545 iterations 5
Cbc0038I Pass  46: suminf.    1.38261 (7) obj. -86.9545 iterations 41
Cbc0038I Pass  47: suminf.    0.96520 (7) obj. -87.2775 iterations 12
Cbc0038I Pass  48: suminf.    1.12670 (7) obj. -86.9545 iterations 22
Cbc0038I Pass  49: suminf.    2.06242 (23) obj. -86.9545 iterations 60
Cbc0038I Pass  50: suminf.    1.77986 (22) obj. -86.9545 iterations 21
Cbc0038I Pass  51: suminf.    1.57355 (15) obj. -86.9545 iterations 70
Cbc0038I Pass  52: suminf.    1.57355 (15) obj. -86.9545 iterations 1
Cbc0038I Pass  53: suminf.    1.28460 (10) obj. -86.9545 iterations 25
Cbc0038I Pass  54: suminf.    0.96004 (9) obj. -87.1755 iterations 9
Cbc0038I Pass  55: suminf.    1.07056 (9) obj. -86.9545 iterations 17
Cbc0038I Pass  56: suminf.    1.37469 (25) obj. -86.9545 iterations 56
Cbc0038I Pass  57: suminf.    1.37469 (25) obj. -86.9545 iterations 11
Cbc0038I Pass  58: suminf.    1.42145 (14) obj. -86.9545 iterations 39
Cbc0038I Pass  59: suminf.    1.06043 (14) obj. -86.9545 iterations 19
Cbc0038I Pass  60: suminf.    1.45349 (12) obj. -86.9545 iterations 32
Cbc0038I Pass  61: suminf.    1.45169 (13) obj. -86.9545 iterations 6
Cbc0038I Pass  62: suminf.    1.35763 (12) obj. -86.9545 iterations 42
Cbc0038I Pass  63: suminf.    1.35763 (12) obj. -86.9545 iterations 8
Cbc0038I Pass  64: suminf.    1.36104 (12) obj. -86.9545 iterations 12
Cbc0038I Pass  65: suminf.    1.36104 (12) obj. -86.9545 iterations 8
Cbc0038I Pass  66: suminf.    1.35763 (12) obj. -86.9545 iterations 12
Cbc0038I Rounding solution of -50.8376 is better than previous of -48.5694

Cbc0038I Before mini branch and bound, 244 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 10 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -50.8376 to -53.9643 (0.33 seconds)
Cbc0038I Round again with cutoff of -118.967
Cbc0038I Pass  66: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  67: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  68: suminf.    3.30747 (80) obj. -133.328 iterations 26
Cbc0038I Pass  69: suminf.    2.54018 (58) obj. -118.967 iterations 42
Cbc0038I Pass  70: suminf.    2.54018 (58) obj. -118.967 iterations 12
Cbc0038I Pass  71: suminf.    2.13747 (42) obj. -118.967 iterations 30
Cbc0038I Pass  72: suminf.    2.13747 (42) obj. -118.967 iterations 3
Cbc0038I Pass  73: suminf.    2.20738 (37) obj. -118.967 iterations 42
Cbc0038I Pass  74: suminf.    2.20738 (37) obj. -118.967 iterations 4
Cbc0038I Pass  75: suminf.    2.15284 (35) obj. -118.967 iterations 15
Cbc0038I Pass  76: suminf.    2.15284 (35) obj. -118.967 iterations 4
Cbc0038I Pass  77: suminf.    2.14415 (31) obj. -118.967 iterations 18
Cbc0038I Pass  78: suminf.    1.88942 (31) obj. -119.476 iterations 10
Cbc0038I Pass  79: suminf.    3.09931 (28) obj. -118.967 iterations 43
Cbc0038I Pass  80: suminf.    2.11204 (27) obj. -118.967 iterations 9
Cbc0038I Pass  81: suminf.    2.11204 (27) obj. -118.967 iterations 3
Cbc0038I Pass  82: suminf.    2.19660 (27) obj. -118.967 iterations 20
Cbc0038I Pass  83: suminf.    2.19660 (27) obj. -118.967 iterations 7
Cbc0038I Pass  84: suminf.    2.20647 (27) obj. -118.967 iterations 10
Cbc0038I Pass  85: suminf.    2.20647 (27) obj. -118.967 iterations 7
Cbc0038I Pass  86: suminf.    2.51647 (27) obj. -118.967 iterations 10
Cbc0038I Pass  87: suminf.    1.83929 (27) obj. -118.967 iterations 11
Cbc0038I Pass  88: suminf.    2.19660 (27) obj. -118.967 iterations 20
Cbc0038I Pass  89: suminf.    2.19660 (27) obj. -118.967 iterations 4
Cbc0038I Pass  90: suminf.    2.19714 (27) obj. -118.967 iterations 11
Cbc0038I Pass  91: suminf.    2.19714 (27) obj. -118.967 iterations 5
Cbc0038I Pass  92: suminf.    2.19660 (27) obj. -118.967 iterations 11
Cbc0038I Pass  93: suminf.    1.90911 (39) obj. -118.967 iterations 78
Cbc0038I Pass  94: suminf.    1.89008 (39) obj. -118.967 iterations 16
Cbc0038I Pass  95: suminf.    2.92369 (37) obj. -118.967 iterations 56
Cbc0038I Rounding solution of -54.4112 is better than previous of -53.9643

Cbc0038I Before mini branch and bound, 246 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 41 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -54.4112 to -68.6 (0.41 seconds)
Cbc0038I Round again with cutoff of -141.376
Cbc0038I Pass  95: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  96: suminf.    4.94100 (100) obj. -173.384 iterations 0
Cbc0038I Pass  97: suminf.    3.70080 (82) obj. -141.376 iterations 26
Cbc0038I Pass  98: suminf.    3.35018 (64) obj. -141.376 iterations 35
Cbc0038I Pass  99: suminf.    3.30715 (63) obj. -141.525 iterations 7
Cbc0038I Pass 100: suminf.    3.31582 (55) obj. -141.376 iterations 72
Cbc0038I Pass 101: suminf.    3.31582 (55) obj. -141.376 iterations 4
Cbc0038I Pass 102: suminf.    4.23753 (51) obj. -141.376 iterations 37
Cbc0038I Pass 103: suminf.    2.83695 (49) obj. -141.454 iterations 14
Cbc0038I Pass 104: suminf.    2.83149 (50) obj. -141.376 iterations 2
Cbc0038I Pass 105: suminf.    2.91514 (49) obj. -141.376 iterations 45
Cbc0038I Pass 106: suminf.    2.86774 (50) obj. -141.376 iterations 11
Cbc0038I Pass 107: suminf.    2.91514 (49) obj. -141.376 iterations 28
Cbc0038I Pass 108: suminf.    4.09237 (54) obj. -141.376 iterations 42
Cbc0038I Pass 109: suminf.    4.09237 (54) obj. -141.376 iterations 4
Cbc0038I Pass 110: suminf.    3.51162 (53) obj. -141.376 iterations 18
Cbc0038I Pass 111: suminf.    3.28748 (54) obj. -141.376 iterations 3
Cbc0038I Pass 112: suminf.    3.51162 (51) obj. -141.376 iterations 29
Cbc0038I Pass 113: suminf.    3.05221 (52) obj. -141.376 iterations 6
Cbc0038I Pass 114: suminf.    3.51162 (51) obj. -141.376 iterations 22
Cbc0038I Pass 115: suminf.    3.65559 (58) obj. -141.376 iterations 44
Cbc0038I Pass 116: suminf.    3.65559 (58) obj. -141.376 iterations 9
Cbc0038I Pass 117: suminf.    3.23052 (53) obj. -141.376 iterations 19
Cbc0038I Pass 118: suminf.    3.23052 (53) obj. -141.376 iterations 4
Cbc0038I Pass 119: suminf.    3.17568 (51) obj. -141.376 iterations 16
Cbc0038I Pass 120: suminf.    3.16836 (52) obj. -141.376 iterations 6
Cbc0038I Pass 121: suminf.    3.68759 (51) obj. -141.376 iterations 20
Cbc0038I Pass 122: suminf.    3.53782 (69) obj. -141.376 iterations 41
Cbc0038I Pass 123: suminf.    3.40077 (53) obj. -141.376 iterations 7
Cbc0038I Pass 124: suminf.    3.20139 (52) obj. -141.376 iterations 58
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 357 rows 377 columns, reduced to 25 rows 33 columns
Cbc0038I Mini branch and bound did not improve solution (0.48 seconds)
Cbc0038I After 0.48 seconds - Feasibility pump exiting with objective of -68.6 - took 0.38 seconds
Cbc0012I Integer solution of -68.60002 found by feasibility pump after 0 iterations and 0 nodes (0.48 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 16 rows 19 columns
Cbc0031I 139 added rows had average density of 106.42446
Cbc0013I At root node, 139 cuts changed objective from -193.66276 to -110.85783 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 39396 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.513 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3653 row cuts average 356.0 elements, 0 column cuts (0 active)  in 1.405 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 357 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 7114 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.255 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.613 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 3432 row cuts average 13.5 elements, 0 column cuts (0 active)  in 1.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 452 row cuts average 183.9 elements, 0 column cuts (0 active)  in 0.239 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 131 row cuts average 23.2 elements, 0 column cuts (0 active)  in 0.355 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -68.60002 best solution, best possible -110.85783 (9.56 seconds)
Cbc0012I Integer solution of -70.26348 found by rounding after 15809 iterations and 1 nodes (9.60 seconds)
Cbc0016I Integer solution of -75.27911 found by strong branching after 15884 iterations and 1 nodes (9.63 seconds)
Cbc0012I Integer solution of -76.4045 found by rounding after 15907 iterations and 2 nodes (9.64 seconds)
Cbc0012I Integer solution of -78.6656 found by rounding after 15915 iterations and 4 nodes (9.66 seconds)
Cbc0010I After 9 nodes, 2 on tree, -78.6656 best solution, best possible -108.96093 (10.29 seconds)
Cbc0012I Integer solution of -80.7335 found by DiveCoefficient after 16914 iterations and 11 nodes (10.43 seconds)
Cbc0012I Integer solution of -81.8525 found by rounding after 16955 iterations and 12 nodes (10.46 seconds)
Cbc0012I Integer solution of -82.07571 found by rounding after 17098 iterations and 15 nodes (10.56 seconds)
Cbc0010I After 27 nodes, 2 on tree, -82.07571 best solution, best possible -108.96093 (11.05 seconds)
Cbc0010I After 29 nodes, 4 on tree, -82.07571 best solution, best possible -108.96093 (12.35 seconds)
Cbc0010I After 33 nodes, 6 on tree, -82.07571 best solution, best possible -108.96093 (13.06 seconds)
Cbc0010I After 37 nodes, 7 on tree, -82.07571 best solution, best possible -108.96093 (14.16 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 140 rows 153 columns
Cbc0010I After 42 nodes, 7 on tree, -82.07571 best solution, best possible -108.96093 (16.37 seconds)
Cbc0010I After 52 nodes, 9 on tree, -82.07571 best solution, best possible -108.96093 (17.10 seconds)
Cbc0010I After 84 nodes, 11 on tree, -82.07571 best solution, best possible -108.96093 (17.84 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 84 rows 95 columns
Cbc0010I After 118 nodes, 13 on tree, -82.07571 best solution, best possible -108.96093 (18.55 seconds)
Cbc0010I After 141 nodes, 15 on tree, -82.07571 best solution, best possible -108.96093 (19.25 seconds)
Cbc0010I After 186 nodes, 18 on tree, -82.07571 best solution, best possible -108.96093 (19.97 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 118 rows 139 columns
Cbc0010I After 200 nodes, 19 on tree, -82.07571 best solution, best possible -108.96093 (21.50 seconds)
Cbc0010I After 240 nodes, 20 on tree, -82.07571 best solution, best possible -108.96093 (22.23 seconds)
Cbc0010I After 270 nodes, 21 on tree, -82.07571 best solution, best possible -108.96093 (22.93 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 116 rows 137 columns
Cbc0010I After 300 nodes, 23 on tree, -82.07571 best solution, best possible -108.96093 (24.62 seconds)
Cbc0010I After 347 nodes, 20 on tree, -82.07571 best solution, best possible -108.96093 (25.33 seconds)
Cbc0010I After 400 nodes, 10 on tree, -82.07571 best solution, best possible -108.96093 (26.04 seconds)
Cbc0010I After 419 nodes, 2 on tree, -82.07571 best solution, best possible -108.96093 (26.74 seconds)
Cbc0010I After 425 nodes, 6 on tree, -82.07571 best solution, best possible -108.96093 (27.52 seconds)
Cbc0010I After 453 nodes, 17 on tree, -82.07571 best solution, best possible -108.96093 (28.38 seconds)
Cbc0010I After 480 nodes, 19 on tree, -82.07571 best solution, best possible -108.96093 (29.08 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 46 rows 52 columns
Cbc0010I After 521 nodes, 10 on tree, -82.07571 best solution, best possible -108.96093 (29.81 seconds)
Cbc0010I After 546 nodes, 12 on tree, -82.07571 best solution, best possible -108.96093 (30.55 seconds)
Cbc0010I After 584 nodes, 13 on tree, -82.07571 best solution, best possible -108.96093 (31.28 seconds)
Cbc0010I After 636 nodes, 18 on tree, -82.07571 best solution, best possible -108.96093 (32.01 seconds)
Cbc0010I After 698 nodes, 19 on tree, -82.07571 best solution, best possible -108.96093 (32.71 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 126 rows 136 columns
Cbc0010I After 704 nodes, 18 on tree, -82.07571 best solution, best possible -108.96093 (33.74 seconds)
Cbc0010I After 766 nodes, 18 on tree, -82.07571 best solution, best possible -108.96093 (34.44 seconds)
Cbc0038I Full problem 357 rows 377 columns, reduced to 124 rows 134 columns
Cbc0010I After 800 nodes, 15 on tree, -82.07571 best solution, best possible -108.96093 (35.89 seconds)
Cbc0010I After 855 nodes, 10 on tree, -82.07571 best solution, best possible -108.96093 (36.59 seconds)
Cbc0010I After 904 nodes, 7 on tree, -82.07571 best solution, best possible -108.96093 (37.29 seconds)
Cbc0010I After 931 nodes, 5 on tree, -82.07571 best solution, best possible -108.96093 (38.01 seconds)
Cbc0001I Search completed - best objective -82.07571000000002, took 85436 iterations and 960 nodes (38.27 seconds)
Cbc0032I Strong branching done 3218 times (84924 iterations), fathomed 31 nodes and fixed 42 variables
Cbc0035I Maximum depth 41, 6268 variables fixed on reduced cost
Total time (CPU seconds):       37.09   (Wallclock seconds):       38.38

