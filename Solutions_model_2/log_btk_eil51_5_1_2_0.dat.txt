Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-11) rows, 51 (-2) columns and 282 (-21) elements
Clp1000I sum of infeasibilities 1.08841e-05 - average 1.15788e-07, 1 fixed columns
Coin0506I Presolve 92 (-2) rows, 50 (-1) columns and 276 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Coin0511I After Postsolve, objective 37.91556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Coin0511I After Postsolve, objective 37.91556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.91556009 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 94 rows, 51 columns (50 integer (50 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.22051
Cbc0038I Solution found of 2.14814
Cbc0038I Relaxing continuous gives 0.23471
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 0.23471 to -5.35356 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.60985
Cbc0038I Pass   1: suminf.    1.16927 (8) obj. -8.60985 iterations 36
Cbc0038I Pass   2: suminf.    1.85185 (7) obj. -8.60985 iterations 9
Cbc0038I Pass   3: suminf.    1.39913 (7) obj. -8.60985 iterations 2
Cbc0038I Pass   4: suminf.    1.34864 (5) obj. -8.60985 iterations 11
Cbc0038I Pass   5: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass   6: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass   7: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass   8: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass   9: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  10: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  11: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  12: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  13: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  14: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  15: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  16: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  17: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  18: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  19: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  20: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  21: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  22: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  23: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  24: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  25: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  26: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  27: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  28: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  29: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  30: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -5.35356 - took 0.08 seconds
Cbc0012I Integer solution of -5.35356 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0031I 28 added rows had average density of 35.821429
Cbc0013I At root node, 28 cuts changed objective from -37.91556 to -27.115235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11143 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2044 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 215 row cuts average 45.8 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.35356 best solution, best possible -27.115235 (0.70 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 15 rows 15 columns
Cbc0012I Integer solution of -6.11771 found by RINS after 8721 iterations and 41 nodes (0.92 seconds)
Cbc0001I Search completed - best objective -6.117710000000002, took 9207 iterations and 50 nodes (0.93 seconds)
Cbc0032I Strong branching done 626 times (10896 iterations), fathomed 4 nodes and fixed 29 variables
Cbc0035I Maximum depth 15, 116 variables fixed on reduced cost
Total time (CPU seconds):       0.91   (Wallclock seconds):       0.94

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-26) rows, 84 (-18) columns and 1083 (-495) elements
Clp1000I sum of infeasibilities 6.80967e-08 - average 8.73035e-10, 11 fixed columns
Coin0506I Presolve 67 (-11) rows, 73 (-11) columns and 803 (-280) elements
Clp0006I 0  Obj 41.208764 Dual inf 2.0723039 (73)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 4.8240957 - largest nonzero change 2.6669822e-05 ( 0.001281334%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 49.788415
Clp0000I Optimal - objective value 49.788415
Coin0511I After Postsolve, objective 49.788415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.788415
Clp0000I Optimal - objective value 49.788415
Clp0000I Optimal - objective value 49.788415
Clp0000I Optimal - objective value 49.788415
Coin0511I After Postsolve, objective 49.788415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.78841478 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 78 rows, 84 columns (84 integer (84 of which binary)) and 1085 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.995%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.29134
Cbc0038I Pass   1: suminf.    3.02237 (25) obj. -32.3576 iterations 11
Cbc0038I Pass   2: suminf.    3.02237 (25) obj. -32.3576 iterations 1
Cbc0038I Pass   3: suminf.    0.81016 (9) obj. -3.13724 iterations 16
Cbc0038I Solution found of 11.3777
Cbc0038I Rounding solution of 5.29108 is better than previous of 11.3777

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 84 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 5.29108 to -2.15884 (0.02 seconds)
Cbc0038I Round again with cutoff of -6.27547
Cbc0038I Pass   4: suminf.    3.02237 (25) obj. -32.3576 iterations 0
Cbc0038I Pass   5: suminf.    3.02237 (25) obj. -32.3576 iterations 1
Cbc0038I Pass   6: suminf.    1.02604 (9) obj. -6.27547 iterations 17
Cbc0038I Pass   7: suminf.    0.47651 (3) obj. -6.27547 iterations 10
Cbc0038I Pass   8: suminf.    0.27438 (2) obj. -8.5104 iterations 1
Cbc0038I Pass   9: suminf.    0.20136 (1) obj. -6.27547 iterations 2
Cbc0038I Pass  10: suminf.    0.16327 (1) obj. -6.73263 iterations 1
Cbc0038I Pass  11: suminf.    0.92697 (6) obj. -6.27547 iterations 22
Cbc0038I Pass  12: suminf.    0.64283 (5) obj. -6.27547 iterations 6
Cbc0038I Pass  13: suminf.    0.69990 (4) obj. -6.27547 iterations 6
Cbc0038I Pass  14: suminf.    0.57852 (4) obj. -6.27547 iterations 2
Cbc0038I Pass  15: suminf.    0.70361 (3) obj. -6.27547 iterations 2
Cbc0038I Pass  16: suminf.    1.61587 (11) obj. -6.27547 iterations 41
Cbc0038I Pass  17: suminf.    1.00750 (6) obj. -6.49836 iterations 7
Cbc0038I Pass  18: suminf.    0.98892 (4) obj. -6.27547 iterations 11
Cbc0038I Pass  19: suminf.    0.89782 (4) obj. -6.27547 iterations 2
Cbc0038I Pass  20: suminf.    1.16019 (4) obj. -6.27547 iterations 8
Cbc0038I Pass  21: suminf.    1.16019 (4) obj. -6.27547 iterations 1
Cbc0038I Pass  22: suminf.    1.02272 (4) obj. -6.27547 iterations 5
Cbc0038I Pass  23: suminf.    0.97514 (5) obj. -6.27547 iterations 8
Cbc0038I Pass  24: suminf.    1.17659 (5) obj. -6.27547 iterations 5
Cbc0038I Pass  25: suminf.    2.47867 (11) obj. -6.27547 iterations 29
Cbc0038I Pass  26: suminf.    1.67430 (11) obj. -6.27547 iterations 10
Cbc0038I Pass  27: suminf.    1.06826 (4) obj. -6.27547 iterations 14
Cbc0038I Pass  28: suminf.    0.92020 (5) obj. -6.27547 iterations 3
Cbc0038I Pass  29: suminf.    1.06826 (4) obj. -6.27547 iterations 5
Cbc0038I Pass  30: suminf.    1.46751 (7) obj. -6.27547 iterations 14
Cbc0038I Pass  31: suminf.    0.73982 (5) obj. -6.4739 iterations 5
Cbc0038I Pass  32: suminf.    1.18079 (5) obj. -6.27547 iterations 8
Cbc0038I Pass  33: suminf.    1.18079 (5) obj. -6.27547 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 84 columns, reduced to 47 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -2.15884 to -4.37626 (0.11 seconds)
Cbc0038I Round again with cutoff of -13.6852
Cbc0038I Pass  33: suminf.    3.02237 (25) obj. -32.3576 iterations 0
Cbc0038I Pass  34: suminf.    3.02237 (25) obj. -32.3576 iterations 1
Cbc0038I Pass  35: suminf.    1.27018 (5) obj. -13.6852 iterations 31
Cbc0038I Pass  36: suminf.    1.27018 (5) obj. -13.6852 iterations 0
Cbc0038I Pass  37: suminf.    1.03131 (5) obj. -13.6852 iterations 10
Cbc0038I Pass  38: suminf.    1.03131 (5) obj. -13.6852 iterations 0
Cbc0038I Pass  39: suminf.    1.17377 (4) obj. -13.6852 iterations 9
Cbc0038I Pass  40: suminf.    0.65118 (5) obj. -13.6852 iterations 7
Cbc0038I Pass  41: suminf.    0.84837 (4) obj. -13.6852 iterations 4
Cbc0038I Pass  42: suminf.    2.02920 (10) obj. -13.6852 iterations 34
Cbc0038I Pass  43: suminf.    1.76046 (8) obj. -13.6852 iterations 7
Cbc0038I Pass  44: suminf.    1.47442 (8) obj. -14.5433 iterations 2
Cbc0038I Pass  45: suminf.    1.28167 (9) obj. -13.6852 iterations 13
Cbc0038I Pass  46: suminf.    1.15133 (5) obj. -13.7959 iterations 10
Cbc0038I Pass  47: suminf.    2.50057 (14) obj. -16.246 iterations 22
Cbc0038I Pass  48: suminf.    1.50460 (11) obj. -13.6852 iterations 11
Cbc0038I Pass  49: suminf.    0.99411 (12) obj. -13.6852 iterations 14
Cbc0038I Pass  50: suminf.    0.88461 (9) obj. -13.6852 iterations 4
Cbc0038I Pass  51: suminf.    0.89125 (5) obj. -13.6852 iterations 11
Cbc0038I Pass  52: suminf.    0.79253 (5) obj. -13.9814 iterations 2
Cbc0038I Pass  53: suminf.    1.67865 (9) obj. -13.6852 iterations 10
Cbc0038I Pass  54: suminf.    0.89125 (5) obj. -13.6852 iterations 10
Cbc0038I Pass  55: suminf.    1.34776 (10) obj. -13.6852 iterations 20
Cbc0038I Pass  56: suminf.    1.28386 (8) obj. -14.1848 iterations 7
Cbc0038I Pass  57: suminf.    1.66611 (10) obj. -13.6852 iterations 11
Cbc0038I Pass  58: suminf.    1.02714 (6) obj. -13.6852 iterations 12
Cbc0038I Pass  59: suminf.    1.65032 (6) obj. -13.6852 iterations 10
Cbc0038I Pass  60: suminf.    1.48366 (7) obj. -13.6852 iterations 4
Cbc0038I Pass  61: suminf.    1.66611 (9) obj. -13.6852 iterations 10
Cbc0038I Pass  62: suminf.    2.43261 (10) obj. -13.6852 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 84 columns, reduced to 27 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -4.37626 - took 0.10 seconds
Cbc0012I Integer solution of -4.37626 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 78 rows 84 columns, reduced to 35 rows 38 columns
Cbc0031I 44 added rows had average density of 29.977273
Cbc0013I At root node, 44 cuts changed objective from -43.324258 to -11.850228 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7800 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1439 row cuts average 78.7 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 133 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.035 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 103 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1057 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.054 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 322 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 132 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.611 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.37626 best solution, best possible -11.850228 (1.85 seconds)
Cbc0012I Integer solution of -4.96871 found by rounding after 4134 iterations and 1 nodes (1.86 seconds)
Cbc0004I Integer solution of -6.11771 found after 4237 iterations and 1 nodes (1.95 seconds)
Cbc0010I After 8 nodes, 7 on tree, -6.11771 best solution, best possible -10.957034 (2.58 seconds)
Cbc0001I Search completed - best objective -6.117710000000002, took 5630 iterations and 30 nodes (3.14 seconds)
Cbc0032I Strong branching done 486 times (9979 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 60 variables fixed on reduced cost
Total time (CPU seconds):       2.23   (Wallclock seconds):       3.15

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 94 (-11) rows, 51 (-2) columns and 282 (-21) elements
Clp1000I sum of infeasibilities 1.08841e-05 - average 1.15788e-07, 1 fixed columns
Coin0506I Presolve 92 (-2) rows, 50 (-1) columns and 276 (-6) elements
Clp0029I End of values pass after 50 iterations
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Coin0511I After Postsolve, objective 37.91556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Clp0000I Optimal - objective value 37.91556
Coin0511I After Postsolve, objective 37.91556, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 37.91556009 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 94 rows, 51 columns (50 integer (50 of which binary)) and 282 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.751%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 38 integers unsatisfied sum - 8.22051
Cbc0038I Solution found of 2.14814
Cbc0038I Relaxing continuous gives 0.23471
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound improved solution from 0.23471 to -5.35356 (0.05 seconds)
Cbc0038I Round again with cutoff of -8.60985
Cbc0038I Pass   1: suminf.    1.16927 (8) obj. -8.60985 iterations 36
Cbc0038I Pass   2: suminf.    1.85185 (7) obj. -8.60985 iterations 9
Cbc0038I Pass   3: suminf.    1.39913 (7) obj. -8.60985 iterations 2
Cbc0038I Pass   4: suminf.    1.34864 (5) obj. -8.60985 iterations 11
Cbc0038I Pass   5: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass   6: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass   7: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass   8: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass   9: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  10: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  11: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  12: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  13: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  14: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  15: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  16: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  17: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  18: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  19: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  20: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  21: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  22: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  23: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I Pass  24: suminf.    1.48218 (6) obj. -8.60985 iterations 2
Cbc0038I Pass  25: suminf.    1.34864 (5) obj. -8.60985 iterations 7
Cbc0038I Pass  26: suminf.    1.34864 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  27: suminf.    1.99368 (5) obj. -8.60985 iterations 2
Cbc0038I Pass  28: suminf.    1.49024 (5) obj. -8.60985 iterations 3
Cbc0038I Pass  29: suminf.    1.49024 (5) obj. -8.60985 iterations 0
Cbc0038I Pass  30: suminf.    1.63084 (7) obj. -8.60985 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -5.35356 - took 0.11 seconds
Cbc0012I Integer solution of -5.35356 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 62 rows 39 columns
Cbc0031I 28 added rows had average density of 35.821429
Cbc0013I At root node, 28 cuts changed objective from -37.91556 to -27.115235 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 11143 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.057 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2044 row cuts average 50.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 19 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.050 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 215 row cuts average 45.8 elements, 0 column cuts (0 active)  in 0.022 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.35356 best solution, best possible -27.115235 (0.71 seconds)
Cbc0038I Full problem 94 rows 51 columns, reduced to 15 rows 15 columns
Cbc0012I Integer solution of -6.11771 found by RINS after 8721 iterations and 41 nodes (0.93 seconds)
Cbc0001I Search completed - best objective -6.117710000000002, took 9207 iterations and 50 nodes (0.94 seconds)
Cbc0032I Strong branching done 626 times (10896 iterations), fathomed 4 nodes and fixed 29 variables
Cbc0035I Maximum depth 15, 116 variables fixed on reduced cost
Total time (CPU seconds):       0.95   (Wallclock seconds):       0.95

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 78 (-27) rows, 84 (-19) columns and 1083 (-496) elements
Clp1000I sum of infeasibilities 6.80967e-08 - average 8.73035e-10, 11 fixed columns
Coin0506I Presolve 67 (-11) rows, 73 (-11) columns and 803 (-280) elements
Clp0006I 0  Obj 41.208764 Dual inf 2.0723039 (73)
Clp0029I End of values pass after 73 iterations
Clp0014I Perturbing problem by 0.001% of 4.8240957 - largest nonzero change 2.6669822e-05 ( 0.001281334%) - largest zero change 2.843899e-05
Clp0000I Optimal - objective value 49.788415
Clp0000I Optimal - objective value 49.788415
Coin0511I After Postsolve, objective 49.788415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 49.788415
Clp0000I Optimal - objective value 49.788415
Clp0000I Optimal - objective value 49.788415
Clp0000I Optimal - objective value 49.788415
Coin0511I After Postsolve, objective 49.788415, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 49.78841478 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 78 rows, 84 columns (84 integer (84 of which binary)) and 1085 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.995%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 5.29134
Cbc0038I Pass   1: suminf.    3.02237 (25) obj. -32.3576 iterations 11
Cbc0038I Pass   2: suminf.    3.02237 (25) obj. -32.3576 iterations 1
Cbc0038I Pass   3: suminf.    0.81016 (9) obj. -3.13724 iterations 16
Cbc0038I Solution found of 11.3777
Cbc0038I Rounding solution of 5.29108 is better than previous of 11.3777

Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 84 columns, reduced to 10 rows 11 columns
Cbc0038I Mini branch and bound improved solution from 5.29108 to -2.15884 (0.01 seconds)
Cbc0038I Round again with cutoff of -6.27547
Cbc0038I Pass   4: suminf.    3.02237 (25) obj. -32.3576 iterations 0
Cbc0038I Pass   5: suminf.    3.02237 (25) obj. -32.3576 iterations 1
Cbc0038I Pass   6: suminf.    1.02604 (9) obj. -6.27547 iterations 17
Cbc0038I Pass   7: suminf.    0.47651 (3) obj. -6.27547 iterations 10
Cbc0038I Pass   8: suminf.    0.27438 (2) obj. -8.5104 iterations 1
Cbc0038I Pass   9: suminf.    0.20136 (1) obj. -6.27547 iterations 2
Cbc0038I Pass  10: suminf.    0.16327 (1) obj. -6.73263 iterations 1
Cbc0038I Pass  11: suminf.    0.92697 (6) obj. -6.27547 iterations 22
Cbc0038I Pass  12: suminf.    0.64283 (5) obj. -6.27547 iterations 6
Cbc0038I Pass  13: suminf.    0.69990 (4) obj. -6.27547 iterations 6
Cbc0038I Pass  14: suminf.    0.57852 (4) obj. -6.27547 iterations 2
Cbc0038I Pass  15: suminf.    0.70361 (3) obj. -6.27547 iterations 2
Cbc0038I Pass  16: suminf.    1.61587 (11) obj. -6.27547 iterations 41
Cbc0038I Pass  17: suminf.    1.00750 (6) obj. -6.49836 iterations 7
Cbc0038I Pass  18: suminf.    0.98892 (4) obj. -6.27547 iterations 11
Cbc0038I Pass  19: suminf.    0.89782 (4) obj. -6.27547 iterations 2
Cbc0038I Pass  20: suminf.    1.16019 (4) obj. -6.27547 iterations 8
Cbc0038I Pass  21: suminf.    1.16019 (4) obj. -6.27547 iterations 1
Cbc0038I Pass  22: suminf.    1.02272 (4) obj. -6.27547 iterations 5
Cbc0038I Pass  23: suminf.    0.97514 (5) obj. -6.27547 iterations 8
Cbc0038I Pass  24: suminf.    1.17659 (5) obj. -6.27547 iterations 5
Cbc0038I Pass  25: suminf.    2.47867 (11) obj. -6.27547 iterations 29
Cbc0038I Pass  26: suminf.    1.67430 (11) obj. -6.27547 iterations 10
Cbc0038I Pass  27: suminf.    1.06826 (4) obj. -6.27547 iterations 14
Cbc0038I Pass  28: suminf.    0.92020 (5) obj. -6.27547 iterations 3
Cbc0038I Pass  29: suminf.    1.06826 (4) obj. -6.27547 iterations 5
Cbc0038I Pass  30: suminf.    1.46751 (7) obj. -6.27547 iterations 14
Cbc0038I Pass  31: suminf.    0.73982 (5) obj. -6.4739 iterations 5
Cbc0038I Pass  32: suminf.    1.18079 (5) obj. -6.27547 iterations 8
Cbc0038I Pass  33: suminf.    1.18079 (5) obj. -6.27547 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 26 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 84 columns, reduced to 47 rows 52 columns
Cbc0038I Mini branch and bound improved solution from -2.15884 to -4.37626 (0.10 seconds)
Cbc0038I Round again with cutoff of -13.6852
Cbc0038I Pass  33: suminf.    3.02237 (25) obj. -32.3576 iterations 0
Cbc0038I Pass  34: suminf.    3.02237 (25) obj. -32.3576 iterations 1
Cbc0038I Pass  35: suminf.    1.27018 (5) obj. -13.6852 iterations 31
Cbc0038I Pass  36: suminf.    1.27018 (5) obj. -13.6852 iterations 0
Cbc0038I Pass  37: suminf.    1.03131 (5) obj. -13.6852 iterations 10
Cbc0038I Pass  38: suminf.    1.03131 (5) obj. -13.6852 iterations 0
Cbc0038I Pass  39: suminf.    1.17377 (4) obj. -13.6852 iterations 9
Cbc0038I Pass  40: suminf.    0.65118 (5) obj. -13.6852 iterations 7
Cbc0038I Pass  41: suminf.    0.84837 (4) obj. -13.6852 iterations 4
Cbc0038I Pass  42: suminf.    2.02920 (10) obj. -13.6852 iterations 34
Cbc0038I Pass  43: suminf.    1.76046 (8) obj. -13.6852 iterations 7
Cbc0038I Pass  44: suminf.    1.47442 (8) obj. -14.5433 iterations 2
Cbc0038I Pass  45: suminf.    1.28167 (9) obj. -13.6852 iterations 13
Cbc0038I Pass  46: suminf.    1.15133 (5) obj. -13.7959 iterations 10
Cbc0038I Pass  47: suminf.    2.50057 (14) obj. -16.246 iterations 22
Cbc0038I Pass  48: suminf.    1.50460 (11) obj. -13.6852 iterations 11
Cbc0038I Pass  49: suminf.    0.99411 (12) obj. -13.6852 iterations 14
Cbc0038I Pass  50: suminf.    0.88461 (9) obj. -13.6852 iterations 4
Cbc0038I Pass  51: suminf.    0.89125 (5) obj. -13.6852 iterations 11
Cbc0038I Pass  52: suminf.    0.79253 (5) obj. -13.9814 iterations 2
Cbc0038I Pass  53: suminf.    1.67865 (9) obj. -13.6852 iterations 10
Cbc0038I Pass  54: suminf.    0.89125 (5) obj. -13.6852 iterations 10
Cbc0038I Pass  55: suminf.    1.34776 (10) obj. -13.6852 iterations 20
Cbc0038I Pass  56: suminf.    1.28386 (8) obj. -14.1848 iterations 7
Cbc0038I Pass  57: suminf.    1.66611 (10) obj. -13.6852 iterations 11
Cbc0038I Pass  58: suminf.    1.02714 (6) obj. -13.6852 iterations 12
Cbc0038I Pass  59: suminf.    1.65032 (6) obj. -13.6852 iterations 10
Cbc0038I Pass  60: suminf.    1.48366 (7) obj. -13.6852 iterations 4
Cbc0038I Pass  61: suminf.    1.66611 (9) obj. -13.6852 iterations 10
Cbc0038I Pass  62: suminf.    2.43261 (10) obj. -13.6852 iterations 27
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 30 integers at bound fixed and 0 continuous
Cbc0038I Full problem 78 rows 84 columns, reduced to 27 rows 38 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -4.37626 - took 0.10 seconds
Cbc0012I Integer solution of -4.37626 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 78 rows 84 columns, reduced to 35 rows 38 columns
Cbc0031I 44 added rows had average density of 29.977273
Cbc0013I At root node, 44 cuts changed objective from -43.324258 to -11.850228 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 7800 row cuts average 2.2 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1439 row cuts average 78.7 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 133 row cuts average 3.2 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 103 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.037 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1057 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 322 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.025 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 132 row cuts average 9.7 elements, 0 column cuts (0 active)  in 0.630 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -4.37626 best solution, best possible -11.850228 (1.94 seconds)
Cbc0012I Integer solution of -4.96871 found by rounding after 4134 iterations and 1 nodes (1.96 seconds)
Cbc0004I Integer solution of -6.11771 found after 4237 iterations and 1 nodes (2.04 seconds)
Cbc0010I After 8 nodes, 7 on tree, -6.11771 best solution, best possible -10.957034 (2.70 seconds)
Cbc0001I Search completed - best objective -6.117710000000002, took 5630 iterations and 30 nodes (3.28 seconds)
Cbc0032I Strong branching done 486 times (9979 iterations), fathomed 0 nodes and fixed 3 variables
Cbc0035I Maximum depth 10, 60 variables fixed on reduced cost
Total time (CPU seconds):       2.28   (Wallclock seconds):       3.29

