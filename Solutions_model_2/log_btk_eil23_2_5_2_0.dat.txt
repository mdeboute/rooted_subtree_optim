Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 20 (-5) columns and 103 (-32) elements
Clp1000I sum of infeasibilities 1.58041e-07 - average 4.51545e-09, 2 fixed columns
Coin0506I Presolve 26 (-9) rows, 18 (-2) columns and 81 (-22) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Coin0511I After Postsolve, objective 168.72455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Coin0511I After Postsolve, objective 168.72455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.724551 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.03073
Cbc0038I Pass   1: suminf.    1.60191 (4) obj. -109.586 iterations 15
Cbc0038I Pass   2: suminf.    1.04053 (3) obj. -99.3085 iterations 1
Cbc0038I Solution found of -38.0187
Cbc0038I Relaxing continuous gives -38.0187
Cbc0038I Rounding solution of -71.9318 is better than previous of -38.0187

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -71.9318 to -131.385 (0.01 seconds)
Cbc0038I Round again with cutoff of -134.928
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.88259 (7) obj. -134.928 iterations 4
Cbc0038I Pass   4: suminf.    0.88259 (7) obj. -134.928 iterations 0
Cbc0038I Pass   5: suminf.    0.81002 (6) obj. -134.928 iterations 7
Cbc0038I Pass   6: suminf.    0.23037 (2) obj. -134.928 iterations 3
Cbc0038I Pass   7: suminf.    0.67001 (3) obj. -134.928 iterations 3
Cbc0038I Pass   8: suminf.    0.66362 (4) obj. -134.928 iterations 2
Cbc0038I Pass   9: suminf.    0.57967 (3) obj. -134.928 iterations 1
Cbc0038I Pass  10: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  11: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  12: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  13: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  14: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  15: suminf.    0.73634 (5) obj. -134.928 iterations 6
Cbc0038I Pass  16: suminf.    0.73634 (5) obj. -134.928 iterations 0
Cbc0038I Pass  17: suminf.    0.81684 (5) obj. -134.928 iterations 7
Cbc0038I Pass  18: suminf.    0.57967 (3) obj. -134.928 iterations 2
Cbc0038I Pass  19: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  20: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  21: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  22: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  23: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  24: suminf.    0.41933 (2) obj. -134.928 iterations 4
Cbc0038I Pass  25: suminf.    0.66362 (4) obj. -134.928 iterations 3
Cbc0038I Pass  26: suminf.    0.57967 (3) obj. -134.928 iterations 1
Cbc0038I Pass  27: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  28: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  29: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  30: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  31: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  32: suminf.    1.12249 (7) obj. -134.928 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -131.385 - took 0.01 seconds
Cbc0012I Integer solution of -131.3848 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 5 added rows had average density of 4.2
Cbc0013I At root node, 15 cuts changed objective from -166.81489 to -131.3848 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 2.2 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 17 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -131.3848, took 22 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.02

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-8) rows, 43 (-3) columns and 336 (-52) elements
Clp1000I sum of infeasibilities 1.14678e-06 - average 2.86694e-08, 36 fixed columns
Coin0506I Presolve 8 (-32) rows, 7 (-36) columns and 26 (-310) elements
Clp0029I End of values pass after 7 iterations
Clp0000I Optimal - objective value 213.1935
Clp0000I Optimal - objective value 213.1935
Coin0511I After Postsolve, objective 213.1935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.160728 - largest nonzero change 2.8629218e-05 ( 0.0025539644%) - largest zero change 2.9649484e-05
Clp0000I Optimal - objective value 289.93989
Clp0000I Optimal - objective value 289.93989
Clp0000I Optimal - objective value 289.93989
Coin0511I After Postsolve, objective 289.93989, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 289.9398877 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 13 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 39 rows, 42 columns (42 integer (42 of which binary)) and 343 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.711%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.54938
Cbc0038I Pass   1: suminf.    1.50675 (6) obj. -207.543 iterations 12
Cbc0038I Pass   2: suminf.    1.50675 (6) obj. -207.543 iterations 0
Cbc0038I Solution found of -177.369
Cbc0038I Rounding solution of -180.339 is better than previous of -177.369

Cbc0038I Before mini branch and bound, 23 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound improved solution from -180.339 to -205.073 (0.02 seconds)
Cbc0038I Round again with cutoff of -209.994
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.52444 (7) obj. -209.994 iterations 2
Cbc0038I Pass   4: suminf.    1.52444 (7) obj. -209.994 iterations 0
Cbc0038I Pass   5: suminf.    0.79375 (2) obj. -209.994 iterations 11
Cbc0038I Pass   6: suminf.    0.16405 (1) obj. -209.994 iterations 1
Cbc0038I Pass   7: suminf.    0.43636 (1) obj. -218.163 iterations 3
Cbc0038I Pass   8: suminf.    1.19840 (5) obj. -226.801 iterations 5
Cbc0038I Pass   9: suminf.    0.47619 (2) obj. -216.709 iterations 3
Cbc0038I Pass  10: suminf.    0.06505 (1) obj. -209.994 iterations 3
Cbc0038I Pass  11: suminf.    0.36000 (1) obj. -218.843 iterations 2
Cbc0038I Pass  12: suminf.    2.16977 (7) obj. -209.994 iterations 6
Cbc0038I Pass  13: suminf.    1.06667 (3) obj. -220.776 iterations 5
Cbc0038I Pass  14: suminf.    1.53257 (5) obj. -209.994 iterations 7
Cbc0038I Pass  15: suminf.    1.32776 (7) obj. -209.994 iterations 6
Cbc0038I Pass  16: suminf.    1.16580 (6) obj. -209.994 iterations 12
Cbc0038I Pass  17: suminf.    1.16580 (6) obj. -209.994 iterations 0
Cbc0038I Pass  18: suminf.    1.38197 (5) obj. -209.994 iterations 11
Cbc0038I Pass  19: suminf.    1.38197 (5) obj. -209.994 iterations 1
Cbc0038I Pass  20: suminf.    2.15814 (6) obj. -209.994 iterations 7
Cbc0038I Pass  21: suminf.    1.94236 (8) obj. -209.994 iterations 3
Cbc0038I Pass  22: suminf.    2.03513 (7) obj. -209.994 iterations 8
Cbc0038I Pass  23: suminf.    2.03513 (7) obj. -209.994 iterations 1
Cbc0038I Pass  24: suminf.    2.61291 (7) obj. -209.994 iterations 6
Cbc0038I Pass  25: suminf.    1.76680 (6) obj. -209.994 iterations 4
Cbc0038I Pass  26: suminf.    1.61631 (5) obj. -209.994 iterations 2
Cbc0038I Pass  27: suminf.    2.03513 (7) obj. -209.994 iterations 9
Cbc0038I Pass  28: suminf.    2.03513 (7) obj. -209.994 iterations 2
Cbc0038I Pass  29: suminf.    2.61291 (7) obj. -209.994 iterations 6
Cbc0038I Pass  30: suminf.    1.76680 (6) obj. -209.994 iterations 4
Cbc0038I Pass  31: suminf.    1.61631 (5) obj. -209.994 iterations 2
Cbc0038I Pass  32: suminf.    2.03513 (7) obj. -209.994 iterations 9
Cbc0038I Rounding solution of -208.043 is better than previous of -205.073

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -218.853
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.58839 (7) obj. -218.853 iterations 0
Cbc0038I Pass  33: suminf.    1.58839 (7) obj. -218.853 iterations 0
Cbc0038I Pass  34: suminf.    0.47711 (2) obj. -218.853 iterations 12
Cbc0038I Pass  35: suminf.    0.47711 (2) obj. -218.853 iterations 0
Cbc0038I Pass  36: suminf.    0.76023 (2) obj. -226.463 iterations 2
Cbc0038I Pass  37: suminf.    0.50656 (2) obj. -218.853 iterations 1
Cbc0038I Pass  38: suminf.    0.47711 (2) obj. -218.853 iterations 3
Cbc0038I Pass  39: suminf.    1.33476 (5) obj. -218.853 iterations 9
Cbc0038I Pass  40: suminf.    1.14774 (4) obj. -218.853 iterations 2
Cbc0038I Pass  41: suminf.    0.71353 (2) obj. -218.853 iterations 7
Cbc0038I Pass  42: suminf.    0.76023 (2) obj. -222.463 iterations 2
Cbc0038I Pass  43: suminf.    0.63990 (2) obj. -218.853 iterations 1
Cbc0038I Pass  44: suminf.    0.71353 (2) obj. -218.853 iterations 2
Cbc0038I Pass  45: suminf.    2.65934 (10) obj. -218.853 iterations 16
Cbc0038I Pass  46: suminf.    1.58686 (6) obj. -218.853 iterations 9
Cbc0038I Pass  47: suminf.    1.13912 (6) obj. -218.853 iterations 8
Cbc0038I Pass  48: suminf.    1.01670 (3) obj. -218.853 iterations 3
Cbc0038I Pass  49: suminf.    0.73976 (2) obj. -218.853 iterations 4
Cbc0038I Pass  50: suminf.    0.73976 (2) obj. -218.853 iterations 0
Cbc0038I Pass  51: suminf.    1.95775 (7) obj. -218.853 iterations 10
Cbc0038I Pass  52: suminf.    1.50731 (4) obj. -218.853 iterations 6
Cbc0038I Pass  53: suminf.    1.15560 (3) obj. -228.504 iterations 3
Cbc0038I Pass  54: suminf.    0.71353 (2) obj. -218.853 iterations 7
Cbc0038I Pass  55: suminf.    0.76023 (2) obj. -222.463 iterations 2
Cbc0038I Pass  56: suminf.    0.63990 (2) obj. -218.853 iterations 1
Cbc0038I Pass  57: suminf.    0.71353 (2) obj. -218.853 iterations 3
Cbc0038I Pass  58: suminf.    2.55860 (8) obj. -218.853 iterations 10
Cbc0038I Pass  59: suminf.    1.75000 (5) obj. -225.019 iterations 3
Cbc0038I Pass  60: suminf.    0.71310 (2) obj. -218.853 iterations 7
Cbc0038I Pass  61: suminf.    0.76591 (2) obj. -219.746 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 13 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -208.043 to -216.687 (0.04 seconds)
Cbc0038I Round again with cutoff of -229.483
Cbc0038I Reduced cost fixing fixed 5 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.10412 (9) obj. -229.483 iterations 1
Cbc0038I Pass  62: suminf.    1.42062 (6) obj. -229.483 iterations 5
Cbc0038I Pass  63: suminf.    1.11804 (4) obj. -229.483 iterations 12
Cbc0038I Pass  64: suminf.    1.09901 (7) obj. -229.483 iterations 2
Cbc0038I Pass  65: suminf.    2.01491 (9) obj. -229.483 iterations 9
Cbc0038I Pass  66: suminf.    2.01491 (9) obj. -229.483 iterations 1
Cbc0038I Pass  67: suminf.    3.77110 (11) obj. -229.483 iterations 10
Cbc0038I Pass  68: suminf.    1.70756 (9) obj. -229.483 iterations 5
Cbc0038I Pass  69: suminf.    1.47990 (7) obj. -229.483 iterations 3
Cbc0038I Pass  70: suminf.    1.19314 (7) obj. -229.483 iterations 4
Cbc0038I Pass  71: suminf.    2.42560 (9) obj. -229.483 iterations 10
Cbc0038I Pass  72: suminf.    1.74283 (8) obj. -229.483 iterations 5
Cbc0038I Pass  73: suminf.    2.38083 (6) obj. -229.483 iterations 6
Cbc0038I Pass  74: suminf.    2.40722 (9) obj. -229.483 iterations 5
Cbc0038I Pass  75: suminf.    1.86718 (8) obj. -229.483 iterations 5
Cbc0038I Pass  76: suminf.    3.47214 (12) obj. -229.483 iterations 7
Cbc0038I Pass  77: suminf.    3.30115 (12) obj. -229.483 iterations 6
Cbc0038I Pass  78: suminf.    2.38083 (6) obj. -229.483 iterations 13
Cbc0038I Pass  79: suminf.    1.74283 (8) obj. -229.483 iterations 4
Cbc0038I Pass  80: suminf.    2.38083 (6) obj. -229.483 iterations 5
Cbc0038I Pass  81: suminf.    3.00439 (8) obj. -229.483 iterations 9
Cbc0038I Pass  82: suminf.    2.48056 (7) obj. -229.483 iterations 1
Cbc0038I Pass  83: suminf.    2.21332 (10) obj. -229.483 iterations 5
Cbc0038I Pass  84: suminf.    2.16492 (10) obj. -229.483 iterations 1
Cbc0038I Pass  85: suminf.    2.02837 (9) obj. -229.483 iterations 8
Cbc0038I Pass  86: suminf.    2.02837 (9) obj. -229.483 iterations 1
Cbc0038I Pass  87: suminf.    3.27036 (9) obj. -229.483 iterations 3
Cbc0038I Pass  88: suminf.    3.27036 (9) obj. -229.483 iterations 0
Cbc0038I Pass  89: suminf.    2.32259 (9) obj. -229.483 iterations 8
Cbc0038I Pass  90: suminf.    2.32259 (9) obj. -229.483 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 39 rows 42 columns, reduced to 12 rows 12 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -216.687 - took 0.03 seconds
Cbc0012I Integer solution of -216.6867 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 39 rows 42 columns, reduced to 13 rows 12 columns
Cbc0031I 6 added rows had average density of 9.1666667
Cbc0013I At root node, 28 cuts changed objective from -236.57339 to -213.97415 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 12 row cuts average 3.1 elements, 6 column cuts (6 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 4 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 3.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -216.6867, took 13 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 35 (-14) rows, 20 (-5) columns and 103 (-32) elements
Clp1000I sum of infeasibilities 1.58041e-07 - average 4.51545e-09, 2 fixed columns
Coin0506I Presolve 26 (-9) rows, 18 (-2) columns and 81 (-22) elements
Clp0029I End of values pass after 18 iterations
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Coin0511I After Postsolve, objective 168.72455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Clp0000I Optimal - objective value 168.72455
Coin0511I After Postsolve, objective 168.72455, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 168.724551 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 35 rows, 20 columns (19 integer (19 of which binary)) and 106 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.220%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 3.03073
Cbc0038I Pass   1: suminf.    1.60191 (4) obj. -109.586 iterations 15
Cbc0038I Pass   2: suminf.    1.04053 (3) obj. -99.3085 iterations 1
Cbc0038I Solution found of -38.0187
Cbc0038I Relaxing continuous gives -38.0187
Cbc0038I Rounding solution of -71.9318 is better than previous of -38.0187

Cbc0038I Before mini branch and bound, 2 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -71.9318 to -131.385 (0.01 seconds)
Cbc0038I Round again with cutoff of -134.928
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.88259 (7) obj. -134.928 iterations 4
Cbc0038I Pass   4: suminf.    0.88259 (7) obj. -134.928 iterations 0
Cbc0038I Pass   5: suminf.    0.81002 (6) obj. -134.928 iterations 7
Cbc0038I Pass   6: suminf.    0.23037 (2) obj. -134.928 iterations 3
Cbc0038I Pass   7: suminf.    0.67001 (3) obj. -134.928 iterations 3
Cbc0038I Pass   8: suminf.    0.66362 (4) obj. -134.928 iterations 2
Cbc0038I Pass   9: suminf.    0.57967 (3) obj. -134.928 iterations 1
Cbc0038I Pass  10: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  11: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  12: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  13: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  14: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  15: suminf.    0.73634 (5) obj. -134.928 iterations 6
Cbc0038I Pass  16: suminf.    0.73634 (5) obj. -134.928 iterations 0
Cbc0038I Pass  17: suminf.    0.81684 (5) obj. -134.928 iterations 7
Cbc0038I Pass  18: suminf.    0.57967 (3) obj. -134.928 iterations 2
Cbc0038I Pass  19: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  20: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  21: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  22: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  23: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  24: suminf.    0.41933 (2) obj. -134.928 iterations 4
Cbc0038I Pass  25: suminf.    0.66362 (4) obj. -134.928 iterations 3
Cbc0038I Pass  26: suminf.    0.57967 (3) obj. -134.928 iterations 1
Cbc0038I Pass  27: suminf.    0.40013 (4) obj. -134.928 iterations 4
Cbc0038I Pass  28: suminf.    0.35907 (4) obj. -134.928 iterations 1
Cbc0038I Pass  29: suminf.    0.56276 (3) obj. -134.928 iterations 4
Cbc0038I Pass  30: suminf.    0.43598 (3) obj. -134.928 iterations 1
Cbc0038I Pass  31: suminf.    0.61950 (4) obj. -134.928 iterations 2
Cbc0038I Pass  32: suminf.    1.12249 (7) obj. -134.928 iterations 7
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 35 rows 20 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -131.385 - took 0.02 seconds
Cbc0012I Integer solution of -131.3848 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0031I 5 added rows had average density of 4.2
Cbc0013I At root node, 15 cuts changed objective from -166.81489 to -131.3848 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 13 row cuts average 2.2 elements, 9 column cuts (9 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 6.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 17 row cuts average 6.1 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -131.3848, took 22 iterations and 0 nodes (0.02 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-12) rows, 40 (-7) columns and 306 (-83) elements
Clp1000I sum of infeasibilities 1.55662e-05 - average 4.20707e-07, 25 fixed columns
Coin0506I Presolve 9 (-28) rows, 11 (-29) columns and 37 (-269) elements
Clp0029I End of values pass after 11 iterations
Clp0000I Optimal - objective value 177.95769
Clp0000I Optimal - objective value 177.95769
Coin0511I After Postsolve, objective 177.95769, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4197898 - largest nonzero change 0 ( 0%) - largest zero change 2.6331912e-05
Clp0000I Optimal - objective value 196.44935
Clp0000I Optimal - objective value 196.44935
Clp0000I Optimal - objective value 196.44935
Coin0511I After Postsolve, objective 196.44935, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 196.4493543 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 40 columns (40 integer (40 of which binary)) and 320 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.012%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 14 integers unsatisfied sum - 5.75165
Cbc0038I Pass   1: suminf.    0.91071 (3) obj. -123.271 iterations 13
Cbc0038I Pass   2: suminf.    0.91071 (3) obj. -123.271 iterations 0
Cbc0038I Solution found of -111.771
Cbc0038I Rounding solution of -116.721 is better than previous of -111.771

Cbc0038I Before mini branch and bound, 25 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -116.721 to -119.967 (0.02 seconds)
Cbc0038I Round again with cutoff of -124.366
Cbc0038I Pass   3: suminf.    1.07306 (6) obj. -124.366 iterations 2
Cbc0038I Pass   4: suminf.    0.94722 (4) obj. -124.366 iterations 1
Cbc0038I Pass   5: suminf.    0.46291 (2) obj. -124.366 iterations 9
Cbc0038I Pass   6: suminf.    0.46291 (2) obj. -124.366 iterations 0
Cbc0038I Pass   7: suminf.    0.84545 (2) obj. -131.635 iterations 4
Cbc0038I Pass   8: suminf.    0.60318 (2) obj. -124.366 iterations 2
Cbc0038I Pass   9: suminf.    2.19235 (7) obj. -124.366 iterations 11
Cbc0038I Pass  10: suminf.    1.30456 (5) obj. -124.366 iterations 4
Cbc0038I Pass  11: suminf.    0.46291 (2) obj. -124.366 iterations 8
Cbc0038I Pass  12: suminf.    0.46291 (2) obj. -124.366 iterations 0
Cbc0038I Pass  13: suminf.    0.84545 (2) obj. -131.635 iterations 2
Cbc0038I Pass  14: suminf.    0.60318 (2) obj. -124.366 iterations 2
Cbc0038I Pass  15: suminf.    0.46291 (2) obj. -124.366 iterations 1
Cbc0038I Pass  16: suminf.    2.10692 (6) obj. -124.366 iterations 11
Cbc0038I Pass  17: suminf.    2.10692 (6) obj. -124.366 iterations 1
Cbc0038I Pass  18: suminf.    0.83133 (2) obj. -124.366 iterations 6
Cbc0038I Pass  19: suminf.    0.83133 (2) obj. -124.366 iterations 0
Cbc0038I Pass  20: suminf.    0.84545 (2) obj. -124.635 iterations 2
Cbc0038I Pass  21: suminf.    0.83651 (2) obj. -124.366 iterations 2
Cbc0038I Pass  22: suminf.    1.16154 (4) obj. -124.366 iterations 3
Cbc0038I Pass  23: suminf.    0.87011 (4) obj. -124.366 iterations 4
Cbc0038I Pass  24: suminf.    0.51933 (2) obj. -124.366 iterations 6
Cbc0038I Pass  25: suminf.    0.42101 (2) obj. -124.366 iterations 2
Cbc0038I Pass  26: suminf.    0.47382 (4) obj. -124.366 iterations 3
Cbc0038I Pass  27: suminf.    0.47382 (4) obj. -124.366 iterations 0
Cbc0038I Pass  28: suminf.    0.55253 (5) obj. -124.366 iterations 4
Cbc0038I Pass  29: suminf.    2.14711 (7) obj. -124.366 iterations 10
Cbc0038I Pass  30: suminf.    0.94784 (3) obj. -124.366 iterations 7
Cbc0038I Pass  31: suminf.    0.61654 (2) obj. -124.366 iterations 3
Cbc0038I Pass  32: suminf.    0.61654 (2) obj. -124.366 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 40 columns, reduced to 6 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -119.967 - took 0.01 seconds
Cbc0012I Integer solution of -119.9673 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0012I Integer solution of -131.3848 found by DiveCoefficient after 31 iterations and 0 nodes (0.11 seconds)
Cbc0031I 6 added rows had average density of 5.8333333
Cbc0013I At root node, 6 cuts changed objective from -163.95548 to -131.3848 in 6 passes
Cbc0014I Cut generator 0 (Probing) - 76 row cuts average 2.0 elements, 25 column cuts (25 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 10.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 23 row cuts average 10.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 3 row cuts average 17.0 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0001I Search completed - best objective -131.3848, took 31 iterations and 0 nodes (0.11 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.12

