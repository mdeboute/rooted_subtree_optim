Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 57 (-21) columns and 313 (-140) elements
Clp1000I sum of infeasibilities 3.49441e-05 - average 3.39263e-07, 25 fixed columns
Coin0506I Presolve 32 (-71) rows, 22 (-35) columns and 102 (-211) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Coin0511I After Postsolve, objective 334.11788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Coin0511I After Postsolve, objective 334.11788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 334.1178787 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 103 rows, 57 columns (56 integer (56 of which binary)) and 313 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.53108
Cbc0038I Pass   1: suminf.    0.26931 (2) obj. -312.836 iterations 20
Cbc0038I Pass   2: suminf.    0.26931 (2) obj. -312.836 iterations 0
Cbc0038I Solution found of -194.191
Cbc0038I Relaxing continuous gives -194.191
Cbc0038I Rounding solution of -266.559 is better than previous of -194.191

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -266.559 to -314.416 (0.02 seconds)
Cbc0038I Round again with cutoff of -316.387
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.36118 (6) obj. -316.387 iterations 4
Cbc0038I Pass   4: suminf.    0.35179 (4) obj. -316.387 iterations 5
Cbc0038I Pass   5: suminf.    0.48792 (3) obj. -316.387 iterations 14
Cbc0038I Pass   6: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass   7: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass   8: suminf.    0.63612 (4) obj. -316.387 iterations 10
Cbc0038I Pass   9: suminf.    0.63612 (4) obj. -316.387 iterations 1
Cbc0038I Pass  10: suminf.    0.70450 (6) obj. -316.387 iterations 1
Cbc0038I Pass  11: suminf.    0.63612 (4) obj. -316.387 iterations 1
Cbc0038I Pass  12: suminf.    0.48792 (3) obj. -316.387 iterations 12
Cbc0038I Pass  13: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass  14: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass  15: suminf.    2.55271 (8) obj. -316.387 iterations 14
Cbc0038I Pass  16: suminf.    2.51876 (10) obj. -316.387 iterations 3
Cbc0038I Pass  17: suminf.    1.22594 (7) obj. -316.387 iterations 11
Cbc0038I Pass  18: suminf.    1.16120 (5) obj. -316.387 iterations 7
Cbc0038I Pass  19: suminf.    1.20402 (5) obj. -316.387 iterations 9
Cbc0038I Pass  20: suminf.    0.63612 (4) obj. -316.387 iterations 10
Cbc0038I Pass  21: suminf.    0.63612 (4) obj. -316.387 iterations 2
Cbc0038I Pass  22: suminf.    0.48792 (3) obj. -316.387 iterations 12
Cbc0038I Pass  23: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass  24: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass  25: suminf.    0.92075 (9) obj. -316.387 iterations 9
Cbc0038I Pass  26: suminf.    0.87197 (7) obj. -316.387 iterations 4
Cbc0038I Pass  27: suminf.    1.00188 (4) obj. -316.387 iterations 18
Cbc0038I Pass  28: suminf.    1.00188 (4) obj. -316.387 iterations 1
Cbc0038I Pass  29: suminf.    1.00296 (5) obj. -316.387 iterations 13
Cbc0038I Pass  30: suminf.    0.43721 (1) obj. -316.387 iterations 7
Cbc0038I Pass  31: suminf.    0.37838 (1) obj. -321.428 iterations 1
Cbc0038I Pass  32: suminf.    0.86935 (4) obj. -316.387 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -314.416 - took 0.02 seconds
Cbc0012I Integer solution of -314.41636 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 103 rows 57 columns, reduced to 22 rows 16 columns
Cbc0031I 7 added rows had average density of 9
Cbc0013I At root node, 7 cuts changed objective from -334.11788 to -319.57812 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0001I Search completed - best objective -314.41636, took 126 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 6 times (23 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-70) rows, 93 (-59) columns and 1273 (-2030) elements
Clp1000I sum of infeasibilities 0 - average 0, 67 fixed columns
Coin0506I Presolve 17 (-67) rows, 24 (-69) columns and 78 (-1195) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.2463656 - largest nonzero change 1.9398167e-05 ( 0.00096990836%) - largest zero change 1.8240846e-05
Clp0000I Optimal - objective value 310.96017
Clp0000I Optimal - objective value 310.96017
Coin0511I After Postsolve, objective 310.96017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0214881 - largest nonzero change 1.200103e-05 ( 0.00091204228%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 364.88606
Clp0000I Optimal - objective value 364.88606
Clp0000I Optimal - objective value 364.88606
Coin0511I After Postsolve, objective 364.88606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 364.8860611 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 93 columns (93 integer (93 of which binary)) and 1279 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.745%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 3.11537
Cbc0038I Pass   1: suminf.    2.07742 (22) obj. -271.64 iterations 16
Cbc0038I Pass   2: suminf.    2.07742 (22) obj. -271.64 iterations 1
Cbc0038I Pass   3: suminf.    0.88394 (11) obj. -255.581 iterations 11
Cbc0038I Solution found of -242.716
Cbc0038I Rounding solution of -285.032 is better than previous of -242.716

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 93 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -291.705
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.54989 (27) obj. -291.705 iterations 1
Cbc0038I Pass   5: suminf.    2.54989 (27) obj. -291.705 iterations 0
Cbc0038I Pass   6: suminf.    1.58532 (16) obj. -335.885 iterations 12
Cbc0038I Pass   7: suminf.    0.38161 (1) obj. -291.705 iterations 16
Cbc0038I Pass   8: suminf.    0.05405 (1) obj. -319.773 iterations 1
Cbc0038I Pass   9: suminf.    1.04277 (5) obj. -291.705 iterations 14
Cbc0038I Pass  10: suminf.    0.43507 (4) obj. -312.712 iterations 7
Cbc0038I Pass  11: suminf.    0.26864 (1) obj. -291.705 iterations 4
Cbc0038I Pass  12: suminf.    0.05405 (1) obj. -310.093 iterations 1
Cbc0038I Pass  13: suminf.    2.82962 (14) obj. -291.705 iterations 21
Cbc0038I Pass  14: suminf.    2.11957 (13) obj. -291.705 iterations 8
Cbc0038I Pass  15: suminf.    1.62930 (12) obj. -308.106 iterations 4
Cbc0038I Pass  16: suminf.    0.26864 (1) obj. -291.705 iterations 12
Cbc0038I Pass  17: suminf.    0.05405 (1) obj. -310.093 iterations 1
Cbc0038I Pass  18: suminf.    1.06218 (5) obj. -291.705 iterations 15
Cbc0038I Pass  19: suminf.    1.06218 (5) obj. -291.705 iterations 4
Cbc0038I Pass  20: suminf.    0.05405 (1) obj. -309.093 iterations 10
Cbc0038I Pass  21: suminf.    0.25697 (1) obj. -291.705 iterations 1
Cbc0038I Pass  22: suminf.    2.80832 (12) obj. -291.705 iterations 34
Cbc0038I Pass  23: suminf.    1.66160 (10) obj. -291.705 iterations 8
Cbc0038I Pass  24: suminf.    0.90859 (2) obj. -291.705 iterations 11
Cbc0038I Pass  25: suminf.    0.27070 (2) obj. -300.363 iterations 3
Cbc0038I Pass  26: suminf.    0.04634 (1) obj. -291.705 iterations 2
Cbc0038I Pass  27: suminf.    1.58698 (9) obj. -291.705 iterations 17
Cbc0038I Pass  28: suminf.    1.58698 (9) obj. -291.705 iterations 1
Cbc0038I Pass  29: suminf.    1.14846 (3) obj. -291.705 iterations 16
Cbc0038I Pass  30: suminf.    0.58961 (2) obj. -291.705 iterations 3
Cbc0038I Pass  31: suminf.    0.32432 (1) obj. -305.071 iterations 8
Cbc0038I Pass  32: suminf.    0.48030 (1) obj. -291.705 iterations 1
Cbc0038I Pass  33: suminf.    1.32022 (5) obj. -291.705 iterations 13
Cbc0038I Rounding solution of -296.734 is better than previous of -285.032

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 93 columns, reduced to 41 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -296.734 to -314.416 (0.05 seconds)
Cbc0038I Round again with cutoff of -321.886
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.07005 (27) obj. -321.886 iterations 0
Cbc0038I Pass  34: suminf.    0.66851 (8) obj. -321.886 iterations 19
Cbc0038I Pass  35: suminf.    0.63323 (8) obj. -327.093 iterations 1
Cbc0038I Pass  36: suminf.    0.52578 (2) obj. -321.886 iterations 18
Cbc0038I Pass  37: suminf.    0.18056 (2) obj. -323.267 iterations 9
Cbc0038I Pass  38: suminf.    1.89427 (12) obj. -321.886 iterations 32
Cbc0038I Pass  39: suminf.    1.16122 (10) obj. -329.873 iterations 8
Cbc0038I Pass  40: suminf.    0.64494 (7) obj. -321.886 iterations 19
Cbc0038I Pass  41: suminf.    0.64494 (7) obj. -321.886 iterations 0
Cbc0038I Pass  42: suminf.    0.65827 (7) obj. -321.886 iterations 2
Cbc0038I Pass  43: suminf.    0.30421 (3) obj. -322.896 iterations 12
Cbc0038I Pass  44: suminf.    0.94543 (12) obj. -321.886 iterations 23
Cbc0038I Pass  45: suminf.    0.74787 (7) obj. -324.453 iterations 10
Cbc0038I Pass  46: suminf.    0.55921 (8) obj. -321.886 iterations 16
Cbc0038I Pass  47: suminf.    0.55921 (8) obj. -321.886 iterations 1
Cbc0038I Pass  48: suminf.    0.56969 (8) obj. -321.886 iterations 5
Cbc0038I Pass  49: suminf.    0.56969 (8) obj. -321.886 iterations 2
Cbc0038I Pass  50: suminf.    0.55921 (8) obj. -321.886 iterations 3
Cbc0038I Pass  51: suminf.    1.56823 (11) obj. -321.886 iterations 13
Cbc0038I Pass  52: suminf.    1.06579 (10) obj. -327.848 iterations 10
Cbc0038I Pass  53: suminf.    0.76766 (8) obj. -321.886 iterations 21
Cbc0038I Pass  54: suminf.    0.43230 (4) obj. -322.512 iterations 12
Cbc0038I Pass  55: suminf.    1.45222 (11) obj. -321.886 iterations 37
Cbc0038I Pass  56: suminf.    1.17668 (10) obj. -327.61 iterations 7
Cbc0038I Pass  57: suminf.    0.49637 (9) obj. -321.886 iterations 19
Cbc0038I Pass  58: suminf.    0.49637 (9) obj. -321.886 iterations 0
Cbc0038I Pass  59: suminf.    0.55921 (8) obj. -321.886 iterations 13
Cbc0038I Pass  60: suminf.    0.55921 (8) obj. -321.886 iterations 2
Cbc0038I Pass  61: suminf.    0.56969 (8) obj. -321.886 iterations 5
Cbc0038I Pass  62: suminf.    0.56969 (8) obj. -321.886 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 93 columns, reduced to 29 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -314.416 - took 0.04 seconds
Cbc0012I Integer solution of -314.41636 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 84 rows 93 columns, reduced to 31 rows 32 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 13 added rows had average density of 5.4615385
Cbc0013I At root node, 13 cuts changed objective from -351.76622 to -314.73673 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 284 row cuts average 11.6 elements, 36 column cuts (36 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0001I Search completed - best objective -314.41636, took 97 iterations and 0 nodes (0.18 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.13   (Wallclock seconds):       0.19

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 57 (-21) columns and 313 (-140) elements
Clp1000I sum of infeasibilities 3.49441e-05 - average 3.39263e-07, 25 fixed columns
Coin0506I Presolve 32 (-71) rows, 22 (-35) columns and 102 (-211) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Coin0511I After Postsolve, objective 334.11788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Clp0000I Optimal - objective value 334.11788
Coin0511I After Postsolve, objective 334.11788, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 334.1178787 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 103 rows, 57 columns (56 integer (56 of which binary)) and 313 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.541%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.53108
Cbc0038I Pass   1: suminf.    0.26931 (2) obj. -312.836 iterations 20
Cbc0038I Pass   2: suminf.    0.26931 (2) obj. -312.836 iterations 0
Cbc0038I Solution found of -194.191
Cbc0038I Relaxing continuous gives -194.191
Cbc0038I Rounding solution of -266.559 is better than previous of -194.191

Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 22 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -266.559 to -314.416 (0.02 seconds)
Cbc0038I Round again with cutoff of -316.387
Cbc0038I Reduced cost fixing fixed 18 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.36118 (6) obj. -316.387 iterations 4
Cbc0038I Pass   4: suminf.    0.35179 (4) obj. -316.387 iterations 5
Cbc0038I Pass   5: suminf.    0.48792 (3) obj. -316.387 iterations 14
Cbc0038I Pass   6: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass   7: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass   8: suminf.    0.63612 (4) obj. -316.387 iterations 10
Cbc0038I Pass   9: suminf.    0.63612 (4) obj. -316.387 iterations 1
Cbc0038I Pass  10: suminf.    0.70450 (6) obj. -316.387 iterations 1
Cbc0038I Pass  11: suminf.    0.63612 (4) obj. -316.387 iterations 1
Cbc0038I Pass  12: suminf.    0.48792 (3) obj. -316.387 iterations 12
Cbc0038I Pass  13: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass  14: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass  15: suminf.    2.55271 (8) obj. -316.387 iterations 14
Cbc0038I Pass  16: suminf.    2.51876 (10) obj. -316.387 iterations 3
Cbc0038I Pass  17: suminf.    1.22594 (7) obj. -316.387 iterations 11
Cbc0038I Pass  18: suminf.    1.16120 (5) obj. -316.387 iterations 7
Cbc0038I Pass  19: suminf.    1.20402 (5) obj. -316.387 iterations 9
Cbc0038I Pass  20: suminf.    0.63612 (4) obj. -316.387 iterations 10
Cbc0038I Pass  21: suminf.    0.63612 (4) obj. -316.387 iterations 2
Cbc0038I Pass  22: suminf.    0.48792 (3) obj. -316.387 iterations 12
Cbc0038I Pass  23: suminf.    0.32432 (1) obj. -318.071 iterations 6
Cbc0038I Pass  24: suminf.    0.34398 (1) obj. -316.387 iterations 1
Cbc0038I Pass  25: suminf.    0.92075 (9) obj. -316.387 iterations 9
Cbc0038I Pass  26: suminf.    0.87197 (7) obj. -316.387 iterations 4
Cbc0038I Pass  27: suminf.    1.00188 (4) obj. -316.387 iterations 18
Cbc0038I Pass  28: suminf.    1.00188 (4) obj. -316.387 iterations 1
Cbc0038I Pass  29: suminf.    1.00296 (5) obj. -316.387 iterations 13
Cbc0038I Pass  30: suminf.    0.43721 (1) obj. -316.387 iterations 7
Cbc0038I Pass  31: suminf.    0.37838 (1) obj. -321.428 iterations 1
Cbc0038I Pass  32: suminf.    0.86935 (4) obj. -316.387 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 39 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 57 columns, reduced to 29 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -314.416 - took 0.02 seconds
Cbc0012I Integer solution of -314.41636 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 103 rows 57 columns, reduced to 22 rows 16 columns
Cbc0031I 7 added rows had average density of 9
Cbc0013I At root node, 7 cuts changed objective from -334.11788 to -319.57812 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 85 row cuts average 3.0 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 8.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 68 row cuts average 18.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0001I Search completed - best objective -314.41636, took 126 iterations and 2 nodes (0.05 seconds)
Cbc0032I Strong branching done 6 times (23 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 23 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.05

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 84 (-71) rows, 93 (-60) columns and 1273 (-2031) elements
Clp1000I sum of infeasibilities 0 - average 0, 67 fixed columns
Coin0506I Presolve 17 (-67) rows, 24 (-69) columns and 78 (-1195) elements
Clp0029I End of values pass after 24 iterations
Clp0014I Perturbing problem by 0.001% of 1.2463656 - largest nonzero change 1.9398167e-05 ( 0.00096990836%) - largest zero change 1.8240846e-05
Clp0000I Optimal - objective value 310.96017
Clp0000I Optimal - objective value 310.96017
Coin0511I After Postsolve, objective 310.96017, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0214881 - largest nonzero change 1.200103e-05 ( 0.00091204228%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 364.88606
Clp0000I Optimal - objective value 364.88606
Clp0000I Optimal - objective value 364.88606
Coin0511I After Postsolve, objective 364.88606, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 364.8860611 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 84 rows, 93 columns (93 integer (93 of which binary)) and 1279 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.745%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 31 integers unsatisfied sum - 3.11537
Cbc0038I Pass   1: suminf.    2.07742 (22) obj. -271.64 iterations 16
Cbc0038I Pass   2: suminf.    2.07742 (22) obj. -271.64 iterations 1
Cbc0038I Pass   3: suminf.    0.88394 (11) obj. -255.581 iterations 11
Cbc0038I Solution found of -242.716
Cbc0038I Rounding solution of -285.032 is better than previous of -242.716

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 93 columns, reduced to 9 rows 9 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -291.705
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 2
Cbc0038I Pass   4: suminf.    2.54989 (27) obj. -291.705 iterations 1
Cbc0038I Pass   5: suminf.    2.54989 (27) obj. -291.705 iterations 0
Cbc0038I Pass   6: suminf.    1.58532 (16) obj. -335.885 iterations 12
Cbc0038I Pass   7: suminf.    0.38161 (1) obj. -291.705 iterations 16
Cbc0038I Pass   8: suminf.    0.05405 (1) obj. -319.773 iterations 1
Cbc0038I Pass   9: suminf.    1.04277 (5) obj. -291.705 iterations 14
Cbc0038I Pass  10: suminf.    0.43507 (4) obj. -312.712 iterations 7
Cbc0038I Pass  11: suminf.    0.26864 (1) obj. -291.705 iterations 4
Cbc0038I Pass  12: suminf.    0.05405 (1) obj. -310.093 iterations 1
Cbc0038I Pass  13: suminf.    2.82962 (14) obj. -291.705 iterations 21
Cbc0038I Pass  14: suminf.    2.11957 (13) obj. -291.705 iterations 8
Cbc0038I Pass  15: suminf.    1.62930 (12) obj. -308.106 iterations 4
Cbc0038I Pass  16: suminf.    0.26864 (1) obj. -291.705 iterations 12
Cbc0038I Pass  17: suminf.    0.05405 (1) obj. -310.093 iterations 1
Cbc0038I Pass  18: suminf.    1.06218 (5) obj. -291.705 iterations 15
Cbc0038I Pass  19: suminf.    1.06218 (5) obj. -291.705 iterations 4
Cbc0038I Pass  20: suminf.    0.05405 (1) obj. -309.093 iterations 10
Cbc0038I Pass  21: suminf.    0.25697 (1) obj. -291.705 iterations 1
Cbc0038I Pass  22: suminf.    2.80832 (12) obj. -291.705 iterations 34
Cbc0038I Pass  23: suminf.    1.66160 (10) obj. -291.705 iterations 8
Cbc0038I Pass  24: suminf.    0.90859 (2) obj. -291.705 iterations 11
Cbc0038I Pass  25: suminf.    0.27070 (2) obj. -300.363 iterations 3
Cbc0038I Pass  26: suminf.    0.04634 (1) obj. -291.705 iterations 2
Cbc0038I Pass  27: suminf.    1.58698 (9) obj. -291.705 iterations 17
Cbc0038I Pass  28: suminf.    1.58698 (9) obj. -291.705 iterations 1
Cbc0038I Pass  29: suminf.    1.14846 (3) obj. -291.705 iterations 16
Cbc0038I Pass  30: suminf.    0.58961 (2) obj. -291.705 iterations 3
Cbc0038I Pass  31: suminf.    0.32432 (1) obj. -305.071 iterations 8
Cbc0038I Pass  32: suminf.    0.48030 (1) obj. -291.705 iterations 1
Cbc0038I Pass  33: suminf.    1.32022 (5) obj. -291.705 iterations 13
Cbc0038I Rounding solution of -296.734 is better than previous of -285.032

Cbc0038I Before mini branch and bound, 43 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 93 columns, reduced to 41 rows 45 columns
Cbc0038I Mini branch and bound improved solution from -296.734 to -314.416 (0.05 seconds)
Cbc0038I Round again with cutoff of -321.886
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 3
Cbc0038I Pass  33: suminf.    3.07005 (27) obj. -321.886 iterations 0
Cbc0038I Pass  34: suminf.    0.66851 (8) obj. -321.886 iterations 19
Cbc0038I Pass  35: suminf.    0.63323 (8) obj. -327.093 iterations 1
Cbc0038I Pass  36: suminf.    0.52578 (2) obj. -321.886 iterations 18
Cbc0038I Pass  37: suminf.    0.18056 (2) obj. -323.267 iterations 9
Cbc0038I Pass  38: suminf.    1.89427 (12) obj. -321.886 iterations 32
Cbc0038I Pass  39: suminf.    1.16122 (10) obj. -329.873 iterations 8
Cbc0038I Pass  40: suminf.    0.64494 (7) obj. -321.886 iterations 19
Cbc0038I Pass  41: suminf.    0.64494 (7) obj. -321.886 iterations 0
Cbc0038I Pass  42: suminf.    0.65827 (7) obj. -321.886 iterations 2
Cbc0038I Pass  43: suminf.    0.30421 (3) obj. -322.896 iterations 12
Cbc0038I Pass  44: suminf.    0.94543 (12) obj. -321.886 iterations 23
Cbc0038I Pass  45: suminf.    0.74787 (7) obj. -324.453 iterations 10
Cbc0038I Pass  46: suminf.    0.55921 (8) obj. -321.886 iterations 16
Cbc0038I Pass  47: suminf.    0.55921 (8) obj. -321.886 iterations 1
Cbc0038I Pass  48: suminf.    0.56969 (8) obj. -321.886 iterations 5
Cbc0038I Pass  49: suminf.    0.56969 (8) obj. -321.886 iterations 2
Cbc0038I Pass  50: suminf.    0.55921 (8) obj. -321.886 iterations 3
Cbc0038I Pass  51: suminf.    1.56823 (11) obj. -321.886 iterations 13
Cbc0038I Pass  52: suminf.    1.06579 (10) obj. -327.848 iterations 10
Cbc0038I Pass  53: suminf.    0.76766 (8) obj. -321.886 iterations 21
Cbc0038I Pass  54: suminf.    0.43230 (4) obj. -322.512 iterations 12
Cbc0038I Pass  55: suminf.    1.45222 (11) obj. -321.886 iterations 37
Cbc0038I Pass  56: suminf.    1.17668 (10) obj. -327.61 iterations 7
Cbc0038I Pass  57: suminf.    0.49637 (9) obj. -321.886 iterations 19
Cbc0038I Pass  58: suminf.    0.49637 (9) obj. -321.886 iterations 0
Cbc0038I Pass  59: suminf.    0.55921 (8) obj. -321.886 iterations 13
Cbc0038I Pass  60: suminf.    0.55921 (8) obj. -321.886 iterations 2
Cbc0038I Pass  61: suminf.    0.56969 (8) obj. -321.886 iterations 5
Cbc0038I Pass  62: suminf.    0.56969 (8) obj. -321.886 iterations 2
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 51 integers at bound fixed and 0 continuous
Cbc0038I Full problem 84 rows 93 columns, reduced to 29 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -314.416 - took 0.04 seconds
Cbc0012I Integer solution of -314.41636 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 84 rows 93 columns, reduced to 31 rows 32 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 13 added rows had average density of 5.4615385
Cbc0013I At root node, 13 cuts changed objective from -351.76622 to -314.73673 in 8 passes
Cbc0014I Cut generator 0 (Probing) - 284 row cuts average 11.6 elements, 36 column cuts (36 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 13 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 14 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 26 row cuts average 12.2 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 99 row cuts average 13.5 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 8 row cuts average 26.2 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0001I Search completed - best objective -314.41636, took 97 iterations and 0 nodes (0.19 seconds)
Cbc0035I Maximum depth 0, 24 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.20

