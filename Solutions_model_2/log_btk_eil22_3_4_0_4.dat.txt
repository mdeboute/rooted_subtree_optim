Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 20 (-4) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 1.78509e-05 - average 4.82458e-07, 8 fixed columns
Coin0506I Presolve 17 (-20) rows, 10 (-10) columns and 48 (-59) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 125.69654
Clp0000I Optimal - objective value 125.69654
Coin0511I After Postsolve, objective 125.69654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 125.69654
Clp0000I Optimal - objective value 125.69654
Clp0000I Optimal - objective value 125.69654
Coin0511I After Postsolve, objective 125.69654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.6965421 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 20 columns (19 integer (19 of which binary)) and 117 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.195%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.49009
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -68.5 iterations 5
Cbc0038I Solution found of -68.5
Cbc0038I Relaxing continuous gives -68.5
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 13 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -73.3323
Cbc0038I Pass   2: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass   3: suminf.    0.30647 (2) obj. -73.3323 iterations 3
Cbc0038I Pass   4: suminf.    1.50407 (5) obj. -73.3323 iterations 3
Cbc0038I Pass   5: suminf.    1.39420 (4) obj. -73.3323 iterations 2
Cbc0038I Pass   6: suminf.    1.11820 (3) obj. -73.3323 iterations 5
Cbc0038I Pass   7: suminf.    0.47825 (3) obj. -73.3323 iterations 5
Cbc0038I Pass   8: suminf.    0.47825 (3) obj. -73.3323 iterations 2
Cbc0038I Pass   9: suminf.    0.80645 (6) obj. -73.3323 iterations 6
Cbc0038I Pass  10: suminf.    0.51133 (3) obj. -73.3323 iterations 2
Cbc0038I Pass  11: suminf.    0.30647 (2) obj. -73.3323 iterations 4
Cbc0038I Pass  12: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass  13: suminf.    0.26179 (3) obj. -73.3323 iterations 2
Cbc0038I Pass  14: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass  15: suminf.    2.04165 (6) obj. -73.3323 iterations 5
Cbc0038I Pass  16: suminf.    2.04165 (6) obj. -73.3323 iterations 1
Cbc0038I Pass  17: suminf.    0.30647 (2) obj. -73.3323 iterations 5
Cbc0038I Pass  18: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass  19: suminf.    1.15385 (3) obj. -73.3323 iterations 3
Cbc0038I Pass  20: suminf.    0.79987 (5) obj. -73.3323 iterations 3
Cbc0038I Pass  21: suminf.    1.33372 (3) obj. -73.3323 iterations 5
Cbc0038I Pass  22: suminf.    0.30647 (2) obj. -73.3323 iterations 5
Cbc0038I Pass  23: suminf.    0.30647 (2) obj. -73.3323 iterations 0
Cbc0038I Pass  24: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass  25: suminf.    0.59799 (4) obj. -73.3323 iterations 2
Cbc0038I Pass  26: suminf.    0.47825 (3) obj. -73.3323 iterations 2
Cbc0038I Pass  27: suminf.    0.98831 (4) obj. -73.3323 iterations 5
Cbc0038I Pass  28: suminf.    0.35328 (2) obj. -73.3323 iterations 5
Cbc0038I Pass  29: suminf.    1.11820 (3) obj. -73.3323 iterations 7
Cbc0038I Pass  30: suminf.    1.11820 (3) obj. -73.3323 iterations 1
Cbc0038I Pass  31: suminf.    0.30647 (2) obj. -73.3323 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -68.5 - took 0.03 seconds
Cbc0012I Integer solution of -68.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 20 columns, reduced to 13 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 4.5
Cbc0013I At root node, 4 cuts changed objective from -115.69859 to -71.819425 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 2.9 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 15 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -68.5, took 27 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-8) rows, 39 (-5) columns and 272 (-88) elements
Clp1000I sum of infeasibilities 3.23735e-08 - average 8.51934e-10, 7 fixed columns
Coin0506I Presolve 31 (-7) rows, 31 (-8) columns and 188 (-84) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 159.30865
Clp0000I Optimal - objective value 159.30865
Coin0511I After Postsolve, objective 159.30865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.2377156 - largest nonzero change 1.9363323e-05 ( 0.0012035115%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 159.30865
Clp0000I Optimal - objective value 159.30865
Clp0000I Optimal - objective value 159.30865
Coin0511I After Postsolve, objective 159.30865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 159.3086462 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 39 columns (39 integer (39 of which binary)) and 284 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.536%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.16604
Cbc0038I Pass   1: suminf.    0.36269 (4) obj. -66.873 iterations 10
Cbc0038I Pass   2: suminf.    0.36269 (4) obj. -66.873 iterations 1
Cbc0038I Solution found of -36.125
Cbc0038I Rounding solution of -54.25 is better than previous of -36.125

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 39 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -54.25 to -62.625 (0.02 seconds)
Cbc0038I Round again with cutoff of -68.8372
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.50280 (13) obj. -68.8372 iterations 5
Cbc0038I Pass   4: suminf.    0.47959 (5) obj. -68.8372 iterations 2
Cbc0038I Pass   5: suminf.    0.97416 (10) obj. -68.8372 iterations 10
Cbc0038I Pass   6: suminf.    0.51429 (2) obj. -75.25 iterations 15
Cbc0038I Pass   7: suminf.    0.82766 (2) obj. -68.8372 iterations 3
Cbc0038I Pass   8: suminf.    0.44921 (2) obj. -68.8372 iterations 2
Cbc0038I Pass   9: suminf.    0.34274 (1) obj. -68.8372 iterations 4
Cbc0038I Pass  10: suminf.    0.34274 (1) obj. -68.8372 iterations 0
Cbc0038I Pass  11: suminf.    0.96453 (4) obj. -68.8372 iterations 12
Cbc0038I Pass  12: suminf.    0.96453 (4) obj. -68.8372 iterations 1
Cbc0038I Pass  13: suminf.    0.52749 (2) obj. -68.8372 iterations 7
Cbc0038I Pass  14: suminf.    0.14286 (1) obj. -70.625 iterations 3
Cbc0038I Pass  15: suminf.    0.52749 (2) obj. -68.8372 iterations 4
Cbc0038I Pass  16: suminf.    1.50772 (5) obj. -68.8372 iterations 9
Cbc0038I Pass  17: suminf.    1.31978 (6) obj. -68.8372 iterations 3
Cbc0038I Pass  18: suminf.    0.72576 (5) obj. -68.8372 iterations 6
Cbc0038I Pass  19: suminf.    0.63293 (2) obj. -68.8372 iterations 4
Cbc0038I Pass  20: suminf.    0.69273 (2) obj. -68.8372 iterations 1
Cbc0038I Pass  21: suminf.    0.65890 (3) obj. -68.8372 iterations 9
Cbc0038I Pass  22: suminf.    0.34721 (2) obj. -68.8372 iterations 2
Cbc0038I Pass  23: suminf.    0.91342 (2) obj. -68.8372 iterations 1
Cbc0038I Pass  24: suminf.    0.50315 (3) obj. -70.2836 iterations 14
Cbc0038I Pass  25: suminf.    0.44958 (2) obj. -69.8015 iterations 1
Cbc0038I Pass  26: suminf.    0.75292 (7) obj. -68.8372 iterations 7
Cbc0038I Pass  27: suminf.    0.75292 (7) obj. -68.8372 iterations 0
Cbc0038I Pass  28: suminf.    1.39899 (5) obj. -68.8372 iterations 8
Cbc0038I Pass  29: suminf.    1.39899 (5) obj. -68.8372 iterations 3
Cbc0038I Pass  30: suminf.    1.26869 (5) obj. -68.8372 iterations 5
Cbc0038I Pass  31: suminf.    1.26869 (5) obj. -68.8372 iterations 2
Cbc0038I Pass  32: suminf.    1.98818 (8) obj. -68.8372 iterations 10
Cbc0038I Rounding solution of -68.5 is better than previous of -62.625

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 39 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -79.7943
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.28441 (13) obj. -79.7943 iterations 0
Cbc0038I Pass  33: suminf.    0.67463 (5) obj. -79.7943 iterations 2
Cbc0038I Pass  34: suminf.    0.41824 (4) obj. -84.6091 iterations 3
Cbc0038I Pass  35: suminf.    0.98107 (11) obj. -79.7943 iterations 5
Cbc0038I Pass  36: suminf.    0.98107 (11) obj. -79.7943 iterations 0
Cbc0038I Pass  37: suminf.    0.62817 (3) obj. -79.7943 iterations 17
Cbc0038I Pass  38: suminf.    0.92796 (2) obj. -79.7943 iterations 6
Cbc0038I Pass  39: suminf.    0.56796 (3) obj. -79.7943 iterations 3
Cbc0038I Pass  40: suminf.    2.88998 (14) obj. -79.7943 iterations 13
Cbc0038I Pass  41: suminf.    1.66485 (7) obj. -79.7943 iterations 4
Cbc0038I Pass  42: suminf.    0.89611 (3) obj. -79.7943 iterations 9
Cbc0038I Pass  43: suminf.    0.77748 (4) obj. -79.7943 iterations 2
Cbc0038I Pass  44: suminf.    0.89611 (3) obj. -79.7943 iterations 5
Cbc0038I Pass  45: suminf.    1.63873 (7) obj. -79.7943 iterations 11
Cbc0038I Pass  46: suminf.    1.63873 (7) obj. -79.7943 iterations 0
Cbc0038I Pass  47: suminf.    0.92530 (7) obj. -79.7943 iterations 8
Cbc0038I Pass  48: suminf.    0.92530 (7) obj. -79.7943 iterations 1
Cbc0038I Pass  49: suminf.    1.51589 (6) obj. -79.7943 iterations 6
Cbc0038I Pass  50: suminf.    1.08400 (6) obj. -79.7943 iterations 1
Cbc0038I Pass  51: suminf.    1.38337 (7) obj. -79.7943 iterations 6
Cbc0038I Pass  52: suminf.    1.38337 (7) obj. -79.7943 iterations 2
Cbc0038I Pass  53: suminf.    1.08400 (6) obj. -79.7943 iterations 8
Cbc0038I Pass  54: suminf.    1.10915 (6) obj. -79.7943 iterations 6
Cbc0038I Pass  55: suminf.    1.00865 (3) obj. -79.7943 iterations 8
Cbc0038I Pass  56: suminf.    1.00865 (3) obj. -79.7943 iterations 2
Cbc0038I Pass  57: suminf.    1.13787 (3) obj. -79.7943 iterations 3
Cbc0038I Pass  58: suminf.    1.13787 (3) obj. -79.7943 iterations 1
Cbc0038I Pass  59: suminf.    1.00865 (3) obj. -79.7943 iterations 3
Cbc0038I Pass  60: suminf.    2.73506 (12) obj. -79.7943 iterations 8
Cbc0038I Pass  61: suminf.    1.26856 (9) obj. -79.7943 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 39 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -68.5 - took 0.03 seconds
Cbc0012I Integer solution of -68.5 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 38 rows 39 columns, reduced to 17 rows 18 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 4
Cbc0013I At root node, 9 cuts changed objective from -123.62286 to -77.142045 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 2.2 elements, 16 column cuts (16 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 24 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -68.5, took 25 iterations and 0 nodes (0.05 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.05

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 37 (-10) rows, 20 (-4) columns and 107 (-22) elements
Clp1000I sum of infeasibilities 1.78509e-05 - average 4.82458e-07, 8 fixed columns
Coin0506I Presolve 17 (-20) rows, 10 (-10) columns and 48 (-59) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 125.69654
Clp0000I Optimal - objective value 125.69654
Coin0511I After Postsolve, objective 125.69654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 125.69654
Clp0000I Optimal - objective value 125.69654
Clp0000I Optimal - objective value 125.69654
Coin0511I After Postsolve, objective 125.69654, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 125.6965421 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 20 columns (19 integer (19 of which binary)) and 117 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.195%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 7 integers unsatisfied sum - 2.49009
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -68.5 iterations 5
Cbc0038I Solution found of -68.5
Cbc0038I Relaxing continuous gives -68.5
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 13 rows 8 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -73.3323
Cbc0038I Pass   2: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass   3: suminf.    0.30647 (2) obj. -73.3323 iterations 3
Cbc0038I Pass   4: suminf.    1.50407 (5) obj. -73.3323 iterations 3
Cbc0038I Pass   5: suminf.    1.39420 (4) obj. -73.3323 iterations 2
Cbc0038I Pass   6: suminf.    1.11820 (3) obj. -73.3323 iterations 5
Cbc0038I Pass   7: suminf.    0.47825 (3) obj. -73.3323 iterations 5
Cbc0038I Pass   8: suminf.    0.47825 (3) obj. -73.3323 iterations 2
Cbc0038I Pass   9: suminf.    0.80645 (6) obj. -73.3323 iterations 6
Cbc0038I Pass  10: suminf.    0.51133 (3) obj. -73.3323 iterations 2
Cbc0038I Pass  11: suminf.    0.30647 (2) obj. -73.3323 iterations 4
Cbc0038I Pass  12: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass  13: suminf.    0.26179 (3) obj. -73.3323 iterations 2
Cbc0038I Pass  14: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass  15: suminf.    2.04165 (6) obj. -73.3323 iterations 5
Cbc0038I Pass  16: suminf.    2.04165 (6) obj. -73.3323 iterations 1
Cbc0038I Pass  17: suminf.    0.30647 (2) obj. -73.3323 iterations 5
Cbc0038I Pass  18: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass  19: suminf.    1.15385 (3) obj. -73.3323 iterations 3
Cbc0038I Pass  20: suminf.    0.79987 (5) obj. -73.3323 iterations 3
Cbc0038I Pass  21: suminf.    1.33372 (3) obj. -73.3323 iterations 5
Cbc0038I Pass  22: suminf.    0.30647 (2) obj. -73.3323 iterations 5
Cbc0038I Pass  23: suminf.    0.30647 (2) obj. -73.3323 iterations 0
Cbc0038I Pass  24: suminf.    0.15071 (2) obj. -73.3323 iterations 1
Cbc0038I Pass  25: suminf.    0.59799 (4) obj. -73.3323 iterations 2
Cbc0038I Pass  26: suminf.    0.47825 (3) obj. -73.3323 iterations 2
Cbc0038I Pass  27: suminf.    0.98831 (4) obj. -73.3323 iterations 5
Cbc0038I Pass  28: suminf.    0.35328 (2) obj. -73.3323 iterations 5
Cbc0038I Pass  29: suminf.    1.11820 (3) obj. -73.3323 iterations 7
Cbc0038I Pass  30: suminf.    1.11820 (3) obj. -73.3323 iterations 1
Cbc0038I Pass  31: suminf.    0.30647 (2) obj. -73.3323 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 20 columns, reduced to 26 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -68.5 - took 0.01 seconds
Cbc0012I Integer solution of -68.5 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 37 rows 20 columns, reduced to 13 rows 8 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 4.5
Cbc0013I At root node, 4 cuts changed objective from -115.69859 to -71.819425 in 3 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 2.9 elements, 12 column cuts (12 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 6 row cuts average 7.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 7.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 15 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 18.8 elements, 0 column cuts (0 active)  in 0.017 seconds - new frequency is 1
Cbc0001I Search completed - best objective -68.5, took 27 iterations and 0 nodes (0.07 seconds)
Cbc0035I Maximum depth 0, 1 variables fixed on reduced cost
Total time (CPU seconds):       0.04   (Wallclock seconds):       0.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-9) rows, 39 (-6) columns and 272 (-89) elements
Clp1000I sum of infeasibilities 3.23735e-08 - average 8.51934e-10, 7 fixed columns
Coin0506I Presolve 31 (-7) rows, 31 (-8) columns and 188 (-84) elements
Clp0029I End of values pass after 31 iterations
Clp0000I Optimal - objective value 159.30865
Clp0000I Optimal - objective value 159.30865
Coin0511I After Postsolve, objective 159.30865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 3.2377156 - largest nonzero change 1.9363323e-05 ( 0.0012035115%) - largest zero change 2.9031261e-05
Clp0000I Optimal - objective value 159.30865
Clp0000I Optimal - objective value 159.30865
Clp0000I Optimal - objective value 159.30865
Coin0511I After Postsolve, objective 159.30865, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 159.3086462 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 23 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 8 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 39 columns (39 integer (39 of which binary)) and 284 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.536%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 20 integers unsatisfied sum - 4.16604
Cbc0038I Pass   1: suminf.    0.36269 (4) obj. -66.873 iterations 10
Cbc0038I Pass   2: suminf.    0.36269 (4) obj. -66.873 iterations 1
Cbc0038I Solution found of -36.125
Cbc0038I Rounding solution of -54.25 is better than previous of -36.125

Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 39 columns, reduced to 16 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -54.25 to -62.625 (0.02 seconds)
Cbc0038I Round again with cutoff of -68.8372
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    0.50280 (13) obj. -68.8372 iterations 5
Cbc0038I Pass   4: suminf.    0.47959 (5) obj. -68.8372 iterations 2
Cbc0038I Pass   5: suminf.    0.97416 (10) obj. -68.8372 iterations 10
Cbc0038I Pass   6: suminf.    0.51429 (2) obj. -75.25 iterations 15
Cbc0038I Pass   7: suminf.    0.82766 (2) obj. -68.8372 iterations 3
Cbc0038I Pass   8: suminf.    0.44921 (2) obj. -68.8372 iterations 2
Cbc0038I Pass   9: suminf.    0.34274 (1) obj. -68.8372 iterations 4
Cbc0038I Pass  10: suminf.    0.34274 (1) obj. -68.8372 iterations 0
Cbc0038I Pass  11: suminf.    0.96453 (4) obj. -68.8372 iterations 12
Cbc0038I Pass  12: suminf.    0.96453 (4) obj. -68.8372 iterations 1
Cbc0038I Pass  13: suminf.    0.52749 (2) obj. -68.8372 iterations 7
Cbc0038I Pass  14: suminf.    0.14286 (1) obj. -70.625 iterations 3
Cbc0038I Pass  15: suminf.    0.52749 (2) obj. -68.8372 iterations 4
Cbc0038I Pass  16: suminf.    1.50772 (5) obj. -68.8372 iterations 9
Cbc0038I Pass  17: suminf.    1.31978 (6) obj. -68.8372 iterations 3
Cbc0038I Pass  18: suminf.    0.72576 (5) obj. -68.8372 iterations 6
Cbc0038I Pass  19: suminf.    0.63293 (2) obj. -68.8372 iterations 4
Cbc0038I Pass  20: suminf.    0.69273 (2) obj. -68.8372 iterations 1
Cbc0038I Pass  21: suminf.    0.65890 (3) obj. -68.8372 iterations 9
Cbc0038I Pass  22: suminf.    0.34721 (2) obj. -68.8372 iterations 2
Cbc0038I Pass  23: suminf.    0.91342 (2) obj. -68.8372 iterations 1
Cbc0038I Pass  24: suminf.    0.50315 (3) obj. -70.2836 iterations 14
Cbc0038I Pass  25: suminf.    0.44958 (2) obj. -69.8015 iterations 1
Cbc0038I Pass  26: suminf.    0.75292 (7) obj. -68.8372 iterations 7
Cbc0038I Pass  27: suminf.    0.75292 (7) obj. -68.8372 iterations 0
Cbc0038I Pass  28: suminf.    1.39899 (5) obj. -68.8372 iterations 8
Cbc0038I Pass  29: suminf.    1.39899 (5) obj. -68.8372 iterations 3
Cbc0038I Pass  30: suminf.    1.26869 (5) obj. -68.8372 iterations 5
Cbc0038I Pass  31: suminf.    1.26869 (5) obj. -68.8372 iterations 2
Cbc0038I Pass  32: suminf.    1.98818 (8) obj. -68.8372 iterations 10
Cbc0038I Rounding solution of -68.5 is better than previous of -62.625

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 39 columns, reduced to 20 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -79.7943
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.28441 (13) obj. -79.7943 iterations 0
Cbc0038I Pass  33: suminf.    0.67463 (5) obj. -79.7943 iterations 2
Cbc0038I Pass  34: suminf.    0.41824 (4) obj. -84.6091 iterations 3
Cbc0038I Pass  35: suminf.    0.98107 (11) obj. -79.7943 iterations 5
Cbc0038I Pass  36: suminf.    0.98107 (11) obj. -79.7943 iterations 0
Cbc0038I Pass  37: suminf.    0.62817 (3) obj. -79.7943 iterations 17
Cbc0038I Pass  38: suminf.    0.92796 (2) obj. -79.7943 iterations 6
Cbc0038I Pass  39: suminf.    0.56796 (3) obj. -79.7943 iterations 3
Cbc0038I Pass  40: suminf.    2.88998 (14) obj. -79.7943 iterations 13
Cbc0038I Pass  41: suminf.    1.66485 (7) obj. -79.7943 iterations 4
Cbc0038I Pass  42: suminf.    0.89611 (3) obj. -79.7943 iterations 9
Cbc0038I Pass  43: suminf.    0.77748 (4) obj. -79.7943 iterations 2
Cbc0038I Pass  44: suminf.    0.89611 (3) obj. -79.7943 iterations 5
Cbc0038I Pass  45: suminf.    1.63873 (7) obj. -79.7943 iterations 11
Cbc0038I Pass  46: suminf.    1.63873 (7) obj. -79.7943 iterations 0
Cbc0038I Pass  47: suminf.    0.92530 (7) obj. -79.7943 iterations 8
Cbc0038I Pass  48: suminf.    0.92530 (7) obj. -79.7943 iterations 1
Cbc0038I Pass  49: suminf.    1.51589 (6) obj. -79.7943 iterations 6
Cbc0038I Pass  50: suminf.    1.08400 (6) obj. -79.7943 iterations 1
Cbc0038I Pass  51: suminf.    1.38337 (7) obj. -79.7943 iterations 6
Cbc0038I Pass  52: suminf.    1.38337 (7) obj. -79.7943 iterations 2
Cbc0038I Pass  53: suminf.    1.08400 (6) obj. -79.7943 iterations 8
Cbc0038I Pass  54: suminf.    1.10915 (6) obj. -79.7943 iterations 6
Cbc0038I Pass  55: suminf.    1.00865 (3) obj. -79.7943 iterations 8
Cbc0038I Pass  56: suminf.    1.00865 (3) obj. -79.7943 iterations 2
Cbc0038I Pass  57: suminf.    1.13787 (3) obj. -79.7943 iterations 3
Cbc0038I Pass  58: suminf.    1.13787 (3) obj. -79.7943 iterations 1
Cbc0038I Pass  59: suminf.    1.00865 (3) obj. -79.7943 iterations 3
Cbc0038I Pass  60: suminf.    2.73506 (12) obj. -79.7943 iterations 8
Cbc0038I Pass  61: suminf.    1.26856 (9) obj. -79.7943 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 39 columns, reduced to 20 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -68.5 - took 0.03 seconds
Cbc0012I Integer solution of -68.5 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 38 rows 39 columns, reduced to 17 rows 18 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 9 added rows had average density of 4
Cbc0013I At root node, 9 cuts changed objective from -123.62286 to -77.142045 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 41 row cuts average 2.2 elements, 16 column cuts (16 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 10 row cuts average 15.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 2.8 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 24 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 2 row cuts average 19.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -68.5, took 25 iterations and 0 nodes (0.06 seconds)
Cbc0035I Maximum depth 0, 3 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

