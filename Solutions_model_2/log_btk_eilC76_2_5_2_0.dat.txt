Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000140253 - average 1.04667e-06, 6 fixed columns
Coin0506I Presolve 124 (-10) rows, 69 (-6) columns and 379 (-31) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 31.884691
Clp0000I Optimal - objective value 31.884691
Coin0511I After Postsolve, objective 31.884691, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.884691
Clp0000I Optimal - objective value 31.884691
Clp0000I Optimal - objective value 31.884691
Coin0511I After Postsolve, objective 31.884691, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.88469092 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.5399
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.52784 iterations 67
Cbc0038I Solution found of 5.52784
Cbc0038I Relaxing continuous gives 5.52784
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 5.52784 to -5.72373 (0.03 seconds)
Cbc0038I Round again with cutoff of -8.33992
Cbc0038I Pass   2: suminf.    2.43425 (20) obj. -8.33992 iterations 35
Cbc0038I Pass   3: suminf.    1.93794 (49) obj. -8.33992 iterations 25
Cbc0038I Pass   4: suminf.    1.32299 (7) obj. -8.33992 iterations 49
Cbc0038I Pass   5: suminf.    0.82669 (6) obj. -8.33992 iterations 2
Cbc0038I Pass   6: suminf.    1.62635 (5) obj. -8.33992 iterations 20
Cbc0038I Pass   7: suminf.    1.49543 (6) obj. -8.33992 iterations 15
Cbc0038I Pass   8: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass   9: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  10: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  11: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I Pass  12: suminf.    1.49543 (6) obj. -8.33992 iterations 2
Cbc0038I Pass  13: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass  14: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  15: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  16: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I Pass  17: suminf.    1.49543 (6) obj. -8.33992 iterations 2
Cbc0038I Pass  18: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass  19: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  20: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  21: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I Pass  22: suminf.    1.49543 (6) obj. -8.33992 iterations 2
Cbc0038I Pass  23: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass  24: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  25: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  26: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I Pass  27: suminf.    1.49543 (6) obj. -8.33992 iterations 2
Cbc0038I Pass  28: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass  29: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  30: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  31: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 99 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.08 seconds)
Cbc0038I After 0.08 seconds - Feasibility pump exiting with objective of -5.72373 - took 0.09 seconds
Cbc0012I Integer solution of -5.72373 found by feasibility pump after 0 iterations and 0 nodes (0.08 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 74 rows 43 columns
Cbc0031I 30 added rows had average density of 46.9
Cbc0013I At root node, 30 cuts changed objective from -31.884691 to -23.024677 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14511 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.087 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1957 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.091 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.008 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.083 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.72373 best solution, best possible -23.024677 (1.05 seconds)
Cbc0001I Search completed - best objective -5.723730000000003, took 12177 iterations and 36 nodes (1.29 seconds)
Cbc0032I Strong branching done 608 times (12668 iterations), fathomed 8 nodes and fixed 36 variables
Cbc0035I Maximum depth 10, 108 variables fixed on reduced cost
Total time (CPU seconds):       1.29   (Wallclock seconds):       1.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-51) rows, 117 (-35) columns and 1863 (-1440) elements
Clp1000I sum of infeasibilities 3.13351e-06 - average 3.04225e-08, 27 fixed columns
Coin0506I Presolve 77 (-26) rows, 89 (-28) columns and 1086 (-777) elements
Clp0006I 0  Obj 39.202747 Dual inf 3.1602592 (88)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.9242709 - largest nonzero change 1.6693448e-05 ( 0.00091204228%) - largest zero change 2.987386e-05
Clp0000I Optimal - objective value 48.02529
Clp0000I Optimal - objective value 48.02529
Coin0511I After Postsolve, objective 48.02529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.02529
Clp0000I Optimal - objective value 48.02529
Clp0000I Optimal - objective value 48.02529
Clp0000I Optimal - objective value 48.02529
Coin0511I After Postsolve, objective 48.02529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.02529017 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 117 columns (117 integer (117 of which binary)) and 1865 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.303%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.36568
Cbc0038I Pass   1: suminf.    2.95654 (28) obj. -37.5997 iterations 12
Cbc0038I Pass   2: suminf.    0.05000 (1) obj. -1.21279 iterations 27
Cbc0038I Solution found of -0.262785
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -4.09953
Cbc0038I Pass   3: suminf.    2.95654 (28) obj. -37.5997 iterations 0
Cbc0038I Pass   4: suminf.    0.43094 (2) obj. -4.09953 iterations 29
Cbc0038I Pass   5: suminf.    0.13699 (1) obj. -5.44087 iterations 2
Cbc0038I Pass   6: suminf.    1.14368 (9) obj. -5.13089 iterations 27
Cbc0038I Pass   7: suminf.    0.95541 (10) obj. -4.09953 iterations 10
Cbc0038I Pass   8: suminf.    0.49385 (3) obj. -4.09953 iterations 12
Cbc0038I Pass   9: suminf.    0.13699 (1) obj. -4.44087 iterations 2
Cbc0038I Pass  10: suminf.    0.26427 (2) obj. -4.09953 iterations 2
Cbc0038I Pass  11: suminf.    1.80428 (11) obj. -4.09953 iterations 37
Cbc0038I Pass  12: suminf.    1.80428 (11) obj. -4.09953 iterations 3
Cbc0038I Pass  13: suminf.    0.77888 (10) obj. -4.09953 iterations 18
Cbc0038I Pass  14: suminf.    0.64259 (5) obj. -4.2806 iterations 2
Cbc0038I Pass  15: suminf.    1.05004 (4) obj. -4.09953 iterations 8
Cbc0038I Pass  16: suminf.    0.58211 (5) obj. -4.09953 iterations 3
Cbc0038I Pass  17: suminf.    0.85972 (5) obj. -4.09953 iterations 11
Cbc0038I Pass  18: suminf.    0.85972 (5) obj. -4.09953 iterations 0
Cbc0038I Pass  19: suminf.    0.91712 (5) obj. -4.09953 iterations 7
Cbc0038I Pass  20: suminf.    0.47380 (4) obj. -5.26411 iterations 5
Cbc0038I Pass  21: suminf.    0.80226 (4) obj. -4.09953 iterations 12
Cbc0038I Pass  22: suminf.    0.65234 (4) obj. -4.09953 iterations 9
Cbc0038I Pass  23: suminf.    1.38291 (9) obj. -4.09953 iterations 18
Cbc0038I Pass  24: suminf.    1.22753 (7) obj. -4.77849 iterations 5
Cbc0038I Pass  25: suminf.    1.08510 (5) obj. -4.09953 iterations 18
Cbc0038I Pass  26: suminf.    0.70487 (5) obj. -4.09953 iterations 3
Cbc0038I Pass  27: suminf.    0.92747 (4) obj. -4.09953 iterations 10
Cbc0038I Pass  28: suminf.    0.70534 (6) obj. -4.09953 iterations 8
Cbc0038I Pass  29: suminf.    0.62868 (5) obj. -4.09953 iterations 13
Cbc0038I Pass  30: suminf.    0.62009 (6) obj. -4.09953 iterations 2
Cbc0038I Pass  31: suminf.    1.07107 (5) obj. -4.09953 iterations 10
Cbc0038I Pass  32: suminf.    1.00702 (5) obj. -4.09953 iterations 5
Cbc0038I Rounding solution of -1.3212 is better than previous of -0.262785

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 23 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -1.3212 to -4.85581 (0.05 seconds)
Cbc0038I Round again with cutoff of -11.6106
Cbc0038I Pass  32: suminf.    2.95654 (28) obj. -37.5997 iterations 0
Cbc0038I Pass  33: suminf.    0.80839 (12) obj. -11.6106 iterations 19
Cbc0038I Pass  34: suminf.    0.69759 (6) obj. -11.6106 iterations 23
Cbc0038I Pass  35: suminf.    0.61097 (6) obj. -11.6106 iterations 3
Cbc0038I Pass  36: suminf.    1.08294 (6) obj. -11.6106 iterations 10
Cbc0038I Pass  37: suminf.    1.08294 (6) obj. -11.6106 iterations 9
Cbc0038I Pass  38: suminf.    1.09724 (6) obj. -11.6106 iterations 8
Cbc0038I Pass  39: suminf.    1.09724 (6) obj. -11.6106 iterations 7
Cbc0038I Pass  40: suminf.    1.08294 (6) obj. -11.6106 iterations 8
Cbc0038I Pass  41: suminf.    1.83528 (11) obj. -11.6106 iterations 25
Cbc0038I Pass  42: suminf.    1.19105 (9) obj. -11.6106 iterations 7
Cbc0038I Pass  43: suminf.    0.82747 (9) obj. -12.3378 iterations 4
Cbc0038I Pass  44: suminf.    0.77882 (8) obj. -11.6106 iterations 17
Cbc0038I Pass  45: suminf.    0.77882 (8) obj. -11.6106 iterations 1
Cbc0038I Pass  46: suminf.    0.78507 (8) obj. -11.6106 iterations 3
Cbc0038I Pass  47: suminf.    0.78507 (8) obj. -11.6106 iterations 1
Cbc0038I Pass  48: suminf.    0.77882 (8) obj. -11.6106 iterations 3
Cbc0038I Pass  49: suminf.    2.65113 (15) obj. -11.6106 iterations 12
Cbc0038I Pass  50: suminf.    1.07206 (13) obj. -11.6106 iterations 5
Cbc0038I Pass  51: suminf.    1.05224 (14) obj. -11.6106 iterations 3
Cbc0038I Pass  52: suminf.    1.13466 (9) obj. -11.6106 iterations 21
Cbc0038I Pass  53: suminf.    1.04960 (9) obj. -11.6106 iterations 12
Cbc0038I Pass  54: suminf.    1.58891 (10) obj. -11.6106 iterations 8
Cbc0038I Pass  55: suminf.    0.74893 (14) obj. -11.6106 iterations 13
Cbc0038I Pass  56: suminf.    1.43107 (9) obj. -11.6106 iterations 18
Cbc0038I Pass  57: suminf.    1.22679 (11) obj. -11.6106 iterations 5
Cbc0038I Pass  58: suminf.    1.55412 (10) obj. -11.6106 iterations 13
Cbc0038I Pass  59: suminf.    1.07380 (11) obj. -11.6106 iterations 4
Cbc0038I Pass  60: suminf.    1.55412 (10) obj. -11.6106 iterations 3
Cbc0038I Pass  61: suminf.    1.52814 (16) obj. -11.6106 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 16 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -4.85581 to -5.01182 (0.07 seconds)
Cbc0038I Round again with cutoff of -19.7162
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.95654 (28) obj. -37.5997 iterations 0
Cbc0038I Pass  62: suminf.    1.66235 (18) obj. -21.0876 iterations 10
Cbc0038I Pass  63: suminf.    1.42251 (16) obj. -19.7162 iterations 28
Cbc0038I Pass  64: suminf.    1.42251 (16) obj. -19.7162 iterations 1
Cbc0038I Pass  65: suminf.    2.08171 (10) obj. -19.7162 iterations 13
Cbc0038I Pass  66: suminf.    2.08171 (10) obj. -19.7162 iterations 8
Cbc0038I Pass  67: suminf.    2.09041 (10) obj. -19.7162 iterations 7
Cbc0038I Pass  68: suminf.    2.09041 (10) obj. -19.7162 iterations 5
Cbc0038I Pass  69: suminf.    2.08171 (10) obj. -19.7162 iterations 7
Cbc0038I Pass  70: suminf.    2.43656 (13) obj. -19.7162 iterations 9
Cbc0038I Pass  71: suminf.    1.99531 (15) obj. -19.7162 iterations 6
Cbc0038I Pass  72: suminf.    2.50843 (15) obj. -19.7162 iterations 11
Cbc0038I Pass  73: suminf.    2.47828 (14) obj. -19.7162 iterations 5
Cbc0038I Pass  74: suminf.    2.21860 (13) obj. -19.7162 iterations 12
Cbc0038I Pass  75: suminf.    2.23576 (14) obj. -19.7162 iterations 5
Cbc0038I Pass  76: suminf.    2.30490 (14) obj. -19.7162 iterations 7
Cbc0038I Pass  77: suminf.    2.30490 (14) obj. -19.7162 iterations 5
Cbc0038I Pass  78: suminf.    2.23576 (14) obj. -19.7162 iterations 9
Cbc0038I Pass  79: suminf.    2.04087 (15) obj. -19.7162 iterations 20
Cbc0038I Pass  80: suminf.    1.95516 (16) obj. -19.7162 iterations 5
Cbc0038I Pass  81: suminf.    1.66933 (14) obj. -19.7162 iterations 7
Cbc0038I Pass  82: suminf.    1.44664 (15) obj. -19.7162 iterations 5
Cbc0038I Pass  83: suminf.    2.02585 (13) obj. -19.7162 iterations 10
Cbc0038I Pass  84: suminf.    2.02585 (13) obj. -19.7162 iterations 2
Cbc0038I Pass  85: suminf.    2.30944 (14) obj. -19.7162 iterations 9
Cbc0038I Pass  86: suminf.    1.77114 (13) obj. -19.7162 iterations 8
Cbc0038I Pass  87: suminf.    1.59485 (13) obj. -19.7162 iterations 4
Cbc0038I Pass  88: suminf.    2.02585 (13) obj. -19.7162 iterations 8
Cbc0038I Pass  89: suminf.    2.02585 (13) obj. -19.7162 iterations 1
Cbc0038I Pass  90: suminf.    2.30944 (14) obj. -19.7162 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -5.01182 - took 0.10 seconds
Cbc0012I Integer solution of -5.011815 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 103 rows 117 columns, reduced to 7 rows 8 columns
Cbc0031I 54 added rows had average density of 34.555556
Cbc0013I At root node, 54 cuts changed objective from -38.629354 to -9.7133636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13193 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.157 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1780 row cuts average 107.4 elements, 0 column cuts (0 active)  in 0.136 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 574 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.065 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1072 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.089 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 301 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.036 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 162 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.627 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.011815 best solution, best possible -9.7133636 (2.55 seconds)
Cbc0010I After 7 nodes, 6 on tree, -5.011815 best solution, best possible -9.7133636 (3.26 seconds)
Cbc0012I Integer solution of -5.72373 found by DiveCoefficient after 5701 iterations and 10 nodes (3.35 seconds)
Cbc0001I Search completed - best objective -5.723730000000003, took 6227 iterations and 20 nodes (3.48 seconds)
Cbc0032I Strong branching done 370 times (7157 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 57 variables fixed on reduced cost
Total time (CPU seconds):       2.45   (Wallclock seconds):       3.50

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 134 (-21) rows, 75 (-3) columns and 410 (-43) elements
Clp1000I sum of infeasibilities 0.000140253 - average 1.04667e-06, 6 fixed columns
Coin0506I Presolve 124 (-10) rows, 69 (-6) columns and 379 (-31) elements
Clp0029I End of values pass after 69 iterations
Clp0000I Optimal - objective value 31.884691
Clp0000I Optimal - objective value 31.884691
Coin0511I After Postsolve, objective 31.884691, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 31.884691
Clp0000I Optimal - objective value 31.884691
Clp0000I Optimal - objective value 31.884691
Coin0511I After Postsolve, objective 31.884691, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 31.88469092 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 134 rows, 75 columns (74 integer (74 of which binary)) and 410 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.166%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 42 integers unsatisfied sum - 9.5399
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 5.52784 iterations 67
Cbc0038I Solution found of 5.52784
Cbc0038I Relaxing continuous gives 5.52784
Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 74 rows 43 columns
Cbc0038I Mini branch and bound improved solution from 5.52784 to -5.72373 (0.04 seconds)
Cbc0038I Round again with cutoff of -8.33992
Cbc0038I Pass   2: suminf.    2.43425 (20) obj. -8.33992 iterations 35
Cbc0038I Pass   3: suminf.    1.93794 (49) obj. -8.33992 iterations 25
Cbc0038I Pass   4: suminf.    1.32299 (7) obj. -8.33992 iterations 49
Cbc0038I Pass   5: suminf.    0.82669 (6) obj. -8.33992 iterations 2
Cbc0038I Pass   6: suminf.    1.62635 (5) obj. -8.33992 iterations 20
Cbc0038I Pass   7: suminf.    1.49543 (6) obj. -8.33992 iterations 15
Cbc0038I Pass   8: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass   9: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  10: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  11: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I Pass  12: suminf.    1.49543 (6) obj. -8.33992 iterations 2
Cbc0038I Pass  13: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass  14: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  15: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  16: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I Pass  17: suminf.    1.49543 (6) obj. -8.33992 iterations 2
Cbc0038I Pass  18: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass  19: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  20: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  21: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I Pass  22: suminf.    1.49543 (6) obj. -8.33992 iterations 2
Cbc0038I Pass  23: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass  24: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  25: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  26: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I Pass  27: suminf.    1.49543 (6) obj. -8.33992 iterations 2
Cbc0038I Pass  28: suminf.    1.49543 (6) obj. -8.33992 iterations 0
Cbc0038I Pass  29: suminf.    1.85665 (5) obj. -8.33992 iterations 13
Cbc0038I Pass  30: suminf.    1.85665 (5) obj. -8.33992 iterations 0
Cbc0038I Pass  31: suminf.    2.12021 (6) obj. -8.33992 iterations 6
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 134 rows 75 columns, reduced to 99 rows 56 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -5.72373 - took 0.08 seconds
Cbc0012I Integer solution of -5.72373 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 134 rows 75 columns, reduced to 74 rows 43 columns
Cbc0031I 30 added rows had average density of 46.9
Cbc0013I At root node, 30 cuts changed objective from -31.884691 to -23.024677 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14511 row cuts average 3.3 elements, 1 column cuts (1 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1957 row cuts average 74.9 elements, 0 column cuts (0 active)  in 0.097 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.088 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 74.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.72373 best solution, best possible -23.024677 (1.15 seconds)
Cbc0001I Search completed - best objective -5.723730000000003, took 12177 iterations and 36 nodes (1.43 seconds)
Cbc0032I Strong branching done 608 times (12668 iterations), fathomed 8 nodes and fixed 36 variables
Cbc0035I Maximum depth 10, 108 variables fixed on reduced cost
Total time (CPU seconds):       1.39   (Wallclock seconds):       1.45

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 103 (-52) rows, 117 (-36) columns and 1863 (-1441) elements
Clp1000I sum of infeasibilities 3.13351e-06 - average 3.04225e-08, 27 fixed columns
Coin0506I Presolve 77 (-26) rows, 89 (-28) columns and 1086 (-777) elements
Clp0006I 0  Obj 39.202747 Dual inf 3.1602592 (88)
Clp0029I End of values pass after 89 iterations
Clp0014I Perturbing problem by 0.001% of 1.9242709 - largest nonzero change 1.6693448e-05 ( 0.00091204228%) - largest zero change 2.987386e-05
Clp0000I Optimal - objective value 48.02529
Clp0000I Optimal - objective value 48.02529
Coin0511I After Postsolve, objective 48.02529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 48.02529
Clp0000I Optimal - objective value 48.02529
Clp0000I Optimal - objective value 48.02529
Clp0000I Optimal - objective value 48.02529
Coin0511I After Postsolve, objective 48.02529, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.02529017 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 103 rows, 117 columns (117 integer (117 of which binary)) and 1865 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.303%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 30 integers unsatisfied sum - 3.36568
Cbc0038I Pass   1: suminf.    2.95654 (28) obj. -37.5997 iterations 12
Cbc0038I Pass   2: suminf.    0.05000 (1) obj. -1.21279 iterations 27
Cbc0038I Solution found of -0.262785
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -4.09953
Cbc0038I Pass   3: suminf.    2.95654 (28) obj. -37.5997 iterations 0
Cbc0038I Pass   4: suminf.    0.43094 (2) obj. -4.09953 iterations 29
Cbc0038I Pass   5: suminf.    0.13699 (1) obj. -5.44087 iterations 2
Cbc0038I Pass   6: suminf.    1.14368 (9) obj. -5.13089 iterations 27
Cbc0038I Pass   7: suminf.    0.95541 (10) obj. -4.09953 iterations 10
Cbc0038I Pass   8: suminf.    0.49385 (3) obj. -4.09953 iterations 12
Cbc0038I Pass   9: suminf.    0.13699 (1) obj. -4.44087 iterations 2
Cbc0038I Pass  10: suminf.    0.26427 (2) obj. -4.09953 iterations 2
Cbc0038I Pass  11: suminf.    1.80428 (11) obj. -4.09953 iterations 37
Cbc0038I Pass  12: suminf.    1.80428 (11) obj. -4.09953 iterations 3
Cbc0038I Pass  13: suminf.    0.77888 (10) obj. -4.09953 iterations 18
Cbc0038I Pass  14: suminf.    0.64259 (5) obj. -4.2806 iterations 2
Cbc0038I Pass  15: suminf.    1.05004 (4) obj. -4.09953 iterations 8
Cbc0038I Pass  16: suminf.    0.58211 (5) obj. -4.09953 iterations 3
Cbc0038I Pass  17: suminf.    0.85972 (5) obj. -4.09953 iterations 11
Cbc0038I Pass  18: suminf.    0.85972 (5) obj. -4.09953 iterations 0
Cbc0038I Pass  19: suminf.    0.91712 (5) obj. -4.09953 iterations 7
Cbc0038I Pass  20: suminf.    0.47380 (4) obj. -5.26411 iterations 5
Cbc0038I Pass  21: suminf.    0.80226 (4) obj. -4.09953 iterations 12
Cbc0038I Pass  22: suminf.    0.65234 (4) obj. -4.09953 iterations 9
Cbc0038I Pass  23: suminf.    1.38291 (9) obj. -4.09953 iterations 18
Cbc0038I Pass  24: suminf.    1.22753 (7) obj. -4.77849 iterations 5
Cbc0038I Pass  25: suminf.    1.08510 (5) obj. -4.09953 iterations 18
Cbc0038I Pass  26: suminf.    0.70487 (5) obj. -4.09953 iterations 3
Cbc0038I Pass  27: suminf.    0.92747 (4) obj. -4.09953 iterations 10
Cbc0038I Pass  28: suminf.    0.70534 (6) obj. -4.09953 iterations 8
Cbc0038I Pass  29: suminf.    0.62868 (5) obj. -4.09953 iterations 13
Cbc0038I Pass  30: suminf.    0.62009 (6) obj. -4.09953 iterations 2
Cbc0038I Pass  31: suminf.    1.07107 (5) obj. -4.09953 iterations 10
Cbc0038I Pass  32: suminf.    1.00702 (5) obj. -4.09953 iterations 5
Cbc0038I Rounding solution of -1.3212 is better than previous of -0.262785

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 23 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -1.3212 to -4.85581 (0.06 seconds)
Cbc0038I Round again with cutoff of -11.6106
Cbc0038I Pass  32: suminf.    2.95654 (28) obj. -37.5997 iterations 0
Cbc0038I Pass  33: suminf.    0.80839 (12) obj. -11.6106 iterations 19
Cbc0038I Pass  34: suminf.    0.69759 (6) obj. -11.6106 iterations 23
Cbc0038I Pass  35: suminf.    0.61097 (6) obj. -11.6106 iterations 3
Cbc0038I Pass  36: suminf.    1.08294 (6) obj. -11.6106 iterations 10
Cbc0038I Pass  37: suminf.    1.08294 (6) obj. -11.6106 iterations 9
Cbc0038I Pass  38: suminf.    1.09724 (6) obj. -11.6106 iterations 8
Cbc0038I Pass  39: suminf.    1.09724 (6) obj. -11.6106 iterations 7
Cbc0038I Pass  40: suminf.    1.08294 (6) obj. -11.6106 iterations 8
Cbc0038I Pass  41: suminf.    1.83528 (11) obj. -11.6106 iterations 25
Cbc0038I Pass  42: suminf.    1.19105 (9) obj. -11.6106 iterations 7
Cbc0038I Pass  43: suminf.    0.82747 (9) obj. -12.3378 iterations 4
Cbc0038I Pass  44: suminf.    0.77882 (8) obj. -11.6106 iterations 17
Cbc0038I Pass  45: suminf.    0.77882 (8) obj. -11.6106 iterations 1
Cbc0038I Pass  46: suminf.    0.78507 (8) obj. -11.6106 iterations 3
Cbc0038I Pass  47: suminf.    0.78507 (8) obj. -11.6106 iterations 1
Cbc0038I Pass  48: suminf.    0.77882 (8) obj. -11.6106 iterations 3
Cbc0038I Pass  49: suminf.    2.65113 (15) obj. -11.6106 iterations 12
Cbc0038I Pass  50: suminf.    1.07206 (13) obj. -11.6106 iterations 5
Cbc0038I Pass  51: suminf.    1.05224 (14) obj. -11.6106 iterations 3
Cbc0038I Pass  52: suminf.    1.13466 (9) obj. -11.6106 iterations 21
Cbc0038I Pass  53: suminf.    1.04960 (9) obj. -11.6106 iterations 12
Cbc0038I Pass  54: suminf.    1.58891 (10) obj. -11.6106 iterations 8
Cbc0038I Pass  55: suminf.    0.74893 (14) obj. -11.6106 iterations 13
Cbc0038I Pass  56: suminf.    1.43107 (9) obj. -11.6106 iterations 18
Cbc0038I Pass  57: suminf.    1.22679 (11) obj. -11.6106 iterations 5
Cbc0038I Pass  58: suminf.    1.55412 (10) obj. -11.6106 iterations 13
Cbc0038I Pass  59: suminf.    1.07380 (11) obj. -11.6106 iterations 4
Cbc0038I Pass  60: suminf.    1.55412 (10) obj. -11.6106 iterations 3
Cbc0038I Pass  61: suminf.    1.52814 (16) obj. -11.6106 iterations 30
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 103 rows 117 columns, reduced to 16 rows 22 columns
Cbc0038I Mini branch and bound improved solution from -4.85581 to -5.01182 (0.09 seconds)
Cbc0038I Round again with cutoff of -19.7162
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.95654 (28) obj. -37.5997 iterations 0
Cbc0038I Pass  62: suminf.    1.66235 (18) obj. -21.0876 iterations 10
Cbc0038I Pass  63: suminf.    1.42251 (16) obj. -19.7162 iterations 28
Cbc0038I Pass  64: suminf.    1.42251 (16) obj. -19.7162 iterations 1
Cbc0038I Pass  65: suminf.    2.08171 (10) obj. -19.7162 iterations 13
Cbc0038I Pass  66: suminf.    2.08171 (10) obj. -19.7162 iterations 8
Cbc0038I Pass  67: suminf.    2.09041 (10) obj. -19.7162 iterations 7
Cbc0038I Pass  68: suminf.    2.09041 (10) obj. -19.7162 iterations 5
Cbc0038I Pass  69: suminf.    2.08171 (10) obj. -19.7162 iterations 7
Cbc0038I Pass  70: suminf.    2.43656 (13) obj. -19.7162 iterations 9
Cbc0038I Pass  71: suminf.    1.99531 (15) obj. -19.7162 iterations 6
Cbc0038I Pass  72: suminf.    2.50843 (15) obj. -19.7162 iterations 11
Cbc0038I Pass  73: suminf.    2.47828 (14) obj. -19.7162 iterations 5
Cbc0038I Pass  74: suminf.    2.21860 (13) obj. -19.7162 iterations 12
Cbc0038I Pass  75: suminf.    2.23576 (14) obj. -19.7162 iterations 5
Cbc0038I Pass  76: suminf.    2.30490 (14) obj. -19.7162 iterations 7
Cbc0038I Pass  77: suminf.    2.30490 (14) obj. -19.7162 iterations 5
Cbc0038I Pass  78: suminf.    2.23576 (14) obj. -19.7162 iterations 9
Cbc0038I Pass  79: suminf.    2.04087 (15) obj. -19.7162 iterations 20
Cbc0038I Pass  80: suminf.    1.95516 (16) obj. -19.7162 iterations 5
Cbc0038I Pass  81: suminf.    1.66933 (14) obj. -19.7162 iterations 7
Cbc0038I Pass  82: suminf.    1.44664 (15) obj. -19.7162 iterations 5
Cbc0038I Pass  83: suminf.    2.02585 (13) obj. -19.7162 iterations 10
Cbc0038I Pass  84: suminf.    2.02585 (13) obj. -19.7162 iterations 2
Cbc0038I Pass  85: suminf.    2.30944 (14) obj. -19.7162 iterations 9
Cbc0038I Pass  86: suminf.    1.77114 (13) obj. -19.7162 iterations 8
Cbc0038I Pass  87: suminf.    1.59485 (13) obj. -19.7162 iterations 4
Cbc0038I Pass  88: suminf.    2.02585 (13) obj. -19.7162 iterations 8
Cbc0038I Pass  89: suminf.    2.02585 (13) obj. -19.7162 iterations 1
Cbc0038I Pass  90: suminf.    2.30944 (14) obj. -19.7162 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -5.01182 - took 0.12 seconds
Cbc0012I Integer solution of -5.011815 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 103 rows 117 columns, reduced to 7 rows 8 columns
Cbc0031I 54 added rows had average density of 34.555556
Cbc0013I At root node, 54 cuts changed objective from -38.629354 to -9.7133636 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13193 row cuts average 8.1 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1780 row cuts average 107.4 elements, 0 column cuts (0 active)  in 0.168 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 574 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1072 row cuts average 9.0 elements, 0 column cuts (0 active)  in 0.105 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 301 row cuts average 66.3 elements, 0 column cuts (0 active)  in 0.040 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 162 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.703 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -5.011815 best solution, best possible -9.7133636 (3.07 seconds)
Cbc0010I After 6 nodes, 5 on tree, -5.011815 best solution, best possible -9.7133636 (3.77 seconds)
Cbc0012I Integer solution of -5.72373 found by DiveCoefficient after 5701 iterations and 10 nodes (3.98 seconds)
Cbc0001I Search completed - best objective -5.723730000000003, took 6227 iterations and 20 nodes (4.18 seconds)
Cbc0032I Strong branching done 370 times (7157 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 9, 57 variables fixed on reduced cost
Total time (CPU seconds):       2.85   (Wallclock seconds):       4.20

