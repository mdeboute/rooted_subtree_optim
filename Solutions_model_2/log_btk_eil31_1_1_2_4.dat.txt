Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 29 (-4) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 3.91376e-05 - average 7.98727e-07, 7 fixed columns
Coin0506I Presolve 35 (-14) rows, 22 (-7) columns and 106 (-42) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.1469505 - largest nonzero change 0 ( 0%) - largest zero change 1.8775915e-05
Clp0000I Optimal - objective value 172.30223
Clp0000I Optimal - objective value 172.30223
Coin0511I After Postsolve, objective 172.30223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 172.30223
Clp0000I Optimal - objective value 172.30223
Clp0000I Optimal - objective value 172.30223
Coin0511I After Postsolve, objective 172.30223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 172.3022321 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 29 columns (28 integer (28 of which binary)) and 156 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.851%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.82169
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -94.8787 iterations 12
Cbc0038I Solution found of -94.8787
Cbc0038I Relaxing continuous gives -94.8787
Cbc0038I Rounding solution of -94.8962 is better than previous of -94.8787

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 17 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -94.8962 to -135.623 (0.01 seconds)
Cbc0038I Round again with cutoff of -138.615
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.74902 (3) obj. -138.615 iterations 4
Cbc0038I Pass   3: suminf.    0.11585 (2) obj. -138.615 iterations 1
Cbc0038I Pass   4: suminf.    0.57128 (2) obj. -138.615 iterations 5
Cbc0038I Pass   5: suminf.    0.42574 (2) obj. -138.615 iterations 1
Cbc0038I Pass   6: suminf.    0.62661 (2) obj. -138.615 iterations 2
Cbc0038I Pass   7: suminf.    0.62661 (2) obj. -138.615 iterations 1
Cbc0038I Pass   8: suminf.    1.14501 (4) obj. -138.615 iterations 4
Cbc0038I Pass   9: suminf.    0.58596 (4) obj. -138.615 iterations 3
Cbc0038I Pass  10: suminf.    1.18031 (4) obj. -138.615 iterations 10
Cbc0038I Pass  11: suminf.    0.63905 (3) obj. -138.615 iterations 2
Cbc0038I Pass  12: suminf.    0.36634 (2) obj. -142.144 iterations 4
Cbc0038I Pass  13: suminf.    0.62887 (3) obj. -138.615 iterations 7
Cbc0038I Pass  14: suminf.    0.62887 (3) obj. -138.615 iterations 1
Cbc0038I Pass  15: suminf.    0.70134 (2) obj. -138.615 iterations 4
Cbc0038I Pass  16: suminf.    0.70134 (2) obj. -138.615 iterations 0
Cbc0038I Pass  17: suminf.    0.68647 (2) obj. -138.615 iterations 2
Cbc0038I Pass  18: suminf.    0.65951 (2) obj. -138.615 iterations 1
Cbc0038I Pass  19: suminf.    0.48086 (2) obj. -138.615 iterations 6
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -138.615 iterations 4
Cbc0038I Pass  21: suminf.    0.56955 (2) obj. -138.615 iterations 3
Cbc0038I Pass  22: suminf.    0.34802 (2) obj. -138.615 iterations 12
Cbc0038I Pass  23: suminf.    0.34409 (2) obj. -138.615 iterations 1
Cbc0038I Pass  24: suminf.    0.35644 (2) obj. -138.615 iterations 2
Cbc0038I Pass  25: suminf.    0.64648 (5) obj. -138.615 iterations 11
Cbc0038I Pass  26: suminf.    0.31328 (4) obj. -138.615 iterations 3
Cbc0038I Pass  27: suminf.    0.78035 (3) obj. -138.615 iterations 7
Cbc0038I Pass  28: suminf.    0.76587 (3) obj. -138.615 iterations 1
Cbc0038I Pass  29: suminf.    0.44806 (3) obj. -138.615 iterations 3
Cbc0038I Pass  30: suminf.    0.44806 (3) obj. -138.615 iterations 1
Cbc0038I Pass  31: suminf.    1.67789 (5) obj. -138.615 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -135.623 - took 0.03 seconds
Cbc0012I Integer solution of -135.62269 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 47 rows 29 columns, reduced to 17 rows 10 columns
Cbc0031I 6 added rows had average density of 24.333333
Cbc0013I At root node, 6 cuts changed objective from -165.54677 to -149.28694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 312 row cuts average 6.1 elements, 2 column cuts (2 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 488 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 170 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0012I Integer solution of -138.62449 found by DiveCoefficient after 1224 iterations and 3 nodes (0.13 seconds)
Cbc0001I Search completed - best objective -138.624494, took 1881 iterations and 22 nodes (0.18 seconds)
Cbc0032I Strong branching done 160 times (884 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 5, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 40 (-23) rows, 48 (-14) columns and 432 (-214) elements
Clp1000I sum of infeasibilities 4.20119e-08 - average 1.0503e-09, 27 fixed columns
Coin0506I Presolve 16 (-24) rows, 21 (-27) columns and 68 (-364) elements
Clp0029I End of values pass after 21 iterations
Clp0000I Optimal - objective value 158.61486
Clp0000I Optimal - objective value 158.61486
Coin0511I After Postsolve, objective 158.61486, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.2457779 - largest nonzero change 0 ( 0%) - largest zero change 2.9665939e-05
Clp0000I Optimal - objective value 183.46051
Clp0000I Optimal - objective value 183.46051
Clp0000I Optimal - objective value 183.46051
Coin0511I After Postsolve, objective 183.46051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 183.4605147 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 1 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 6 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 48 columns (48 integer (48 of which binary)) and 436 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.278%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 4.47014
Cbc0038I Pass   1: suminf.    0.42289 (5) obj. -106.434 iterations 16
Cbc0038I Pass   2: suminf.    0.42289 (5) obj. -106.434 iterations 0
Cbc0038I Solution found of -98.238
Cbc0038I Rounding solution of -123.917 is better than previous of -98.238

Cbc0038I Before mini branch and bound, 31 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 48 columns, reduced to 0 rows 0 columns
Cbc0038I Mini branch and bound improved solution from -123.917 to -135.623 (0.02 seconds)
Cbc0038I Round again with cutoff of -138.849
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.72661 (11) obj. -138.849 iterations 2
Cbc0038I Pass   4: suminf.    0.83076 (3) obj. -138.849 iterations 14
Cbc0038I Pass   5: suminf.    0.26733 (2) obj. -153.169 iterations 3
Cbc0038I Pass   6: suminf.    0.04191 (1) obj. -138.849 iterations 2
Cbc0038I Pass   7: suminf.    0.13333 (1) obj. -145.885 iterations 1
Cbc0038I Pass   8: suminf.    1.71313 (5) obj. -138.849 iterations 11
Cbc0038I Pass   9: suminf.    0.82562 (3) obj. -138.849 iterations 6
Cbc0038I Pass  10: suminf.    0.82562 (3) obj. -138.849 iterations 1
Cbc0038I Pass  11: suminf.    0.69589 (2) obj. -138.849 iterations 2
Cbc0038I Pass  12: suminf.    0.50859 (2) obj. -138.849 iterations 1
Cbc0038I Pass  13: suminf.    0.50859 (2) obj. -138.849 iterations 0
Cbc0038I Pass  14: suminf.    2.87832 (8) obj. -138.849 iterations 12
Cbc0038I Pass  15: suminf.    1.52564 (6) obj. -138.849 iterations 3
Cbc0038I Pass  16: suminf.    0.52967 (2) obj. -138.849 iterations 7
Cbc0038I Pass  17: suminf.    0.47578 (2) obj. -138.849 iterations 1
Cbc0038I Pass  18: suminf.    0.52967 (2) obj. -138.849 iterations 1
Cbc0038I Pass  19: suminf.    1.01647 (3) obj. -138.849 iterations 4
Cbc0038I Pass  20: suminf.    0.66160 (3) obj. -138.849 iterations 3
Cbc0038I Pass  21: suminf.    0.48456 (2) obj. -139.855 iterations 2
Cbc0038I Pass  22: suminf.    0.46782 (2) obj. -138.849 iterations 1
Cbc0038I Pass  23: suminf.    0.66168 (3) obj. -138.849 iterations 2
Cbc0038I Pass  24: suminf.    2.32239 (12) obj. -138.849 iterations 11
Cbc0038I Pass  25: suminf.    1.52089 (5) obj. -138.849 iterations 3
Cbc0038I Pass  26: suminf.    0.56289 (2) obj. -141.163 iterations 5
Cbc0038I Pass  27: suminf.    0.52205 (2) obj. -138.849 iterations 1
Cbc0038I Pass  28: suminf.    0.68262 (2) obj. -138.849 iterations 2
Cbc0038I Pass  29: suminf.    0.68262 (2) obj. -138.849 iterations 0
Cbc0038I Pass  30: suminf.    0.69307 (2) obj. -139.417 iterations 2
Cbc0038I Pass  31: suminf.    3.17840 (11) obj. -138.849 iterations 13
Cbc0038I Pass  32: suminf.    1.50816 (6) obj. -138.849 iterations 9
Cbc0038I Rounding solution of -138.624 is better than previous of -135.623

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 48 columns, reduced to 32 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -144.655
Cbc0038I Reduced cost fixing fixed 4 variables on major pass 3
Cbc0038I Pass  32: suminf.    1.78102 (11) obj. -144.655 iterations 0
Cbc0038I Pass  33: suminf.    0.96104 (3) obj. -144.655 iterations 14
Cbc0038I Pass  34: suminf.    0.11735 (1) obj. -144.655 iterations 2
Cbc0038I Pass  35: suminf.    0.13333 (1) obj. -145.885 iterations 1
Cbc0038I Pass  36: suminf.    1.27422 (5) obj. -144.655 iterations 9
Cbc0038I Pass  37: suminf.    0.31111 (2) obj. -146.033 iterations 6
Cbc0038I Pass  38: suminf.    0.45808 (2) obj. -144.655 iterations 4
Cbc0038I Pass  39: suminf.    1.16357 (5) obj. -144.655 iterations 3
Cbc0038I Pass  40: suminf.    1.14983 (4) obj. -144.655 iterations 2
Cbc0038I Pass  41: suminf.    0.40852 (2) obj. -144.655 iterations 3
Cbc0038I Pass  42: suminf.    0.36907 (2) obj. -144.655 iterations 1
Cbc0038I Pass  43: suminf.    0.40852 (2) obj. -144.655 iterations 1
Cbc0038I Pass  44: suminf.    0.40852 (2) obj. -144.655 iterations 5
Cbc0038I Pass  45: suminf.    1.85296 (9) obj. -144.655 iterations 15
Cbc0038I Pass  46: suminf.    1.64428 (6) obj. -150.844 iterations 8
Cbc0038I Pass  47: suminf.    0.24476 (2) obj. -144.655 iterations 5
Cbc0038I Pass  48: suminf.    0.23903 (2) obj. -144.975 iterations 1
Cbc0038I Pass  49: suminf.    1.08851 (5) obj. -144.655 iterations 5
Cbc0038I Pass  50: suminf.    0.23903 (2) obj. -144.975 iterations 6
Cbc0038I Pass  51: suminf.    0.77030 (6) obj. -144.655 iterations 6
Cbc0038I Pass  52: suminf.    2.04506 (8) obj. -144.655 iterations 12
Cbc0038I Pass  53: suminf.    1.24767 (5) obj. -144.655 iterations 5
Cbc0038I Pass  54: suminf.    1.47982 (6) obj. -144.655 iterations 1
Cbc0038I Pass  55: suminf.    1.47982 (6) obj. -144.655 iterations 0
Cbc0038I Pass  56: suminf.    0.24476 (2) obj. -144.655 iterations 5
Cbc0038I Pass  57: suminf.    0.98551 (4) obj. -144.655 iterations 2
Cbc0038I Pass  58: suminf.    0.50246 (3) obj. -146.448 iterations 2
Cbc0038I Pass  59: suminf.    2.87204 (9) obj. -144.655 iterations 8
Cbc0038I Pass  60: suminf.    1.64083 (6) obj. -145.605 iterations 6
Cbc0038I Pass  61: suminf.    2.21793 (8) obj. -144.655 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 48 columns, reduced to 23 rows 29 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -138.624 - took 0.04 seconds
Cbc0012I Integer solution of -138.62449 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 38 rows 48 columns, reduced to 1 rows 3 columns
Cbc0031I 17 added rows had average density of 12.647059
Cbc0013I At root node, 17 cuts changed objective from -167.88199 to -146.24806 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 349 row cuts average 4.2 elements, 7 column cuts (10 active)  in 0.022 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 410 row cuts average 35.1 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 63 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 69 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 4 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 191 row cuts average 26.8 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 242 row cuts average 21.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 16.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -138.624494, took 1507 iterations and 6 nodes (0.24 seconds)
Cbc0032I Strong branching done 74 times (517 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 27 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.24

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-16) rows, 29 (-4) columns and 148 (-35) elements
Clp1000I sum of infeasibilities 3.91376e-05 - average 7.98727e-07, 7 fixed columns
Coin0506I Presolve 35 (-14) rows, 22 (-7) columns and 106 (-42) elements
Clp0029I End of values pass after 22 iterations
Clp0014I Perturbing problem by 0.001% of 2.1469505 - largest nonzero change 0 ( 0%) - largest zero change 1.8775915e-05
Clp0000I Optimal - objective value 172.30223
Clp0000I Optimal - objective value 172.30223
Coin0511I After Postsolve, objective 172.30223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 172.30223
Clp0000I Optimal - objective value 172.30223
Clp0000I Optimal - objective value 172.30223
Coin0511I After Postsolve, objective 172.30223, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 172.3022321 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 4 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 47 rows, 29 columns (28 integer (28 of which binary)) and 156 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 4.851%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 9 integers unsatisfied sum - 2.82169
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -94.8787 iterations 12
Cbc0038I Solution found of -94.8787
Cbc0038I Relaxing continuous gives -94.8787
Cbc0038I Rounding solution of -94.8962 is better than previous of -94.8787

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 17 rows 10 columns
Cbc0038I Mini branch and bound improved solution from -94.8962 to -135.623 (0.01 seconds)
Cbc0038I Round again with cutoff of -138.615
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.74902 (3) obj. -138.615 iterations 4
Cbc0038I Pass   3: suminf.    0.11585 (2) obj. -138.615 iterations 1
Cbc0038I Pass   4: suminf.    0.57128 (2) obj. -138.615 iterations 5
Cbc0038I Pass   5: suminf.    0.42574 (2) obj. -138.615 iterations 1
Cbc0038I Pass   6: suminf.    0.62661 (2) obj. -138.615 iterations 2
Cbc0038I Pass   7: suminf.    0.62661 (2) obj. -138.615 iterations 1
Cbc0038I Pass   8: suminf.    1.14501 (4) obj. -138.615 iterations 4
Cbc0038I Pass   9: suminf.    0.58596 (4) obj. -138.615 iterations 3
Cbc0038I Pass  10: suminf.    1.18031 (4) obj. -138.615 iterations 10
Cbc0038I Pass  11: suminf.    0.63905 (3) obj. -138.615 iterations 2
Cbc0038I Pass  12: suminf.    0.36634 (2) obj. -142.144 iterations 4
Cbc0038I Pass  13: suminf.    0.62887 (3) obj. -138.615 iterations 7
Cbc0038I Pass  14: suminf.    0.62887 (3) obj. -138.615 iterations 1
Cbc0038I Pass  15: suminf.    0.70134 (2) obj. -138.615 iterations 4
Cbc0038I Pass  16: suminf.    0.70134 (2) obj. -138.615 iterations 0
Cbc0038I Pass  17: suminf.    0.68647 (2) obj. -138.615 iterations 2
Cbc0038I Pass  18: suminf.    0.65951 (2) obj. -138.615 iterations 1
Cbc0038I Pass  19: suminf.    0.48086 (2) obj. -138.615 iterations 6
Cbc0038I Pass  20: suminf.    0.20000 (1) obj. -138.615 iterations 4
Cbc0038I Pass  21: suminf.    0.56955 (2) obj. -138.615 iterations 3
Cbc0038I Pass  22: suminf.    0.34802 (2) obj. -138.615 iterations 12
Cbc0038I Pass  23: suminf.    0.34409 (2) obj. -138.615 iterations 1
Cbc0038I Pass  24: suminf.    0.35644 (2) obj. -138.615 iterations 2
Cbc0038I Pass  25: suminf.    0.64648 (5) obj. -138.615 iterations 11
Cbc0038I Pass  26: suminf.    0.31328 (4) obj. -138.615 iterations 3
Cbc0038I Pass  27: suminf.    0.78035 (3) obj. -138.615 iterations 7
Cbc0038I Pass  28: suminf.    0.76587 (3) obj. -138.615 iterations 1
Cbc0038I Pass  29: suminf.    0.44806 (3) obj. -138.615 iterations 3
Cbc0038I Pass  30: suminf.    0.44806 (3) obj. -138.615 iterations 1
Cbc0038I Pass  31: suminf.    1.67789 (5) obj. -138.615 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 47 rows 29 columns, reduced to 24 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -135.623 - took 0.03 seconds
Cbc0012I Integer solution of -135.62269 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 47 rows 29 columns, reduced to 17 rows 10 columns
Cbc0031I 6 added rows had average density of 24.333333
Cbc0013I At root node, 6 cuts changed objective from -165.54677 to -149.28694 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 312 row cuts average 6.1 elements, 2 column cuts (2 active)  in 0.017 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 488 row cuts average 27.9 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 36 row cuts average 5.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 9 row cuts average 3.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 4 row cuts average 11.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 170 row cuts average 22.3 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0012I Integer solution of -138.62449 found by DiveCoefficient after 1224 iterations and 3 nodes (0.15 seconds)
Cbc0001I Search completed - best objective -138.624494, took 1881 iterations and 22 nodes (0.21 seconds)
Cbc0032I Strong branching done 160 times (884 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 5, 34 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.21

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 39 (-26) rows, 46 (-17) columns and 399 (-250) elements
Clp1000I sum of infeasibilities 4.65487e-08 - average 1.19356e-09, 23 fixed columns
Coin0506I Presolve 16 (-23) rows, 23 (-23) columns and 72 (-327) elements
Clp0029I End of values pass after 23 iterations
Clp0000I Optimal - objective value 158.61486
Clp0000I Optimal - objective value 158.61486
Coin0511I After Postsolve, objective 158.61486, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.3551258 - largest nonzero change 0 ( 0%) - largest zero change 2.9910409e-05
Clp0000I Optimal - objective value 183.46051
Clp0000I Optimal - objective value 183.46051
Clp0000I Optimal - objective value 183.46051
Coin0511I After Postsolve, objective 183.46051, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 183.4605147 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 28 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 22 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 17 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 12 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 47 columns (47 integer (47 of which binary)) and 418 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.824%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 16 integers unsatisfied sum - 5.89869
Cbc0038I Pass   1: suminf.    0.27555 (5) obj. -93.3754 iterations 21
Cbc0038I Pass   2: suminf.    0.27555 (5) obj. -93.3754 iterations 0
Cbc0038I Solution found of -84.8787
Cbc0038I Rounding solution of -94.8962 is better than previous of -84.8787

Cbc0038I Before mini branch and bound, 29 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 47 columns, reduced to 15 rows 17 columns
Cbc0038I Mini branch and bound improved solution from -94.8962 to -98.3641 (0.02 seconds)
Cbc0038I Round again with cutoff of -105.156
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.06158 (13) obj. -105.156 iterations 6
Cbc0038I Pass   4: suminf.    1.06158 (13) obj. -105.156 iterations 1
Cbc0038I Pass   5: suminf.    0.20927 (1) obj. -105.156 iterations 24
Cbc0038I Pass   6: suminf.    0.10000 (1) obj. -113.566 iterations 1
Cbc0038I Pass   7: suminf.    0.58333 (2) obj. -116.963 iterations 5
Cbc0038I Pass   8: suminf.    0.42993 (2) obj. -105.156 iterations 5
Cbc0038I Pass   9: suminf.    0.33333 (1) obj. -116.213 iterations 3
Cbc0038I Pass  10: suminf.    0.18968 (1) obj. -105.156 iterations 2
Cbc0038I Pass  11: suminf.    1.01955 (6) obj. -105.156 iterations 14
Cbc0038I Pass  12: suminf.    1.01955 (6) obj. -105.156 iterations 3
Cbc0038I Pass  13: suminf.    0.50548 (2) obj. -105.156 iterations 12
Cbc0038I Pass  14: suminf.    0.50548 (2) obj. -105.156 iterations 0
Cbc0038I Pass  15: suminf.    0.83122 (2) obj. -105.156 iterations 1
Cbc0038I Pass  16: suminf.    1.27124 (5) obj. -105.156 iterations 6
Cbc0038I Pass  17: suminf.    0.76384 (3) obj. -105.156 iterations 1
Cbc0038I Pass  18: suminf.    0.47778 (1) obj. -111.029 iterations 3
Cbc0038I Pass  19: suminf.    0.44592 (1) obj. -105.156 iterations 1
Cbc0038I Pass  20: suminf.    1.77849 (5) obj. -105.156 iterations 15
Cbc0038I Pass  21: suminf.    0.69231 (2) obj. -114.387 iterations 7
Cbc0038I Pass  22: suminf.    0.18453 (1) obj. -105.156 iterations 4
Cbc0038I Pass  23: suminf.    0.34038 (2) obj. -115.172 iterations 2
Cbc0038I Pass  24: suminf.    1.65974 (9) obj. -105.156 iterations 21
Cbc0038I Pass  25: suminf.    1.08599 (5) obj. -105.156 iterations 6
Cbc0038I Pass  26: suminf.    0.12222 (1) obj. -122.942 iterations 4
Cbc0038I Solution found of -113.534
Cbc0038I Rounding solution of -120.44 is better than previous of -113.534

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 47 columns, reduced to 27 rows 35 columns
Cbc0038I Mini branch and bound improved solution from -120.44 to -138.624 (0.05 seconds)
Cbc0038I Round again with cutoff of -144.155
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 3
Cbc0038I Pass  27: suminf.    3.27165 (13) obj. -144.155 iterations 1
Cbc0038I Pass  28: suminf.    2.79412 (12) obj. -144.155 iterations 1
Cbc0038I Pass  29: suminf.    0.53730 (2) obj. -144.155 iterations 15
Cbc0038I Pass  30: suminf.    0.42574 (2) obj. -150.22 iterations 1
Cbc0038I Pass  31: suminf.    2.24412 (8) obj. -144.155 iterations 16
Cbc0038I Pass  32: suminf.    1.56772 (7) obj. -144.155 iterations 5
Cbc0038I Pass  33: suminf.    1.56772 (7) obj. -144.155 iterations 1
Cbc0038I Pass  34: suminf.    0.72859 (3) obj. -144.155 iterations 7
Cbc0038I Pass  35: suminf.    0.72859 (3) obj. -144.155 iterations 0
Cbc0038I Pass  36: suminf.    0.50555 (3) obj. -144.155 iterations 1
Cbc0038I Pass  37: suminf.    0.19490 (2) obj. -145.554 iterations 2
Cbc0038I Pass  38: suminf.    0.90962 (4) obj. -147.416 iterations 4
Cbc0038I Pass  39: suminf.    0.90962 (4) obj. -147.416 iterations 2
Cbc0038I Pass  40: suminf.    0.72859 (3) obj. -144.155 iterations 5
Cbc0038I Pass  41: suminf.    0.72859 (3) obj. -144.155 iterations 0
Cbc0038I Pass  42: suminf.    0.50555 (3) obj. -144.155 iterations 1
Cbc0038I Pass  43: suminf.    0.19490 (2) obj. -145.554 iterations 2
Cbc0038I Pass  44: suminf.    1.58496 (6) obj. -144.155 iterations 8
Cbc0038I Pass  45: suminf.    1.49362 (5) obj. -146.959 iterations 4
Cbc0038I Pass  46: suminf.    0.53010 (3) obj. -144.155 iterations 4
Cbc0038I Pass  47: suminf.    0.45911 (2) obj. -145.12 iterations 2
Cbc0038I Pass  48: suminf.    0.92896 (3) obj. -144.155 iterations 3
Cbc0038I Pass  49: suminf.    1.34652 (5) obj. -144.155 iterations 13
Cbc0038I Pass  50: suminf.    0.93872 (4) obj. -144.155 iterations 2
Cbc0038I Pass  51: suminf.    0.63082 (2) obj. -144.155 iterations 6
Cbc0038I Pass  52: suminf.    0.41623 (2) obj. -144.155 iterations 1
Cbc0038I Pass  53: suminf.    2.57638 (8) obj. -144.155 iterations 12
Cbc0038I Pass  54: suminf.    2.57638 (8) obj. -144.155 iterations 1
Cbc0038I Pass  55: suminf.    1.05466 (4) obj. -144.155 iterations 10
Cbc0038I Pass  56: suminf.    1.01013 (3) obj. -144.155 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 18 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 47 columns, reduced to 22 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -138.624 - took 0.05 seconds
Cbc0012I Integer solution of -138.62449 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 38 rows 47 columns, reduced to 1 rows 2 columns
Cbc0031I 15 added rows had average density of 17.266667
Cbc0013I At root node, 15 cuts changed objective from -166.27788 to -146.22135 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 406 row cuts average 3.9 elements, 8 column cuts (8 active)  in 0.028 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 436 row cuts average 33.9 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 77 row cuts average 5.7 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 69 row cuts average 3.9 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 3 row cuts average 5.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 188 row cuts average 23.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 220 row cuts average 20.1 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 39 row cuts average 25.3 elements, 0 column cuts (0 active)  in 0.728 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -138.62449 best solution, best possible -146.22135 (1.51 seconds)
Cbc0001I Search completed - best objective -138.624494, took 1949 iterations and 16 nodes (2.12 seconds)
Cbc0032I Strong branching done 146 times (1252 iterations), fathomed 1 nodes and fixed 2 variables
Cbc0035I Maximum depth 7, 25 variables fixed on reduced cost
Total time (CPU seconds):       1.36   (Wallclock seconds):       2.13

