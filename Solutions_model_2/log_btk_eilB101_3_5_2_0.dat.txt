Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 101 (-2) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 2.86804e-05 - average 1.60225e-07, 20 fixed columns
Coin0506I Presolve 138 (-41) rows, 80 (-21) columns and 428 (-124) elements
Clp0029I End of values pass after 80 iterations
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Coin0511I After Postsolve, objective 48.79624, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Coin0511I After Postsolve, objective 48.79624, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.79624044 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 101 columns (100 integer (100 of which binary)) and 563 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.941%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.23144
Cbc0038I Solution found of 1.18964
Cbc0038I Relaxing continuous gives -5.97144
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 81 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -5.97144 to -23.7189 (0.07 seconds)
Cbc0038I Round again with cutoff of -26.2267
Cbc0038I Pass   1: suminf.    2.71571 (27) obj. -26.2267 iterations 64
Cbc0038I Pass   2: suminf.    1.82337 (7) obj. -26.2267 iterations 34
Cbc0038I Pass   3: suminf.    1.34796 (7) obj. -26.2267 iterations 5
Cbc0038I Pass   4: suminf.    1.82837 (8) obj. -26.2267 iterations 13
Cbc0038I Pass   5: suminf.    1.44204 (8) obj. -26.2267 iterations 8
Cbc0038I Pass   6: suminf.    1.96013 (6) obj. -26.2267 iterations 12
Cbc0038I Pass   7: suminf.    0.63282 (4) obj. -26.2267 iterations 5
Cbc0038I Pass   8: suminf.    0.89802 (4) obj. -26.2267 iterations 5
Cbc0038I Pass   9: suminf.    0.54021 (2) obj. -26.2267 iterations 3
Cbc0038I Pass  10: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  11: suminf.    2.71072 (10) obj. -26.2267 iterations 24
Cbc0038I Pass  12: suminf.    1.21536 (6) obj. -26.2267 iterations 16
Cbc0038I Pass  13: suminf.    0.77784 (5) obj. -26.2267 iterations 10
Cbc0038I Pass  14: suminf.    0.63282 (4) obj. -26.2267 iterations 9
Cbc0038I Pass  15: suminf.    0.63282 (4) obj. -26.2267 iterations 0
Cbc0038I Pass  16: suminf.    0.89802 (4) obj. -26.2267 iterations 5
Cbc0038I Pass  17: suminf.    0.54021 (2) obj. -26.2267 iterations 3
Cbc0038I Pass  18: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  19: suminf.    3.30633 (11) obj. -26.2267 iterations 24
Cbc0038I Pass  20: suminf.    2.84774 (13) obj. -26.2267 iterations 8
Cbc0038I Pass  21: suminf.    2.62842 (11) obj. -26.2267 iterations 27
Cbc0038I Pass  22: suminf.    1.57172 (8) obj. -26.2267 iterations 7
Cbc0038I Pass  23: suminf.    1.09653 (7) obj. -26.2267 iterations 7
Cbc0038I Pass  24: suminf.    2.16993 (6) obj. -26.2267 iterations 14
Cbc0038I Pass  25: suminf.    1.19909 (3) obj. -26.2267 iterations 4
Cbc0038I Pass  26: suminf.    0.54021 (2) obj. -26.2267 iterations 4
Cbc0038I Pass  27: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  28: suminf.    2.19659 (7) obj. -26.2267 iterations 22
Cbc0038I Pass  29: suminf.    1.62966 (8) obj. -26.2267 iterations 10
Cbc0038I Pass  30: suminf.    1.58053 (6) obj. -26.2267 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 101 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -23.7189 to -24.4416 (0.13 seconds)
Cbc0038I Round again with cutoff of -30.7406
Cbc0038I Pass  30: suminf.    3.32091 (27) obj. -30.7406 iterations 0
Cbc0038I Pass  31: suminf.    3.18035 (11) obj. -30.7406 iterations 36
Cbc0038I Pass  32: suminf.    1.91264 (9) obj. -30.7406 iterations 8
Cbc0038I Pass  33: suminf.    2.36557 (10) obj. -30.7406 iterations 13
Cbc0038I Pass  34: suminf.    1.95215 (10) obj. -30.7406 iterations 7
Cbc0038I Pass  35: suminf.    1.92381 (8) obj. -30.7406 iterations 2
Cbc0038I Pass  36: suminf.    1.52732 (6) obj. -30.7406 iterations 7
Cbc0038I Pass  37: suminf.    1.31157 (5) obj. -30.7406 iterations 7
Cbc0038I Pass  38: suminf.    1.43979 (6) obj. -30.7406 iterations 6
Cbc0038I Pass  39: suminf.    0.51295 (3) obj. -30.7406 iterations 5
Cbc0038I Pass  40: suminf.    0.48693 (4) obj. -30.7406 iterations 2
Cbc0038I Pass  41: suminf.    1.59050 (5) obj. -30.7406 iterations 6
Cbc0038I Pass  42: suminf.    1.09501 (6) obj. -30.7406 iterations 10
Cbc0038I Pass  43: suminf.    1.93720 (7) obj. -30.7406 iterations 8
Cbc0038I Pass  44: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  45: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  46: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  47: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  48: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  49: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  50: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  51: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  52: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  53: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  54: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  55: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  56: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  57: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  58: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  59: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 89 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -24.4416 - took 0.14 seconds
Cbc0012I Integer solution of -24.44165 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 82 rows 49 columns
Cbc0031I 29 added rows had average density of 60.827586
Cbc0013I At root node, 29 cuts changed objective from -48.79624 to -42.144529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16097 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.127 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2815 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.125 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 100.3 elements, 0 column cuts (0 active)  in 0.059 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.44165 best solution, best possible -42.144529 (1.55 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 5 rows 6 columns
Cbc0038I Full problem 179 rows 101 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -24.44165, took 14688 iterations and 134 nodes (2.06 seconds)
Cbc0032I Strong branching done 1108 times (23066 iterations), fathomed 7 nodes and fixed 40 variables
Cbc0035I Maximum depth 38, 339 variables fixed on reduced cost
Total time (CPU seconds):       1.97   (Wallclock seconds):       2.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-75) rows, 150 (-52) columns and 2708 (-2945) elements
Clp1000I sum of infeasibilities 2.46805e-07 - average 1.91322e-09, 28 fixed columns
Coin0506I Presolve 103 (-26) rows, 122 (-28) columns and 1883 (-825) elements
Clp0006I 0  Obj 49.591473 Dual inf 11.269621 (122)
Clp0029I End of values pass after 122 iterations
Clp0014I Perturbing problem by 0.001% of 1.8392329 - largest nonzero change 1.209335e-05 ( 0.00085132148%) - largest zero change 2.9165481e-05
Clp0000I Optimal - objective value 56.997668
Clp0000I Optimal - objective value 56.997668
Coin0511I After Postsolve, objective 56.997668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.997668
Clp0000I Optimal - objective value 56.997668
Clp0000I Optimal - objective value 56.997668
Clp0000I Optimal - objective value 56.997668
Coin0511I After Postsolve, objective 56.997668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.99766792 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 151 columns (151 integer (151 of which binary)) and 2716 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.547%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 3.22868
Cbc0038I Pass   1: suminf.    0.42807 (15) obj. -39.8524 iterations 42
Cbc0038I Pass   2: suminf.    0.42807 (15) obj. -39.8524 iterations 1
Cbc0038I Pass   3: suminf.    0.02598 (2) obj. -12.9809 iterations 13
Cbc0038I Solution found of -11.0069
Cbc0038I Rounding solution of -17.7997 is better than previous of -11.0069

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -21.0832
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.42807 (15) obj. -39.8524 iterations 0
Cbc0038I Pass   5: suminf.    0.42807 (15) obj. -39.8524 iterations 1
Cbc0038I Pass   6: suminf.    0.22490 (1) obj. -21.0832 iterations 15
Cbc0038I Pass   7: suminf.    0.05000 (1) obj. -23.3569 iterations 1
Cbc0038I Pass   8: suminf.    1.32099 (11) obj. -21.0832 iterations 62
Cbc0038I Pass   9: suminf.    0.80405 (9) obj. -21.7635 iterations 5
Cbc0038I Pass  10: suminf.    1.07488 (5) obj. -21.0832 iterations 19
Cbc0038I Pass  11: suminf.    0.72536 (5) obj. -21.7822 iterations 7
Cbc0038I Pass  12: suminf.    1.07488 (5) obj. -21.0832 iterations 8
Cbc0038I Pass  13: suminf.    1.82417 (13) obj. -21.0832 iterations 27
Cbc0038I Pass  14: suminf.    1.81883 (14) obj. -21.0832 iterations 6
Cbc0038I Pass  15: suminf.    1.17987 (7) obj. -21.0832 iterations 24
Cbc0038I Pass  16: suminf.    1.01850 (18) obj. -21.0832 iterations 8
Cbc0038I Pass  17: suminf.    2.46225 (21) obj. -21.0832 iterations 25
Cbc0038I Pass  18: suminf.    2.46225 (21) obj. -21.0832 iterations 1
Cbc0038I Pass  19: suminf.    2.46609 (21) obj. -21.0832 iterations 3
Cbc0038I Pass  20: suminf.    2.46609 (21) obj. -21.0832 iterations 1
Cbc0038I Pass  21: suminf.    2.55217 (21) obj. -21.0832 iterations 5
Cbc0038I Pass  22: suminf.    2.52689 (21) obj. -21.0832 iterations 4
Cbc0038I Pass  23: suminf.    2.37681 (20) obj. -21.0832 iterations 6
Cbc0038I Pass  24: suminf.    2.37681 (20) obj. -21.0832 iterations 3
Cbc0038I Pass  25: suminf.    2.38003 (20) obj. -21.0832 iterations 5
Cbc0038I Pass  26: suminf.    2.38003 (20) obj. -21.0832 iterations 3
Cbc0038I Pass  27: suminf.    2.37681 (20) obj. -21.0832 iterations 5
Cbc0038I Pass  28: suminf.    1.67640 (19) obj. -21.0832 iterations 19
Cbc0038I Pass  29: suminf.    1.29494 (18) obj. -21.0832 iterations 7
Cbc0038I Pass  30: suminf.    2.06304 (16) obj. -21.0832 iterations 18
Cbc0038I Pass  31: suminf.    0.76471 (10) obj. -21.0832 iterations 11
Cbc0038I Pass  32: suminf.    0.76471 (10) obj. -21.0832 iterations 0
Cbc0038I Pass  33: suminf.    2.14002 (16) obj. -21.0832 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 151 columns, reduced to 53 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -11.0069 to -23.5833 (0.07 seconds)
Cbc0038I Round again with cutoff of -28.9934
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    0.42807 (15) obj. -39.8524 iterations 0
Cbc0038I Pass  34: suminf.    0.42807 (15) obj. -39.8524 iterations 1
Cbc0038I Pass  35: suminf.    0.49905 (2) obj. -28.9934 iterations 17
Cbc0038I Pass  36: suminf.    0.37540 (2) obj. -32.2283 iterations 4
Cbc0038I Pass  37: suminf.    0.09206 (1) obj. -28.9934 iterations 2
Cbc0038I Pass  38: suminf.    0.05000 (1) obj. -29.5403 iterations 1
Cbc0038I Pass  39: suminf.    0.95647 (8) obj. -28.9934 iterations 36
Cbc0038I Pass  40: suminf.    0.48066 (8) obj. -28.9934 iterations 6
Cbc0038I Pass  41: suminf.    1.13343 (27) obj. -28.9934 iterations 22
Cbc0038I Pass  42: suminf.    0.47758 (5) obj. -28.9934 iterations 21
Cbc0038I Pass  43: suminf.    1.24288 (29) obj. -28.9934 iterations 18
Cbc0038I Pass  44: suminf.    1.24288 (29) obj. -28.9934 iterations 0
Cbc0038I Pass  45: suminf.    1.66132 (27) obj. -28.9934 iterations 21
Cbc0038I Pass  46: suminf.    1.33642 (28) obj. -28.9934 iterations 7
Cbc0038I Pass  47: suminf.    1.66132 (27) obj. -28.9934 iterations 30
Cbc0038I Pass  48: suminf.    1.53296 (29) obj. -28.9934 iterations 8
Cbc0038I Pass  49: suminf.    1.66132 (27) obj. -28.9934 iterations 15
Cbc0038I Pass  50: suminf.    1.46645 (29) obj. -28.9934 iterations 6
Cbc0038I Pass  51: suminf.    1.66132 (27) obj. -28.9934 iterations 6
Cbc0038I Pass  52: suminf.    1.51374 (29) obj. -28.9934 iterations 5
Cbc0038I Pass  53: suminf.    1.66132 (27) obj. -28.9934 iterations 10
Cbc0038I Pass  54: suminf.    1.53486 (29) obj. -28.9934 iterations 8
Cbc0038I Pass  55: suminf.    1.67353 (28) obj. -28.9934 iterations 9
Cbc0038I Pass  56: suminf.    1.56940 (29) obj. -28.9934 iterations 4
Cbc0038I Pass  57: suminf.    1.66132 (27) obj. -28.9934 iterations 18
Cbc0038I Pass  58: suminf.    1.87877 (29) obj. -28.9934 iterations 11
Cbc0038I Pass  59: suminf.    1.87877 (29) obj. -28.9934 iterations 2
Cbc0038I Pass  60: suminf.    2.39894 (27) obj. -28.9934 iterations 7
Cbc0038I Pass  61: suminf.    1.75304 (28) obj. -28.9934 iterations 5
Cbc0038I Pass  62: suminf.    2.10719 (28) obj. -28.9934 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 151 columns, reduced to 46 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.09 seconds)
Cbc0038I After 0.09 seconds - Feasibility pump exiting with objective of -23.5833 - took 0.06 seconds
Cbc0012I Integer solution of -23.58334 found by feasibility pump after 0 iterations and 0 nodes (0.09 seconds)
Cbc0038I Full problem 130 rows 151 columns, reduced to 2 rows 5 columns
Cbc0031I 59 added rows had average density of 34.440678
Cbc0013I At root node, 59 cuts changed objective from -50.6334 to -29.533179 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13572 row cuts average 13.0 elements, 2 column cuts (2 active)  in 0.263 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1837 row cuts average 133.6 elements, 0 column cuts (0 active)  in 0.161 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 126 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.093 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 489 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1025 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 357 row cuts average 88.4 elements, 0 column cuts (0 active)  in 0.043 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 277 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.603 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.58334 best solution, best possible -29.533179 (2.90 seconds)
Cbc0010I After 2 nodes, 3 on tree, -23.58334 best solution, best possible -29.533179 (3.75 seconds)
Cbc0012I Integer solution of -24.44165 found by rounding after 5061 iterations and 5 nodes (4.23 seconds)
Cbc0010I After 10 nodes, 10 on tree, -24.44165 best solution, best possible -29.533179 (4.49 seconds)
Cbc0010I After 28 nodes, 7 on tree, -24.44165 best solution, best possible -29.533179 (5.23 seconds)
Cbc0001I Search completed - best objective -24.44165, took 6953 iterations and 46 nodes (5.90 seconds)
Cbc0032I Strong branching done 570 times (10709 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 154 variables fixed on reduced cost
Total time (CPU seconds):       4.32   (Wallclock seconds):       5.93

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 179 (-26) rows, 101 (-2) columns and 552 (-51) elements
Clp1000I sum of infeasibilities 2.86804e-05 - average 1.60225e-07, 20 fixed columns
Coin0506I Presolve 138 (-41) rows, 80 (-21) columns and 428 (-124) elements
Clp0029I End of values pass after 80 iterations
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Coin0511I After Postsolve, objective 48.79624, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Clp0000I Optimal - objective value 48.79624
Coin0511I After Postsolve, objective 48.79624, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 48.79624044 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 179 rows, 101 columns (100 integer (100 of which binary)) and 563 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.941%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 47 integers unsatisfied sum - 7.23144
Cbc0038I Solution found of 1.18964
Cbc0038I Relaxing continuous gives -5.97144
Cbc0038I Before mini branch and bound, 53 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 81 rows 48 columns
Cbc0038I Mini branch and bound improved solution from -5.97144 to -23.7189 (0.08 seconds)
Cbc0038I Round again with cutoff of -26.2267
Cbc0038I Pass   1: suminf.    2.71571 (27) obj. -26.2267 iterations 64
Cbc0038I Pass   2: suminf.    1.82337 (7) obj. -26.2267 iterations 34
Cbc0038I Pass   3: suminf.    1.34796 (7) obj. -26.2267 iterations 5
Cbc0038I Pass   4: suminf.    1.82837 (8) obj. -26.2267 iterations 13
Cbc0038I Pass   5: suminf.    1.44204 (8) obj. -26.2267 iterations 8
Cbc0038I Pass   6: suminf.    1.96013 (6) obj. -26.2267 iterations 12
Cbc0038I Pass   7: suminf.    0.63282 (4) obj. -26.2267 iterations 5
Cbc0038I Pass   8: suminf.    0.89802 (4) obj. -26.2267 iterations 5
Cbc0038I Pass   9: suminf.    0.54021 (2) obj. -26.2267 iterations 3
Cbc0038I Pass  10: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  11: suminf.    2.71072 (10) obj. -26.2267 iterations 24
Cbc0038I Pass  12: suminf.    1.21536 (6) obj. -26.2267 iterations 16
Cbc0038I Pass  13: suminf.    0.77784 (5) obj. -26.2267 iterations 10
Cbc0038I Pass  14: suminf.    0.63282 (4) obj. -26.2267 iterations 9
Cbc0038I Pass  15: suminf.    0.63282 (4) obj. -26.2267 iterations 0
Cbc0038I Pass  16: suminf.    0.89802 (4) obj. -26.2267 iterations 5
Cbc0038I Pass  17: suminf.    0.54021 (2) obj. -26.2267 iterations 3
Cbc0038I Pass  18: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  19: suminf.    3.30633 (11) obj. -26.2267 iterations 24
Cbc0038I Pass  20: suminf.    2.84774 (13) obj. -26.2267 iterations 8
Cbc0038I Pass  21: suminf.    2.62842 (11) obj. -26.2267 iterations 27
Cbc0038I Pass  22: suminf.    1.57172 (8) obj. -26.2267 iterations 7
Cbc0038I Pass  23: suminf.    1.09653 (7) obj. -26.2267 iterations 7
Cbc0038I Pass  24: suminf.    2.16993 (6) obj. -26.2267 iterations 14
Cbc0038I Pass  25: suminf.    1.19909 (3) obj. -26.2267 iterations 4
Cbc0038I Pass  26: suminf.    0.54021 (2) obj. -26.2267 iterations 4
Cbc0038I Pass  27: suminf.    0.25714 (1) obj. -26.5819 iterations 3
Cbc0038I Pass  28: suminf.    2.19659 (7) obj. -26.2267 iterations 22
Cbc0038I Pass  29: suminf.    1.62966 (8) obj. -26.2267 iterations 10
Cbc0038I Pass  30: suminf.    1.58053 (6) obj. -26.2267 iterations 13
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 41 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 101 rows 60 columns
Cbc0038I Mini branch and bound improved solution from -23.7189 to -24.4416 (0.14 seconds)
Cbc0038I Round again with cutoff of -30.7406
Cbc0038I Pass  30: suminf.    3.32091 (27) obj. -30.7406 iterations 0
Cbc0038I Pass  31: suminf.    3.18035 (11) obj. -30.7406 iterations 36
Cbc0038I Pass  32: suminf.    1.91264 (9) obj. -30.7406 iterations 8
Cbc0038I Pass  33: suminf.    2.36557 (10) obj. -30.7406 iterations 13
Cbc0038I Pass  34: suminf.    1.95215 (10) obj. -30.7406 iterations 7
Cbc0038I Pass  35: suminf.    1.92381 (8) obj. -30.7406 iterations 2
Cbc0038I Pass  36: suminf.    1.52732 (6) obj. -30.7406 iterations 7
Cbc0038I Pass  37: suminf.    1.31157 (5) obj. -30.7406 iterations 7
Cbc0038I Pass  38: suminf.    1.43979 (6) obj. -30.7406 iterations 6
Cbc0038I Pass  39: suminf.    0.51295 (3) obj. -30.7406 iterations 5
Cbc0038I Pass  40: suminf.    0.48693 (4) obj. -30.7406 iterations 2
Cbc0038I Pass  41: suminf.    1.59050 (5) obj. -30.7406 iterations 6
Cbc0038I Pass  42: suminf.    1.09501 (6) obj. -30.7406 iterations 10
Cbc0038I Pass  43: suminf.    1.93720 (7) obj. -30.7406 iterations 8
Cbc0038I Pass  44: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  45: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  46: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  47: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  48: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  49: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  50: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  51: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  52: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  53: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  54: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I Pass  55: suminf.    0.63468 (3) obj. -30.7406 iterations 1
Cbc0038I Pass  56: suminf.    1.09501 (6) obj. -30.7406 iterations 9
Cbc0038I Pass  57: suminf.    1.09501 (6) obj. -30.7406 iterations 0
Cbc0038I Pass  58: suminf.    1.93720 (7) obj. -30.7406 iterations 7
Cbc0038I Pass  59: suminf.    0.63967 (4) obj. -30.7406 iterations 8
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 179 rows 101 columns, reduced to 89 rows 53 columns
Cbc0038I Mini branch and bound did not improve solution (0.18 seconds)
Cbc0038I After 0.18 seconds - Feasibility pump exiting with objective of -24.4416 - took 0.16 seconds
Cbc0012I Integer solution of -24.44165 found by feasibility pump after 0 iterations and 0 nodes (0.18 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 82 rows 49 columns
Cbc0031I 29 added rows had average density of 60.827586
Cbc0013I At root node, 29 cuts changed objective from -48.79624 to -42.144529 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16097 row cuts average 3.1 elements, 1 column cuts (1 active)  in 0.137 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2815 row cuts average 101.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.119 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 191 row cuts average 100.3 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -24.44165 best solution, best possible -42.144529 (1.71 seconds)
Cbc0038I Full problem 179 rows 101 columns, reduced to 5 rows 6 columns
Cbc0038I Full problem 179 rows 101 columns, reduced to 8 rows 10 columns
Cbc0001I Search completed - best objective -24.44165, took 14688 iterations and 134 nodes (2.25 seconds)
Cbc0032I Strong branching done 1108 times (23066 iterations), fathomed 7 nodes and fixed 40 variables
Cbc0035I Maximum depth 38, 339 variables fixed on reduced cost
Total time (CPU seconds):       2.16   (Wallclock seconds):       2.27

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 129 (-76) rows, 150 (-53) columns and 2708 (-2946) elements
Clp1000I sum of infeasibilities 2.46805e-07 - average 1.91322e-09, 28 fixed columns
Coin0506I Presolve 103 (-26) rows, 122 (-28) columns and 1883 (-825) elements
Clp0006I 0  Obj 49.591473 Dual inf 11.269621 (122)
Clp0029I End of values pass after 122 iterations
Clp0014I Perturbing problem by 0.001% of 1.8392329 - largest nonzero change 1.209335e-05 ( 0.00085132148%) - largest zero change 2.9165481e-05
Clp0000I Optimal - objective value 56.997668
Clp0000I Optimal - objective value 56.997668
Coin0511I After Postsolve, objective 56.997668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 56.997668
Clp0000I Optimal - objective value 56.997668
Clp0000I Optimal - objective value 56.997668
Clp0000I Optimal - objective value 56.997668
Coin0511I After Postsolve, objective 56.997668, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 56.99766792 - 0 iterations time 0.032, Presolve 0.00, Idiot 0.03

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 130 rows, 151 columns (151 integer (151 of which binary)) and 2716 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.547%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 3.22868
Cbc0038I Pass   1: suminf.    0.42807 (15) obj. -39.8524 iterations 42
Cbc0038I Pass   2: suminf.    0.42807 (15) obj. -39.8524 iterations 1
Cbc0038I Pass   3: suminf.    0.02598 (2) obj. -12.9809 iterations 13
Cbc0038I Solution found of -11.0069
Cbc0038I Rounding solution of -17.7997 is better than previous of -11.0069

Cbc0038I Before mini branch and bound, 101 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -21.0832
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   4: suminf.    0.42807 (15) obj. -39.8524 iterations 0
Cbc0038I Pass   5: suminf.    0.42807 (15) obj. -39.8524 iterations 1
Cbc0038I Pass   6: suminf.    0.22490 (1) obj. -21.0832 iterations 15
Cbc0038I Pass   7: suminf.    0.05000 (1) obj. -23.3569 iterations 1
Cbc0038I Pass   8: suminf.    1.32099 (11) obj. -21.0832 iterations 62
Cbc0038I Pass   9: suminf.    0.80405 (9) obj. -21.7635 iterations 5
Cbc0038I Pass  10: suminf.    1.07488 (5) obj. -21.0832 iterations 19
Cbc0038I Pass  11: suminf.    0.72536 (5) obj. -21.7822 iterations 7
Cbc0038I Pass  12: suminf.    1.07488 (5) obj. -21.0832 iterations 8
Cbc0038I Pass  13: suminf.    1.82417 (13) obj. -21.0832 iterations 27
Cbc0038I Pass  14: suminf.    1.81883 (14) obj. -21.0832 iterations 6
Cbc0038I Pass  15: suminf.    1.17987 (7) obj. -21.0832 iterations 24
Cbc0038I Pass  16: suminf.    1.01850 (18) obj. -21.0832 iterations 8
Cbc0038I Pass  17: suminf.    2.46225 (21) obj. -21.0832 iterations 25
Cbc0038I Pass  18: suminf.    2.46225 (21) obj. -21.0832 iterations 1
Cbc0038I Pass  19: suminf.    2.46609 (21) obj. -21.0832 iterations 3
Cbc0038I Pass  20: suminf.    2.46609 (21) obj. -21.0832 iterations 1
Cbc0038I Pass  21: suminf.    2.55217 (21) obj. -21.0832 iterations 5
Cbc0038I Pass  22: suminf.    2.52689 (21) obj. -21.0832 iterations 4
Cbc0038I Pass  23: suminf.    2.37681 (20) obj. -21.0832 iterations 6
Cbc0038I Pass  24: suminf.    2.37681 (20) obj. -21.0832 iterations 3
Cbc0038I Pass  25: suminf.    2.38003 (20) obj. -21.0832 iterations 5
Cbc0038I Pass  26: suminf.    2.38003 (20) obj. -21.0832 iterations 3
Cbc0038I Pass  27: suminf.    2.37681 (20) obj. -21.0832 iterations 5
Cbc0038I Pass  28: suminf.    1.67640 (19) obj. -21.0832 iterations 19
Cbc0038I Pass  29: suminf.    1.29494 (18) obj. -21.0832 iterations 7
Cbc0038I Pass  30: suminf.    2.06304 (16) obj. -21.0832 iterations 18
Cbc0038I Pass  31: suminf.    0.76471 (10) obj. -21.0832 iterations 11
Cbc0038I Pass  32: suminf.    0.76471 (10) obj. -21.0832 iterations 0
Cbc0038I Pass  33: suminf.    2.14002 (16) obj. -21.0832 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 87 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 151 columns, reduced to 53 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -11.0069 to -23.5833 (0.08 seconds)
Cbc0038I Round again with cutoff of -28.9934
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  33: suminf.    0.42807 (15) obj. -39.8524 iterations 0
Cbc0038I Pass  34: suminf.    0.42807 (15) obj. -39.8524 iterations 1
Cbc0038I Pass  35: suminf.    0.49905 (2) obj. -28.9934 iterations 17
Cbc0038I Pass  36: suminf.    0.37540 (2) obj. -32.2283 iterations 4
Cbc0038I Pass  37: suminf.    0.09206 (1) obj. -28.9934 iterations 2
Cbc0038I Pass  38: suminf.    0.05000 (1) obj. -29.5403 iterations 1
Cbc0038I Pass  39: suminf.    0.95647 (8) obj. -28.9934 iterations 36
Cbc0038I Pass  40: suminf.    0.48066 (8) obj. -28.9934 iterations 6
Cbc0038I Pass  41: suminf.    1.13343 (27) obj. -28.9934 iterations 22
Cbc0038I Pass  42: suminf.    0.47758 (5) obj. -28.9934 iterations 21
Cbc0038I Pass  43: suminf.    1.24288 (29) obj. -28.9934 iterations 18
Cbc0038I Pass  44: suminf.    1.24288 (29) obj. -28.9934 iterations 0
Cbc0038I Pass  45: suminf.    1.66132 (27) obj. -28.9934 iterations 21
Cbc0038I Pass  46: suminf.    1.33642 (28) obj. -28.9934 iterations 7
Cbc0038I Pass  47: suminf.    1.66132 (27) obj. -28.9934 iterations 30
Cbc0038I Pass  48: suminf.    1.53296 (29) obj. -28.9934 iterations 8
Cbc0038I Pass  49: suminf.    1.66132 (27) obj. -28.9934 iterations 15
Cbc0038I Pass  50: suminf.    1.46645 (29) obj. -28.9934 iterations 6
Cbc0038I Pass  51: suminf.    1.66132 (27) obj. -28.9934 iterations 6
Cbc0038I Pass  52: suminf.    1.51374 (29) obj. -28.9934 iterations 5
Cbc0038I Pass  53: suminf.    1.66132 (27) obj. -28.9934 iterations 10
Cbc0038I Pass  54: suminf.    1.53486 (29) obj. -28.9934 iterations 8
Cbc0038I Pass  55: suminf.    1.67353 (28) obj. -28.9934 iterations 9
Cbc0038I Pass  56: suminf.    1.56940 (29) obj. -28.9934 iterations 4
Cbc0038I Pass  57: suminf.    1.66132 (27) obj. -28.9934 iterations 18
Cbc0038I Pass  58: suminf.    1.87877 (29) obj. -28.9934 iterations 11
Cbc0038I Pass  59: suminf.    1.87877 (29) obj. -28.9934 iterations 2
Cbc0038I Pass  60: suminf.    2.39894 (27) obj. -28.9934 iterations 7
Cbc0038I Pass  61: suminf.    1.75304 (28) obj. -28.9934 iterations 5
Cbc0038I Pass  62: suminf.    2.10719 (28) obj. -28.9934 iterations 10
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 93 integers at bound fixed and 0 continuous
Cbc0038I Full problem 130 rows 151 columns, reduced to 46 rows 52 columns
Cbc0038I Mini branch and bound did not improve solution (0.10 seconds)
Cbc0038I After 0.10 seconds - Feasibility pump exiting with objective of -23.5833 - took 0.06 seconds
Cbc0012I Integer solution of -23.58334 found by feasibility pump after 0 iterations and 0 nodes (0.10 seconds)
Cbc0038I Full problem 130 rows 151 columns, reduced to 2 rows 5 columns
Cbc0031I 59 added rows had average density of 34.440678
Cbc0013I At root node, 59 cuts changed objective from -50.6334 to -29.533179 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 13572 row cuts average 13.0 elements, 2 column cuts (2 active)  in 0.318 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1837 row cuts average 133.6 elements, 0 column cuts (0 active)  in 0.202 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 126 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.111 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 489 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.076 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1025 row cuts average 10.9 elements, 0 column cuts (0 active)  in 0.116 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 357 row cuts average 88.4 elements, 0 column cuts (0 active)  in 0.052 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 277 row cuts average 21.6 elements, 0 column cuts (0 active)  in 0.772 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.58334 best solution, best possible -29.533179 (3.83 seconds)
Cbc0010I After 2 nodes, 3 on tree, -23.58334 best solution, best possible -29.533179 (4.68 seconds)
Cbc0012I Integer solution of -24.44165 found by rounding after 5061 iterations and 5 nodes (5.15 seconds)
Cbc0010I After 10 nodes, 10 on tree, -24.44165 best solution, best possible -29.533179 (5.42 seconds)
Cbc0010I After 28 nodes, 7 on tree, -24.44165 best solution, best possible -29.533179 (6.14 seconds)
Cbc0010I After 40 nodes, 6 on tree, -24.44165 best solution, best possible -29.533179 (6.85 seconds)
Cbc0001I Search completed - best objective -24.44165, took 6953 iterations and 46 nodes (6.86 seconds)
Cbc0032I Strong branching done 570 times (10709 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 12, 154 variables fixed on reduced cost
Total time (CPU seconds):       4.88   (Wallclock seconds):       6.89

