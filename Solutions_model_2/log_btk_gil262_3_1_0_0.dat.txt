Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 501 (-26) rows, 257 (-7) columns and 1484 (-61) elements
Clp1000I sum of infeasibilities 0.00029437 - average 5.87566e-07, 128 fixed columns
Coin0506I Presolve 233 (-268) rows, 121 (-136) columns and 682 (-802) elements
Clp0029I End of values pass after 121 iterations
Clp0014I Perturbing problem by 0.001% of 0.1655779 - largest nonzero change 0 ( 0%) - largest zero change 2.9004644e-05
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Coin0511I After Postsolve, objective 180.15811, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1308531 - largest nonzero change 0 ( 0%) - largest zero change 2.9980352e-05
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Coin0511I After Postsolve, objective 180.15811, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.15811 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 501 rows, 257 columns (256 integer (256 of which binary)) and 1484 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 72 integers unsatisfied sum - 10.8637
Cbc0038I Solution found of -4.93255
Cbc0038I Relaxing continuous gives -25.6232
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 140 rows 73 columns
Cbc0038I Mini branch and bound improved solution from -25.6232 to -107.054 (0.06 seconds)
Cbc0038I Round again with cutoff of -114.364
Cbc0038I Pass   1: suminf.    4.42201 (43) obj. -114.364 iterations 217
Cbc0038I Pass   2: suminf.    1.84779 (8) obj. -114.364 iterations 59
Cbc0038I Pass   3: suminf.    0.96799 (6) obj. -114.364 iterations 34
Cbc0038I Pass   4: suminf.    0.77652 (5) obj. -114.364 iterations 24
Cbc0038I Pass   5: suminf.    1.00189 (5) obj. -114.364 iterations 16
Cbc0038I Pass   6: suminf.    0.93773 (4) obj. -114.364 iterations 1
Cbc0038I Pass   7: suminf.    1.11330 (4) obj. -114.364 iterations 9
Cbc0038I Pass   8: suminf.    0.97161 (4) obj. -114.364 iterations 7
Cbc0038I Pass   9: suminf.    3.69614 (14) obj. -114.364 iterations 64
Cbc0038I Pass  10: suminf.    2.13991 (13) obj. -114.364 iterations 58
Cbc0038I Pass  11: suminf.    2.27465 (9) obj. -114.364 iterations 20
Cbc0038I Pass  12: suminf.    4.73046 (17) obj. -114.364 iterations 49
Cbc0038I Pass  13: suminf.    0.61720 (3) obj. -114.364 iterations 73
Cbc0038I Pass  14: suminf.    0.55313 (2) obj. -114.364 iterations 1
Cbc0038I Pass  15: suminf.    0.67594 (2) obj. -114.364 iterations 8
Cbc0038I Pass  16: suminf.    0.63200 (2) obj. -114.364 iterations 1
Cbc0038I Pass  17: suminf.    3.57968 (18) obj. -114.364 iterations 64
Cbc0038I Pass  18: suminf.    0.61720 (3) obj. -114.364 iterations 62
Cbc0038I Pass  19: suminf.    5.13809 (24) obj. -114.364 iterations 67
Cbc0038I Pass  20: suminf.    1.36566 (6) obj. -114.364 iterations 74
Cbc0038I Pass  21: suminf.    1.31620 (6) obj. -114.364 iterations 8
Cbc0038I Pass  22: suminf.    2.16134 (9) obj. -114.364 iterations 19
Cbc0038I Pass  23: suminf.    1.36566 (6) obj. -114.364 iterations 18
Cbc0038I Pass  24: suminf.    1.66781 (8) obj. -114.364 iterations 46
Cbc0038I Pass  25: suminf.    0.75915 (7) obj. -114.364 iterations 34
Cbc0038I Pass  26: suminf.    2.09922 (8) obj. -114.364 iterations 20
Cbc0038I Pass  27: suminf.    0.84903 (4) obj. -114.364 iterations 22
Cbc0038I Pass  28: suminf.    2.69067 (8) obj. -114.364 iterations 38
Cbc0038I Pass  29: suminf.    0.10018 (6) obj. -114.364 iterations 55
Cbc0038I Pass  30: suminf.    0.10018 (6) obj. -114.364 iterations 0
Cbc0038I Rounding solution of -109.811 is better than previous of -107.054

Cbc0038I Before mini branch and bound, 131 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 239 rows 125 columns
Cbc0038I Mini branch and bound improved solution from -109.811 to -120.081 (0.17 seconds)
Cbc0038I Round again with cutoff of -132.097
Cbc0038I Pass  30: suminf.    5.30562 (43) obj. -132.097 iterations 0
Cbc0038I Pass  31: suminf.    3.68121 (12) obj. -132.097 iterations 63
Cbc0038I Pass  32: suminf.    1.94254 (9) obj. -132.097 iterations 49
Cbc0038I Pass  33: suminf.    3.11871 (11) obj. -132.097 iterations 44
Cbc0038I Pass  34: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  35: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  36: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  37: suminf.    2.24663 (9) obj. -132.097 iterations 30
Cbc0038I Pass  38: suminf.    1.94254 (9) obj. -132.097 iterations 7
Cbc0038I Pass  39: suminf.    3.11871 (11) obj. -132.097 iterations 48
Cbc0038I Pass  40: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  41: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  42: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  43: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  44: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  45: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  46: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  47: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  48: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  49: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  50: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  51: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  52: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  53: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  54: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  55: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  56: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  57: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  58: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  59: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 160 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 185 rows 97 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I After 0.25 seconds - Feasibility pump exiting with objective of -120.081 - took 0.23 seconds
Cbc0012I Integer solution of -120.08107 found by feasibility pump after 0 iterations and 0 nodes (0.25 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 147 rows 77 columns
Cbc0031I 34 added rows had average density of 106
Cbc0013I At root node, 34 cuts changed objective from -180.15811 to -163.86381 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34619 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.481 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2597 row cuts average 252.3 elements, 0 column cuts (0 active)  in 0.374 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.100 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.359 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 245.7 elements, 0 column cuts (0 active)  in 0.189 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -120.08107 best solution, best possible -163.86381 (4.05 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 130 rows 69 columns
Cbc0010I After 45 nodes, 14 on tree, -120.08107 best solution, best possible -163.86381 (4.76 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 0 rows 0 columns
Cbc0001I Search completed - best objective -120.08107, took 20128 iterations and 106 nodes (5.01 seconds)
Cbc0032I Strong branching done 1242 times (34369 iterations), fathomed 6 nodes and fixed 22 variables
Cbc0035I Maximum depth 49, 283 variables fixed on reduced cost
Total time (CPU seconds):       4.94   (Wallclock seconds):       5.06

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 396 (-130) rows, 407 (-117) columns and 21816 (-13920) elements
Clp1000I sum of infeasibilities 1.85659e-05 - average 4.68836e-08, 332 fixed columns
Coin0506I Presolve 63 (-333) rows, 73 (-334) columns and 256 (-21560) elements
Clp0006I 0  Obj 697.16203 Primal inf 3.93609e-06 (6) Dual inf 4.0000015e+09 (71)
Clp0029I End of values pass after 63 iterations
Clp0014I Perturbing problem by 0.001% of 0.11470234 - largest nonzero change 0 ( 0%) - largest zero change 2.9368749e-05
Clp0000I Optimal - objective value 700.01867
Clp0000I Optimal - objective value 700.01867
Coin0511I After Postsolve, objective 700.01867, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 700.01867 Dual inf 459.50711 (163)
Clp0014I Perturbing problem by 0.001% of 1.8391515 - largest nonzero change 2.9576128e-05 ( 0.0029576128%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 944.9432
Clp0000I Optimal - objective value 944.9432
Clp0000I Optimal - objective value 944.9432
Coin0511I After Postsolve, objective 944.9432, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 944.9431959 - 0 iterations time 0.132, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0004I processed model has 396 rows, 407 columns (407 integer (407 of which binary)) and 21816 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 6.432%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 152 integers unsatisfied sum - 10.8962
Cbc0038I Pass   1: suminf.    1.72434 (106) obj. -244.91 iterations 68
Cbc0038I Pass   2: suminf.    1.72434 (106) obj. -244.91 iterations 0
Cbc0038I Pass   3: suminf.    1.31133 (87) obj. -199.903 iterations 19
Cbc0038I Pass   4: suminf.    0.88159 (65) obj. -147.938 iterations 22
Cbc0038I Pass   5: suminf.    0.60673 (49) obj. -128.285 iterations 16
Cbc0038I Pass   6: suminf.    0.27539 (25) obj. -101.657 iterations 24
Cbc0038I Pass   7: suminf.    0.07176 (7) obj. -75.9511 iterations 18
Cbc0038I Solution found of -66.0537
Cbc0038I Rounding solution of -107.504 is better than previous of -66.0537

Cbc0038I Before mini branch and bound, 252 integers at bound fixed and 0 continuous
Cbc0038I Full problem 396 rows 407 columns, reduced to 46 rows 49 columns
Cbc0038I Mini branch and bound improved solution from -107.504 to -693.046 (0.16 seconds)
Cbc0038I Round again with cutoff of -718.233
Cbc0038I Pass   8: suminf.    6.56959 (146) obj. -718.233 iterations 25
Cbc0038I Pass   9: suminf.    6.56959 (146) obj. -718.233 iterations 0
Cbc0038I Pass  10: suminf.    4.59038 (133) obj. -718.233 iterations 13
Cbc0038I Pass  11: suminf.    4.00344 (122) obj. -718.233 iterations 11
Cbc0038I Pass  12: suminf.    4.00344 (122) obj. -718.233 iterations 0
Cbc0038I Pass  13: suminf.    3.19155 (98) obj. -871.85 iterations 26
Cbc0038I Pass  14: suminf.    2.43470 (80) obj. -853.643 iterations 18
Cbc0038I Pass  15: suminf.    1.85951 (63) obj. -814.032 iterations 17
Cbc0038I Pass  16: suminf.    1.53423 (53) obj. -796.617 iterations 10
Cbc0038I Pass  17: suminf.    1.15263 (41) obj. -775.315 iterations 12
Cbc0038I Pass  18: suminf.    0.84206 (31) obj. -748.184 iterations 10
Cbc0038I Pass  19: suminf.    0.49117 (19) obj. -733.623 iterations 12
Cbc0038I Pass  20: suminf.    0.43915 (2) obj. -718.233 iterations 30
Cbc0038I Pass  21: suminf.    0.26265 (3) obj. -718.233 iterations 10
Cbc0038I Pass  22: suminf.    0.79084 (8) obj. -718.233 iterations 31
Cbc0038I Pass  23: suminf.    0.79084 (8) obj. -718.233 iterations 0
Cbc0038I Pass  24: suminf.    0.73388 (5) obj. -718.233 iterations 29
Cbc0038I Pass  25: suminf.    0.32063 (2) obj. -718.233 iterations 30
Cbc0038I Pass  26: suminf.    0.38199 (2) obj. -718.233 iterations 15
Cbc0038I Pass  27: suminf.    2.54320 (33) obj. -718.233 iterations 98
Cbc0038I Pass  28: suminf.    1.78067 (28) obj. -738.465 iterations 26
Cbc0038I Pass  29: suminf.    0.34889 (15) obj. -718.233 iterations 18
Cbc0038I Pass  30: suminf.    0.65213 (3) obj. -718.233 iterations 62
Cbc0038I Pass  31: suminf.    0.33767 (3) obj. -718.233 iterations 25
Cbc0038I Pass  32: suminf.    2.71659 (35) obj. -718.233 iterations 52
Cbc0038I Pass  33: suminf.    1.66623 (31) obj. -763.127 iterations 17
Cbc0038I Pass  34: suminf.    0.87380 (9) obj. -718.233 iterations 70
Cbc0038I Pass  35: suminf.    0.87380 (9) obj. -718.233 iterations 0
Cbc0038I Pass  36: suminf.    1.44663 (7) obj. -718.233 iterations 38
Cbc0038I Pass  37: suminf.    0.60914 (3) obj. -718.233 iterations 43
Cbc0038I Rounding solution of -706.316 is better than previous of -693.046

Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 396 rows 407 columns, reduced to 11 rows 14 columns
Cbc0038I Mini branch and bound did not improve solution (0.25 seconds)
Cbc0038I Round again with cutoff of -763.571
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 3
Cbc0038I Pass  37: suminf.    7.74717 (146) obj. -763.571 iterations 1
Cbc0038I Pass  38: suminf.    7.74717 (146) obj. -763.571 iterations 0
Cbc0038I Pass  39: suminf.    4.57674 (126) obj. -763.571 iterations 20
Cbc0038I Pass  40: suminf.    4.57674 (126) obj. -763.571 iterations 0
Cbc0038I Pass  41: suminf.    3.86516 (111) obj. -887.016 iterations 16
Cbc0038I Pass  42: suminf.    2.57772 (84) obj. -858.464 iterations 27
Cbc0038I Pass  43: suminf.    1.63113 (56) obj. -803.391 iterations 28
Cbc0038I Pass  44: suminf.    1.02740 (37) obj. -769.503 iterations 19
Cbc0038I Pass  45: suminf.    1.07894 (31) obj. -763.571 iterations 38
Cbc0038I Pass  46: suminf.    1.07894 (31) obj. -763.571 iterations 0
Cbc0038I Pass  47: suminf.    1.32842 (14) obj. -763.571 iterations 47
Cbc0038I Pass  48: suminf.    1.06554 (14) obj. -763.571 iterations 4
Cbc0038I Pass  49: suminf.    1.27563 (12) obj. -763.571 iterations 69
Cbc0038I Pass  50: suminf.    1.03028 (12) obj. -763.571 iterations 37
Cbc0038I Pass  51: suminf.    3.36319 (41) obj. -763.571 iterations 106
Cbc0038I Pass  52: suminf.    1.93258 (33) obj. -787.602 iterations 45
Cbc0038I Pass  53: suminf.    0.81992 (20) obj. -763.571 iterations 44
Cbc0038I Pass  54: suminf.    0.76762 (20) obj. -763.937 iterations 28
Cbc0038I Pass  55: suminf.    1.02383 (16) obj. -763.571 iterations 48
Cbc0038I Pass  56: suminf.    0.74401 (16) obj. -763.571 iterations 23
Cbc0038I Pass  57: suminf.    1.04150 (12) obj. -763.571 iterations 81
Cbc0038I Pass  58: suminf.    0.95747 (13) obj. -763.571 iterations 26
Cbc0038I Pass  59: suminf.    2.40312 (16) obj. -763.571 iterations 79
Cbc0038I Pass  60: suminf.    1.08251 (13) obj. -763.571 iterations 32
Cbc0038I Pass  61: suminf.    1.32012 (13) obj. -763.571 iterations 59
Cbc0038I Pass  62: suminf.    1.08223 (13) obj. -763.571 iterations 33
Cbc0038I Pass  63: suminf.    1.32012 (13) obj. -763.571 iterations 55
Cbc0038I Pass  64: suminf.    2.88395 (40) obj. -763.571 iterations 69
Cbc0038I Pass  65: suminf.    2.20323 (39) obj. -763.571 iterations 17
Cbc0038I Pass  66: suminf.    2.01005 (22) obj. -763.571 iterations 83
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 243 integers at bound fixed and 0 continuous
Cbc0038I Full problem 396 rows 407 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound did not improve solution (0.37 seconds)
Cbc0038I After 0.37 seconds - Feasibility pump exiting with objective of -706.316 - took 0.26 seconds
Cbc0012I Integer solution of -706.31567 found by feasibility pump after 0 iterations and 0 nodes (0.37 seconds)
Cbc0038I Full problem 396 rows 407 columns, reduced to 2 rows 3 columns
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 4 added rows had average density of 125.5
Cbc0013I At root node, 4 cuts changed objective from -944.92011 to -712.28868 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 194 row cuts average 2.0 elements, 117 column cuts (117 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2 row cuts average 249.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 167.5 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 4 row cuts average 183.5 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0001I Search completed - best objective -706.3156700000001, took 181 iterations and 0 nodes (0.46 seconds)
Cbc0035I Maximum depth 0, 147 variables fixed on reduced cost
Total time (CPU seconds):       0.45   (Wallclock seconds):       0.46

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 501 (-26) rows, 257 (-7) columns and 1484 (-61) elements
Clp1000I sum of infeasibilities 0.00029437 - average 5.87566e-07, 128 fixed columns
Coin0506I Presolve 233 (-268) rows, 121 (-136) columns and 682 (-802) elements
Clp0029I End of values pass after 121 iterations
Clp0014I Perturbing problem by 0.001% of 0.1655779 - largest nonzero change 0 ( 0%) - largest zero change 2.9004644e-05
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Coin0511I After Postsolve, objective 180.15811, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.1308531 - largest nonzero change 0 ( 0%) - largest zero change 2.9980352e-05
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Clp0000I Optimal - objective value 180.15811
Coin0511I After Postsolve, objective 180.15811, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 180.15811 - 0 iterations time 0.052, Presolve 0.00, Idiot 0.05

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 501 rows, 257 columns (256 integer (256 of which binary)) and 1484 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.377%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 72 integers unsatisfied sum - 10.8637
Cbc0038I Solution found of -4.93255
Cbc0038I Relaxing continuous gives -25.6232
Cbc0038I Before mini branch and bound, 184 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 140 rows 73 columns
Cbc0038I Mini branch and bound improved solution from -25.6232 to -107.054 (0.06 seconds)
Cbc0038I Round again with cutoff of -114.364
Cbc0038I Pass   1: suminf.    4.42201 (43) obj. -114.364 iterations 217
Cbc0038I Pass   2: suminf.    1.84779 (8) obj. -114.364 iterations 59
Cbc0038I Pass   3: suminf.    0.96799 (6) obj. -114.364 iterations 34
Cbc0038I Pass   4: suminf.    0.77652 (5) obj. -114.364 iterations 24
Cbc0038I Pass   5: suminf.    1.00189 (5) obj. -114.364 iterations 16
Cbc0038I Pass   6: suminf.    0.93773 (4) obj. -114.364 iterations 1
Cbc0038I Pass   7: suminf.    1.11330 (4) obj. -114.364 iterations 9
Cbc0038I Pass   8: suminf.    0.97161 (4) obj. -114.364 iterations 7
Cbc0038I Pass   9: suminf.    3.69614 (14) obj. -114.364 iterations 64
Cbc0038I Pass  10: suminf.    2.13991 (13) obj. -114.364 iterations 58
Cbc0038I Pass  11: suminf.    2.27465 (9) obj. -114.364 iterations 20
Cbc0038I Pass  12: suminf.    4.73046 (17) obj. -114.364 iterations 49
Cbc0038I Pass  13: suminf.    0.61720 (3) obj. -114.364 iterations 73
Cbc0038I Pass  14: suminf.    0.55313 (2) obj. -114.364 iterations 1
Cbc0038I Pass  15: suminf.    0.67594 (2) obj. -114.364 iterations 8
Cbc0038I Pass  16: suminf.    0.63200 (2) obj. -114.364 iterations 1
Cbc0038I Pass  17: suminf.    3.57968 (18) obj. -114.364 iterations 64
Cbc0038I Pass  18: suminf.    0.61720 (3) obj. -114.364 iterations 62
Cbc0038I Pass  19: suminf.    5.13809 (24) obj. -114.364 iterations 67
Cbc0038I Pass  20: suminf.    1.36566 (6) obj. -114.364 iterations 74
Cbc0038I Pass  21: suminf.    1.31620 (6) obj. -114.364 iterations 8
Cbc0038I Pass  22: suminf.    2.16134 (9) obj. -114.364 iterations 19
Cbc0038I Pass  23: suminf.    1.36566 (6) obj. -114.364 iterations 18
Cbc0038I Pass  24: suminf.    1.66781 (8) obj. -114.364 iterations 46
Cbc0038I Pass  25: suminf.    0.75915 (7) obj. -114.364 iterations 34
Cbc0038I Pass  26: suminf.    2.09922 (8) obj. -114.364 iterations 20
Cbc0038I Pass  27: suminf.    0.84903 (4) obj. -114.364 iterations 22
Cbc0038I Pass  28: suminf.    2.69067 (8) obj. -114.364 iterations 38
Cbc0038I Pass  29: suminf.    0.10018 (6) obj. -114.364 iterations 55
Cbc0038I Pass  30: suminf.    0.10018 (6) obj. -114.364 iterations 0
Cbc0038I Rounding solution of -109.811 is better than previous of -107.054

Cbc0038I Before mini branch and bound, 131 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 239 rows 125 columns
Cbc0038I Mini branch and bound improved solution from -109.811 to -120.081 (0.18 seconds)
Cbc0038I Round again with cutoff of -132.097
Cbc0038I Pass  30: suminf.    5.30562 (43) obj. -132.097 iterations 0
Cbc0038I Pass  31: suminf.    3.68121 (12) obj. -132.097 iterations 63
Cbc0038I Pass  32: suminf.    1.94254 (9) obj. -132.097 iterations 49
Cbc0038I Pass  33: suminf.    3.11871 (11) obj. -132.097 iterations 44
Cbc0038I Pass  34: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  35: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  36: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  37: suminf.    2.24663 (9) obj. -132.097 iterations 30
Cbc0038I Pass  38: suminf.    1.94254 (9) obj. -132.097 iterations 7
Cbc0038I Pass  39: suminf.    3.11871 (11) obj. -132.097 iterations 48
Cbc0038I Pass  40: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  41: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  42: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  43: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  44: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  45: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  46: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  47: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  48: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  49: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  50: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  51: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  52: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  53: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I Pass  54: suminf.    2.83962 (13) obj. -132.097 iterations 24
Cbc0038I Pass  55: suminf.    2.24663 (9) obj. -132.097 iterations 29
Cbc0038I Pass  56: suminf.    1.94254 (9) obj. -132.097 iterations 8
Cbc0038I Pass  57: suminf.    3.11871 (11) obj. -132.097 iterations 46
Cbc0038I Pass  58: suminf.    1.97853 (11) obj. -132.097 iterations 19
Cbc0038I Pass  59: suminf.    1.84025 (10) obj. -132.097 iterations 9
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 160 integers at bound fixed and 0 continuous
Cbc0038I Full problem 501 rows 257 columns, reduced to 185 rows 97 columns
Cbc0038I Mini branch and bound did not improve solution (0.26 seconds)
Cbc0038I After 0.26 seconds - Feasibility pump exiting with objective of -120.081 - took 0.23 seconds
Cbc0012I Integer solution of -120.08107 found by feasibility pump after 0 iterations and 0 nodes (0.26 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 147 rows 77 columns
Cbc0031I 34 added rows had average density of 106
Cbc0013I At root node, 34 cuts changed objective from -180.15811 to -163.86381 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 34619 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.487 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2597 row cuts average 252.3 elements, 0 column cuts (0 active)  in 0.373 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.027 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.101 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.361 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.024 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 128 row cuts average 245.7 elements, 0 column cuts (0 active)  in 0.186 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -120.08107 best solution, best possible -163.86381 (4.07 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 130 rows 69 columns
Cbc0010I After 43 nodes, 14 on tree, -120.08107 best solution, best possible -163.86381 (4.78 seconds)
Cbc0038I Full problem 501 rows 257 columns, reduced to 0 rows 0 columns
Cbc0001I Search completed - best objective -120.08107, took 20128 iterations and 106 nodes (5.05 seconds)
Cbc0032I Strong branching done 1242 times (34369 iterations), fathomed 6 nodes and fixed 22 variables
Cbc0035I Maximum depth 49, 283 variables fixed on reduced cost
Total time (CPU seconds):       4.98   (Wallclock seconds):       5.10

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 392 (-135) rows, 403 (-122) columns and 21270 (-14467) elements
Clp1000I sum of infeasibilities 6.0397e-05 - average 1.54074e-07, 223 fixed columns
Coin0506I Presolve 169 (-223) rows, 176 (-227) columns and 667 (-20603) elements
Clp0006I 0  Obj -54.381466 Primal inf 2.5855987e-05 (13) Dual inf 1.0000008e+10 (173)
Clp0029I End of values pass after 126 iterations
Clp0014I Perturbing problem by 0.001% of 0.14450618 - largest nonzero change 2.6703583e-05 ( 0.0024275985%) - largest zero change 2.9975962e-05
Clp0000I Optimal - objective value -39.166624
Clp0000I Optimal - objective value -39.166624
Coin0511I After Postsolve, objective -39.166624, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj -39.166624 Dual inf 343.4642 (151)
Clp0014I Perturbing problem by 0.001% of 1.8504302 - largest nonzero change 2.3058634e-05 ( 0.0015531604%) - largest zero change 2.982246e-05
Clp0000I Optimal - objective value 218.63009
Clp0000I Optimal - objective value 218.63009
Clp0000I Optimal - objective value 218.63009
Coin0511I After Postsolve, objective 218.63009, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 218.6300901 - 0 iterations time 0.192, Presolve 0.00, Idiot 0.19

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 392 rows, 403 columns (403 integer (403 of which binary)) and 21270 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 6.395%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 139 integers unsatisfied sum - 6.12075
Cbc0038I Pass   1: suminf.    2.52035 (108) obj. -185.928 iterations 70
Cbc0038I Pass   2: suminf.    1.93565 (80) obj. -180.183 iterations 38
Cbc0038I Pass   3: suminf.    1.30016 (66) obj. -137.265 iterations 14
Cbc0038I Pass   4: suminf.    0.55213 (42) obj. -89.8644 iterations 24
Cbc0038I Pass   5: suminf.    0.33061 (29) obj. -73.1563 iterations 13
Cbc0038I Pass   6: suminf.    0.14749 (14) obj. -53.3988 iterations 15
Cbc0038I Solution found of -33.6105
Cbc0038I Before mini branch and bound, 263 integers at bound fixed and 0 continuous
Cbc0038I Full problem 392 rows 403 columns, reduced to 60 rows 61 columns
Cbc0038I Mini branch and bound improved solution from -33.6105 to -41.7026 (0.16 seconds)
Cbc0038I Round again with cutoff of -59.376
Cbc0038I Pass   7: suminf.    2.52035 (108) obj. -185.928 iterations 0
Cbc0038I Pass   8: suminf.    1.93565 (80) obj. -180.183 iterations 11
Cbc0038I Pass   9: suminf.    0.92875 (56) obj. -113.173 iterations 24
Cbc0038I Pass  10: suminf.    0.47520 (38) obj. -84.9605 iterations 18
Cbc0038I Pass  11: suminf.    0.24146 (22) obj. -66.2455 iterations 16
Cbc0038I Pass  12: suminf.    1.29666 (54) obj. -59.376 iterations 62
Cbc0038I Pass  13: suminf.    1.28529 (53) obj. -59.376 iterations 4
Cbc0038I Pass  14: suminf.    1.31016 (43) obj. -59.376 iterations 52
Cbc0038I Pass  15: suminf.    1.31016 (43) obj. -59.376 iterations 1
Cbc0038I Pass  16: suminf.    1.45223 (32) obj. -59.376 iterations 66
Cbc0038I Pass  17: suminf.    1.45223 (32) obj. -59.376 iterations 0
Cbc0038I Pass  18: suminf.    4.86878 (29) obj. -59.376 iterations 69
Cbc0038I Pass  19: suminf.    2.59683 (28) obj. -59.376 iterations 13
Cbc0038I Pass  20: suminf.    2.59683 (28) obj. -59.376 iterations 0
Cbc0038I Pass  21: suminf.    5.18254 (32) obj. -59.376 iterations 39
Cbc0038I Pass  22: suminf.    4.57689 (33) obj. -59.376 iterations 10
Cbc0038I Pass  23: suminf.    2.59683 (28) obj. -59.376 iterations 22
Cbc0038I Pass  24: suminf.    2.49632 (42) obj. -59.376 iterations 76
Cbc0038I Pass  25: suminf.    1.39444 (41) obj. -59.376 iterations 43
Cbc0038I Pass  26: suminf.    2.63371 (33) obj. -59.376 iterations 46
Cbc0038I Pass  27: suminf.    1.83193 (34) obj. -59.376 iterations 38
Cbc0038I Pass  28: suminf.    2.11431 (31) obj. -59.376 iterations 53
Cbc0038I Pass  29: suminf.    2.08285 (32) obj. -59.376 iterations 30
Cbc0038I Pass  30: suminf.    1.89432 (30) obj. -59.376 iterations 37
Cbc0038I Pass  31: suminf.    1.66234 (28) obj. -59.376 iterations 34
Cbc0038I Pass  32: suminf.    1.58633 (27) obj. -59.376 iterations 12
Cbc0038I Pass  33: suminf.    1.69731 (17) obj. -59.376 iterations 41
Cbc0038I Pass  34: suminf.    1.67501 (18) obj. -59.376 iterations 20
Cbc0038I Pass  35: suminf.    1.68187 (15) obj. -59.376 iterations 66
Cbc0038I Pass  36: suminf.    1.42430 (16) obj. -59.376 iterations 33
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 392 rows 403 columns, reduced to 104 rows 110 columns
Cbc0038I Mini branch and bound improved solution from -41.7026 to -74.2206 (0.32 seconds)
Cbc0038I Round again with cutoff of -103.064
Cbc0038I Pass  36: suminf.    2.52035 (108) obj. -185.928 iterations 0
Cbc0038I Pass  37: suminf.    1.93565 (80) obj. -180.183 iterations 11
Cbc0038I Pass  38: suminf.    1.06758 (60) obj. -127.653 iterations 20
Cbc0038I Pass  39: suminf.    1.37991 (95) obj. -103.064 iterations 48
Cbc0038I Pass  40: suminf.    2.01766 (75) obj. -103.064 iterations 24
Cbc0038I Pass  41: suminf.    1.80401 (74) obj. -103.064 iterations 25
Cbc0038I Pass  42: suminf.    1.74787 (75) obj. -103.064 iterations 15
Cbc0038I Pass  43: suminf.    2.13779 (70) obj. -103.064 iterations 37
Cbc0038I Pass  44: suminf.    1.61247 (68) obj. -103.064 iterations 12
Cbc0038I Pass  45: suminf.    2.10096 (57) obj. -103.064 iterations 59
Cbc0038I Pass  46: suminf.    2.10096 (57) obj. -103.064 iterations 34
Cbc0038I Pass  47: suminf.    2.18031 (54) obj. -103.064 iterations 45
Cbc0038I Pass  48: suminf.    2.01708 (54) obj. -103.064 iterations 37
Cbc0038I Pass  49: suminf.    2.27670 (54) obj. -103.064 iterations 35
Cbc0038I Pass  50: suminf.    2.12249 (54) obj. -103.064 iterations 39
Cbc0038I Pass  51: suminf.    2.44619 (50) obj. -103.064 iterations 45
Cbc0038I Pass  52: suminf.    2.19198 (49) obj. -103.064 iterations 10
Cbc0038I Pass  53: suminf.    1.70285 (49) obj. -103.064 iterations 18
Cbc0038I Pass  54: suminf.    2.19198 (49) obj. -103.064 iterations 34
Cbc0038I Pass  55: suminf.    2.59380 (58) obj. -103.064 iterations 73
Cbc0038I Pass  56: suminf.    2.43449 (56) obj. -103.064 iterations 12
Cbc0038I Pass  57: suminf.    2.09890 (56) obj. -103.064 iterations 52
Cbc0038I Pass  58: suminf.    2.09890 (56) obj. -103.064 iterations 23
Cbc0038I Pass  59: suminf.    2.26503 (47) obj. -103.064 iterations 57
Cbc0038I Pass  60: suminf.    2.26503 (47) obj. -103.064 iterations 20
Cbc0038I Pass  61: suminf.    2.06194 (42) obj. -103.064 iterations 44
Cbc0038I Pass  62: suminf.    1.98686 (43) obj. -103.064 iterations 14
Cbc0038I Pass  63: suminf.    3.04307 (42) obj. -103.064 iterations 36
Cbc0038I Pass  64: suminf.    2.34771 (41) obj. -103.064 iterations 30
Cbc0038I Pass  65: suminf.    2.34771 (41) obj. -103.064 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 252 integers at bound fixed and 0 continuous
Cbc0038I Full problem 392 rows 403 columns, reduced to 72 rows 74 columns
Cbc0038I Mini branch and bound did not improve solution (0.42 seconds)
Cbc0038I After 0.42 seconds - Feasibility pump exiting with objective of -74.2206 - took 0.31 seconds
Cbc0012I Integer solution of -74.22064 found by feasibility pump after 0 iterations and 0 nodes (0.42 seconds)
Cbc0038I Full problem 392 rows 403 columns, reduced to 44 rows 46 columns
Cbc0031I 161 added rows had average density of 74.354037
Cbc0013I At root node, 161 cuts changed objective from -218.43587 to -142.04535 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 35875 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.613 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 3465 row cuts average 364.7 elements, 0 column cuts (0 active)  in 1.677 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 917 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.106 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6035 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.283 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.089 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1406 row cuts average 10.4 elements, 0 column cuts (0 active)  in 1.095 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 375 row cuts average 240.7 elements, 0 column cuts (0 active)  in 0.288 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 508 row cuts average 47.7 elements, 0 column cuts (0 active)  in 1.049 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -74.22064 best solution, best possible -142.04535 (10.71 seconds)
Cbc0010I After 1 nodes, 2 on tree, -74.22064 best solution, best possible -142.04535 (11.65 seconds)
Cbc0012I Integer solution of -76.69706 found by DiveCoefficient after 16368 iterations and 2 nodes (11.82 seconds)
Cbc0012I Integer solution of -78.021193 found by DiveCoefficient after 16389 iterations and 3 nodes (11.85 seconds)
Cbc0012I Integer solution of -85.830403 found by rounding after 16470 iterations and 4 nodes (11.90 seconds)
Cbc0012I Integer solution of -105.05977 found by DiveCoefficient after 16475 iterations and 4 nodes (11.94 seconds)
Cbc0012I Integer solution of -120.08107 found by DiveCoefficient after 16523 iterations and 8 nodes (12.04 seconds)
Cbc0010I After 20 nodes, 7 on tree, -120.08107 best solution, best possible -142.04535 (12.36 seconds)
Cbc0010I After 32 nodes, 7 on tree, -120.08107 best solution, best possible -142.04535 (13.07 seconds)
Cbc0038I Full problem 392 rows 403 columns, reduced to 19 rows 23 columns
Cbc0010I After 51 nodes, 2 on tree, -120.08107 best solution, best possible -142.04535 (14.19 seconds)
Cbc0010I After 53 nodes, 4 on tree, -120.08107 best solution, best possible -142.04535 (15.65 seconds)
Cbc0010I After 54 nodes, 5 on tree, -120.08107 best solution, best possible -142.04535 (16.62 seconds)
Cbc0010I After 56 nodes, 7 on tree, -120.08107 best solution, best possible -142.04535 (17.65 seconds)
Cbc0010I After 60 nodes, 7 on tree, -120.08107 best solution, best possible -142.04535 (18.91 seconds)
Cbc0010I After 75 nodes, 4 on tree, -120.08107 best solution, best possible -142.04535 (20.11 seconds)
Cbc0010I After 78 nodes, 3 on tree, -120.08107 best solution, best possible -142.04535 (21.40 seconds)
Cbc0010I After 80 nodes, 5 on tree, -120.08107 best solution, best possible -142.04535 (22.16 seconds)
Cbc0010I After 89 nodes, 7 on tree, -120.08107 best solution, best possible -142.04535 (22.90 seconds)
Cbc0010I After 90 nodes, 7 on tree, -120.08107 best solution, best possible -142.04535 (23.65 seconds)
Cbc0038I Full problem 392 rows 403 columns, reduced to 191 rows 197 columns
Cbc0010I After 92 nodes, 7 on tree, -120.08107 best solution, best possible -142.04535 (24.91 seconds)
Cbc0010I After 108 nodes, 8 on tree, -120.08107 best solution, best possible -142.04535 (25.63 seconds)
Cbc0001I Search completed - best objective -120.08107, took 30821 iterations and 132 nodes (26.27 seconds)
Cbc0032I Strong branching done 1426 times (37452 iterations), fathomed 4 nodes and fixed 4 variables
Cbc0035I Maximum depth 18, 556 variables fixed on reduced cost
Total time (CPU seconds):       25.44   (Wallclock seconds):       26.37

