Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 61 (-17) columns and 338 (-115) elements
Clp1000I sum of infeasibilities 5.3942e-05 - average 4.85964e-07, 35 fixed columns
Coin0506I Presolve 31 (-80) rows, 19 (-42) columns and 94 (-244) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 659.28216
Clp0000I Optimal - objective value 659.28216
Coin0511I After Postsolve, objective 659.28216, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 659.28216
Clp0000I Optimal - objective value 659.28216
Clp0000I Optimal - objective value 659.28216
Coin0511I After Postsolve, objective 659.28216, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 659.2821617 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 61 columns (60 integer (60 of which binary)) and 344 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.91223
Cbc0038I Pass   1: suminf.    0.78349 (7) obj. -561.521 iterations 20
Cbc0038I Pass   2: suminf.    0.78349 (7) obj. -561.521 iterations 0
Cbc0038I Solution found of -99.3962
Cbc0038I Relaxing continuous gives -99.3962
Cbc0038I Rounding solution of -534.121 is better than previous of -99.3962

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 61 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -534.121 to -621.483 (0.01 seconds)
Cbc0038I Round again with cutoff of -625.263
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.03609 (6) obj. -625.263 iterations 4
Cbc0038I Pass   4: suminf.    1.32896 (4) obj. -625.263 iterations 8
Cbc0038I Pass   5: suminf.    1.56864 (4) obj. -625.263 iterations 8
Cbc0038I Pass   6: suminf.    0.73605 (5) obj. -625.263 iterations 4
Cbc0038I Pass   7: suminf.    2.19301 (5) obj. -625.263 iterations 8
Cbc0038I Pass   8: suminf.    0.73605 (5) obj. -625.263 iterations 6
Cbc0038I Pass   9: suminf.    0.97880 (6) obj. -625.263 iterations 9
Cbc0038I Pass  10: suminf.    0.97880 (6) obj. -625.263 iterations 2
Cbc0038I Pass  11: suminf.    1.33710 (7) obj. -625.263 iterations 16
Cbc0038I Pass  12: suminf.    0.29042 (6) obj. -625.263 iterations 7
Cbc0038I Pass  13: suminf.    2.23206 (5) obj. -625.263 iterations 13
Cbc0038I Pass  14: suminf.    1.56864 (4) obj. -625.263 iterations 7
Cbc0038I Pass  15: suminf.    0.73605 (5) obj. -625.263 iterations 4
Cbc0038I Pass  16: suminf.    2.19301 (5) obj. -625.263 iterations 10
Cbc0038I Pass  17: suminf.    1.32896 (4) obj. -625.263 iterations 7
Cbc0038I Pass  18: suminf.    1.61097 (5) obj. -625.263 iterations 8
Cbc0038I Pass  19: suminf.    1.22611 (8) obj. -625.263 iterations 13
Cbc0038I Pass  20: suminf.    1.13090 (7) obj. -625.263 iterations 8
Cbc0038I Pass  21: suminf.    4.02611 (9) obj. -625.263 iterations 17
Cbc0038I Pass  22: suminf.    2.03424 (7) obj. -625.263 iterations 9
Cbc0038I Pass  23: suminf.    1.45828 (6) obj. -625.263 iterations 2
Cbc0038I Pass  24: suminf.    0.82576 (6) obj. -625.263 iterations 2
Cbc0038I Pass  25: suminf.    1.95600 (7) obj. -625.263 iterations 7
Cbc0038I Pass  26: suminf.    1.46236 (6) obj. -625.263 iterations 4
Cbc0038I Pass  27: suminf.    0.92215 (5) obj. -625.263 iterations 2
Cbc0038I Pass  28: suminf.    0.58887 (5) obj. -625.263 iterations 2
Cbc0038I Pass  29: suminf.    0.98915 (6) obj. -625.263 iterations 3
Cbc0038I Pass  30: suminf.    0.58887 (5) obj. -625.263 iterations 3
Cbc0038I Pass  31: suminf.    1.95600 (7) obj. -625.263 iterations 9
Cbc0038I Pass  32: suminf.    1.46236 (6) obj. -625.263 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 61 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -621.483 - took 0.01 seconds
Cbc0012I Integer solution of -621.4832 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 111 rows 61 columns, reduced to 18 rows 12 columns
Cbc0031I 5 added rows had average density of 14.2
Cbc0013I At root node, 5 cuts changed objective from -659.28216 to -650.17055 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 2.6 elements, 1 column cuts (1 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -621.4831999999999, took 24 iterations and 0 nodes (0.03 seconds)
Cbc0032I Strong branching done 10 times (54 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.03   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-66) rows, 97 (-55) columns and 1452 (-1851) elements
Clp1000I sum of infeasibilities 5.37356e-08 - average 6.10632e-10, 48 fixed columns
Coin0506I Presolve 48 (-40) rows, 49 (-48) columns and 312 (-1140) elements
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 7.9838589 - largest nonzero change 1.5567036e-05 ( 0.00076266555%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 686.25266
Clp0000I Optimal - objective value 686.25266
Coin0511I After Postsolve, objective 686.25266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0931085 - largest nonzero change 1.1894204e-05 ( 0.00076266555%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 686.25266
Clp0000I Optimal - objective value 686.25266
Clp0000I Optimal - objective value 686.25266
Coin0511I After Postsolve, objective 686.25266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 686.2526587 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 97 columns (97 integer (97 of which binary)) and 1460 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.00145
Cbc0038I Pass   1: suminf.    1.23229 (22) obj. -533.995 iterations 22
Cbc0038I Pass   2: suminf.    0.15771 (5) obj. -508.799 iterations 17
Cbc0038I Solution found of -503.956
Cbc0038I Rounding solution of -513.175 is better than previous of -503.956

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 97 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -513.175 to -621.483 (0.03 seconds)
Cbc0038I Round again with cutoff of -627.181
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.85121 (26) obj. -627.181 iterations 11
Cbc0038I Pass   4: suminf.    1.85121 (26) obj. -627.181 iterations 3
Cbc0038I Pass   5: suminf.    1.66335 (18) obj. -627.181 iterations 24
Cbc0038I Pass   6: suminf.    1.45518 (26) obj. -627.181 iterations 7
Cbc0038I Pass   7: suminf.    1.77497 (8) obj. -627.181 iterations 25
Cbc0038I Pass   8: suminf.    1.52030 (7) obj. -627.181 iterations 5
Cbc0038I Pass   9: suminf.    2.35030 (8) obj. -627.181 iterations 11
Cbc0038I Pass  10: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  11: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  12: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I Pass  13: suminf.    1.43760 (4) obj. -627.181 iterations 1
Cbc0038I Pass  14: suminf.    2.35030 (8) obj. -627.181 iterations 9
Cbc0038I Pass  15: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  16: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  17: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I Pass  18: suminf.    1.43760 (4) obj. -627.181 iterations 1
Cbc0038I Pass  19: suminf.    2.35030 (8) obj. -627.181 iterations 9
Cbc0038I Pass  20: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  21: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  22: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I Pass  23: suminf.    1.43760 (4) obj. -627.181 iterations 1
Cbc0038I Pass  24: suminf.    2.35030 (8) obj. -627.181 iterations 9
Cbc0038I Pass  25: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  26: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  27: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I Pass  28: suminf.    1.43760 (4) obj. -627.181 iterations 1
Cbc0038I Pass  29: suminf.    2.35030 (8) obj. -627.181 iterations 9
Cbc0038I Pass  30: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  31: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  32: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 97 columns, reduced to 36 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -621.483 - took 0.02 seconds
Cbc0012I Integer solution of -621.4832 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 88 rows 97 columns, reduced to 15 rows 15 columns
Cbc0031I 13 added rows had average density of 4.5384615
Cbc0013I At root node, 38 cuts changed objective from -678.45745 to -621.4832 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 135 row cuts average 8.6 elements, 22 column cuts (22 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -621.4831999999999, took 72 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.07   (Wallclock seconds):       0.10

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 111 (-44) rows, 61 (-17) columns and 338 (-115) elements
Clp1000I sum of infeasibilities 5.3942e-05 - average 4.85964e-07, 35 fixed columns
Coin0506I Presolve 31 (-80) rows, 19 (-42) columns and 94 (-244) elements
Clp0029I End of values pass after 19 iterations
Clp0000I Optimal - objective value 659.28216
Clp0000I Optimal - objective value 659.28216
Coin0511I After Postsolve, objective 659.28216, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 659.28216
Clp0000I Optimal - objective value 659.28216
Clp0000I Optimal - objective value 659.28216
Coin0511I After Postsolve, objective 659.28216, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 659.2821617 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 111 rows, 61 columns (60 integer (60 of which binary)) and 344 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.599%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 11 integers unsatisfied sum - 3.91223
Cbc0038I Pass   1: suminf.    0.78349 (7) obj. -561.521 iterations 20
Cbc0038I Pass   2: suminf.    0.78349 (7) obj. -561.521 iterations 0
Cbc0038I Solution found of -99.3962
Cbc0038I Relaxing continuous gives -99.3962
Cbc0038I Rounding solution of -534.121 is better than previous of -99.3962

Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 61 columns, reduced to 22 rows 13 columns
Cbc0038I Mini branch and bound improved solution from -534.121 to -621.483 (0.01 seconds)
Cbc0038I Round again with cutoff of -625.263
Cbc0038I Reduced cost fixing fixed 27 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.03609 (6) obj. -625.263 iterations 4
Cbc0038I Pass   4: suminf.    1.32896 (4) obj. -625.263 iterations 8
Cbc0038I Pass   5: suminf.    1.56864 (4) obj. -625.263 iterations 8
Cbc0038I Pass   6: suminf.    0.73605 (5) obj. -625.263 iterations 4
Cbc0038I Pass   7: suminf.    2.19301 (5) obj. -625.263 iterations 8
Cbc0038I Pass   8: suminf.    0.73605 (5) obj. -625.263 iterations 6
Cbc0038I Pass   9: suminf.    0.97880 (6) obj. -625.263 iterations 9
Cbc0038I Pass  10: suminf.    0.97880 (6) obj. -625.263 iterations 2
Cbc0038I Pass  11: suminf.    1.33710 (7) obj. -625.263 iterations 16
Cbc0038I Pass  12: suminf.    0.29042 (6) obj. -625.263 iterations 7
Cbc0038I Pass  13: suminf.    2.23206 (5) obj. -625.263 iterations 13
Cbc0038I Pass  14: suminf.    1.56864 (4) obj. -625.263 iterations 7
Cbc0038I Pass  15: suminf.    0.73605 (5) obj. -625.263 iterations 4
Cbc0038I Pass  16: suminf.    2.19301 (5) obj. -625.263 iterations 10
Cbc0038I Pass  17: suminf.    1.32896 (4) obj. -625.263 iterations 7
Cbc0038I Pass  18: suminf.    1.61097 (5) obj. -625.263 iterations 8
Cbc0038I Pass  19: suminf.    1.22611 (8) obj. -625.263 iterations 13
Cbc0038I Pass  20: suminf.    1.13090 (7) obj. -625.263 iterations 8
Cbc0038I Pass  21: suminf.    4.02611 (9) obj. -625.263 iterations 17
Cbc0038I Pass  22: suminf.    2.03424 (7) obj. -625.263 iterations 9
Cbc0038I Pass  23: suminf.    1.45828 (6) obj. -625.263 iterations 2
Cbc0038I Pass  24: suminf.    0.82576 (6) obj. -625.263 iterations 2
Cbc0038I Pass  25: suminf.    1.95600 (7) obj. -625.263 iterations 7
Cbc0038I Pass  26: suminf.    1.46236 (6) obj. -625.263 iterations 4
Cbc0038I Pass  27: suminf.    0.92215 (5) obj. -625.263 iterations 2
Cbc0038I Pass  28: suminf.    0.58887 (5) obj. -625.263 iterations 2
Cbc0038I Pass  29: suminf.    0.98915 (6) obj. -625.263 iterations 3
Cbc0038I Pass  30: suminf.    0.58887 (5) obj. -625.263 iterations 3
Cbc0038I Pass  31: suminf.    1.95600 (7) obj. -625.263 iterations 9
Cbc0038I Pass  32: suminf.    1.46236 (6) obj. -625.263 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 111 rows 61 columns, reduced to 24 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -621.483 - took 0.03 seconds
Cbc0012I Integer solution of -621.4832 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 111 rows 61 columns, reduced to 18 rows 12 columns
Cbc0031I 5 added rows had average density of 14.2
Cbc0013I At root node, 5 cuts changed objective from -659.28216 to -650.17055 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 27 row cuts average 2.6 elements, 1 column cuts (1 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 60.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0001I Search completed - best objective -621.4831999999999, took 24 iterations and 0 nodes (0.03 seconds)
Cbc0032I Strong branching done 10 times (54 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.03

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 88 (-67) rows, 97 (-56) columns and 1452 (-1852) elements
Clp1000I sum of infeasibilities 5.37356e-08 - average 6.10632e-10, 48 fixed columns
Coin0506I Presolve 48 (-40) rows, 49 (-48) columns and 312 (-1140) elements
Clp0029I End of values pass after 49 iterations
Clp0014I Perturbing problem by 0.001% of 7.9838589 - largest nonzero change 1.5567036e-05 ( 0.00076266555%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 686.25266
Clp0000I Optimal - objective value 686.25266
Coin0511I After Postsolve, objective 686.25266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0931085 - largest nonzero change 1.1894204e-05 ( 0.00076266555%) - largest zero change 2.9522154e-05
Clp0000I Optimal - objective value 686.25266
Clp0000I Optimal - objective value 686.25266
Clp0000I Optimal - objective value 686.25266
Coin0511I After Postsolve, objective 686.25266, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 686.2526587 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 88 rows, 97 columns (97 integer (97 of which binary)) and 1460 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.158%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 37 integers unsatisfied sum - 4.00145
Cbc0038I Pass   1: suminf.    1.23229 (22) obj. -533.995 iterations 22
Cbc0038I Pass   2: suminf.    0.15771 (5) obj. -508.799 iterations 17
Cbc0038I Solution found of -503.956
Cbc0038I Rounding solution of -513.175 is better than previous of -503.956

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 97 columns, reduced to 15 rows 15 columns
Cbc0038I Mini branch and bound improved solution from -513.175 to -621.483 (0.02 seconds)
Cbc0038I Round again with cutoff of -627.181
Cbc0038I Reduced cost fixing fixed 17 variables on major pass 2
Cbc0038I Pass   3: suminf.    1.85121 (26) obj. -627.181 iterations 11
Cbc0038I Pass   4: suminf.    1.85121 (26) obj. -627.181 iterations 3
Cbc0038I Pass   5: suminf.    1.66335 (18) obj. -627.181 iterations 24
Cbc0038I Pass   6: suminf.    1.45518 (26) obj. -627.181 iterations 7
Cbc0038I Pass   7: suminf.    1.77497 (8) obj. -627.181 iterations 25
Cbc0038I Pass   8: suminf.    1.52030 (7) obj. -627.181 iterations 5
Cbc0038I Pass   9: suminf.    2.35030 (8) obj. -627.181 iterations 11
Cbc0038I Pass  10: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  11: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  12: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I Pass  13: suminf.    1.43760 (4) obj. -627.181 iterations 1
Cbc0038I Pass  14: suminf.    2.35030 (8) obj. -627.181 iterations 9
Cbc0038I Pass  15: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  16: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  17: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I Pass  18: suminf.    1.43760 (4) obj. -627.181 iterations 1
Cbc0038I Pass  19: suminf.    2.35030 (8) obj. -627.181 iterations 9
Cbc0038I Pass  20: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  21: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  22: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I Pass  23: suminf.    1.43760 (4) obj. -627.181 iterations 1
Cbc0038I Pass  24: suminf.    2.35030 (8) obj. -627.181 iterations 9
Cbc0038I Pass  25: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  26: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  27: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I Pass  28: suminf.    1.43760 (4) obj. -627.181 iterations 1
Cbc0038I Pass  29: suminf.    2.35030 (8) obj. -627.181 iterations 9
Cbc0038I Pass  30: suminf.    0.72037 (6) obj. -627.181 iterations 7
Cbc0038I Pass  31: suminf.    0.72037 (6) obj. -627.181 iterations 4
Cbc0038I Pass  32: suminf.    1.66317 (5) obj. -627.181 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 88 rows 97 columns, reduced to 36 rows 37 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -621.483 - took 0.02 seconds
Cbc0012I Integer solution of -621.4832 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 88 rows 97 columns, reduced to 15 rows 15 columns
Cbc0031I 13 added rows had average density of 4.5384615
Cbc0013I At root node, 38 cuts changed objective from -678.45745 to -621.4832 in 2 passes
Cbc0014I Cut generator 0 (Probing) - 135 row cuts average 8.6 elements, 22 column cuts (22 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 6 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 12 row cuts average 22.6 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 39 row cuts average 22.5 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 7 row cuts average 34.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0001I Search completed - best objective -621.4831999999999, took 72 iterations and 0 nodes (0.09 seconds)
Cbc0035I Maximum depth 0, 25 variables fixed on reduced cost
Total time (CPU seconds):       0.06   (Wallclock seconds):       0.09

