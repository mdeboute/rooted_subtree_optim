Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 494 (-33) rows, 255 (-9) columns and 1473 (-72) elements
Clp1000I sum of infeasibilities 4.23735e-05 - average 8.57763e-08, 165 fixed columns
Coin0506I Presolve 157 (-337) rows, 84 (-171) columns and 466 (-1007) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 2.8564898 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Coin0511I After Postsolve, objective 252.35347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13632852 - largest nonzero change 0 ( 0%) - largest zero change 2.9805748e-05
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Coin0511I After Postsolve, objective 252.35347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 252.3534684 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 494 rows, 255 columns (254 integer (254 of which binary)) and 1473 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.378%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 10.051
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.8236 iterations 164
Cbc0038I Solution found of -18.8236
Cbc0038I Relaxing continuous gives -18.8236
Cbc0038I Rounding solution of -50.1522 is better than previous of -18.8236

Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 255 columns, reduced to 89 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -50.1522 to -171.684 (0.06 seconds)
Cbc0038I Round again with cutoff of -179.751
Cbc0038I Pass   2: suminf.    3.96261 (10) obj. -179.751 iterations 38
Cbc0038I Pass   3: suminf.    2.32988 (7) obj. -179.751 iterations 21
Cbc0038I Pass   4: suminf.    1.64975 (5) obj. -179.751 iterations 19
Cbc0038I Pass   5: suminf.    1.44003 (5) obj. -179.751 iterations 10
Cbc0038I Pass   6: suminf.    1.44003 (5) obj. -179.751 iterations 9
Cbc0038I Pass   7: suminf.    1.42906 (5) obj. -179.751 iterations 26
Cbc0038I Pass   8: suminf.    1.28833 (5) obj. -179.751 iterations 11
Cbc0038I Pass   9: suminf.    1.01425 (4) obj. -179.751 iterations 23
Cbc0038I Pass  10: suminf.    0.96908 (4) obj. -179.751 iterations 2
Cbc0038I Pass  11: suminf.    1.31152 (5) obj. -179.751 iterations 17
Cbc0038I Pass  12: suminf.    6.16785 (21) obj. -179.751 iterations 60
Cbc0038I Pass  13: suminf.    3.45052 (17) obj. -179.751 iterations 59
Cbc0038I Pass  14: suminf.    3.45052 (17) obj. -179.751 iterations 0
Cbc0038I Pass  15: suminf.    1.89403 (6) obj. -179.751 iterations 29
Cbc0038I Pass  16: suminf.    1.52913 (7) obj. -179.751 iterations 15
Cbc0038I Pass  17: suminf.    1.50952 (5) obj. -179.751 iterations 19
Cbc0038I Pass  18: suminf.    1.00939 (5) obj. -179.751 iterations 2
Cbc0038I Pass  19: suminf.    1.00939 (5) obj. -179.751 iterations 0
Cbc0038I Pass  20: suminf.    1.15275 (5) obj. -179.751 iterations 15
Cbc0038I Pass  21: suminf.    1.08110 (4) obj. -179.751 iterations 7
Cbc0038I Pass  22: suminf.    2.08639 (5) obj. -179.751 iterations 9
Cbc0038I Pass  23: suminf.    1.85857 (9) obj. -179.751 iterations 10
Cbc0038I Pass  24: suminf.    1.49942 (5) obj. -179.751 iterations 13
Cbc0038I Pass  25: suminf.    2.30472 (8) obj. -179.751 iterations 47
Cbc0038I Pass  26: suminf.    1.15791 (8) obj. -179.751 iterations 19
Cbc0038I Pass  27: suminf.    2.67181 (7) obj. -179.751 iterations 24
Cbc0038I Pass  28: suminf.    1.72453 (8) obj. -179.751 iterations 14
Cbc0038I Pass  29: suminf.    0.59156 (3) obj. -179.751 iterations 12
Cbc0038I Pass  30: suminf.    1.08756 (3) obj. -179.751 iterations 7
Cbc0038I Pass  31: suminf.    0.75799 (3) obj. -179.751 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 187 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 255 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound did not improve solution (0.13 seconds)
Cbc0038I After 0.13 seconds - Feasibility pump exiting with objective of -171.684 - took 0.11 seconds
Cbc0012I Integer solution of -171.68407 found by feasibility pump after 0 iterations and 0 nodes (0.13 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 89 rows 51 columns
Cbc0012I Integer solution of -186.23737 found by RINS after 0 iterations and 0 nodes (0.19 seconds)
Cbc0031I 29 added rows had average density of 106.75862
Cbc0013I At root node, 29 cuts changed objective from -252.35347 to -230.74318 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16292 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.376 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1803 row cuts average 250.6 elements, 0 column cuts (0 active)  in 0.268 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 192 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.192 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 244.7 elements, 0 column cuts (0 active)  in 0.126 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -186.23737 best solution, best possible -230.74318 (2.58 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 102 rows 59 columns
Cbc0010I After 48 nodes, 11 on tree, -186.23737 best solution, best possible -230.74318 (3.28 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 8 rows 7 columns
Cbc0010I After 162 nodes, 7 on tree, -186.23737 best solution, best possible -199.00237 (3.99 seconds)
Cbc0001I Search completed - best objective -186.23737, took 18629 iterations and 188 nodes (4.04 seconds)
Cbc0032I Strong branching done 1792 times (44674 iterations), fathomed 19 nodes and fixed 91 variables
Cbc0035I Maximum depth 36, 1208 variables fixed on reduced cost
Total time (CPU seconds):       3.97   (Wallclock seconds):       4.07

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 373 (-153) rows, 387 (-137) columns and 18210 (-17526) elements
Clp1000I sum of infeasibilities 1.49303e-05 - average 4.00276e-08, 259 fixed columns
Coin0506I Presolve 104 (-269) rows, 122 (-265) columns and 436 (-17774) elements
Clp0006I 0  Obj 80.197434 Dual inf 15325.376 (119)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.16675887 - largest nonzero change 2.8587626e-05 ( 0.0025988751%) - largest zero change 2.9901363e-05
Clp0000I Optimal - objective value 98.308783
Clp0000I Optimal - objective value 98.308783
Coin0511I After Postsolve, objective 98.308783, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 98.308783 Dual inf 258.41204 (138)
Clp0014I Perturbing problem by 0.001% of 1.6883592 - largest nonzero change 2.9555612e-05 ( 0.0025988751%) - largest zero change 2.994637e-05
Clp0000I Optimal - objective value 295.17079
Clp0000I Optimal - objective value 295.17079
Clp0000I Optimal - objective value 295.17079
Coin0511I After Postsolve, objective 295.17079, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 295.1707896 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.11

Starting MIP optimization
Cgl0004I processed model has 373 rows, 387 columns (387 integer (387 of which binary)) and 18210 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 139 integers unsatisfied sum - 8.43678
Cbc0038I Pass   1: suminf.    2.76165 (103) obj. -221.95 iterations 59
Cbc0038I Pass   2: suminf.    2.76165 (103) obj. -221.95 iterations 1
Cbc0038I Pass   3: suminf.    2.21273 (89) obj. -175.886 iterations 14
Cbc0038I Pass   4: suminf.    1.27018 (60) obj. -138.176 iterations 29
Cbc0038I Pass   5: suminf.    0.70227 (37) obj. -109.889 iterations 23
Cbc0038I Pass   6: suminf.    0.25143 (15) obj. -86.3814 iterations 22
Cbc0038I Solution found of -69.6649
Cbc0038I Rounding solution of -120.166 is better than previous of -69.6649

Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 373 rows 387 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -137.646
Cbc0038I Pass   7: suminf.    2.76165 (103) obj. -221.95 iterations 0
Cbc0038I Pass   8: suminf.    2.76165 (103) obj. -221.95 iterations 1
Cbc0038I Pass   9: suminf.    1.67539 (74) obj. -153.712 iterations 29
Cbc0038I Pass  10: suminf.    1.24780 (49) obj. -137.646 iterations 32
Cbc0038I Pass  11: suminf.    0.60105 (30) obj. -149.033 iterations 23
Cbc0038I Pass  12: suminf.    0.34888 (19) obj. -138.285 iterations 11
Cbc0038I Pass  13: suminf.    0.12392 (4) obj. -137.646 iterations 48
Cbc0038I Pass  14: suminf.    0.07835 (7) obj. -137.646 iterations 12
Cbc0038I Pass  15: suminf.    1.11398 (6) obj. -137.646 iterations 18
Cbc0038I Pass  16: suminf.    0.49417 (2) obj. -137.646 iterations 30
Cbc0038I Pass  17: suminf.    0.40698 (1) obj. -140.176 iterations 8
Cbc0038I Pass  18: suminf.    0.40698 (1) obj. -140.176 iterations 0
Cbc0038I Pass  19: suminf.    1.61246 (22) obj. -137.646 iterations 82
Cbc0038I Pass  20: suminf.    1.12192 (21) obj. -137.646 iterations 26
Cbc0038I Pass  21: suminf.    0.42349 (11) obj. -137.646 iterations 28
Cbc0038I Pass  22: suminf.    0.37689 (11) obj. -139.855 iterations 3
Cbc0038I Pass  23: suminf.    0.91907 (4) obj. -137.646 iterations 47
Cbc0038I Pass  24: suminf.    0.74768 (5) obj. -137.646 iterations 19
Cbc0038I Pass  25: suminf.    0.48552 (4) obj. -137.646 iterations 33
Cbc0038I Pass  26: suminf.    0.41777 (3) obj. -137.646 iterations 15
Cbc0038I Pass  27: suminf.    0.37413 (4) obj. -137.646 iterations 19
Cbc0038I Pass  28: suminf.    0.31124 (3) obj. -137.646 iterations 16
Cbc0038I Pass  29: suminf.    4.73379 (29) obj. -137.646 iterations 70
Cbc0038I Pass  30: suminf.    1.73033 (29) obj. -137.646 iterations 64
Cbc0038I Pass  31: suminf.    1.73093 (47) obj. -137.646 iterations 1
Cbc0038I Pass  32: suminf.    1.56392 (14) obj. -137.646 iterations 40
Cbc0038I Pass  33: suminf.    1.56392 (14) obj. -137.646 iterations 0
Cbc0038I Pass  34: suminf.    2.48197 (33) obj. -137.646 iterations 37
Cbc0038I Pass  35: suminf.    2.47221 (33) obj. -137.646 iterations 2
Cbc0038I Pass  36: suminf.    1.47564 (8) obj. -137.646 iterations 30
Cbc0038I Rounding solution of -132.875 is better than previous of -120.166

Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 373 rows 387 columns, reduced to 154 rows 160 columns - 33 fixed gives 115, 126 - still too large
Cbc0038I Full problem 373 rows 387 columns, reduced to 23 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -132.875 to -136.808 (0.24 seconds)
Cbc0038I Round again with cutoff of -169.109
Cbc0038I Pass  36: suminf.    2.76165 (103) obj. -221.95 iterations 0
Cbc0038I Pass  37: suminf.    2.76165 (103) obj. -221.95 iterations 1
Cbc0038I Pass  38: suminf.    2.08734 (82) obj. -169.109 iterations 27
Cbc0038I Pass  39: suminf.    1.63787 (68) obj. -193.783 iterations 18
Cbc0038I Pass  40: suminf.    1.27265 (41) obj. -169.109 iterations 48
Cbc0038I Pass  41: suminf.    1.57522 (22) obj. -169.109 iterations 30
Cbc0038I Pass  42: suminf.    1.31370 (22) obj. -173.032 iterations 1
Cbc0038I Pass  43: suminf.    1.75144 (36) obj. -169.109 iterations 74
Cbc0038I Pass  44: suminf.    1.75144 (36) obj. -169.109 iterations 0
Cbc0038I Pass  45: suminf.    2.57565 (10) obj. -169.109 iterations 26
Cbc0038I Pass  46: suminf.    1.93831 (10) obj. -169.109 iterations 9
Cbc0038I Pass  47: suminf.    1.69004 (10) obj. -170.102 iterations 7
Cbc0038I Pass  48: suminf.    1.75144 (36) obj. -169.109 iterations 42
Cbc0038I Pass  49: suminf.    1.75144 (36) obj. -169.109 iterations 0
Cbc0038I Pass  50: suminf.    3.21840 (30) obj. -169.109 iterations 27
Cbc0038I Pass  51: suminf.    3.16428 (31) obj. -169.109 iterations 18
Cbc0038I Pass  52: suminf.    4.86757 (24) obj. -169.109 iterations 40
Cbc0038I Pass  53: suminf.    2.76330 (25) obj. -169.109 iterations 17
Cbc0038I Pass  54: suminf.    2.51695 (26) obj. -169.109 iterations 2
Cbc0038I Pass  55: suminf.    4.87680 (22) obj. -169.109 iterations 23
Cbc0038I Pass  56: suminf.    2.95632 (23) obj. -169.109 iterations 16
Cbc0038I Pass  57: suminf.    2.95632 (23) obj. -169.109 iterations 0
Cbc0038I Pass  58: suminf.    3.02286 (23) obj. -169.109 iterations 26
Cbc0038I Pass  59: suminf.    1.64643 (25) obj. -169.109 iterations 19
Cbc0038I Pass  60: suminf.    1.42388 (24) obj. -169.109 iterations 6
Cbc0038I Pass  61: suminf.    4.77503 (22) obj. -169.109 iterations 43
Cbc0038I Pass  62: suminf.    2.96497 (24) obj. -169.109 iterations 22
Cbc0038I Pass  63: suminf.    2.96497 (24) obj. -169.109 iterations 0
Cbc0038I Pass  64: suminf.    3.02578 (23) obj. -169.109 iterations 29
Cbc0038I Pass  65: suminf.    1.41424 (12) obj. -169.109 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 373 rows 387 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -136.808 - took 0.20 seconds
Cbc0012I Integer solution of -136.80837 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 11 rows 13 columns
Cbc0031I 153 added rows had average density of 48.091503
Cbc0013I At root node, 153 cuts changed objective from -294.96219 to -221.46635 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 42549 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.513 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2592 row cuts average 370.1 elements, 0 column cuts (0 active)  in 1.119 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 387 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5433 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.276 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.847 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1306 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.809 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 338 row cuts average 246.8 elements, 0 column cuts (0 active)  in 0.311 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 221 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.618 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -136.80837 best solution, best possible -221.46635 (8.46 seconds)
Cbc0010I After 5 nodes, 4 on tree, -136.80837 best solution, best possible -220.73522 (9.18 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 15 rows 20 columns
Cbc0010I After 65 nodes, 10 on tree, -136.80837 best solution, best possible -220.73522 (9.88 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 6 rows 12 columns
Cbc0010I After 168 nodes, 10 on tree, -136.80837 best solution, best possible -220.73522 (10.59 seconds)
Cbc0012I Integer solution of -136.89101 found by rounding after 19546 iterations and 196 nodes (10.77 seconds)
Cbc0010I After 236 nodes, 1 on tree, -136.89101 best solution, best possible -220.69603 (11.49 seconds)
Cbc0012I Integer solution of -146.59707 found by DiveCoefficient after 20837 iterations and 237 nodes (11.53 seconds)
Cbc0012I Integer solution of -146.95857 found by DiveCoefficient after 20890 iterations and 237 nodes (11.56 seconds)
Cbc0012I Integer solution of -148.17877 found by rounding after 20934 iterations and 239 nodes (11.60 seconds)
Cbc0012I Integer solution of -171.68407 found by DiveCoefficient after 20934 iterations and 239 nodes (11.60 seconds)
Cbc0010I After 250 nodes, 3 on tree, -171.68407 best solution, best possible -219.91708 (12.19 seconds)
Cbc0012I Integer solution of -175.08521 found by rounding after 21979 iterations and 262 nodes (12.50 seconds)
Cbc0012I Integer solution of -186.23737 found by rounding after 22025 iterations and 264 nodes (12.51 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 15 rows 17 columns
Cbc0010I After 300 nodes, 10 on tree, -186.23737 best solution, best possible -219.91708 (12.91 seconds)
Cbc0010I After 331 nodes, 2 on tree, -186.23737 best solution, best possible -219.14285 (14.15 seconds)
Cbc0010I After 335 nodes, 4 on tree, -186.23737 best solution, best possible -219.14285 (14.86 seconds)
Cbc0010I After 348 nodes, 7 on tree, -186.23737 best solution, best possible -219.14285 (15.57 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 128 rows 144 columns
Cbc0010I After 400 nodes, 5 on tree, -186.23737 best solution, best possible -219.14285 (16.42 seconds)
Cbc0010I After 455 nodes, 8 on tree, -186.23737 best solution, best possible -219.14285 (17.13 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 135 rows 150 columns
Cbc0010I After 500 nodes, 6 on tree, -186.23737 best solution, best possible -219.14285 (17.93 seconds)
Cbc0010I After 551 nodes, 4 on tree, -186.23737 best solution, best possible -219.14285 (18.64 seconds)
Cbc0001I Search completed - best objective -186.23737, took 40476 iterations and 566 nodes (18.87 seconds)
Cbc0032I Strong branching done 3240 times (49785 iterations), fathomed 42 nodes and fixed 75 variables
Cbc0035I Maximum depth 25, 3388 variables fixed on reduced cost
Total time (CPU seconds):       18.41   (Wallclock seconds):       18.96

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 494 (-33) rows, 255 (-9) columns and 1473 (-72) elements
Clp1000I sum of infeasibilities 4.23735e-05 - average 8.57763e-08, 165 fixed columns
Coin0506I Presolve 157 (-337) rows, 84 (-171) columns and 466 (-1007) elements
Clp0029I End of values pass after 84 iterations
Clp0014I Perturbing problem by 0.001% of 2.8564898 - largest nonzero change 0 ( 0%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Coin0511I After Postsolve, objective 252.35347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 0.13632852 - largest nonzero change 0 ( 0%) - largest zero change 2.9805748e-05
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Clp0000I Optimal - objective value 252.35347
Coin0511I After Postsolve, objective 252.35347, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 252.3534684 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 494 rows, 255 columns (254 integer (254 of which binary)) and 1473 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.378%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 50 integers unsatisfied sum - 10.051
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -18.8236 iterations 164
Cbc0038I Solution found of -18.8236
Cbc0038I Relaxing continuous gives -18.8236
Cbc0038I Rounding solution of -50.1522 is better than previous of -18.8236

Cbc0038I Before mini branch and bound, 204 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 255 columns, reduced to 89 rows 51 columns
Cbc0038I Mini branch and bound improved solution from -50.1522 to -171.684 (0.06 seconds)
Cbc0038I Round again with cutoff of -179.751
Cbc0038I Pass   2: suminf.    3.96261 (10) obj. -179.751 iterations 38
Cbc0038I Pass   3: suminf.    2.32988 (7) obj. -179.751 iterations 21
Cbc0038I Pass   4: suminf.    1.64975 (5) obj. -179.751 iterations 19
Cbc0038I Pass   5: suminf.    1.44003 (5) obj. -179.751 iterations 10
Cbc0038I Pass   6: suminf.    1.44003 (5) obj. -179.751 iterations 9
Cbc0038I Pass   7: suminf.    1.42906 (5) obj. -179.751 iterations 26
Cbc0038I Pass   8: suminf.    1.28833 (5) obj. -179.751 iterations 11
Cbc0038I Pass   9: suminf.    1.01425 (4) obj. -179.751 iterations 23
Cbc0038I Pass  10: suminf.    0.96908 (4) obj. -179.751 iterations 2
Cbc0038I Pass  11: suminf.    1.31152 (5) obj. -179.751 iterations 17
Cbc0038I Pass  12: suminf.    6.16785 (21) obj. -179.751 iterations 60
Cbc0038I Pass  13: suminf.    3.45052 (17) obj. -179.751 iterations 59
Cbc0038I Pass  14: suminf.    3.45052 (17) obj. -179.751 iterations 0
Cbc0038I Pass  15: suminf.    1.89403 (6) obj. -179.751 iterations 29
Cbc0038I Pass  16: suminf.    1.52913 (7) obj. -179.751 iterations 15
Cbc0038I Pass  17: suminf.    1.50952 (5) obj. -179.751 iterations 19
Cbc0038I Pass  18: suminf.    1.00939 (5) obj. -179.751 iterations 2
Cbc0038I Pass  19: suminf.    1.00939 (5) obj. -179.751 iterations 0
Cbc0038I Pass  20: suminf.    1.15275 (5) obj. -179.751 iterations 15
Cbc0038I Pass  21: suminf.    1.08110 (4) obj. -179.751 iterations 7
Cbc0038I Pass  22: suminf.    2.08639 (5) obj. -179.751 iterations 9
Cbc0038I Pass  23: suminf.    1.85857 (9) obj. -179.751 iterations 10
Cbc0038I Pass  24: suminf.    1.49942 (5) obj. -179.751 iterations 13
Cbc0038I Pass  25: suminf.    2.30472 (8) obj. -179.751 iterations 47
Cbc0038I Pass  26: suminf.    1.15791 (8) obj. -179.751 iterations 19
Cbc0038I Pass  27: suminf.    2.67181 (7) obj. -179.751 iterations 24
Cbc0038I Pass  28: suminf.    1.72453 (8) obj. -179.751 iterations 14
Cbc0038I Pass  29: suminf.    0.59156 (3) obj. -179.751 iterations 12
Cbc0038I Pass  30: suminf.    1.08756 (3) obj. -179.751 iterations 7
Cbc0038I Pass  31: suminf.    0.75799 (3) obj. -179.751 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 187 integers at bound fixed and 0 continuous
Cbc0038I Full problem 494 rows 255 columns, reduced to 116 rows 68 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -171.684 - took 0.12 seconds
Cbc0012I Integer solution of -171.68407 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 89 rows 51 columns
Cbc0012I Integer solution of -186.23737 found by RINS after 0 iterations and 0 nodes (0.20 seconds)
Cbc0031I 29 added rows had average density of 106.75862
Cbc0013I At root node, 29 cuts changed objective from -252.35347 to -230.74318 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 16292 row cuts average 3.4 elements, 1 column cuts (1 active)  in 0.378 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1803 row cuts average 250.6 elements, 0 column cuts (0 active)  in 0.270 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.061 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 192 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.190 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.021 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 156 row cuts average 244.7 elements, 0 column cuts (0 active)  in 0.124 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -186.23737 best solution, best possible -230.74318 (2.60 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 102 rows 59 columns
Cbc0010I After 51 nodes, 10 on tree, -186.23737 best solution, best possible -230.74318 (3.31 seconds)
Cbc0038I Full problem 494 rows 255 columns, reduced to 8 rows 7 columns
Cbc0010I After 169 nodes, 10 on tree, -186.23737 best solution, best possible -199.00237 (4.01 seconds)
Cbc0001I Search completed - best objective -186.23737, took 18629 iterations and 188 nodes (4.05 seconds)
Cbc0032I Strong branching done 1792 times (44674 iterations), fathomed 19 nodes and fixed 91 variables
Cbc0035I Maximum depth 36, 1208 variables fixed on reduced cost
Total time (CPU seconds):       3.98   (Wallclock seconds):       4.08

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 373 (-154) rows, 387 (-138) columns and 18210 (-17527) elements
Clp1000I sum of infeasibilities 1.49303e-05 - average 4.00276e-08, 259 fixed columns
Coin0506I Presolve 104 (-269) rows, 122 (-265) columns and 436 (-17774) elements
Clp0006I 0  Obj 80.197434 Dual inf 15325.376 (119)
Clp0029I End of values pass after 54 iterations
Clp0014I Perturbing problem by 0.001% of 0.16675887 - largest nonzero change 2.8587626e-05 ( 0.0025988751%) - largest zero change 2.9901363e-05
Clp0000I Optimal - objective value 98.308783
Clp0000I Optimal - objective value 98.308783
Coin0511I After Postsolve, objective 98.308783, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 98.308783 Dual inf 258.41204 (138)
Clp0014I Perturbing problem by 0.001% of 1.6883592 - largest nonzero change 2.9555612e-05 ( 0.0025988751%) - largest zero change 2.994637e-05
Clp0000I Optimal - objective value 295.17079
Clp0000I Optimal - objective value 295.17079
Clp0000I Optimal - objective value 295.17079
Coin0511I After Postsolve, objective 295.17079, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 295.1707896 - 0 iterations time 0.122, Presolve 0.00, Idiot 0.12

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 373 rows, 387 columns (387 integer (387 of which binary)) and 18210 elements
Coin3009W Conflict graph built in 0.001 seconds, density: 5.914%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 139 integers unsatisfied sum - 8.43678
Cbc0038I Pass   1: suminf.    2.76165 (103) obj. -221.95 iterations 59
Cbc0038I Pass   2: suminf.    2.76165 (103) obj. -221.95 iterations 1
Cbc0038I Pass   3: suminf.    2.21273 (89) obj. -175.886 iterations 14
Cbc0038I Pass   4: suminf.    1.27018 (60) obj. -138.176 iterations 29
Cbc0038I Pass   5: suminf.    0.70227 (37) obj. -109.889 iterations 23
Cbc0038I Pass   6: suminf.    0.25143 (15) obj. -86.3814 iterations 22
Cbc0038I Solution found of -69.6649
Cbc0038I Rounding solution of -120.166 is better than previous of -69.6649

Cbc0038I Before mini branch and bound, 248 integers at bound fixed and 0 continuous
Cbc0038I Full problem 373 rows 387 columns, reduced to 21 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.15 seconds)
Cbc0038I Round again with cutoff of -137.646
Cbc0038I Pass   7: suminf.    2.76165 (103) obj. -221.95 iterations 0
Cbc0038I Pass   8: suminf.    2.76165 (103) obj. -221.95 iterations 1
Cbc0038I Pass   9: suminf.    1.67539 (74) obj. -153.712 iterations 29
Cbc0038I Pass  10: suminf.    1.24780 (49) obj. -137.646 iterations 32
Cbc0038I Pass  11: suminf.    0.60105 (30) obj. -149.033 iterations 23
Cbc0038I Pass  12: suminf.    0.34888 (19) obj. -138.285 iterations 11
Cbc0038I Pass  13: suminf.    0.12392 (4) obj. -137.646 iterations 48
Cbc0038I Pass  14: suminf.    0.07835 (7) obj. -137.646 iterations 12
Cbc0038I Pass  15: suminf.    1.11398 (6) obj. -137.646 iterations 18
Cbc0038I Pass  16: suminf.    0.49417 (2) obj. -137.646 iterations 30
Cbc0038I Pass  17: suminf.    0.40698 (1) obj. -140.176 iterations 8
Cbc0038I Pass  18: suminf.    0.40698 (1) obj. -140.176 iterations 0
Cbc0038I Pass  19: suminf.    1.61246 (22) obj. -137.646 iterations 82
Cbc0038I Pass  20: suminf.    1.12192 (21) obj. -137.646 iterations 26
Cbc0038I Pass  21: suminf.    0.42349 (11) obj. -137.646 iterations 28
Cbc0038I Pass  22: suminf.    0.37689 (11) obj. -139.855 iterations 3
Cbc0038I Pass  23: suminf.    0.91907 (4) obj. -137.646 iterations 47
Cbc0038I Pass  24: suminf.    0.74768 (5) obj. -137.646 iterations 19
Cbc0038I Pass  25: suminf.    0.48552 (4) obj. -137.646 iterations 33
Cbc0038I Pass  26: suminf.    0.41777 (3) obj. -137.646 iterations 15
Cbc0038I Pass  27: suminf.    0.37413 (4) obj. -137.646 iterations 19
Cbc0038I Pass  28: suminf.    0.31124 (3) obj. -137.646 iterations 16
Cbc0038I Pass  29: suminf.    4.73379 (29) obj. -137.646 iterations 70
Cbc0038I Pass  30: suminf.    1.73033 (29) obj. -137.646 iterations 64
Cbc0038I Pass  31: suminf.    1.73093 (47) obj. -137.646 iterations 1
Cbc0038I Pass  32: suminf.    1.56392 (14) obj. -137.646 iterations 40
Cbc0038I Pass  33: suminf.    1.56392 (14) obj. -137.646 iterations 0
Cbc0038I Pass  34: suminf.    2.48197 (33) obj. -137.646 iterations 37
Cbc0038I Pass  35: suminf.    2.47221 (33) obj. -137.646 iterations 2
Cbc0038I Pass  36: suminf.    1.47564 (8) obj. -137.646 iterations 30
Cbc0038I Rounding solution of -132.875 is better than previous of -120.166

Cbc0038I Before mini branch and bound, 224 integers at bound fixed and 0 continuous
Cbc0038I Full problem 373 rows 387 columns, reduced to 154 rows 160 columns - 33 fixed gives 115, 126 - still too large
Cbc0038I Full problem 373 rows 387 columns, reduced to 23 rows 33 columns
Cbc0038I Mini branch and bound improved solution from -132.875 to -136.808 (0.24 seconds)
Cbc0038I Round again with cutoff of -169.109
Cbc0038I Pass  36: suminf.    2.76165 (103) obj. -221.95 iterations 0
Cbc0038I Pass  37: suminf.    2.76165 (103) obj. -221.95 iterations 1
Cbc0038I Pass  38: suminf.    2.08734 (82) obj. -169.109 iterations 27
Cbc0038I Pass  39: suminf.    1.63787 (68) obj. -193.783 iterations 18
Cbc0038I Pass  40: suminf.    1.27265 (41) obj. -169.109 iterations 48
Cbc0038I Pass  41: suminf.    1.57522 (22) obj. -169.109 iterations 30
Cbc0038I Pass  42: suminf.    1.31370 (22) obj. -173.032 iterations 1
Cbc0038I Pass  43: suminf.    1.75144 (36) obj. -169.109 iterations 74
Cbc0038I Pass  44: suminf.    1.75144 (36) obj. -169.109 iterations 0
Cbc0038I Pass  45: suminf.    2.57565 (10) obj. -169.109 iterations 26
Cbc0038I Pass  46: suminf.    1.93831 (10) obj. -169.109 iterations 9
Cbc0038I Pass  47: suminf.    1.69004 (10) obj. -170.102 iterations 7
Cbc0038I Pass  48: suminf.    1.75144 (36) obj. -169.109 iterations 42
Cbc0038I Pass  49: suminf.    1.75144 (36) obj. -169.109 iterations 0
Cbc0038I Pass  50: suminf.    3.21840 (30) obj. -169.109 iterations 27
Cbc0038I Pass  51: suminf.    3.16428 (31) obj. -169.109 iterations 18
Cbc0038I Pass  52: suminf.    4.86757 (24) obj. -169.109 iterations 40
Cbc0038I Pass  53: suminf.    2.76330 (25) obj. -169.109 iterations 17
Cbc0038I Pass  54: suminf.    2.51695 (26) obj. -169.109 iterations 2
Cbc0038I Pass  55: suminf.    4.87680 (22) obj. -169.109 iterations 23
Cbc0038I Pass  56: suminf.    2.95632 (23) obj. -169.109 iterations 16
Cbc0038I Pass  57: suminf.    2.95632 (23) obj. -169.109 iterations 0
Cbc0038I Pass  58: suminf.    3.02286 (23) obj. -169.109 iterations 26
Cbc0038I Pass  59: suminf.    1.64643 (25) obj. -169.109 iterations 19
Cbc0038I Pass  60: suminf.    1.42388 (24) obj. -169.109 iterations 6
Cbc0038I Pass  61: suminf.    4.77503 (22) obj. -169.109 iterations 43
Cbc0038I Pass  62: suminf.    2.96497 (24) obj. -169.109 iterations 22
Cbc0038I Pass  63: suminf.    2.96497 (24) obj. -169.109 iterations 0
Cbc0038I Pass  64: suminf.    3.02578 (23) obj. -169.109 iterations 29
Cbc0038I Pass  65: suminf.    1.41424 (12) obj. -169.109 iterations 20
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 241 integers at bound fixed and 0 continuous
Cbc0038I Full problem 373 rows 387 columns, reduced to 14 rows 17 columns
Cbc0038I Mini branch and bound did not improve solution (0.31 seconds)
Cbc0038I After 0.31 seconds - Feasibility pump exiting with objective of -136.808 - took 0.21 seconds
Cbc0012I Integer solution of -136.80837 found by feasibility pump after 0 iterations and 0 nodes (0.31 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 11 rows 13 columns
Cbc0031I 153 added rows had average density of 48.091503
Cbc0013I At root node, 153 cuts changed objective from -294.96219 to -221.46635 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 42549 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.519 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2592 row cuts average 370.1 elements, 0 column cuts (0 active)  in 1.129 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 387 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.086 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5433 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.279 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.850 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1306 row cuts average 19.0 elements, 0 column cuts (0 active)  in 0.816 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 338 row cuts average 246.8 elements, 0 column cuts (0 active)  in 0.320 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 221 row cuts average 18.5 elements, 0 column cuts (0 active)  in 0.624 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -136.80837 best solution, best possible -221.46635 (8.52 seconds)
Cbc0010I After 6 nodes, 5 on tree, -136.80837 best solution, best possible -220.73522 (9.22 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 15 rows 20 columns
Cbc0010I After 66 nodes, 9 on tree, -136.80837 best solution, best possible -220.73522 (9.93 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 6 rows 12 columns
Cbc0010I After 169 nodes, 9 on tree, -136.80837 best solution, best possible -220.73522 (10.63 seconds)
Cbc0012I Integer solution of -136.89101 found by rounding after 19546 iterations and 196 nodes (10.81 seconds)
Cbc0010I After 236 nodes, 1 on tree, -136.89101 best solution, best possible -220.69603 (11.56 seconds)
Cbc0012I Integer solution of -146.59707 found by DiveCoefficient after 20837 iterations and 237 nodes (11.60 seconds)
Cbc0012I Integer solution of -146.95857 found by DiveCoefficient after 20890 iterations and 237 nodes (11.63 seconds)
Cbc0012I Integer solution of -148.17877 found by rounding after 20934 iterations and 239 nodes (11.67 seconds)
Cbc0012I Integer solution of -171.68407 found by DiveCoefficient after 20934 iterations and 239 nodes (11.68 seconds)
Cbc0010I After 250 nodes, 3 on tree, -171.68407 best solution, best possible -219.91708 (12.28 seconds)
Cbc0012I Integer solution of -175.08521 found by rounding after 21979 iterations and 262 nodes (12.59 seconds)
Cbc0012I Integer solution of -186.23737 found by rounding after 22025 iterations and 264 nodes (12.61 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 15 rows 17 columns
Cbc0010I After 300 nodes, 10 on tree, -186.23737 best solution, best possible -219.91708 (13.00 seconds)
Cbc0010I After 331 nodes, 2 on tree, -186.23737 best solution, best possible -219.14285 (14.28 seconds)
Cbc0010I After 335 nodes, 4 on tree, -186.23737 best solution, best possible -219.14285 (15.01 seconds)
Cbc0010I After 348 nodes, 7 on tree, -186.23737 best solution, best possible -219.14285 (15.72 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 128 rows 144 columns
Cbc0010I After 400 nodes, 5 on tree, -186.23737 best solution, best possible -219.14285 (16.56 seconds)
Cbc0010I After 455 nodes, 8 on tree, -186.23737 best solution, best possible -219.14285 (17.27 seconds)
Cbc0038I Full problem 373 rows 387 columns, reduced to 135 rows 150 columns
Cbc0010I After 500 nodes, 6 on tree, -186.23737 best solution, best possible -219.14285 (18.08 seconds)
Cbc0010I After 549 nodes, 5 on tree, -186.23737 best solution, best possible -219.14285 (18.79 seconds)
Cbc0001I Search completed - best objective -186.23737, took 40476 iterations and 566 nodes (19.04 seconds)
Cbc0032I Strong branching done 3240 times (49785 iterations), fathomed 42 nodes and fixed 75 variables
Cbc0035I Maximum depth 25, 3388 variables fixed on reduced cost
Total time (CPU seconds):       18.54   (Wallclock seconds):       19.13

