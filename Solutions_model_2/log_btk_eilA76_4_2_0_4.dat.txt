Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 65 (-13) columns and 356 (-97) elements
Clp1000I sum of infeasibilities 3.62955e-06 - average 3.12893e-08, 53 fixed columns
Coin0506I Presolve 9 (-107) rows, 10 (-55) columns and 32 (-324) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Coin0511I After Postsolve, objective 16595.359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9938665 - largest nonzero change 1.5114173e-05 ( 0.001112934%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Coin0511I After Postsolve, objective 16595.359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16595.35913 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 116 rows, 65 columns (64 integer (64 of which binary)) and 357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.362%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.828288
Cbc0038I Pass   1: suminf.    0.17857 (1) obj. -16070.1 iterations 9
Cbc0038I Solution found of -14442.1
Cbc0038I Relaxing continuous gives -14442.1
Cbc0038I Rounding solution of -15376 is better than previous of -14442.1

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15498
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17857 (1) obj. -16070.1 iterations 0
Cbc0038I Pass   3: suminf.    0.37322 (2) obj. -15498 iterations 6
Cbc0038I Pass   4: suminf.    0.28906 (2) obj. -15943.9 iterations 6
Cbc0038I Pass   5: suminf.    0.28906 (2) obj. -15943.9 iterations 0
Cbc0038I Pass   6: suminf.    0.77636 (2) obj. -15498 iterations 8
Cbc0038I Pass   7: suminf.    0.55094 (2) obj. -16116.5 iterations 5
Cbc0038I Pass   8: suminf.    0.18043 (4) obj. -15498 iterations 8
Cbc0038I Pass   9: suminf.    0.13248 (2) obj. -15498 iterations 7
Cbc0038I Pass  10: suminf.    0.57143 (3) obj. -16132.7 iterations 6
Cbc0038I Pass  11: suminf.    1.05772 (3) obj. -15498 iterations 11
Cbc0038I Pass  12: suminf.    0.58685 (2) obj. -15498 iterations 6
Cbc0038I Pass  13: suminf.    0.58685 (2) obj. -15498 iterations 1
Cbc0038I Pass  14: suminf.    0.75551 (2) obj. -15498 iterations 3
Cbc0038I Pass  15: suminf.    0.58732 (4) obj. -15498 iterations 15
Cbc0038I Pass  16: suminf.    0.58281 (3) obj. -15498 iterations 6
Cbc0038I Pass  17: suminf.    0.55094 (2) obj. -16342.3 iterations 10
Cbc0038I Pass  18: suminf.    0.45714 (2) obj. -16261 iterations 2
Cbc0038I Pass  19: suminf.    0.96204 (3) obj. -15498 iterations 7
Cbc0038I Pass  20: suminf.    1.82851 (7) obj. -15498 iterations 12
Cbc0038I Pass  21: suminf.    0.69445 (3) obj. -15498 iterations 9
Cbc0038I Pass  22: suminf.    1.26954 (3) obj. -15498 iterations 1
Cbc0038I Pass  23: suminf.    0.93168 (3) obj. -15498 iterations 7
Cbc0038I Pass  24: suminf.    0.94643 (3) obj. -16435.2 iterations 6
Cbc0038I Pass  25: suminf.    0.21307 (2) obj. -15498 iterations 5
Cbc0038I Pass  26: suminf.    1.35026 (4) obj. -15498 iterations 12
Cbc0038I Pass  27: suminf.    0.36304 (3) obj. -15682.5 iterations 4
Cbc0038I Pass  28: suminf.    0.93168 (3) obj. -15498 iterations 12
Cbc0038I Pass  29: suminf.    0.93168 (3) obj. -15498 iterations 0
Cbc0038I Pass  30: suminf.    0.94643 (3) obj. -16435.2 iterations 6
Cbc0038I Pass  31: suminf.    0.21307 (2) obj. -15498 iterations 5
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 65 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -15376 to -15985.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -16107.2
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.22440 (4) obj. -16107.2 iterations 3
Cbc0038I Pass  32: suminf.    0.48695 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  33: suminf.    0.48695 (3) obj. -16107.2 iterations 0
Cbc0038I Pass  34: suminf.    0.22440 (4) obj. -16107.2 iterations 4
Cbc0038I Pass  35: suminf.    0.62922 (3) obj. -16107.2 iterations 7
Cbc0038I Pass  36: suminf.    0.62922 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  37: suminf.    0.90929 (3) obj. -16591.6 iterations 7
Cbc0038I Pass  38: suminf.    0.69184 (2) obj. -16276.2 iterations 4
Cbc0038I Pass  39: suminf.    0.41602 (3) obj. -16107.2 iterations 14
Cbc0038I Pass  40: suminf.    0.31987 (4) obj. -16107.2 iterations 7
Cbc0038I Pass  41: suminf.    0.41602 (3) obj. -16107.2 iterations 4
Cbc0038I Pass  42: suminf.    0.39934 (4) obj. -16107.2 iterations 5
Cbc0038I Pass  43: suminf.    1.09894 (5) obj. -16107.2 iterations 9
Cbc0038I Pass  44: suminf.    1.02587 (4) obj. -16107.2 iterations 2
Cbc0038I Pass  45: suminf.    0.30357 (3) obj. -16205 iterations 6
Cbc0038I Pass  46: suminf.    0.25295 (2) obj. -16107.2 iterations 5
Cbc0038I Pass  47: suminf.    0.29245 (2) obj. -16128.8 iterations 5
Cbc0038I Pass  48: suminf.    2.03515 (5) obj. -16107.2 iterations 13
Cbc0038I Pass  49: suminf.    0.44972 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  50: suminf.    0.44972 (3) obj. -16107.2 iterations 0
Cbc0038I Pass  51: suminf.    0.97591 (3) obj. -16224.5 iterations 4
Cbc0038I Pass  52: suminf.    0.97591 (3) obj. -16224.5 iterations 0
Cbc0038I Pass  53: suminf.    0.70934 (3) obj. -16107.2 iterations 7
Cbc0038I Pass  54: suminf.    0.70934 (3) obj. -16107.2 iterations 1
Cbc0038I Pass  55: suminf.    0.48584 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  56: suminf.    1.44021 (4) obj. -16107.2 iterations 3
Cbc0038I Pass  57: suminf.    1.24908 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  58: suminf.    0.44972 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  59: suminf.    0.97591 (3) obj. -16224.5 iterations 4
Cbc0038I Pass  60: suminf.    0.69184 (2) obj. -16276.2 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 65 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15985.1 - took 0.02 seconds
Cbc0012I Integer solution of -15985.11 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 116 rows 65 columns, reduced to 10 rows 12 columns
Cbc0031I 8 added rows had average density of 17.875
Cbc0013I At root node, 8 cuts changed objective from -16595.359 to -16261.317 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.070 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15985.11, took 174 iterations and 4 nodes (0.35 seconds)
Cbc0032I Strong branching done 22 times (92 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.36

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-62) rows, 104 (-48) columns and 1587 (-1716) elements
Clp1000I sum of infeasibilities 8.00445e-08 - average 8.70048e-10, 96 fixed columns
Coin0506I Presolve 6 (-86) rows, 8 (-96) columns and 24 (-1563) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 16581.359
Clp0000I Optimal - objective value 16581.359
Coin0511I After Postsolve, objective 16581.359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0872446 - largest nonzero change 2.3530591e-05 ( 0.0023530591%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16636.596
Clp0000I Optimal - objective value 16636.596
Clp0000I Optimal - objective value 16636.596
Coin0511I After Postsolve, objective 16636.596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16636.59645 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 105 columns (105 integer (105 of which binary)) and 1598 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 2.9224
Cbc0038I Pass   1: suminf.    2.12629 (25) obj. -15907.4 iterations 13
Cbc0038I Pass   2: suminf.    0.28255 (7) obj. -14902.8 iterations 14
Cbc0038I Solution found of -14895.2
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 105 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -14895.2 to -15105.5 (0.03 seconds)
Cbc0038I Round again with cutoff of -15257.5
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.12629 (25) obj. -15907.4 iterations 0
Cbc0038I Pass   4: suminf.    0.63755 (12) obj. -15257.5 iterations 20
Cbc0038I Pass   5: suminf.    0.94643 (3) obj. -16435.2 iterations 13
Cbc0038I Pass   6: suminf.    0.12809 (2) obj. -15257.5 iterations 3
Cbc0038I Pass   7: suminf.    2.51065 (12) obj. -15257.5 iterations 20
Cbc0038I Pass   8: suminf.    2.23812 (9) obj. -15257.5 iterations 3
Cbc0038I Pass   9: suminf.    1.36349 (3) obj. -15257.5 iterations 9
Cbc0038I Pass  10: suminf.    0.61132 (2) obj. -15257.5 iterations 3
Cbc0038I Pass  11: suminf.    0.02703 (1) obj. -15814 iterations 3
Cbc0038I Solution found of -15720.3
Cbc0038I Rounding solution of -15722.3 is better than previous of -15720.3

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 105 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -15903.1
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  12: suminf.    2.12629 (25) obj. -15907.4 iterations 0
Cbc0038I Pass  13: suminf.    0.38866 (3) obj. -15903.1 iterations 23
Cbc0038I Pass  14: suminf.    0.94643 (3) obj. -16435.2 iterations 4
Cbc0038I Pass  15: suminf.    0.35628 (2) obj. -15903.1 iterations 3
Cbc0038I Pass  16: suminf.    1.33425 (14) obj. -15903.1 iterations 24
Cbc0038I Pass  17: suminf.    1.33425 (14) obj. -15903.1 iterations 2
Cbc0038I Pass  18: suminf.    0.43439 (3) obj. -15903.1 iterations 11
Cbc0038I Pass  19: suminf.    0.43439 (3) obj. -15903.1 iterations 2
Cbc0038I Pass  20: suminf.    0.36087 (2) obj. -15903.1 iterations 6
Cbc0038I Pass  21: suminf.    0.36087 (2) obj. -15903.1 iterations 1
Cbc0038I Pass  22: suminf.    0.94643 (3) obj. -16422.2 iterations 3
Cbc0038I Pass  23: suminf.    0.74776 (5) obj. -15903.1 iterations 12
Cbc0038I Pass  24: suminf.    0.57980 (5) obj. -15903.1 iterations 8
Cbc0038I Pass  25: suminf.    0.56305 (3) obj. -15903.1 iterations 5
Cbc0038I Pass  26: suminf.    0.36087 (2) obj. -15903.1 iterations 3
Cbc0038I Pass  27: suminf.    0.94643 (3) obj. -16422.2 iterations 3
Cbc0038I Pass  28: suminf.    1.11581 (10) obj. -15903.1 iterations 16
Cbc0038I Pass  29: suminf.    1.11581 (10) obj. -15903.1 iterations 3
Cbc0038I Pass  30: suminf.    0.28906 (2) obj. -15932.9 iterations 12
Cbc0038I Pass  31: suminf.    0.28906 (2) obj. -15932.9 iterations 0
Cbc0038I Pass  32: suminf.    0.62927 (2) obj. -15903.1 iterations 4
Cbc0038I Pass  33: suminf.    0.55094 (2) obj. -16105.5 iterations 3
Cbc0038I Pass  34: suminf.    0.75165 (5) obj. -15903.1 iterations 14
Cbc0038I Pass  35: suminf.    0.58884 (4) obj. -16252.9 iterations 8
Cbc0038I Pass  36: suminf.    0.86907 (3) obj. -15903.1 iterations 8
Cbc0038I Pass  37: suminf.    0.30192 (2) obj. -15903.1 iterations 6
Cbc0038I Pass  38: suminf.    0.55094 (2) obj. -16332.3 iterations 3
Cbc0038I Pass  39: suminf.    0.45714 (2) obj. -16251 iterations 2
Cbc0038I Pass  40: suminf.    1.34306 (8) obj. -15903.1 iterations 18
Cbc0038I Pass  41: suminf.    0.98678 (6) obj. -15903.1 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 105 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -15722.3 - took 0.03 seconds
Cbc0012I Integer solution of -15722.31 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 93 rows 105 columns, reduced to 13 rows 15 columns
Cbc0012I Integer solution of -15985.11 found by DiveCoefficient after 144 iterations and 0 nodes (0.25 seconds)
Cbc0031I 28 added rows had average density of 6.0357143
Cbc0013I At root node, 28 cuts changed objective from -16626.175 to -16245.414 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 263 row cuts average 7.6 elements, 17 column cuts (17 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 136 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.084 seconds - new frequency is -100
Cbc0010I After 2 nodes, 3 on tree, -15985.11 best solution, best possible -16245.414 (0.28 seconds)
Cbc0001I Search completed - best objective -15985.11, took 405 iterations and 6 nodes (0.29 seconds)
Cbc0032I Strong branching done 132 times (674 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.29

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 116 (-39) rows, 65 (-13) columns and 356 (-97) elements
Clp1000I sum of infeasibilities 3.62955e-06 - average 3.12893e-08, 53 fixed columns
Coin0506I Presolve 9 (-107) rows, 10 (-55) columns and 32 (-324) elements
Clp0029I End of values pass after 10 iterations
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Coin0511I After Postsolve, objective 16595.359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.9938665 - largest nonzero change 1.5114173e-05 ( 0.001112934%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Clp0000I Optimal - objective value 16595.359
Coin0511I After Postsolve, objective 16595.359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16595.35913 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 116 rows, 65 columns (64 integer (64 of which binary)) and 357 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 1.362%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 4 integers unsatisfied sum - 0.828288
Cbc0038I Pass   1: suminf.    0.17857 (1) obj. -16070.1 iterations 9
Cbc0038I Solution found of -14442.1
Cbc0038I Relaxing continuous gives -14442.1
Cbc0038I Rounding solution of -15376 is better than previous of -14442.1

Cbc0038I Before mini branch and bound, 60 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -15498
Cbc0038I Reduced cost fixing fixed 20 variables on major pass 2
Cbc0038I Pass   2: suminf.    0.17857 (1) obj. -16070.1 iterations 0
Cbc0038I Pass   3: suminf.    0.37322 (2) obj. -15498 iterations 6
Cbc0038I Pass   4: suminf.    0.28906 (2) obj. -15943.9 iterations 6
Cbc0038I Pass   5: suminf.    0.28906 (2) obj. -15943.9 iterations 0
Cbc0038I Pass   6: suminf.    0.77636 (2) obj. -15498 iterations 8
Cbc0038I Pass   7: suminf.    0.55094 (2) obj. -16116.5 iterations 5
Cbc0038I Pass   8: suminf.    0.18043 (4) obj. -15498 iterations 8
Cbc0038I Pass   9: suminf.    0.13248 (2) obj. -15498 iterations 7
Cbc0038I Pass  10: suminf.    0.57143 (3) obj. -16132.7 iterations 6
Cbc0038I Pass  11: suminf.    1.05772 (3) obj. -15498 iterations 11
Cbc0038I Pass  12: suminf.    0.58685 (2) obj. -15498 iterations 6
Cbc0038I Pass  13: suminf.    0.58685 (2) obj. -15498 iterations 1
Cbc0038I Pass  14: suminf.    0.75551 (2) obj. -15498 iterations 3
Cbc0038I Pass  15: suminf.    0.58732 (4) obj. -15498 iterations 15
Cbc0038I Pass  16: suminf.    0.58281 (3) obj. -15498 iterations 6
Cbc0038I Pass  17: suminf.    0.55094 (2) obj. -16342.3 iterations 10
Cbc0038I Pass  18: suminf.    0.45714 (2) obj. -16261 iterations 2
Cbc0038I Pass  19: suminf.    0.96204 (3) obj. -15498 iterations 7
Cbc0038I Pass  20: suminf.    1.82851 (7) obj. -15498 iterations 12
Cbc0038I Pass  21: suminf.    0.69445 (3) obj. -15498 iterations 9
Cbc0038I Pass  22: suminf.    1.26954 (3) obj. -15498 iterations 1
Cbc0038I Pass  23: suminf.    0.93168 (3) obj. -15498 iterations 7
Cbc0038I Pass  24: suminf.    0.94643 (3) obj. -16435.2 iterations 6
Cbc0038I Pass  25: suminf.    0.21307 (2) obj. -15498 iterations 5
Cbc0038I Pass  26: suminf.    1.35026 (4) obj. -15498 iterations 12
Cbc0038I Pass  27: suminf.    0.36304 (3) obj. -15682.5 iterations 4
Cbc0038I Pass  28: suminf.    0.93168 (3) obj. -15498 iterations 12
Cbc0038I Pass  29: suminf.    0.93168 (3) obj. -15498 iterations 0
Cbc0038I Pass  30: suminf.    0.94643 (3) obj. -16435.2 iterations 6
Cbc0038I Pass  31: suminf.    0.21307 (2) obj. -15498 iterations 5
Cbc0038I Before mini branch and bound, 46 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 65 columns, reduced to 26 rows 19 columns
Cbc0038I Mini branch and bound improved solution from -15376 to -15985.1 (0.02 seconds)
Cbc0038I Round again with cutoff of -16107.2
Cbc0038I Reduced cost fixing fixed 34 variables on major pass 3
Cbc0038I Pass  31: suminf.    0.22440 (4) obj. -16107.2 iterations 3
Cbc0038I Pass  32: suminf.    0.48695 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  33: suminf.    0.48695 (3) obj. -16107.2 iterations 0
Cbc0038I Pass  34: suminf.    0.22440 (4) obj. -16107.2 iterations 4
Cbc0038I Pass  35: suminf.    0.62922 (3) obj. -16107.2 iterations 7
Cbc0038I Pass  36: suminf.    0.62922 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  37: suminf.    0.90929 (3) obj. -16591.6 iterations 7
Cbc0038I Pass  38: suminf.    0.69184 (2) obj. -16276.2 iterations 4
Cbc0038I Pass  39: suminf.    0.41602 (3) obj. -16107.2 iterations 14
Cbc0038I Pass  40: suminf.    0.31987 (4) obj. -16107.2 iterations 7
Cbc0038I Pass  41: suminf.    0.41602 (3) obj. -16107.2 iterations 4
Cbc0038I Pass  42: suminf.    0.39934 (4) obj. -16107.2 iterations 5
Cbc0038I Pass  43: suminf.    1.09894 (5) obj. -16107.2 iterations 9
Cbc0038I Pass  44: suminf.    1.02587 (4) obj. -16107.2 iterations 2
Cbc0038I Pass  45: suminf.    0.30357 (3) obj. -16205 iterations 6
Cbc0038I Pass  46: suminf.    0.25295 (2) obj. -16107.2 iterations 5
Cbc0038I Pass  47: suminf.    0.29245 (2) obj. -16128.8 iterations 5
Cbc0038I Pass  48: suminf.    2.03515 (5) obj. -16107.2 iterations 13
Cbc0038I Pass  49: suminf.    0.44972 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  50: suminf.    0.44972 (3) obj. -16107.2 iterations 0
Cbc0038I Pass  51: suminf.    0.97591 (3) obj. -16224.5 iterations 4
Cbc0038I Pass  52: suminf.    0.97591 (3) obj. -16224.5 iterations 0
Cbc0038I Pass  53: suminf.    0.70934 (3) obj. -16107.2 iterations 7
Cbc0038I Pass  54: suminf.    0.70934 (3) obj. -16107.2 iterations 1
Cbc0038I Pass  55: suminf.    0.48584 (3) obj. -16107.2 iterations 5
Cbc0038I Pass  56: suminf.    1.44021 (4) obj. -16107.2 iterations 3
Cbc0038I Pass  57: suminf.    1.24908 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  58: suminf.    0.44972 (3) obj. -16107.2 iterations 6
Cbc0038I Pass  59: suminf.    0.97591 (3) obj. -16224.5 iterations 4
Cbc0038I Pass  60: suminf.    0.69184 (2) obj. -16276.2 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 52 integers at bound fixed and 0 continuous
Cbc0038I Full problem 116 rows 65 columns, reduced to 10 rows 13 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I After 0.03 seconds - Feasibility pump exiting with objective of -15985.1 - took 0.02 seconds
Cbc0012I Integer solution of -15985.11 found by feasibility pump after 0 iterations and 0 nodes (0.03 seconds)
Cbc0038I Full problem 116 rows 65 columns, reduced to 10 rows 12 columns
Cbc0031I 8 added rows had average density of 17.875
Cbc0013I At root node, 8 cuts changed objective from -16595.359 to -16261.317 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 19 row cuts average 2.8 elements, 2 column cuts (2 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 6 row cuts average 6.7 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 18.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 53 row cuts average 15.6 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 64.0 elements, 0 column cuts (0 active)  in 0.082 seconds - new frequency is 1
Cbc0001I Search completed - best objective -15985.11, took 174 iterations and 4 nodes (0.42 seconds)
Cbc0032I Strong branching done 22 times (92 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 1, 38 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.42

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 92 (-63) rows, 104 (-49) columns and 1587 (-1717) elements
Clp1000I sum of infeasibilities 8.00445e-08 - average 8.70048e-10, 96 fixed columns
Coin0506I Presolve 6 (-86) rows, 8 (-96) columns and 24 (-1563) elements
Clp0029I End of values pass after 8 iterations
Clp0000I Optimal - objective value 16581.359
Clp0000I Optimal - objective value 16581.359
Coin0511I After Postsolve, objective 16581.359, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 2.0872446 - largest nonzero change 2.3530591e-05 ( 0.0023530591%) - largest zero change 2.9576128e-05
Clp0000I Optimal - objective value 16636.596
Clp0000I Optimal - objective value 16636.596
Clp0000I Optimal - objective value 16636.596
Coin0511I After Postsolve, objective 16636.596, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 16636.59645 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 3 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 93 rows, 105 columns (105 integer (105 of which binary)) and 1598 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.667%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 33 integers unsatisfied sum - 2.9224
Cbc0038I Pass   1: suminf.    2.12629 (25) obj. -15907.4 iterations 13
Cbc0038I Pass   2: suminf.    0.28255 (7) obj. -14902.8 iterations 14
Cbc0038I Solution found of -14895.2
Cbc0038I Before mini branch and bound, 71 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 105 columns, reduced to 13 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -14895.2 to -15105.5 (0.04 seconds)
Cbc0038I Round again with cutoff of -15257.5
Cbc0038I Reduced cost fixing fixed 13 variables on major pass 2
Cbc0038I Pass   3: suminf.    2.12629 (25) obj. -15907.4 iterations 0
Cbc0038I Pass   4: suminf.    0.63755 (12) obj. -15257.5 iterations 20
Cbc0038I Pass   5: suminf.    0.94643 (3) obj. -16435.2 iterations 13
Cbc0038I Pass   6: suminf.    0.12809 (2) obj. -15257.5 iterations 3
Cbc0038I Pass   7: suminf.    2.51065 (12) obj. -15257.5 iterations 20
Cbc0038I Pass   8: suminf.    2.23812 (9) obj. -15257.5 iterations 3
Cbc0038I Pass   9: suminf.    1.36349 (3) obj. -15257.5 iterations 9
Cbc0038I Pass  10: suminf.    0.61132 (2) obj. -15257.5 iterations 3
Cbc0038I Pass  11: suminf.    0.02703 (1) obj. -15814 iterations 3
Cbc0038I Solution found of -15720.3
Cbc0038I Rounding solution of -15722.3 is better than previous of -15720.3

Cbc0038I Before mini branch and bound, 62 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 105 columns, reduced to 17 rows 22 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -15903.1
Cbc0038I Reduced cost fixing fixed 32 variables on major pass 3
Cbc0038I Pass  12: suminf.    2.12629 (25) obj. -15907.4 iterations 0
Cbc0038I Pass  13: suminf.    0.38866 (3) obj. -15903.1 iterations 23
Cbc0038I Pass  14: suminf.    0.94643 (3) obj. -16435.2 iterations 4
Cbc0038I Pass  15: suminf.    0.35628 (2) obj. -15903.1 iterations 3
Cbc0038I Pass  16: suminf.    1.33425 (14) obj. -15903.1 iterations 24
Cbc0038I Pass  17: suminf.    1.33425 (14) obj. -15903.1 iterations 2
Cbc0038I Pass  18: suminf.    0.43439 (3) obj. -15903.1 iterations 11
Cbc0038I Pass  19: suminf.    0.43439 (3) obj. -15903.1 iterations 2
Cbc0038I Pass  20: suminf.    0.36087 (2) obj. -15903.1 iterations 6
Cbc0038I Pass  21: suminf.    0.36087 (2) obj. -15903.1 iterations 1
Cbc0038I Pass  22: suminf.    0.94643 (3) obj. -16422.2 iterations 3
Cbc0038I Pass  23: suminf.    0.74776 (5) obj. -15903.1 iterations 12
Cbc0038I Pass  24: suminf.    0.57980 (5) obj. -15903.1 iterations 8
Cbc0038I Pass  25: suminf.    0.56305 (3) obj. -15903.1 iterations 5
Cbc0038I Pass  26: suminf.    0.36087 (2) obj. -15903.1 iterations 3
Cbc0038I Pass  27: suminf.    0.94643 (3) obj. -16422.2 iterations 3
Cbc0038I Pass  28: suminf.    1.11581 (10) obj. -15903.1 iterations 16
Cbc0038I Pass  29: suminf.    1.11581 (10) obj. -15903.1 iterations 3
Cbc0038I Pass  30: suminf.    0.28906 (2) obj. -15932.9 iterations 12
Cbc0038I Pass  31: suminf.    0.28906 (2) obj. -15932.9 iterations 0
Cbc0038I Pass  32: suminf.    0.62927 (2) obj. -15903.1 iterations 4
Cbc0038I Pass  33: suminf.    0.55094 (2) obj. -16105.5 iterations 3
Cbc0038I Pass  34: suminf.    0.75165 (5) obj. -15903.1 iterations 14
Cbc0038I Pass  35: suminf.    0.58884 (4) obj. -16252.9 iterations 8
Cbc0038I Pass  36: suminf.    0.86907 (3) obj. -15903.1 iterations 8
Cbc0038I Pass  37: suminf.    0.30192 (2) obj. -15903.1 iterations 6
Cbc0038I Pass  38: suminf.    0.55094 (2) obj. -16332.3 iterations 3
Cbc0038I Pass  39: suminf.    0.45714 (2) obj. -16251 iterations 2
Cbc0038I Pass  40: suminf.    1.34306 (8) obj. -15903.1 iterations 18
Cbc0038I Pass  41: suminf.    0.98678 (6) obj. -15903.1 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 57 integers at bound fixed and 0 continuous
Cbc0038I Full problem 93 rows 105 columns, reduced to 24 rows 30 columns
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I After 0.07 seconds - Feasibility pump exiting with objective of -15722.3 - took 0.04 seconds
Cbc0012I Integer solution of -15722.31 found by feasibility pump after 0 iterations and 0 nodes (0.07 seconds)
Cbc0038I Full problem 93 rows 105 columns, reduced to 13 rows 15 columns
Cbc0012I Integer solution of -15985.11 found by DiveCoefficient after 144 iterations and 0 nodes (0.29 seconds)
Cbc0031I 28 added rows had average density of 6.0357143
Cbc0013I At root node, 28 cuts changed objective from -16626.175 to -16245.414 in 12 passes
Cbc0014I Cut generator 0 (Probing) - 263 row cuts average 7.6 elements, 17 column cuts (17 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 11 row cuts average 8.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 5 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 21 row cuts average 20.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 136 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 5 row cuts average 48.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -15985.11 best solution, best possible -16245.414 (0.29 seconds)
Cbc0001I Search completed - best objective -15985.11, took 405 iterations and 6 nodes (0.33 seconds)
Cbc0032I Strong branching done 132 times (674 iterations), fathomed 1 nodes and fixed 3 variables
Cbc0035I Maximum depth 2, 49 variables fixed on reduced cost
Total time (CPU seconds):       0.24   (Wallclock seconds):       0.34

