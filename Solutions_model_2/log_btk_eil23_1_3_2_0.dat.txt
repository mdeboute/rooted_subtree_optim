Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 21 (-4) columns and 110 (-25) elements
Clp1000I sum of infeasibilities 2.36991e-06 - average 6.23662e-08, 2 fixed columns
Coin0506I Presolve 31 (-7) rows, 19 (-2) columns and 92 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 3.1288597 - largest nonzero change 0 ( 0%) - largest zero change 1.618399e-05
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Coin0511I After Postsolve, objective 161.69355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Coin0511I After Postsolve, objective 161.69355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.6935457 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.980%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.76787
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.8727 iterations 21
Cbc0038I Solution found of 14.8727
Cbc0038I Relaxing continuous gives 14.8727
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 14.8727 to -77.3117 (0.03 seconds)
Cbc0038I Round again with cutoff of -84.3623
Cbc0038I Pass   2: suminf.    1.36918 (5) obj. -84.3623 iterations 7
Cbc0038I Pass   3: suminf.    1.36918 (5) obj. -84.3623 iterations 0
Cbc0038I Pass   4: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass   5: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass   6: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass   7: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass   8: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass   9: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  10: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  11: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  12: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  13: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  14: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  15: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass  16: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass  17: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  18: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  19: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  20: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  21: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  22: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  23: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass  24: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass  25: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  26: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  27: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  28: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  29: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  30: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  31: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -77.3117 - took 0.03 seconds
Cbc0012I Integer solution of -77.31167 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 11 added rows had average density of 10.636364
Cbc0013I At root node, 11 cuts changed objective from -147.81729 to -78.887624 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 980 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 587 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 134 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -77.31167000000005, took 1693 iterations and 14 nodes (0.17 seconds)
Cbc0032I Strong branching done 86 times (398 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.16   (Wallclock seconds):       0.17

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-10) rows, 40 (-6) columns and 318 (-70) elements
Clp1000I sum of infeasibilities 3.72792e-09 - average 9.81032e-11, 18 fixed columns
Coin0506I Presolve 13 (-25) rows, 14 (-26) columns and 55 (-263) elements
Clp0029I End of values pass after 14 iterations
Clp0014I Perturbing problem by 0.001% of 0.18450864 - largest nonzero change 2.5284373e-05 ( 0.0021869008%) - largest zero change 0
Clp0000I Optimal - objective value 401.63333
Clp0000I Optimal - objective value 401.63333
Coin0511I After Postsolve, objective 401.63333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.0065663 - largest nonzero change 2.5816127e-05 ( 0.0025816127%) - largest zero change 2.9394864e-05
Clp0000I Optimal - objective value 401.63333
Clp0000I Optimal - objective value 401.63333
Clp0000I Optimal - objective value 401.63333
Coin0511I After Postsolve, objective 401.63333, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 401.633332 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 40 columns (40 integer (40 of which binary)) and 311 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 9.012%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 5.24834
Cbc0038I Pass   1: suminf.    2.02712 (9) obj. -106.507 iterations 4
Cbc0038I Pass   2: suminf.    2.02712 (9) obj. -106.507 iterations 1
Cbc0038I Solution found of -27.7823
Cbc0038I Rounding solution of -43.0992 is better than previous of -27.7823

Cbc0038I Before mini branch and bound, 20 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 40 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound improved solution from -43.0992 to -206.945 (0.01 seconds)
Cbc0038I Round again with cutoff of -217.112
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   3: suminf.    5.15859 (17) obj. -305.202 iterations 0
Cbc0038I Pass   4: suminf.    0.11357 (1) obj. -217.112 iterations 29
Cbc0038I Pass   5: suminf.    0.13537 (1) obj. -219.063 iterations 1
Cbc0038I Pass   6: suminf.    1.78706 (5) obj. -217.112 iterations 8
Cbc0038I Pass   7: suminf.    1.19556 (4) obj. -217.112 iterations 3
Cbc0038I Pass   8: suminf.    0.40000 (1) obj. -237.307 iterations 4
Cbc0038I Pass   9: suminf.    0.25436 (2) obj. -217.112 iterations 2
Cbc0038I Pass  10: suminf.    0.60890 (2) obj. -241.575 iterations 1
Cbc0038I Pass  11: suminf.    1.85293 (6) obj. -228.283 iterations 6
Cbc0038I Pass  12: suminf.    1.60769 (5) obj. -218.964 iterations 1
Cbc0038I Pass  13: suminf.    0.63963 (2) obj. -217.112 iterations 7
Cbc0038I Pass  14: suminf.    0.66256 (2) obj. -218.694 iterations 1
Cbc0038I Pass  15: suminf.    2.23384 (8) obj. -217.112 iterations 10
Cbc0038I Pass  16: suminf.    0.72334 (5) obj. -217.112 iterations 6
Cbc0038I Pass  17: suminf.    1.05172 (3) obj. -217.112 iterations 7
Cbc0038I Pass  18: suminf.    0.39739 (2) obj. -217.112 iterations 3
Cbc0038I Pass  19: suminf.    0.55402 (2) obj. -227.92 iterations 1
Cbc0038I Pass  20: suminf.    2.09515 (6) obj. -217.112 iterations 9
Cbc0038I Pass  21: suminf.    2.08312 (5) obj. -219.891 iterations 2
Cbc0038I Pass  22: suminf.    0.90987 (3) obj. -217.112 iterations 6
Cbc0038I Pass  23: suminf.    0.50402 (2) obj. -231.263 iterations 1
Cbc0038I Pass  24: suminf.    0.29893 (2) obj. -217.112 iterations 1
Cbc0038I Pass  25: suminf.    1.56545 (5) obj. -217.112 iterations 10
Cbc0038I Pass  26: suminf.    1.56545 (5) obj. -217.112 iterations 2
Cbc0038I Pass  27: suminf.    0.98288 (3) obj. -217.112 iterations 5
Cbc0038I Pass  28: suminf.    0.98288 (3) obj. -217.112 iterations 0
Cbc0038I Pass  29: suminf.    0.45663 (2) obj. -217.112 iterations 2
Cbc0038I Pass  30: suminf.    0.39739 (2) obj. -217.112 iterations 2
Cbc0038I Pass  31: suminf.    0.55402 (2) obj. -227.92 iterations 1
Cbc0038I Pass  32: suminf.    3.90629 (10) obj. -217.112 iterations 14
Cbc0038I Rounding solution of -225.45 is better than previous of -206.945

Cbc0038I Before mini branch and bound, 9 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 40 columns, reduced to 6 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I Round again with cutoff of -242.082
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  32: suminf.    5.15859 (17) obj. -305.202 iterations 0
Cbc0038I Pass  33: suminf.    0.46898 (2) obj. -242.082 iterations 28
Cbc0038I Pass  34: suminf.    0.55677 (2) obj. -248.14 iterations 1
Cbc0038I Pass  35: suminf.    2.41667 (5) obj. -242.717 iterations 14
Cbc0038I Pass  36: suminf.    1.50785 (4) obj. -242.082 iterations 5
Cbc0038I Pass  37: suminf.    0.67846 (3) obj. -242.082 iterations 5
Cbc0038I Pass  38: suminf.    0.45244 (2) obj. -242.082 iterations 3
Cbc0038I Pass  39: suminf.    0.46226 (2) obj. -242.76 iterations 1
Cbc0038I Pass  40: suminf.    2.28968 (5) obj. -242.278 iterations 10
Cbc0038I Pass  41: suminf.    1.36153 (5) obj. -242.082 iterations 4
Cbc0038I Pass  42: suminf.    0.88708 (3) obj. -242.082 iterations 3
Cbc0038I Pass  43: suminf.    0.54246 (3) obj. -242.082 iterations 2
Cbc0038I Pass  44: suminf.    0.54246 (3) obj. -242.082 iterations 0
Cbc0038I Pass  45: suminf.    0.60156 (3) obj. -248.952 iterations 4
Cbc0038I Pass  46: suminf.    0.50201 (3) obj. -242.082 iterations 1
Cbc0038I Pass  47: suminf.    0.61984 (3) obj. -242.082 iterations 2
Cbc0038I Pass  48: suminf.    0.58080 (2) obj. -242.082 iterations 2
Cbc0038I Pass  49: suminf.    0.54681 (3) obj. -242.082 iterations 3
Cbc0038I Pass  50: suminf.    0.48320 (2) obj. -242.082 iterations 1
Cbc0038I Pass  51: suminf.    0.51030 (2) obj. -243.953 iterations 1
Cbc0038I Pass  52: suminf.    2.06414 (7) obj. -242.082 iterations 7
Cbc0038I Pass  53: suminf.    1.65452 (6) obj. -242.082 iterations 4
Cbc0038I Pass  54: suminf.    1.65452 (6) obj. -242.082 iterations 0
Cbc0038I Pass  55: suminf.    1.28171 (5) obj. -242.082 iterations 6
Cbc0038I Pass  56: suminf.    1.14304 (4) obj. -242.082 iterations 2
Cbc0038I Pass  57: suminf.    1.14304 (4) obj. -242.082 iterations 0
Cbc0038I Pass  58: suminf.    0.54681 (3) obj. -242.082 iterations 4
Cbc0038I Pass  59: suminf.    0.48320 (2) obj. -242.082 iterations 1
Cbc0038I Pass  60: suminf.    0.51030 (2) obj. -243.953 iterations 1
Cbc0038I Pass  61: suminf.    1.40123 (4) obj. -242.082 iterations 8
Cbc0038I Rounding solution of -226.1 is better than previous of -225.45

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 40 columns, reduced to 5 rows 6 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -262.041
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    5.15859 (17) obj. -305.202 iterations 0
Cbc0038I Pass  62: suminf.    0.98990 (5) obj. -262.041 iterations 29
Cbc0038I Pass  63: suminf.    0.88452 (4) obj. -262.041 iterations 1
Cbc0038I Pass  64: suminf.    1.36299 (4) obj. -262.041 iterations 1
Cbc0038I Pass  65: suminf.    1.36299 (4) obj. -262.041 iterations 0
Cbc0038I Pass  66: suminf.    0.88452 (4) obj. -262.041 iterations 1
Cbc0038I Pass  67: suminf.    1.72692 (6) obj. -262.041 iterations 10
Cbc0038I Pass  68: suminf.    1.22794 (4) obj. -262.041 iterations 3
Cbc0038I Pass  69: suminf.    1.51130 (5) obj. -262.041 iterations 3
Cbc0038I Pass  70: suminf.    1.51130 (5) obj. -262.041 iterations 0
Cbc0038I Pass  71: suminf.    1.12927 (4) obj. -262.041 iterations 3
Cbc0038I Pass  72: suminf.    1.04701 (4) obj. -262.041 iterations 1
Cbc0038I Pass  73: suminf.    1.51130 (5) obj. -262.041 iterations 3
Cbc0038I Pass  74: suminf.    1.88359 (7) obj. -262.041 iterations 6
Cbc0038I Pass  75: suminf.    1.88359 (7) obj. -262.041 iterations 0
Cbc0038I Pass  76: suminf.    2.02768 (7) obj. -262.041 iterations 6
Cbc0038I Pass  77: suminf.    1.75653 (6) obj. -262.041 iterations 1
Cbc0038I Pass  78: suminf.    1.65205 (6) obj. -262.041 iterations 3
Cbc0038I Pass  79: suminf.    1.35273 (5) obj. -262.041 iterations 1
Cbc0038I Pass  80: suminf.    1.35273 (5) obj. -262.041 iterations 0
Cbc0038I Pass  81: suminf.    1.21406 (5) obj. -262.041 iterations 4
Cbc0038I Pass  82: suminf.    0.95836 (4) obj. -262.041 iterations 3
Cbc0038I Pass  83: suminf.    0.95836 (4) obj. -262.041 iterations 0
Cbc0038I Pass  84: suminf.    1.65205 (6) obj. -262.041 iterations 4
Cbc0038I Pass  85: suminf.    1.35273 (5) obj. -262.041 iterations 1
Cbc0038I Pass  86: suminf.    1.35273 (5) obj. -262.041 iterations 0
Cbc0038I Pass  87: suminf.    1.21406 (5) obj. -262.041 iterations 4
Cbc0038I Pass  88: suminf.    0.95836 (4) obj. -262.041 iterations 3
Cbc0038I Pass  89: suminf.    0.95836 (4) obj. -262.041 iterations 0
Cbc0038I Pass  90: suminf.    1.65205 (6) obj. -262.041 iterations 4
Cbc0038I Rounding solution of -226.507 is better than previous of -226.1

Cbc0038I Before mini branch and bound, 16 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -276.013
Cbc0038I Reduced cost fixing fixed 3 variables on major pass 5
Cbc0038I Pass  90: suminf.    5.15859 (17) obj. -305.202 iterations 0
Cbc0038I Pass  91: suminf.    1.51589 (5) obj. -276.013 iterations 26
Cbc0038I Pass  92: suminf.    1.28334 (5) obj. -276.013 iterations 1
Cbc0038I Pass  93: suminf.    1.51589 (5) obj. -276.013 iterations 1
Cbc0038I Pass  94: suminf.    1.68427 (6) obj. -276.013 iterations 4
Cbc0038I Pass  95: suminf.    1.68427 (6) obj. -276.013 iterations 0
Cbc0038I Pass  96: suminf.    1.68427 (6) obj. -276.013 iterations 0
Cbc0038I Pass  97: suminf.    1.66114 (5) obj. -276.013 iterations 2
Cbc0038I Pass  98: suminf.    1.44641 (4) obj. -276.189 iterations 2
Cbc0038I Pass  99: suminf.    1.66114 (5) obj. -276.013 iterations 2
Cbc0038I Pass 100: suminf.    2.58721 (8) obj. -276.013 iterations 6
Cbc0038I Pass 101: suminf.    2.58721 (8) obj. -276.013 iterations 0
Cbc0038I Pass 102: suminf.    1.53460 (6) obj. -276.013 iterations 4
Cbc0038I Pass 103: suminf.    1.53460 (6) obj. -276.013 iterations 0
Cbc0038I Pass 104: suminf.    1.98119 (6) obj. -276.013 iterations 1
Cbc0038I Pass 105: suminf.    1.98119 (6) obj. -276.013 iterations 0
Cbc0038I Pass 106: suminf.    1.53460 (6) obj. -276.013 iterations 3
Cbc0038I Pass 107: suminf.    2.56996 (8) obj. -276.013 iterations 8
Cbc0038I Pass 108: suminf.    2.27728 (8) obj. -276.013 iterations 4
Cbc0038I Pass 109: suminf.    1.51591 (6) obj. -276.013 iterations 6
Cbc0038I Pass 110: suminf.    1.51591 (6) obj. -276.013 iterations 0
Cbc0038I Pass 111: suminf.    1.81056 (6) obj. -276.013 iterations 1
Cbc0038I Pass 112: suminf.    1.81056 (6) obj. -276.013 iterations 0
Cbc0038I Pass 113: suminf.    1.51591 (6) obj. -276.013 iterations 3
Cbc0038I Pass 114: suminf.    1.94823 (6) obj. -276.013 iterations 12
Cbc0038I Pass 115: suminf.    1.72840 (5) obj. -276.078 iterations 3
Cbc0038I Pass 116: suminf.    2.12728 (7) obj. -276.013 iterations 5
Cbc0038I Pass 117: suminf.    1.77544 (4) obj. -276.013 iterations 6
Cbc0038I Pass 118: suminf.    1.75743 (5) obj. -276.013 iterations 2
Cbc0038I Pass 119: suminf.    1.80915 (5) obj. -276.013 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -226.507 - took 0.03 seconds
Cbc0012I Integer solution of -226.50716 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0038I Full problem 38 rows 40 columns, reduced to 3 rows 5 columns
Cbc0031I 5 added rows had average density of 11.8
Cbc0013I At root node, 5 cuts changed objective from -238.90987 to -230.72073 in 10 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)  in 0.000 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 27 row cuts average 13.9 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 16 row cuts average 7.6 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 11.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 32 row cuts average 13.7 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 21.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -230.72071 found by rounding after 95 iterations and 1 nodes (0.05 seconds)
Cbc0011I Exiting as integer gap of 1.9397224e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -230.7207100000001, took 99 iterations and 2 nodes (0.06 seconds)
Cbc0032I Strong branching done 18 times (59 iterations), fathomed 1 nodes and fixed 0 variables
Cbc0035I Maximum depth 0, 6 variables fixed on reduced cost
Total time (CPU seconds):       0.05   (Wallclock seconds):       0.06

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 38 (-11) rows, 21 (-4) columns and 110 (-25) elements
Clp1000I sum of infeasibilities 2.36991e-06 - average 6.23662e-08, 2 fixed columns
Coin0506I Presolve 31 (-7) rows, 19 (-2) columns and 92 (-18) elements
Clp0029I End of values pass after 19 iterations
Clp0014I Perturbing problem by 0.001% of 3.1288597 - largest nonzero change 0 ( 0%) - largest zero change 1.618399e-05
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Coin0511I After Postsolve, objective 161.69355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Clp0000I Optimal - objective value 161.69355
Coin0511I After Postsolve, objective 161.69355, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 161.6935457 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 38 rows, 21 columns (20 integer (20 of which binary)) and 110 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 5.980%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 19 integers unsatisfied sum - 7.76787
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 14.8727 iterations 21
Cbc0038I Solution found of 14.8727
Cbc0038I Relaxing continuous gives 14.8727
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound improved solution from 14.8727 to -77.3117 (0.03 seconds)
Cbc0038I Round again with cutoff of -84.3623
Cbc0038I Pass   2: suminf.    1.36918 (5) obj. -84.3623 iterations 7
Cbc0038I Pass   3: suminf.    1.36918 (5) obj. -84.3623 iterations 0
Cbc0038I Pass   4: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass   5: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass   6: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass   7: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass   8: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass   9: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  10: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  11: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  12: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  13: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  14: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  15: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass  16: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass  17: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  18: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  19: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  20: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  21: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  22: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  23: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I Pass  24: suminf.    1.07816 (4) obj. -84.3623 iterations 4
Cbc0038I Pass  25: suminf.    1.07816 (4) obj. -84.3623 iterations 0
Cbc0038I Pass  26: suminf.    1.48328 (5) obj. -84.3623 iterations 5
Cbc0038I Pass  27: suminf.    1.48328 (5) obj. -84.3623 iterations 0
Cbc0038I Pass  28: suminf.    1.21025 (8) obj. -84.3623 iterations 7
Cbc0038I Pass  29: suminf.    1.21025 (8) obj. -84.3623 iterations 0
Cbc0038I Pass  30: suminf.    0.56968 (3) obj. -84.3623 iterations 7
Cbc0038I Pass  31: suminf.    0.56968 (3) obj. -84.3623 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 1 integers at bound fixed and 0 continuous
Cbc0038I Full problem 38 rows 21 columns, reduced to 32 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I After 0.04 seconds - Feasibility pump exiting with objective of -77.3117 - took 0.05 seconds
Cbc0012I Integer solution of -77.31167 found by feasibility pump after 0 iterations and 0 nodes (0.04 seconds)
Cbc0031I 11 added rows had average density of 10.636364
Cbc0013I At root node, 11 cuts changed objective from -147.81729 to -78.887624 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 980 row cuts average 3.2 elements, 4 column cuts (4 active)  in 0.010 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 587 row cuts average 18.1 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 15 row cuts average 10.4 elements, 0 column cuts (0 active)  in 0.015 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 134 row cuts average 14.5 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 161 row cuts average 16.7 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0001I Search completed - best objective -77.31167000000005, took 1693 iterations and 14 nodes (0.18 seconds)
Cbc0032I Strong branching done 86 times (398 iterations), fathomed 1 nodes and fixed 6 variables
Cbc0035I Maximum depth 3, 14 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 36 (-13) rows, 38 (-9) columns and 289 (-100) elements
Clp1000I sum of infeasibilities 5.70435e-09 - average 1.58454e-10, 33 fixed columns
Coin0506I Presolve 2 (-34) rows, 4 (-34) columns and 8 (-281) elements
Clp0029I End of values pass after 2 iterations
Clp0000I Optimal - objective value 108.3636
Clp0000I Optimal - objective value 108.3636
Coin0511I After Postsolve, objective 108.3636, infeasibilities - dual 0 (0), primal 0 (0)
Clp0014I Perturbing problem by 0.001% of 1.4030314 - largest nonzero change 1.2864194e-05 ( 0.0009541912%) - largest zero change 2.2470649e-05
Clp0000I Optimal - objective value 213.99811
Clp0000I Optimal - objective value 213.99811
Clp0000I Optimal - objective value 213.99811
Coin0511I After Postsolve, objective 213.99811, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 213.9981055 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 14 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 11 strengthened rows, 0 substitutions
Cgl0004I processed model has 37 rows, 39 columns (39 integer (39 of which binary)) and 294 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 8.958%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 6.74143
Cbc0038I Pass   1: suminf.    1.87128 (7) obj. -53.3717 iterations 6
Cbc0038I Pass   2: suminf.    1.87128 (7) obj. -53.3717 iterations 0
Cbc0038I Solution found of -27.7823
Cbc0038I Rounding solution of -43.0992 is better than previous of -27.7823

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 39 columns, reduced to 6 rows 7 columns
Cbc0038I Mini branch and bound improved solution from -43.0992 to -58.3614 (0.01 seconds)
Cbc0038I Round again with cutoff of -66.9251
Cbc0038I Pass   3: suminf.    2.06771 (8) obj. -66.9251 iterations 1
Cbc0038I Pass   4: suminf.    2.06771 (8) obj. -66.9251 iterations 0
Cbc0038I Pass   5: suminf.    0.42105 (1) obj. -67.7297 iterations 13
Cbc0038I Pass   6: suminf.    0.43271 (1) obj. -66.9251 iterations 1
Cbc0038I Pass   7: suminf.    1.42080 (4) obj. -81.9184 iterations 6
Cbc0038I Pass   8: suminf.    1.42080 (4) obj. -81.9184 iterations 0
Cbc0038I Pass   9: suminf.    0.48371 (1) obj. -66.9251 iterations 4
Cbc0038I Pass  10: suminf.    0.47368 (1) obj. -67.6165 iterations 1
Cbc0038I Pass  11: suminf.    1.17538 (5) obj. -66.9251 iterations 8
Cbc0038I Pass  12: suminf.    0.76475 (8) obj. -66.9251 iterations 5
Cbc0038I Pass  13: suminf.    0.76475 (8) obj. -66.9251 iterations 0
Cbc0038I Pass  14: suminf.    0.51398 (2) obj. -66.9251 iterations 7
Cbc0038I Pass  15: suminf.    0.39964 (1) obj. -66.9251 iterations 1
Cbc0038I Pass  16: suminf.    0.47049 (1) obj. -78.5513 iterations 1
Cbc0038I Pass  17: suminf.    1.54993 (8) obj. -66.9251 iterations 9
Cbc0038I Pass  18: suminf.    1.01380 (4) obj. -66.9251 iterations 5
Cbc0038I Pass  19: suminf.    0.44026 (2) obj. -85.5709 iterations 5
Cbc0038I Pass  20: suminf.    0.21470 (1) obj. -66.9251 iterations 2
Cbc0038I Pass  21: suminf.    0.36488 (1) obj. -80.3697 iterations 1
Cbc0038I Pass  22: suminf.    1.60110 (5) obj. -66.9251 iterations 8
Cbc0038I Pass  23: suminf.    1.60110 (5) obj. -66.9251 iterations 1
Cbc0038I Pass  24: suminf.    0.47368 (1) obj. -73.6253 iterations 5
Cbc0038I Pass  25: suminf.    0.29025 (1) obj. -66.9251 iterations 2
Cbc0038I Pass  26: suminf.    0.48683 (1) obj. -84.523 iterations 1
Cbc0038I Pass  27: suminf.    1.41103 (5) obj. -66.9251 iterations 9
Cbc0038I Pass  28: suminf.    0.77983 (3) obj. -66.9251 iterations 4
Cbc0038I Pass  29: suminf.    0.42105 (1) obj. -78.2803 iterations 3
Cbc0038I Pass  30: suminf.    0.19769 (1) obj. -66.9251 iterations 2
Cbc0038I Pass  31: suminf.    0.26122 (1) obj. -72.6126 iterations 1
Cbc0038I Pass  32: suminf.    3.38115 (10) obj. -66.9251 iterations 19
Cbc0038I Rounding solution of -72.9862 is better than previous of -58.3614

Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 39 columns, reduced to 12 rows 18 columns
Cbc0038I Mini branch and bound improved solution from -72.9862 to -74.0766 (0.02 seconds)
Cbc0038I Round again with cutoff of -88.0608
Cbc0038I Pass  32: suminf.    2.36854 (8) obj. -88.0608 iterations 0
Cbc0038I Pass  33: suminf.    2.30257 (9) obj. -88.0608 iterations 1
Cbc0038I Pass  34: suminf.    1.50050 (11) obj. -88.0608 iterations 13
Cbc0038I Pass  35: suminf.    1.50050 (11) obj. -88.0608 iterations 0
Cbc0038I Pass  36: suminf.    0.83670 (4) obj. -88.0608 iterations 11
Cbc0038I Pass  37: suminf.    0.78210 (3) obj. -88.0608 iterations 2
Cbc0038I Pass  38: suminf.    0.49397 (2) obj. -100.354 iterations 4
Cbc0038I Pass  39: suminf.    0.33176 (1) obj. -88.0608 iterations 2
Cbc0038I Pass  40: suminf.    0.38537 (1) obj. -92.8601 iterations 1
Cbc0038I Pass  41: suminf.    2.73415 (8) obj. -90.7288 iterations 13
Cbc0038I Pass  42: suminf.    1.88828 (6) obj. -88.0608 iterations 5
Cbc0038I Pass  43: suminf.    0.79061 (4) obj. -88.0608 iterations 8
Cbc0038I Pass  44: suminf.    0.53856 (3) obj. -88.0608 iterations 4
Cbc0038I Pass  45: suminf.    0.59737 (3) obj. -90.1375 iterations 4
Cbc0038I Pass  46: suminf.    0.56727 (3) obj. -88.0608 iterations 1
Cbc0038I Pass  47: suminf.    1.11025 (6) obj. -88.0608 iterations 4
Cbc0038I Pass  48: suminf.    0.53422 (4) obj. -88.0608 iterations 2
Cbc0038I Pass  49: suminf.    1.26237 (4) obj. -88.0608 iterations 8
Cbc0038I Pass  50: suminf.    0.73230 (3) obj. -88.0608 iterations 4
Cbc0038I Pass  51: suminf.    0.30491 (3) obj. -88.0608 iterations 3
Cbc0038I Pass  52: suminf.    2.06016 (7) obj. -88.0608 iterations 4
Cbc0038I Pass  53: suminf.    0.79293 (5) obj. -88.0608 iterations 4
Cbc0038I Pass  54: suminf.    0.73230 (3) obj. -88.0608 iterations 3
Cbc0038I Pass  55: suminf.    3.42376 (8) obj. -94.6628 iterations 13
Cbc0038I Pass  56: suminf.    0.46264 (3) obj. -88.0608 iterations 8
Cbc0038I Pass  57: suminf.    0.86639 (4) obj. -88.0608 iterations 5
Cbc0038I Pass  58: suminf.    0.48720 (3) obj. -88.0608 iterations 4
Cbc0038I Pass  59: suminf.    0.49868 (3) obj. -90.548 iterations 6
Cbc0038I Pass  60: suminf.    2.27950 (6) obj. -97.8926 iterations 6
Cbc0038I Pass  61: suminf.    0.89662 (4) obj. -88.0608 iterations 6
Cbc0038I Rounding solution of -74.6114 is better than previous of -74.0766

Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 37 rows 39 columns, reduced to 13 rows 19 columns
Cbc0038I Mini branch and bound did not improve solution (0.03 seconds)
Cbc0038I Round again with cutoff of -104.842
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    2.84053 (18) obj. -104.842 iterations 2
Cbc0038I Pass  62: suminf.    2.84053 (18) obj. -104.842 iterations 0
Cbc0038I Pass  63: suminf.    1.45780 (5) obj. -104.842 iterations 31
Cbc0038I Pass  64: suminf.    1.45780 (5) obj. -104.842 iterations 0
Cbc0038I Pass  65: suminf.    1.49248 (6) obj. -104.842 iterations 2
Cbc0038I Pass  66: suminf.    1.49248 (6) obj. -104.842 iterations 0
Cbc0038I Pass  67: suminf.    1.45780 (5) obj. -104.842 iterations 2
Cbc0038I Pass  68: suminf.    3.10799 (9) obj. -104.842 iterations 8
Cbc0038I Pass  69: suminf.    3.10799 (9) obj. -104.842 iterations 0
Cbc0038I Pass  70: suminf.    2.50682 (7) obj. -104.842 iterations 4
Cbc0038I Pass  71: suminf.    1.83433 (6) obj. -104.842 iterations 3
Cbc0038I Pass  72: suminf.    1.62683 (6) obj. -104.842 iterations 2
Cbc0038I Pass  73: suminf.    1.62683 (6) obj. -104.842 iterations 0
Cbc0038I Pass  74: suminf.    1.62683 (6) obj. -104.842 iterations 0
Cbc0038I Pass  75: suminf.    2.14118 (6) obj. -104.842 iterations 1
Cbc0038I Pass  76: suminf.    2.14118 (6) obj. -104.842 iterations 0
Cbc0038I Pass  77: suminf.    1.62683 (6) obj. -104.842 iterations 2
Cbc0038I Pass  78: suminf.    1.62683 (6) obj. -104.842 iterations 0
Cbc0038I Pass  79: suminf.    1.62683 (6) obj. -104.842 iterations 0
Cbc0038I Pass  80: suminf.    2.14118 (6) obj. -104.842 iterations 1
Cbc0038I Pass  81: suminf.    2.14118 (6) obj. -104.842 iterations 0
Cbc0038I Pass  82: suminf.    1.62683 (6) obj. -104.842 iterations 2
Cbc0038I Pass  83: suminf.    1.62683 (6) obj. -104.842 iterations 0
Cbc0038I Pass  84: suminf.    1.62683 (6) obj. -104.842 iterations 0
Cbc0038I Pass  85: suminf.    2.14118 (6) obj. -104.842 iterations 1
Cbc0038I Pass  86: suminf.    2.14118 (6) obj. -104.842 iterations 0
Cbc0038I Pass  87: suminf.    1.62683 (6) obj. -104.842 iterations 2
Cbc0038I Pass  88: suminf.    1.62683 (6) obj. -104.842 iterations 0
Cbc0038I Pass  89: suminf.    1.62683 (6) obj. -104.842 iterations 0
Cbc0038I Pass  90: suminf.    2.14118 (6) obj. -104.842 iterations 1
Cbc0038I Rounding solution of -74.7497 is better than previous of -74.6114

Cbc0038I Before mini branch and bound, 14 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -116.588
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 5
Cbc0038I Pass  90: suminf.    3.87423 (18) obj. -116.588 iterations 0
Cbc0038I Pass  91: suminf.    3.87423 (18) obj. -116.588 iterations 0
Cbc0038I Pass  92: suminf.    1.77703 (7) obj. -116.588 iterations 17
Cbc0038I Pass  93: suminf.    1.77703 (7) obj. -116.588 iterations 0
Cbc0038I Pass  94: suminf.    1.93128 (6) obj. -116.588 iterations 2
Cbc0038I Pass  95: suminf.    1.66242 (6) obj. -116.588 iterations 2
Cbc0038I Pass  96: suminf.    1.82753 (6) obj. -116.588 iterations 2
Cbc0038I Pass  97: suminf.    1.82753 (6) obj. -116.588 iterations 0
Cbc0038I Pass  98: suminf.    2.40144 (8) obj. -116.588 iterations 3
Cbc0038I Pass  99: suminf.    1.73948 (7) obj. -116.588 iterations 2
Cbc0038I Pass 100: suminf.    1.89611 (6) obj. -116.588 iterations 8
Cbc0038I Pass 101: suminf.    1.64544 (6) obj. -116.588 iterations 1
Cbc0038I Pass 102: suminf.    1.89611 (6) obj. -116.588 iterations 2
Cbc0038I Pass 103: suminf.    2.06682 (7) obj. -116.588 iterations 2
Cbc0038I Pass 104: suminf.    1.70794 (7) obj. -116.588 iterations 2
Cbc0038I Pass 105: suminf.    3.35586 (9) obj. -116.588 iterations 8
Cbc0038I Pass 106: suminf.    3.14027 (9) obj. -116.588 iterations 3
Cbc0038I Pass 107: suminf.    3.00058 (9) obj. -116.588 iterations 2
Cbc0038I Pass 108: suminf.    2.01565 (7) obj. -116.588 iterations 5
Cbc0038I Pass 109: suminf.    1.92485 (7) obj. -116.588 iterations 2
Cbc0038I Pass 110: suminf.    2.46268 (7) obj. -116.588 iterations 2
Cbc0038I Pass 111: suminf.    3.96341 (11) obj. -116.588 iterations 9
Cbc0038I Pass 112: suminf.    3.30176 (10) obj. -116.588 iterations 3
Cbc0038I Pass 113: suminf.    2.14326 (7) obj. -116.588 iterations 6
Cbc0038I Pass 114: suminf.    2.14326 (7) obj. -116.588 iterations 0
Cbc0038I Pass 115: suminf.    2.33600 (7) obj. -116.588 iterations 2
Cbc0038I Pass 116: suminf.    3.50347 (9) obj. -116.588 iterations 5
Cbc0038I Pass 117: suminf.    2.92010 (8) obj. -116.588 iterations 2
Cbc0038I Pass 118: suminf.    2.14970 (7) obj. -116.588 iterations 4
Cbc0038I Pass 119: suminf.    2.14970 (7) obj. -116.588 iterations 0
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -74.7497 - took 0.04 seconds
Cbc0012I Integer solution of -74.74974 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 37 rows 39 columns, reduced to 4 rows 8 columns
Cbc0012I Integer solution of -77.2806 found by RINS after 0 iterations and 0 nodes (0.05 seconds)
Cbc0031I 5 added rows had average density of 11.6
Cbc0013I At root node, 5 cuts changed objective from -143.99714 to -77.589981 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 78 row cuts average 2.4 elements, 20 column cuts (20 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 249 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 87 row cuts average 9.3 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1 row cuts average 14.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 117 row cuts average 13.1 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 20.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0012I Integer solution of -77.31167 found by rounding after 860 iterations and 2 nodes (0.14 seconds)
Cbc0001I Search completed - best objective -77.31167000000005, took 945 iterations and 6 nodes (0.15 seconds)
Cbc0032I Strong branching done 36 times (111 iterations), fathomed 0 nodes and fixed 2 variables
Cbc0035I Maximum depth 2, 4 variables fixed on reduced cost
Total time (CPU seconds):       0.14   (Wallclock seconds):       0.15

