Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 99 (-4) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 4.43188e-05 - average 2.42179e-07, 9 fixed columns
Coin0506I Presolve 159 (-24) rows, 87 (-12) columns and 484 (-72) elements
Clp0029I End of values pass after 87 iterations
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Coin0511I After Postsolve, objective 47.249562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Coin0511I After Postsolve, objective 47.249562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.2495622 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.919%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 7.35414
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.33818 iterations 85
Cbc0038I Solution found of -3.33818
Cbc0038I Relaxing continuous gives -3.33818
Cbc0038I Rounding solution of -19.0096 is better than previous of -3.33818

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -19.0096 to -20.3641 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.0527
Cbc0038I Pass   2: suminf.    1.49777 (10) obj. -23.0527 iterations 21
Cbc0038I Pass   3: suminf.    1.06755 (4) obj. -23.0527 iterations 11
Cbc0038I Pass   4: suminf.    1.55923 (4) obj. -23.0527 iterations 12
Cbc0038I Pass   5: suminf.    1.14822 (4) obj. -23.0527 iterations 4
Cbc0038I Pass   6: suminf.    0.42574 (4) obj. -23.0527 iterations 4
Cbc0038I Pass   7: suminf.    0.35818 (3) obj. -23.0527 iterations 2
Cbc0038I Pass   8: suminf.    3.91253 (13) obj. -23.0527 iterations 23
Cbc0038I Pass   9: suminf.    1.20889 (5) obj. -23.0527 iterations 29
Cbc0038I Pass  10: suminf.    0.82046 (4) obj. -23.0527 iterations 1
Cbc0038I Pass  11: suminf.    2.67346 (12) obj. -23.0527 iterations 35
Cbc0038I Pass  12: suminf.    1.70566 (9) obj. -23.0527 iterations 12
Cbc0038I Pass  13: suminf.    1.88064 (5) obj. -23.0527 iterations 18
Cbc0038I Pass  14: suminf.    1.04712 (3) obj. -23.0527 iterations 8
Cbc0038I Pass  15: suminf.    0.99601 (3) obj. -23.0527 iterations 3
Cbc0038I Pass  16: suminf.    1.24125 (4) obj. -23.0527 iterations 6
Cbc0038I Pass  17: suminf.    1.24125 (4) obj. -23.0527 iterations 0
Cbc0038I Pass  18: suminf.    1.03547 (3) obj. -23.0527 iterations 7
Cbc0038I Pass  19: suminf.    1.75751 (7) obj. -23.0527 iterations 24
Cbc0038I Pass  20: suminf.    1.15352 (7) obj. -23.0527 iterations 13
Cbc0038I Pass  21: suminf.    1.65079 (5) obj. -23.0527 iterations 18
Cbc0038I Pass  22: suminf.    1.22920 (4) obj. -23.0527 iterations 8
Cbc0038I Pass  23: suminf.    1.13297 (4) obj. -23.0527 iterations 1
Cbc0038I Pass  24: suminf.    0.39591 (3) obj. -23.0527 iterations 8
Cbc0038I Pass  25: suminf.    0.82390 (3) obj. -23.0527 iterations 6
Cbc0038I Pass  26: suminf.    0.50727 (5) obj. -23.0527 iterations 7
Cbc0038I Pass  27: suminf.    1.22197 (4) obj. -23.0527 iterations 12
Cbc0038I Pass  28: suminf.    0.54149 (5) obj. -23.0527 iterations 5
Cbc0038I Pass  29: suminf.    1.81502 (12) obj. -23.0527 iterations 26
Cbc0038I Pass  30: suminf.    0.61262 (4) obj. -23.0527 iterations 30
Cbc0038I Pass  31: suminf.    1.18550 (4) obj. -23.0527 iterations 4
Cbc0038I Rounding solution of -23.3964 is better than previous of -20.3641

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 126 rows 70 columns - 1 fixed gives 116, 69 - still too large
Cbc0038I Full problem 183 rows 99 columns, reduced to 116 rows 69 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -28.1671
Cbc0038I Pass  31: suminf.    2.13089 (12) obj. -28.1671 iterations 2
Cbc0038I Pass  32: suminf.    1.70084 (8) obj. -28.1671 iterations 10
Cbc0038I Pass  33: suminf.    2.45559 (7) obj. -28.1671 iterations 21
Cbc0038I Pass  34: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  35: suminf.    1.94437 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  36: suminf.    1.56974 (7) obj. -28.1671 iterations 14
Cbc0038I Pass  37: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  38: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  39: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  40: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  41: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  42: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  43: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  44: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  45: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  46: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  47: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  48: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  49: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  50: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  51: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  52: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  53: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  54: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  55: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  56: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  57: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  58: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  59: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  60: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 104 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.12 seconds)
Cbc0038I After 0.12 seconds - Feasibility pump exiting with objective of -23.3964 - took 0.11 seconds
Cbc0012I Integer solution of -23.3964 found by feasibility pump after 0 iterations and 0 nodes (0.12 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 100 rows 57 columns
Cbc0031I 28 added rows had average density of 57.75
Cbc0013I At root node, 28 cuts changed objective from -47.249562 to -42.35645 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14985 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.131 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.146 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.019 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.060 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.3964 best solution, best possible -42.35645 (1.49 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 72 rows 42 columns
Cbc0012I Integer solution of -23.45748 found by RINS after 10555 iterations and 44 nodes (2.07 seconds)
Cbc0010I After 81 nodes, 15 on tree, -23.45748 best solution, best possible -42.35645 (2.20 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 3 rows 4 columns
Cbc0001I Search completed - best objective -23.45748, took 13949 iterations and 156 nodes (2.36 seconds)
Cbc0032I Strong branching done 1560 times (26221 iterations), fathomed 15 nodes and fixed 73 variables
Cbc0035I Maximum depth 48, 432 variables fixed on reduced cost
Total time (CPU seconds):       2.21   (Wallclock seconds):       2.38

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-66) rows, 151 (-51) columns and 3022 (-2631) elements
Clp1000I sum of infeasibilities 6.0008e-08 - average 4.3484e-10, 30 fixed columns
Coin0506I Presolve 109 (-29) rows, 121 (-30) columns and 1855 (-1167) elements
Clp0006I 0  Obj 45.171977 Dual inf 11.019838 (119)
Clp0029I End of values pass after 121 iterations
Clp0014I Perturbing problem by 0.001% of 1.6837734 - largest nonzero change 2.341172e-05 ( 0.0015380202%) - largest zero change 2.9127046e-05
Clp0000I Optimal - objective value 55.461543
Clp0000I Optimal - objective value 55.461543
Coin0511I After Postsolve, objective 55.461543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.461543 Dual inf 21.181452 (1)
Clp0014I Perturbing problem by 0.001% of 1.5556767 - largest nonzero change 2.826959e-05 ( 0.0025543869%) - largest zero change 2.9264714e-05
Clp0000I Optimal - objective value 55.461543
Clp0000I Optimal - objective value 55.461543
Clp0000I Optimal - objective value 55.461543
Coin0511I After Postsolve, objective 55.461543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.46154326 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 151 columns (151 integer (151 of which binary)) and 3026 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.214%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 4.53921
Cbc0038I Pass   1: suminf.    2.44553 (39) obj. -43.2293 iterations 27
Cbc0038I Pass   2: suminf.    2.44553 (39) obj. -43.2293 iterations 1
Cbc0038I Pass   3: suminf.    1.31423 (26) obj. -25.8484 iterations 13
Cbc0038I Pass   4: suminf.    0.68755 (16) obj. -15.5322 iterations 10
Cbc0038I Solution found of 1.71575
Cbc0038I Rounding solution of -2.20042 is better than previous of 1.71575

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 151 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -7.16324
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.44553 (39) obj. -43.2293 iterations 0
Cbc0038I Pass   6: suminf.    2.44553 (39) obj. -43.2293 iterations 1
Cbc0038I Pass   7: suminf.    1.31423 (26) obj. -25.8484 iterations 13
Cbc0038I Pass   8: suminf.    0.39211 (10) obj. -9.82763 iterations 16
Cbc0038I Pass   9: suminf.    0.50529 (9) obj. -7.16324 iterations 27
Cbc0038I Pass  10: suminf.    0.50529 (9) obj. -7.16324 iterations 0
Cbc0038I Pass  11: suminf.    0.64614 (7) obj. -7.16324 iterations 20
Cbc0038I Pass  12: suminf.    0.28049 (5) obj. -7.56462 iterations 16
Cbc0038I Pass  13: suminf.    0.59780 (5) obj. -7.16324 iterations 8
Cbc0038I Pass  14: suminf.    1.59916 (22) obj. -7.16324 iterations 48
Cbc0038I Pass  15: suminf.    0.51308 (21) obj. -7.16324 iterations 11
Cbc0038I Pass  16: suminf.    2.26254 (13) obj. -7.16324 iterations 39
Cbc0038I Pass  17: suminf.    1.72022 (12) obj. -7.16324 iterations 5
Cbc0038I Pass  18: suminf.    1.14907 (11) obj. -7.16324 iterations 6
Cbc0038I Pass  19: suminf.    1.98422 (14) obj. -7.16324 iterations 14
Cbc0038I Pass  20: suminf.    1.98422 (14) obj. -7.16324 iterations 3
Cbc0038I Pass  21: suminf.    2.19165 (14) obj. -7.16324 iterations 16
Cbc0038I Pass  22: suminf.    1.19240 (8) obj. -7.16324 iterations 7
Cbc0038I Pass  23: suminf.    1.17912 (8) obj. -7.16324 iterations 9
Cbc0038I Pass  24: suminf.    1.17912 (8) obj. -7.16324 iterations 3
Cbc0038I Pass  25: suminf.    1.19240 (8) obj. -7.16324 iterations 8
Cbc0038I Pass  26: suminf.    2.55535 (23) obj. -7.16324 iterations 44
Cbc0038I Pass  27: suminf.    1.41227 (15) obj. -7.16324 iterations 14
Cbc0038I Pass  28: suminf.    0.98880 (14) obj. -7.16324 iterations 5
Cbc0038I Pass  29: suminf.    1.74945 (9) obj. -7.16324 iterations 27
Cbc0038I Pass  30: suminf.    1.03006 (10) obj. -7.16324 iterations 5
Cbc0038I Pass  31: suminf.    2.53936 (8) obj. -7.16324 iterations 17
Cbc0038I Pass  32: suminf.    1.79795 (10) obj. -7.16324 iterations 5
Cbc0038I Pass  33: suminf.    1.50240 (7) obj. -7.16324 iterations 9
Cbc0038I Pass  34: suminf.    1.50466 (7) obj. -7.16324 iterations 10
Cbc0038I Rounding solution of -19.0612 is better than previous of -2.20042

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 151 columns, reduced to 56 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -19.0612 to -20.1234 (0.14 seconds)
Cbc0038I Round again with cutoff of -26.4644
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.44553 (39) obj. -43.2293 iterations 0
Cbc0038I Pass  35: suminf.    2.44553 (39) obj. -43.2293 iterations 1
Cbc0038I Pass  36: suminf.    1.94017 (21) obj. -26.4644 iterations 48
Cbc0038I Pass  37: suminf.    1.18011 (19) obj. -26.4644 iterations 15
Cbc0038I Pass  38: suminf.    2.05280 (18) obj. -26.4644 iterations 40
Cbc0038I Pass  39: suminf.    1.71488 (18) obj. -26.4644 iterations 8
Cbc0038I Pass  40: suminf.    2.05280 (18) obj. -26.4644 iterations 13
Cbc0038I Pass  41: suminf.    2.03702 (21) obj. -26.4644 iterations 47
Cbc0038I Pass  42: suminf.    1.70466 (25) obj. -26.4644 iterations 23
Cbc0038I Pass  43: suminf.    1.97319 (21) obj. -26.4644 iterations 36
Cbc0038I Pass  44: suminf.    1.82668 (28) obj. -26.4644 iterations 20
Cbc0038I Pass  45: suminf.    1.97319 (21) obj. -26.4644 iterations 20
Cbc0038I Pass  46: suminf.    1.82404 (28) obj. -26.4644 iterations 21
Cbc0038I Pass  47: suminf.    2.06035 (22) obj. -26.4644 iterations 16
Cbc0038I Pass  48: suminf.    2.11234 (25) obj. -26.4644 iterations 32
Cbc0038I Pass  49: suminf.    1.98162 (25) obj. -26.4644 iterations 2
Cbc0038I Pass  50: suminf.    2.00897 (28) obj. -26.4644 iterations 44
Cbc0038I Pass  51: suminf.    1.72339 (28) obj. -26.4644 iterations 14
Cbc0038I Pass  52: suminf.    2.54628 (24) obj. -26.4644 iterations 23
Cbc0038I Pass  53: suminf.    1.82229 (28) obj. -26.4644 iterations 18
Cbc0038I Pass  54: suminf.    1.97319 (21) obj. -26.4644 iterations 14
Cbc0038I Pass  55: suminf.    2.08523 (29) obj. -26.4644 iterations 47
Cbc0038I Pass  56: suminf.    2.07284 (22) obj. -26.4644 iterations 11
Cbc0038I Pass  57: suminf.    1.86290 (20) obj. -26.4644 iterations 28
Cbc0038I Pass  58: suminf.    1.82229 (28) obj. -26.4644 iterations 12
Cbc0038I Pass  59: suminf.    2.00897 (27) obj. -26.4644 iterations 14
Cbc0038I Pass  60: suminf.    2.13039 (24) obj. -26.4644 iterations 38
Cbc0038I Pass  61: suminf.    1.97849 (29) obj. -26.4644 iterations 14
Cbc0038I Pass  62: suminf.    2.00897 (28) obj. -26.4644 iterations 14
Cbc0038I Pass  63: suminf.    1.89746 (29) obj. -26.4644 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.17 seconds)
Cbc0038I After 0.17 seconds - Feasibility pump exiting with objective of -20.1234 - took 0.13 seconds
Cbc0012I Integer solution of -20.12345 found by feasibility pump after 0 iterations and 0 nodes (0.17 seconds)
Cbc0038I Full problem 138 rows 151 columns, reduced to 28 rows 33 columns
Cbc0031I 59 added rows had average density of 36.423729
Cbc0013I At root node, 59 cuts changed objective from -51.827708 to -31.567195 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12202 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.164 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2196 row cuts average 142.1 elements, 0 column cuts (0 active)  in 0.209 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 82 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1138 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.075 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1572 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.144 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 350 row cuts average 82.0 elements, 0 column cuts (0 active)  in 0.047 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 387 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.500 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.12345 best solution, best possible -31.567195 (2.88 seconds)
Cbc0012I Integer solution of -20.84352 found by rounding after 7128 iterations and 1 nodes (3.04 seconds)
Cbc0012I Integer solution of -21.16655 found by rounding after 7129 iterations and 2 nodes (3.06 seconds)
Cbc0012I Integer solution of -21.22694 found by DiveCoefficient after 7130 iterations and 2 nodes (3.08 seconds)
Cbc0012I Integer solution of -22.78262 found by DiveCoefficient after 7157 iterations and 3 nodes (3.14 seconds)
Cbc0012I Integer solution of -22.99392 found by rounding after 7176 iterations and 4 nodes (3.19 seconds)
Cbc0012I Integer solution of -23.0884 found by rounding after 7184 iterations and 5 nodes (3.21 seconds)
Cbc0004I Integer solution of -23.3367 found after 7271 iterations and 10 nodes (3.46 seconds)
Cbc0012I Integer solution of -23.34654 found by rounding after 7326 iterations and 12 nodes (3.53 seconds)
Cbc0012I Integer solution of -23.3964 found by DiveCoefficient after 7326 iterations and 12 nodes (3.54 seconds)
Cbc0004I Integer solution of -23.45748 found after 7343 iterations and 12 nodes (3.58 seconds)
Cbc0010I After 14 nodes, 1 on tree, -23.45748 best solution, best possible -30.216942 (4.06 seconds)
Cbc0010I After 20 nodes, 3 on tree, -23.45748 best solution, best possible -29.812522 (4.91 seconds)
Cbc0010I After 30 nodes, 7 on tree, -23.45748 best solution, best possible -29.812522 (5.68 seconds)
Cbc0038I Full problem 138 rows 151 columns, reduced to 69 rows 82 columns
Cbc0010I After 47 nodes, 7 on tree, -23.45748 best solution, best possible -29.812522 (6.44 seconds)
Cbc0010I After 62 nodes, 4 on tree, -23.45748 best solution, best possible -29.812522 (7.16 seconds)
Cbc0001I Search completed - best objective -23.45748, took 11742 iterations and 68 nodes (7.30 seconds)
Cbc0032I Strong branching done 902 times (16468 iterations), fathomed 8 nodes and fixed 11 variables
Cbc0035I Maximum depth 19, 148 variables fixed on reduced cost
Total time (CPU seconds):       5.41   (Wallclock seconds):       7.34

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 183 (-22) rows, 99 (-4) columns and 556 (-47) elements
Clp1000I sum of infeasibilities 4.43188e-05 - average 2.42179e-07, 9 fixed columns
Coin0506I Presolve 159 (-24) rows, 87 (-12) columns and 484 (-72) elements
Clp0029I End of values pass after 87 iterations
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Coin0511I After Postsolve, objective 47.249562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Clp0000I Optimal - objective value 47.249562
Coin0511I After Postsolve, objective 47.249562, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 47.2495622 - 0 iterations time 0.022, Presolve 0.00, Idiot 0.02

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 183 rows, 99 columns (98 integer (98 of which binary)) and 556 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 0.919%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 54 integers unsatisfied sum - 7.35414
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -3.33818 iterations 85
Cbc0038I Solution found of -3.33818
Cbc0038I Relaxing continuous gives -3.33818
Cbc0038I Rounding solution of -19.0096 is better than previous of -3.33818

Cbc0038I Before mini branch and bound, 44 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 98 rows 55 columns
Cbc0038I Mini branch and bound improved solution from -19.0096 to -20.3641 (0.05 seconds)
Cbc0038I Round again with cutoff of -23.0527
Cbc0038I Pass   2: suminf.    1.49777 (10) obj. -23.0527 iterations 21
Cbc0038I Pass   3: suminf.    1.06755 (4) obj. -23.0527 iterations 11
Cbc0038I Pass   4: suminf.    1.55923 (4) obj. -23.0527 iterations 12
Cbc0038I Pass   5: suminf.    1.14822 (4) obj. -23.0527 iterations 4
Cbc0038I Pass   6: suminf.    0.42574 (4) obj. -23.0527 iterations 4
Cbc0038I Pass   7: suminf.    0.35818 (3) obj. -23.0527 iterations 2
Cbc0038I Pass   8: suminf.    3.91253 (13) obj. -23.0527 iterations 23
Cbc0038I Pass   9: suminf.    1.20889 (5) obj. -23.0527 iterations 29
Cbc0038I Pass  10: suminf.    0.82046 (4) obj. -23.0527 iterations 1
Cbc0038I Pass  11: suminf.    2.67346 (12) obj. -23.0527 iterations 35
Cbc0038I Pass  12: suminf.    1.70566 (9) obj. -23.0527 iterations 12
Cbc0038I Pass  13: suminf.    1.88064 (5) obj. -23.0527 iterations 18
Cbc0038I Pass  14: suminf.    1.04712 (3) obj. -23.0527 iterations 8
Cbc0038I Pass  15: suminf.    0.99601 (3) obj. -23.0527 iterations 3
Cbc0038I Pass  16: suminf.    1.24125 (4) obj. -23.0527 iterations 6
Cbc0038I Pass  17: suminf.    1.24125 (4) obj. -23.0527 iterations 0
Cbc0038I Pass  18: suminf.    1.03547 (3) obj. -23.0527 iterations 7
Cbc0038I Pass  19: suminf.    1.75751 (7) obj. -23.0527 iterations 24
Cbc0038I Pass  20: suminf.    1.15352 (7) obj. -23.0527 iterations 13
Cbc0038I Pass  21: suminf.    1.65079 (5) obj. -23.0527 iterations 18
Cbc0038I Pass  22: suminf.    1.22920 (4) obj. -23.0527 iterations 8
Cbc0038I Pass  23: suminf.    1.13297 (4) obj. -23.0527 iterations 1
Cbc0038I Pass  24: suminf.    0.39591 (3) obj. -23.0527 iterations 8
Cbc0038I Pass  25: suminf.    0.82390 (3) obj. -23.0527 iterations 6
Cbc0038I Pass  26: suminf.    0.50727 (5) obj. -23.0527 iterations 7
Cbc0038I Pass  27: suminf.    1.22197 (4) obj. -23.0527 iterations 12
Cbc0038I Pass  28: suminf.    0.54149 (5) obj. -23.0527 iterations 5
Cbc0038I Pass  29: suminf.    1.81502 (12) obj. -23.0527 iterations 26
Cbc0038I Pass  30: suminf.    0.61262 (4) obj. -23.0527 iterations 30
Cbc0038I Pass  31: suminf.    1.18550 (4) obj. -23.0527 iterations 4
Cbc0038I Rounding solution of -23.3964 is better than previous of -20.3641

Cbc0038I Before mini branch and bound, 28 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 126 rows 70 columns - 1 fixed gives 116, 69 - still too large
Cbc0038I Full problem 183 rows 99 columns, reduced to 116 rows 69 columns - too large
Cbc0038I Mini branch and bound did not improve solution (0.07 seconds)
Cbc0038I Round again with cutoff of -28.1671
Cbc0038I Pass  31: suminf.    2.13089 (12) obj. -28.1671 iterations 2
Cbc0038I Pass  32: suminf.    1.70084 (8) obj. -28.1671 iterations 10
Cbc0038I Pass  33: suminf.    2.45559 (7) obj. -28.1671 iterations 21
Cbc0038I Pass  34: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  35: suminf.    1.94437 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  36: suminf.    1.56974 (7) obj. -28.1671 iterations 14
Cbc0038I Pass  37: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  38: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  39: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  40: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  41: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  42: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  43: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  44: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  45: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  46: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  47: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  48: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  49: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  50: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  51: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  52: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  53: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  54: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  55: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I Pass  56: suminf.    1.56974 (7) obj. -28.1671 iterations 15
Cbc0038I Pass  57: suminf.    1.56974 (7) obj. -28.1671 iterations 0
Cbc0038I Pass  58: suminf.    2.45559 (7) obj. -28.1671 iterations 11
Cbc0038I Pass  59: suminf.    2.01856 (7) obj. -28.1671 iterations 16
Cbc0038I Pass  60: suminf.    1.94437 (7) obj. -28.1671 iterations 12
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 40 integers at bound fixed and 0 continuous
Cbc0038I Full problem 183 rows 99 columns, reduced to 104 rows 59 columns
Cbc0038I Mini branch and bound did not improve solution (0.14 seconds)
Cbc0038I After 0.14 seconds - Feasibility pump exiting with objective of -23.3964 - took 0.12 seconds
Cbc0012I Integer solution of -23.3964 found by feasibility pump after 0 iterations and 0 nodes (0.14 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 100 rows 57 columns
Cbc0031I 28 added rows had average density of 57.75
Cbc0013I At root node, 28 cuts changed objective from -47.249562 to -42.35645 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 14985 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.135 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 1845 row cuts average 98.0 elements, 0 column cuts (0 active)  in 0.150 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.011 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 207 row cuts average 97.8 elements, 0 column cuts (0 active)  in 0.064 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -23.3964 best solution, best possible -42.35645 (1.53 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 72 rows 42 columns
Cbc0012I Integer solution of -23.45748 found by RINS after 10555 iterations and 44 nodes (1.97 seconds)
Cbc0038I Full problem 183 rows 99 columns, reduced to 3 rows 4 columns
Cbc0010I After 138 nodes, 7 on tree, -23.45748 best solution, best possible -42.35645 (2.23 seconds)
Cbc0001I Search completed - best objective -23.45748, took 13949 iterations and 156 nodes (2.28 seconds)
Cbc0032I Strong branching done 1560 times (26221 iterations), fathomed 15 nodes and fixed 73 variables
Cbc0035I Maximum depth 48, 432 variables fixed on reduced cost
Total time (CPU seconds):       2.18   (Wallclock seconds):       2.30

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 138 (-67) rows, 151 (-52) columns and 3022 (-2632) elements
Clp1000I sum of infeasibilities 6.0008e-08 - average 4.3484e-10, 30 fixed columns
Coin0506I Presolve 109 (-29) rows, 121 (-30) columns and 1855 (-1167) elements
Clp0006I 0  Obj 45.171977 Dual inf 11.019838 (119)
Clp0029I End of values pass after 121 iterations
Clp0014I Perturbing problem by 0.001% of 1.6837734 - largest nonzero change 2.341172e-05 ( 0.0015380202%) - largest zero change 2.9127046e-05
Clp0000I Optimal - objective value 55.461543
Clp0000I Optimal - objective value 55.461543
Coin0511I After Postsolve, objective 55.461543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 55.461543 Dual inf 21.181452 (1)
Clp0014I Perturbing problem by 0.001% of 1.5556767 - largest nonzero change 2.826959e-05 ( 0.0025543869%) - largest zero change 2.9264714e-05
Clp0000I Optimal - objective value 55.461543
Clp0000I Optimal - objective value 55.461543
Clp0000I Optimal - objective value 55.461543
Coin0511I After Postsolve, objective 55.461543, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 55.46154326 - 0 iterations time 0.042, Presolve 0.00, Idiot 0.04

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 138 rows, 151 columns (151 integer (151 of which binary)) and 3026 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 6.214%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 48 integers unsatisfied sum - 4.53921
Cbc0038I Pass   1: suminf.    2.44553 (39) obj. -43.2293 iterations 27
Cbc0038I Pass   2: suminf.    2.44553 (39) obj. -43.2293 iterations 1
Cbc0038I Pass   3: suminf.    1.31423 (26) obj. -25.8484 iterations 13
Cbc0038I Pass   4: suminf.    0.68755 (16) obj. -15.5322 iterations 10
Cbc0038I Solution found of 1.71575
Cbc0038I Rounding solution of -2.20042 is better than previous of 1.71575

Cbc0038I Before mini branch and bound, 102 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 151 columns, reduced to 10 rows 10 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -7.16324
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 2
Cbc0038I Pass   5: suminf.    2.44553 (39) obj. -43.2293 iterations 0
Cbc0038I Pass   6: suminf.    2.44553 (39) obj. -43.2293 iterations 1
Cbc0038I Pass   7: suminf.    1.31423 (26) obj. -25.8484 iterations 13
Cbc0038I Pass   8: suminf.    0.39211 (10) obj. -9.82763 iterations 16
Cbc0038I Pass   9: suminf.    0.50529 (9) obj. -7.16324 iterations 27
Cbc0038I Pass  10: suminf.    0.50529 (9) obj. -7.16324 iterations 0
Cbc0038I Pass  11: suminf.    0.64614 (7) obj. -7.16324 iterations 20
Cbc0038I Pass  12: suminf.    0.28049 (5) obj. -7.56462 iterations 16
Cbc0038I Pass  13: suminf.    0.59780 (5) obj. -7.16324 iterations 8
Cbc0038I Pass  14: suminf.    1.59916 (22) obj. -7.16324 iterations 48
Cbc0038I Pass  15: suminf.    0.51308 (21) obj. -7.16324 iterations 11
Cbc0038I Pass  16: suminf.    2.26254 (13) obj. -7.16324 iterations 39
Cbc0038I Pass  17: suminf.    1.72022 (12) obj. -7.16324 iterations 5
Cbc0038I Pass  18: suminf.    1.14907 (11) obj. -7.16324 iterations 6
Cbc0038I Pass  19: suminf.    1.98422 (14) obj. -7.16324 iterations 14
Cbc0038I Pass  20: suminf.    1.98422 (14) obj. -7.16324 iterations 3
Cbc0038I Pass  21: suminf.    2.19165 (14) obj. -7.16324 iterations 16
Cbc0038I Pass  22: suminf.    1.19240 (8) obj. -7.16324 iterations 7
Cbc0038I Pass  23: suminf.    1.17912 (8) obj. -7.16324 iterations 9
Cbc0038I Pass  24: suminf.    1.17912 (8) obj. -7.16324 iterations 3
Cbc0038I Pass  25: suminf.    1.19240 (8) obj. -7.16324 iterations 8
Cbc0038I Pass  26: suminf.    2.55535 (23) obj. -7.16324 iterations 44
Cbc0038I Pass  27: suminf.    1.41227 (15) obj. -7.16324 iterations 14
Cbc0038I Pass  28: suminf.    0.98880 (14) obj. -7.16324 iterations 5
Cbc0038I Pass  29: suminf.    1.74945 (9) obj. -7.16324 iterations 27
Cbc0038I Pass  30: suminf.    1.03006 (10) obj. -7.16324 iterations 5
Cbc0038I Pass  31: suminf.    2.53936 (8) obj. -7.16324 iterations 17
Cbc0038I Pass  32: suminf.    1.79795 (10) obj. -7.16324 iterations 5
Cbc0038I Pass  33: suminf.    1.50240 (7) obj. -7.16324 iterations 9
Cbc0038I Pass  34: suminf.    1.50466 (7) obj. -7.16324 iterations 10
Cbc0038I Rounding solution of -19.0612 is better than previous of -2.20042

Cbc0038I Before mini branch and bound, 75 integers at bound fixed and 0 continuous
Cbc0038I Full problem 138 rows 151 columns, reduced to 56 rows 63 columns
Cbc0038I Mini branch and bound improved solution from -19.0612 to -20.1234 (0.13 seconds)
Cbc0038I Round again with cutoff of -26.4644
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 3
Cbc0038I Pass  34: suminf.    2.44553 (39) obj. -43.2293 iterations 0
Cbc0038I Pass  35: suminf.    2.44553 (39) obj. -43.2293 iterations 1
Cbc0038I Pass  36: suminf.    1.94017 (21) obj. -26.4644 iterations 48
Cbc0038I Pass  37: suminf.    1.18011 (19) obj. -26.4644 iterations 15
Cbc0038I Pass  38: suminf.    2.05280 (18) obj. -26.4644 iterations 40
Cbc0038I Pass  39: suminf.    1.71488 (18) obj. -26.4644 iterations 8
Cbc0038I Pass  40: suminf.    2.05280 (18) obj. -26.4644 iterations 13
Cbc0038I Pass  41: suminf.    2.03702 (21) obj. -26.4644 iterations 47
Cbc0038I Pass  42: suminf.    1.70466 (25) obj. -26.4644 iterations 23
Cbc0038I Pass  43: suminf.    1.97319 (21) obj. -26.4644 iterations 36
Cbc0038I Pass  44: suminf.    1.82668 (28) obj. -26.4644 iterations 20
Cbc0038I Pass  45: suminf.    1.97319 (21) obj. -26.4644 iterations 20
Cbc0038I Pass  46: suminf.    1.82404 (28) obj. -26.4644 iterations 21
Cbc0038I Pass  47: suminf.    2.06035 (22) obj. -26.4644 iterations 16
Cbc0038I Pass  48: suminf.    2.11234 (25) obj. -26.4644 iterations 32
Cbc0038I Pass  49: suminf.    1.98162 (25) obj. -26.4644 iterations 2
Cbc0038I Pass  50: suminf.    2.00897 (28) obj. -26.4644 iterations 44
Cbc0038I Pass  51: suminf.    1.72339 (28) obj. -26.4644 iterations 14
Cbc0038I Pass  52: suminf.    2.54628 (24) obj. -26.4644 iterations 23
Cbc0038I Pass  53: suminf.    1.82229 (28) obj. -26.4644 iterations 18
Cbc0038I Pass  54: suminf.    1.97319 (21) obj. -26.4644 iterations 14
Cbc0038I Pass  55: suminf.    2.08523 (29) obj. -26.4644 iterations 47
Cbc0038I Pass  56: suminf.    2.07284 (22) obj. -26.4644 iterations 11
Cbc0038I Pass  57: suminf.    1.86290 (20) obj. -26.4644 iterations 28
Cbc0038I Pass  58: suminf.    1.82229 (28) obj. -26.4644 iterations 12
Cbc0038I Pass  59: suminf.    2.00897 (27) obj. -26.4644 iterations 14
Cbc0038I Pass  60: suminf.    2.13039 (24) obj. -26.4644 iterations 38
Cbc0038I Pass  61: suminf.    1.97849 (29) obj. -26.4644 iterations 14
Cbc0038I Pass  62: suminf.    2.00897 (28) obj. -26.4644 iterations 14
Cbc0038I Pass  63: suminf.    1.89746 (29) obj. -26.4644 iterations 18
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 77 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.16 seconds)
Cbc0038I After 0.16 seconds - Feasibility pump exiting with objective of -20.1234 - took 0.12 seconds
Cbc0012I Integer solution of -20.12345 found by feasibility pump after 0 iterations and 0 nodes (0.16 seconds)
Cbc0038I Full problem 138 rows 151 columns, reduced to 28 rows 33 columns
Cbc0031I 59 added rows had average density of 36.423729
Cbc0013I At root node, 59 cuts changed objective from -51.827708 to -31.567195 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 12202 row cuts average 2.1 elements, 0 column cuts (0 active)  in 0.180 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 2196 row cuts average 142.1 elements, 0 column cuts (0 active)  in 0.217 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 82 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.051 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 1138 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.032 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.080 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 1572 row cuts average 7.5 elements, 0 column cuts (0 active)  in 0.149 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 350 row cuts average 82.0 elements, 0 column cuts (0 active)  in 0.048 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 387 row cuts average 22.4 elements, 0 column cuts (0 active)  in 0.513 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -20.12345 best solution, best possible -31.567195 (3.08 seconds)
Cbc0012I Integer solution of -20.84352 found by rounding after 7128 iterations and 1 nodes (3.30 seconds)
Cbc0012I Integer solution of -21.16655 found by rounding after 7129 iterations and 2 nodes (3.32 seconds)
Cbc0012I Integer solution of -21.22694 found by DiveCoefficient after 7130 iterations and 2 nodes (3.35 seconds)
Cbc0012I Integer solution of -22.78262 found by DiveCoefficient after 7157 iterations and 3 nodes (3.44 seconds)
Cbc0012I Integer solution of -22.99392 found by rounding after 7176 iterations and 4 nodes (3.52 seconds)
Cbc0012I Integer solution of -23.0884 found by rounding after 7184 iterations and 5 nodes (3.56 seconds)
Cbc0010I After 9 nodes, 5 on tree, -23.0884 best solution, best possible -31.567195 (3.89 seconds)
Cbc0004I Integer solution of -23.3367 found after 7271 iterations and 10 nodes (3.93 seconds)
Cbc0012I Integer solution of -23.34654 found by rounding after 7326 iterations and 12 nodes (4.03 seconds)
Cbc0012I Integer solution of -23.3964 found by DiveCoefficient after 7326 iterations and 12 nodes (4.03 seconds)
Cbc0004I Integer solution of -23.45748 found after 7343 iterations and 12 nodes (4.08 seconds)
Cbc0010I After 14 nodes, 1 on tree, -23.45748 best solution, best possible -30.216942 (4.63 seconds)
Cbc0010I After 19 nodes, 2 on tree, -23.45748 best solution, best possible -29.812522 (5.38 seconds)
Cbc0010I After 24 nodes, 5 on tree, -23.45748 best solution, best possible -29.812522 (6.17 seconds)
Cbc0010I After 35 nodes, 7 on tree, -23.45748 best solution, best possible -29.812522 (6.93 seconds)
Cbc0038I Full problem 138 rows 151 columns, reduced to 69 rows 82 columns
Cbc0010I After 47 nodes, 7 on tree, -23.45748 best solution, best possible -29.812522 (7.69 seconds)
Cbc0010I After 56 nodes, 6 on tree, -23.45748 best solution, best possible -29.812522 (8.46 seconds)
Cbc0001I Search completed - best objective -23.45748, took 11742 iterations and 68 nodes (8.96 seconds)
Cbc0032I Strong branching done 902 times (16468 iterations), fathomed 8 nodes and fixed 11 variables
Cbc0035I Maximum depth 19, 148 variables fixed on reduced cost
Total time (CPU seconds):       6.39   (Wallclock seconds):       9.01

