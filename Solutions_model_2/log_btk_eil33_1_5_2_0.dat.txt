Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 5.24601e-05 - average 9.53821e-07, 2 fixed columns
Coin0506I Presolve 49 (-6) rows, 30 (-3) columns and 150 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 2.7130797 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Coin0511I After Postsolve, objective 90.731516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Coin0511I After Postsolve, objective 90.731516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.73151628 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.09087
Cbc0038I Pass   1: suminf.    0.06000 (1) obj. -37.9939 iterations 12
Cbc0038I Solution found of -16.9091
Cbc0038I Relaxing continuous gives -16.9091
Cbc0038I Rounding solution of -27.4895 is better than previous of -16.9091

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -27.4895 to -39.7241 (0.01 seconds)
Cbc0038I Round again with cutoff of -44.825
Cbc0038I Pass   2: suminf.    0.28446 (4) obj. -44.825 iterations 3
Cbc0038I Pass   3: suminf.    1.05136 (3) obj. -44.825 iterations 5
Cbc0038I Pass   4: suminf.    0.33000 (1) obj. -44.825 iterations 4
Cbc0038I Pass   5: suminf.    0.44023 (1) obj. -44.825 iterations 1
Cbc0038I Pass   6: suminf.    0.34124 (1) obj. -44.825 iterations 10
Cbc0038I Pass   7: suminf.    0.34124 (1) obj. -44.825 iterations 2
Cbc0038I Pass   8: suminf.    0.39858 (1) obj. -44.825 iterations 1
Cbc0038I Pass   9: suminf.    0.70317 (3) obj. -44.825 iterations 3
Cbc0038I Pass  10: suminf.    0.47341 (1) obj. -44.825 iterations 2
Cbc0038I Pass  11: suminf.    0.45837 (1) obj. -44.825 iterations 1
Cbc0038I Pass  12: suminf.    1.99058 (6) obj. -44.825 iterations 19
Cbc0038I Pass  13: suminf.    0.75152 (3) obj. -44.825 iterations 8
Cbc0038I Pass  14: suminf.    1.04088 (3) obj. -44.825 iterations 3
Cbc0038I Pass  15: suminf.    0.78758 (3) obj. -44.825 iterations 1
Cbc0038I Pass  16: suminf.    0.78758 (3) obj. -44.825 iterations 0
Cbc0038I Pass  17: suminf.    1.26811 (3) obj. -44.825 iterations 2
Cbc0038I Pass  18: suminf.    0.99450 (6) obj. -44.825 iterations 4
Cbc0038I Pass  19: suminf.    0.91784 (5) obj. -44.825 iterations 6
Cbc0038I Pass  20: suminf.    1.63448 (4) obj. -44.825 iterations 5
Cbc0038I Pass  21: suminf.    0.74818 (3) obj. -44.825 iterations 2
Cbc0038I Pass  22: suminf.    0.74818 (3) obj. -44.825 iterations 0
Cbc0038I Pass  23: suminf.    1.23637 (3) obj. -44.825 iterations 2
Cbc0038I Pass  24: suminf.    1.20266 (5) obj. -44.825 iterations 7
Cbc0038I Pass  25: suminf.    0.83566 (4) obj. -44.825 iterations 4
Cbc0038I Pass  26: suminf.    0.85130 (3) obj. -44.825 iterations 4
Cbc0038I Pass  27: suminf.    1.63116 (6) obj. -44.825 iterations 15
Cbc0038I Pass  28: suminf.    1.31434 (5) obj. -44.825 iterations 1
Cbc0038I Pass  29: suminf.    0.88089 (3) obj. -44.825 iterations 6
Cbc0038I Pass  30: suminf.    0.77383 (3) obj. -44.825 iterations 2
Cbc0038I Pass  31: suminf.    0.96975 (3) obj. -44.825 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 43 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -39.7241 to -40.6553 (0.04 seconds)
Cbc0038I Round again with cutoff of -54.0063
Cbc0038I Pass  31: suminf.    0.74621 (4) obj. -54.0063 iterations 0
Cbc0038I Pass  32: suminf.    1.01390 (5) obj. -54.0063 iterations 5
Cbc0038I Pass  33: suminf.    0.40229 (3) obj. -54.0063 iterations 2
Cbc0038I Pass  34: suminf.    0.60245 (2) obj. -54.0063 iterations 3
Cbc0038I Pass  35: suminf.    0.62210 (4) obj. -54.0063 iterations 5
Cbc0038I Pass  36: suminf.    1.39040 (5) obj. -54.0063 iterations 7
Cbc0038I Pass  37: suminf.    1.10246 (4) obj. -54.0063 iterations 1
Cbc0038I Pass  38: suminf.    1.34348 (4) obj. -54.0063 iterations 6
Cbc0038I Pass  39: suminf.    1.28142 (3) obj. -54.0063 iterations 4
Cbc0038I Pass  40: suminf.    0.87632 (3) obj. -54.0063 iterations 1
Cbc0038I Pass  41: suminf.    0.69993 (3) obj. -54.0063 iterations 1
Cbc0038I Pass  42: suminf.    1.28142 (3) obj. -54.0063 iterations 2
Cbc0038I Pass  43: suminf.    2.72539 (10) obj. -54.0063 iterations 14
Cbc0038I Pass  44: suminf.    2.25024 (8) obj. -54.0063 iterations 4
Cbc0038I Pass  45: suminf.    1.47093 (7) obj. -54.0063 iterations 8
Cbc0038I Pass  46: suminf.    1.29113 (9) obj. -54.0063 iterations 2
Cbc0038I Pass  47: suminf.    2.42802 (6) obj. -54.0063 iterations 14
Cbc0038I Pass  48: suminf.    0.83965 (2) obj. -54.0063 iterations 4
Cbc0038I Pass  49: suminf.    0.36075 (2) obj. -54.0063 iterations 1
Cbc0038I Pass  50: suminf.    2.18866 (11) obj. -54.0063 iterations 12
Cbc0038I Pass  51: suminf.    1.99948 (13) obj. -54.0063 iterations 5
Cbc0038I Pass  52: suminf.    2.14406 (6) obj. -54.0063 iterations 13
Cbc0038I Pass  53: suminf.    1.45207 (4) obj. -54.0063 iterations 3
Cbc0038I Pass  54: suminf.    1.47349 (5) obj. -54.0063 iterations 3
Cbc0038I Pass  55: suminf.    1.29367 (5) obj. -54.0063 iterations 1
Cbc0038I Pass  56: suminf.    1.29367 (5) obj. -54.0063 iterations 0
Cbc0038I Pass  57: suminf.    1.77891 (5) obj. -54.0063 iterations 3
Cbc0038I Pass  58: suminf.    1.62214 (4) obj. -54.0063 iterations 2
Cbc0038I Pass  59: suminf.    1.45207 (4) obj. -54.0063 iterations 2
Cbc0038I Pass  60: suminf.    1.47349 (5) obj. -54.0063 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 26 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -40.6553 - took 0.07 seconds
Cbc0012I Integer solution of -40.655255 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 21 rows 17 columns
Cbc0031I 10 added rows had average density of 24.3
Cbc0013I At root node, 10 cuts changed objective from -90.731516 to -65.688526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1469 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 879 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.746 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.655255 best solution, best possible -65.687564 (1.52 seconds)
Cbc0001I Search completed - best objective -40.655255, took 2964 iterations and 22 nodes (1.58 seconds)
Cbc0032I Strong branching done 194 times (1888 iterations), fathomed 4 nodes and fixed 14 variables
Cbc0035I Maximum depth 4, 48 variables fixed on reduced cost
Total time (CPU seconds):       1.06   (Wallclock seconds):       1.59

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-19) rows, 58 (-8) columns and 564 (-159) elements
Clp1000I sum of infeasibilities 1.94651e-08 - average 3.97246e-10, 12 fixed columns
Coin0506I Presolve 40 (-9) rows, 46 (-12) columns and 355 (-209) elements
Clp0006I 0  Obj 85.438653 Dual inf 6.9202046 (46)
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.9341003 - largest nonzero change 1.7999887e-05 ( 0.0011547075%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 112.60125
Clp0000I Optimal - objective value 112.60125
Coin0511I After Postsolve, objective 112.60125, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 112.60125
Clp0000I Optimal - objective value 112.60125
Clp0000I Optimal - objective value 112.60125
Clp0000I Optimal - objective value 112.60125
Coin0511I After Postsolve, objective 112.60125, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.6012463 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 58 columns (58 integer (58 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.560%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.20315
Cbc0038I Pass   1: suminf.    1.13441 (15) obj. -9.93236 iterations 11
Cbc0038I Pass   2: suminf.    1.13441 (15) obj. -9.93236 iterations 0
Cbc0038I Solution found of 34.5604
Cbc0038I Rounding solution of -13.1928 is better than previous of 34.5604

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -13.1928 to -23.9264 (0.02 seconds)
Cbc0038I Round again with cutoff of -31.7125
Cbc0038I Pass   3: suminf.    2.17367 (18) obj. -31.7125 iterations 1
Cbc0038I Pass   4: suminf.    2.17367 (18) obj. -31.7125 iterations 0
Cbc0038I Pass   5: suminf.    0.64855 (4) obj. -31.7125 iterations 26
Cbc0038I Pass   6: suminf.    0.56417 (3) obj. -33.6052 iterations 3
Cbc0038I Pass   7: suminf.    0.29451 (2) obj. -31.7125 iterations 4
Cbc0038I Pass   8: suminf.    0.29451 (2) obj. -31.7125 iterations 1
Cbc0038I Pass   9: suminf.    0.19582 (1) obj. -31.7125 iterations 1
Cbc0038I Pass  10: suminf.    0.43520 (2) obj. -49.4194 iterations 4
Cbc0038I Pass  11: suminf.    0.29539 (2) obj. -31.7125 iterations 2
Cbc0038I Pass  12: suminf.    0.29539 (2) obj. -31.7125 iterations 2
Cbc0038I Pass  13: suminf.    2.15780 (8) obj. -31.7125 iterations 12
Cbc0038I Pass  14: suminf.    2.15780 (8) obj. -31.7125 iterations 2
Cbc0038I Pass  15: suminf.    0.79580 (2) obj. -34.8996 iterations 10
Cbc0038I Pass  16: suminf.    0.65371 (2) obj. -31.7125 iterations 2
Cbc0038I Pass  17: suminf.    1.42745 (6) obj. -32.0639 iterations 20
Cbc0038I Pass  18: suminf.    0.97802 (5) obj. -36.8174 iterations 6
Cbc0038I Pass  19: suminf.    1.02810 (3) obj. -31.7125 iterations 10
Cbc0038I Pass  20: suminf.    0.69147 (3) obj. -31.7125 iterations 3
Cbc0038I Pass  21: suminf.    0.40116 (3) obj. -31.7125 iterations 2
Cbc0038I Pass  22: suminf.    0.62040 (3) obj. -41.9403 iterations 1
Cbc0038I Pass  23: suminf.    0.31223 (2) obj. -31.7125 iterations 4
Cbc0038I Pass  24: suminf.    0.40116 (3) obj. -31.7125 iterations 3
Cbc0038I Pass  25: suminf.    1.98142 (7) obj. -31.7125 iterations 18
Cbc0038I Pass  26: suminf.    1.30333 (7) obj. -31.7125 iterations 5
Cbc0038I Pass  27: suminf.    1.46250 (7) obj. -31.7125 iterations 5
Cbc0038I Pass  28: suminf.    1.30542 (7) obj. -31.7125 iterations 2
Cbc0038I Pass  29: suminf.    1.09638 (5) obj. -31.7125 iterations 7
Cbc0038I Pass  30: suminf.    0.61842 (3) obj. -31.7125 iterations 4
Cbc0038I Pass  31: suminf.    0.56577 (5) obj. -31.7125 iterations 1
Cbc0038I Pass  32: suminf.    1.22760 (5) obj. -31.7125 iterations 4
Cbc0038I Rounding solution of -26.6324 is better than previous of -23.9264

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -26.6324 to -29.7116 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.7271
Cbc0038I Pass  32: suminf.    2.40160 (18) obj. -45.7271 iterations 1
Cbc0038I Pass  33: suminf.    2.32077 (20) obj. -45.7271 iterations 2
Cbc0038I Pass  34: suminf.    0.59981 (2) obj. -45.7271 iterations 28
Cbc0038I Pass  35: suminf.    0.43520 (2) obj. -49.4194 iterations 2
Cbc0038I Pass  36: suminf.    0.59981 (2) obj. -45.7271 iterations 2
Cbc0038I Pass  37: suminf.    4.95461 (14) obj. -45.7271 iterations 19
Cbc0038I Pass  38: suminf.    2.92377 (8) obj. -45.7271 iterations 7
Cbc0038I Pass  39: suminf.    2.92377 (8) obj. -45.7271 iterations 0
Cbc0038I Pass  40: suminf.    0.49265 (2) obj. -45.7271 iterations 8
Cbc0038I Pass  41: suminf.    0.56941 (2) obj. -45.7271 iterations 1
Cbc0038I Pass  42: suminf.    2.47666 (7) obj. -45.7271 iterations 10
Cbc0038I Pass  43: suminf.    2.47666 (7) obj. -45.7271 iterations 3
Cbc0038I Pass  44: suminf.    0.71011 (3) obj. -45.7271 iterations 5
Cbc0038I Pass  45: suminf.    0.71011 (3) obj. -45.7271 iterations 0
Cbc0038I Pass  46: suminf.    1.00677 (3) obj. -50.4737 iterations 2
Cbc0038I Pass  47: suminf.    1.92373 (7) obj. -45.7271 iterations 8
Cbc0038I Pass  48: suminf.    1.35108 (4) obj. -48.2327 iterations 4
Cbc0038I Pass  49: suminf.    0.47751 (3) obj. -45.7271 iterations 5
Cbc0038I Pass  50: suminf.    0.83130 (3) obj. -45.7271 iterations 2
Cbc0038I Pass  51: suminf.    0.71011 (3) obj. -45.7271 iterations 1
Cbc0038I Pass  52: suminf.    1.00677 (3) obj. -50.4737 iterations 1
Cbc0038I Pass  53: suminf.    2.52069 (8) obj. -45.7271 iterations 9
Cbc0038I Pass  54: suminf.    1.49806 (7) obj. -45.7271 iterations 8
Cbc0038I Pass  55: suminf.    1.19924 (4) obj. -45.8384 iterations 3
Cbc0038I Pass  56: suminf.    1.22387 (8) obj. -45.7271 iterations 7
Cbc0038I Pass  57: suminf.    1.22374 (7) obj. -45.7271 iterations 1
Cbc0038I Pass  58: suminf.    1.01639 (7) obj. -45.7271 iterations 4
Cbc0038I Pass  59: suminf.    0.99528 (7) obj. -45.7271 iterations 1
Cbc0038I Pass  60: suminf.    1.23875 (7) obj. -45.7271 iterations 7
Cbc0038I Pass  61: suminf.    1.53300 (5) obj. -45.7271 iterations 21
Cbc0038I Rounding solution of -38.9685 is better than previous of -29.7116

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -38.9685 to -39.4209 (0.05 seconds)
Cbc0038I Round again with cutoff of -62.5447
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.61758 (21) obj. -62.5447 iterations 1
Cbc0038I Pass  62: suminf.    3.61758 (21) obj. -62.5447 iterations 0
Cbc0038I Pass  63: suminf.    1.06718 (4) obj. -62.5447 iterations 28
Cbc0038I Pass  64: suminf.    1.03724 (5) obj. -62.5447 iterations 2
Cbc0038I Pass  65: suminf.    1.30155 (5) obj. -62.5447 iterations 4
Cbc0038I Pass  66: suminf.    1.30155 (5) obj. -62.5447 iterations 1
Cbc0038I Pass  67: suminf.    1.08827 (5) obj. -62.5447 iterations 4
Cbc0038I Pass  68: suminf.    1.63272 (8) obj. -62.5447 iterations 12
Cbc0038I Pass  69: suminf.    1.63272 (8) obj. -62.5447 iterations 3
Cbc0038I Pass  70: suminf.    1.16980 (7) obj. -62.5447 iterations 8
Cbc0038I Pass  71: suminf.    1.16980 (7) obj. -62.5447 iterations 1
Cbc0038I Pass  72: suminf.    1.47488 (4) obj. -62.5447 iterations 9
Cbc0038I Pass  73: suminf.    1.38042 (4) obj. -62.5447 iterations 1
Cbc0038I Pass  74: suminf.    1.39095 (5) obj. -62.5447 iterations 6
Cbc0038I Pass  75: suminf.    1.38873 (5) obj. -62.5447 iterations 1
Cbc0038I Pass  76: suminf.    1.36777 (5) obj. -62.5447 iterations 3
Cbc0038I Pass  77: suminf.    1.36777 (5) obj. -62.5447 iterations 0
Cbc0038I Pass  78: suminf.    1.67870 (5) obj. -62.5447 iterations 4
Cbc0038I Pass  79: suminf.    1.67870 (5) obj. -62.5447 iterations 0
Cbc0038I Pass  80: suminf.    1.36777 (5) obj. -62.5447 iterations 3
Cbc0038I Pass  81: suminf.    2.32266 (7) obj. -62.5447 iterations 5
Cbc0038I Pass  82: suminf.    1.79244 (6) obj. -62.5447 iterations 5
Cbc0038I Pass  83: suminf.    1.62812 (5) obj. -62.5447 iterations 3
Cbc0038I Pass  84: suminf.    1.62500 (5) obj. -62.5447 iterations 1
Cbc0038I Pass  85: suminf.    3.20787 (14) obj. -62.5447 iterations 17
Cbc0038I Pass  86: suminf.    2.99336 (13) obj. -62.5447 iterations 2
Cbc0038I Pass  87: suminf.    3.39292 (11) obj. -62.5447 iterations 10
Cbc0038I Pass  88: suminf.    2.97079 (12) obj. -62.5447 iterations 6
Cbc0038I Pass  89: suminf.    1.97956 (8) obj. -62.5447 iterations 11
Cbc0038I Pass  90: suminf.    1.97956 (8) obj. -62.5447 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.4209 - took 0.04 seconds
Cbc0012I Integer solution of -39.420945 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 58 columns, reduced to 4 rows 7 columns
Cbc0031I 21 added rows had average density of 26.47619
Cbc0013I At root node, 21 cuts changed objective from -101.7857 to -53.198133 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1707 row cuts average 3.1 elements, 12 column cuts (12 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 605 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.033 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.046 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.007 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 259 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.014 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.675 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.420945 best solution, best possible -53.198133 (1.48 seconds)
Cbc0010I After 12 nodes, 10 on tree, -39.420945 best solution, best possible -53.198133 (2.23 seconds)
Cbc0004I Integer solution of -40.096395 found after 2216 iterations and 18 nodes (2.48 seconds)
Cbc0004I Integer solution of -40.655255 found after 2334 iterations and 27 nodes (2.62 seconds)
Cbc0001I Search completed - best objective -40.655255, took 2494 iterations and 32 nodes (2.63 seconds)
Cbc0032I Strong branching done 372 times (3465 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 10, 48 variables fixed on reduced cost
Total time (CPU seconds):       1.69   (Wallclock seconds):       2.63

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 55 (-14) rows, 33 (-2) columns and 168 (-27) elements
Clp1000I sum of infeasibilities 5.24601e-05 - average 9.53821e-07, 2 fixed columns
Coin0506I Presolve 49 (-6) rows, 30 (-3) columns and 150 (-18) elements
Clp0029I End of values pass after 30 iterations
Clp0014I Perturbing problem by 0.001% of 2.7130797 - largest nonzero change 0 ( 0%) - largest zero change 2.623149e-05
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Coin0511I After Postsolve, objective 90.731516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Clp0000I Optimal - objective value 90.731516
Coin0511I After Postsolve, objective 90.731516, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 90.73151628 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 55 rows, 33 columns (32 integer (32 of which binary)) and 168 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 2.397%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 15 integers unsatisfied sum - 5.09087
Cbc0038I Pass   1: suminf.    0.06000 (1) obj. -37.9939 iterations 12
Cbc0038I Solution found of -16.9091
Cbc0038I Relaxing continuous gives -16.9091
Cbc0038I Rounding solution of -27.4895 is better than previous of -16.9091

Cbc0038I Before mini branch and bound, 17 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 20 rows 16 columns
Cbc0038I Mini branch and bound improved solution from -27.4895 to -39.7241 (0.01 seconds)
Cbc0038I Round again with cutoff of -44.825
Cbc0038I Pass   2: suminf.    0.28446 (4) obj. -44.825 iterations 3
Cbc0038I Pass   3: suminf.    1.05136 (3) obj. -44.825 iterations 5
Cbc0038I Pass   4: suminf.    0.33000 (1) obj. -44.825 iterations 4
Cbc0038I Pass   5: suminf.    0.44023 (1) obj. -44.825 iterations 1
Cbc0038I Pass   6: suminf.    0.34124 (1) obj. -44.825 iterations 10
Cbc0038I Pass   7: suminf.    0.34124 (1) obj. -44.825 iterations 2
Cbc0038I Pass   8: suminf.    0.39858 (1) obj. -44.825 iterations 1
Cbc0038I Pass   9: suminf.    0.70317 (3) obj. -44.825 iterations 3
Cbc0038I Pass  10: suminf.    0.47341 (1) obj. -44.825 iterations 2
Cbc0038I Pass  11: suminf.    0.45837 (1) obj. -44.825 iterations 1
Cbc0038I Pass  12: suminf.    1.99058 (6) obj. -44.825 iterations 19
Cbc0038I Pass  13: suminf.    0.75152 (3) obj. -44.825 iterations 8
Cbc0038I Pass  14: suminf.    1.04088 (3) obj. -44.825 iterations 3
Cbc0038I Pass  15: suminf.    0.78758 (3) obj. -44.825 iterations 1
Cbc0038I Pass  16: suminf.    0.78758 (3) obj. -44.825 iterations 0
Cbc0038I Pass  17: suminf.    1.26811 (3) obj. -44.825 iterations 2
Cbc0038I Pass  18: suminf.    0.99450 (6) obj. -44.825 iterations 4
Cbc0038I Pass  19: suminf.    0.91784 (5) obj. -44.825 iterations 6
Cbc0038I Pass  20: suminf.    1.63448 (4) obj. -44.825 iterations 5
Cbc0038I Pass  21: suminf.    0.74818 (3) obj. -44.825 iterations 2
Cbc0038I Pass  22: suminf.    0.74818 (3) obj. -44.825 iterations 0
Cbc0038I Pass  23: suminf.    1.23637 (3) obj. -44.825 iterations 2
Cbc0038I Pass  24: suminf.    1.20266 (5) obj. -44.825 iterations 7
Cbc0038I Pass  25: suminf.    0.83566 (4) obj. -44.825 iterations 4
Cbc0038I Pass  26: suminf.    0.85130 (3) obj. -44.825 iterations 4
Cbc0038I Pass  27: suminf.    1.63116 (6) obj. -44.825 iterations 15
Cbc0038I Pass  28: suminf.    1.31434 (5) obj. -44.825 iterations 1
Cbc0038I Pass  29: suminf.    0.88089 (3) obj. -44.825 iterations 6
Cbc0038I Pass  30: suminf.    0.77383 (3) obj. -44.825 iterations 2
Cbc0038I Pass  31: suminf.    0.96975 (3) obj. -44.825 iterations 5
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 6 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 43 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -39.7241 to -40.6553 (0.03 seconds)
Cbc0038I Round again with cutoff of -54.0063
Cbc0038I Pass  31: suminf.    0.74621 (4) obj. -54.0063 iterations 0
Cbc0038I Pass  32: suminf.    1.01390 (5) obj. -54.0063 iterations 5
Cbc0038I Pass  33: suminf.    0.40229 (3) obj. -54.0063 iterations 2
Cbc0038I Pass  34: suminf.    0.60245 (2) obj. -54.0063 iterations 3
Cbc0038I Pass  35: suminf.    0.62210 (4) obj. -54.0063 iterations 5
Cbc0038I Pass  36: suminf.    1.39040 (5) obj. -54.0063 iterations 7
Cbc0038I Pass  37: suminf.    1.10246 (4) obj. -54.0063 iterations 1
Cbc0038I Pass  38: suminf.    1.34348 (4) obj. -54.0063 iterations 6
Cbc0038I Pass  39: suminf.    1.28142 (3) obj. -54.0063 iterations 4
Cbc0038I Pass  40: suminf.    0.87632 (3) obj. -54.0063 iterations 1
Cbc0038I Pass  41: suminf.    0.69993 (3) obj. -54.0063 iterations 1
Cbc0038I Pass  42: suminf.    1.28142 (3) obj. -54.0063 iterations 2
Cbc0038I Pass  43: suminf.    2.72539 (10) obj. -54.0063 iterations 14
Cbc0038I Pass  44: suminf.    2.25024 (8) obj. -54.0063 iterations 4
Cbc0038I Pass  45: suminf.    1.47093 (7) obj. -54.0063 iterations 8
Cbc0038I Pass  46: suminf.    1.29113 (9) obj. -54.0063 iterations 2
Cbc0038I Pass  47: suminf.    2.42802 (6) obj. -54.0063 iterations 14
Cbc0038I Pass  48: suminf.    0.83965 (2) obj. -54.0063 iterations 4
Cbc0038I Pass  49: suminf.    0.36075 (2) obj. -54.0063 iterations 1
Cbc0038I Pass  50: suminf.    2.18866 (11) obj. -54.0063 iterations 12
Cbc0038I Pass  51: suminf.    1.99948 (13) obj. -54.0063 iterations 5
Cbc0038I Pass  52: suminf.    2.14406 (6) obj. -54.0063 iterations 13
Cbc0038I Pass  53: suminf.    1.45207 (4) obj. -54.0063 iterations 3
Cbc0038I Pass  54: suminf.    1.47349 (5) obj. -54.0063 iterations 3
Cbc0038I Pass  55: suminf.    1.29367 (5) obj. -54.0063 iterations 1
Cbc0038I Pass  56: suminf.    1.29367 (5) obj. -54.0063 iterations 0
Cbc0038I Pass  57: suminf.    1.77891 (5) obj. -54.0063 iterations 3
Cbc0038I Pass  58: suminf.    1.62214 (4) obj. -54.0063 iterations 2
Cbc0038I Pass  59: suminf.    1.45207 (4) obj. -54.0063 iterations 2
Cbc0038I Pass  60: suminf.    1.47349 (5) obj. -54.0063 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 12 integers at bound fixed and 0 continuous
Cbc0038I Full problem 55 rows 33 columns, reduced to 26 rows 21 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I After 0.05 seconds - Feasibility pump exiting with objective of -40.6553 - took 0.04 seconds
Cbc0012I Integer solution of -40.655255 found by feasibility pump after 0 iterations and 0 nodes (0.05 seconds)
Cbc0038I Full problem 55 rows 33 columns, reduced to 21 rows 17 columns
Cbc0031I 10 added rows had average density of 24.3
Cbc0013I At root node, 10 cuts changed objective from -90.731516 to -65.688526 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1469 row cuts average 3.0 elements, 1 column cuts (1 active)  in 0.020 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 879 row cuts average 33.0 elements, 0 column cuts (0 active)  in 0.018 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 5 row cuts average 4.4 elements, 0 column cuts (0 active)  in 0.026 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.010 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 44 row cuts average 31.1 elements, 0 column cuts (0 active)  in 0.743 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, -40.655255 best solution, best possible -65.687564 (1.48 seconds)
Cbc0001I Search completed - best objective -40.655255, took 2964 iterations and 22 nodes (1.56 seconds)
Cbc0032I Strong branching done 194 times (1888 iterations), fathomed 4 nodes and fixed 14 variables
Cbc0035I Maximum depth 4, 48 variables fixed on reduced cost
Total time (CPU seconds):       1.02   (Wallclock seconds):       1.56

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 49 (-20) rows, 58 (-9) columns and 564 (-160) elements
Clp1000I sum of infeasibilities 1.94651e-08 - average 3.97246e-10, 12 fixed columns
Coin0506I Presolve 40 (-9) rows, 46 (-12) columns and 355 (-209) elements
Clp0006I 0  Obj 85.438653 Dual inf 6.9202046 (46)
Clp0029I End of values pass after 46 iterations
Clp0014I Perturbing problem by 0.001% of 1.9341003 - largest nonzero change 1.7999887e-05 ( 0.0011547075%) - largest zero change 2.742797e-05
Clp0000I Optimal - objective value 112.60125
Clp0000I Optimal - objective value 112.60125
Coin0511I After Postsolve, objective 112.60125, infeasibilities - dual 0 (0), primal 0 (0)
Clp0006I 0  Obj 112.60125
Clp0000I Optimal - objective value 112.60125
Clp0000I Optimal - objective value 112.60125
Clp0000I Optimal - objective value 112.60125
Coin0511I After Postsolve, objective 112.60125, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 112.6012463 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 49 rows, 58 columns (58 integer (58 of which binary)) and 572 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.560%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 24 integers unsatisfied sum - 7.20315
Cbc0038I Pass   1: suminf.    1.13441 (15) obj. -9.93236 iterations 11
Cbc0038I Pass   2: suminf.    1.13441 (15) obj. -9.93236 iterations 0
Cbc0038I Solution found of 34.5604
Cbc0038I Rounding solution of -13.1928 is better than previous of 34.5604

Cbc0038I Before mini branch and bound, 32 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 9 rows 11 columns
Cbc0038I Mini branch and bound improved solution from -13.1928 to -23.9264 (0.01 seconds)
Cbc0038I Round again with cutoff of -31.7125
Cbc0038I Pass   3: suminf.    2.17367 (18) obj. -31.7125 iterations 1
Cbc0038I Pass   4: suminf.    2.17367 (18) obj. -31.7125 iterations 0
Cbc0038I Pass   5: suminf.    0.64855 (4) obj. -31.7125 iterations 26
Cbc0038I Pass   6: suminf.    0.56417 (3) obj. -33.6052 iterations 3
Cbc0038I Pass   7: suminf.    0.29451 (2) obj. -31.7125 iterations 4
Cbc0038I Pass   8: suminf.    0.29451 (2) obj. -31.7125 iterations 1
Cbc0038I Pass   9: suminf.    0.19582 (1) obj. -31.7125 iterations 1
Cbc0038I Pass  10: suminf.    0.43520 (2) obj. -49.4194 iterations 4
Cbc0038I Pass  11: suminf.    0.29539 (2) obj. -31.7125 iterations 2
Cbc0038I Pass  12: suminf.    0.29539 (2) obj. -31.7125 iterations 2
Cbc0038I Pass  13: suminf.    2.15780 (8) obj. -31.7125 iterations 12
Cbc0038I Pass  14: suminf.    2.15780 (8) obj. -31.7125 iterations 2
Cbc0038I Pass  15: suminf.    0.79580 (2) obj. -34.8996 iterations 10
Cbc0038I Pass  16: suminf.    0.65371 (2) obj. -31.7125 iterations 2
Cbc0038I Pass  17: suminf.    1.42745 (6) obj. -32.0639 iterations 20
Cbc0038I Pass  18: suminf.    0.97802 (5) obj. -36.8174 iterations 6
Cbc0038I Pass  19: suminf.    1.02810 (3) obj. -31.7125 iterations 10
Cbc0038I Pass  20: suminf.    0.69147 (3) obj. -31.7125 iterations 3
Cbc0038I Pass  21: suminf.    0.40116 (3) obj. -31.7125 iterations 2
Cbc0038I Pass  22: suminf.    0.62040 (3) obj. -41.9403 iterations 1
Cbc0038I Pass  23: suminf.    0.31223 (2) obj. -31.7125 iterations 4
Cbc0038I Pass  24: suminf.    0.40116 (3) obj. -31.7125 iterations 3
Cbc0038I Pass  25: suminf.    1.98142 (7) obj. -31.7125 iterations 18
Cbc0038I Pass  26: suminf.    1.30333 (7) obj. -31.7125 iterations 5
Cbc0038I Pass  27: suminf.    1.46250 (7) obj. -31.7125 iterations 5
Cbc0038I Pass  28: suminf.    1.30542 (7) obj. -31.7125 iterations 2
Cbc0038I Pass  29: suminf.    1.09638 (5) obj. -31.7125 iterations 7
Cbc0038I Pass  30: suminf.    0.61842 (3) obj. -31.7125 iterations 4
Cbc0038I Pass  31: suminf.    0.56577 (5) obj. -31.7125 iterations 1
Cbc0038I Pass  32: suminf.    1.22760 (5) obj. -31.7125 iterations 4
Cbc0038I Rounding solution of -26.6324 is better than previous of -23.9264

Cbc0038I Before mini branch and bound, 19 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 32 rows 39 columns
Cbc0038I Mini branch and bound improved solution from -26.6324 to -29.7116 (0.03 seconds)
Cbc0038I Round again with cutoff of -45.7271
Cbc0038I Pass  32: suminf.    2.40160 (18) obj. -45.7271 iterations 1
Cbc0038I Pass  33: suminf.    2.32077 (20) obj. -45.7271 iterations 2
Cbc0038I Pass  34: suminf.    0.59981 (2) obj. -45.7271 iterations 28
Cbc0038I Pass  35: suminf.    0.43520 (2) obj. -49.4194 iterations 2
Cbc0038I Pass  36: suminf.    0.59981 (2) obj. -45.7271 iterations 2
Cbc0038I Pass  37: suminf.    4.95461 (14) obj. -45.7271 iterations 19
Cbc0038I Pass  38: suminf.    2.92377 (8) obj. -45.7271 iterations 7
Cbc0038I Pass  39: suminf.    2.92377 (8) obj. -45.7271 iterations 0
Cbc0038I Pass  40: suminf.    0.49265 (2) obj. -45.7271 iterations 8
Cbc0038I Pass  41: suminf.    0.56941 (2) obj. -45.7271 iterations 1
Cbc0038I Pass  42: suminf.    2.47666 (7) obj. -45.7271 iterations 10
Cbc0038I Pass  43: suminf.    2.47666 (7) obj. -45.7271 iterations 3
Cbc0038I Pass  44: suminf.    0.71011 (3) obj. -45.7271 iterations 5
Cbc0038I Pass  45: suminf.    0.71011 (3) obj. -45.7271 iterations 0
Cbc0038I Pass  46: suminf.    1.00677 (3) obj. -50.4737 iterations 2
Cbc0038I Pass  47: suminf.    1.92373 (7) obj. -45.7271 iterations 8
Cbc0038I Pass  48: suminf.    1.35108 (4) obj. -48.2327 iterations 4
Cbc0038I Pass  49: suminf.    0.47751 (3) obj. -45.7271 iterations 5
Cbc0038I Pass  50: suminf.    0.83130 (3) obj. -45.7271 iterations 2
Cbc0038I Pass  51: suminf.    0.71011 (3) obj. -45.7271 iterations 1
Cbc0038I Pass  52: suminf.    1.00677 (3) obj. -50.4737 iterations 1
Cbc0038I Pass  53: suminf.    2.52069 (8) obj. -45.7271 iterations 9
Cbc0038I Pass  54: suminf.    1.49806 (7) obj. -45.7271 iterations 8
Cbc0038I Pass  55: suminf.    1.19924 (4) obj. -45.8384 iterations 3
Cbc0038I Pass  56: suminf.    1.22387 (8) obj. -45.7271 iterations 7
Cbc0038I Pass  57: suminf.    1.22374 (7) obj. -45.7271 iterations 1
Cbc0038I Pass  58: suminf.    1.01639 (7) obj. -45.7271 iterations 4
Cbc0038I Pass  59: suminf.    0.99528 (7) obj. -45.7271 iterations 1
Cbc0038I Pass  60: suminf.    1.23875 (7) obj. -45.7271 iterations 7
Cbc0038I Pass  61: suminf.    1.53300 (5) obj. -45.7271 iterations 21
Cbc0038I Rounding solution of -38.9685 is better than previous of -29.7116

Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 18 rows 27 columns
Cbc0038I Mini branch and bound improved solution from -38.9685 to -39.4209 (0.04 seconds)
Cbc0038I Round again with cutoff of -62.5447
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    3.61758 (21) obj. -62.5447 iterations 1
Cbc0038I Pass  62: suminf.    3.61758 (21) obj. -62.5447 iterations 0
Cbc0038I Pass  63: suminf.    1.06718 (4) obj. -62.5447 iterations 28
Cbc0038I Pass  64: suminf.    1.03724 (5) obj. -62.5447 iterations 2
Cbc0038I Pass  65: suminf.    1.30155 (5) obj. -62.5447 iterations 4
Cbc0038I Pass  66: suminf.    1.30155 (5) obj. -62.5447 iterations 1
Cbc0038I Pass  67: suminf.    1.08827 (5) obj. -62.5447 iterations 4
Cbc0038I Pass  68: suminf.    1.63272 (8) obj. -62.5447 iterations 12
Cbc0038I Pass  69: suminf.    1.63272 (8) obj. -62.5447 iterations 3
Cbc0038I Pass  70: suminf.    1.16980 (7) obj. -62.5447 iterations 8
Cbc0038I Pass  71: suminf.    1.16980 (7) obj. -62.5447 iterations 1
Cbc0038I Pass  72: suminf.    1.47488 (4) obj. -62.5447 iterations 9
Cbc0038I Pass  73: suminf.    1.38042 (4) obj. -62.5447 iterations 1
Cbc0038I Pass  74: suminf.    1.39095 (5) obj. -62.5447 iterations 6
Cbc0038I Pass  75: suminf.    1.38873 (5) obj. -62.5447 iterations 1
Cbc0038I Pass  76: suminf.    1.36777 (5) obj. -62.5447 iterations 3
Cbc0038I Pass  77: suminf.    1.36777 (5) obj. -62.5447 iterations 0
Cbc0038I Pass  78: suminf.    1.67870 (5) obj. -62.5447 iterations 4
Cbc0038I Pass  79: suminf.    1.67870 (5) obj. -62.5447 iterations 0
Cbc0038I Pass  80: suminf.    1.36777 (5) obj. -62.5447 iterations 3
Cbc0038I Pass  81: suminf.    2.32266 (7) obj. -62.5447 iterations 5
Cbc0038I Pass  82: suminf.    1.79244 (6) obj. -62.5447 iterations 5
Cbc0038I Pass  83: suminf.    1.62812 (5) obj. -62.5447 iterations 3
Cbc0038I Pass  84: suminf.    1.62500 (5) obj. -62.5447 iterations 1
Cbc0038I Pass  85: suminf.    3.20787 (14) obj. -62.5447 iterations 17
Cbc0038I Pass  86: suminf.    2.99336 (13) obj. -62.5447 iterations 2
Cbc0038I Pass  87: suminf.    3.39292 (11) obj. -62.5447 iterations 10
Cbc0038I Pass  88: suminf.    2.97079 (12) obj. -62.5447 iterations 6
Cbc0038I Pass  89: suminf.    1.97956 (8) obj. -62.5447 iterations 11
Cbc0038I Pass  90: suminf.    1.97956 (8) obj. -62.5447 iterations 1
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 49 rows 58 columns, reduced to 27 rows 32 columns
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -39.4209 - took 0.04 seconds
Cbc0012I Integer solution of -39.420945 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0038I Full problem 49 rows 58 columns, reduced to 4 rows 7 columns
Cbc0031I 21 added rows had average density of 26.47619
Cbc0013I At root node, 21 cuts changed objective from -101.7857 to -53.198133 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1707 row cuts average 3.1 elements, 12 column cuts (12 active)  in 0.030 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 605 row cuts average 43.2 elements, 0 column cuts (0 active)  in 0.031 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 20 row cuts average 4.1 elements, 0 column cuts (0 active)  in 0.044 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 259 row cuts average 6.2 elements, 0 column cuts (0 active)  in 0.016 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 233 row cuts average 21.9 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 51 row cuts average 15.5 elements, 0 column cuts (0 active)  in 0.648 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, -39.420945 best solution, best possible -53.198133 (1.39 seconds)
Cbc0010I After 12 nodes, 10 on tree, -39.420945 best solution, best possible -53.198133 (2.13 seconds)
Cbc0004I Integer solution of -40.096395 found after 2216 iterations and 18 nodes (2.37 seconds)
Cbc0004I Integer solution of -40.655255 found after 2334 iterations and 27 nodes (2.50 seconds)
Cbc0001I Search completed - best objective -40.655255, took 2494 iterations and 32 nodes (2.51 seconds)
Cbc0032I Strong branching done 372 times (3465 iterations), fathomed 2 nodes and fixed 10 variables
Cbc0035I Maximum depth 10, 48 variables fixed on reduced cost
Total time (CPU seconds):       1.65   (Wallclock seconds):       2.51

