Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 22 (-2) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 2.48215e-06 - average 7.52165e-08, 0 fixed columns
Coin0506I Presolve 33 (0) rows, 22 (0) columns and 102 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 61.932295
Clp0000I Optimal - objective value 61.932295
Coin0511I After Postsolve, objective 61.932295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.932295
Clp0000I Optimal - objective value 61.932295
Clp0000I Optimal - objective value 61.932295
Coin0511I After Postsolve, objective 61.932295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.93229498 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.131%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.44693
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.7214 iterations 17
Cbc0038I Solution found of 8.7214
Cbc0038I Relaxing continuous gives 8.7214
Cbc0038I Rounding solution of -3.09074 is better than previous of 8.7214

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -3.09074 to -23.6204 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.4517
Cbc0038I Pass   2: suminf.    0.81212 (5) obj. -27.4517 iterations 6
Cbc0038I Pass   3: suminf.    0.53157 (4) obj. -27.4517 iterations 1
Cbc0038I Pass   4: suminf.    1.43058 (4) obj. -27.4517 iterations 3
Cbc0038I Pass   5: suminf.    1.34476 (5) obj. -27.4517 iterations 1
Cbc0038I Pass   6: suminf.    1.34476 (5) obj. -27.4517 iterations 0
Cbc0038I Pass   7: suminf.    0.43610 (2) obj. -27.4517 iterations 4
Cbc0038I Pass   8: suminf.    0.32307 (2) obj. -27.4517 iterations 1
Cbc0038I Pass   9: suminf.    0.85760 (3) obj. -27.4517 iterations 3
Cbc0038I Pass  10: suminf.    0.53157 (4) obj. -27.4517 iterations 4
Cbc0038I Pass  11: suminf.    1.43058 (4) obj. -27.4517 iterations 3
Cbc0038I Pass  12: suminf.    1.34476 (5) obj. -27.4517 iterations 1
Cbc0038I Pass  13: suminf.    1.34476 (5) obj. -27.4517 iterations 0
Cbc0038I Pass  14: suminf.    0.43610 (2) obj. -27.4517 iterations 4
Cbc0038I Pass  15: suminf.    0.32307 (2) obj. -27.4517 iterations 1
Cbc0038I Pass  16: suminf.    0.85760 (3) obj. -27.4517 iterations 3
Cbc0038I Pass  17: suminf.    0.53157 (4) obj. -27.4517 iterations 4
Cbc0038I Pass  18: suminf.    1.43058 (4) obj. -27.4517 iterations 3
Cbc0038I Pass  19: suminf.    1.34476 (5) obj. -27.4517 iterations 1
Cbc0038I Pass  20: suminf.    1.34476 (5) obj. -27.4517 iterations 0
Cbc0038I Pass  21: suminf.    0.43610 (2) obj. -27.4517 iterations 4
Cbc0038I Pass  22: suminf.    0.32307 (2) obj. -27.4517 iterations 1
Cbc0038I Pass  23: suminf.    0.85760 (3) obj. -27.4517 iterations 3
Cbc0038I Pass  24: suminf.    0.53157 (4) obj. -27.4517 iterations 4
Cbc0038I Pass  25: suminf.    1.43058 (4) obj. -27.4517 iterations 3
Cbc0038I Pass  26: suminf.    1.34476 (5) obj. -27.4517 iterations 1
Cbc0038I Pass  27: suminf.    1.34476 (5) obj. -27.4517 iterations 0
Cbc0038I Pass  28: suminf.    0.43610 (2) obj. -27.4517 iterations 4
Cbc0038I Pass  29: suminf.    0.32307 (2) obj. -27.4517 iterations 1
Cbc0038I Pass  30: suminf.    0.85760 (3) obj. -27.4517 iterations 3
Cbc0038I Pass  31: suminf.    0.53157 (4) obj. -27.4517 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -23.6204 - took 0.05 seconds
Cbc0012I Integer solution of -23.62045 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 21 rows 14 columns
Cbc0031I 13 added rows had average density of 15.153846
Cbc0013I At root node, 13 cuts changed objective from -61.932295 to -44.844286 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1643 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 647 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23.62044999999999, took 2611 iterations and 10 nodes (0.19 seconds)
Cbc0032I Strong branching done 100 times (1171 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.21   (Wallclock seconds):       0.19

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-14) rows, 41 (-3) columns and 297 (-63) elements
Clp1000I sum of infeasibilities 2.22386e-09 - average 6.94955e-11, 4 fixed columns
Coin0506I Presolve 29 (-3) rows, 37 (-4) columns and 238 (-59) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 76.30227
Clp0000I Optimal - objective value 76.30227
Coin0511I After Postsolve, objective 76.30227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.30227
Clp0000I Optimal - objective value 76.30227
Clp0000I Optimal - objective value 76.30227
Coin0511I After Postsolve, objective 76.30227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.30227035 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 41 columns (41 integer (41 of which binary)) and 299 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.875%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.03099
Cbc0038I Pass   1: suminf.    1.34469 (10) obj. -49.1317 iterations 8
Cbc0038I Pass   2: suminf.    1.34469 (10) obj. -49.1317 iterations 3
Cbc0038I Solution found of -10.8196
Cbc0038I Rounding solution of -14.2309 is better than previous of -10.8196

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -19.7123
Cbc0038I Pass   3: suminf.    1.34469 (10) obj. -49.1317 iterations 0
Cbc0038I Pass   4: suminf.    1.34469 (10) obj. -49.1317 iterations 1
Cbc0038I Pass   5: suminf.    0.44971 (2) obj. -19.7123 iterations 11
Cbc0038I Pass   6: suminf.    0.44211 (2) obj. -32.4315 iterations 1
Cbc0038I Pass   7: suminf.    0.10526 (1) obj. -26.0301 iterations 1
Cbc0038I Pass   8: suminf.    1.02134 (5) obj. -39.6076 iterations 10
Cbc0038I Pass   9: suminf.    1.02134 (5) obj. -39.6076 iterations 1
Cbc0038I Pass  10: suminf.    0.51349 (2) obj. -19.7123 iterations 6
Cbc0038I Pass  11: suminf.    0.51349 (2) obj. -19.7123 iterations 0
Cbc0038I Pass  12: suminf.    0.41893 (2) obj. -19.7123 iterations 1
Cbc0038I Pass  13: suminf.    0.73394 (5) obj. -37.7559 iterations 8
Cbc0038I Pass  14: suminf.    0.67119 (4) obj. -36.8416 iterations 2
Cbc0038I Pass  15: suminf.    0.53206 (2) obj. -19.7123 iterations 5
Cbc0038I Pass  16: suminf.    0.21053 (1) obj. -23.325 iterations 2
Cbc0038I Pass  17: suminf.    1.40356 (5) obj. -19.7123 iterations 9
Cbc0038I Pass  18: suminf.    1.05559 (4) obj. -24.0663 iterations 3
Cbc0038I Pass  19: suminf.    0.52819 (3) obj. -19.7123 iterations 2
Cbc0038I Pass  20: suminf.    0.67292 (2) obj. -19.7123 iterations 3
Cbc0038I Pass  21: suminf.    0.37371 (2) obj. -19.7123 iterations 1
Cbc0038I Pass  22: suminf.    4.22243 (15) obj. -19.7123 iterations 11
Cbc0038I Pass  23: suminf.    3.24413 (15) obj. -19.7123 iterations 3
Cbc0038I Pass  24: suminf.    2.60905 (14) obj. -19.7123 iterations 1
Cbc0038I Pass  25: suminf.    1.34966 (11) obj. -19.7123 iterations 2
Cbc0038I Pass  26: suminf.    0.91417 (2) obj. -19.7123 iterations 11
Cbc0038I Pass  27: suminf.    0.66917 (2) obj. -23.8773 iterations 1
Cbc0038I Pass  28: suminf.    0.79813 (2) obj. -19.7123 iterations 4
Cbc0038I Pass  29: suminf.    0.61153 (2) obj. -25.7005 iterations 1
Cbc0038I Pass  30: suminf.    0.31174 (2) obj. -19.7123 iterations 1
Cbc0038I Pass  31: suminf.    0.79813 (2) obj. -19.7123 iterations 2
Cbc0038I Pass  32: suminf.    1.56034 (6) obj. -25.3255 iterations 8
Cbc0038I Rounding solution of -15.0704 is better than previous of -14.2309

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -15.0704 to -16.2786 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.5788
Cbc0038I Pass  32: suminf.    1.34469 (10) obj. -49.1317 iterations 0
Cbc0038I Pass  33: suminf.    1.34469 (10) obj. -49.1317 iterations 1
Cbc0038I Pass  34: suminf.    0.60991 (2) obj. -29.5788 iterations 11
Cbc0038I Pass  35: suminf.    0.29199 (2) obj. -29.5788 iterations 1
Cbc0038I Pass  36: suminf.    0.60991 (2) obj. -29.5788 iterations 2
Cbc0038I Pass  37: suminf.    2.09859 (9) obj. -29.5788 iterations 17
Cbc0038I Pass  38: suminf.    1.93986 (8) obj. -29.5788 iterations 2
Cbc0038I Pass  39: suminf.    0.60314 (2) obj. -29.5788 iterations 8
Cbc0038I Pass  40: suminf.    0.26316 (1) obj. -30.8105 iterations 2
Cbc0038I Pass  41: suminf.    0.62304 (2) obj. -29.5788 iterations 2
Cbc0038I Pass  42: suminf.    0.41353 (2) obj. -33.8142 iterations 1
Cbc0038I Pass  43: suminf.    1.47920 (7) obj. -29.5788 iterations 10
Cbc0038I Pass  44: suminf.    1.06106 (4) obj. -29.5788 iterations 3
Cbc0038I Pass  45: suminf.    0.85637 (4) obj. -29.5788 iterations 2
Cbc0038I Pass  46: suminf.    0.46617 (2) obj. -33.9194 iterations 3
Cbc0038I Pass  47: suminf.    0.31579 (1) obj. -30.9158 iterations 1
Cbc0038I Pass  48: suminf.    0.56422 (2) obj. -29.5788 iterations 2
Cbc0038I Pass  49: suminf.    1.75553 (6) obj. -29.5788 iterations 8
Cbc0038I Pass  50: suminf.    1.75553 (6) obj. -29.5788 iterations 0
Cbc0038I Pass  51: suminf.    1.01350 (3) obj. -29.5788 iterations 6
Cbc0038I Pass  52: suminf.    0.87694 (3) obj. -31.9003 iterations 1
Cbc0038I Pass  53: suminf.    0.52370 (3) obj. -29.5788 iterations 3
Cbc0038I Pass  54: suminf.    0.52370 (3) obj. -29.5788 iterations 0
Cbc0038I Pass  55: suminf.    1.82064 (8) obj. -29.5788 iterations 7
Cbc0038I Pass  56: suminf.    1.47523 (6) obj. -36.1156 iterations 2
Cbc0038I Pass  57: suminf.    1.63809 (9) obj. -29.5788 iterations 4
Cbc0038I Pass  58: suminf.    1.63809 (9) obj. -29.5788 iterations 0
Cbc0038I Pass  59: suminf.    0.48422 (3) obj. -29.5788 iterations 8
Cbc0038I Pass  60: suminf.    0.48422 (3) obj. -29.5788 iterations 0
Cbc0038I Pass  61: suminf.    0.95468 (3) obj. -29.5788 iterations 3
Cbc0038I Rounding solution of -19.2842 is better than previous of -16.2786

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.04 seconds)
Cbc0038I Round again with cutoff of -41.4185
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.34469 (10) obj. -49.1317 iterations 0
Cbc0038I Pass  62: suminf.    1.34469 (10) obj. -49.1317 iterations 1
Cbc0038I Pass  63: suminf.    1.08208 (6) obj. -41.4185 iterations 13
Cbc0038I Pass  64: suminf.    0.53686 (4) obj. -42.0699 iterations 3
Cbc0038I Pass  65: suminf.    0.99160 (4) obj. -41.4185 iterations 9
Cbc0038I Pass  66: suminf.    0.99160 (4) obj. -41.4185 iterations 1
Cbc0038I Pass  67: suminf.    0.77224 (4) obj. -41.4185 iterations 2
Cbc0038I Pass  68: suminf.    0.77224 (4) obj. -41.4185 iterations 0
Cbc0038I Pass  69: suminf.    0.99160 (4) obj. -41.4185 iterations 1
Cbc0038I Pass  70: suminf.    1.33580 (8) obj. -41.4185 iterations 7
Cbc0038I Pass  71: suminf.    1.15203 (6) obj. -45.2635 iterations 3
Cbc0038I Pass  72: suminf.    1.05437 (4) obj. -41.4185 iterations 5
Cbc0038I Pass  73: suminf.    0.73060 (4) obj. -43.6849 iterations 3
Cbc0038I Pass  74: suminf.    1.29131 (8) obj. -41.4185 iterations 12
Cbc0038I Pass  75: suminf.    1.03472 (5) obj. -46.2797 iterations 4
Cbc0038I Pass  76: suminf.    0.77971 (5) obj. -41.4185 iterations 8
Cbc0038I Pass  77: suminf.    0.75583 (5) obj. -41.4185 iterations 1
Cbc0038I Pass  78: suminf.    0.89892 (5) obj. -41.4185 iterations 4
Cbc0038I Pass  79: suminf.    0.89892 (5) obj. -41.4185 iterations 0
Cbc0038I Pass  80: suminf.    0.75583 (5) obj. -41.4185 iterations 3
Cbc0038I Pass  81: suminf.    1.81839 (7) obj. -41.4185 iterations 11
Cbc0038I Pass  82: suminf.    1.81839 (7) obj. -41.4185 iterations 1
Cbc0038I Pass  83: suminf.    0.83633 (4) obj. -41.4185 iterations 5
Cbc0038I Pass  84: suminf.    0.78324 (4) obj. -41.7902 iterations 2
Cbc0038I Pass  85: suminf.    1.29183 (6) obj. -41.4185 iterations 5
Cbc0038I Pass  86: suminf.    0.97371 (5) obj. -44.5997 iterations 3
Cbc0038I Pass  87: suminf.    1.12204 (4) obj. -41.4185 iterations 4
Cbc0038I Pass  88: suminf.    0.78324 (4) obj. -43.7902 iterations 2
Cbc0038I Pass  89: suminf.    1.95860 (8) obj. -41.4185 iterations 4
Cbc0038I Pass  90: suminf.    1.66871 (7) obj. -41.4185 iterations 1
Cbc0038I Rounding solution of -23.6204 is better than previous of -19.2842

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 21 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -49.7063
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 5
Cbc0038I Pass  90: suminf.    1.43012 (14) obj. -49.7063 iterations 1
Cbc0038I Pass  91: suminf.    1.38708 (11) obj. -49.7063 iterations 3
Cbc0038I Pass  92: suminf.    1.08600 (6) obj. -49.7063 iterations 12
Cbc0038I Pass  93: suminf.    1.08600 (6) obj. -49.7063 iterations 0
Cbc0038I Pass  94: suminf.    1.17927 (5) obj. -49.7063 iterations 2
Cbc0038I Pass  95: suminf.    0.93447 (5) obj. -49.7063 iterations 2
Cbc0038I Pass  96: suminf.    1.17927 (5) obj. -49.7063 iterations 3
Cbc0038I Pass  97: suminf.    0.96590 (6) obj. -49.7063 iterations 8
Cbc0038I Pass  98: suminf.    0.96590 (6) obj. -49.7063 iterations 5
Cbc0038I Pass  99: suminf.    1.06037 (5) obj. -49.7063 iterations 3
Cbc0038I Pass 100: suminf.    0.87346 (5) obj. -50.8278 iterations 2
Cbc0038I Pass 101: suminf.    1.06037 (5) obj. -49.7063 iterations 2
Cbc0038I Pass 102: suminf.    2.40128 (9) obj. -49.7063 iterations 10
Cbc0038I Pass 103: suminf.    2.40128 (9) obj. -49.7063 iterations 0
Cbc0038I Pass 104: suminf.    2.00308 (7) obj. -49.7063 iterations 5
Cbc0038I Pass 105: suminf.    1.93678 (8) obj. -49.7063 iterations 3
Cbc0038I Pass 106: suminf.    2.00308 (7) obj. -49.7063 iterations 5
Cbc0038I Pass 107: suminf.    2.71858 (9) obj. -49.7063 iterations 13
Cbc0038I Pass 108: suminf.    2.71858 (9) obj. -49.7063 iterations 0
Cbc0038I Pass 109: suminf.    2.37136 (8) obj. -49.7063 iterations 4
Cbc0038I Pass 110: suminf.    2.37136 (8) obj. -49.7063 iterations 0
Cbc0038I Pass 111: suminf.    2.40357 (8) obj. -49.7063 iterations 2
Cbc0038I Pass 112: suminf.    2.40357 (8) obj. -49.7063 iterations 0
Cbc0038I Pass 113: suminf.    2.37136 (8) obj. -49.7063 iterations 2
Cbc0038I Pass 114: suminf.    2.67257 (8) obj. -49.7063 iterations 5
Cbc0038I Pass 115: suminf.    2.43472 (8) obj. -49.7063 iterations 3
Cbc0038I Pass 116: suminf.    2.29535 (8) obj. -49.7063 iterations 6
Cbc0038I Pass 117: suminf.    2.23393 (8) obj. -49.7063 iterations 1
Cbc0038I Pass 118: suminf.    2.21543 (7) obj. -49.7063 iterations 3
Cbc0038I Pass 119: suminf.    2.17110 (8) obj. -49.7063 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23.6204 - took 0.05 seconds
Cbc0012I Integer solution of -23.62045 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 13 added rows had average density of 5
Cbc0013I At root node, 29 cuts changed objective from -69.04455 to -23.620498 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 180 row cuts average 3.2 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 106 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.138 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 4.7569889e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -23.62044999999999, took 220 iterations and 0 nodes (0.33 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.23   (Wallclock seconds):       0.34

Welcome to the CBC MILP Solver 
Version: Trunk
Build Date: Nov 15 2020 

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 33 (-14) rows, 22 (-2) columns and 102 (-27) elements
Clp1000I sum of infeasibilities 2.48215e-06 - average 7.52165e-08, 0 fixed columns
Coin0506I Presolve 33 (0) rows, 22 (0) columns and 102 (0) elements
Clp0029I End of values pass after 22 iterations
Clp0000I Optimal - objective value 61.932295
Clp0000I Optimal - objective value 61.932295
Coin0511I After Postsolve, objective 61.932295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 61.932295
Clp0000I Optimal - objective value 61.932295
Clp0000I Optimal - objective value 61.932295
Coin0511I After Postsolve, objective 61.932295, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 61.93229498 - 0 iterations time 0.012, Presolve 0.00, Idiot 0.01

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0004I processed model has 33 rows, 22 columns (21 integer (21 of which binary)) and 102 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 3.131%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 13 integers unsatisfied sum - 4.44693
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 8.7214 iterations 17
Cbc0038I Solution found of 8.7214
Cbc0038I Relaxing continuous gives 8.7214
Cbc0038I Rounding solution of -3.09074 is better than previous of 8.7214

Cbc0038I Before mini branch and bound, 8 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 21 rows 14 columns
Cbc0038I Mini branch and bound improved solution from -3.09074 to -23.6204 (0.01 seconds)
Cbc0038I Round again with cutoff of -27.4517
Cbc0038I Pass   2: suminf.    0.81212 (5) obj. -27.4517 iterations 6
Cbc0038I Pass   3: suminf.    0.53157 (4) obj. -27.4517 iterations 1
Cbc0038I Pass   4: suminf.    1.43058 (4) obj. -27.4517 iterations 3
Cbc0038I Pass   5: suminf.    1.34476 (5) obj. -27.4517 iterations 1
Cbc0038I Pass   6: suminf.    1.34476 (5) obj. -27.4517 iterations 0
Cbc0038I Pass   7: suminf.    0.43610 (2) obj. -27.4517 iterations 4
Cbc0038I Pass   8: suminf.    0.32307 (2) obj. -27.4517 iterations 1
Cbc0038I Pass   9: suminf.    0.85760 (3) obj. -27.4517 iterations 3
Cbc0038I Pass  10: suminf.    0.53157 (4) obj. -27.4517 iterations 4
Cbc0038I Pass  11: suminf.    1.43058 (4) obj. -27.4517 iterations 3
Cbc0038I Pass  12: suminf.    1.34476 (5) obj. -27.4517 iterations 1
Cbc0038I Pass  13: suminf.    1.34476 (5) obj. -27.4517 iterations 0
Cbc0038I Pass  14: suminf.    0.43610 (2) obj. -27.4517 iterations 4
Cbc0038I Pass  15: suminf.    0.32307 (2) obj. -27.4517 iterations 1
Cbc0038I Pass  16: suminf.    0.85760 (3) obj. -27.4517 iterations 3
Cbc0038I Pass  17: suminf.    0.53157 (4) obj. -27.4517 iterations 4
Cbc0038I Pass  18: suminf.    1.43058 (4) obj. -27.4517 iterations 3
Cbc0038I Pass  19: suminf.    1.34476 (5) obj. -27.4517 iterations 1
Cbc0038I Pass  20: suminf.    1.34476 (5) obj. -27.4517 iterations 0
Cbc0038I Pass  21: suminf.    0.43610 (2) obj. -27.4517 iterations 4
Cbc0038I Pass  22: suminf.    0.32307 (2) obj. -27.4517 iterations 1
Cbc0038I Pass  23: suminf.    0.85760 (3) obj. -27.4517 iterations 3
Cbc0038I Pass  24: suminf.    0.53157 (4) obj. -27.4517 iterations 4
Cbc0038I Pass  25: suminf.    1.43058 (4) obj. -27.4517 iterations 3
Cbc0038I Pass  26: suminf.    1.34476 (5) obj. -27.4517 iterations 1
Cbc0038I Pass  27: suminf.    1.34476 (5) obj. -27.4517 iterations 0
Cbc0038I Pass  28: suminf.    0.43610 (2) obj. -27.4517 iterations 4
Cbc0038I Pass  29: suminf.    0.32307 (2) obj. -27.4517 iterations 1
Cbc0038I Pass  30: suminf.    0.85760 (3) obj. -27.4517 iterations 3
Cbc0038I Pass  31: suminf.    0.53157 (4) obj. -27.4517 iterations 4
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 7 integers at bound fixed and 0 continuous
Cbc0038I Full problem 33 rows 22 columns, reduced to 22 rows 15 columns
Cbc0038I Mini branch and bound did not improve solution (0.02 seconds)
Cbc0038I After 0.02 seconds - Feasibility pump exiting with objective of -23.6204 - took 0.02 seconds
Cbc0012I Integer solution of -23.62045 found by feasibility pump after 0 iterations and 0 nodes (0.02 seconds)
Cbc0038I Full problem 33 rows 22 columns, reduced to 21 rows 14 columns
Cbc0031I 13 added rows had average density of 15.153846
Cbc0013I At root node, 13 cuts changed objective from -61.932295 to -44.844286 in 100 passes
Cbc0014I Cut generator 0 (Probing) - 1643 row cuts average 3.2 elements, 1 column cuts (1 active)  in 0.012 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 647 row cuts average 21.3 elements, 0 column cuts (0 active)  in 0.013 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.023 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 136 row cuts average 7.4 elements, 0 column cuts (0 active)  in 0.009 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 110 row cuts average 19.1 elements, 0 column cuts (0 active)  in 0.006 seconds - new frequency is 1
Cbc0001I Search completed - best objective -23.62044999999999, took 2611 iterations and 10 nodes (0.18 seconds)
Cbc0032I Strong branching done 100 times (1171 iterations), fathomed 0 nodes and fixed 8 variables
Cbc0035I Maximum depth 3, 28 variables fixed on reduced cost
Total time (CPU seconds):       0.18   (Wallclock seconds):       0.18

Starting solution of the Linear programming relaxation problem using Primal Simplex

Coin0506I Presolve 32 (-15) rows, 41 (-4) columns and 297 (-64) elements
Clp1000I sum of infeasibilities 2.22386e-09 - average 6.94955e-11, 4 fixed columns
Coin0506I Presolve 29 (-3) rows, 37 (-4) columns and 238 (-59) elements
Clp0029I End of values pass after 37 iterations
Clp0000I Optimal - objective value 76.30227
Clp0000I Optimal - objective value 76.30227
Coin0511I After Postsolve, objective 76.30227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0000I Optimal - objective value 76.30227
Clp0000I Optimal - objective value 76.30227
Clp0000I Optimal - objective value 76.30227
Coin0511I After Postsolve, objective 76.30227, infeasibilities - dual 0 (0), primal 0 (0)
Clp0032I Optimal objective 76.30227035 - 0 iterations time 0.002, Presolve 0.00, Idiot 0.00

Starting MIP optimization
Cgl0002I 1 variables fixed
Cgl0003I 0 fixed, 0 tightened bounds, 2 strengthened rows, 0 substitutions
Cgl0004I processed model has 32 rows, 41 columns (41 integer (41 of which binary)) and 299 elements
Coin3009W Conflict graph built in 0.000 seconds, density: 7.875%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 18 integers unsatisfied sum - 4.03099
Cbc0038I Pass   1: suminf.    1.34469 (10) obj. -49.1317 iterations 8
Cbc0038I Pass   2: suminf.    1.34469 (10) obj. -49.1317 iterations 3
Cbc0038I Solution found of -10.8196
Cbc0038I Rounding solution of -14.2309 is better than previous of -10.8196

Cbc0038I Before mini branch and bound, 22 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 3 rows 4 columns
Cbc0038I Mini branch and bound did not improve solution (0.01 seconds)
Cbc0038I Round again with cutoff of -19.7123
Cbc0038I Pass   3: suminf.    1.34469 (10) obj. -49.1317 iterations 0
Cbc0038I Pass   4: suminf.    1.34469 (10) obj. -49.1317 iterations 1
Cbc0038I Pass   5: suminf.    0.44971 (2) obj. -19.7123 iterations 11
Cbc0038I Pass   6: suminf.    0.44211 (2) obj. -32.4315 iterations 1
Cbc0038I Pass   7: suminf.    0.10526 (1) obj. -26.0301 iterations 1
Cbc0038I Pass   8: suminf.    1.02134 (5) obj. -39.6076 iterations 10
Cbc0038I Pass   9: suminf.    1.02134 (5) obj. -39.6076 iterations 1
Cbc0038I Pass  10: suminf.    0.51349 (2) obj. -19.7123 iterations 6
Cbc0038I Pass  11: suminf.    0.51349 (2) obj. -19.7123 iterations 0
Cbc0038I Pass  12: suminf.    0.41893 (2) obj. -19.7123 iterations 1
Cbc0038I Pass  13: suminf.    0.73394 (5) obj. -37.7559 iterations 8
Cbc0038I Pass  14: suminf.    0.67119 (4) obj. -36.8416 iterations 2
Cbc0038I Pass  15: suminf.    0.53206 (2) obj. -19.7123 iterations 5
Cbc0038I Pass  16: suminf.    0.21053 (1) obj. -23.325 iterations 2
Cbc0038I Pass  17: suminf.    1.40356 (5) obj. -19.7123 iterations 9
Cbc0038I Pass  18: suminf.    1.05559 (4) obj. -24.0663 iterations 3
Cbc0038I Pass  19: suminf.    0.52819 (3) obj. -19.7123 iterations 2
Cbc0038I Pass  20: suminf.    0.67292 (2) obj. -19.7123 iterations 3
Cbc0038I Pass  21: suminf.    0.37371 (2) obj. -19.7123 iterations 1
Cbc0038I Pass  22: suminf.    4.22243 (15) obj. -19.7123 iterations 11
Cbc0038I Pass  23: suminf.    3.24413 (15) obj. -19.7123 iterations 3
Cbc0038I Pass  24: suminf.    2.60905 (14) obj. -19.7123 iterations 1
Cbc0038I Pass  25: suminf.    1.34966 (11) obj. -19.7123 iterations 2
Cbc0038I Pass  26: suminf.    0.91417 (2) obj. -19.7123 iterations 11
Cbc0038I Pass  27: suminf.    0.66917 (2) obj. -23.8773 iterations 1
Cbc0038I Pass  28: suminf.    0.79813 (2) obj. -19.7123 iterations 4
Cbc0038I Pass  29: suminf.    0.61153 (2) obj. -25.7005 iterations 1
Cbc0038I Pass  30: suminf.    0.31174 (2) obj. -19.7123 iterations 1
Cbc0038I Pass  31: suminf.    0.79813 (2) obj. -19.7123 iterations 2
Cbc0038I Pass  32: suminf.    1.56034 (6) obj. -25.3255 iterations 8
Cbc0038I Rounding solution of -15.0704 is better than previous of -14.2309

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 24 rows 29 columns
Cbc0038I Mini branch and bound improved solution from -15.0704 to -16.2786 (0.04 seconds)
Cbc0038I Round again with cutoff of -29.5788
Cbc0038I Pass  32: suminf.    1.34469 (10) obj. -49.1317 iterations 0
Cbc0038I Pass  33: suminf.    1.34469 (10) obj. -49.1317 iterations 1
Cbc0038I Pass  34: suminf.    0.60991 (2) obj. -29.5788 iterations 11
Cbc0038I Pass  35: suminf.    0.29199 (2) obj. -29.5788 iterations 1
Cbc0038I Pass  36: suminf.    0.60991 (2) obj. -29.5788 iterations 2
Cbc0038I Pass  37: suminf.    2.09859 (9) obj. -29.5788 iterations 17
Cbc0038I Pass  38: suminf.    1.93986 (8) obj. -29.5788 iterations 2
Cbc0038I Pass  39: suminf.    0.60314 (2) obj. -29.5788 iterations 8
Cbc0038I Pass  40: suminf.    0.26316 (1) obj. -30.8105 iterations 2
Cbc0038I Pass  41: suminf.    0.62304 (2) obj. -29.5788 iterations 2
Cbc0038I Pass  42: suminf.    0.41353 (2) obj. -33.8142 iterations 1
Cbc0038I Pass  43: suminf.    1.47920 (7) obj. -29.5788 iterations 10
Cbc0038I Pass  44: suminf.    1.06106 (4) obj. -29.5788 iterations 3
Cbc0038I Pass  45: suminf.    0.85637 (4) obj. -29.5788 iterations 2
Cbc0038I Pass  46: suminf.    0.46617 (2) obj. -33.9194 iterations 3
Cbc0038I Pass  47: suminf.    0.31579 (1) obj. -30.9158 iterations 1
Cbc0038I Pass  48: suminf.    0.56422 (2) obj. -29.5788 iterations 2
Cbc0038I Pass  49: suminf.    1.75553 (6) obj. -29.5788 iterations 8
Cbc0038I Pass  50: suminf.    1.75553 (6) obj. -29.5788 iterations 0
Cbc0038I Pass  51: suminf.    1.01350 (3) obj. -29.5788 iterations 6
Cbc0038I Pass  52: suminf.    0.87694 (3) obj. -31.9003 iterations 1
Cbc0038I Pass  53: suminf.    0.52370 (3) obj. -29.5788 iterations 3
Cbc0038I Pass  54: suminf.    0.52370 (3) obj. -29.5788 iterations 0
Cbc0038I Pass  55: suminf.    1.82064 (8) obj. -29.5788 iterations 7
Cbc0038I Pass  56: suminf.    1.47523 (6) obj. -36.1156 iterations 2
Cbc0038I Pass  57: suminf.    1.63809 (9) obj. -29.5788 iterations 4
Cbc0038I Pass  58: suminf.    1.63809 (9) obj. -29.5788 iterations 0
Cbc0038I Pass  59: suminf.    0.48422 (3) obj. -29.5788 iterations 8
Cbc0038I Pass  60: suminf.    0.48422 (3) obj. -29.5788 iterations 0
Cbc0038I Pass  61: suminf.    0.95468 (3) obj. -29.5788 iterations 3
Cbc0038I Rounding solution of -19.2842 is better than previous of -16.2786

Cbc0038I Before mini branch and bound, 13 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 21 rows 26 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -41.4185
Cbc0038I Reduced cost fixing fixed 1 variables on major pass 4
Cbc0038I Pass  61: suminf.    1.34469 (10) obj. -49.1317 iterations 0
Cbc0038I Pass  62: suminf.    1.34469 (10) obj. -49.1317 iterations 1
Cbc0038I Pass  63: suminf.    1.08208 (6) obj. -41.4185 iterations 13
Cbc0038I Pass  64: suminf.    0.53686 (4) obj. -42.0699 iterations 3
Cbc0038I Pass  65: suminf.    0.99160 (4) obj. -41.4185 iterations 9
Cbc0038I Pass  66: suminf.    0.99160 (4) obj. -41.4185 iterations 1
Cbc0038I Pass  67: suminf.    0.77224 (4) obj. -41.4185 iterations 2
Cbc0038I Pass  68: suminf.    0.77224 (4) obj. -41.4185 iterations 0
Cbc0038I Pass  69: suminf.    0.99160 (4) obj. -41.4185 iterations 1
Cbc0038I Pass  70: suminf.    1.33580 (8) obj. -41.4185 iterations 7
Cbc0038I Pass  71: suminf.    1.15203 (6) obj. -45.2635 iterations 3
Cbc0038I Pass  72: suminf.    1.05437 (4) obj. -41.4185 iterations 5
Cbc0038I Pass  73: suminf.    0.73060 (4) obj. -43.6849 iterations 3
Cbc0038I Pass  74: suminf.    1.29131 (8) obj. -41.4185 iterations 12
Cbc0038I Pass  75: suminf.    1.03472 (5) obj. -46.2797 iterations 4
Cbc0038I Pass  76: suminf.    0.77971 (5) obj. -41.4185 iterations 8
Cbc0038I Pass  77: suminf.    0.75583 (5) obj. -41.4185 iterations 1
Cbc0038I Pass  78: suminf.    0.89892 (5) obj. -41.4185 iterations 4
Cbc0038I Pass  79: suminf.    0.89892 (5) obj. -41.4185 iterations 0
Cbc0038I Pass  80: suminf.    0.75583 (5) obj. -41.4185 iterations 3
Cbc0038I Pass  81: suminf.    1.81839 (7) obj. -41.4185 iterations 11
Cbc0038I Pass  82: suminf.    1.81839 (7) obj. -41.4185 iterations 1
Cbc0038I Pass  83: suminf.    0.83633 (4) obj. -41.4185 iterations 5
Cbc0038I Pass  84: suminf.    0.78324 (4) obj. -41.7902 iterations 2
Cbc0038I Pass  85: suminf.    1.29183 (6) obj. -41.4185 iterations 5
Cbc0038I Pass  86: suminf.    0.97371 (5) obj. -44.5997 iterations 3
Cbc0038I Pass  87: suminf.    1.12204 (4) obj. -41.4185 iterations 4
Cbc0038I Pass  88: suminf.    0.78324 (4) obj. -43.7902 iterations 2
Cbc0038I Pass  89: suminf.    1.95860 (8) obj. -41.4185 iterations 4
Cbc0038I Pass  90: suminf.    1.66871 (7) obj. -41.4185 iterations 1
Cbc0038I Rounding solution of -23.6204 is better than previous of -19.2842

Cbc0038I Before mini branch and bound, 11 integers at bound fixed and 0 continuous
Cbc0038I Full problem 32 rows 41 columns, reduced to 21 rows 28 columns
Cbc0038I Mini branch and bound did not improve solution (0.05 seconds)
Cbc0038I Round again with cutoff of -49.7063
Cbc0038I Reduced cost fixing fixed 2 variables on major pass 5
Cbc0038I Pass  90: suminf.    1.43012 (14) obj. -49.7063 iterations 1
Cbc0038I Pass  91: suminf.    1.38708 (11) obj. -49.7063 iterations 3
Cbc0038I Pass  92: suminf.    1.08600 (6) obj. -49.7063 iterations 12
Cbc0038I Pass  93: suminf.    1.08600 (6) obj. -49.7063 iterations 0
Cbc0038I Pass  94: suminf.    1.17927 (5) obj. -49.7063 iterations 2
Cbc0038I Pass  95: suminf.    0.93447 (5) obj. -49.7063 iterations 2
Cbc0038I Pass  96: suminf.    1.17927 (5) obj. -49.7063 iterations 3
Cbc0038I Pass  97: suminf.    0.96590 (6) obj. -49.7063 iterations 8
Cbc0038I Pass  98: suminf.    0.96590 (6) obj. -49.7063 iterations 5
Cbc0038I Pass  99: suminf.    1.06037 (5) obj. -49.7063 iterations 3
Cbc0038I Pass 100: suminf.    0.87346 (5) obj. -50.8278 iterations 2
Cbc0038I Pass 101: suminf.    1.06037 (5) obj. -49.7063 iterations 2
Cbc0038I Pass 102: suminf.    2.40128 (9) obj. -49.7063 iterations 10
Cbc0038I Pass 103: suminf.    2.40128 (9) obj. -49.7063 iterations 0
Cbc0038I Pass 104: suminf.    2.00308 (7) obj. -49.7063 iterations 5
Cbc0038I Pass 105: suminf.    1.93678 (8) obj. -49.7063 iterations 3
Cbc0038I Pass 106: suminf.    2.00308 (7) obj. -49.7063 iterations 5
Cbc0038I Pass 107: suminf.    2.71858 (9) obj. -49.7063 iterations 13
Cbc0038I Pass 108: suminf.    2.71858 (9) obj. -49.7063 iterations 0
Cbc0038I Pass 109: suminf.    2.37136 (8) obj. -49.7063 iterations 4
Cbc0038I Pass 110: suminf.    2.37136 (8) obj. -49.7063 iterations 0
Cbc0038I Pass 111: suminf.    2.40357 (8) obj. -49.7063 iterations 2
Cbc0038I Pass 112: suminf.    2.40357 (8) obj. -49.7063 iterations 0
Cbc0038I Pass 113: suminf.    2.37136 (8) obj. -49.7063 iterations 2
Cbc0038I Pass 114: suminf.    2.67257 (8) obj. -49.7063 iterations 5
Cbc0038I Pass 115: suminf.    2.43472 (8) obj. -49.7063 iterations 3
Cbc0038I Pass 116: suminf.    2.29535 (8) obj. -49.7063 iterations 6
Cbc0038I Pass 117: suminf.    2.23393 (8) obj. -49.7063 iterations 1
Cbc0038I Pass 118: suminf.    2.21543 (7) obj. -49.7063 iterations 3
Cbc0038I Pass 119: suminf.    2.17110 (8) obj. -49.7063 iterations 3
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 15 integers at bound fixed and 0 continuous
Cbc0038I Mini branch and bound did not improve solution (0.06 seconds)
Cbc0038I After 0.06 seconds - Feasibility pump exiting with objective of -23.6204 - took 0.06 seconds
Cbc0012I Integer solution of -23.62045 found by feasibility pump after 0 iterations and 0 nodes (0.06 seconds)
Cbc0031I 13 added rows had average density of 5
Cbc0013I At root node, 29 cuts changed objective from -69.04455 to -23.620498 in 17 passes
Cbc0014I Cut generator 0 (Probing) - 180 row cuts average 3.2 elements, 10 column cuts (10 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 106 row cuts average 19.7 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 28 row cuts average 9.5 elements, 0 column cuts (0 active)  in 0.005 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 2 row cuts average 2.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.001 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 49 row cuts average 11.6 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is 1
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 108 row cuts average 17.8 elements, 0 column cuts (0 active)  in 0.003 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 14 row cuts average 15.9 elements, 0 column cuts (0 active)  in 0.127 seconds - new frequency is 1
Cbc0011I Exiting as integer gap of 4.7569889e-05 less than 1e-10 or 0.01%
Cbc0001I Search completed - best objective -23.62044999999999, took 220 iterations and 0 nodes (0.32 seconds)
Cbc0035I Maximum depth 0, 9 variables fixed on reduced cost
Total time (CPU seconds):       0.22   (Wallclock seconds):       0.32

